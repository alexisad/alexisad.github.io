/* Generated by the Nim Compiler v0.19.9 */
/*   (c) 2018 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI185832 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI186820 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI40050 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI186873 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI185824 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI185922 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI185918 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI185917 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI185830 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI185874 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI185814 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI185804 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI185802 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI185861 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI185806 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI185864 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI185808 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI185867 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI185810 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI185870 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI185812 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI185820 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI199202 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI199223 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI199227 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40086 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI204043 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI204018 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI204036 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI204016 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI204052 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI36026 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI214035 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI212079 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI201065 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI36032 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI209030 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI177627 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI185878 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI185816 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI36014 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI185818 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI40062 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40058 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40046 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI36006 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI52144 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI40008 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40118 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI36016 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI36040 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI36042 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI40112 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI40026 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40028 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40042 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40044 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI40044 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40044.node = NNI40044;
var NNI40042 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40042.node = NNI40042;
var NNI40028 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40028.node = NNI40028;
NTI40112.base = NTI40026;
NTI40118.base = NTI40026;
var NNI40026 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI40112, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI36042, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI36040, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI36040, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI36016, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI40118, name: "up", sons: null}]};
NTI40026.node = NNI40026;
var NNI40008 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40008.node = NNI40008;
NTI40026.base = NTI40008;
NTI40028.base = NTI40026;
NTI40042.base = NTI40028;
NTI40044.base = NTI40042;
var NNI52144 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI36042, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI36006, name: "Field1", sons: null}]};
NTI52144.node = NNI52144;
var NNI40046 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40046.node = NNI40046;
NTI40046.base = NTI40042;
var NNI40058 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40058.node = NNI40058;
NTI40058.base = NTI40028;
var NNI40062 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40062.node = NNI40062;
NTI40062.base = NTI40028;
NTI185816.base = NTI185878;
var NNI185818 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI36014, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI185816, name: "nanosecond", sons: null}]};
NTI185818.node = NNI185818;
var NNI177627 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI36040, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI36040, name: "Field1", sons: null}]};
NTI177627.node = NNI177627;
var NNI209030 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "app_id", len: 0, typ: NTI36042, name: "app_id", sons: null}, 
{kind: 1, offset: "app_code", len: 0, typ: NTI36042, name: "app_code", sons: null}, 
{kind: 1, offset: "useHTTPS", len: 0, typ: NTI36032, name: "useHTTPS", sons: null}]};
NTI209030.node = NNI209030;
var NNI201065 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI201065.node = NNI201065;
NTI201065.base = NTI40008;
NTI209030.base = NTI201065;
var NNI212079 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "tileSize", len: 0, typ: NTI36006, name: "tileSize", sons: null}, 
{kind: 1, offset: "ppi", len: 0, typ: NTI36006, name: "ppi", sons: null}, 
{kind: 1, offset: "lg", len: 0, typ: NTI36042, name: "lg", sons: null}, 
{kind: 1, offset: "lg2", len: 0, typ: NTI36042, name: "lg2", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI36042, name: "style", sons: null}, 
{kind: 1, offset: "pois", len: 0, typ: NTI36032, name: "pois", sons: null}, 
{kind: 1, offset: "crossOrigin", len: 0, typ: NTI36040, name: "crossOrigin", sons: null}]};
NTI212079.node = NNI212079;
NTI212079.base = NTI201065;
var NNI214035 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "pixelRatio", len: 0, typ: NTI36026, name: "pixelRatio", sons: null}, 
{kind: 1, offset: "noWrap", len: 0, typ: NTI36032, name: "noWrap", sons: null}]};
NTI214035.node = NNI214035;
NTI214035.base = NTI201065;
NTI204016.base = NTI204036;
NTI204018.base = NTI204043;
var NNI204052 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "lat", len: 0, typ: NTI204016, name: "lat", sons: null}, 
{kind: 1, offset: "lng", len: 0, typ: NTI204018, name: "lng", sons: null}]};
NTI204052.node = NNI204052;
NTI204052.base = NTI201065;
var NNI40086 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40086.node = NNI40086;
NTI40086.base = NTI40028;
var NNI199227 = {kind: 1, offset: "useStderr", len: 0, typ: NTI36032, name: "useStderr", sons: null};
NTI199227.node = NNI199227;
var NNI199202 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI199202, name: "lvlAll", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI199202, name: "lvlDebug", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI199202, name: "lvlInfo", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI199202, name: "lvlNotice", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI199202, name: "lvlWarn", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI199202, name: "lvlError", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI199202, name: "lvlFatal", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI199202, name: "lvlNone", len: 0, sons: null}}};
NTI199202.node = NNI199202;
var NNI199223 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "levelThreshold", len: 0, typ: NTI199202, name: "levelThreshold", sons: null}, 
{kind: 1, offset: "fmtStr", len: 0, typ: NTI36040, name: "fmtStr", sons: null}]};
NTI199223.node = NNI199223;
NTI199223.base = NTI40008;
NTI199227.base = NTI199223;
NTI185812.base = NTI185870;
NTI185810.base = NTI185867;
NTI185808.base = NTI185864;
NTI185806.base = NTI185861;
var NNI185802 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI185802, name: "January", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI185802, name: "February", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI185802, name: "March", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI185802, name: "April", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI185802, name: "May", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI185802, name: "June", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI185802, name: "July", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI185802, name: "August", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI185802, name: "September", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI185802, name: "October", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI185802, name: "November", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI185802, name: "December", len: 0, sons: null}}};
NTI185802.node = NNI185802;
var NNI185804 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI185804, name: "Monday", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI185804, name: "Tuesday", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI185804, name: "Wednesday", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI185804, name: "Thursday", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI185804, name: "Friday", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI185804, name: "Saturday", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI185804, name: "Sunday", len: 0, sons: null}}};
NTI185804.node = NNI185804;
NTI185814.base = NTI185874;
var NNI185917 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "zonedTimeFromTimeImpl", len: 0, typ: NTI185918, name: "zonedTimeFromTimeImpl", sons: null}, 
{kind: 1, offset: "zonedTimeFromAdjTimeImpl", len: 0, typ: NTI185922, name: "zonedTimeFromAdjTimeImpl", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI36040, name: "name", sons: null}]};
NTI185917.node = NNI185917;
NTI185830.base = NTI185917;
var NNI185820 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nanosecond", len: 0, typ: NTI185816, name: "nanosecond", sons: null}, 
{kind: 1, offset: "second", len: 0, typ: NTI185812, name: "second", sons: null}, 
{kind: 1, offset: "minute", len: 0, typ: NTI185810, name: "minute", sons: null}, 
{kind: 1, offset: "hour", len: 0, typ: NTI185808, name: "hour", sons: null}, 
{kind: 1, offset: "monthday", len: 0, typ: NTI185806, name: "monthday", sons: null}, 
{kind: 1, offset: "month", len: 0, typ: NTI185802, name: "month", sons: null}, 
{kind: 1, offset: "year", len: 0, typ: NTI36006, name: "year", sons: null}, 
{kind: 1, offset: "weekday", len: 0, typ: NTI185804, name: "weekday", sons: null}, 
{kind: 1, offset: "yearday", len: 0, typ: NTI185814, name: "yearday", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI36032, name: "isDst", sons: null}, 
{kind: 1, offset: "timezone", len: 0, typ: NTI185830, name: "timezone", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI36006, name: "utcOffset", sons: null}]};
NTI185820.node = NNI185820;
NTI185820.base = NTI40008;
var NNI185824 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI36014, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI185816, name: "nanosecond", sons: null}]};
NTI185824.node = NNI185824;
var NNI186873 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI185806, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI185802, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI36006, name: "Field2", sons: null}]};
NTI186873.node = NNI186873;
var NNI40050 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40050.node = NNI40050;
NTI40050.base = NTI40028;
var NNI186820 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI36006, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI36006, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI36006, name: "Field2", sons: null}]};
NTI186820.node = NNI186820;
var NNI185832 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "time", len: 0, typ: NTI185818, name: "time", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI36006, name: "utcOffset", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI36032, name: "isDst", sons: null}]};
NTI185832.node = NNI185832;

function makeNimstrLit(c_53012) {
		  var ln = c_53012.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_53012.charCodeAt(i);
  }
  return result;
  

	
}

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_54030, src_54031, ti_54032) {
	var result_54219 = null;

		switch (ti_54032.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_54001(ti_54032))) {
			result_54219 = src_54031;
			}
			else {
				result_54219 = [src_54031[0], src_54031[1]];
			}
			
			break;
		case 19:
			      if (dest_54030 === null || dest_54030 === undefined) {
        dest_54030 = {};
      }
      else {
        for (var key in dest_54030) { delete dest_54030[key]; }
      }
      for (var key in src_54031) { dest_54030[key] = src_54031[key]; }
      result_54219 = dest_54030;
    
			break;
		case 18:
		case 17:
			if (!((ti_54032.base == null))) {
			result_54219 = nimCopy(dest_54030, src_54031, ti_54032.base);
			}
			else {
			if ((ti_54032.kind == 17)) {
			result_54219 = (dest_54030 === null || dest_54030 === undefined) ? {m_type: ti_54032} : dest_54030;
			}
			else {
				result_54219 = (dest_54030 === null || dest_54030 === undefined) ? {} : dest_54030;
			}
			}
			nimCopyAux(result_54219, src_54031, ti_54032.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_54031 === null) {
        result_54219 = null;
      }
      else {
        if (dest_54030 === null || dest_54030 === undefined) {
          dest_54030 = new Array(src_54031.length);
        }
        else {
          dest_54030.length = src_54031.length;
        }
        result_54219 = dest_54030;
        for (var i = 0; i < src_54031.length; ++i) {
          result_54219[i] = nimCopy(result_54219[i], src_54031[i], ti_54032.base);
        }
      }
    
			break;
		case 28:
			      if (src_54031 !== null) {
        result_54219 = src_54031.slice(0);
      }
    
			break;
		default: 
			result_54219 = src_54031;
			break;
		}

	return result_54219;

}

function arrayConstr(len_54280, value_54281, typ_54282) {
		    var result = new Array(len_54280);
    for (var i = 0; i < len_54280; ++i) result[i] = nimCopy(null, value_54281, typ_54282);
    return result;
  

	
}

function cstrToNimstr(c_53029) {
		  var ln = c_53029.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_53029.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_53029.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function toJSStr(s_53046) {
		  if (s_53046 === null) return "";
  var len = s_53046.length;
  var asciiPart = new Array(len);
  var fcc = String.fromCharCode;
  var nonAsciiPart = null;
  var nonAsciiOffset = 0;
  for (var i = 0; i < len; ++i) {
    if (nonAsciiPart !== null) {
      var offset = (i - nonAsciiOffset) * 2;
      var code = s_53046[i].toString(16);
      if (code.length == 1) {
        code = "0"+code;
      }
      nonAsciiPart[offset] = "%";
      nonAsciiPart[offset + 1] = code;
    }
    else if (s_53046[i] < 128)
      asciiPart[i] = fcc(s_53046[i]);
    else {
      asciiPart.length = i;
      nonAsciiOffset = i;
      nonAsciiPart = new Array((len - i) * 2);
      --i;
    }
  }
  asciiPart = asciiPart.join("");
  return (nonAsciiPart === null) ?
      asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  

	
}

function raiseException(e_52618, ename_52619) {
		e_52618.name = ename_52619;
		if ((excHandler == 0)) {
		unhandledException(e_52618);
		}
		
		e_52618.trace = nimCopy(null, raw_write_stack_trace_52441(), NTI36040);
		throw e_52618;

	
}

function divInt(a_53457, b_53458) {
		    if (b_53458 == 0) raiseDivByZero();
    if (b_53458 == -1 && a_53457 == 2147483647) raiseOverflow();
    return Math.trunc(a_53457 / b_53458);
  

	
}
		var unit_weights_185992 = [1, 1000, 1000000, 1000000000, 60000000000, 3600000000000, 86400000000000, 604800000000000];

function chckIndx(i_54299, a_54300, b_54301) {
			var Tmp1;

	var result_54302 = 0;

	BeforeRet: do {
			if (!(a_54300 <= i_54299)) Tmp1 = false; else {				Tmp1 = (i_54299 <= b_54301);			}		if (Tmp1) {
		result_54302 = i_54299;
		break BeforeRet;
		}
		else {
		raiseIndexError();
		}
		
	} while (false);

	return result_54302;

}

function chckRange(i_54318, a_54319, b_54320) {
			var Tmp1;

	var result_54321 = 0;

	BeforeRet: do {
			if (!(a_54319 <= i_54318)) Tmp1 = false; else {				Tmp1 = (i_54318 <= b_54320);			}		if (Tmp1) {
		result_54321 = i_54318;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_54321;

}

function modInt(a_53475, b_53476) {
		    if (b_53476 == 0) raiseDivByZero();
    if (b_53476 == -1 && a_53475 == 2147483647) raiseOverflow();
    return Math.trunc(a_53475 % b_53476);
  

	
}

function subInt(a_53421, b_53422) {
		    var result = a_53421 - b_53422;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function addInt(a_53403, b_53404) {
		    var result = a_53403 + b_53404;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function rawEcho() {
		      var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

	
}

function eqStrings(a_53241, b_53242) {
		    if (a_53241 == b_53242) return true;
    if (a_53241 === null && b_53242.length == 0) return true;
    if (b_53242 === null && a_53241.length == 0) return true;
    if ((!a_53241) || (!b_53242)) return false;
    var alen = a_53241.length;
    if (alen != b_53242.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_53241[i] != b_53242[i]) return false;
    return true;
  

	
}

function nimBoolToStr(x_52045) {
	var result_52046 = null;

		if (x_52045) {
		result_52046 = nimCopy(null, makeNimstrLit("true"), NTI36040);
		}
		else {
			result_52046 = nimCopy(null, makeNimstrLit("false"), NTI36040);
		}
		

	return result_52046;

}

function isObj(obj_54399, subclass_54400) {
	var result_54401 = false;

	BeforeRet: do {
		var x_54402 = obj_54399;
		if ((x_54402 == subclass_54400)) {
		result_54401 = true;
		break BeforeRet;
		}
		
		L1: do {
				L2: while (true) {
				if (!!((x_54402 == subclass_54400))) break L2;
					if ((x_54402 == null)) {
					result_54401 = false;
					break BeforeRet;
					}
					
					x_54402 = x_54402.base;
				}
		} while(false);
		result_54401 = true;
		break BeforeRet;
	} while (false);

	return result_54401;

}

function mnewString(len_53063) {
		    return new Array(len_53063);
  

	
}

function addChar(x_54449, c_54450) {
		x_54449.push(c_54450);

	
}
var ConstSet2 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet3 = setConstr([65, 90]);
		var days_until_month_leap_186949 = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];
			var days_until_month_186933 = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];
							var level_names_199211 = [makeNimstrLit("DEBUG"), makeNimstrLit("DEBUG"), makeNimstrLit("INFO"), makeNimstrLit("NOTICE"), makeNimstrLit("WARN"), makeNimstrLit("ERROR"), makeNimstrLit("FATAL"), makeNimstrLit("NONE")];
var nimvm_43589 = false;
var nim_program_result = 0;
var global_raise_hook_50218 = [null];
var local_raise_hook_50223 = [null];
var out_of_mem_hook_50226 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var utc_instance_188831 = [null];
var local_instance_188832 = [null];

function is_fat_pointer_54001(ti_54003) {
	var result_54004 = false;

	BeforeRet: do {
		result_54004 = !((ConstSet1[ti_54003.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_54004;

}

function nimCopyAux(dest_54035, src_54036, n_54038) {
		switch (n_54038.kind) {
		case 0:
			break;
		case 1:
			      dest_54035[n_54038.offset] = nimCopy(dest_54035[n_54038.offset], src_54036[n_54038.offset], n_54038.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_54038.sons.length; i++) {
      nimCopyAux(dest_54035, src_54036, n_54038.sons[i]);
    }
    
			break;
		case 3:
			      dest_54035[n_54038.offset] = nimCopy(dest_54035[n_54038.offset], src_54036[n_54038.offset], n_54038.typ);
      for (var i = 0; i < n_54038.sons.length; ++i) {
        nimCopyAux(dest_54035, src_54036, n_54038.sons[i][1]);
      }
    
			break;
		}

	
}

function add_50238(x_50241, x_50241_Idx, y_50242) {
		      if (x_50241[x_50241_Idx] === null) { x_50241[x_50241_Idx] = []; }
      var off = x_50241[x_50241_Idx].length;
      x_50241[x_50241_Idx].length += y_50242.length;
      for (var i = 0; i < y_50242.length; ++i) {
        x_50241[x_50241_Idx][off+i] = y_50242.charCodeAt(i);
      }
    

	
}

function aux_write_stack_trace_52139(f_52141) {
					var Tmp3;

	var result_52142 = [null];

		var it_52150 = f_52141;
		var i_52152 = 0;
		var total_52154 = 0;
		var temp_frames_52161 = arrayConstr(64, {Field0: null, Field1: 0}, NTI52144);
		L1: do {
				L2: while (true) {
					if (!!((it_52150 == null))) Tmp3 = false; else {						Tmp3 = (i_52152 <= 63);					}				if (!Tmp3) break L2;
					temp_frames_52161[i_52152].Field0 = it_52150.procname;
					temp_frames_52161[i_52152].Field1 = it_52150.line;
					i_52152 += 1;
					total_52154 += 1;
					it_52150 = it_52150.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_52150 == null))) break L5;
					total_52154 += 1;
					it_52150 = it_52150.prev;
				}
		} while(false);
		result_52142[0] = nimCopy(null, [], NTI36040);
		if (!((total_52154 == i_52152))) {
		if (result_52142[0] != null) { result_52142[0] = (result_52142[0]).concat(makeNimstrLit("(")); } else { result_52142[0] = makeNimstrLit("("); };
		if (result_52142[0] != null) { result_52142[0] = (result_52142[0]).concat(cstrToNimstr(((total_52154 - i_52152))+"")); } else { result_52142[0] = cstrToNimstr(((total_52154 - i_52152))+"").slice(); };
		if (result_52142[0] != null) { result_52142[0] = (result_52142[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_52142[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
		}
		
		L6: do {
			var j_52424 = 0;
			var colontmp__198618 = 0;
			colontmp__198618 = (i_52152 - 1);
			var res_198624 = colontmp__198618;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_198624)) break L8;
						j_52424 = res_198624;
						add_50238(result_52142, 0, temp_frames_52161[j_52424].Field0);
						if ((0 < temp_frames_52161[j_52424].Field1)) {
						if (result_52142[0] != null) { result_52142[0] = (result_52142[0]).concat(makeNimstrLit(", line: ")); } else { result_52142[0] = makeNimstrLit(", line: "); };
						if (result_52142[0] != null) { result_52142[0] = (result_52142[0]).concat(cstrToNimstr((temp_frames_52161[j_52424].Field1)+"")); } else { result_52142[0] = cstrToNimstr((temp_frames_52161[j_52424].Field1)+"").slice(); };
						}
						
						if (result_52142[0] != null) { result_52142[0] = (result_52142[0]).concat(makeNimstrLit("\x0A")); } else { result_52142[0] = makeNimstrLit("\x0A"); };
						res_198624 -= 1;
					}
			} while(false);
		} while(false);

	return result_52142[0];

}

function raw_write_stack_trace_52441() {
	var result_52443 = null;

		if (!((framePtr == null))) {
		result_52443 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A") || []).concat(aux_write_stack_trace_52139(framePtr) || []), NTI36040);
		}
		else {
			result_52443 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI36040);
		}
		

	return result_52443;

}

function unhandledException(e_52505) {
		var buf_52506 = [[]];
		if (!(((e_52505.message != null ? e_52505.message.length : 0) == 0))) {
		if (buf_52506[0] != null) { buf_52506[0] = (buf_52506[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_52506[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_52506[0] != null) { buf_52506[0] = (buf_52506[0]).concat(e_52505.message); } else { buf_52506[0] = e_52505.message.slice(); };
		}
		else {
		if (buf_52506[0] != null) { buf_52506[0] = (buf_52506[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_52506[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_52506[0] != null) { buf_52506[0] = (buf_52506[0]).concat(makeNimstrLit(" [")); } else { buf_52506[0] = makeNimstrLit(" ["); };
		add_50238(buf_52506, 0, e_52505.name);
		if (buf_52506[0] != null) { buf_52506[0] = (buf_52506[0]).concat(makeNimstrLit("]\x0A")); } else { buf_52506[0] = makeNimstrLit("]\x0A"); };
		if (buf_52506[0] != null) { buf_52506[0] = (buf_52506[0]).concat(raw_write_stack_trace_52441()); } else { buf_52506[0] = raw_write_stack_trace_52441().slice(); };
		var cbuf_52601 = toJSStr(buf_52506[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_52601);
  }
  else {
    throw cbuf_52601;
  }
  

	
}

function raiseDivByZero() {
		var e_52887 = null;
		e_52887 = {m_type: NTI40044, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_52887.message = nimCopy(null, makeNimstrLit("division by zero"), NTI36040);
		e_52887.parent = null;
		raiseException(e_52887, "DivByZeroError");

	
}

function raiseOverflow() {
		var e_52859 = null;
		e_52859 = {m_type: NTI40046, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_52859.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI36040);
		e_52859.parent = null;
		raiseException(e_52859, "OverflowError");

	
}

function raiseIndexError() {
		var e_52943 = null;
		e_52943 = {m_type: NTI40058, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_52943.message = nimCopy(null, makeNimstrLit("index out of bounds"), NTI36040);
		e_52943.parent = null;
		raiseException(e_52943, "IndexError");

	
}

function raiseRangeError() {
		var e_52915 = null;
		e_52915 = {m_type: NTI40062, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_52915.message = nimCopy(null, makeNimstrLit("value out of range"), NTI36040);
		e_52915.parent = null;
		raiseException(e_52915, "RangeError");

	
}

function HEX2A_185401(a_185403, b_185404) {
	var result_185405 = 0;

	var F={procname:"times.*",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		F.line = 139;
		result_185405 = (a_185403 * b_185404);
	framePtr = F.prev;

	return result_185405;

}

function convert_186421(unit_from_186425, unit_to_186427, quantity_186429) {
		var Tmp1;

	var result_186430 = 0;

	var F={procname:"convert.convert",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		F.line = 325;
		if ((unit_from_186425 < unit_to_186427)) {
		Tmp1 = chckRange(divInt(quantity_186429, divInt(unit_weights_185992[chckIndx(unit_to_186427, 0, unit_weights_185992.length+0-1)-0], unit_weights_185992[chckIndx(unit_from_186425, 0, unit_weights_185992.length+0-1)-0])), -2147483648, 2147483647);
		}
		else {
		Tmp1 = chckRange(HEX2A_185401(divInt(unit_weights_185992[chckIndx(unit_from_186425, 0, unit_weights_185992.length+0-1)-0], unit_weights_185992[chckIndx(unit_to_186427, 0, unit_weights_185992.length+0-1)-0]), quantity_186429), -2147483648, 2147483647);
		}
		
		result_186430 = Tmp1;
	framePtr = F.prev;

	return result_186430;

}

function init_time_186060(unix_186062, nanosecond_186063) {
	var result_187986 = {seconds: 0, nanosecond: 0};

	var F={procname:"times.initTime",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		F.line = 698;
		result_187986.seconds = unix_186062;
		F.line = 699;
		result_187986.nanosecond = nanosecond_186063;
	framePtr = F.prev;

	return result_187986;

}

function get_time_188960() {
	var result_188962 = {seconds: 0, nanosecond: 0};

	var F={procname:"times.getTime",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		F.line = 1058;
		var millis_189001 = new Date().getTime();
		F.line = 1059;
		var seconds_189012 = convert_186421(2, 3, millis_189001);
		F.line = 1060;
		var nanos_189034 = convert_186421(2, 0, modInt(millis_189001, convert_186421(3, 2, 1)));
		F.line = 1062;
		nimCopy(result_188962, init_time_186060(seconds_189012, chckRange(nanos_189034, 0, 999999999)), NTI185818);
	framePtr = F.prev;

	return result_188962;

}
var start_198431 = [get_time_188960()];
var level_199401 = [0];
var handlers_199403 = [null];
var console_202110 = function(){return window.console;}();

function HEX2F_56242(x_56244, y_56245) {
	var result_56246 = 0.0;

	var F={procname:"system./",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\system.nim",line:0};
	framePtr = F;
		F.line = 3648;
		result_56246 = (x_56244 / y_56245);
	framePtr = F.prev;

	return result_56246;

}

function isPointInPolygon(test_point_213070, polyg_points_213072) {
							var Tmp4;
							var Tmp5;
								var Tmp6;

	var result_213073 = false;

	var F={procname:"math.isPointInPolygon",prev:framePtr,filename:"H\\math.nim",line:0};
	framePtr = F;
		F.line = 12;
		result_213073 = false;
		F.line = 13;
		var j_213081 = (polyg_points_213072 != null ? (polyg_points_213072.length-1) : -1);
		L1: do {
			F.line = 14;
			var i_213125 = 0;
			F.line = 14;
			var p_213126 = null;
			F.line = 2357;
			var i_213147 = 0;
			L2: do {
				F.line = 2358;
					L3: while (true) {
					if (!(i_213147 < (polyg_points_213072 != null ? polyg_points_213072.length : 0))) break L3;
						F.line = 14;
						i_213125 = i_213147;
						F.line = 2359;
						p_213126 = polyg_points_213072[chckIndx(i_213147, 0, polyg_points_213072.length+0-1)-0];
						F.line = 15;
						var l_p_213127 = polyg_points_213072[chckIndx(j_213081, 0, polyg_points_213072.length+0-1)-0];
							if (!(p_213126.y < test_point_213070.y)) Tmp5 = false; else {								Tmp5 = (test_point_213070.y <= l_p_213127.y);							}							if (Tmp5) Tmp4 = true; else {								if (!(l_p_213127.y < test_point_213070.y)) Tmp6 = false; else {									Tmp6 = (test_point_213070.y <= p_213126.y);								}								Tmp4 = Tmp6;							}						if (Tmp4) {
						if (((p_213126.x + (HEX2F_56242(subInt(test_point_213070.y, p_213126.y), subInt(l_p_213127.y, p_213126.y)) * subInt(l_p_213127.x, p_213126.x))) < test_point_213070.x)) {
						F.line = 18;
						result_213073 = !(result_213073);
						}
						
						}
						
						F.line = 19;
						j_213081 = i_213125;
						F.line = 2360;
						i_213147 = addInt(i_213147, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_213073;

}

function HEX3Aanonymous_217067(x_217069) {
	var F={procname:"hmapjs.:anonymous",prev:framePtr,filename:"hmapjs.nim",line:0};
	framePtr = F;
	framePtr = F.prev;

	
}
var prc_clbk_217083 = HEX3Aanonymous_217067;

function send_request_217097(meth_217099, url_217100, body_217101, headers_217104, handler_217105) {

		function HEX3Aanonymous_217110() {
			var F={procname:"sendRequest.:anonymous",prev:framePtr,filename:"hmapjs.nim",line:0};
			framePtr = F;
				F.line = 32;
				handler_217105({Field0: cstrToNimstr(o_req_217106.statusText), Field1: cstrToNimstr(o_req_217106.responseText)});
			framePtr = F.prev;

			
		}

	var F={procname:"hmapjs.sendRequest",prev:framePtr,filename:"hmapjs.nim",line:0};
	framePtr = F;
		F.line = 28;
		var o_req_217106 = function(){return (window.XMLHttpRequest)?new XMLHttpRequest():new ActiveXObject('Microsoft.XMLHTTP')}();
		F.line = 29;
		var req_listener_217109 = null;
		F.line = 30;
		req_listener_217109 = HEX3Aanonymous_217110;
		F.line = 34;
		o_req_217106.responseType;
		F.line = 35;
		o_req_217106.addEventListener("load", req_listener_217109);
		F.line = 36;
		o_req_217106.open(toJSStr(meth_217099), toJSStr(url_217100));
		F.line = 37;
		rawEcho(url_217100);
		L1: do {
			F.line = 38;
			var h_217136 = {Field0: null, Field1: null};
			F.line = 2284;
			var i_217226 = 0;
			L2: do {
				F.line = 2285;
					L3: while (true) {
					if (!(i_217226 < (headers_217104 != null ? headers_217104.length : 0))) break L3;
						F.line = 38;
						nimCopy(h_217136, headers_217104[chckIndx(i_217226, 0, headers_217104.length+0-1)-0], NTI177627);
						F.line = 39;
						o_req_217106.setRequestHeader(toJSStr(h_217136["Field0"]), toJSStr(h_217136["Field1"]));
						F.line = 2287;
						i_217226 = addInt(i_217226, 1);
					}
			} while(false);
		} while(false);
		if (eqStrings(body_217101, [])) {
		F.line = 41;
		o_req_217106.send();
		}
		else {
			F.line = 43;
		o_req_217106.send(toJSStr(body_217101));
		}
		
	framePtr = F.prev;

	
}
var Tmp2;
var Tmp3;
var o_req_217152 = function(){return (window.XMLHttpRequest)?new XMLHttpRequest():new ActiveXObject('Microsoft.XMLHTTP')}();
send_request_217097(makeNimstrLit("GET"), makeNimstrLit("http://geocoder.cit.api.here.com/6.2/geocode.json?gen=8&jsonattributes=1&language=en-US&maxresults=20&searchtext=63452%20Hanau&app_id=B9HdzGHpSbzd1cMCwu35&app_code=JyMgVnftz3XdUrwM4edFwQ"), [], [], prc_clbk_217083);
var opts_217157 = {app_id: "NRQTf9fPQwBbKMe5uh1O", app_code: "1hNS1cEpObup1p1AKfxSyw", useHTTPS: true, m_type: NTI209030};
var pixel_ratio_217158 = window.devicePixelRatio;
var hidpi_217159 = (1.0000000000000000e+000 < pixel_ratio_217158);
if (hidpi_217159) {
Tmp2 = 512;
}
else {
Tmp2 = 256;
}

var layer_opts_217162 = [{tileSize: Tmp2, pois: true, m_type: NTI212079, ppi: 0, lg: null, lg2: null, style: null, crossOrigin: null}];
if (hidpi_217159) {
layer_opts_217162[0].ppi = 320;
}

var platform_217164 = function(o){return new H.service.Platform(o)}(opts_217157);
var def_layers_217165 = platform_217164.createDefaultLayers(layer_opts_217162[0]);
if (hidpi_217159) {
Tmp3 = 2;
}
else {
Tmp3 = 1;
}

var map_opts_217168 = [{pixelRatio: Tmp3, noWrap: true, m_type: NTI214035}];
var map = function(element, baseLayer, opt_options){return new H.Map(element, baseLayer, opt_options)}(document.getElementById("map"), def_layers_217165.normal.map, map_opts_217168[0]);
var map_evts_217180 = function(map){return new H.mapevents.MapEvents(map)}(map);
var behavior = function(mapE){return new H.mapevents.Behavior(mapE)}(map_evts_217180);
var ui_def_217182 = [function(map, mapTypes){return H.ui.UI.createDefault(map, mapTypes);}(map, def_layers_217165)];
map.setZoom(3, true);
var group_217183 = [function(){return new H.map.Group()}()];
map.addObject(group_217183[0]);
var mrk_217193 = function(position){return new H.map.Marker(position)}({lat: 52, lng: 8, m_type: NTI204052});
var p_217196 = {lat: 34, lng: 123, m_type: NTI204052};
var scr_point_217197 = function(x,y){return new H.math.Point(x, y)}(1, 1);
var check_217200 = isPointInPolygon(scr_point_217197, [function(x,y){return new H.math.Point(x, y)}(0, 0), function(x,y){return new H.math.Point(x, y)}(0, 3), function(x,y){return new H.math.Point(x, y)}(3, 3)]);
rawEcho(makeNimstrLit("check: "), nimBoolToStr(check_217200));
var cle_217204 = platform_217164.getCustomLocationService();

function add_new_fence_217228(layer_id_217230, fnc_n_217231, wkt_217233) {

		function HEX3Aanonymous_217234(e_217236) {
			var F={procname:"addNewFence.:anonymous",prev:framePtr,filename:"hmapjs.nim",line:0};
			framePtr = F;
				F.line = 121;
				console_202110.log("cle err: ", e_217236);
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_217272(tbl_217274) {

				function HEX3Aanonymous_217320(r_217323) {
					var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"hmapjs.nim",line:0};
					framePtr = F;
					framePtr = F.prev;

					
				}

			var F={procname:"addNewFence.:anonymous",prev:framePtr,filename:"hmapjs.nim",line:0};
			framePtr = F;
				F.line = 124;
				var n_row_217275 = tbl_217274.addRow();
				F.line = 125;
				n_row_217275.setCell("ZUSATZ", fnc_n_217231);
				F.line = 126;
				n_row_217275.setCell("IS_FENCE", "true");
				F.line = 127;
				var points_217296 = wkt_217233.getGeometry().getExterior();
				F.line = 128;
				var firstpoint_217297 = points_217296.extractPoint(0);
				F.line = 129;
				points_217296.pushPoint(firstpoint_217297);
				F.line = 130;
				n_row_217275.setCell("WKT", function(ln){return new H.geo.Polygon(ln);}(points_217296));
				F.line = 131;
				console_202110.log("new Row:: ", n_row_217275);
				F.line = 132;
				var r_app_217337 = HEX3Aanonymous_217320;
				F.line = 135;
				var cncl_upd_217350 = cle_217204.appendRows([n_row_217275], r_app_217337, on_err_cle_217271);
			framePtr = F.prev;

			
		}

	var F={procname:"hmapjs.addNewFence",prev:framePtr,filename:"hmapjs.nim",line:0};
	framePtr = F;
		F.line = 119;
		var on_err_cle_217271 = HEX3Aanonymous_217234;
		F.line = 122;
		var on_res_cle_217364 = HEX3Aanonymous_217272;
		F.line = 136;
		var cnc_217365 = cle_217204.getLayer("63179_1", on_res_cle_217364, on_err_cle_217271);
	framePtr = F.prev;

	
}

function update_fence_217379(fnc_n_217381, wkt_217383) {

		function HEX3Aanonymous_217384(e_217386) {
			var F={procname:"updateFence.:anonymous",prev:framePtr,filename:"hmapjs.nim",line:0};
			framePtr = F;
				F.line = 141;
				console_202110.log("cle err: ", e_217386);
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_217413(r_217416) {
					var Tmp1;

				function HEX3Aanonymous_217449(r_217452) {
					var F={procname:":anonymous.:anonymous",prev:framePtr,filename:"hmapjs.nim",line:0};
					framePtr = F;
					framePtr = F.prev;

					
				}

			var F={procname:"updateFence.:anonymous",prev:framePtr,filename:"hmapjs.nim",line:0};
			framePtr = F;
			BeforeRet: do {
				if (((r_217416 != null ? r_217416.length : 0) == 0)) {
				F.line = 145;
				add_new_fence_217228(makeNimstrLit("63179_1"), fnc_n_217381, wkt_217383);
				F.line = 146;
				break BeforeRet;
				}
				
				F.line = 147;
				var row_217423 = r_217416[chckIndx(0, 0, r_217416.length+0-1)-0];
				F.line = 148;
				var points_217424 = wkt_217383.getGeometry().getExterior();
				F.line = 149;
				var firstpoint_217425 = points_217424.extractPoint(0);
				F.line = 150;
				var lastpoint_217426 = points_217424.extractPoint(chckRange(subInt(points_217424.getPointCount(), 1), 0, 2147483647));
					if (!((firstpoint_217425.lat == lastpoint_217426.lat))) Tmp1 = true; else {						Tmp1 = !((firstpoint_217425.lng == lastpoint_217426.lng));					}				if (Tmp1) {
				F.line = 152;
				points_217424.pushPoint(firstpoint_217425);
				}
				
				F.line = 153;
				console_202110.log("WKT geometry:: ", points_217424);
				F.line = 154;
				row_217423.setCell("WKT", function(ln){return new H.geo.Polygon(ln);}(points_217424));
				F.line = 155;
				var r_upd_217466 = HEX3Aanonymous_217449;
				F.line = 158;
				var cncl_upd_217479 = cle_217204.updateRows([row_217423], r_upd_217466, on_err_cle_217412);
			} while (false);
			framePtr = F.prev;

			
		}

	var F={procname:"hmapjs.updateFence",prev:framePtr,filename:"hmapjs.nim",line:0};
	framePtr = F;
		F.line = 139;
		var on_err_cle_217412 = HEX3Aanonymous_217384;
		F.line = 142;
		var on_res_cle_217493 = HEX3Aanonymous_217413;
		F.line = 159;
		var filter_217494 = function(f){return {filter: f};}(toJSStr((makeNimstrLit("ZUSATZ === \'") || []).concat(cstrToNimstr(fnc_n_217381) || [],makeNimstrLit("\'") || [])));
		F.line = 161;
		console_202110.log(makeNimstrLit("filter: "), filter_217494);
		F.line = 162;
		var cle_cancle_217507 = cle_217204.searchAll("63179_1", on_res_cle_217493, on_err_cle_217412, filter_217494);
	framePtr = F.prev;

	
}

function clbck_pl_set_217521(o_217523, number_217524, grp_217525) {
			var Tmp1;

		function HEX3Aanonymous_217572(lat_217574, lng_217575, alt_217576, idx_217577) {
			var F={procname:"clbckPlSet.:anonymous",prev:framePtr,filename:"hmapjs.nim",line:0};
			framePtr = F;
				F.line = 175;
				if (set_lat_lng_217571 != null) { set_lat_lng_217571.push(map.geoToScreen(function(lat, lng, opt_alt){return new H.geo.Point(lat, lng, opt_alt);}(lat_217574, lng_217575, alt_217576))); } else { set_lat_lng_217571 = [map.geoToScreen(function(lat, lng, opt_alt){return new H.geo.Point(lat, lng, opt_alt);}(lat_217574, lng_217575, alt_217576))]; };
				F.line = 176;
				console_202110.log("lat lng: ", lat_217574, lng_217575, alt_217576);
			framePtr = F.prev;

			
		}

		function HEX3Aanonymous_217615(o_217617, number_217618, grp_217619) {
			var F={procname:"clbckPlSet.:anonymous",prev:framePtr,filename:"hmapjs.nim",line:0};
			framePtr = F;
				if (isPointInPolygon(map.geoToScreen(o_217617.getPosition()), set_lat_lng_217571)) {
				F.line = 180;
				console_202110.log("hurray!!! ");
				}
				
			framePtr = F.prev;

			
		}

	var F={procname:"hmapjs.clbckPlSet",prev:framePtr,filename:"hmapjs.nim",line:0};
	framePtr = F;
		F.line = 166;
		var d_obj_p_217532 = function(dObj){return dObj;}(o_217523.getData());
			if (!!((d_obj_p_217532 == null))) Tmp1 = false; else {				Tmp1 = !((d_obj_p_217532.polygon == null));			}		if (Tmp1) {
		F.line = 168;
		console_202110.log("plSet::> ", d_obj_p_217532, d_obj_p_217532.polygon.getGeometry().toString());
		F.line = 169;
		update_fence_217379(d_obj_p_217532.name, d_obj_p_217532.polygon);
		F.line = 170;
		var line_node_set_217568 = d_obj_p_217532.polygon.getGeometry().getExterior();
		F.line = 171;
		var set_lat_lng_217571 = null;
		F.line = 172;
		line_node_set_217568.eachLatLngAlt(HEX3Aanonymous_217572);
		F.line = 178;
		var clbck_addr_set_217650 = HEX3Aanonymous_217615;
		F.line = 181;
		group_217183[0].forEach(clbck_addr_set_217650, false);
		}
		
	framePtr = F.prev;

	
}

function HEX5BHEX5D_217862(s_217869, x_217872) {
	var result_217874 = null;

	var F={procname:"[].[]",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\system.nim",line:0};
	framePtr = F;
		F.line = 3758;
		var a_218001 = x_217872.a;
		F.line = 3759;
		var l_218207 = addInt(subInt(subInt((s_217869 != null ? s_217869.length : 0), x_217872.b), a_218001), 1);
		F.line = 3760;
		result_217874 = new Array(chckRange(l_218207, 0, 2147483647)); for (var i=0;i<chckRange(l_218207, 0, 2147483647);++i) {result_217874[i]=0.0;}		L1: do {
			F.line = 3761;
			var i_218227 = 0;
			F.line = 3669;
			var i_218359 = 0;
			L2: do {
				F.line = 3670;
					L3: while (true) {
					if (!(i_218359 < l_218207)) break L3;
						F.line = 3761;
						i_218227 = i_218359;
						F.line = 3761;
						result_217874[chckIndx(i_218227, 0, result_217874.length+0-1)-0] = s_217869[chckIndx(addInt(i_218227, a_218001), 0, s_217869.length+0-1)-0];
						F.line = 3672;
						i_218359 = addInt(i_218359, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_217874;

}

function HEX2EHEX2E_128053(a_128058, b_128060) {
	var result_128068 = {a: 0, b: 0};

	var F={procname:".....",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\system.nim",line:0};
	framePtr = F;
		F.line = 394;
		result_128068.a = a_128058;
		F.line = 395;
		result_128068.b = b_128060;
	framePtr = F.prev;

	return result_128068;

}

function HEX3Aanonymous_217685() {
	var F={procname:"hmapjs.:anonymous",prev:framePtr,filename:"hmapjs.nim",line:0};
	framePtr = F;
		F.line = 185;
		var x_217688 = 0;
		F.line = 186;
		console_202110.log("!!!!!!!!!!!!!!!!!!");
		F.line = 187;
		ed_tool_217684[0].plSet.forEach(clbck_pl_set_217521, true);
	framePtr = F.prev;

	
}

function HEX3Aanonymous_217741() {
	var F={procname:"hmapjs.:anonymous",prev:framePtr,filename:"hmapjs.nim",line:0};
	framePtr = F;
		F.line = 190;
		var x_217744 = 0;
		F.line = 191;
		console_202110.log("?????????");
	framePtr = F.prev;

	
}

function HEX3Aanonymous_217769(r_217772) {
	var F={procname:"hmapjs.:anonymous",prev:framePtr,filename:"hmapjs.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 197;
			var p_217810 = null;
			F.line = 2284;
			var i_218353 = 0;
			L2: do {
				F.line = 2285;
					L3: while (true) {
					if (!(i_218353 < (r_217772 != null ? r_217772.length : 0))) break L3;
						F.line = 197;
						p_217810 = r_217772[chckIndx(i_218353, 0, r_217772.length+0-1)-0];
						F.line = 198;
						console_202110.log("cle r: ", "+", function(o){console.log('+++++:: ', o);return o;}(p_217810.getCell("IS_FENCE")), "+");
						if (!((function(o){console.log('+++++:: ', o);return o;}(p_217810.getCell("IS_FENCE")) == "true"))) {
						F.line = 200;
						var c_217825 = function(o){return o;}(p_217810.getCell("WKT"));
						F.line = 201;
						var mrk_217826 = function(position){return new H.map.Marker(position)}(c_217825);
						group_217183[0].addObject(mrk_217826);
						}
						else {
							F.line = 204;
							var cextr_217835 = function(o){return o;}(p_217810.getCell("WKT")).getExterior();
							F.line = 205;
							var arr_cextr_218243 = HEX5BHEX5D_217862(cextr_217835.getLatLngAltArray(), HEX2EHEX2E_128053(0, 4));
							F.line = 206;
							var pl_218244 = function(ls){return new H.map.Polyline(ls)}(function(opt_latLngAlts){return new H.geo.LineString(opt_latLngAlts);}(arr_cextr_218243));
							pl_218244.setZIndex(99);
							F.line = 208;
							console_202110.log("loaded Polygon:: ", arr_cextr_218243);
							F.line = 209;
							ed_tool_217684[0].loadPolyline(pl_218244, function(o){console.log('+++++:: ', o);return o;}(p_217810.getCell("ZUSATZ")));
						}
						
						F.line = 2287;
						i_218353 = addInt(i_218353, 1);
					}
			} while(false);
		} while(false);
		map.setViewBounds(group_217183[0].getBounds());
	framePtr = F.prev;

	
}

function HEX3Aanonymous_218272(e_218274) {
	var F={procname:"hmapjs.:anonymous",prev:framePtr,filename:"hmapjs.nim",line:0};
	framePtr = F;
		F.line = 215;
		console_202110.log("cle err: ", e_218274);
	framePtr = F.prev;

	
}
var ed_tool_217684 = [function(){return initEditTool();}()];
ed_tool_217684[0].onUpdate(HEX3Aanonymous_217685);
ed_tool_217684[0].onUpdate(HEX3Aanonymous_217741);
var on_res_cle_218271 = HEX3Aanonymous_217769;
var on_err_cle_218300 = HEX3Aanonymous_218272;
var cle_cancle_218301 = cle_217204.searchAll("63179_1", on_res_cle_218271, on_err_cle_218300);
console_202110.log("editTool.plSet:: ", ed_tool_217684[0].plSet);
console_202110.log("Pixel:: ", pixel_ratio_217158);
console_202110.log("Platform: ", platform_217164);
console_202110.log("uiDef:: ", ui_def_217182[0], ui_def_217182[0].getMap());
console_202110.log("Layers:: ", layer_opts_217162[0], def_layers_217165.normal.map);

function sys_fatal_53779(message_53785) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\system.nim",line:0};
	framePtr = F;
		F.line = 2966;
		var e_53787 = null;
		F.line = 2967;
		e_53787 = {m_type: NTI40086, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 2968;
		e_53787.message = nimCopy(null, message_53785, NTI36040);
		F.line = 2969;
		raiseException(e_53787, "NilAccessError");
	framePtr = F.prev;

	
}

function chckNilDisp(p_53776, p_53776_Idx) {
		if ((p_53776 == null && p_53776_Idx == 0)) {
		sys_fatal_53779(makeNimstrLit("cannot dispatch; dispatcher is nil"));
		}
		

	
}

function nsuToLowerAsciiChar(c_172157) {
	var result_172158 = 0;

	var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\strutils.nim",line:0};
	framePtr = F;
		if ((ConstSet3[c_172157] != undefined)) {
		F.line = 265;
		result_172158 = chckRange(addInt(c_172157, 32), 0, 255);
		}
		else {
			F.line = 267;
			result_172158 = c_172157;
		}
		
	framePtr = F.prev;

	return result_172158;

}

function HEX2B_185437(a_185439, b_185440) {
	var result_185441 = 0;

	var F={procname:"times.+",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		F.line = 143;
		result_185441 = (a_185439 + b_185440);
	framePtr = F.prev;

	return result_185441;

}

function convert_186096(unit_from_186100, unit_to_186102, quantity_186104) {
		var Tmp1;

	var result_186105 = 0;

	var F={procname:"convert.convert",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		F.line = 325;
		if ((unit_from_186100 < unit_to_186102)) {
		Tmp1 = divInt(quantity_186104, divInt(unit_weights_185992[chckIndx(unit_to_186102, 0, unit_weights_185992.length+0-1)-0], unit_weights_185992[chckIndx(unit_from_186100, 0, unit_weights_185992.length+0-1)-0]));
		}
		else {
		Tmp1 = HEX2A_185401(divInt(unit_weights_185992[chckIndx(unit_from_186100, 0, unit_weights_185992.length+0-1)-0], unit_weights_185992[chckIndx(unit_to_186102, 0, unit_weights_185992.length+0-1)-0]), quantity_186104);
		}
		
		result_186105 = Tmp1;
	framePtr = F.prev;

	return result_186105;

}

function normalize_188042(seconds_188046, nanoseconds_188048) {
	var result_188049 = {seconds: 0, nanosecond: 0};

	var F={procname:"normalize.normalize",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		F.line = 339;
		result_188049.seconds = HEX2B_185437(seconds_188046, convert_186096(0, 3, nanoseconds_188048));
		F.line = 340;
		var nanosecond_188071 = modInt(nanoseconds_188048, convert_186421(3, 0, 1));
		if ((nanosecond_188071 < 0)) {
		F.line = 342;
		nanosecond_188071 = addInt(nanosecond_188071, convert_186421(3, 0, 1));
		F.line = 343;
		result_188049.seconds = subInt(result_188049.seconds, 1);
		}
		
		F.line = 344;
		result_188049.nanosecond = chckRange(chckRange(nanosecond_188071, -2147483648, 2147483647), 0, 999999999);
	framePtr = F.prev;

	return result_188049;

}

function HEX2D_185473(a_185475, b_185476) {
	var result_185477 = 0;

	var F={procname:"times.-",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		F.line = 147;
		result_185477 = (a_185475 - b_185476);
	framePtr = F.prev;

	return result_185477;

}

function HEX2D_185491(a_185493, b_185494) {
	var result_185495 = 0;

	var F={procname:"times.-",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		F.line = 149;
		result_185495 = (a_185493 - b_185494);
	framePtr = F.prev;

	return result_185495;

}

function ntSubTime(a_188129, b_188130) {
	var result_188131 = {seconds: 0, nanosecond: 0};

	var F={procname:"times.-",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		F.line = 712;
		nimCopy(result_188131, normalize_188042(HEX2D_185473(a_188129.seconds, b_188130.seconds), HEX2D_185491(a_188129.nanosecond, b_188130.nanosecond)), NTI185818);
	framePtr = F.prev;

	return result_188131;

}

function normalize_187210(seconds_187214, nanoseconds_187216) {
	var result_187217 = {seconds: 0, nanosecond: 0};

	var F={procname:"normalize.normalize",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		F.line = 339;
		result_187217.seconds = HEX2B_185437(seconds_187214, convert_186096(0, 3, nanoseconds_187216));
		F.line = 340;
		var nanosecond_187239 = modInt(nanoseconds_187216, convert_186421(3, 0, 1));
		if ((nanosecond_187239 < 0)) {
		F.line = 342;
		nanosecond_187239 = addInt(nanosecond_187239, convert_186421(3, 0, 1));
		F.line = 343;
		result_187217.seconds = subInt(result_187217.seconds, 1);
		}
		
		F.line = 344;
		result_187217.nanosecond = chckRange(chckRange(nanosecond_187239, -2147483648, 2147483647), 0, 999999999);
	framePtr = F.prev;

	return result_187217;

}

function init_duration_186064(nanoseconds_186066, microseconds_186067, milliseconds_186068, seconds_186069, minutes_186070, hours_186071, days_186072, weeks_186073) {
	var result_187100 = {seconds: 0, nanosecond: 0};

	var F={procname:"times.initDuration",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		F.line = 541;
		var seconds_187181 = HEX2B_185437(HEX2B_185437(HEX2B_185437(HEX2B_185437(HEX2B_185437(HEX2B_185437(HEX2B_185437(convert_186096(7, 3, weeks_186073), convert_186096(6, 3, days_186072)), convert_186096(4, 3, minutes_186070)), convert_186096(5, 3, hours_186071)), convert_186096(3, 3, seconds_186069)), convert_186096(2, 3, milliseconds_186068)), convert_186096(1, 3, microseconds_186067)), convert_186096(0, 3, nanoseconds_186066));
		F.line = 549;
		var nanoseconds_187205 = chckRange(HEX2B_185437(HEX2B_185437(convert_186096(2, 0, modInt(milliseconds_186068, 1000)), convert_186096(1, 0, modInt(microseconds_186067, 1000000))), modInt(nanoseconds_186066, 1000000000)), -2147483648, 2147483647);
		F.line = 553;
		nimCopy(result_187100, normalize_187210(seconds_187181, nanoseconds_187205), NTI185824);
	framePtr = F.prev;

	return result_187100;

}

function floor_div_186507(x_186511, y_186513) {
			var Tmp1;
			var Tmp2;
				var Tmp3;

	var result_186514 = 0;

		result_186514 = Math.trunc(x_186511 / y_186513);
		var r_186515 = Math.trunc(x_186511 % y_186513);
			if (!(0 < r_186515)) Tmp2 = false; else {				Tmp2 = (y_186513 < 0);			}			if (Tmp2) Tmp1 = true; else {				if (!(r_186515 < 0)) Tmp3 = false; else {					Tmp3 = (0 < y_186513);				}				Tmp1 = Tmp3;			}		if (Tmp1) {
		result_186514 -= 1;
		}
		

	return result_186514;

}

function inc_185536(a_185539, a_185539_Idx, b_185540) {
	var F={procname:"times.inc",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		F.line = 153;
		a_185539[a_185539_Idx] += b_185540;
	framePtr = F.prev;

	
}

function from_epoch_day_186870(epochday_186872) {
		var Tmp1;
		var Tmp2;

	var result_186877 = {Field0: 0, Field1: 0, Field2: 0};

	var F={procname:"times.fromEpochDay",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 478;
		var z_186878 = [epochday_186872];
		F.line = 479;
		inc_185536(z_186878, 0, 719468);
		F.line = 480;
		if ((0 <= z_186878[0])) {
		Tmp1 = z_186878[0];
		}
		else {
		Tmp1 = HEX2D_185473(z_186878[0], 146096);
		}
		
		var era_186884 = divInt(Tmp1, 146097);
		F.line = 481;
		var doe_186886 = HEX2D_185473(z_186878[0], HEX2A_185401(era_186884, 146097));
		F.line = 482;
		var yoe_186891 = divInt(HEX2D_185473(HEX2B_185437(HEX2D_185473(doe_186886, divInt(doe_186886, 1460)), divInt(doe_186886, 36524)), divInt(doe_186886, 146096)), 365);
		F.line = 483;
		var y_186893 = HEX2B_185437(yoe_186891, HEX2A_185401(era_186884, 400));
		F.line = 484;
		var doy_186897 = HEX2D_185473(doe_186886, HEX2D_185473(HEX2B_185437(HEX2A_185401(365, yoe_186891), divInt(yoe_186891, 4)), divInt(yoe_186891, 100)));
		F.line = 485;
		var mp_186900 = divInt(HEX2B_185437(HEX2A_185401(5, doy_186897), 2), 153);
		F.line = 486;
		var d_186903 = HEX2B_185437(HEX2D_185473(doy_186897, divInt(HEX2B_185437(HEX2A_185401(153, mp_186900), 2), 5)), 1);
		F.line = 487;
		if ((mp_186900 < 10)) {
		Tmp2 = 3;
		}
		else {
		Tmp2 = -9;
		}
		
		var m_186906 = HEX2B_185437(mp_186900, Tmp2);
		F.line = 488;
		nimCopy(result_186877, {Field0: nimCopy(null, chckRange(d_186903, 1, 31), NTI185806), Field1: chckRange(m_186906, 1, 12), Field2: chckRange(HEX2B_185437(y_186893, ((m_186906 <= 2) ? 1:0)), -2147483648, 2147483647)}, NTI186873);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_186877;

}

function is_leap_year_186574(year_186576) {
		var Tmp1;
			var Tmp2;

	var result_186577 = false;

	var F={procname:"times.isLeapYear",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		F.line = 440;
		if (!(modInt(year_186576, 4) == 0)) Tmp1 = false; else {			if (!((modInt(year_186576, 100) == 0))) Tmp2 = true; else {				Tmp2 = (modInt(year_186576, 400) == 0);			}			Tmp1 = Tmp2;		}		result_186577 = Tmp1;
	framePtr = F.prev;

	return result_186577;

}

function get_days_in_month_186593(month_186595, year_186596) {
			var Tmp1;

	var result_186597 = 0;

	var F={procname:"times.getDaysInMonth",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		F.line = 446;
		switch (month_186595) {
		case 2:
			F.line = 447;
			if (is_leap_year_186574(year_186596)) {
			Tmp1 = 29;
			}
			else {
			Tmp1 = 28;
			}
			
			result_186597 = Tmp1;
			break;
		case 4:
		case 6:
		case 9:
		case 11:
			F.line = 448;
			result_186597 = 30;
			break;
		default: 
			F.line = 449;
			result_186597 = 31;
			break;
		}
	framePtr = F.prev;

	return result_186597;

}

function sys_fatal_57237(message_57243) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\system.nim",line:0};
	framePtr = F;
		F.line = 2966;
		var e_57245 = null;
		F.line = 2967;
		e_57245 = {m_type: NTI40050, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 2968;
		e_57245.message = nimCopy(null, message_57243, NTI36040);
		F.line = 2969;
		raiseException(e_57245, "AssertionError");
	framePtr = F.prev;

	
}

function raise_assert_57232(msg_57234) {
	var F={procname:"system.raiseAssert",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\system.nim",line:0};
	framePtr = F;
		F.line = 3924;
		sys_fatal_57237(msg_57234);
	framePtr = F.prev;

	
}

function failed_assert_impl_57280(msg_57282) {
	var F={procname:"system.failedAssertImpl",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\system.nim",line:0};
	framePtr = F;
		F.line = 3931;
		raise_assert_57232(msg_57282);
	framePtr = F.prev;

	
}

function nsuIntToStr(x_174189, minchars_174190) {
	var result_174191 = null;

		result_174191 = nimCopy(null, cstrToNimstr((Math.abs(x_174189))+""), NTI36040);
		L1: do {
			var i_174203 = 0;
			var colontmp__218393 = 0;
			colontmp__218393 = (minchars_174190 - (result_174191 != null ? result_174191.length : 0));
			var res_218395 = 1;
			L2: do {
					L3: while (true) {
					if (!(res_218395 <= colontmp__218393)) break L3;
						i_174203 = res_218395;
						result_174191 = nimCopy(null, [48].concat(result_174191 || []), NTI36040);
						res_218395 += 1;
					}
			} while(false);
		} while(false);
		if ((x_174189 < 0)) {
		result_174191 = nimCopy(null, [45].concat(result_174191 || []), NTI36040);
		}
		

	return result_174191;

}

function assert_valid_date_186630(monthday_186632, month_186633, year_186634) {
	var F={procname:"times.assertValidDate",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		if (!((monthday_186632 <= get_days_in_month_186593(month_186633, year_186634)))) {
		F.line = 456;
		failed_assert_impl_57280((makeNimstrLit("C:\\Nim\\lib\\pure\\times.nim(456, 10) `monthday <= getDaysInMonth(month, year)` ") || []).concat(cstrToNimstr((year_186634)+"") || [],makeNimstrLit("-") || [],nsuIntToStr(month_186633, 2) || [],makeNimstrLit("-") || [],cstrToNimstr((monthday_186632)+"") || [],makeNimstrLit(" is not a valid date") || []));
		}
		
	framePtr = F.prev;

	
}

function HEX2A_185419(a_185421, b_185422) {
	var result_185423 = 0;

	var F={procname:"times.*",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		F.line = 141;
		result_185423 = (a_185421 * b_185422);
	framePtr = F.prev;

	return result_185423;

}

function HEX2B_185455(a_185457, b_185458) {
	var result_185459 = 0;

	var F={procname:"times.+",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		F.line = 145;
		result_185459 = (a_185457 + b_185458);
	framePtr = F.prev;

	return result_185459;

}

function to_epoch_day_186814(monthday_186816, month_186817, year_186818) {
		var Tmp1;
		var Tmp2;

	var result_186819 = 0;

	var F={procname:"times.toEpochDay",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 462;
		assert_valid_date_186630(monthday_186816, month_186817, year_186818);
		F.line = 464;
		var colontmp__218401 = {Field0: 0, Field1: 0, Field2: 0};
		F.line = 464;
		var y_186827 = 0;
		F.line = 464;
		var m_186828 = 0;
		F.line = 464;
		var d_186829 = 0;
		F.line = 464;
		nimCopy(colontmp__218401, {Field0: year_186818, Field1: month_186817, Field2: monthday_186816}, NTI186820);
		F.line = 464;
		y_186827 = colontmp__218401["Field0"];
		F.line = 464;
		m_186828 = colontmp__218401["Field1"];
		F.line = 464;
		d_186829 = colontmp__218401["Field2"];
		if ((m_186828 <= 2)) {
		F.line = 466;
		y_186827 = subInt(y_186827, 1);
		}
		
		F.line = 468;
		if ((0 <= y_186827)) {
		Tmp1 = y_186827;
		}
		else {
		Tmp1 = HEX2D_185491(y_186827, 399);
		}
		
		var era_186842 = divInt(Tmp1, 400);
		F.line = 469;
		var yoe_186844 = HEX2D_185491(y_186827, HEX2A_185419(era_186842, 400));
		F.line = 470;
		if ((2 < m_186828)) {
		Tmp2 = -3;
		}
		else {
		Tmp2 = 9;
		}
		
		var doy_186851 = HEX2D_185491(HEX2B_185455(divInt(HEX2B_185455(HEX2A_185419(153, HEX2B_185455(m_186828, Tmp2)), 2), 5), d_186829), 1);
		F.line = 471;
		var doe_186854 = HEX2B_185455(HEX2D_185491(HEX2B_185455(HEX2A_185419(yoe_186844, 365), divInt(yoe_186844, 4)), divInt(yoe_186844, 100)), doy_186851);
		F.line = 472;
		result_186819 = HEX2D_185491(HEX2B_185455(HEX2A_185419(era_186842, 146097), doe_186854), 719468);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_186819;

}

function get_day_of_week_186978(monthday_186980, month_186981, year_186982) {
		var Tmp1;

	var result_186983 = 0;

	var F={procname:"times.getDayOfWeek",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		F.line = 505;
		assert_valid_date_186630(monthday_186980, month_186981, year_186982);
		F.line = 507;
		var days_186984 = HEX2D_185473(to_epoch_day_186814(monthday_186980, month_186981, year_186982), 3);
		F.line = 508;
		var weeks_186993 = floor_div_186507(days_186984, 7);
		F.line = 509;
		var wd_186994 = HEX2D_185473(days_186984, HEX2A_185401(weeks_186993, 7));
		F.line = 512;
		if ((wd_186994 == 0)) {
		Tmp1 = 6;
		}
		else {
		Tmp1 = chckRange(HEX2D_185473(wd_186994, 1), 0, 6);
		}
		
		result_186983 = Tmp1;
	framePtr = F.prev;

	return result_186983;

}

function get_day_of_year_186927(monthday_186929, month_186930, year_186931) {
	var result_186932 = 0;

	var F={procname:"times.getDayOfYear",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		F.line = 493;
		assert_valid_date_186630(monthday_186929, month_186930, year_186931);
		if (is_leap_year_186574(year_186931)) {
		F.line = 498;
		result_186932 = chckRange(HEX2D_185491(HEX2B_185455(days_until_month_leap_186949[chckIndx(month_186930, 1, days_until_month_leap_186949.length+1-1)-1], monthday_186929), 1), 0, 365);
		}
		else {
			F.line = 500;
			result_186932 = chckRange(HEX2D_185491(HEX2B_185455(days_until_month_186933[chckIndx(month_186930, 1, days_until_month_186933.length+1-1)-1], monthday_186929), 1), 0, 365);
		}
		
	framePtr = F.prev;

	return result_186932;

}

function init_date_time_188298(zt_188300, zone_188301) {
	var result_188302 = {m_type: NTI185820, nanosecond: 0, second: 0, minute: 0, hour: 0, monthday: 0, month: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0};

	var F={procname:"times.initDateTime",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		F.line = 760;
		F.line = 761;
		var adj_time_188303 = ntSubTime(zt_188300.time, init_duration_186064(0, 0, 0, zt_188300.utcOffset, 0, 0, 0, 0));
		F.line = 762;
		var s_188304 = adj_time_188303.seconds;
		F.line = 763;
		var epochday_188313 = floor_div_186507(s_188304, 86400);
		F.line = 764;
		var rem_188314 = HEX2D_185473(s_188304, HEX2A_185401(epochday_188313, 86400));
		F.line = 765;
		var hour_188315 = divInt(rem_188314, 3600);
		F.line = 766;
		rem_188314 = HEX2D_185473(rem_188314, HEX2A_185401(hour_188315, 3600));
		F.line = 767;
		var minute_188316 = divInt(rem_188314, 60);
		F.line = 768;
		rem_188314 = HEX2D_185473(rem_188314, HEX2A_185401(minute_188316, 60));
		F.line = 769;
		var second_188317 = rem_188314;
		F.line = 771;
		var colontmp__218389 = {Field0: 0, Field1: 0, Field2: 0};
		F.line = 771;
		var d_188318 = 0;
		F.line = 771;
		var m_188319 = 0;
		F.line = 771;
		var y_188320 = 0;
		F.line = 771;
		nimCopy(colontmp__218389, from_epoch_day_186870(epochday_188313), NTI186873);
		F.line = 771;
		d_188318 = colontmp__218389["Field0"];
		F.line = 771;
		m_188319 = colontmp__218389["Field1"];
		F.line = 771;
		y_188320 = colontmp__218389["Field2"];
		nimCopy(result_188302, {year: y_188320, month: m_188319, monthday: nimCopy(null, d_188318, NTI185806), hour: nimCopy(null, chckRange(hour_188315, 0, 23), NTI185808), minute: nimCopy(null, chckRange(minute_188316, 0, 59), NTI185810), second: nimCopy(null, chckRange(second_188317, 0, 60), NTI185812), nanosecond: nimCopy(null, zt_188300.time.nanosecond, NTI185816), weekday: get_day_of_week_186978(d_188318, m_188319, y_188320), yearday: get_day_of_year_186927(d_188318, m_188319, y_188320), isDst: zt_188300.isDst, timezone: zone_188301, utcOffset: zt_188300.utcOffset, m_type: NTI185820}, NTI185820);
	framePtr = F.prev;

	return result_188302;

}

function zoned_time_from_time_188376(zone_188378, time_188379) {
	var result_188380 = {time: {seconds: 0, nanosecond: 0}, utcOffset: 0, isDst: false};

	var F={procname:"times.zonedTimeFromTime",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		F.line = 827;
		nimCopy(result_188380, zone_188378.zonedTimeFromTimeImpl(time_188379), NTI185832);
	framePtr = F.prev;

	return result_188380;

}

function in_zone_188473(time_188475, zone_188476) {
	var result_188477 = {m_type: NTI185820, nanosecond: 0, second: 0, minute: 0, hour: 0, monthday: 0, month: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0};

	var F={procname:"times.inZone",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		F.line = 856;
		nimCopy(result_188477, init_date_time_188298(zoned_time_from_time_188376(zone_188476, time_188475), zone_188476), NTI185820);
	framePtr = F.prev;

	return result_188477;

}

function new_timezone_188334(name_188336, zoned_time_from_time_impl_188340, zoned_time_from_adj_time_impl_188344) {
	var result_188345 = null;

	var F={procname:"times.newTimezone",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		F.line = 793;
		result_188345 = {name: nimCopy(null, name_188336, NTI36040), zonedTimeFromTimeImpl: zoned_time_from_time_impl_188340, zonedTimeFromAdjTimeImpl: zoned_time_from_adj_time_impl_188344};
	framePtr = F.prev;

	return result_188345;

}

function local_zoned_time_from_time_186054(time_186056) {
	var result_188611 = {time: {seconds: 0, nanosecond: 0}, utcOffset: 0, isDst: false};

	var F={procname:"times.localZonedTimeFromTime",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		F.line = 898;
		var js_date_188613 = new Date((time_186056.seconds * 1.0000000000000000e+003));
		F.line = 899;
		var offset_188614 = HEX2A_185419(js_date_188613.getTimezoneOffset(), 60);
		F.line = 900;
		nimCopy(result_188611.time, time_186056, NTI185818);
		F.line = 901;
		result_188611.utcOffset = offset_188614;
		F.line = 902;
		result_188611.isDst = false;
	framePtr = F.prev;

	return result_188611;

}

function contains_188659(s_188666, value_188668) {
	var result_188669 = false;

	var F={procname:"contains.contains",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\system.nim",line:0};
	framePtr = F;
		F.line = 1285;
		result_188669 = ((s_188666.a <= value_188668) && (value_188668 <= s_188666.b));
	framePtr = F.prev;

	return result_188669;

}

function HEX2EHEX2E_96021(a_96026, b_96028) {
	var result_96030 = {a: 0, b: 0};

	var F={procname:".....",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\system.nim",line:0};
	framePtr = F;
		F.line = 394;
		result_96030.a = a_96026;
		F.line = 395;
		result_96030.b = b_96028;
	framePtr = F.prev;

	return result_96030;

}

function ntAddTime(a_188033, b_188034) {
	var result_188035 = {seconds: 0, nanosecond: 0};

	var F={procname:"times.+",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		F.line = 706;
		nimCopy(result_188035, normalize_188042(HEX2B_185437(a_188033.seconds, b_188034.seconds), HEX2B_185455(a_188033.nanosecond, b_188034.nanosecond)), NTI185818);
	framePtr = F.prev;

	return result_188035;

}

function local_zoned_time_from_adj_time_186057(adj_time_186059) {
	var result_188631 = {time: {seconds: 0, nanosecond: 0}, utcOffset: 0, isDst: false};

	var F={procname:"times.localZonedTimeFromAdjTime",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		F.line = 905;
		var utc_date_188633 = new Date((adj_time_186059.seconds * 1.0000000000000000e+003));
		F.line = 906;
		var local_date_188634 = new Date(utc_date_188633.getUTCFullYear(), utc_date_188633.getUTCMonth(), utc_date_188633.getUTCDate(), utc_date_188633.getUTCHours(), utc_date_188633.getUTCMinutes(), utc_date_188633.getUTCSeconds(), 0);
		if (contains_188659(HEX2EHEX2E_96021(0, 99), utc_date_188633.getUTCFullYear())) {
		F.line = 913;
		local_date_188634.setFullYear(utc_date_188633.getUTCFullYear());
		}
		
		F.line = 915;
		result_188631.utcOffset = HEX2A_185419(local_date_188634.getTimezoneOffset(), 60);
		F.line = 916;
		nimCopy(result_188631.time, ntAddTime(adj_time_186059, init_duration_186064(0, 0, 0, result_188631.utcOffset, 0, 0, 0, 0)), NTI185818);
		F.line = 917;
		result_188631.isDst = false;
	framePtr = F.prev;

	return result_188631;

}

function local_188869() {
	var result_188871 = null;

	var F={procname:"times.local",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		if ((local_instance_188832[0] === null)) {
		F.line = 1035;
		local_instance_188832[0] = new_timezone_188334(makeNimstrLit("LOCAL"), local_zoned_time_from_time_186054, local_zoned_time_from_adj_time_186057);
		}
		
		F.line = 1037;
		result_188871 = local_instance_188832[0];
	framePtr = F.prev;

	return result_188871;

}

function local_188943(t_188945) {
	var result_188946 = {m_type: NTI185820, nanosecond: 0, second: 0, minute: 0, hour: 0, monthday: 0, month: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0};

	var F={procname:"times.local",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		F.line = 1052;
		nimCopy(result_188946, in_zone_188473(t_188945, local_188869()), NTI185820);
	framePtr = F.prev;

	return result_188946;

}

function now_189048() {
	var result_189050 = {m_type: NTI185820, nanosecond: 0, second: 0, minute: 0, hour: 0, monthday: 0, month: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0};

	var F={procname:"times.now",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		F.line = 1078;
		nimCopy(result_189050, local_188943(get_time_188960()), NTI185820);
	framePtr = F.prev;

	return result_189050;

}

function ntgetDateStr() {
	var result_189145 = null;

	var F={procname:"times.getDateStr",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		F.line = 1151;
		var dt_189146 = now_189048();
		F.line = 1153;
		result_189145 = nimCopy(null, (cstrToNimstr((dt_189146.year)+"") || []).concat([45],nsuIntToStr(dt_189146.month, 2) || [],[45],nsuIntToStr(dt_189146.monthday, 2) || []), NTI36040);
	framePtr = F.prev;

	return result_189145;

}

function ntgetClockStr() {
	var result_189168 = null;

	var F={procname:"times.getClockStr",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\times.nim",line:0};
	framePtr = F;
		F.line = 1157;
		var dt_189169 = now_189048();
		F.line = 1159;
		result_189168 = nimCopy(null, (nsuIntToStr(dt_189169.hour, 2) || []).concat([58],nsuIntToStr(dt_189169.minute, 2) || [],[58],nsuIntToStr(dt_189169.second, 2) || []), NTI36040);
	framePtr = F.prev;

	return result_189168;

}

function substitute_log_199417(frmt_199419, level_199420, args_199422) {
	var result_199423 = null;

	var F={procname:"logging.substituteLog",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\logging.nim",line:0};
	framePtr = F;
		F.line = 112;
		var msg_len_199425 = 0;
		L1: do {
			F.line = 113;
			var arg_199433 = null;
			F.line = 2284;
			var i_218380 = 0;
			L2: do {
				F.line = 2285;
					L3: while (true) {
					if (!(i_218380 < (args_199422 != null ? args_199422.length : 0))) break L3;
						F.line = 113;
						arg_199433 = args_199422[chckIndx(i_218380, 0, args_199422.length+0-1)-0];
						F.line = 114;
						msg_len_199425 = addInt(msg_len_199425, (arg_199433 != null ? arg_199433.length : 0));
						F.line = 2287;
						i_218380 = addInt(i_218380, 1);
					}
			} while(false);
		} while(false);
		F.line = 115;
		result_199423 = nimCopy(null, mnewString(0), NTI36040);
		F.line = 116;
		var i_199444 = 0;
		L4: do {
			F.line = 117;
				L5: while (true) {
				if (!(i_199444 < (frmt_199419 != null ? frmt_199419.length : 0))) break L5;
					if (!((frmt_199419[chckIndx(i_199444, 0, frmt_199419.length+0-1)-0] == 36))) {
					F.line = 119;
					if (result_199423 != null) { addChar(result_199423, frmt_199419[chckIndx(i_199444, 0, frmt_199419.length+0-1)-0]); } else { result_199423 = [frmt_199419[chckIndx(i_199444, 0, frmt_199419.length+0-1)-0]]; };
					F.line = 120;
					i_199444 = addInt(i_199444, 1);
					}
					else {
						F.line = 122;
						i_199444 = addInt(i_199444, 1);
						F.line = 123;
						var v_199463 = [];
						F.line = 124;
						var app_199601 = [];
						L6: do {
							F.line = 125;
								L7: while (true) {
								if (!(ConstSet2[frmt_199419[chckIndx(i_199444, 0, frmt_199419.length+0-1)-0]] != undefined)) break L7;
									F.line = 126;
									if (v_199463 != null) { addChar(v_199463, nsuToLowerAsciiChar(frmt_199419[chckIndx(i_199444, 0, frmt_199419.length+0-1)-0])); } else { v_199463 = [nsuToLowerAsciiChar(frmt_199419[chckIndx(i_199444, 0, frmt_199419.length+0-1)-0])]; };
									F.line = 127;
									i_199444 = addInt(i_199444, 1);
								}
						} while(false);
						F.line = 128;
						switch (toJSStr(v_199463)) {
						case "date":
							F.line = 129;
							if (result_199423 != null) { result_199423 = (result_199423).concat(ntgetDateStr()); } else { result_199423 = ntgetDateStr().slice(); };
							break;
						case "time":
							F.line = 130;
							if (result_199423 != null) { result_199423 = (result_199423).concat(ntgetClockStr()); } else { result_199423 = ntgetClockStr().slice(); };
							break;
						case "datetime":
							F.line = 131;
							if (result_199423 != null) { result_199423 = (result_199423).concat((ntgetDateStr() || []).concat(makeNimstrLit("T") || [],ntgetClockStr() || [])); } else { result_199423 = (ntgetDateStr() || []).concat(makeNimstrLit("T") || [],ntgetClockStr() || []).slice(); };
							break;
						case "app":
							F.line = 132;
							if (result_199423 != null) { result_199423 = (result_199423).concat(app_199601); } else { result_199423 = app_199601.slice(); };
							break;
						case "appdir":
							break;
						case "appname":
							break;
						case "levelid":
							F.line = 137;
							if (result_199423 != null) { addChar(result_199423, level_names_199211[chckIndx(level_199420, 0, level_names_199211.length+0-1)-0][chckIndx(0, 0, level_names_199211[chckIndx(level_199420, 0, level_names_199211.length+0-1)-0].length+0-1)-0]); } else { result_199423 = [level_names_199211[chckIndx(level_199420, 0, level_names_199211.length+0-1)-0][chckIndx(0, 0, level_names_199211[chckIndx(level_199420, 0, level_names_199211.length+0-1)-0].length+0-1)-0]]; };
							break;
						case "levelname":
							F.line = 138;
							if (result_199423 != null) { result_199423 = (result_199423).concat(level_names_199211[chckIndx(level_199420, 0, level_names_199211.length+0-1)-0]); } else { result_199423 = level_names_199211[chckIndx(level_199420, 0, level_names_199211.length+0-1)-0].slice(); };
							break;
						default: 
							break;
						}
					}
					
				}
		} while(false);
		L8: do {
			F.line = 140;
			var arg_200008 = null;
			F.line = 2284;
			var i_218386 = 0;
			L9: do {
				F.line = 2285;
					L10: while (true) {
					if (!(i_218386 < (args_199422 != null ? args_199422.length : 0))) break L10;
						F.line = 140;
						arg_200008 = args_199422[chckIndx(i_218386, 0, args_199422.length+0-1)-0];
						F.line = 141;
						if (result_199423 != null) { result_199423 = (result_199423).concat(arg_200008); } else { result_199423 = arg_200008.slice(); };
						F.line = 2287;
						i_218386 = addInt(i_218386, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_199423;

}

function log_200044(logger_200046, level_200047, args_200049) {
			var Tmp1;

	var F={procname:"logging.log",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\logging.nim",line:0};
	framePtr = F;
			if (!(level_199401[0] <= level_200047)) Tmp1 = false; else {				Tmp1 = (logger_200046.levelThreshold <= level_200047);			}		if (Tmp1) {
		F.line = 153;
		var ln_200066 = substitute_log_199417(logger_200046.fmtStr, level_200047, args_200049);
		F.line = 155;
		var cln_200201 = toJSStr(ln_200066);
		F.line = 156;
		console.log(cln_200201);
		}
		
	framePtr = F.prev;

	
}

function log_200022(logger_200024, level_200025, args_200027) {
	var F={procname:"logging.log",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\logging.nim",line:0};
	framePtr = F;
	framePtr = F.prev;

	
}

function log_200029(logger_200024, level_200025, args_200027) {
	var F={procname:"logging.log",prev:framePtr,filename:"..\\..\\..\\..\\..\\Nim\\lib\\pure\\logging.nim",line:0};
	framePtr = F;
		F.line = 500;
		chckNilDisp(logger_200024);
		if (isObj(logger_200024.m_type, NTI199227)) {
		F.line = 143;
		log_200044(logger_200024, level_200025, args_200027);
		}
		else {
		if (isObj(logger_200024.m_type, NTI199223)) {
		F.line = 143;
		log_200022(logger_200024, level_200025, args_200027);
		}
		}
	framePtr = F.prev;

	
}
