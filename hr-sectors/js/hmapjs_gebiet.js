/* Generated by the Nim Compiler v1.4.8 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI10626085 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI14360055 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI8500043 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10531040 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10531024 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI10615004 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10826118 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI16610067 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI10826020 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI10626048 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI10626081 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10167299 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10516098 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10626056 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10626076 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10626096 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10626090 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10626089 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI16360516 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI16360507 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI16360502 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI16360287 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI16305185 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14360045 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI14360047 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI15740011 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI10531036 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI13425125 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI4020232 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI4275011 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI6851 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11426098 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11426087 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11426084 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11426081 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI180 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI11426054 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI11426058 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11426056 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI11993253 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11993202 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12015039 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11993259 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI11993227 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI11993243 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI152 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI11993239 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11993320 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11993316 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11993315 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11993251 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI11993272 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI11993235 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI11993204 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI11993262 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI11993229 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI11993265 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI11993231 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI11993268 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI11993233 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI11993276 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI11993237 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI11993241 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI14631233 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI14631230 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14631227 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI14631207 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI14631204 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14631201 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI6954 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10410097 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10410085 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI14631184 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI14631181 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14631178 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI14631062 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14631076 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI14631073 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14631070 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI14631053 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI14631023 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI14631048 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14631046 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI14631021 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI14631158 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI14631155 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14631152 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI10531018 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI10531016 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI14631028 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI14631017 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI14631040 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14631038 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14631032 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI14631019 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI14631135 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI14631132 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14631129 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI14631119 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI14631027 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI13647211 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13343323 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13343324 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI13390076 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI13390074 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI13387152 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI13390030 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13390018 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13390039 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13390037 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13387028 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI13390031 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI13390022 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI10167476 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10167472 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10167468 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10167464 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10167460 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10167456 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10167452 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10167448 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10167444 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10167440 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10167436 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10167432 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10167428 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10167424 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10167420 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10167416 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10167412 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10167408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10167404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10167400 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10167396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10167392 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10167388 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10167205 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10167291 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI10168628 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10168619 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10168618 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI10167385 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI10168626 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI10167387 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI10167269 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10167267 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI10167661 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10167273 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10167271 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI10167659 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10167657 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10167289 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10167287 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI10167655 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10167653 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10167277 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10167275 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI10167651 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10167675 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10167281 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10167279 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI10167673 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10167767 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10167285 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10167283 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI10167231 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10167229 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI10167245 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10167243 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI10167241 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10167239 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI10167233 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI10167614 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10167612 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10167610 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10167237 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10167235 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI13647207 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI13647209 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI10167293 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI105 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI14517035 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI14360014 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10166070 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI164 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI14292030 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI946734 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI6821 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6843 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6845 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI8520015 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI6841 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI8500015 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI144 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI6618 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI6604 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI10217269 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI14710854 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI14710851 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14710848 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI6853 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6835 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6833 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6837 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6608 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6928 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI115 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI6923 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI6817 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6819 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6849 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI113 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NNI6849 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6849.node = NNI6849;
var NNI6819 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6819.node = NNI6819;
NTI6923.base = NTI6817;
NTI6928.base = NTI6817;
var NNI6817 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI6923, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI115, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI113, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI113, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI6928, name: "up", sons: null}]};
NTI6817.node = NNI6817;
var NNI6608 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6608.node = NNI6608;
NTI6817.base = NTI6608;
NTI6819.base = NTI6817;
NTI6849.base = NTI6819;
var NNI6837 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6837.node = NNI6837;
var NNI6833 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6833.node = NNI6833;
NTI6833.base = NTI6819;
NTI6837.base = NTI6833;
var NNI6835 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6835.node = NNI6835;
NTI6835.base = NTI6833;
var NNI6853 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6853.node = NNI6853;
NTI6853.base = NTI6819;
NTI6604.base = NTI6618;
var NNI14710854 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI10217269, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI10217269, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI6604, name: "Field2", sons: null}]};
NTI14710854.node = NNI14710854;
NTI14710851.base = NTI14710854;
var NNI14710848 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI14710851, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI144, name: "counter", sons: null}]};
NTI14710848.node = NNI14710848;
NTI8500015.base = NTI113;
var NNI6841 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6841.node = NNI6841;
NTI6841.base = NTI6819;
NTI8520015.base = NTI113;
var NNI6845 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6845.node = NNI6845;
var NNI6843 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6843.node = NNI6843;
var NNI6821 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6821.node = NNI6821;
NTI6821.base = NTI6817;
NTI6843.base = NTI6821;
NTI6845.base = NTI6843;
var NNI946734 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI144, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI144, name: "b", sons: null}]};
NTI946734.node = NNI946734;
var NNI14292030 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "apikey", len: 0, typ: NTI115, name: "apikey", sons: null}, 
{kind: 1, offset: "app_id", len: 0, typ: NTI115, name: "app_id", sons: null}, 
{kind: 1, offset: "app_code", len: 0, typ: NTI115, name: "app_code", sons: null}, 
{kind: 1, offset: "useHTTPS", len: 0, typ: NTI164, name: "useHTTPS", sons: null}, 
{kind: 1, offset: "useCIT", len: 0, typ: NTI164, name: "useCIT", sons: null}]};
NTI14292030.node = NNI14292030;
var NNI10166070 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI10166070.node = NNI10166070;
NTI10166070.base = NTI6608;
NTI14292030.base = NTI10166070;
var NNI14360014 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "tileSize", len: 0, typ: NTI144, name: "tileSize", sons: null}, 
{kind: 1, offset: "ppi", len: 0, typ: NTI144, name: "ppi", sons: null}, 
{kind: 1, offset: "lg", len: 0, typ: NTI115, name: "lg", sons: null}, 
{kind: 1, offset: "lg2", len: 0, typ: NTI115, name: "lg2", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI115, name: "style", sons: null}, 
{kind: 1, offset: "pois", len: 0, typ: NTI164, name: "pois", sons: null}, 
{kind: 1, offset: "crossOrigin", len: 0, typ: NTI113, name: "crossOrigin", sons: null}]};
NTI14360014.node = NNI14360014;
NTI14360014.base = NTI10166070;
var NNI14517035 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "pixelRatio", len: 0, typ: NTI105, name: "pixelRatio", sons: null}, 
{kind: 1, offset: "noWrap", len: 0, typ: NTI164, name: "noWrap", sons: null}]};
NTI14517035.node = NNI14517035;
NTI14517035.base = NTI10166070;
var NNI10167293 = {kind: 2, len: 368, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "alignContent", len: 0, typ: NTI115, name: "alignContent", sons: null}, 
{kind: 1, offset: "alignItems", len: 0, typ: NTI115, name: "alignItems", sons: null}, 
{kind: 1, offset: "alignSelf", len: 0, typ: NTI115, name: "alignSelf", sons: null}, 
{kind: 1, offset: "all", len: 0, typ: NTI115, name: "all", sons: null}, 
{kind: 1, offset: "animation", len: 0, typ: NTI115, name: "animation", sons: null}, 
{kind: 1, offset: "animationDelay", len: 0, typ: NTI115, name: "animationDelay", sons: null}, 
{kind: 1, offset: "animationDirection", len: 0, typ: NTI115, name: "animationDirection", sons: null}, 
{kind: 1, offset: "animationDuration", len: 0, typ: NTI115, name: "animationDuration", sons: null}, 
{kind: 1, offset: "animationFillMode", len: 0, typ: NTI115, name: "animationFillMode", sons: null}, 
{kind: 1, offset: "animationIterationCount", len: 0, typ: NTI115, name: "animationIterationCount", sons: null}, 
{kind: 1, offset: "animationName", len: 0, typ: NTI115, name: "animationName", sons: null}, 
{kind: 1, offset: "animationPlayState", len: 0, typ: NTI115, name: "animationPlayState", sons: null}, 
{kind: 1, offset: "animationTimingFunction", len: 0, typ: NTI115, name: "animationTimingFunction", sons: null}, 
{kind: 1, offset: "backdropFilter", len: 0, typ: NTI115, name: "backdropFilter", sons: null}, 
{kind: 1, offset: "backfaceVisibility", len: 0, typ: NTI115, name: "backfaceVisibility", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI115, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI115, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundBlendMode", len: 0, typ: NTI115, name: "backgroundBlendMode", sons: null}, 
{kind: 1, offset: "backgroundClip", len: 0, typ: NTI115, name: "backgroundClip", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI115, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI115, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundOrigin", len: 0, typ: NTI115, name: "backgroundOrigin", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI115, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI115, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "backgroundSize", len: 0, typ: NTI115, name: "backgroundSize", sons: null}, 
{kind: 1, offset: "blockSize", len: 0, typ: NTI115, name: "blockSize", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI115, name: "border", sons: null}, 
{kind: 1, offset: "borderBlock", len: 0, typ: NTI115, name: "borderBlock", sons: null}, 
{kind: 1, offset: "borderBlockColor", len: 0, typ: NTI115, name: "borderBlockColor", sons: null}, 
{kind: 1, offset: "borderBlockEnd", len: 0, typ: NTI115, name: "borderBlockEnd", sons: null}, 
{kind: 1, offset: "borderBlockEndColor", len: 0, typ: NTI115, name: "borderBlockEndColor", sons: null}, 
{kind: 1, offset: "borderBlockEndStyle", len: 0, typ: NTI115, name: "borderBlockEndStyle", sons: null}, 
{kind: 1, offset: "borderBlockEndWidth", len: 0, typ: NTI115, name: "borderBlockEndWidth", sons: null}, 
{kind: 1, offset: "borderBlockStart", len: 0, typ: NTI115, name: "borderBlockStart", sons: null}, 
{kind: 1, offset: "borderBlockStartColor", len: 0, typ: NTI115, name: "borderBlockStartColor", sons: null}, 
{kind: 1, offset: "borderBlockStartStyle", len: 0, typ: NTI115, name: "borderBlockStartStyle", sons: null}, 
{kind: 1, offset: "borderBlockStartWidth", len: 0, typ: NTI115, name: "borderBlockStartWidth", sons: null}, 
{kind: 1, offset: "borderBlockStyle", len: 0, typ: NTI115, name: "borderBlockStyle", sons: null}, 
{kind: 1, offset: "borderBlockWidth", len: 0, typ: NTI115, name: "borderBlockWidth", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI115, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI115, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomLeftRadius", len: 0, typ: NTI115, name: "borderBottomLeftRadius", sons: null}, 
{kind: 1, offset: "borderBottomRightRadius", len: 0, typ: NTI115, name: "borderBottomRightRadius", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI115, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI115, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderCollapse", len: 0, typ: NTI115, name: "borderCollapse", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI115, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderEndEndRadius", len: 0, typ: NTI115, name: "borderEndEndRadius", sons: null}, 
{kind: 1, offset: "borderEndStartRadius", len: 0, typ: NTI115, name: "borderEndStartRadius", sons: null}, 
{kind: 1, offset: "borderImage", len: 0, typ: NTI115, name: "borderImage", sons: null}, 
{kind: 1, offset: "borderImageOutset", len: 0, typ: NTI115, name: "borderImageOutset", sons: null}, 
{kind: 1, offset: "borderImageRepeat", len: 0, typ: NTI115, name: "borderImageRepeat", sons: null}, 
{kind: 1, offset: "borderImageSlice", len: 0, typ: NTI115, name: "borderImageSlice", sons: null}, 
{kind: 1, offset: "borderImageSource", len: 0, typ: NTI115, name: "borderImageSource", sons: null}, 
{kind: 1, offset: "borderImageWidth", len: 0, typ: NTI115, name: "borderImageWidth", sons: null}, 
{kind: 1, offset: "borderInline", len: 0, typ: NTI115, name: "borderInline", sons: null}, 
{kind: 1, offset: "borderInlineColor", len: 0, typ: NTI115, name: "borderInlineColor", sons: null}, 
{kind: 1, offset: "borderInlineEnd", len: 0, typ: NTI115, name: "borderInlineEnd", sons: null}, 
{kind: 1, offset: "borderInlineEndColor", len: 0, typ: NTI115, name: "borderInlineEndColor", sons: null}, 
{kind: 1, offset: "borderInlineEndStyle", len: 0, typ: NTI115, name: "borderInlineEndStyle", sons: null}, 
{kind: 1, offset: "borderInlineEndWidth", len: 0, typ: NTI115, name: "borderInlineEndWidth", sons: null}, 
{kind: 1, offset: "borderInlineStart", len: 0, typ: NTI115, name: "borderInlineStart", sons: null}, 
{kind: 1, offset: "borderInlineStartColor", len: 0, typ: NTI115, name: "borderInlineStartColor", sons: null}, 
{kind: 1, offset: "borderInlineStartStyle", len: 0, typ: NTI115, name: "borderInlineStartStyle", sons: null}, 
{kind: 1, offset: "borderInlineStartWidth", len: 0, typ: NTI115, name: "borderInlineStartWidth", sons: null}, 
{kind: 1, offset: "borderInlineStyle", len: 0, typ: NTI115, name: "borderInlineStyle", sons: null}, 
{kind: 1, offset: "borderInlineWidth", len: 0, typ: NTI115, name: "borderInlineWidth", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI115, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI115, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI115, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI115, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRadius", len: 0, typ: NTI115, name: "borderRadius", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI115, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI115, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI115, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI115, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderSpacing", len: 0, typ: NTI115, name: "borderSpacing", sons: null}, 
{kind: 1, offset: "borderStartEndRadius", len: 0, typ: NTI115, name: "borderStartEndRadius", sons: null}, 
{kind: 1, offset: "borderStartStartRadius", len: 0, typ: NTI115, name: "borderStartStartRadius", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI115, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI115, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI115, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopLeftRadius", len: 0, typ: NTI115, name: "borderTopLeftRadius", sons: null}, 
{kind: 1, offset: "borderTopRightRadius", len: 0, typ: NTI115, name: "borderTopRightRadius", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI115, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI115, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI115, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI115, name: "bottom", sons: null}, 
{kind: 1, offset: "boxDecorationBreak", len: 0, typ: NTI115, name: "boxDecorationBreak", sons: null}, 
{kind: 1, offset: "boxShadow", len: 0, typ: NTI115, name: "boxShadow", sons: null}, 
{kind: 1, offset: "boxSizing", len: 0, typ: NTI115, name: "boxSizing", sons: null}, 
{kind: 1, offset: "breakAfter", len: 0, typ: NTI115, name: "breakAfter", sons: null}, 
{kind: 1, offset: "breakBefore", len: 0, typ: NTI115, name: "breakBefore", sons: null}, 
{kind: 1, offset: "breakInside", len: 0, typ: NTI115, name: "breakInside", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI115, name: "captionSide", sons: null}, 
{kind: 1, offset: "caretColor", len: 0, typ: NTI115, name: "caretColor", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI115, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI115, name: "clip", sons: null}, 
{kind: 1, offset: "clipPath", len: 0, typ: NTI115, name: "clipPath", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI115, name: "color", sons: null}, 
{kind: 1, offset: "colorAdjust", len: 0, typ: NTI115, name: "colorAdjust", sons: null}, 
{kind: 1, offset: "columnCount", len: 0, typ: NTI115, name: "columnCount", sons: null}, 
{kind: 1, offset: "columnFill", len: 0, typ: NTI115, name: "columnFill", sons: null}, 
{kind: 1, offset: "columnGap", len: 0, typ: NTI115, name: "columnGap", sons: null}, 
{kind: 1, offset: "columnRule", len: 0, typ: NTI115, name: "columnRule", sons: null}, 
{kind: 1, offset: "columnRuleColor", len: 0, typ: NTI115, name: "columnRuleColor", sons: null}, 
{kind: 1, offset: "columnRuleStyle", len: 0, typ: NTI115, name: "columnRuleStyle", sons: null}, 
{kind: 1, offset: "columnRuleWidth", len: 0, typ: NTI115, name: "columnRuleWidth", sons: null}, 
{kind: 1, offset: "columnSpan", len: 0, typ: NTI115, name: "columnSpan", sons: null}, 
{kind: 1, offset: "columnWidth", len: 0, typ: NTI115, name: "columnWidth", sons: null}, 
{kind: 1, offset: "columns", len: 0, typ: NTI115, name: "columns", sons: null}, 
{kind: 1, offset: "contain", len: 0, typ: NTI115, name: "contain", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI115, name: "content", sons: null}, 
{kind: 1, offset: "counterIncrement", len: 0, typ: NTI115, name: "counterIncrement", sons: null}, 
{kind: 1, offset: "counterReset", len: 0, typ: NTI115, name: "counterReset", sons: null}, 
{kind: 1, offset: "counterSet", len: 0, typ: NTI115, name: "counterSet", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI115, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI115, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI115, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI115, name: "emptyCells", sons: null}, 
{kind: 1, offset: "filter", len: 0, typ: NTI115, name: "filter", sons: null}, 
{kind: 1, offset: "flex", len: 0, typ: NTI115, name: "flex", sons: null}, 
{kind: 1, offset: "flexBasis", len: 0, typ: NTI115, name: "flexBasis", sons: null}, 
{kind: 1, offset: "flexDirection", len: 0, typ: NTI115, name: "flexDirection", sons: null}, 
{kind: 1, offset: "flexFlow", len: 0, typ: NTI115, name: "flexFlow", sons: null}, 
{kind: 1, offset: "flexGrow", len: 0, typ: NTI115, name: "flexGrow", sons: null}, 
{kind: 1, offset: "flexShrink", len: 0, typ: NTI115, name: "flexShrink", sons: null}, 
{kind: 1, offset: "flexWrap", len: 0, typ: NTI115, name: "flexWrap", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI115, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI115, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI115, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontFeatureSettings", len: 0, typ: NTI115, name: "fontFeatureSettings", sons: null}, 
{kind: 1, offset: "fontKerning", len: 0, typ: NTI115, name: "fontKerning", sons: null}, 
{kind: 1, offset: "fontLanguageOverride", len: 0, typ: NTI115, name: "fontLanguageOverride", sons: null}, 
{kind: 1, offset: "fontOpticalSizing", len: 0, typ: NTI115, name: "fontOpticalSizing", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI115, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontSizeAdjust", len: 0, typ: NTI115, name: "fontSizeAdjust", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI115, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI115, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontSynthesis", len: 0, typ: NTI115, name: "fontSynthesis", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI115, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontVariantAlternates", len: 0, typ: NTI115, name: "fontVariantAlternates", sons: null}, 
{kind: 1, offset: "fontVariantCaps", len: 0, typ: NTI115, name: "fontVariantCaps", sons: null}, 
{kind: 1, offset: "fontVariantEastAsian", len: 0, typ: NTI115, name: "fontVariantEastAsian", sons: null}, 
{kind: 1, offset: "fontVariantLigatures", len: 0, typ: NTI115, name: "fontVariantLigatures", sons: null}, 
{kind: 1, offset: "fontVariantNumeric", len: 0, typ: NTI115, name: "fontVariantNumeric", sons: null}, 
{kind: 1, offset: "fontVariantPosition", len: 0, typ: NTI115, name: "fontVariantPosition", sons: null}, 
{kind: 1, offset: "fontVariationSettings", len: 0, typ: NTI115, name: "fontVariationSettings", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI115, name: "fontWeight", sons: null}, 
{kind: 1, offset: "gap", len: 0, typ: NTI115, name: "gap", sons: null}, 
{kind: 1, offset: "grid", len: 0, typ: NTI115, name: "grid", sons: null}, 
{kind: 1, offset: "gridArea", len: 0, typ: NTI115, name: "gridArea", sons: null}, 
{kind: 1, offset: "gridAutoColumns", len: 0, typ: NTI115, name: "gridAutoColumns", sons: null}, 
{kind: 1, offset: "gridAutoFlow", len: 0, typ: NTI115, name: "gridAutoFlow", sons: null}, 
{kind: 1, offset: "gridAutoRows", len: 0, typ: NTI115, name: "gridAutoRows", sons: null}, 
{kind: 1, offset: "gridColumn", len: 0, typ: NTI115, name: "gridColumn", sons: null}, 
{kind: 1, offset: "gridColumnEnd", len: 0, typ: NTI115, name: "gridColumnEnd", sons: null}, 
{kind: 1, offset: "gridColumnStart", len: 0, typ: NTI115, name: "gridColumnStart", sons: null}, 
{kind: 1, offset: "gridRow", len: 0, typ: NTI115, name: "gridRow", sons: null}, 
{kind: 1, offset: "gridRowEnd", len: 0, typ: NTI115, name: "gridRowEnd", sons: null}, 
{kind: 1, offset: "gridRowStart", len: 0, typ: NTI115, name: "gridRowStart", sons: null}, 
{kind: 1, offset: "gridTemplate", len: 0, typ: NTI115, name: "gridTemplate", sons: null}, 
{kind: 1, offset: "gridTemplateAreas", len: 0, typ: NTI115, name: "gridTemplateAreas", sons: null}, 
{kind: 1, offset: "gridTemplateColumns", len: 0, typ: NTI115, name: "gridTemplateColumns", sons: null}, 
{kind: 1, offset: "gridTemplateRows", len: 0, typ: NTI115, name: "gridTemplateRows", sons: null}, 
{kind: 1, offset: "hangingPunctuation", len: 0, typ: NTI115, name: "hangingPunctuation", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI115, name: "height", sons: null}, 
{kind: 1, offset: "hyphens", len: 0, typ: NTI115, name: "hyphens", sons: null}, 
{kind: 1, offset: "imageOrientation", len: 0, typ: NTI115, name: "imageOrientation", sons: null}, 
{kind: 1, offset: "imageRendering", len: 0, typ: NTI115, name: "imageRendering", sons: null}, 
{kind: 1, offset: "inlineSize", len: 0, typ: NTI115, name: "inlineSize", sons: null}, 
{kind: 1, offset: "inset", len: 0, typ: NTI115, name: "inset", sons: null}, 
{kind: 1, offset: "insetBlock", len: 0, typ: NTI115, name: "insetBlock", sons: null}, 
{kind: 1, offset: "insetBlockEnd", len: 0, typ: NTI115, name: "insetBlockEnd", sons: null}, 
{kind: 1, offset: "insetBlockStart", len: 0, typ: NTI115, name: "insetBlockStart", sons: null}, 
{kind: 1, offset: "insetInline", len: 0, typ: NTI115, name: "insetInline", sons: null}, 
{kind: 1, offset: "insetInlineEnd", len: 0, typ: NTI115, name: "insetInlineEnd", sons: null}, 
{kind: 1, offset: "insetInlineStart", len: 0, typ: NTI115, name: "insetInlineStart", sons: null}, 
{kind: 1, offset: "isolation", len: 0, typ: NTI115, name: "isolation", sons: null}, 
{kind: 1, offset: "justifyContent", len: 0, typ: NTI115, name: "justifyContent", sons: null}, 
{kind: 1, offset: "justifyItems", len: 0, typ: NTI115, name: "justifyItems", sons: null}, 
{kind: 1, offset: "justifySelf", len: 0, typ: NTI115, name: "justifySelf", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI115, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI115, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineBreak", len: 0, typ: NTI115, name: "lineBreak", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI115, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI115, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI115, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI115, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI115, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI115, name: "margin", sons: null}, 
{kind: 1, offset: "marginBlock", len: 0, typ: NTI115, name: "marginBlock", sons: null}, 
{kind: 1, offset: "marginBlockEnd", len: 0, typ: NTI115, name: "marginBlockEnd", sons: null}, 
{kind: 1, offset: "marginBlockStart", len: 0, typ: NTI115, name: "marginBlockStart", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI115, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginInline", len: 0, typ: NTI115, name: "marginInline", sons: null}, 
{kind: 1, offset: "marginInlineEnd", len: 0, typ: NTI115, name: "marginInlineEnd", sons: null}, 
{kind: 1, offset: "marginInlineStart", len: 0, typ: NTI115, name: "marginInlineStart", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI115, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI115, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI115, name: "marginTop", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI115, name: "mask", sons: null}, 
{kind: 1, offset: "maskBorder", len: 0, typ: NTI115, name: "maskBorder", sons: null}, 
{kind: 1, offset: "maskBorderMode", len: 0, typ: NTI115, name: "maskBorderMode", sons: null}, 
{kind: 1, offset: "maskBorderOutset", len: 0, typ: NTI115, name: "maskBorderOutset", sons: null}, 
{kind: 1, offset: "maskBorderRepeat", len: 0, typ: NTI115, name: "maskBorderRepeat", sons: null}, 
{kind: 1, offset: "maskBorderSlice", len: 0, typ: NTI115, name: "maskBorderSlice", sons: null}, 
{kind: 1, offset: "maskBorderSource", len: 0, typ: NTI115, name: "maskBorderSource", sons: null}, 
{kind: 1, offset: "maskBorderWidth", len: 0, typ: NTI115, name: "maskBorderWidth", sons: null}, 
{kind: 1, offset: "maskClip", len: 0, typ: NTI115, name: "maskClip", sons: null}, 
{kind: 1, offset: "maskComposite", len: 0, typ: NTI115, name: "maskComposite", sons: null}, 
{kind: 1, offset: "maskImage", len: 0, typ: NTI115, name: "maskImage", sons: null}, 
{kind: 1, offset: "maskMode", len: 0, typ: NTI115, name: "maskMode", sons: null}, 
{kind: 1, offset: "maskOrigin", len: 0, typ: NTI115, name: "maskOrigin", sons: null}, 
{kind: 1, offset: "maskPosition", len: 0, typ: NTI115, name: "maskPosition", sons: null}, 
{kind: 1, offset: "maskRepeat", len: 0, typ: NTI115, name: "maskRepeat", sons: null}, 
{kind: 1, offset: "maskSize", len: 0, typ: NTI115, name: "maskSize", sons: null}, 
{kind: 1, offset: "maskType", len: 0, typ: NTI115, name: "maskType", sons: null}, 
{kind: 1, offset: "maxBlockSize", len: 0, typ: NTI115, name: "maxBlockSize", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI115, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxInlineSize", len: 0, typ: NTI115, name: "maxInlineSize", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI115, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minBlockSize", len: 0, typ: NTI115, name: "minBlockSize", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI115, name: "minHeight", sons: null}, 
{kind: 1, offset: "minInlineSize", len: 0, typ: NTI115, name: "minInlineSize", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI115, name: "minWidth", sons: null}, 
{kind: 1, offset: "mixBlendMode", len: 0, typ: NTI115, name: "mixBlendMode", sons: null}, 
{kind: 1, offset: "objectFit", len: 0, typ: NTI115, name: "objectFit", sons: null}, 
{kind: 1, offset: "objectPosition", len: 0, typ: NTI115, name: "objectPosition", sons: null}, 
{kind: 1, offset: "offset", len: 0, typ: NTI115, name: "offset", sons: null}, 
{kind: 1, offset: "offsetAnchor", len: 0, typ: NTI115, name: "offsetAnchor", sons: null}, 
{kind: 1, offset: "offsetDistance", len: 0, typ: NTI115, name: "offsetDistance", sons: null}, 
{kind: 1, offset: "offsetPath", len: 0, typ: NTI115, name: "offsetPath", sons: null}, 
{kind: 1, offset: "offsetRotate", len: 0, typ: NTI115, name: "offsetRotate", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI115, name: "opacity", sons: null}, 
{kind: 1, offset: "order", len: 0, typ: NTI115, name: "order", sons: null}, 
{kind: 1, offset: "orphans", len: 0, typ: NTI115, name: "orphans", sons: null}, 
{kind: 1, offset: "outline", len: 0, typ: NTI115, name: "outline", sons: null}, 
{kind: 1, offset: "outlineColor", len: 0, typ: NTI115, name: "outlineColor", sons: null}, 
{kind: 1, offset: "outlineOffset", len: 0, typ: NTI115, name: "outlineOffset", sons: null}, 
{kind: 1, offset: "outlineStyle", len: 0, typ: NTI115, name: "outlineStyle", sons: null}, 
{kind: 1, offset: "outlineWidth", len: 0, typ: NTI115, name: "outlineWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI115, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowAnchor", len: 0, typ: NTI115, name: "overflowAnchor", sons: null}, 
{kind: 1, offset: "overflowBlock", len: 0, typ: NTI115, name: "overflowBlock", sons: null}, 
{kind: 1, offset: "overflowInline", len: 0, typ: NTI115, name: "overflowInline", sons: null}, 
{kind: 1, offset: "overflowWrap", len: 0, typ: NTI115, name: "overflowWrap", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI115, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI115, name: "overflowY", sons: null}, 
{kind: 1, offset: "overscrollBehavior", len: 0, typ: NTI115, name: "overscrollBehavior", sons: null}, 
{kind: 1, offset: "overscrollBehaviorBlock", len: 0, typ: NTI115, name: "overscrollBehaviorBlock", sons: null}, 
{kind: 1, offset: "overscrollBehaviorInline", len: 0, typ: NTI115, name: "overscrollBehaviorInline", sons: null}, 
{kind: 1, offset: "overscrollBehaviorX", len: 0, typ: NTI115, name: "overscrollBehaviorX", sons: null}, 
{kind: 1, offset: "overscrollBehaviorY", len: 0, typ: NTI115, name: "overscrollBehaviorY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI115, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBlock", len: 0, typ: NTI115, name: "paddingBlock", sons: null}, 
{kind: 1, offset: "paddingBlockEnd", len: 0, typ: NTI115, name: "paddingBlockEnd", sons: null}, 
{kind: 1, offset: "paddingBlockStart", len: 0, typ: NTI115, name: "paddingBlockStart", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI115, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingInline", len: 0, typ: NTI115, name: "paddingInline", sons: null}, 
{kind: 1, offset: "paddingInlineEnd", len: 0, typ: NTI115, name: "paddingInlineEnd", sons: null}, 
{kind: 1, offset: "paddingInlineStart", len: 0, typ: NTI115, name: "paddingInlineStart", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI115, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI115, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI115, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI115, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI115, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pageBreakInside", len: 0, typ: NTI115, name: "pageBreakInside", sons: null}, 
{kind: 1, offset: "paintOrder", len: 0, typ: NTI115, name: "paintOrder", sons: null}, 
{kind: 1, offset: "perspective", len: 0, typ: NTI115, name: "perspective", sons: null}, 
{kind: 1, offset: "perspectiveOrigin", len: 0, typ: NTI115, name: "perspectiveOrigin", sons: null}, 
{kind: 1, offset: "placeContent", len: 0, typ: NTI115, name: "placeContent", sons: null}, 
{kind: 1, offset: "placeItems", len: 0, typ: NTI115, name: "placeItems", sons: null}, 
{kind: 1, offset: "placeSelf", len: 0, typ: NTI115, name: "placeSelf", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI115, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI115, name: "position", sons: null}, 
{kind: 1, offset: "quotes", len: 0, typ: NTI115, name: "quotes", sons: null}, 
{kind: 1, offset: "resize", len: 0, typ: NTI115, name: "resize", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI115, name: "right", sons: null}, 
{kind: 1, offset: "rotate", len: 0, typ: NTI115, name: "rotate", sons: null}, 
{kind: 1, offset: "rowGap", len: 0, typ: NTI115, name: "rowGap", sons: null}, 
{kind: 1, offset: "scale", len: 0, typ: NTI115, name: "scale", sons: null}, 
{kind: 1, offset: "scrollBehavior", len: 0, typ: NTI115, name: "scrollBehavior", sons: null}, 
{kind: 1, offset: "scrollMargin", len: 0, typ: NTI115, name: "scrollMargin", sons: null}, 
{kind: 1, offset: "scrollMarginBlock", len: 0, typ: NTI115, name: "scrollMarginBlock", sons: null}, 
{kind: 1, offset: "scrollMarginBlockEnd", len: 0, typ: NTI115, name: "scrollMarginBlockEnd", sons: null}, 
{kind: 1, offset: "scrollMarginBlockStart", len: 0, typ: NTI115, name: "scrollMarginBlockStart", sons: null}, 
{kind: 1, offset: "scrollMarginBottom", len: 0, typ: NTI115, name: "scrollMarginBottom", sons: null}, 
{kind: 1, offset: "scrollMarginInline", len: 0, typ: NTI115, name: "scrollMarginInline", sons: null}, 
{kind: 1, offset: "scrollMarginInlineEnd", len: 0, typ: NTI115, name: "scrollMarginInlineEnd", sons: null}, 
{kind: 1, offset: "scrollMarginInlineStart", len: 0, typ: NTI115, name: "scrollMarginInlineStart", sons: null}, 
{kind: 1, offset: "scrollMarginLeft", len: 0, typ: NTI115, name: "scrollMarginLeft", sons: null}, 
{kind: 1, offset: "scrollMarginRight", len: 0, typ: NTI115, name: "scrollMarginRight", sons: null}, 
{kind: 1, offset: "scrollMarginTop", len: 0, typ: NTI115, name: "scrollMarginTop", sons: null}, 
{kind: 1, offset: "scrollPadding", len: 0, typ: NTI115, name: "scrollPadding", sons: null}, 
{kind: 1, offset: "scrollPaddingBlock", len: 0, typ: NTI115, name: "scrollPaddingBlock", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockEnd", len: 0, typ: NTI115, name: "scrollPaddingBlockEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockStart", len: 0, typ: NTI115, name: "scrollPaddingBlockStart", sons: null}, 
{kind: 1, offset: "scrollPaddingBottom", len: 0, typ: NTI115, name: "scrollPaddingBottom", sons: null}, 
{kind: 1, offset: "scrollPaddingInline", len: 0, typ: NTI115, name: "scrollPaddingInline", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineEnd", len: 0, typ: NTI115, name: "scrollPaddingInlineEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineStart", len: 0, typ: NTI115, name: "scrollPaddingInlineStart", sons: null}, 
{kind: 1, offset: "scrollPaddingLeft", len: 0, typ: NTI115, name: "scrollPaddingLeft", sons: null}, 
{kind: 1, offset: "scrollPaddingRight", len: 0, typ: NTI115, name: "scrollPaddingRight", sons: null}, 
{kind: 1, offset: "scrollPaddingTop", len: 0, typ: NTI115, name: "scrollPaddingTop", sons: null}, 
{kind: 1, offset: "scrollSnapAlign", len: 0, typ: NTI115, name: "scrollSnapAlign", sons: null}, 
{kind: 1, offset: "scrollSnapStop", len: 0, typ: NTI115, name: "scrollSnapStop", sons: null}, 
{kind: 1, offset: "scrollSnapType", len: 0, typ: NTI115, name: "scrollSnapType", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI115, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI115, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI115, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarColor", len: 0, typ: NTI115, name: "scrollbarColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI115, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI115, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI115, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI115, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI115, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "scrollbarWidth", len: 0, typ: NTI115, name: "scrollbarWidth", sons: null}, 
{kind: 1, offset: "shapeImageThreshold", len: 0, typ: NTI115, name: "shapeImageThreshold", sons: null}, 
{kind: 1, offset: "shapeMargin", len: 0, typ: NTI115, name: "shapeMargin", sons: null}, 
{kind: 1, offset: "shapeOutside", len: 0, typ: NTI115, name: "shapeOutside", sons: null}, 
{kind: 1, offset: "tabSize", len: 0, typ: NTI115, name: "tabSize", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI115, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI115, name: "textAlign", sons: null}, 
{kind: 1, offset: "textAlignLast", len: 0, typ: NTI115, name: "textAlignLast", sons: null}, 
{kind: 1, offset: "textCombineUpright", len: 0, typ: NTI115, name: "textCombineUpright", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI115, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textDecorationColor", len: 0, typ: NTI115, name: "textDecorationColor", sons: null}, 
{kind: 1, offset: "textDecorationLine", len: 0, typ: NTI115, name: "textDecorationLine", sons: null}, 
{kind: 1, offset: "textDecorationSkipInk", len: 0, typ: NTI115, name: "textDecorationSkipInk", sons: null}, 
{kind: 1, offset: "textDecorationStyle", len: 0, typ: NTI115, name: "textDecorationStyle", sons: null}, 
{kind: 1, offset: "textDecorationThickness", len: 0, typ: NTI115, name: "textDecorationThickness", sons: null}, 
{kind: 1, offset: "textEmphasis", len: 0, typ: NTI115, name: "textEmphasis", sons: null}, 
{kind: 1, offset: "textEmphasisColor", len: 0, typ: NTI115, name: "textEmphasisColor", sons: null}, 
{kind: 1, offset: "textEmphasisPosition", len: 0, typ: NTI115, name: "textEmphasisPosition", sons: null}, 
{kind: 1, offset: "textEmphasisStyle", len: 0, typ: NTI115, name: "textEmphasisStyle", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI115, name: "textIndent", sons: null}, 
{kind: 1, offset: "textJustify", len: 0, typ: NTI115, name: "textJustify", sons: null}, 
{kind: 1, offset: "textOrientation", len: 0, typ: NTI115, name: "textOrientation", sons: null}, 
{kind: 1, offset: "textOverflow", len: 0, typ: NTI115, name: "textOverflow", sons: null}, 
{kind: 1, offset: "textRendering", len: 0, typ: NTI115, name: "textRendering", sons: null}, 
{kind: 1, offset: "textShadow", len: 0, typ: NTI115, name: "textShadow", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI115, name: "textTransform", sons: null}, 
{kind: 1, offset: "textUnderlineOffset", len: 0, typ: NTI115, name: "textUnderlineOffset", sons: null}, 
{kind: 1, offset: "textUnderlinePosition", len: 0, typ: NTI115, name: "textUnderlinePosition", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI115, name: "top", sons: null}, 
{kind: 1, offset: "touchAction", len: 0, typ: NTI115, name: "touchAction", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI115, name: "transform", sons: null}, 
{kind: 1, offset: "transformBox", len: 0, typ: NTI115, name: "transformBox", sons: null}, 
{kind: 1, offset: "transformOrigin", len: 0, typ: NTI115, name: "transformOrigin", sons: null}, 
{kind: 1, offset: "transformStyle", len: 0, typ: NTI115, name: "transformStyle", sons: null}, 
{kind: 1, offset: "transition", len: 0, typ: NTI115, name: "transition", sons: null}, 
{kind: 1, offset: "transitionDelay", len: 0, typ: NTI115, name: "transitionDelay", sons: null}, 
{kind: 1, offset: "transitionDuration", len: 0, typ: NTI115, name: "transitionDuration", sons: null}, 
{kind: 1, offset: "transitionProperty", len: 0, typ: NTI115, name: "transitionProperty", sons: null}, 
{kind: 1, offset: "transitionTimingFunction", len: 0, typ: NTI115, name: "transitionTimingFunction", sons: null}, 
{kind: 1, offset: "translate", len: 0, typ: NTI115, name: "translate", sons: null}, 
{kind: 1, offset: "unicodeBidi", len: 0, typ: NTI115, name: "unicodeBidi", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI115, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI115, name: "visibility", sons: null}, 
{kind: 1, offset: "whiteSpace", len: 0, typ: NTI115, name: "whiteSpace", sons: null}, 
{kind: 1, offset: "widows", len: 0, typ: NTI115, name: "widows", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI115, name: "width", sons: null}, 
{kind: 1, offset: "willChange", len: 0, typ: NTI115, name: "willChange", sons: null}, 
{kind: 1, offset: "wordBreak", len: 0, typ: NTI115, name: "wordBreak", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI115, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "writingMode", len: 0, typ: NTI115, name: "writingMode", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI115, name: "zIndex", sons: null}]};
NTI10167293.node = NNI10167293;
NTI10167293.base = NTI6608;
var NNI13647207 = {kind: 2, offset: 0, typ: null, name: null, len: 6, sons: {"0": {kind: 1, offset: 0, typ: NTI13647207, name: "pkReplace", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI13647207, name: "pkRemove", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI13647207, name: "pkAppend", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI13647207, name: "pkInsertBefore", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI13647207, name: "pkDetach", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI13647207, name: "pkSame", len: 0, sons: null}}};
NTI13647207.node = NNI13647207;
NTI10167610.base = NTI10167235;
NTI10167612.base = NTI10167235;
NTI10167614.base = NTI10167235;
var NNI10167233 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI10167233, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI10167233, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI10167233, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI10167233, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI10167233, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI10167233, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI10167233, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI10167233, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI10167233, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI10167233, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI10167233, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI10167233, name: "NotationNode", len: 0, sons: null}}};
NTI10167233.node = NNI10167233;
var NNI10167231 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI10167231.node = NNI10167231;
NTI10167231.base = NTI6608;
NTI10167229.base = NTI10167231;
NTI10167767.base = NTI10167243;
var NNI10167285 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "acceptCharset", len: 0, typ: NTI115, name: "acceptCharset", sons: null}, 
{kind: 1, offset: "action", len: 0, typ: NTI115, name: "action", sons: null}, 
{kind: 1, offset: "autocomplete", len: 0, typ: NTI115, name: "autocomplete", sons: null}, 
{kind: 1, offset: "elements", len: 0, typ: NTI10167767, name: "elements", sons: null}, 
{kind: 1, offset: "encoding", len: 0, typ: NTI115, name: "encoding", sons: null}, 
{kind: 1, offset: "enctype", len: 0, typ: NTI115, name: "enctype", sons: null}, 
{kind: 1, offset: "length", len: 0, typ: NTI144, name: "length", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI115, name: "method", sons: null}, 
{kind: 1, offset: "noValidate", len: 0, typ: NTI164, name: "noValidate", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI115, name: "target", sons: null}]};
NTI10167285.node = NNI10167285;
NTI10167285.base = NTI10167245;
NTI10167283.base = NTI10167285;
var NNI10167281 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defaultSelected", len: 0, typ: NTI164, name: "defaultSelected", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI164, name: "selected", sons: null}, 
{kind: 1, offset: "selectedIndex", len: 0, typ: NTI144, name: "selectedIndex", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI115, name: "text", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI115, name: "value", sons: null}]};
NTI10167281.node = NNI10167281;
NTI10167281.base = NTI10167245;
NTI10167279.base = NTI10167281;
NTI10167673.base = NTI10167279;
NTI10167675.base = NTI10167279;
var NNI10167245 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "className", len: 0, typ: NTI115, name: "className", sons: null}, 
{kind: 1, offset: "classList", len: 0, typ: NTI10167229, name: "classList", sons: null}, 
{kind: 1, offset: "checked", len: 0, typ: NTI164, name: "checked", sons: null}, 
{kind: 1, offset: "defaultChecked", len: 0, typ: NTI164, name: "defaultChecked", sons: null}, 
{kind: 1, offset: "defaultValue", len: 0, typ: NTI115, name: "defaultValue", sons: null}, 
{kind: 1, offset: "disabled", len: 0, typ: NTI164, name: "disabled", sons: null}, 
{kind: 1, offset: "form", len: 0, typ: NTI10167283, name: "form", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI115, name: "name", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI164, name: "readOnly", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI10167673, name: "options", sons: null}, 
{kind: 1, offset: "selectedOptions", len: 0, typ: NTI10167675, name: "selectedOptions", sons: null}, 
{kind: 1, offset: "clientWidth", len: 0, typ: NTI144, name: "clientWidth", sons: null}, 
{kind: 1, offset: "clientHeight", len: 0, typ: NTI144, name: "clientHeight", sons: null}, 
{kind: 1, offset: "contentEditable", len: 0, typ: NTI115, name: "contentEditable", sons: null}, 
{kind: 1, offset: "isContentEditable", len: 0, typ: NTI164, name: "isContentEditable", sons: null}, 
{kind: 1, offset: "dir", len: 0, typ: NTI115, name: "dir", sons: null}, 
{kind: 1, offset: "offsetHeight", len: 0, typ: NTI144, name: "offsetHeight", sons: null}, 
{kind: 1, offset: "offsetWidth", len: 0, typ: NTI144, name: "offsetWidth", sons: null}, 
{kind: 1, offset: "offsetLeft", len: 0, typ: NTI144, name: "offsetLeft", sons: null}, 
{kind: 1, offset: "offsetTop", len: 0, typ: NTI144, name: "offsetTop", sons: null}]};
NTI10167245.node = NNI10167245;
NTI10167245.base = NTI10167237;
NTI10167243.base = NTI10167245;
var NNI10167277 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI115, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI144, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI144, name: "y", sons: null}]};
NTI10167277.node = NNI10167277;
NTI10167277.base = NTI10167245;
NTI10167275.base = NTI10167277;
NTI10167651.base = NTI10167275;
NTI10167653.base = NTI10167283;
var NNI10167289 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "border", len: 0, typ: NTI144, name: "border", sons: null}, 
{kind: 1, offset: "complete", len: 0, typ: NTI164, name: "complete", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI144, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI144, name: "hspace", sons: null}, 
{kind: 1, offset: "lowsrc", len: 0, typ: NTI115, name: "lowsrc", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI115, name: "src", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI144, name: "vspace", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI144, name: "width", sons: null}]};
NTI10167289.node = NNI10167289;
NTI10167289.base = NTI10167245;
NTI10167287.base = NTI10167289;
NTI10167655.base = NTI10167287;
NTI10167657.base = NTI10167243;
var NNI10167273 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "height", len: 0, typ: NTI144, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI144, name: "hspace", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI115, name: "src", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI144, name: "width", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI115, name: "type", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI144, name: "vspace", sons: null}]};
NTI10167273.node = NNI10167273;
NTI10167273.base = NTI10167245;
NTI10167271.base = NTI10167273;
NTI10167659.base = NTI10167271;
var NNI10167269 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "target", len: 0, typ: NTI115, name: "target", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI115, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI144, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI144, name: "y", sons: null}]};
NTI10167269.node = NNI10167269;
NTI10167269.base = NTI10167245;
NTI10167267.base = NTI10167269;
NTI10167661.base = NTI10167267;
var NNI10168618 = {kind: 1, offset: "then", len: 0, typ: NTI10168619, name: "then", sons: null};
NTI10168618.node = NNI10168618;
NTI10167385.base = NTI10168618;
var NNI10168626 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ready", len: 0, typ: NTI10167385, name: "ready", sons: null}, 
{kind: 1, offset: "onloadingdone", len: 0, typ: NTI10168628, name: "onloadingdone", sons: null}]};
NTI10168626.node = NNI10168626;
NTI10167387.base = NTI10168626;
var NNI10167241 = {kind: 2, len: 23, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "activeElement", len: 0, typ: NTI10167243, name: "activeElement", sons: null}, 
{kind: 1, offset: "documentElement", len: 0, typ: NTI10167243, name: "documentElement", sons: null}, 
{kind: 1, offset: "alinkColor", len: 0, typ: NTI115, name: "alinkColor", sons: null}, 
{kind: 1, offset: "bgColor", len: 0, typ: NTI115, name: "bgColor", sons: null}, 
{kind: 1, offset: "body", len: 0, typ: NTI10167243, name: "body", sons: null}, 
{kind: 1, offset: "charset", len: 0, typ: NTI115, name: "charset", sons: null}, 
{kind: 1, offset: "cookie", len: 0, typ: NTI115, name: "cookie", sons: null}, 
{kind: 1, offset: "defaultCharset", len: 0, typ: NTI115, name: "defaultCharset", sons: null}, 
{kind: 1, offset: "fgColor", len: 0, typ: NTI115, name: "fgColor", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI10167243, name: "head", sons: null}, 
{kind: 1, offset: "lastModified", len: 0, typ: NTI115, name: "lastModified", sons: null}, 
{kind: 1, offset: "linkColor", len: 0, typ: NTI115, name: "linkColor", sons: null}, 
{kind: 1, offset: "referrer", len: 0, typ: NTI115, name: "referrer", sons: null}, 
{kind: 1, offset: "title", len: 0, typ: NTI115, name: "title", sons: null}, 
{kind: 1, offset: "URL", len: 0, typ: NTI115, name: "URL", sons: null}, 
{kind: 1, offset: "vlinkColor", len: 0, typ: NTI115, name: "vlinkColor", sons: null}, 
{kind: 1, offset: "anchors", len: 0, typ: NTI10167651, name: "anchors", sons: null}, 
{kind: 1, offset: "forms", len: 0, typ: NTI10167653, name: "forms", sons: null}, 
{kind: 1, offset: "images", len: 0, typ: NTI10167655, name: "images", sons: null}, 
{kind: 1, offset: "applets", len: 0, typ: NTI10167657, name: "applets", sons: null}, 
{kind: 1, offset: "embeds", len: 0, typ: NTI10167659, name: "embeds", sons: null}, 
{kind: 1, offset: "links", len: 0, typ: NTI10167661, name: "links", sons: null}, 
{kind: 1, offset: "fonts", len: 0, typ: NTI10167387, name: "fonts", sons: null}]};
NTI10167241.node = NNI10167241;
NTI10167241.base = NTI10167237;
NTI10167239.base = NTI10167241;
NTI10167291.base = NTI10167293;
var NNI10167237 = {kind: 2, len: 22, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI10167610, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI10167612, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI10167614, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI115, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI10167235, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI10167235, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI10167235, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI115, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI10167233, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI115, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI10167235, name: "parentNode", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI10167235, name: "content", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI10167235, name: "previousSibling", sons: null}, 
{kind: 1, offset: "ownerDocument", len: 0, typ: NTI10167239, name: "ownerDocument", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI115, name: "innerHTML", sons: null}, 
{kind: 1, offset: "outerHTML", len: 0, typ: NTI115, name: "outerHTML", sons: null}, 
{kind: 1, offset: "innerText", len: 0, typ: NTI115, name: "innerText", sons: null}, 
{kind: 1, offset: "textContent", len: 0, typ: NTI115, name: "textContent", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI10167291, name: "style", sons: null}, 
{kind: 1, offset: "baseURI", len: 0, typ: NTI115, name: "baseURI", sons: null}, 
{kind: 1, offset: "parentElement", len: 0, typ: NTI10167243, name: "parentElement", sons: null}, 
{kind: 1, offset: "isConnected", len: 0, typ: NTI164, name: "isConnected", sons: null}]};
NTI10167237.node = NNI10167237;
var NNI10167205 = {kind: 2, len: 23, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI10167388, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI10167392, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI10167396, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI10167400, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI10167404, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI10167408, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI10167412, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI10167416, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI10167420, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI10167424, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI10167428, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI10167432, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI10167436, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI10167440, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI10167444, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI10167448, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI10167452, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI10167456, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI10167460, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI10167464, name: "onunload", sons: null}, 
{kind: 1, offset: "onloadstart", len: 0, typ: NTI10167468, name: "onloadstart", sons: null}, 
{kind: 1, offset: "onprogress", len: 0, typ: NTI10167472, name: "onprogress", sons: null}, 
{kind: 1, offset: "onloadend", len: 0, typ: NTI10167476, name: "onloadend", sons: null}]};
NTI10167205.node = NNI10167205;
NTI10167205.base = NTI6608;
NTI10167237.base = NTI10167205;
NTI10167235.base = NTI10167237;
var NNI13387028 = {kind: 2, offset: 0, typ: null, name: null, len: 120, sons: {"0": {kind: 1, offset: 0, typ: NTI13387028, name: "#text", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI13387028, name: "#int", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI13387028, name: "#bool", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI13387028, name: "#vthunk", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI13387028, name: "#dthunk", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI13387028, name: "#component", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI13387028, name: "#verbatim", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI13387028, name: "html", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI13387028, name: "head", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI13387028, name: "title", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI13387028, name: "base", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI13387028, name: "link", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI13387028, name: "meta", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI13387028, name: "style", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI13387028, name: "script", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI13387028, name: "noscript", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI13387028, name: "body", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI13387028, name: "section", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI13387028, name: "nav", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI13387028, name: "article", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI13387028, name: "aside", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI13387028, name: "h1", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI13387028, name: "h2", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI13387028, name: "h3", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI13387028, name: "h4", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI13387028, name: "h5", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI13387028, name: "h6", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI13387028, name: "header", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI13387028, name: "footer", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI13387028, name: "address", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI13387028, name: "main", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI13387028, name: "p", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI13387028, name: "hr", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI13387028, name: "pre", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI13387028, name: "blockquote", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI13387028, name: "ol", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI13387028, name: "ul", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI13387028, name: "li", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI13387028, name: "dl", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI13387028, name: "dt", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI13387028, name: "dd", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI13387028, name: "figure", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI13387028, name: "figcaption", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI13387028, name: "div", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI13387028, name: "a", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI13387028, name: "em", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI13387028, name: "strong", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI13387028, name: "small", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI13387028, name: "s", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI13387028, name: "cite", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI13387028, name: "quote", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI13387028, name: "dfn", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI13387028, name: "abbr", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI13387028, name: "data", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI13387028, name: "time", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI13387028, name: "code", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI13387028, name: "var", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI13387028, name: "samp", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI13387028, name: "kdb", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI13387028, name: "sub", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI13387028, name: "sup", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI13387028, name: "i", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI13387028, name: "b", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI13387028, name: "u", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI13387028, name: "mark", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI13387028, name: "ruby", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI13387028, name: "rt", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI13387028, name: "rp", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI13387028, name: "bdi", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI13387028, name: "dbo", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI13387028, name: "span", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI13387028, name: "br", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI13387028, name: "wbr", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI13387028, name: "ins", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI13387028, name: "del", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI13387028, name: "img", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI13387028, name: "iframe", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI13387028, name: "embed", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI13387028, name: "object", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI13387028, name: "param", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI13387028, name: "video", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI13387028, name: "audio", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI13387028, name: "source", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI13387028, name: "track", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI13387028, name: "canvas", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI13387028, name: "map", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI13387028, name: "area", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI13387028, name: "svg", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI13387028, name: "math", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI13387028, name: "path", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI13387028, name: "circle", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI13387028, name: "table", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI13387028, name: "caption", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI13387028, name: "colgroup", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI13387028, name: "col", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI13387028, name: "tbody", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI13387028, name: "thead", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI13387028, name: "tfoot", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI13387028, name: "tr", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI13387028, name: "td", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI13387028, name: "th", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI13387028, name: "form", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI13387028, name: "fieldset", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI13387028, name: "legend", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI13387028, name: "label", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI13387028, name: "input", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI13387028, name: "button", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI13387028, name: "select", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI13387028, name: "datalist", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI13387028, name: "optgroup", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI13387028, name: "option", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI13387028, name: "textarea", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI13387028, name: "keygen", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI13387028, name: "output", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI13387028, name: "progress", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI13387028, name: "meter", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI13387028, name: "details", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI13387028, name: "summary", len: 0, sons: null}, 
"118": {kind: 1, offset: 118, typ: NTI13387028, name: "command", len: 0, sons: null}, 
"119": {kind: 1, offset: 119, typ: NTI13387028, name: "menu", len: 0, sons: null}}};
NTI13387028.node = NNI13387028;
NTI13390037.base = NTI13390022;
NTI13390039.base = NTI115;
var NNI13387152 = {kind: 2, offset: 0, typ: null, name: null, len: 37, sons: {"0": {kind: 1, offset: 0, typ: NTI13387152, name: "onclick", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI13387152, name: "oncontextmenu", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI13387152, name: "ondblclick", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI13387152, name: "onkeyup", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI13387152, name: "onkeydown", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI13387152, name: "onkeypressed", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI13387152, name: "onfocus", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI13387152, name: "onblur", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI13387152, name: "onchange", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI13387152, name: "onscroll", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI13387152, name: "onmousedown", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI13387152, name: "onmouseenter", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI13387152, name: "onmouseleave", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI13387152, name: "onmousemove", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI13387152, name: "onmouseout", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI13387152, name: "onmouseover", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI13387152, name: "onmouseup", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI13387152, name: "ondrag", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI13387152, name: "ondragend", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI13387152, name: "ondragenter", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI13387152, name: "ondragleave", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI13387152, name: "ondragover", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI13387152, name: "ondragstart", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI13387152, name: "ondrop", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI13387152, name: "onsubmit", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI13387152, name: "oninput", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI13387152, name: "onanimationstart", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI13387152, name: "onanimationend", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI13387152, name: "onanimationiteration", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI13387152, name: "onkeyupenter", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI13387152, name: "onkeyuplater", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI13387152, name: "onload", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI13387152, name: "ontransitioncancel", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI13387152, name: "ontransitionend", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI13387152, name: "ontransitionrun", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI13387152, name: "ontransitionstart", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI13387152, name: "onwheel", len: 0, sons: null}}};
NTI13387152.node = NNI13387152;
var NNI13390030 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI13387152, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI13390074, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI13390076, name: "Field2", sons: null}]};
NTI13390030.node = NNI13390030;
NTI13390018.base = NTI13390030;
var NNI13343323 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI13343323.node = NNI13343323;
NTI13343324.base = NTI13343323;
var NNI13390031 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI13387028, name: "kind", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI144, name: "index", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI115, name: "id", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI115, name: "class", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI115, name: "text", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI13390037, name: "kids", sons: null}, 
{kind: 1, offset: "attrs", len: 0, typ: NTI13390039, name: "attrs", sons: null}, 
{kind: 1, offset: "events", len: 0, typ: NTI13390018, name: "events", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI13343324, name: "style", sons: null}, 
{kind: 1, offset: "dom", len: 0, typ: NTI10167235, name: "dom", sons: null}]};
NTI13390031.node = NNI13390031;
NTI13390031.base = NTI6608;
NTI13390022.base = NTI13390031;
var NNI13647209 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "k", len: 0, typ: NTI13647207, name: "k", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI10167235, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI10167235, name: "current", sons: null}, 
{kind: 1, offset: "newNode", len: 0, typ: NTI13390022, name: "newNode", sons: null}, 
{kind: 1, offset: "oldNode", len: 0, typ: NTI13390022, name: "oldNode", sons: null}]};
NTI13647209.node = NNI13647209;
var NNI13647211 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI13390022, name: "parent", sons: null}, 
{kind: 1, offset: "newChild", len: 0, typ: NTI13390022, name: "newChild", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI144, name: "pos", sons: null}]};
NTI13647211.node = NNI13647211;
NTI14631038.base = NTI144;
NTI10531016.base = NTI105;
NTI10531018.base = NTI105;
var NNI14631028 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "lat", len: 0, typ: NTI10531016, name: "lat", sons: null}, 
{kind: 1, offset: "lng", len: 0, typ: NTI10531018, name: "lng", sons: null}]};
NTI14631028.node = NNI14631028;
NTI14631017.base = NTI14631028;
NTI14631040.base = NTI14631017;
var NNI14631032 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "linkId", len: 0, typ: NTI144, name: "linkId", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI113, name: "name", sons: null}, 
{kind: 1, offset: "cityId", len: 0, typ: NTI144, name: "cityId", sons: null}, 
{kind: 1, offset: "districtId", len: 0, typ: NTI144, name: "districtId", sons: null}, 
{kind: 1, offset: "postalCode", len: 0, typ: NTI113, name: "postalCode", sons: null}, 
{kind: 1, offset: "neighborLinks", len: 0, typ: NTI14631038, name: "neighborLinks", sons: null}, 
{kind: 1, offset: "geometry", len: 0, typ: NTI14631040, name: "geometry", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI164, name: "readOnly", sons: null}, 
{kind: 1, offset: "addedToMap", len: 0, typ: NTI164, name: "addedToMap", sons: null}, 
{kind: 1, offset: "addedToSector", len: 0, typ: NTI164, name: "addedToSector", sons: null}]};
NTI14631032.node = NNI14631032;
NTI14631019.base = NTI14631032;
var NNI14631135 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI10217269, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI144, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI14631019, name: "Field2", sons: null}]};
NTI14631135.node = NNI14631135;
NTI14631132.base = NTI14631135;
var NNI14631129 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI14631132, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI144, name: "counter", sons: null}]};
NTI14631129.node = NNI14631129;
NTI14631048.base = NTI14631019;
NTI14631062.base = NTI14631019;
var NNI14631076 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI10217269, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI144, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI113, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI14631062, name: "Field3", sons: null}]};
NTI14631076.node = NNI14631076;
NTI14631073.base = NTI14631076;
var NNI14631070 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI14631073, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI144, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI144, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI144, name: "last", sons: null}]};
NTI14631070.node = NNI14631070;
var NNI14631053 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "postalCode", len: 0, typ: NTI113, name: "postalCode", sons: null}, 
{kind: 1, offset: "district", len: 0, typ: NTI113, name: "district", sons: null}, 
{kind: 1, offset: "folkDistrict", len: 0, typ: NTI113, name: "folkDistrict", sons: null}, 
{kind: 1, offset: "city", len: 0, typ: NTI113, name: "city", sons: null}, 
{kind: 1, offset: "pFix", len: 0, typ: NTI144, name: "pFix", sons: null}, 
{kind: 1, offset: "streets", len: 0, typ: NTI14631070, name: "streets", sons: null}, 
{kind: 1, offset: "shownOnMap", len: 0, typ: NTI164, name: "shownOnMap", sons: null}, 
{kind: 1, offset: "exclude", len: 0, typ: NTI164, name: "exclude", sons: null}]};
NTI14631053.node = NNI14631053;
NTI14631023.base = NTI14631053;
var NNI14631046 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI113, name: "name", sons: null}, 
{kind: 1, offset: "links", len: 0, typ: NTI14631048, name: "links", sons: null}, 
{kind: 1, offset: "sector", len: 0, typ: NTI14631023, name: "sector", sons: null}, 
{kind: 1, offset: "totalFamilies", len: 0, typ: NTI6604, name: "totalFamilies", sons: null}]};
NTI14631046.node = NNI14631046;
NTI14631021.base = NTI14631046;
var NNI14631158 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI10217269, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI144, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI113, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI14631021, name: "Field3", sons: null}]};
NTI14631158.node = NNI14631158;
NTI14631155.base = NTI14631158;
var NNI14631152 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI14631155, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI144, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI144, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI144, name: "last", sons: null}]};
NTI14631152.node = NNI14631152;
var NNI10410097 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI10410097.node = NNI10410097;
var NNI6954 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6954.node = NNI6954;
NTI6954.base = NTI6608;
NTI10410097.base = NTI6954;
NTI10410085.base = NTI10410097;
var NNI14631184 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI10217269, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI113, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI10410085, name: "Field2", sons: null}]};
NTI14631184.node = NNI14631184;
NTI14631181.base = NTI14631184;
var NNI14631178 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI14631181, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI144, name: "counter", sons: null}]};
NTI14631178.node = NNI14631178;
var NNI14631207 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI10217269, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI144, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI113, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI14631023, name: "Field3", sons: null}]};
NTI14631207.node = NNI14631207;
NTI14631204.base = NTI14631207;
var NNI14631201 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI14631204, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI144, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI144, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI144, name: "last", sons: null}]};
NTI14631201.node = NNI14631201;
var NNI14631233 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI10217269, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI113, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI144, name: "Field2", sons: null}]};
NTI14631233.node = NNI14631233;
NTI14631230.base = NTI14631233;
var NNI14631227 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI14631230, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI144, name: "counter", sons: null}]};
NTI14631227.node = NNI14631227;
var NNI14631119 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "allLinks", len: 0, typ: NTI14631129, name: "allLinks", sons: null}, 
{kind: 1, offset: "allStreets", len: 0, typ: NTI14631152, name: "allStreets", sons: null}, 
{kind: 1, offset: "cachedTiles", len: 0, typ: NTI14631178, name: "cachedTiles", sons: null}, 
{kind: 1, offset: "allSectors", len: 0, typ: NTI14631201, name: "allSectors", sons: null}, 
{kind: 1, offset: "lastPostfix", len: 0, typ: NTI14631227, name: "lastPostfix", sons: null}]};
NTI14631119.node = NNI14631119;
NTI14631027.base = NTI14631119;
NTI11993237.base = NTI11993276;
NTI11993233.base = NTI11993268;
NTI11993231.base = NTI11993265;
NTI11993229.base = NTI11993262;
var NNI11993204 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI11993204, name: "Monday", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI11993204, name: "Tuesday", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI11993204, name: "Wednesday", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI11993204, name: "Thursday", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI11993204, name: "Friday", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI11993204, name: "Saturday", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI11993204, name: "Sunday", len: 0, sons: null}}};
NTI11993204.node = NNI11993204;
NTI11993235.base = NTI11993272;
var NNI11993315 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "zonedTimeFromTimeImpl", len: 0, typ: NTI11993316, name: "zonedTimeFromTimeImpl", sons: null}, 
{kind: 1, offset: "zonedTimeFromAdjTimeImpl", len: 0, typ: NTI11993320, name: "zonedTimeFromAdjTimeImpl", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI113, name: "name", sons: null}]};
NTI11993315.node = NNI11993315;
NTI11993251.base = NTI11993315;
var NNI11993241 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nanosecond", len: 0, typ: NTI11993237, name: "nanosecond", sons: null}, 
{kind: 1, offset: "second", len: 0, typ: NTI11993233, name: "second", sons: null}, 
{kind: 1, offset: "minute", len: 0, typ: NTI11993231, name: "minute", sons: null}, 
{kind: 1, offset: "hour", len: 0, typ: NTI11993229, name: "hour", sons: null}, 
{kind: 1, offset: "monthdayZero", len: 0, typ: NTI144, name: "monthdayZero", sons: null}, 
{kind: 1, offset: "monthZero", len: 0, typ: NTI144, name: "monthZero", sons: null}, 
{kind: 1, offset: "year", len: 0, typ: NTI144, name: "year", sons: null}, 
{kind: 1, offset: "weekday", len: 0, typ: NTI11993204, name: "weekday", sons: null}, 
{kind: 1, offset: "yearday", len: 0, typ: NTI11993235, name: "yearday", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI164, name: "isDst", sons: null}, 
{kind: 1, offset: "timezone", len: 0, typ: NTI11993251, name: "timezone", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI144, name: "utcOffset", sons: null}]};
NTI11993241.node = NNI11993241;
NTI11993241.base = NTI6608;
var NNI11993239 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI152, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI11993237, name: "nanosecond", sons: null}]};
NTI11993239.node = NNI11993239;
var NNI11993243 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI152, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI11993237, name: "nanosecond", sons: null}]};
NTI11993243.node = NNI11993243;
NTI11993227.base = NTI11993259;
var NNI11993202 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI11993202, name: "January", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI11993202, name: "February", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI11993202, name: "March", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI11993202, name: "April", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI11993202, name: "May", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI11993202, name: "June", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI11993202, name: "July", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI11993202, name: "August", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI11993202, name: "September", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI11993202, name: "October", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI11993202, name: "November", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI11993202, name: "December", len: 0, sons: null}}};
NTI11993202.node = NNI11993202;
var NNI12015039 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI11993227, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI11993202, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI144, name: "Field2", sons: null}]};
NTI12015039.node = NNI12015039;
var NNI11993253 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "time", len: 0, typ: NTI11993239, name: "time", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI144, name: "utcOffset", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI164, name: "isDst", sons: null}]};
NTI11993253.node = NNI11993253;
var NNI11426054 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI11426054, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI11426054, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI11426054, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI11426054, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI11426054, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI11426054, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI11426054, name: "JArray", len: 0, sons: null}}};
NTI11426054.node = NNI11426054;
var NNI11426087 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI10217269, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI144, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI113, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI11426056, name: "Field3", sons: null}]};
NTI11426087.node = NNI11426087;
NTI11426084.base = NTI11426087;
var NNI11426081 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI11426084, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI144, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI144, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI144, name: "last", sons: null}]};
NTI11426081.node = NNI11426081;
NTI11426098.base = NTI11426056;
var NNI11426058 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "isUnquoted", len: 0, typ: NTI164, name: "isUnquoted", sons: null}, 
{kind: 3, offset: "kind", len: 7, typ: NTI11426054, name: "kind", sons: [[setConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI113, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI180, name: "num", sons: null}], 
[setConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI105, name: "fnum", sons: null}], 
[setConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI164, name: "bval", sons: null}], 
[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI11426081, name: "fields", sons: null}], 
[setConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI11426098, name: "elems", sons: null}]]}]};
NTI11426058.node = NNI11426058;
NTI11426056.base = NTI11426058;
var NNI6851 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6851.node = NNI6851;
NTI6851.base = NTI6819;
var NNI4275011 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI4020232, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI144, name: "b", sons: null}]};
NTI4275011.node = NNI4275011;
NTI13425125.base = NTI115;
var NNI10531036 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "lat", len: 0, typ: NTI10531016, name: "lat", sons: null}, 
{kind: 1, offset: "lng", len: 0, typ: NTI10531018, name: "lng", sons: null}]};
NTI10531036.node = NNI10531036;
NTI10531036.base = NTI10166070;
var NNI15740011 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI113, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI113, name: "b", sons: null}]};
NTI15740011.node = NNI15740011;
var NNI14360047 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "jsonattributes", len: 0, typ: NTI144, name: "jsonattributes", sons: null}, 
{kind: 1, offset: "mode", len: 0, typ: NTI115, name: "mode", sons: null}, 
{kind: 1, offset: "prox", len: 0, typ: NTI115, name: "prox", sons: null}, 
{kind: 1, offset: "maxResults", len: 0, typ: NTI144, name: "maxResults", sons: null}, 
{kind: 1, offset: "additionaldata", len: 0, typ: NTI115, name: "additionaldata", sons: null}, 
{kind: 1, offset: "locationattributes", len: 0, typ: NTI115, name: "locationattributes", sons: null}]};
NTI14360047.node = NNI14360047;
var NNI14360045 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI14360045.node = NNI14360045;
NTI14360045.base = NTI10166070;
NTI14360047.base = NTI14360045;
NTI16305185.base = NTI14631017;
NTI16360287.base = NTI144;
NTI16360502.base = NTI144;
NTI16360507.base = NTI144;
NTI16360516.base = NTI144;
var NNI10626089 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onAttach", len: 0, typ: NTI10626090, name: "onAttach", sons: null}, 
{kind: 1, offset: "onDetach", len: 0, typ: NTI10626096, name: "onDetach", sons: null}]};
NTI10626089.node = NNI10626089;
NTI10626089.base = NTI10166070;
var NNI10626076 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "strokeColor", len: 0, typ: NTI115, name: "strokeColor", sons: null}, 
{kind: 1, offset: "fillColor", len: 0, typ: NTI115, name: "fillColor", sons: null}, 
{kind: 1, offset: "lineWidth", len: 0, typ: NTI144, name: "lineWidth", sons: null}]};
NTI10626076.node = NNI10626076;
var NNI10626056 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI10626056.node = NNI10626056;
var NNI10516098 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI10516098.node = NNI10516098;
var NNI10167299 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "bubbles", len: 0, typ: NTI164, name: "bubbles", sons: null}, 
{kind: 1, offset: "cancelBubble", len: 0, typ: NTI164, name: "cancelBubble", sons: null}, 
{kind: 1, offset: "cancelable", len: 0, typ: NTI164, name: "cancelable", sons: null}, 
{kind: 1, offset: "composed", len: 0, typ: NTI164, name: "composed", sons: null}, 
{kind: 1, offset: "currentTarget", len: 0, typ: NTI10167235, name: "currentTarget", sons: null}, 
{kind: 1, offset: "defaultPrevented", len: 0, typ: NTI164, name: "defaultPrevented", sons: null}, 
{kind: 1, offset: "eventPhase", len: 0, typ: NTI144, name: "eventPhase", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI10167235, name: "target", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI115, name: "type", sons: null}, 
{kind: 1, offset: "isTrusted", len: 0, typ: NTI164, name: "isTrusted", sons: null}]};
NTI10167299.node = NNI10167299;
NTI10167299.base = NTI6608;
NTI10516098.base = NTI10167299;
NTI10626056.base = NTI10516098;
NTI10626076.base = NTI10626056;
NTI10626048.base = NTI10626076;
var NNI10626081 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "style", len: 0, typ: NTI10626048, name: "style", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI144, name: "zIndex", sons: null}]};
NTI10626081.node = NNI10626081;
NTI10626081.base = NTI10166070;
var NNI10826020 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI105, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI105, name: "Field1", sons: null}]};
NTI10826020.node = NNI10826020;
var NNI16610067 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI144, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI144, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI144, name: "Field2", sons: null}]};
NTI16610067.node = NNI16610067;
var NNI10826118 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI144, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI144, name: "Field1", sons: null}]};
NTI10826118.node = NNI10826118;
var NNI10531040 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI10531040.node = NNI10531040;
NTI10531040.base = NTI10166070;
NTI10531024.base = NTI10531040;
NTI10615004.base = NTI10531024;
NTI8500043.base = NTI113;
var NNI14360055 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "searchtext", len: 0, typ: NTI115, name: "searchtext", sons: null}, 
{kind: 1, offset: "jsonattributes", len: 0, typ: NTI144, name: "jsonattributes", sons: null}, 
{kind: 1, offset: "country", len: 0, typ: NTI115, name: "country", sons: null}, 
{kind: 1, offset: "state", len: 0, typ: NTI115, name: "state", sons: null}, 
{kind: 1, offset: "additionaldata", len: 0, typ: NTI115, name: "additionaldata", sons: null}]};
NTI14360055.node = NNI14360055;
NTI14360055.base = NTI14360045;
var NNI10626085 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "style", len: 0, typ: NTI10626048, name: "style", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI144, name: "zIndex", sons: null}]};
NTI10626085.node = NNI10626085;
NTI10626085.base = NTI10166070;
function makeNimstrLit(c_265062) {
      var ln = c_265062.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_265062.charCodeAt(i);
  }
  return result;
  

  
}
function cstrToNimstr(c_265079) {
      var ln = c_265079.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_265079.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_265079.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);
function nimCopy(dest_280023, src_280024, ti_280025) {
  var result_285219 = null;

    switch (ti_280025.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_275401(ti_280025))) {
      result_285219 = src_280024;
      }
      else {
        result_285219 = [src_280024[0], src_280024[1]];
      }
      
      break;
    case 19:
            if (dest_280023 === null || dest_280023 === undefined) {
        dest_280023 = {};
      }
      else {
        for (var key in dest_280023) { delete dest_280023[key]; }
      }
      for (var key in src_280024) { dest_280023[key] = src_280024[key]; }
      result_285219 = dest_280023;
    
      break;
    case 18:
    case 17:
      if (!((ti_280025.base == null))) {
      result_285219 = nimCopy(dest_280023, src_280024, ti_280025.base);
      }
      else {
      if ((ti_280025.kind == 17)) {
      result_285219 = (dest_280023 === null || dest_280023 === undefined) ? {m_type: ti_280025} : dest_280023;
      }
      else {
        result_285219 = (dest_280023 === null || dest_280023 === undefined) ? {} : dest_280023;
      }
      }
      nimCopyAux(result_285219, src_280024, ti_280025.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_280024 === null) {
        result_285219 = null;
      }
      else {
        if (dest_280023 === null || dest_280023 === undefined) {
          dest_280023 = new Array(src_280024.length);
        }
        else {
          dest_280023.length = src_280024.length;
        }
        result_285219 = dest_280023;
        for (var i = 0; i < src_280024.length; ++i) {
          result_285219[i] = nimCopy(result_285219[i], src_280024[i], ti_280025.base);
        }
      }
    
      break;
    case 28:
            if (src_280024 !== null) {
        result_285219 = src_280024.slice(0);
      }
    
      break;
    default: 
      result_285219 = src_280024;
      break;
    }

  return result_285219;

}
function toJSStr(s_265096) {
                    var Tmp5;
            var Tmp7;

  var result_265097 = null;

    var res_265170 = newSeq_265128((s_265096).length);
    var i_265172 = 0;
    var j_265174 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_265172 < (s_265096).length)) break L2;
          var c_265175 = s_265096[i_265172];
          if ((c_265175 < 128)) {
          res_265170[j_265174] = String.fromCharCode(c_265175);
          i_265172 += 1;
          }
          else {
            var helper_265198 = newSeq_265128(0);
            L3: do {
                L4: while (true) {
                if (!true) break L4;
                  var code_265199 = c_265175.toString(16);
                  if ((((code_265199) == null ? 0 : (code_265199).length) == 1)) {
                  helper_265198.push("%0");;
                  }
                  else {
                  helper_265198.push("%");;
                  }
                  
                  helper_265198.push(code_265199);;
                  i_265172 += 1;
                    if (((s_265096).length <= i_265172)) Tmp5 = true; else {                      Tmp5 = (s_265096[i_265172] < 128);                    }                  if (Tmp5) {
                  break L3;
                  }
                  
                  c_265175 = s_265096[i_265172];
                }
            } while(false);
++excHandler;
            Tmp7 = framePtr;
            try {
            res_265170[j_265174] = decodeURIComponent(helper_265198.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp7;
            res_265170[j_265174] = helper_265198.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp7;
            }
          }
          
          j_265174 += 1;
        }
    } while(false);
    if (res_265170.length < j_265174) { for (var i=res_265170.length;i<j_265174;++i) res_265170.push(null); }
               else { res_265170.length = j_265174; };
    result_265097 = res_265170.join("");

  return result_265097;

}
function raiseException(e_230218, ename_230219) {
    e_230218.name = ename_230219;
    if ((excHandler == 0)) {
    unhandledException(e_230218);
    }
    
    throw e_230218;

  
}
function chckIndx(i_290086, a_290087, b_290088) {
      var Tmp1;

  var result_290089 = 0;

  BeforeRet: do {
      if (!(a_290087 <= i_290086)) Tmp1 = false; else {        Tmp1 = (i_290086 <= b_290088);      }    if (Tmp1) {
    result_290089 = i_290086;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_290086, a_290087, b_290088);
    }
    
  } while (false);

  return result_290089;

}
function subInt(a_270437, b_270438) {
        var result = a_270437 - b_270438;
    checkOverflowInt(result);
    return result;
  

  
}
function addInt(a_270419, b_270420) {
        var result = a_270419 + b_270420;
    checkOverflowInt(result);
    return result;
  

  
}
function divInt(a_270473, b_270474) {
        if (b_270474 == 0) raiseDivByZero();
    if (b_270474 == -1 && a_270473 == 2147483647) raiseOverflow();
    return Math.trunc(a_270473 / b_270474);
  

  
}
function mulInt(a_270455, b_270456) {
        var result = a_270455 * b_270456;
    checkOverflowInt(result);
    return result;
  

  
}
function chckRange(i_295016, a_295017, b_295018) {
      var Tmp1;

  var result_295019 = 0;

  BeforeRet: do {
      if (!(a_295017 <= i_295016)) Tmp1 = false; else {        Tmp1 = (i_295016 <= b_295018);      }    if (Tmp1) {
    result_295019 = i_295016;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_295019;

}
function nimMax(a_270821, b_270822) {
    var Tmp1;

  var result_270823 = 0;

  BeforeRet: do {
    if ((b_270822 <= a_270821)) {
    Tmp1 = a_270821;
    }
    else {
    Tmp1 = b_270822;
    }
    
    result_270823 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_270823;

}
function nimMin(a_270803, b_270804) {
    var Tmp1;

  var result_270805 = 0;

  BeforeRet: do {
    if ((a_270803 <= b_270804)) {
    Tmp1 = a_270803;
    }
    else {
    Tmp1 = b_270804;
    }
    
    result_270805 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_270805;

}
function mnewString(len_270044) {
        return new Array(len_270044);
  

  
}
var ConstSet2 = setConstr(13, 10);
function modInt(a_270491, b_270492) {
        if (b_270492 == 0) raiseDivByZero();
    if (b_270492 == -1 && a_270491 == 2147483647) raiseOverflow();
    return Math.trunc(a_270491 % b_270492);
  

  
}
function eqStrings(a_270222, b_270223) {
        if (a_270222 == b_270223) return true;
    if (a_270222 === null && b_270223.length == 0) return true;
    if (b_270223 === null && a_270222.length == 0) return true;
    if ((!a_270222) || (!b_270223)) return false;
    var alen = a_270222.length;
    if (alen != b_270223.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_270222[i] != b_270223[i]) return false;
    return true;
  

  
}
    var toLowerRanges_1840223 = [65, 90, 532, 192, 214, 532, 216, 222, 532, 393, 394, 705, 433, 434, 717, 904, 906, 537, 910, 911, 563, 913, 929, 532, 931, 939, 532, 1021, 1023, 370, 1024, 1039, 580, 1040, 1071, 532, 1329, 1366, 548, 4256, 4293, 7764, 5024, 5103, 39364, 5104, 5109, 508, 7312, 7354, -2508, 7357, 7359, -2508, 7944, 7951, 492, 7960, 7965, 492, 7976, 7983, 492, 7992, 7999, 492, 8008, 8013, 492, 8040, 8047, 492, 8072, 8079, 492, 8088, 8095, 492, 8104, 8111, 492, 8120, 8121, 492, 8122, 8123, 426, 8136, 8139, 414, 8152, 8153, 492, 8154, 8155, 400, 8168, 8169, 492, 8170, 8171, 388, 8184, 8185, 372, 8186, 8187, 374, 11264, 11310, 548, 11390, 11391, -10315, 65313, 65338, 532, 66560, 66599, 540, 66736, 66771, 540, 68736, 68786, 564, 71840, 71871, 532, 93760, 93791, 532, 125184, 125217, 534];
    var toLowerSinglets_1841470 = [256, 501, 258, 501, 260, 501, 262, 501, 264, 501, 266, 501, 268, 501, 270, 501, 272, 501, 274, 501, 276, 501, 278, 501, 280, 501, 282, 501, 284, 501, 286, 501, 288, 501, 290, 501, 292, 501, 294, 501, 296, 501, 298, 501, 300, 501, 302, 501, 304, 301, 306, 501, 308, 501, 310, 501, 313, 501, 315, 501, 317, 501, 319, 501, 321, 501, 323, 501, 325, 501, 327, 501, 330, 501, 332, 501, 334, 501, 336, 501, 338, 501, 340, 501, 342, 501, 344, 501, 346, 501, 348, 501, 350, 501, 352, 501, 354, 501, 356, 501, 358, 501, 360, 501, 362, 501, 364, 501, 366, 501, 368, 501, 370, 501, 372, 501, 374, 501, 376, 379, 377, 501, 379, 501, 381, 501, 385, 710, 386, 501, 388, 501, 390, 706, 391, 501, 395, 501, 398, 579, 399, 702, 400, 703, 401, 501, 403, 705, 404, 707, 406, 711, 407, 709, 408, 501, 412, 711, 413, 713, 415, 714, 416, 501, 418, 501, 420, 501, 422, 718, 423, 501, 425, 718, 428, 501, 430, 718, 431, 501, 435, 501, 437, 501, 439, 719, 440, 501, 444, 501, 452, 502, 453, 501, 455, 502, 456, 501, 458, 502, 459, 501, 461, 501, 463, 501, 465, 501, 467, 501, 469, 501, 471, 501, 473, 501, 475, 501, 478, 501, 480, 501, 482, 501, 484, 501, 486, 501, 488, 501, 490, 501, 492, 501, 494, 501, 497, 502, 498, 501, 500, 501, 502, 403, 503, 444, 504, 501, 506, 501, 508, 501, 510, 501, 512, 501, 514, 501, 516, 501, 518, 501, 520, 501, 522, 501, 524, 501, 526, 501, 528, 501, 530, 501, 532, 501, 534, 501, 536, 501, 538, 501, 540, 501, 542, 501, 544, 370, 546, 501, 548, 501, 550, 501, 552, 501, 554, 501, 556, 501, 558, 501, 560, 501, 562, 501, 570, 11295, 571, 501, 573, 337, 574, 11292, 577, 501, 579, 305, 580, 569, 581, 571, 582, 501, 584, 501, 586, 501, 588, 501, 590, 501, 880, 501, 882, 501, 886, 501, 895, 616, 902, 538, 908, 564, 975, 508, 984, 501, 986, 501, 988, 501, 990, 501, 992, 501, 994, 501, 996, 501, 998, 501, 1000, 501, 1002, 501, 1004, 501, 1006, 501, 1012, 440, 1015, 501, 1017, 493, 1018, 501, 1120, 501, 1122, 501, 1124, 501, 1126, 501, 1128, 501, 1130, 501, 1132, 501, 1134, 501, 1136, 501, 1138, 501, 1140, 501, 1142, 501, 1144, 501, 1146, 501, 1148, 501, 1150, 501, 1152, 501, 1162, 501, 1164, 501, 1166, 501, 1168, 501, 1170, 501, 1172, 501, 1174, 501, 1176, 501, 1178, 501, 1180, 501, 1182, 501, 1184, 501, 1186, 501, 1188, 501, 1190, 501, 1192, 501, 1194, 501, 1196, 501, 1198, 501, 1200, 501, 1202, 501, 1204, 501, 1206, 501, 1208, 501, 1210, 501, 1212, 501, 1214, 501, 1216, 515, 1217, 501, 1219, 501, 1221, 501, 1223, 501, 1225, 501, 1227, 501, 1229, 501, 1232, 501, 1234, 501, 1236, 501, 1238, 501, 1240, 501, 1242, 501, 1244, 501, 1246, 501, 1248, 501, 1250, 501, 1252, 501, 1254, 501, 1256, 501, 1258, 501, 1260, 501, 1262, 501, 1264, 501, 1266, 501, 1268, 501, 1270, 501, 1272, 501, 1274, 501, 1276, 501, 1278, 501, 1280, 501, 1282, 501, 1284, 501, 1286, 501, 1288, 501, 1290, 501, 1292, 501, 1294, 501, 1296, 501, 1298, 501, 1300, 501, 1302, 501, 1304, 501, 1306, 501, 1308, 501, 1310, 501, 1312, 501, 1314, 501, 1316, 501, 1318, 501, 1320, 501, 1322, 501, 1324, 501, 1326, 501, 4295, 7764, 4301, 7764, 7680, 501, 7682, 501, 7684, 501, 7686, 501, 7688, 501, 7690, 501, 7692, 501, 7694, 501, 7696, 501, 7698, 501, 7700, 501, 7702, 501, 7704, 501, 7706, 501, 7708, 501, 7710, 501, 7712, 501, 7714, 501, 7716, 501, 7718, 501, 7720, 501, 7722, 501, 7724, 501, 7726, 501, 7728, 501, 7730, 501, 7732, 501, 7734, 501, 7736, 501, 7738, 501, 7740, 501, 7742, 501, 7744, 501, 7746, 501, 7748, 501, 7750, 501, 7752, 501, 7754, 501, 7756, 501, 7758, 501, 7760, 501, 7762, 501, 7764, 501, 7766, 501, 7768, 501, 7770, 501, 7772, 501, 7774, 501, 7776, 501, 7778, 501, 7780, 501, 7782, 501, 7784, 501, 7786, 501, 7788, 501, 7790, 501, 7792, 501, 7794, 501, 7796, 501, 7798, 501, 7800, 501, 7802, 501, 7804, 501, 7806, 501, 7808, 501, 7810, 501, 7812, 501, 7814, 501, 7816, 501, 7818, 501, 7820, 501, 7822, 501, 7824, 501, 7826, 501, 7828, 501, 7838, -7115, 7840, 501, 7842, 501, 7844, 501, 7846, 501, 7848, 501, 7850, 501, 7852, 501, 7854, 501, 7856, 501, 7858, 501, 7860, 501, 7862, 501, 7864, 501, 7866, 501, 7868, 501, 7870, 501, 7872, 501, 7874, 501, 7876, 501, 7878, 501, 7880, 501, 7882, 501, 7884, 501, 7886, 501, 7888, 501, 7890, 501, 7892, 501, 7894, 501, 7896, 501, 7898, 501, 7900, 501, 7902, 501, 7904, 501, 7906, 501, 7908, 501, 7910, 501, 7912, 501, 7914, 501, 7916, 501, 7918, 501, 7920, 501, 7922, 501, 7924, 501, 7926, 501, 7928, 501, 7930, 501, 7932, 501, 7934, 501, 8025, 492, 8027, 492, 8029, 492, 8031, 492, 8124, 491, 8140, 491, 8172, 493, 8188, 491, 8486, -7017, 8490, -7883, 8491, -7762, 8498, 528, 8579, 501, 11360, 501, 11362, -10243, 11363, -3314, 11364, -10227, 11367, 501, 11369, 501, 11371, 501, 11373, -10280, 11374, -10249, 11375, -10283, 11376, -10282, 11378, 501, 11381, 501, 11392, 501, 11394, 501, 11396, 501, 11398, 501, 11400, 501, 11402, 501, 11404, 501, 11406, 501, 11408, 501, 11410, 501, 11412, 501, 11414, 501, 11416, 501, 11418, 501, 11420, 501, 11422, 501, 11424, 501, 11426, 501, 11428, 501, 11430, 501, 11432, 501, 11434, 501, 11436, 501, 11438, 501, 11440, 501, 11442, 501, 11444, 501, 11446, 501, 11448, 501, 11450, 501, 11452, 501, 11454, 501, 11456, 501, 11458, 501, 11460, 501, 11462, 501, 11464, 501, 11466, 501, 11468, 501, 11470, 501, 11472, 501, 11474, 501, 11476, 501, 11478, 501, 11480, 501, 11482, 501, 11484, 501, 11486, 501, 11488, 501, 11490, 501, 11499, 501, 11501, 501, 11506, 501, 42560, 501, 42562, 501, 42564, 501, 42566, 501, 42568, 501, 42570, 501, 42572, 501, 42574, 501, 42576, 501, 42578, 501, 42580, 501, 42582, 501, 42584, 501, 42586, 501, 42588, 501, 42590, 501, 42592, 501, 42594, 501, 42596, 501, 42598, 501, 42600, 501, 42602, 501, 42604, 501, 42624, 501, 42626, 501, 42628, 501, 42630, 501, 42632, 501, 42634, 501, 42636, 501, 42638, 501, 42640, 501, 42642, 501, 42644, 501, 42646, 501, 42648, 501, 42650, 501, 42786, 501, 42788, 501, 42790, 501, 42792, 501, 42794, 501, 42796, 501, 42798, 501, 42802, 501, 42804, 501, 42806, 501, 42808, 501, 42810, 501, 42812, 501, 42814, 501, 42816, 501, 42818, 501, 42820, 501, 42822, 501, 42824, 501, 42826, 501, 42828, 501, 42830, 501, 42832, 501, 42834, 501, 42836, 501, 42838, 501, 42840, 501, 42842, 501, 42844, 501, 42846, 501, 42848, 501, 42850, 501, 42852, 501, 42854, 501, 42856, 501, 42858, 501, 42860, 501, 42862, 501, 42873, 501, 42875, 501, 42877, -34832, 42878, 501, 42880, 501, 42882, 501, 42884, 501, 42886, 501, 42891, 501, 42893, -41780, 42896, 501, 42898, 501, 42902, 501, 42904, 501, 42906, 501, 42908, 501, 42910, 501, 42912, 501, 42914, 501, 42916, 501, 42918, 501, 42920, 501, 42922, -41808, 42923, -41819, 42924, -41815, 42925, -41805, 42926, -41808, 42928, -41758, 42929, -41782, 42930, -41761, 42931, 1428, 42932, 501, 42934, 501, 42936, 501, 42938, 501, 42940, 501, 42942, 501, 42946, 501, 42948, 452, 42949, -41807, 42950, -34884];
    var unicodeSpaces_1844041 = [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288];
      var toTag_13390006 = ["#text", "#int", "#bool", "#vthunk", "#dthunk", "#component", "#verbatim", "HTML", "HEAD", "TITLE", "BASE", "LINK", "META", "STYLE", "SCRIPT", "NOSCRIPT", "BODY", "SECTION", "NAV", "ARTICLE", "ASIDE", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "FOOTER", "ADDRESS", "MAIN", "P", "HR", "PRE", "BLOCKQUOTE", "OL", "UL", "LI", "DL", "DT", "DD", "FIGURE", "FIGCAPTION", "DIV", "A", "EM", "STRONG", "SMALL", "S", "CITE", "QUOTE", "DFN", "ABBR", "DATA", "TIME", "CODE", "VAR", "SAMP", "KDB", "SUB", "SUP", "I", "B", "U", "MARK", "RUBY", "RT", "RP", "BDI", "DBO", "SPAN", "BR", "WBR", "INS", "DEL", "IMG", "IFRAME", "EMBED", "OBJECT", "PARAM", "VIDEO", "AUDIO", "SOURCE", "TRACK", "CANVAS", "MAP", "AREA", "SVG", "MATH", "PATH", "CIRCLE", "TABLE", "CAPTION", "COLGROUP", "COL", "TBODY", "THEAD", "TFOOT", "TR", "TD", "TH", "FORM", "FIELDSET", "LEGEND", "LABEL", "INPUT", "BUTTON", "SELECT", "DATALIST", "OPTGROUP", "OPTION", "TEXTAREA", "KEYGEN", "OUTPUT", "PROGRESS", "METER", "DETAILS", "SUMMARY", "COMMAND", "MENU"];
      var toEventName_13390012 = ["click", "contextmenu", "dblclick", "keyup", "keydown", "keypressed", "focus", "blur", "change", "scroll", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseout", "mouseover", "mouseup", "drag", "dragend", "dragenter", "dragleave", "dragover", "dragstart", "drop", "submit", "input", "animationstart", "animationend", "animationiteration", "keyupenter", "keyuplater", "load", "transitioncancel", "transitionend", "transitionrun", "transitionstart", "wheel"];
function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
function genericReset(x_290044, ti_290045) {
  var result_290046 = null;

    result_290046 = null;
    switch (ti_290045.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (isFatPointer_275401(ti_290045)) {
              result_290046 = [null, 0];
      
      }
      
      break;
    case 19:
            result_290046 = {};
    
      break;
    case 18:
    case 17:
      if ((ti_290045.kind == 17)) {
      result_290046 = {m_type: ti_290045};
      }
      else {
        result_290046 = {};
      }
      
      break;
    case 24:
    case 27:
    case 28:
            result_290046 = [];
    
      break;
    case 4:
    case 16:
            result_290046 = new Array(x_290044.length);
      for (var i = 0; i < x_290044.length; ++i) {
        result_290046[i] = genericReset(x_290044[i], ti_290045.base);
      }
    
      break;
    default: 
      break;
    }

  return result_290046;

}
function addChar(x_315031, c_315032) {
    x_315031.push(c_315032);

  
}
function absInt(a_270666) {
    var Tmp1;

  var result_270667 = 0;

    if ((a_270666 < 0)) {
    Tmp1 = (a_270666 * -1);
    }
    else {
    Tmp1 = a_270666;
    }
    
    result_270667 = Tmp1;

  return result_270667;

}
    var unitWeights_11993382 = [1, 1000, 1000000, 1000000000, 60000000000, 3600000000000, 86400000000000, 604800000000000];
function negInt(a_270615) {
  var result_270616 = 0;

    result_270616 = (a_270615 * -1);

  return result_270616;

}
    var f2_13070174 = {patterns: [22, 31, 1, 45, 11, 31, 1, 45, 1, 31, 1, 84, 7, 31, 1, 58, 9, 31, 1, 58, 15, 28], formatStr: makeNimstrLit("yyyy-MM-dd\'T\'HH:mm:sszzz")};
    var DefaultLocale_12585709 = {MMM: [makeNimstrLit("Jan"), makeNimstrLit("Feb"), makeNimstrLit("Mar"), makeNimstrLit("Apr"), makeNimstrLit("May"), makeNimstrLit("Jun"), makeNimstrLit("Jul"), makeNimstrLit("Aug"), makeNimstrLit("Sep"), makeNimstrLit("Oct"), makeNimstrLit("Nov"), makeNimstrLit("Dec")], MMMM: [makeNimstrLit("January"), makeNimstrLit("February"), makeNimstrLit("March"), makeNimstrLit("April"), makeNimstrLit("May"), makeNimstrLit("June"), makeNimstrLit("July"), makeNimstrLit("August"), makeNimstrLit("September"), makeNimstrLit("October"), makeNimstrLit("November"), makeNimstrLit("December")], ddd: [makeNimstrLit("Mon"), makeNimstrLit("Tue"), makeNimstrLit("Wed"), makeNimstrLit("Thu"), makeNimstrLit("Fri"), makeNimstrLit("Sat"), makeNimstrLit("Sun")], dddd: [makeNimstrLit("Monday"), makeNimstrLit("Tuesday"), makeNimstrLit("Wednesday"), makeNimstrLit("Thursday"), makeNimstrLit("Friday"), makeNimstrLit("Saturday"), makeNimstrLit("Sunday")]};
    var daysUntilMonthLeap_12020107 = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];
      var daysUntilMonth_12020091 = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];
var ConstSet3 = setConstr(5);
function raiseFieldError(f_260047) {
    raiseException({message: nimCopy(null, f_260047, NTI113), parent: null, m_type: NTI6851, name: null, trace: [], up: null}, "FieldDefect");

  
}
var ConstSet4 = setConstr(6);
function nimFloatToString(a_270649) {
  var result_270650 = null;

        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_270649)) result_270650 =  a_270649+".0"
    else {
      result_270650 = a_270649+""
      if(nimOnlyDigitsOrMinus(result_270650)){
        result_270650 = a_270649+".0"
      }
    }
  

  return result_270650;

}
var ConstSet5 = setConstr(60, 62, 94);
var ConstSet6 = setConstr(60, 62, 94);
var ConstSet7 = setConstr(45, 43, 32);
var ConstSet8 = setConstr([48, 57]);
var ConstSet9 = setConstr([48, 57]);
var ConstSet10 = setConstr([48, 57]);
var ConstSet11 = setConstr([65, 90], [97, 122]);
var ConstSet12 = setConstr(46, 44);
function nimCharToStr(x_185674) {
  var result_185675 = [];

    result_185675 = nimCopy(null, mnewString(1), NTI113);
    result_185675[0] = x_185674;

  return result_185675;

}
var ConstSet13 = setConstr([65, 90]);
var ConstSet14 = setConstr([97, 122]);
function nimBoolToStr(x_185657) {
  var result_185658 = [];

    if (x_185657) {
    result_185658 = nimCopy(null, makeNimstrLit("true"), NTI113);
    }
    else {
      result_185658 = nimCopy(null, makeNimstrLit("false"), NTI113);
    }
    

  return result_185658;

}
function cmpStrings(a_270186, b_270187) {
        if (a_270186 == b_270187) return 0;
    if (!a_270186) return -1;
    if (!b_270187) return 1;
    for (var i = 0; i < a_270186.length && i < b_270187.length; i++) {
      var result = a_270186[i] - b_270187[i];
      if (result != 0) return result;
    }
    return a_270186.length - b_270187.length;
  

  
}
var ConstSet15 = setConstr([48, 57]);
var ConstSet16 = setConstr([48, 57]);
var ConstSet17 = setConstr(13, 10);
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var cb64_9235003 = [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47];
var cb64safe_9240003 = [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 45, 95];
var objectID_10220031 = [0];
if (globalThis.utcInstance_12545231 === undefined) {
  utcInstance_12545231 = [null];
}
if (globalThis.localInstance_12545232 === undefined) {
  localInstance_12545232 = [null];
}
var gid_13425032 = [0];
var vcomponents_13556239 = [{}];
var kxi_13647284 = [null];
function isFatPointer_275401(ti_275403) {
  var result_275404 = false;

  BeforeRet: do {
    result_275404 = !((ConstSet1[ti_275403.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_275404;

}
function nimCopyAux(dest_280028, src_280029, n_280031) {
    switch (n_280031.kind) {
    case 0:
      break;
    case 1:
            dest_280028[n_280031.offset] = nimCopy(dest_280028[n_280031.offset], src_280029[n_280031.offset], n_280031.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_280031.sons.length; i++) {
      nimCopyAux(dest_280028, src_280029, n_280031.sons[i]);
    }
    
      break;
    case 3:
            dest_280028[n_280031.offset] = nimCopy(dest_280028[n_280031.offset], src_280029[n_280031.offset], n_280031.typ);
      for (var i = 0; i < n_280031.sons.length; ++i) {
        nimCopyAux(dest_280028, src_280029, n_280031.sons[i][1]);
      }
    
      break;
    }

  
}
function add_167211(x_167214, x_167214_Idx, y_167215) {
          if (x_167214[x_167214_Idx] === null) { x_167214[x_167214_Idx] = []; }
      var off = x_167214[x_167214_Idx].length;
      x_167214[x_167214_Idx].length += y_167215.length;
      for (var i = 0; i < y_167215.length; ++i) {
        x_167214[x_167214_Idx][off+i] = y_167215.charCodeAt(i);
      }
    

  
}
function newSeq_265128(len_265131) {
  var result_265133 = [];

    result_265133 = new Array(len_265131); for (var i=0;i<len_265131;++i) {result_265133[i]=null;}
  return result_265133;

}
function unhandledException(e_225059) {
    var buf_225060 = [[]];
    if (!(((e_225059.message).length == 0))) {
    buf_225060[0].push.apply(buf_225060[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_225060[0].push.apply(buf_225060[0], e_225059.message);;
    }
    else {
    buf_225060[0].push.apply(buf_225060[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_225060[0].push.apply(buf_225060[0], makeNimstrLit(" ["));;
    add_167211(buf_225060, 0, e_225059.name);
    buf_225060[0].push.apply(buf_225060[0], makeNimstrLit("]\x0A"));;
    var cbuf_230201 = toJSStr(buf_225060[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_230201);
  }
  else {
    throw cbuf_230201;
  }
  

  
}
function raiseIndexError(i_250047, a_250048, b_250049) {
    var Tmp1;

    if ((b_250049 < a_250048)) {
    Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_250047)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_250048)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_250049)+"") || []);
    }
    
    raiseException({message: nimCopy(null, Tmp1, NTI113), parent: null, m_type: NTI6849, name: null, trace: [], up: null}, "IndexDefect");

  
}
function toFloat_26659(i_26661) {
  var result_26662 = 0.0;

    result_26662 = i_26661;

  return result_26662;

}
function HEX2F_365648(x_365650, y_365651) {
  var result_365652 = 0.0;

    result_365652 = (toFloat_26659(x_365650) / toFloat_26659(y_365651));

  return result_365652;

}
function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI6837, name: null, trace: [], up: null}, "OverflowDefect");

  
}
function checkOverflowInt(a_270403) {
        if (a_270403 > 2147483647 || a_270403 < -2147483648) raiseOverflow();
  

  
}
function isPointInPolygon(testPoint_14415007, polygPoints_14415009) {
              var Tmp4;
              var Tmp5;
                var Tmp6;

  var result_14415010 = false;

    result_14415010 = false;
    var j_14415016 = (polygPoints_14415009).length - 1;
    L1: do {
      var i_14415081 = 0;
      var p_14415082 = null;
      var i_14425019 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_14425019 < (polygPoints_14415009).length)) break L3;
            i_14415081 = i_14425019;
            p_14415082 = polygPoints_14415009[chckIndx(i_14425019, 0, (polygPoints_14415009).length-1)];
            var lP_14415083 = polygPoints_14415009[chckIndx(j_14415016, 0, (polygPoints_14415009).length-1)];
              if (!(p_14415082.y < testPoint_14415007.y)) Tmp5 = false; else {                Tmp5 = (testPoint_14415007.y <= lP_14415083.y);              }              if (Tmp5) Tmp4 = true; else {                if (!(lP_14415083.y < testPoint_14415007.y)) Tmp6 = false; else {                  Tmp6 = (testPoint_14415007.y <= p_14415082.y);                }                Tmp4 = Tmp6;              }            if (Tmp4) {
            if (((p_14415082.x + (HEX2F_365648(subInt(testPoint_14415007.y, p_14415082.y), subInt(lP_14415083.y, p_14415082.y)) * subInt(lP_14415083.x, p_14415082.x))) < testPoint_14415007.x)) {
            result_14415010 = !(result_14415010);
            }
            
            }
            
            j_14415016 = i_14415081;
            i_14425019 = addInt(i_14425019, 1);
          }
      } while(false);
    } while(false);

  return result_14415010;

}
function nextPowerOfTwo_8165014(x_8165016) {
  var result_8165017 = 0;

    result_8165017 = (x_8165016 - 1);
    result_8165017 = (result_8165017 | (result_8165017 >> 16));
    result_8165017 = (result_8165017 | (result_8165017 >> 8));
    result_8165017 = (result_8165017 | (result_8165017 >> 4));
    result_8165017 = (result_8165017 | (result_8165017 >> 2));
    result_8165017 = (result_8165017 | (result_8165017 >> 1));
    result_8165017 += (1 + ((x_8165016 <= 0) ? 1:0));

  return result_8165017;

}
function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI6835, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}
function slotsNeeded_10295048(count_10295050) {
  var result_10295051 = 0;

    result_10295051 = nextPowerOfTwo_8165014(addInt(divInt(mulInt(count_10295050, 3), 2), 4));

  return result_10295051;

}
function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI6853, name: null, trace: [], up: null}, "RangeDefect");

  
}
function initTable_14650020(initialSize_14650024) {
  var result_14650026 = ({data: [], counter: 0});

    var correctSizeHEX60gensym4_14655001 = slotsNeeded_10295048(chckRange(initialSize_14650024, 0, 2147483647));
    result_14650026.counter = 0;
    result_14650026.data = new Array(chckRange(correctSizeHEX60gensym4_14655001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym4_14655001, 0, 2147483647);++i) {result_14650026.data[i]={Field0: 0, Field1: 0, Field2: null};}
  return result_14650026;

}
function initOrderedTable_14660632(initialSize_14660636) {
  var result_14660638 = ({data: [], counter: 0, first: 0, last: 0});

    var correctSizeHEX60gensym6_14665001 = slotsNeeded_10295048(chckRange(initialSize_14660636, 0, 2147483647));
    result_14660638.counter = 0;
    result_14660638.data = new Array(chckRange(correctSizeHEX60gensym6_14665001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym6_14665001, 0, 2147483647);++i) {result_14660638.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    result_14660638.first = -1;
    result_14660638.last = -1;

  return result_14660638;

}
function initTable_14670632(initialSize_14670636) {
  var result_14670638 = ({data: [], counter: 0});

    var correctSizeHEX60gensym8_14675001 = slotsNeeded_10295048(chckRange(initialSize_14670636, 0, 2147483647));
    result_14670638.counter = 0;
    result_14670638.data = new Array(chckRange(correctSizeHEX60gensym8_14675001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym8_14675001, 0, 2147483647);++i) {result_14670638.data[i]={Field0: 0, Field1: [], Field2: null};}
  return result_14670638;

}
function initOrderedTable_14680632(initialSize_14680636) {
  var result_14680638 = ({data: [], counter: 0, first: 0, last: 0});

    var correctSizeHEX60gensym10_14685001 = slotsNeeded_10295048(chckRange(initialSize_14680636, 0, 2147483647));
    result_14680638.counter = 0;
    result_14680638.data = new Array(chckRange(correctSizeHEX60gensym10_14685001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym10_14685001, 0, 2147483647);++i) {result_14680638.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    result_14680638.first = -1;
    result_14680638.last = -1;

  return result_14680638;

}
function initTable_14690632(initialSize_14690636) {
  var result_14690638 = ({data: [], counter: 0});

    var correctSizeHEX60gensym12_14695001 = slotsNeeded_10295048(chckRange(initialSize_14690636, 0, 2147483647));
    result_14690638.counter = 0;
    result_14690638.data = new Array(chckRange(correctSizeHEX60gensym12_14695001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym12_14695001, 0, 2147483647);++i) {result_14690638.data[i]={Field0: 0, Field1: [], Field2: 0};}
  return result_14690638;

}
function initTable_14700635(initialSize_14700639) {
  var result_14700655 = ({data: [], counter: 0});

    var correctSizeHEX60gensym14_14705001 = slotsNeeded_10295048(chckRange(initialSize_14700639, 0, 2147483647));
    result_14700655.counter = 0;
    result_14700655.data = new Array(chckRange(correctSizeHEX60gensym14_14705001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym14_14705001, 0, 2147483647);++i) {result_14700655.data[i]={Field0: 0, Field1: null, Field2: null};}
  return result_14700655;

}
var platform_14650017 = [null];
var allLinks_14660629 = [initTable_14650020(8)];
var allStreets_14670629 = [initOrderedTable_14660632(8)];
var cachedTiles_14680629 = [initTable_14670632(8)];
var allSectors_14690629 = [initOrderedTable_14680632(8)];
var lastPostfix_14700629 = [initTable_14690632(8)];
var mvStreetGrp_14700630 = [function(){return new H.map.Group()}()];
var ministryArea_14700631 = [null];
var nameArea_14700632 = [makeNimstrLit("Hanau-Russisch")];
var sectorGrp_14710629 = [initTable_14700635(8)];
var cityId_14710630 = [0];
var districtId_14710631 = [0];
var addrDistr_14710632 = [[]];
var addrCity_14710633 = [[]];
var clckLinkId_14710634 = [0];
var postalCode_14710635 = [[]];
var sectName_14710636 = [[]];
var borderDistr_14710638 = [[]];
var map = null;
function initTable_14710864(initialSize_14710868) {
  var result_14710870 = ({data: [], counter: 0});

    var correctSizeHEX60gensym16_14715001 = slotsNeeded_10295048(chckRange(initialSize_14710868, 0, 2147483647));
    result_14710870.counter = 0;
    result_14710870.data = new Array(chckRange(correctSizeHEX60gensym16_14715001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym16_14715001, 0, 2147483647);++i) {result_14710870.data[i]={Field0: 0, Field1: 0, Field2: 0};}
  return result_14710870;

}
function substr_381022(s_381024, first_381025, last_381026) {
  var result_381027 = [];

    var first_381028 = nimMax(first_381025, 0);
    var L_381030 = nimMax(addInt(subInt(nimMin(last_381026, (s_381024).length - 1), first_381028), 1), 0);
    result_381027 = nimCopy(null, mnewString(chckRange(L_381030, 0, 2147483647)), NTI113);
    L1: do {
      var i_381039 = 0;
      var colontmp__13387693 = 0;
      colontmp__13387693 = subInt(L_381030, 1);
      var res_13387694 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_13387694 <= colontmp__13387693)) break L3;
            i_381039 = res_13387694;
            result_381027[chckIndx(i_381039, 0, (result_381027).length-1)] = s_381024[chckIndx(addInt(i_381039, first_381028), 0, (s_381024).length-1)];
            res_13387694 = addInt(res_13387694, 1);
          }
      } while(false);
    } while(false);

  return result_381027;

}
function nsuSplitCharSet(s_8495040, seps_8495042, maxsplit_8495043) {
  var result_8495045 = [];

    result_8495045 = nimCopy(null, [], NTI8500015);
    L1: do {
      var xHEX60gensym60_8500016 = [];
      var lastHEX60gensym29_14910805 = 0;
      var splitsHEX60gensym29_14910806 = maxsplit_8495043;
      L2: do {
          L3: while (true) {
          if (!(lastHEX60gensym29_14910805 <= (s_8495040).length)) break L3;
            var firstHEX60gensym29_14910808 = lastHEX60gensym29_14910805;
            L4: do {
                L5: while (true) {
                if (!((lastHEX60gensym29_14910805 < (s_8495040).length) && !((seps_8495042[s_8495040[chckIndx(lastHEX60gensym29_14910805, 0, (s_8495040).length-1)]] != undefined)))) break L5;
                  lastHEX60gensym29_14910805 = addInt(lastHEX60gensym29_14910805, 1);
                }
            } while(false);
            if ((splitsHEX60gensym29_14910806 == 0)) {
            lastHEX60gensym29_14910805 = (s_8495040).length;
            }
            
            xHEX60gensym60_8500016 = substr_381022(s_8495040, firstHEX60gensym29_14910808, subInt(lastHEX60gensym29_14910805, 1));
            var Tmp6 = nimCopy(null, xHEX60gensym60_8500016, NTI113);
            result_8495045.push(Tmp6);;
            if ((splitsHEX60gensym29_14910806 == 0)) {
            break L2;
            }
            
            splitsHEX60gensym29_14910806 = subInt(splitsHEX60gensym29_14910806, 1);
            lastHEX60gensym29_14910805 = addInt(lastHEX60gensym29_14910805, 1);
          }
      } while(false);
    } while(false);

  return result_8495045;

}
function sysFatal_115418(message_115422) {
    raiseException({message: nimCopy(null, message_115422, NTI113), m_type: NTI6841, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}
function raiseAssert_115414(msg_115416) {
    sysFatal_115418(msg_115416);

  
}
function failedAssertImpl_115480(msg_115482) {
    raiseAssert_115414(msg_115482);

  
}
function substrEq_8325026(s_8325028, pos_8325029, substr_8325030) {
  var result_8325031 = false;

  BeforeRet: do {
    var i_8325033 = 0;
    var length_8325034 = (substr_8325030).length;
    L1: do {
        L2: while (true) {
        if (!(((i_8325033 < length_8325034) && (addInt(pos_8325029, i_8325033) < (s_8325028).length)) && (s_8325028[chckIndx(addInt(pos_8325029, i_8325033), 0, (s_8325028).length-1)] == substr_8325030[chckIndx(i_8325033, 0, (substr_8325030).length-1)]))) break L2;
          i_8325033 = addInt(i_8325033, 1);
        }
    } while(false);
    result_8325031 = (i_8325033 == length_8325034);
    break BeforeRet;
  } while (false);

  return result_8325031;

}
function nsuSplitString(s_8500040, sep_8500041, maxsplit_8500042) {
  var result_8500044 = [];

    if (!((0 < (sep_8500041).length))) {
    failedAssertImpl_115480(makeNimstrLit("strutils.nim(779, 11) `sep.len > 0` "));
    }
    
    result_8500044 = nimCopy(null, [], NTI8520015);
    L1: do {
      var xHEX60gensym64_8520016 = [];
      var lastHEX60gensym33_14910813 = 0;
      var splitsHEX60gensym33_14910814 = maxsplit_8500042;
      L2: do {
          L3: while (true) {
          if (!(lastHEX60gensym33_14910813 <= (s_8500040).length)) break L3;
            var firstHEX60gensym33_14910816 = lastHEX60gensym33_14910813;
            L4: do {
                L5: while (true) {
                if (!((lastHEX60gensym33_14910813 < (s_8500040).length) && !(substrEq_8325026(s_8500040, lastHEX60gensym33_14910813, sep_8500041)))) break L5;
                  lastHEX60gensym33_14910813 = addInt(lastHEX60gensym33_14910813, 1);
                }
            } while(false);
            if ((splitsHEX60gensym33_14910814 == 0)) {
            lastHEX60gensym33_14910813 = (s_8500040).length;
            }
            
            xHEX60gensym64_8520016 = substr_381022(s_8500040, firstHEX60gensym33_14910816, subInt(lastHEX60gensym33_14910813, 1));
            var Tmp6 = nimCopy(null, xHEX60gensym64_8520016, NTI113);
            result_8500044.push(Tmp6);;
            if ((splitsHEX60gensym33_14910814 == 0)) {
            break L2;
            }
            
            splitsHEX60gensym33_14910814 = subInt(splitsHEX60gensym33_14910814, 1);
            lastHEX60gensym33_14910813 = addInt(lastHEX60gensym33_14910813, (sep_8500041).length);
          }
      } while(false);
    } while(false);

  return result_8500044;

}
function initTable_14720633(initialSize_14720637) {
  var result_14720653 = ({data: [], counter: 0});

    var correctSizeHEX60gensym18_14725001 = slotsNeeded_10295048(chckRange(initialSize_14720637, 0, 2147483647));
    result_14720653.counter = 0;
    result_14720653.data = new Array(chckRange(correctSizeHEX60gensym18_14725001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym18_14725001, 0, 2147483647);++i) {result_14720653.data[i]={Field0: 0, Field1: [], Field2: 0};}
  return result_14720653;

}
function imul_10231082(a_10231084, b_10231085) {
  var result_10231086 = 0;

    var mask_10231087 = 65535;
    var aHi_10231096 = (((a_10231084 >>> 0) >>> 16) & mask_10231087);
    var aLo_10231097 = (a_10231084 & mask_10231087);
    var bHi_10231106 = (((b_10231085 >>> 0) >>> 16) & mask_10231087);
    var bLo_10231107 = (b_10231085 & mask_10231087);
    result_10231086 = ((((aLo_10231097 * bLo_10231107) >>> 0) + (((((aHi_10231096 * bLo_10231107) >>> 0) + ((aLo_10231097 * bHi_10231106) >>> 0)) >>> 0) << 16)) >>> 0);

  return result_10231086;

}
function rotl32_10231201(x_10231203, r_10231204) {
  var result_10231205 = 0;

    result_10231205 = ((x_10231203 << r_10231204) | ((x_10231203 >>> 0) >>> subInt(32, r_10231204)));

  return result_10231205;

}
function murmurHash_10231229(x_10231232) {
  var result_10231233 = 0;

  BeforeRet: do {
    var size_10231243 = (x_10231232).length;
    var stepSize_10231245 = 4;
    var n_10231246 = divInt(size_10231243, stepSize_10231245);
    var h1_10231247 = 0;
    var i_10231249 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_10231249 < mulInt(n_10231246, stepSize_10231245))) break L2;
          var k1_10231250 = 0;
          var j_10231251 = stepSize_10231245;
          L3: do {
              L4: while (true) {
              if (!(0 < j_10231251)) break L4;
                j_10231251 = subInt(j_10231251, 1);
                k1_10231250 = ((k1_10231250 << 8) | x_10231232[chckIndx(addInt(i_10231249, j_10231251), 0, (x_10231232).length-1)]);
              }
          } while(false);
          i_10231249 = addInt(i_10231249, stepSize_10231245);
          k1_10231250 = imul_10231082(k1_10231250, 3432918353);
          k1_10231250 = rotl32_10231201(k1_10231250, 15);
          k1_10231250 = imul_10231082(k1_10231250, 461845907);
          h1_10231247 = (h1_10231247 ^ k1_10231250);
          h1_10231247 = rotl32_10231201(h1_10231247, 13);
          h1_10231247 = ((((h1_10231247 * 5) >>> 0) + 3864292196) >>> 0);
        }
    } while(false);
    var k1_10235207 = 0;
    var rem_10235208 = modInt(size_10231243, stepSize_10231245);
    L5: do {
        L6: while (true) {
        if (!(0 < rem_10235208)) break L6;
          rem_10235208 = subInt(rem_10235208, 1);
          k1_10235207 = ((k1_10235207 << 8) | x_10231232[chckIndx(addInt(i_10231249, rem_10235208), 0, (x_10231232).length-1)]);
        }
    } while(false);
    k1_10235207 = imul_10231082(k1_10235207, 3432918353);
    k1_10235207 = rotl32_10231201(k1_10235207, 15);
    k1_10235207 = imul_10231082(k1_10235207, 461845907);
    h1_10231247 = (h1_10231247 ^ k1_10235207);
    h1_10231247 = (h1_10231247 ^ size_10231243);
    h1_10231247 = (h1_10231247 ^ ((h1_10231247 >>> 0) >>> 16));
    h1_10231247 = imul_10231082(h1_10231247, 2246822507);
    h1_10231247 = (h1_10231247 ^ ((h1_10231247 >>> 0) >>> 13));
    h1_10231247 = imul_10231082(h1_10231247, 3266489909);
    h1_10231247 = (h1_10231247 ^ ((h1_10231247 >>> 0) >>> 16));
    result_10231233 = (h1_10231247|0);
    break BeforeRet;
  } while (false);

  return result_10231233;

}
function hash_10270214(x_10270216) {
  var result_10270217 = 0;

    result_10270217 = murmurHash_10231229((x_10270216.slice(0, (x_10270216).length - 1+1)));

  return result_10270217;

}
function isFilled_10291218(hcode_10291220) {
  var result_10291221 = false;

    result_10291221 = !((hcode_10291220 == 0));

  return result_10291221;

}
function nextTry_10295014(h_10295016, maxHash_10295017) {
  var result_10295018 = 0;

    result_10295018 = (addInt(h_10295016, 1) & maxHash_10295017);

  return result_10295018;

}
function rawGet_14755602(t_14755606, key_14755607, hc_14755608, hc_14755608_Idx) {
            var Tmp3;

  var result_14755609 = 0;

  BeforeRet: do {
    hc_14755608[hc_14755608_Idx] = hash_10270214(key_14755607);
    if ((hc_14755608[hc_14755608_Idx] == 0)) {
    hc_14755608[hc_14755608_Idx] = 314159265;
    }
    
    if (((t_14755606.data).length == 0)) {
    result_14755609 = -1;
    break BeforeRet;
    }
    
    var h_14765138 = (hc_14755608[hc_14755608_Idx] & (t_14755606.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_10291218(t_14755606.data[chckIndx(h_14765138, 0, (t_14755606.data).length-1)].Field0)) break L2;
            if (!(t_14755606.data[chckIndx(h_14765138, 0, (t_14755606.data).length-1)].Field0 == hc_14755608[hc_14755608_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_14755606.data[chckIndx(h_14765138, 0, (t_14755606.data).length-1)].Field1, key_14755607);            }          if (Tmp3) {
          result_14755609 = h_14765138;
          break BeforeRet;
          }
          
          h_14765138 = nextTry_10295014(h_14765138, (t_14755606.data).length - 1);
        }
    } while(false);
    result_14755609 = subInt(-1, h_14765138);
  } while (false);

  return result_14755609;

}
function mustRehash_14780601(t_14780604) {
  var result_14780605 = false;

    if (!((t_14780604.counter < (t_14780604.data).length))) {
    failedAssertImpl_115480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_14780605 = ((mulInt((t_14780604.data).length, 2) < mulInt(t_14780604.counter, 3)) || (subInt((t_14780604.data).length, t_14780604.counter) < 4));

  return result_14780605;

}
function rawInsert_14806122(t_14806128, data_14806131, data_14806131_Idx, key_14806132, val_14806134, hc_14806135, h_14806136) {
    data_14806131[data_14806131_Idx][chckIndx(h_14806136, 0, (data_14806131[data_14806131_Idx]).length-1)].Field1 = nimCopy(null, key_14806132, NTI113);
    data_14806131[data_14806131_Idx][chckIndx(h_14806136, 0, (data_14806131[data_14806131_Idx]).length-1)].Field2 = val_14806134;
    data_14806131[data_14806131_Idx][chckIndx(h_14806136, 0, (data_14806131[data_14806131_Idx]).length-1)].Field0 = hc_14806135;

  
}
function enlarge_14805161(t_14805167) {
    var n_14805175 = [];
    n_14805175 = new Array(chckRange(mulInt((t_14805167.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_14805167.data).length, 2), 0, 2147483647);++i) {n_14805175[i]={Field0: 0, Field1: [], Field2: 0};}    var Tmp1 = t_14805167.data; t_14805167.data = n_14805175; n_14805175 = Tmp1;    L2: do {
      var i_14805334 = 0;
      var colontmp__14910828 = 0;
      colontmp__14910828 = (n_14805175).length - 1;
      var res_14910829 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_14910829 <= colontmp__14910828)) break L4;
            i_14805334 = res_14910829;
            var eh_14805490 = n_14805175[chckIndx(i_14805334, 0, (n_14805175).length-1)].Field0;
            if (isFilled_10291218(eh_14805490)) {
            var j_14805497 = (eh_14805490 & (t_14805167.data).length - 1);
            L5: do {
                L6: while (true) {
                if (!isFilled_10291218(t_14805167.data[chckIndx(j_14805497, 0, (t_14805167.data).length-1)].Field0)) break L6;
                  j_14805497 = nextTry_10295014(j_14805497, (t_14805167.data).length - 1);
                }
            } while(false);
            rawInsert_14806122(t_14805167, t_14805167, "data", n_14805175[chckIndx(i_14805334, 0, (n_14805175).length-1)].Field1, n_14805175[chckIndx(i_14805334, 0, (n_14805175).length-1)].Field2, eh_14805490, j_14805497);
            }
            
            res_14910829 = addInt(res_14910829, 1);
          }
      } while(false);
    } while(false);

  
}
function rawGetKnownHC_14806629(t_14806633, key_14806634, hc_14806635) {
  var result_14806636 = 0;

  BeforeRet: do {
    if (((t_14806633.data).length == 0)) {
    result_14806636 = -1;
    break BeforeRet;
    }
    
    var h_14810138 = (hc_14806635 & (t_14806633.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_10291218(t_14806633.data[chckIndx(h_14810138, 0, (t_14806633.data).length-1)].Field0)) break L2;
          if (((t_14806633.data[chckIndx(h_14810138, 0, (t_14806633.data).length-1)].Field0 == hc_14806635) && eqStrings(t_14806633.data[chckIndx(h_14810138, 0, (t_14806633.data).length-1)].Field1, key_14806634))) {
          result_14806636 = h_14810138;
          break BeforeRet;
          }
          
          h_14810138 = nextTry_10295014(h_14810138, (t_14806633.data).length - 1);
        }
    } while(false);
    result_14806636 = subInt(-1, h_14810138);
  } while (false);

  return result_14806636;

}
function HEX5BHEX5DHEX3D_14740348(t_14740354, key_14740355, val_14740357) {
    if (((t_14740354.data).length == 0)) {
    var correctSizeHEX60gensym23_14750001 = slotsNeeded_10295048(32);
    t_14740354.counter = 0;
    t_14740354.data = new Array(chckRange(correctSizeHEX60gensym23_14750001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym23_14750001, 0, 2147483647);++i) {t_14740354.data[i]={Field0: 0, Field1: [], Field2: 0};}    }
    
    var hc_14755601 = [0];
    var index_14765641 = rawGet_14755602(t_14740354, key_14740355, hc_14755601, 0);
    if ((0 <= index_14765641)) {
    t_14740354.data[chckIndx(index_14765641, 0, (t_14740354.data).length-1)].Field2 = val_14740357;
    }
    else {
      if (((t_14740354.data).length == 0)) {
      var correctSizeHEX60gensym28_14775001 = slotsNeeded_10295048(32);
      t_14740354.counter = 0;
      t_14740354.data = new Array(chckRange(correctSizeHEX60gensym28_14775001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym28_14775001, 0, 2147483647);++i) {t_14740354.data[i]={Field0: 0, Field1: [], Field2: 0};}      }
      
      if (mustRehash_14780601(t_14740354)) {
      enlarge_14805161(t_14740354);
      index_14765641 = rawGetKnownHC_14806629(t_14740354, key_14740355, hc_14755601[0]);
      }
      
      index_14765641 = subInt(-1, index_14765641);
      rawInsert_14806122(t_14740354, t_14740354, "data", key_14740355, val_14740357, hc_14755601[0], index_14765641);
      t_14740354.counter = addInt(t_14740354.counter, 1);
    }
    

  
}
function HEX5BHEX5D_14815153(t_14815159, key_14815160) {
  var result_14815162 = null;
  var result_14815162_Idx = 0;

    var hcHEX60gensym22_14815163 = [0];
    var indexHEX60gensym22_14815172 = rawGet_14755602(t_14815159, key_14815160, hcHEX60gensym22_14815163, 0);
    if ((0 <= indexHEX60gensym22_14815172)) {
    result_14815162 = t_14815159.data[chckIndx(indexHEX60gensym22_14815172, 0, (t_14815159.data).length-1)]; result_14815162_Idx = "Field2";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_14815160 || []), parent: null, m_type: NTI6845, name: null, trace: [], up: null}, "KeyError");
    }
    

  return [result_14815162, result_14815162_Idx];

}
function hashWangYi1_10230417(x_10230420) {
  var result_10230421 = 0;

            if (typeof BigInt == 'undefined') {
          result_10230421 = x_10230420; // For Node < 10.4, etc. we do the old identity hash
        } else {          // Otherwise we match the low 32-bits of C/C++ hash
          function hi_xor_lo_js(a, b) {
            const prod = BigInt(a) * BigInt(b);
            const mask = (BigInt(1) << BigInt(64)) - BigInt(1);
            return (prod >> BigInt(64)) ^ (prod & mask);
          }
          const P0  = BigInt(0xa0761d64)<<BigInt(32)|BigInt(0x78bd642f);
          const P1  = BigInt(0xe7037ed1)<<BigInt(32)|BigInt(0xa0b428db);
          const P58 = BigInt(0xeb44acca)<<BigInt(32)|BigInt(0xb455d165)^BigInt(8);
          var res   = hi_xor_lo_js(hi_xor_lo_js(P0, BigInt(x_10230420) ^ P1), P58);
          result_10230421  = Number(res & ((BigInt(1) << BigInt(53)) - BigInt(1)));
        }

  return result_10230421;

}
function hash_10230408(x_10230411) {
  var result_10230412 = 0;

    result_10230412 = hashWangYi1_10230417(x_10230411);

  return result_10230412;

}
function rawGet_14855602(t_14855606, key_14855607, hc_14855608, hc_14855608_Idx) {
            var Tmp3;

  var result_14855609 = 0;

  BeforeRet: do {
    hc_14855608[hc_14855608_Idx] = hash_10230408(key_14855607);
    if ((hc_14855608[hc_14855608_Idx] == 0)) {
    hc_14855608[hc_14855608_Idx] = 314159265;
    }
    
    if (((t_14855606.data).length == 0)) {
    result_14855609 = -1;
    break BeforeRet;
    }
    
    var h_14865138 = (hc_14855608[hc_14855608_Idx] & (t_14855606.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_10291218(t_14855606.data[chckIndx(h_14865138, 0, (t_14855606.data).length-1)].Field0)) break L2;
            if (!(t_14855606.data[chckIndx(h_14865138, 0, (t_14855606.data).length-1)].Field0 == hc_14855608[hc_14855608_Idx])) Tmp3 = false; else {              Tmp3 = (t_14855606.data[chckIndx(h_14865138, 0, (t_14855606.data).length-1)].Field1 == key_14855607);            }          if (Tmp3) {
          result_14855609 = h_14865138;
          break BeforeRet;
          }
          
          h_14865138 = nextTry_10295014(h_14865138, (t_14855606.data).length - 1);
        }
    } while(false);
    result_14855609 = subInt(-1, h_14865138);
  } while (false);

  return result_14855609;

}
function mustRehash_14880601(t_14880604) {
  var result_14880605 = false;

    if (!((t_14880604.counter < (t_14880604.data).length))) {
    failedAssertImpl_115480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_14880605 = ((mulInt((t_14880604.data).length, 2) < mulInt(t_14880604.counter, 3)) || (subInt((t_14880604.data).length, t_14880604.counter) < 4));

  return result_14880605;

}
function rawInsert_14906122(t_14906128, data_14906131, data_14906131_Idx, key_14906132, val_14906134, hc_14906135, h_14906136) {
    data_14906131[data_14906131_Idx][chckIndx(h_14906136, 0, (data_14906131[data_14906131_Idx]).length-1)].Field1 = key_14906132;
    data_14906131[data_14906131_Idx][chckIndx(h_14906136, 0, (data_14906131[data_14906131_Idx]).length-1)].Field2 = val_14906134;
    data_14906131[data_14906131_Idx][chckIndx(h_14906136, 0, (data_14906131[data_14906131_Idx]).length-1)].Field0 = hc_14906135;

  
}
function enlarge_14905161(t_14905167) {
    var n_14905175 = [];
    n_14905175 = new Array(chckRange(mulInt((t_14905167.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_14905167.data).length, 2), 0, 2147483647);++i) {n_14905175[i]={Field0: 0, Field1: 0, Field2: 0};}    var Tmp1 = t_14905167.data; t_14905167.data = n_14905175; n_14905175 = Tmp1;    L2: do {
      var i_14905334 = 0;
      var colontmp__14910842 = 0;
      colontmp__14910842 = (n_14905175).length - 1;
      var res_14910843 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_14910843 <= colontmp__14910842)) break L4;
            i_14905334 = res_14910843;
            var eh_14905490 = n_14905175[chckIndx(i_14905334, 0, (n_14905175).length-1)].Field0;
            if (isFilled_10291218(eh_14905490)) {
            var j_14905497 = (eh_14905490 & (t_14905167.data).length - 1);
            L5: do {
                L6: while (true) {
                if (!isFilled_10291218(t_14905167.data[chckIndx(j_14905497, 0, (t_14905167.data).length-1)].Field0)) break L6;
                  j_14905497 = nextTry_10295014(j_14905497, (t_14905167.data).length - 1);
                }
            } while(false);
            rawInsert_14906122(t_14905167, t_14905167, "data", n_14905175[chckIndx(i_14905334, 0, (n_14905175).length-1)].Field1, n_14905175[chckIndx(i_14905334, 0, (n_14905175).length-1)].Field2, eh_14905490, j_14905497);
            }
            
            res_14910843 = addInt(res_14910843, 1);
          }
      } while(false);
    } while(false);

  
}
function rawGetKnownHC_14906629(t_14906633, key_14906634, hc_14906635) {
  var result_14906636 = 0;

  BeforeRet: do {
    if (((t_14906633.data).length == 0)) {
    result_14906636 = -1;
    break BeforeRet;
    }
    
    var h_14910138 = (hc_14906635 & (t_14906633.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_10291218(t_14906633.data[chckIndx(h_14910138, 0, (t_14906633.data).length-1)].Field0)) break L2;
          if (((t_14906633.data[chckIndx(h_14910138, 0, (t_14906633.data).length-1)].Field0 == hc_14906635) && (t_14906633.data[chckIndx(h_14910138, 0, (t_14906633.data).length-1)].Field1 == key_14906634))) {
          result_14906636 = h_14910138;
          break BeforeRet;
          }
          
          h_14910138 = nextTry_10295014(h_14910138, (t_14906633.data).length - 1);
        }
    } while(false);
    result_14906636 = subInt(-1, h_14910138);
  } while (false);

  return result_14906636;

}
function HEX5BHEX5DHEX3D_14840283(t_14840289, key_14840290, val_14840292) {
    if (((t_14840289.data).length == 0)) {
    var correctSizeHEX60gensym43_14850001 = slotsNeeded_10295048(32);
    t_14840289.counter = 0;
    t_14840289.data = new Array(chckRange(correctSizeHEX60gensym43_14850001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym43_14850001, 0, 2147483647);++i) {t_14840289.data[i]={Field0: 0, Field1: 0, Field2: 0};}    }
    
    var hc_14855601 = [0];
    var index_14865639 = rawGet_14855602(t_14840289, key_14840290, hc_14855601, 0);
    if ((0 <= index_14865639)) {
    t_14840289.data[chckIndx(index_14865639, 0, (t_14840289.data).length-1)].Field2 = val_14840292;
    }
    else {
      if (((t_14840289.data).length == 0)) {
      var correctSizeHEX60gensym48_14875001 = slotsNeeded_10295048(32);
      t_14840289.counter = 0;
      t_14840289.data = new Array(chckRange(correctSizeHEX60gensym48_14875001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym48_14875001, 0, 2147483647);++i) {t_14840289.data[i]={Field0: 0, Field1: 0, Field2: 0};}      }
      
      if (mustRehash_14880601(t_14840289)) {
      enlarge_14905161(t_14840289);
      index_14865639 = rawGetKnownHC_14906629(t_14840289, key_14840290, hc_14855601[0]);
      }
      
      index_14865639 = subInt(-1, index_14865639);
      rawInsert_14906122(t_14840289, t_14840289, "data", key_14840290, val_14840292, hc_14855601[0], index_14865639);
      t_14840289.counter = addInt(t_14840289.counter, 1);
    }
    

  
}
function HEX21HEX26_10217270(h_10217272, val_10217273) {
  var result_10217274 = 0;

    var h_10217275 = (h_10217272 >>> 0);
    var val_10217276 = (val_10217273 >>> 0);
    var res_10217277 = ((h_10217275 + val_10217276) >>> 0);
    res_10217277 = ((res_10217277 + (res_10217277 << 10)) >>> 0);
    res_10217277 = (res_10217277 ^ ((res_10217277 >>> 0) >>> 6));
    result_10217274 = (res_10217277|0);

  return result_10217274;

}
function binarySearch_1844190(c_1844192, tab_1844194, len_1844195, stride_1844196) {
      var Tmp3;

  var result_1844197 = 0;

  BeforeRet: do {
    var n_1844198 = len_1844195;
    var t_1844200 = 0;
    L1: do {
        L2: while (true) {
        if (!(1 < n_1844198)) break L2;
          var m_1845001 = divInt(n_1844198, 2);
          var p_1845002 = addInt(t_1844200, mulInt(m_1845001, stride_1844196));
          if ((tab_1844194[chckIndx(p_1845002, 0, (tab_1844194).length-1)] <= ((c_1844192)|0))) {
          t_1844200 = p_1845002;
          n_1844198 = subInt(n_1844198, m_1845001);
          }
          else {
            n_1844198 = m_1845001;
          }
          
        }
    } while(false);
      if (!!((n_1844198 == 0))) Tmp3 = false; else {        Tmp3 = (tab_1844194[chckIndx(t_1844200, 0, (tab_1844194).length-1)] <= ((c_1844192)|0));      }    if (Tmp3) {
    result_1844197 = t_1844200;
    break BeforeRet;
    }
    
    result_1844197 = -1;
    break BeforeRet;
  } while (false);

  return result_1844197;

}
function nuctoLower(c_1860016) {
      var Tmp1;
      var Tmp2;
      var Tmp3;

  var result_1860017 = 0;

  BeforeRet: do {
    var c_1860018 = c_1860016;
    var p_1860042 = binarySearch_1844190(c_1860018, toLowerRanges_1840223, 45, 3);
      if (!(0 <= p_1860042)) Tmp2 = false; else {        Tmp2 = (toLowerRanges_1840223[chckIndx(p_1860042, 0, (toLowerRanges_1840223).length-1)] <= ((c_1860018)|0));      }      if (!Tmp2) Tmp1 = false; else {        Tmp1 = (((c_1860018)|0) <= toLowerRanges_1840223[chckIndx(addInt(p_1860042, 1), 0, (toLowerRanges_1840223).length-1)]);      }    if (Tmp1) {
    result_1860017 = ((subInt(addInt(((c_1860018)|0), toLowerRanges_1840223[chckIndx(addInt(p_1860042, 2), 0, (toLowerRanges_1840223).length-1)]), 500))|0);
    break BeforeRet;
    }
    
    p_1860042 = binarySearch_1844190(c_1860018, toLowerSinglets_1841470, 610, 2);
      if (!(0 <= p_1860042)) Tmp3 = false; else {        Tmp3 = (((c_1860018)|0) == toLowerSinglets_1841470[chckIndx(p_1860042, 0, (toLowerSinglets_1841470).length-1)]);      }    if (Tmp3) {
    result_1860017 = ((subInt(addInt(((c_1860018)|0), toLowerSinglets_1841470[chckIndx(addInt(p_1860042, 1), 0, (toLowerSinglets_1841470).length-1)]), 500))|0);
    break BeforeRet;
    }
    
    result_1860017 = c_1860018;
    break BeforeRet;
  } while (false);

  return result_1860017;

}
function HEX3CHEX3DHEX25_4674(x_4676, y_4677) {
  var result_4678 = false;

    result_4678 = ((x_4676 >>> 0) <= (y_4677 >>> 0));

  return result_4678;

}
function nuctoLowerStr(s_2910216) {
  var result_2910217 = [];

    result_2910217 = nimCopy(null, mnewString(chckRange((s_2910216).length, 0, 2147483647)), NTI113);
    var iHEX60gensym393_2915002 = 0;
    var resultIndexHEX60gensym393_2915004 = 0;
    var runeHEX60gensym393_2915005 = 0;
    L1: do {
        L2: while (true) {
        if (!(iHEX60gensym393_2915002 < (s_2910216).length)) break L2;
          if ((s_2910216[chckIndx(iHEX60gensym393_2915002, 0, (s_2910216).length-1)] <= 127)) {
          runeHEX60gensym393_2915005 = chckRange(s_2910216[chckIndx(iHEX60gensym393_2915002, 0, (s_2910216).length-1)], -2147483648, 2147483647);
          iHEX60gensym393_2915002 = addInt(iHEX60gensym393_2915002, 1);
          }
          else {
          if ((((s_2910216[chckIndx(iHEX60gensym393_2915002, 0, (s_2910216).length-1)] >>> 0) >>> 5) == 6)) {
          if ((iHEX60gensym393_2915002 <= subInt((s_2910216).length, 2))) {
          runeHEX60gensym393_2915005 = chckRange((((s_2910216[chckIndx(iHEX60gensym393_2915002, 0, (s_2910216).length-1)] & 31) << 6) | (s_2910216[chckIndx(addInt(iHEX60gensym393_2915002, 1), 0, (s_2910216).length-1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym393_2915002 = addInt(iHEX60gensym393_2915002, 2);
          }
          else {
            runeHEX60gensym393_2915005 = 65533;
            iHEX60gensym393_2915002 = addInt(iHEX60gensym393_2915002, 1);
          }
          
          }
          else {
          if ((((s_2910216[chckIndx(iHEX60gensym393_2915002, 0, (s_2910216).length-1)] >>> 0) >>> 4) == 14)) {
          if ((iHEX60gensym393_2915002 <= subInt((s_2910216).length, 3))) {
          runeHEX60gensym393_2915005 = chckRange(((((s_2910216[chckIndx(iHEX60gensym393_2915002, 0, (s_2910216).length-1)] & 15) << 12) | ((s_2910216[chckIndx(addInt(iHEX60gensym393_2915002, 1), 0, (s_2910216).length-1)] & 63) << 6)) | (s_2910216[chckIndx(addInt(iHEX60gensym393_2915002, 2), 0, (s_2910216).length-1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym393_2915002 = addInt(iHEX60gensym393_2915002, 3);
          }
          else {
            runeHEX60gensym393_2915005 = 65533;
            iHEX60gensym393_2915002 = addInt(iHEX60gensym393_2915002, 1);
          }
          
          }
          else {
          if ((((s_2910216[chckIndx(iHEX60gensym393_2915002, 0, (s_2910216).length-1)] >>> 0) >>> 3) == 30)) {
          if ((iHEX60gensym393_2915002 <= subInt((s_2910216).length, 4))) {
          runeHEX60gensym393_2915005 = chckRange((((((s_2910216[chckIndx(iHEX60gensym393_2915002, 0, (s_2910216).length-1)] & 7) << 18) | ((s_2910216[chckIndx(addInt(iHEX60gensym393_2915002, 1), 0, (s_2910216).length-1)] & 63) << 12)) | ((s_2910216[chckIndx(addInt(iHEX60gensym393_2915002, 2), 0, (s_2910216).length-1)] & 63) << 6)) | (s_2910216[chckIndx(addInt(iHEX60gensym393_2915002, 3), 0, (s_2910216).length-1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym393_2915002 = addInt(iHEX60gensym393_2915002, 4);
          }
          else {
            runeHEX60gensym393_2915005 = 65533;
            iHEX60gensym393_2915002 = addInt(iHEX60gensym393_2915002, 1);
          }
          
          }
          else {
          if ((((s_2910216[chckIndx(iHEX60gensym393_2915002, 0, (s_2910216).length-1)] >>> 0) >>> 2) == 62)) {
          if ((iHEX60gensym393_2915002 <= subInt((s_2910216).length, 5))) {
          runeHEX60gensym393_2915005 = chckRange(((((((s_2910216[chckIndx(iHEX60gensym393_2915002, 0, (s_2910216).length-1)] & 3) << 24) | ((s_2910216[chckIndx(addInt(iHEX60gensym393_2915002, 1), 0, (s_2910216).length-1)] & 63) << 18)) | ((s_2910216[chckIndx(addInt(iHEX60gensym393_2915002, 2), 0, (s_2910216).length-1)] & 63) << 12)) | ((s_2910216[chckIndx(addInt(iHEX60gensym393_2915002, 3), 0, (s_2910216).length-1)] & 63) << 6)) | (s_2910216[chckIndx(addInt(iHEX60gensym393_2915002, 4), 0, (s_2910216).length-1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym393_2915002 = addInt(iHEX60gensym393_2915002, 5);
          }
          else {
            runeHEX60gensym393_2915005 = 65533;
            iHEX60gensym393_2915002 = addInt(iHEX60gensym393_2915002, 1);
          }
          
          }
          else {
          if ((((s_2910216[chckIndx(iHEX60gensym393_2915002, 0, (s_2910216).length-1)] >>> 0) >>> 1) == 126)) {
          if ((iHEX60gensym393_2915002 <= subInt((s_2910216).length, 6))) {
          runeHEX60gensym393_2915005 = chckRange((((((((s_2910216[chckIndx(iHEX60gensym393_2915002, 0, (s_2910216).length-1)] & 1) << 30) | ((s_2910216[chckIndx(addInt(iHEX60gensym393_2915002, 1), 0, (s_2910216).length-1)] & 63) << 24)) | ((s_2910216[chckIndx(addInt(iHEX60gensym393_2915002, 2), 0, (s_2910216).length-1)] & 63) << 18)) | ((s_2910216[chckIndx(addInt(iHEX60gensym393_2915002, 3), 0, (s_2910216).length-1)] & 63) << 12)) | ((s_2910216[chckIndx(addInt(iHEX60gensym393_2915002, 4), 0, (s_2910216).length-1)] & 63) << 6)) | (s_2910216[chckIndx(addInt(iHEX60gensym393_2915002, 5), 0, (s_2910216).length-1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym393_2915002 = addInt(iHEX60gensym393_2915002, 6);
          }
          else {
            runeHEX60gensym393_2915005 = 65533;
            iHEX60gensym393_2915002 = addInt(iHEX60gensym393_2915002, 1);
          }
          
          }
          else {
            runeHEX60gensym393_2915005 = chckRange(s_2910216[chckIndx(iHEX60gensym393_2915002, 0, (s_2910216).length-1)], -2147483648, 2147483647);
            iHEX60gensym393_2915002 = addInt(iHEX60gensym393_2915002, 1);
          }
          }}}}}
          runeHEX60gensym393_2915005 = nuctoLower(runeHEX60gensym393_2915005);
          var iHEX60gensym443_3165001 = runeHEX60gensym393_2915005;
          if (HEX3CHEX3DHEX25_4674(iHEX60gensym443_3165001, 127)) {
          (result_2910217.length = chckRange(addInt(resultIndexHEX60gensym393_2915004, 1), 0, 2147483647));
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 0), 0, (result_2910217).length-1)] = chckRange(iHEX60gensym443_3165001, 0, 255);
          resultIndexHEX60gensym393_2915004 = addInt(resultIndexHEX60gensym393_2915004, 1);
          }
          else {
          if (HEX3CHEX3DHEX25_4674(iHEX60gensym443_3165001, 2047)) {
          (result_2910217.length = chckRange(addInt(resultIndexHEX60gensym393_2915004, 2), 0, 2147483647));
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 0), 0, (result_2910217).length-1)] = chckRange(((iHEX60gensym443_3165001 >> 6) | 192), 0, 255);
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 1), 0, (result_2910217).length-1)] = chckRange(((iHEX60gensym443_3165001 & 63) | 128), 0, 255);
          resultIndexHEX60gensym393_2915004 = addInt(resultIndexHEX60gensym393_2915004, 2);
          }
          else {
          if (HEX3CHEX3DHEX25_4674(iHEX60gensym443_3165001, 65535)) {
          (result_2910217.length = chckRange(addInt(resultIndexHEX60gensym393_2915004, 3), 0, 2147483647));
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 0), 0, (result_2910217).length-1)] = chckRange(((iHEX60gensym443_3165001 >> 12) | 224), 0, 255);
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 1), 0, (result_2910217).length-1)] = chckRange((((iHEX60gensym443_3165001 >> 6) & 63) | 128), 0, 255);
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 2), 0, (result_2910217).length-1)] = chckRange(((iHEX60gensym443_3165001 & 63) | 128), 0, 255);
          resultIndexHEX60gensym393_2915004 = addInt(resultIndexHEX60gensym393_2915004, 3);
          }
          else {
          if (HEX3CHEX3DHEX25_4674(iHEX60gensym443_3165001, 2097151)) {
          (result_2910217.length = chckRange(addInt(resultIndexHEX60gensym393_2915004, 4), 0, 2147483647));
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 0), 0, (result_2910217).length-1)] = chckRange(((iHEX60gensym443_3165001 >> 18) | 240), 0, 255);
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 1), 0, (result_2910217).length-1)] = chckRange((((iHEX60gensym443_3165001 >> 12) & 63) | 128), 0, 255);
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 2), 0, (result_2910217).length-1)] = chckRange((((iHEX60gensym443_3165001 >> 6) & 63) | 128), 0, 255);
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 3), 0, (result_2910217).length-1)] = chckRange(((iHEX60gensym443_3165001 & 63) | 128), 0, 255);
          resultIndexHEX60gensym393_2915004 = addInt(resultIndexHEX60gensym393_2915004, 4);
          }
          else {
          if (HEX3CHEX3DHEX25_4674(iHEX60gensym443_3165001, 67108863)) {
          (result_2910217.length = chckRange(addInt(resultIndexHEX60gensym393_2915004, 5), 0, 2147483647));
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 0), 0, (result_2910217).length-1)] = chckRange(((iHEX60gensym443_3165001 >> 24) | 248), 0, 255);
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 1), 0, (result_2910217).length-1)] = chckRange((((iHEX60gensym443_3165001 >> 18) & 63) | 128), 0, 255);
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 2), 0, (result_2910217).length-1)] = chckRange((((iHEX60gensym443_3165001 >> 12) & 63) | 128), 0, 255);
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 3), 0, (result_2910217).length-1)] = chckRange((((iHEX60gensym443_3165001 >> 6) & 63) | 128), 0, 255);
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 4), 0, (result_2910217).length-1)] = chckRange(((iHEX60gensym443_3165001 & 63) | 128), 0, 255);
          resultIndexHEX60gensym393_2915004 = addInt(resultIndexHEX60gensym393_2915004, 5);
          }
          else {
          if (HEX3CHEX3DHEX25_4674(iHEX60gensym443_3165001, 2147483647)) {
          (result_2910217.length = chckRange(addInt(resultIndexHEX60gensym393_2915004, 6), 0, 2147483647));
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 0), 0, (result_2910217).length-1)] = chckRange(((iHEX60gensym443_3165001 >> 30) | 252), 0, 255);
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 1), 0, (result_2910217).length-1)] = chckRange((((iHEX60gensym443_3165001 >> 24) & 63) | 128), 0, 255);
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 2), 0, (result_2910217).length-1)] = chckRange((((iHEX60gensym443_3165001 >> 18) & 63) | 128), 0, 255);
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 3), 0, (result_2910217).length-1)] = chckRange((((iHEX60gensym443_3165001 >> 12) & 63) | 128), 0, 255);
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 4), 0, (result_2910217).length-1)] = chckRange((((iHEX60gensym443_3165001 >> 6) & 63) | 128), 0, 255);
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 5), 0, (result_2910217).length-1)] = chckRange(((iHEX60gensym443_3165001 & 63) | 128), 0, 255);
          resultIndexHEX60gensym393_2915004 = addInt(resultIndexHEX60gensym393_2915004, 6);
          }
          else {
          }
          }}}}}
        }
    } while(false);

  return result_2910217;

}
function HEX3DHEX3D_1840064(a_1840066, b_1840067) {
  var result_1840068 = false;

  BeforeRet: do {
    result_1840068 = (((a_1840066)|0) == ((b_1840067)|0));
    break BeforeRet;
  } while (false);

  return result_1840068;

}
function find_6725208(a_6725212, item_6725213) {
  var result_6725214 = 0;

  BeforeRet: do {
    result_6725214 = 0;
    L1: do {
      var i_6725247 = null;
      var i_6725247_Idx = 0;
      var i_14910978 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_14910978 < (a_6725212).length)) break L3;
            i_6725247 = a_6725212; i_6725247_Idx = chckIndx(i_14910978, 0, (a_6725212).length-1);
            if (HEX3DHEX3D_1840064(i_6725247[i_6725247_Idx], item_6725213)) {
            break BeforeRet;
            }
            
            result_6725214 = addInt(result_6725214, 1);
            i_14910978 = addInt(i_14910978, 1);
          }
      } while(false);
    } while(false);
    result_6725214 = -1;
  } while (false);

  return result_6725214;

}
function contains_6725201(a_6725205, item_6725206) {
  var result_6725207 = false;

  BeforeRet: do {
    result_6725207 = (0 <= find_6725208(a_6725205, item_6725206));
    break BeforeRet;
  } while (false);

  return result_6725207;

}
function HEX5BHEX5D_1825283(s_1825287, x_1825289) {
  var result_1825290 = [];

    var a_1825401 = x_1825289.a;
    var L_1825601 = addInt(subInt(x_1825289.b, a_1825401), 1);
    result_1825290 = nimCopy(null, mnewString(chckRange(L_1825601, 0, 2147483647)), NTI113);
    L1: do {
      var i_1825609 = 0;
      var i_14910985 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_14910985 < L_1825601)) break L3;
            i_1825609 = i_14910985;
            result_1825290[chckIndx(i_1825609, 0, (result_1825290).length-1)] = s_1825287[chckIndx(addInt(i_1825609, a_1825401), 0, (s_1825287).length-1)];
            i_14910985 = addInt(i_14910985, 1);
          }
      } while(false);
    } while(false);

  return result_1825290;

}
function HEX2EHEX2E_1825220(a_1825225, b_1825227) {
  var result_1825229 = ({a: 0, b: 0});

    nimCopy(result_1825229, {a: a_1825225, b: b_1825227}, NTI946734);

  return result_1825229;

}
function nucStrip(s_7015040, leading_7015041, trailing_7015042, runes_7015044) {
  var result_7015045 = [];

    var sI_7015047 = 0;
    var eI_7015048 = subInt((s_7015040).length, 1);
    if (leading_7015041) {
    var i_7015050 = 0;
    var xI_7015051 = 0;
    var rune_7015052 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_7015050 < (s_7015040).length)) break L2;
          xI_7015051 = i_7015050;
          if ((s_7015040[chckIndx(i_7015050, 0, (s_7015040).length-1)] <= 127)) {
          rune_7015052 = chckRange(s_7015040[chckIndx(i_7015050, 0, (s_7015040).length-1)], -2147483648, 2147483647);
          i_7015050 = addInt(i_7015050, 1);
          }
          else {
          if ((((s_7015040[chckIndx(i_7015050, 0, (s_7015040).length-1)] >>> 0) >>> 5) == 6)) {
          if ((i_7015050 <= subInt((s_7015040).length, 2))) {
          rune_7015052 = chckRange((((s_7015040[chckIndx(i_7015050, 0, (s_7015040).length-1)] & 31) << 6) | (s_7015040[chckIndx(addInt(i_7015050, 1), 0, (s_7015040).length-1)] & 63)), -2147483648, 2147483647);
          i_7015050 = addInt(i_7015050, 2);
          }
          else {
            rune_7015052 = 65533;
            i_7015050 = addInt(i_7015050, 1);
          }
          
          }
          else {
          if ((((s_7015040[chckIndx(i_7015050, 0, (s_7015040).length-1)] >>> 0) >>> 4) == 14)) {
          if ((i_7015050 <= subInt((s_7015040).length, 3))) {
          rune_7015052 = chckRange(((((s_7015040[chckIndx(i_7015050, 0, (s_7015040).length-1)] & 15) << 12) | ((s_7015040[chckIndx(addInt(i_7015050, 1), 0, (s_7015040).length-1)] & 63) << 6)) | (s_7015040[chckIndx(addInt(i_7015050, 2), 0, (s_7015040).length-1)] & 63)), -2147483648, 2147483647);
          i_7015050 = addInt(i_7015050, 3);
          }
          else {
            rune_7015052 = 65533;
            i_7015050 = addInt(i_7015050, 1);
          }
          
          }
          else {
          if ((((s_7015040[chckIndx(i_7015050, 0, (s_7015040).length-1)] >>> 0) >>> 3) == 30)) {
          if ((i_7015050 <= subInt((s_7015040).length, 4))) {
          rune_7015052 = chckRange((((((s_7015040[chckIndx(i_7015050, 0, (s_7015040).length-1)] & 7) << 18) | ((s_7015040[chckIndx(addInt(i_7015050, 1), 0, (s_7015040).length-1)] & 63) << 12)) | ((s_7015040[chckIndx(addInt(i_7015050, 2), 0, (s_7015040).length-1)] & 63) << 6)) | (s_7015040[chckIndx(addInt(i_7015050, 3), 0, (s_7015040).length-1)] & 63)), -2147483648, 2147483647);
          i_7015050 = addInt(i_7015050, 4);
          }
          else {
            rune_7015052 = 65533;
            i_7015050 = addInt(i_7015050, 1);
          }
          
          }
          else {
          if ((((s_7015040[chckIndx(i_7015050, 0, (s_7015040).length-1)] >>> 0) >>> 2) == 62)) {
          if ((i_7015050 <= subInt((s_7015040).length, 5))) {
          rune_7015052 = chckRange(((((((s_7015040[chckIndx(i_7015050, 0, (s_7015040).length-1)] & 3) << 24) | ((s_7015040[chckIndx(addInt(i_7015050, 1), 0, (s_7015040).length-1)] & 63) << 18)) | ((s_7015040[chckIndx(addInt(i_7015050, 2), 0, (s_7015040).length-1)] & 63) << 12)) | ((s_7015040[chckIndx(addInt(i_7015050, 3), 0, (s_7015040).length-1)] & 63) << 6)) | (s_7015040[chckIndx(addInt(i_7015050, 4), 0, (s_7015040).length-1)] & 63)), -2147483648, 2147483647);
          i_7015050 = addInt(i_7015050, 5);
          }
          else {
            rune_7015052 = 65533;
            i_7015050 = addInt(i_7015050, 1);
          }
          
          }
          else {
          if ((((s_7015040[chckIndx(i_7015050, 0, (s_7015040).length-1)] >>> 0) >>> 1) == 126)) {
          if ((i_7015050 <= subInt((s_7015040).length, 6))) {
          rune_7015052 = chckRange((((((((s_7015040[chckIndx(i_7015050, 0, (s_7015040).length-1)] & 1) << 30) | ((s_7015040[chckIndx(addInt(i_7015050, 1), 0, (s_7015040).length-1)] & 63) << 24)) | ((s_7015040[chckIndx(addInt(i_7015050, 2), 0, (s_7015040).length-1)] & 63) << 18)) | ((s_7015040[chckIndx(addInt(i_7015050, 3), 0, (s_7015040).length-1)] & 63) << 12)) | ((s_7015040[chckIndx(addInt(i_7015050, 4), 0, (s_7015040).length-1)] & 63) << 6)) | (s_7015040[chckIndx(addInt(i_7015050, 5), 0, (s_7015040).length-1)] & 63)), -2147483648, 2147483647);
          i_7015050 = addInt(i_7015050, 6);
          }
          else {
            rune_7015052 = 65533;
            i_7015050 = addInt(i_7015050, 1);
          }
          
          }
          else {
            rune_7015052 = chckRange(s_7015040[chckIndx(i_7015050, 0, (s_7015040).length-1)], -2147483648, 2147483647);
            i_7015050 = addInt(i_7015050, 1);
          }
          }}}}}
          sI_7015047 = i_7015050;
          if (!(contains_6725201(runes_7015044, rune_7015052))) {
          sI_7015047 = xI_7015051;
          break L1;
          }
          
        }
    } while(false);
    }
    
    if (trailing_7015042) {
    var i_7260213 = eI_7015048;
    var xI_7260214 = 0;
    var rune_7260215 = 0;
    L3: do {
        L4: while (true) {
        if (!(0 <= i_7260213)) break L4;
          xI_7260214 = i_7260213;
          if ((s_7015040[chckIndx(xI_7260214, 0, (s_7015040).length-1)] <= 127)) {
          rune_7260215 = chckRange(s_7015040[chckIndx(xI_7260214, 0, (s_7015040).length-1)], -2147483648, 2147483647);
          xI_7260214 = addInt(xI_7260214, 1);
          }
          else {
          if ((((s_7015040[chckIndx(xI_7260214, 0, (s_7015040).length-1)] >>> 0) >>> 5) == 6)) {
          if ((xI_7260214 <= subInt((s_7015040).length, 2))) {
          rune_7260215 = chckRange((((s_7015040[chckIndx(xI_7260214, 0, (s_7015040).length-1)] & 31) << 6) | (s_7015040[chckIndx(addInt(xI_7260214, 1), 0, (s_7015040).length-1)] & 63)), -2147483648, 2147483647);
          xI_7260214 = addInt(xI_7260214, 2);
          }
          else {
            rune_7260215 = 65533;
            xI_7260214 = addInt(xI_7260214, 1);
          }
          
          }
          else {
          if ((((s_7015040[chckIndx(xI_7260214, 0, (s_7015040).length-1)] >>> 0) >>> 4) == 14)) {
          if ((xI_7260214 <= subInt((s_7015040).length, 3))) {
          rune_7260215 = chckRange(((((s_7015040[chckIndx(xI_7260214, 0, (s_7015040).length-1)] & 15) << 12) | ((s_7015040[chckIndx(addInt(xI_7260214, 1), 0, (s_7015040).length-1)] & 63) << 6)) | (s_7015040[chckIndx(addInt(xI_7260214, 2), 0, (s_7015040).length-1)] & 63)), -2147483648, 2147483647);
          xI_7260214 = addInt(xI_7260214, 3);
          }
          else {
            rune_7260215 = 65533;
            xI_7260214 = addInt(xI_7260214, 1);
          }
          
          }
          else {
          if ((((s_7015040[chckIndx(xI_7260214, 0, (s_7015040).length-1)] >>> 0) >>> 3) == 30)) {
          if ((xI_7260214 <= subInt((s_7015040).length, 4))) {
          rune_7260215 = chckRange((((((s_7015040[chckIndx(xI_7260214, 0, (s_7015040).length-1)] & 7) << 18) | ((s_7015040[chckIndx(addInt(xI_7260214, 1), 0, (s_7015040).length-1)] & 63) << 12)) | ((s_7015040[chckIndx(addInt(xI_7260214, 2), 0, (s_7015040).length-1)] & 63) << 6)) | (s_7015040[chckIndx(addInt(xI_7260214, 3), 0, (s_7015040).length-1)] & 63)), -2147483648, 2147483647);
          xI_7260214 = addInt(xI_7260214, 4);
          }
          else {
            rune_7260215 = 65533;
            xI_7260214 = addInt(xI_7260214, 1);
          }
          
          }
          else {
          if ((((s_7015040[chckIndx(xI_7260214, 0, (s_7015040).length-1)] >>> 0) >>> 2) == 62)) {
          if ((xI_7260214 <= subInt((s_7015040).length, 5))) {
          rune_7260215 = chckRange(((((((s_7015040[chckIndx(xI_7260214, 0, (s_7015040).length-1)] & 3) << 24) | ((s_7015040[chckIndx(addInt(xI_7260214, 1), 0, (s_7015040).length-1)] & 63) << 18)) | ((s_7015040[chckIndx(addInt(xI_7260214, 2), 0, (s_7015040).length-1)] & 63) << 12)) | ((s_7015040[chckIndx(addInt(xI_7260214, 3), 0, (s_7015040).length-1)] & 63) << 6)) | (s_7015040[chckIndx(addInt(xI_7260214, 4), 0, (s_7015040).length-1)] & 63)), -2147483648, 2147483647);
          xI_7260214 = addInt(xI_7260214, 5);
          }
          else {
            rune_7260215 = 65533;
            xI_7260214 = addInt(xI_7260214, 1);
          }
          
          }
          else {
          if ((((s_7015040[chckIndx(xI_7260214, 0, (s_7015040).length-1)] >>> 0) >>> 1) == 126)) {
          if ((xI_7260214 <= subInt((s_7015040).length, 6))) {
          rune_7260215 = chckRange((((((((s_7015040[chckIndx(xI_7260214, 0, (s_7015040).length-1)] & 1) << 30) | ((s_7015040[chckIndx(addInt(xI_7260214, 1), 0, (s_7015040).length-1)] & 63) << 24)) | ((s_7015040[chckIndx(addInt(xI_7260214, 2), 0, (s_7015040).length-1)] & 63) << 18)) | ((s_7015040[chckIndx(addInt(xI_7260214, 3), 0, (s_7015040).length-1)] & 63) << 12)) | ((s_7015040[chckIndx(addInt(xI_7260214, 4), 0, (s_7015040).length-1)] & 63) << 6)) | (s_7015040[chckIndx(addInt(xI_7260214, 5), 0, (s_7015040).length-1)] & 63)), -2147483648, 2147483647);
          xI_7260214 = addInt(xI_7260214, 6);
          }
          else {
            rune_7260215 = 65533;
            xI_7260214 = addInt(xI_7260214, 1);
          }
          
          }
          else {
            rune_7260215 = chckRange(s_7015040[chckIndx(xI_7260214, 0, (s_7015040).length-1)], -2147483648, 2147483647);
            xI_7260214 = addInt(xI_7260214, 1);
          }
          }}}}}
          var yI_7510207 = subInt(i_7260213, 1);
          L5: do {
              L6: while (true) {
              if (!(0 <= yI_7510207)) break L6;
                var yIend_7515001 = yI_7510207;
                var pRune_7515002 = 0;
                if ((s_7015040[chckIndx(yIend_7515001, 0, (s_7015040).length-1)] <= 127)) {
                pRune_7515002 = chckRange(s_7015040[chckIndx(yIend_7515001, 0, (s_7015040).length-1)], -2147483648, 2147483647);
                yIend_7515001 = addInt(yIend_7515001, 1);
                }
                else {
                if ((((s_7015040[chckIndx(yIend_7515001, 0, (s_7015040).length-1)] >>> 0) >>> 5) == 6)) {
                if ((yIend_7515001 <= subInt((s_7015040).length, 2))) {
                pRune_7515002 = chckRange((((s_7015040[chckIndx(yIend_7515001, 0, (s_7015040).length-1)] & 31) << 6) | (s_7015040[chckIndx(addInt(yIend_7515001, 1), 0, (s_7015040).length-1)] & 63)), -2147483648, 2147483647);
                yIend_7515001 = addInt(yIend_7515001, 2);
                }
                else {
                  pRune_7515002 = 65533;
                  yIend_7515001 = addInt(yIend_7515001, 1);
                }
                
                }
                else {
                if ((((s_7015040[chckIndx(yIend_7515001, 0, (s_7015040).length-1)] >>> 0) >>> 4) == 14)) {
                if ((yIend_7515001 <= subInt((s_7015040).length, 3))) {
                pRune_7515002 = chckRange(((((s_7015040[chckIndx(yIend_7515001, 0, (s_7015040).length-1)] & 15) << 12) | ((s_7015040[chckIndx(addInt(yIend_7515001, 1), 0, (s_7015040).length-1)] & 63) << 6)) | (s_7015040[chckIndx(addInt(yIend_7515001, 2), 0, (s_7015040).length-1)] & 63)), -2147483648, 2147483647);
                yIend_7515001 = addInt(yIend_7515001, 3);
                }
                else {
                  pRune_7515002 = 65533;
                  yIend_7515001 = addInt(yIend_7515001, 1);
                }
                
                }
                else {
                if ((((s_7015040[chckIndx(yIend_7515001, 0, (s_7015040).length-1)] >>> 0) >>> 3) == 30)) {
                if ((yIend_7515001 <= subInt((s_7015040).length, 4))) {
                pRune_7515002 = chckRange((((((s_7015040[chckIndx(yIend_7515001, 0, (s_7015040).length-1)] & 7) << 18) | ((s_7015040[chckIndx(addInt(yIend_7515001, 1), 0, (s_7015040).length-1)] & 63) << 12)) | ((s_7015040[chckIndx(addInt(yIend_7515001, 2), 0, (s_7015040).length-1)] & 63) << 6)) | (s_7015040[chckIndx(addInt(yIend_7515001, 3), 0, (s_7015040).length-1)] & 63)), -2147483648, 2147483647);
                yIend_7515001 = addInt(yIend_7515001, 4);
                }
                else {
                  pRune_7515002 = 65533;
                  yIend_7515001 = addInt(yIend_7515001, 1);
                }
                
                }
                else {
                if ((((s_7015040[chckIndx(yIend_7515001, 0, (s_7015040).length-1)] >>> 0) >>> 2) == 62)) {
                if ((yIend_7515001 <= subInt((s_7015040).length, 5))) {
                pRune_7515002 = chckRange(((((((s_7015040[chckIndx(yIend_7515001, 0, (s_7015040).length-1)] & 3) << 24) | ((s_7015040[chckIndx(addInt(yIend_7515001, 1), 0, (s_7015040).length-1)] & 63) << 18)) | ((s_7015040[chckIndx(addInt(yIend_7515001, 2), 0, (s_7015040).length-1)] & 63) << 12)) | ((s_7015040[chckIndx(addInt(yIend_7515001, 3), 0, (s_7015040).length-1)] & 63) << 6)) | (s_7015040[chckIndx(addInt(yIend_7515001, 4), 0, (s_7015040).length-1)] & 63)), -2147483648, 2147483647);
                yIend_7515001 = addInt(yIend_7515001, 5);
                }
                else {
                  pRune_7515002 = 65533;
                  yIend_7515001 = addInt(yIend_7515001, 1);
                }
                
                }
                else {
                if ((((s_7015040[chckIndx(yIend_7515001, 0, (s_7015040).length-1)] >>> 0) >>> 1) == 126)) {
                if ((yIend_7515001 <= subInt((s_7015040).length, 6))) {
                pRune_7515002 = chckRange((((((((s_7015040[chckIndx(yIend_7515001, 0, (s_7015040).length-1)] & 1) << 30) | ((s_7015040[chckIndx(addInt(yIend_7515001, 1), 0, (s_7015040).length-1)] & 63) << 24)) | ((s_7015040[chckIndx(addInt(yIend_7515001, 2), 0, (s_7015040).length-1)] & 63) << 18)) | ((s_7015040[chckIndx(addInt(yIend_7515001, 3), 0, (s_7015040).length-1)] & 63) << 12)) | ((s_7015040[chckIndx(addInt(yIend_7515001, 4), 0, (s_7015040).length-1)] & 63) << 6)) | (s_7015040[chckIndx(addInt(yIend_7515001, 5), 0, (s_7015040).length-1)] & 63)), -2147483648, 2147483647);
                yIend_7515001 = addInt(yIend_7515001, 6);
                }
                else {
                  pRune_7515002 = 65533;
                  yIend_7515001 = addInt(yIend_7515001, 1);
                }
                
                }
                else {
                  pRune_7515002 = chckRange(s_7015040[chckIndx(yIend_7515001, 0, (s_7015040).length-1)], -2147483648, 2147483647);
                  yIend_7515001 = addInt(yIend_7515001, 1);
                }
                }}}}}
                if ((yIend_7515001 < xI_7260214)) {
                break L5;
                }
                
                i_7260213 = yI_7510207;
                rune_7260215 = pRune_7515002;
                yI_7510207 = subInt(yI_7510207, 1);
              }
          } while(false);
          if (!(contains_6725201(runes_7015044, rune_7260215))) {
          eI_7015048 = subInt(xI_7260214, 1);
          break L3;
          }
          
          i_7260213 = subInt(i_7260213, 1);
        }
    } while(false);
    }
    
    var newLen_7760225 = addInt(subInt(eI_7015048, sI_7015047), 1);
    result_7015045 = nimCopy(null, mnewString(0), NTI113);
    if ((0 < newLen_7760225)) {
    result_7015045.push.apply(result_7015045, HEX5BHEX5D_1825283(s_7015040, HEX2EHEX2E_1825220(sI_7015047, eI_7015048)));;
    }
    

  return result_7015045;

}
function HEX21HEX24_10217305(h_10217307) {
  var result_10217308 = 0;

    var h_10217309 = (h_10217307 >>> 0);
    var res_10217317 = ((h_10217309 + (h_10217309 << 3)) >>> 0);
    res_10217317 = (res_10217317 ^ ((res_10217317 >>> 0) >>> 11));
    res_10217317 = ((res_10217317 + (res_10217317 << 15)) >>> 0);
    result_10217308 = (res_10217317|0);

  return result_10217308;

}
function hash_14631255(x_14631257) {
  var result_14631258 = 0;

    result_14631258 = HEX21HEX26_10217270(HEX21HEX26_10217270(HEX21HEX26_10217270(hash_10270214(nuctoLowerStr(nucStrip(x_14631257.name, true, true, unicodeSpaces_1844041))), hash_10270214(nuctoLowerStr(nucStrip(x_14631257.sector.postalCode, true, true, unicodeSpaces_1844041)))), hash_10270214(nuctoLowerStr(nucStrip(x_14631257.sector.city, true, true, unicodeSpaces_1844041)))), hash_10270214(nuctoLowerStr(nucStrip(x_14631257.sector.district, true, true, unicodeSpaces_1844041))));
    result_14631258 = HEX21HEX24_10217305(result_14631258);

  return result_14631258;

}
function initTblTotFamByStreet_14710837() {
              var Tmp8;
              var Tmp9;
              var Tmp10;
              var Tmp11;
              var Tmp12;
              var Tmp13;

  var result_14710861 = [({data: [], counter: 0})];

    nimCopy(result_14710861[0], initTable_14710864(32), NTI14710848);
    var streets_14720629 = nsuSplitCharSet(makeNimstrLit("Plz|DistrictUser|City|District|Street|TotalFamilies\x0A63628|Ahl|Bad Soden-Salm\xC3\xBCnster|Ahl|Am Hang|1\x0A63628|Ahl|Bad Soden-Salm\xC3\xBCnster|Ahl|Sch\xC3\xB6ne Aussicht|2\x0A63628|Ahl||||3\x0A63628|Alsberg|Bad Soden-Salm\xC3\xBCnster|Alsberg|Ringstra\xC3\x9Fe|1\x0A63628|Alsberg||||1\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany|Linsengericht|Altenha\xC3\x9Flau|Elf Morgen|1\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany|Linsengericht|Altenha\xC3\x9Flau|Fasanenweg|3\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany|Linsengericht|Altenha\xC3\x9Flau|Metzgerstra\xC3\x9Fe|1\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany|Linsengericht|Altenha\xC3\x9Flau|Rosenstra\xC3\x9Fe|1\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany|Linsengericht|Altenha\xC3\x9Flau|Strumpelburg|2\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany|Linsengericht|Altenha\xC3\x9Flau|Vor der Au|1\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany||||9\x0A63579|Altenmittlau|Freigericht|Altenmittlau|An der Freigerichthalle|1\x0A63579|Altenmittlau|Freigericht|Altenmittlau|Industriestra\xC3\x9Fe|2\x0A63579|Altenmittlau|Freigericht||Kalkbergstra\xC3\x9Fe|1\x0A63579|Altenmittlau|Freigericht|Altenmittlau|Kolpingstra\xC3\x9Fe|3\x0A63579|Altenmittlau|Freigericht|Altenmittlau|Somborner Stra\xC3\x9Fe|1\x0A63579|Altenmittlau||||8\x0A63674|Altenstadt|Altenstadt|Altenstadt|Alemannenstra\xC3\x9Fe|4\x0A63674|Altenstadt|Altenstadt|Altenstadt|An der Hollerstaude|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|An der Steinkaute|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|Auf der Mauer|2\x0A63674|Altenstadt|Altenstadt|Altenstadt|Borngasse|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|Frankfurter Stra\xC3\x9Fe|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|Goethestra\xC3\x9Fe|4\x0A63674|Altenstadt|Altenstadt|Altenstadt|Hadrianstra\xC3\x9Fe|4\x0A63674|Altenstadt|Altenstadt|Altenstadt|Hanauer Stra\xC3\x9Fe|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|Kirchgasse|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|R\xC3\xB6merbrunnen|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|Seilerstra\xC3\x9Fe|2\x0A63674|Altenstadt||||23\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|Bamberger Stra\xC3\x9Fe|2\x0A63607|Aufenau|W\xC3\xA4chtersbach||Frankfurter Stra\xC3\x9Fe|9\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|F\xC3\xBCrther Stra\xC3\x9Fe|2\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|Grimmstra\xC3\x9Fe|4\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|Hermann-L\xC3\xB6ns-Stra\xC3\x9Fe|1\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|Kantstra\xC3\x9Fe|1\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|Martin-Luther-Stra\xC3\x9Fe|1\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|M\xC3\xBCnchener Stra\xC3\x9Fe|2\x0A63607|Aufenau||||22\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Am Linsenhof|2\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster||An der Rolandquelle|2\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Auf der Hohl|2\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Bornweg|7\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Burgstra\xC3\x9Fe|4\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Feldstra\xC3\x9Fe|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Hegelstra\xC3\x9Fe|5\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Hochstra\xC3\x9Fe|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Hohm\xC3\xBChlenweg|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Honiggasse|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Kantstra\xC3\x9Fe|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Karl-Roth-Stra\xC3\x9Fe|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Pacificusstra\xC3\x9Fe|4\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster||Romsthaler Stra\xC3\x9Fe|11\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Rudolf-Berta-Stra\xC3\x9Fe|6\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Sprudelallee|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Stolzenthalstra\xC3\x9Fe|17\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Weilersweg|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Bad Sodener Stra\xC3\x9Fe|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Bahnhofstra\xC3\x9Fe|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Frankfurter Stra\xC3\x9Fe|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Fuldaer Stra\xC3\x9Fe|12\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Hanauer Landstra\xC3\x9Fe|13\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Joseph-M\xC3\xBCller-Stra\xC3\x9Fe|2\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Kettelerstra\xC3\x9Fe|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|M\xC3\xBCnsterbergstra\xC3\x9Fe|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Philipp-Reis-Stra\xC3\x9Fe|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|R\xC3\xBCckm\xC3\xBChlenweg|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Schillerstra\xC3\x9Fe|4\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Schwedenring|4\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Spessartstra\xC3\x9Fe|9\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Sudetenlandstra\xC3\x9Fe|7\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Winkelgasse|1\x0A63628|B.Soden-Salm\xC3\xBCns.||||141\x0A63619|Bad Orb|Bad Orb|Bad Orb|Altenbergstra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Am Schafstrieb|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Austra\xC3\x9Fe|5\x0A63619|Bad Orb|Bad Orb|Bad Orb|Berliner Stra\xC3\x9Fe|2\x0A63619|Bad Orb|Bad Orb|Bad Orb|Burgstra\xC3\x9Fe|4\x0A63619|Bad Orb|Bad Orb|Bad Orb|Eichendorffstra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Faulhaberstra\xC3\x9Fe|4\x0A63619|Bad Orb|Bad Orb|Bad Orb|F\xC3\xBCllweinstra\xC3\x9Fe|3\x0A63619|Bad Orb|Bad Orb|Bad Orb|Kinzigweg|2\x0A63619|Bad Orb|Bad Orb|Bad Orb|Lauzenstra\xC3\x9Fe|4\x0A63619|Bad Orb|Bad Orb|Bad Orb|Martin-Luther-Stra\xC3\x9Fe|5\x0A63619|Bad Orb|Bad Orb|Bad Orb|Mittelweg|6\x0A63619|Bad Orb|Bad Orb|Bad Orb|Taunusstra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Uferweg|2\x0A63619|Bad Orb|Bad Orb|Bad Orb|W\xC3\xA4chtersbacher Weg|4\x0A63619|Bad Orb|Bad Orb|Bad Orb|Wemmstra\xC3\x9Fe|2\x0A63619|Bad Orb|Bad Orb|Bad Orb|Bayernweg|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Bennweg|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Burgring|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Eduard-Gr\xC3\xA4f-Stra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Frankenweg|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Frankfurter Stra\xC3\x9Fe|2\x0A63619|Bad Orb|Bad Orb|Bad Orb|Friedrichstalstra\xC3\x9Fe|6\x0A63619|Bad Orb|Bad Orb|Bad Orb|Hubertusstra\xC3\x9Fe|6\x0A63619|Bad Orb|Bad Orb|Bad Orb|Johann-B\xC3\xBCttel-Stra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Kanalstra\xC3\x9Fe|2\x0A63619|Bad Orb|Bad Orb|Bad Orb|Kasselbergweg|11\x0A63619|Bad Orb|Bad Orb|Bad Orb|Leimbachstra\xC3\x9Fe|5\x0A63619|Bad Orb|Bad Orb|Bad Orb|Leopold-Koch-Stra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Lindenallee|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Marktbrunnenstra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Rh\xC3\xB6nstra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Sachsenh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Salzk\xC3\xA4rrnerweg|7\x0A63619|Bad Orb||||97\x0A63594|Bahnhofsiedlung|Hasselroth|Niedermittlau-Bahnhofssiedlung|Berliner Stra\xC3\x9Fe|2\x0A63594|Bahnhofsiedlung|Hasselroth|Niedermittlau-Bahnhofssiedlung|Fichtenstra\xC3\x9Fe|1\x0A63594|Bahnhofsiedlung|Hasselroth|Niedermittlau-Bahnhofssiedlung|Heinrich-Hofmann-Stra\xC3\x9Fe|3\x0A63594|Bahnhofsiedlung|Hasselroth|Niedermittlau-Bahnhofssiedlung|Lindenstra\xC3\x9Fe|1\x0A63594|Bahnhofsiedlung|Hasselroth|Niedermittlau-Bahnhofssiedlung|Waldstra\xC3\x9Fe|1\x0A63594|Bahnhofsiedlung||||8\x0A63579|Bernbach|Freigericht|Bernbach|Birkenhainer Stra\xC3\x9Fe|2\x0A63579|Bernbach|Freigericht|Bernbach|Brentanostra\xC3\x9Fe|1\x0A63579|Bernbach|Freigericht|Neuses|Vogelsbergstra\xC3\x9Fe|1\x0A63579|Bernbach||||4\x0A63599|Bieber|Biebergem\xC3\xBCnd|Bieber|Zimmerwiesenweg|1\x0A63599|Bieber||||1\x0A63633|Birstein|Birstein|Birstein|An der Riedwiese|2\x0A63633|Birstein|Birstein|Birstein|Bornwiesenweg|1\x0A63633|Birstein|Birstein|Birstein|B\xC3\xBCdinger Stra\xC3\x9Fe|1\x0A63633|Birstein|Birstein|Birstein|F\xC3\xBCnfkirchener Stra\xC3\x9Fe|3\x0A63633|Birstein|Birstein|Birstein|M\xC3\xBChlweg|1\x0A63633|Birstein|Birstein|Birstein|Rh\xC3\xB6nstra\xC3\x9Fe|1\x0A63633|Birstein|Birstein|Birstein|Spessartstra\xC3\x9Fe|3\x0A63633|Birstein|Birstein|Birstein|Steinweg|1\x0A63633|Birstein|Birstein|Birstein|Anton-Praetorius-Weg|2\x0A63633|Birstein|Birstein|Birstein|Bathwiesenweg|5\x0A63633|Birstein|Birstein|Birstein|Charlottenstra\xC3\x9Fe|15\x0A63633|Birstein|Birstein|Birstein|Julius-Hufnagel-Weg|3\x0A63633|Birstein|Birstein|Birstein|Katharinenstra\xC3\x9Fe|4\x0A63633|Birstein|Birstein|Birstein|Raiffeisenstra\xC3\x9Fe|5\x0A63633|Birstein|Birstein|Birstein|Sophienstra\xC3\x9Fe|6\x0A63633|Birstein|Birstein|Birstein|Zehntefeld|4\x0A63633|Birstein||||57\x0A63633|B\xC3\xB6sges\xC3\xA4\xC3\x9F|Birstein|B\xC3\xB6ssges\xC3\xA4\xC3\x9F|Grundweg|2\x0A63633|B\xC3\xB6sges\xC3\xA4\xC3\x9F||||2\x0A63599|Breitenborn|Gr\xC3\xBCndau|Breitenborn A.W.|Bergwiesenstra\xC3\x9Fe|1\x0A63599|Breitenborn|Gr\xC3\xBCndau|Breitenborn A.W.|Buchenweg|1\x0A63599|Breitenborn|Gr\xC3\xBCndau|Breitenborn A.W.|Hauptstra\xC3\x9Fe|1\x0A63599|Breitenborn|Biebergem\xC3\xBCnd|Breitenborn|Lanzinger Stra\xC3\x9Fe|1\x0A63599|Breitenborn||||4\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|August-Bebel-Stra\xC3\x9Fe|2\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Buchenweg|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Erich-Ollenhauer-Stra\xC3\x9Fe|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Ernst-Reuter-Stra\xC3\x9Fe|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Gleiwitzer Stra\xC3\x9Fe|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Hauptstra\xC3\x9Fe|2\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Im Niederried|3\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Kettelerstra\xC3\x9Fe|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Kirleweg|2\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|K\xC3\xB6nigsberger Stra\xC3\x9Fe|2\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Lindenallee|3\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Tilsiter Stra\xC3\x9Fe|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Udo-M\xC3\xBCller-Ring|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Varang\xC3\xA9viller Stra\xC3\x9Fe|2\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Walter-Rathenau-Stra\xC3\x9Fe|2\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Innerer Ring|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Kellereigasse|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Saalburgring|4\x0A63486|Bruchk\xC3\xB6bel||||31\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Nu\xC3\x9Fgraben|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Schlag|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Wildenstein|4\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Bismarckstra\xC3\x9Fe|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Friedrich-Fendt-Stra\xC3\x9Fe|8\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Gymnasiumstra\xC3\x9Fe|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Kastanienring|3\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Kellergasse|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|M\xC3\xBChltorstra\xC3\x9Fe|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Wilhelm-Dotter-Stra\xC3\x9Fe|3\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Alten Viadukt|12\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Klarengarten|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Im Flachsgrund|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|In den Weiherwiesen|12\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|An der Kleibscheibe|3\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Industriestra\xC3\x9Fe|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Salzbachaue|9\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Thiergartenstra\xC3\x9Fe|22\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Am Hofacker|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Auf dem Biehm|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen||Calbacher Stra\xC3\x9Fe|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Finkenweg|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Hauptstra\xC3\x9Fe|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Im Einzel|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Im Hinterfeld|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Im Hoffeld|10\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Otto-Beppler-Stra\xC3\x9Fe|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Schulstra\xC3\x9Fe|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Waldstra\xC3\x9Fe|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Wilhelm-Leuschner-Stra\xC3\x9Fe|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Zum Seemenbach|1\x0A63654|B\xC3\xBCdingen||||114\x0A63165|Dietesheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|B\xC3\xBCrgermeister-Hainz-Stra\xC3\x9Fe|8\x0A63165|Dietesheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Elisabethenstra\xC3\x9Fe|10\x0A63165|Dietesheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Thomas-Mann-Stra\xC3\x9Fe|3\x0A63165|Dietesheim||||21\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Am Bieberbach|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Am Steinberg|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|B\xC3\xB6llstra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Gallische Stra\xC3\x9Fe|3\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Georg-August-Zinn-Stra\xC3\x9Fe|2\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Gertrud-Kolmar-Weg|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Gustav-Heinemann-Ring|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Konrad-Adenauer-Allee|2\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Kurt-Schumacher-Allee|2\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Langg\xC3\xA4sserstra\xC3\x9Fe|2\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Neckarstra\xC3\x9Fe|3\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Nibelungenstra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Patersh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Pestalozzistra\xC3\x9Fe|3\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Rheinstra\xC3\x9Fe|11\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Ringelnatzstra\xC3\x9Fe|2\x0A63128|Dietzenbach|Dietzenbach|Steinberg|R\xC3\xB6merstra\xC3\x9Fe|2\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Schlegelstra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Siedlerstra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Staufenstra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Taunusstra\xC3\x9Fe|9\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Thomas-Mann-Ring|1\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Aschaffenburger Weg|4\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Babenh\xC3\xA4user Stra\xC3\x9Fe|2\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Glash\xC3\xBCttener Weg|4\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Konrad-Lang-Stra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Marktheidenfelder Weg|3\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Rodgaustra\xC3\x9Fe|5\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Rohrbrunner Weg|2\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Talstra\xC3\x9Fe|6\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Tulpenstra\xC3\x9Fe|2\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Wertheimer Weg|1\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Wiesenstra\xC3\x9Fe|3\x0A63128|Dietzenbach||||85\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Backesweg|1\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Beethovenstra\xC3\x9Fe|1\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Berliner Stra\xC3\x9Fe|1\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Bonhoefferstra\xC3\x9Fe|2\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Hermann-L\xC3\xB6ns-Stra\xC3\x9Fe|4\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|In der Mainaue|1\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|K\xC3\xA4the-Kollwitz-Stra\xC3\x9Fe|12\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|S\xC3\xBCdring|4\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Westendstra\xC3\x9Fe|4\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Wilhelmsbader Stra\xC3\x9Fe|1\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Wingertstra\xC3\x9Fe|1\x0A63477|D\xC3\xB6rnigheim||||32\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Am Alten S\xC3\xA4gewerk|2\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Am R\xC3\xBCckersgraben|8\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Dekan-Schuster-Stra\xC3\x9Fe|1\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Nieuwpoorter Stra\xC3\x9Fe|1\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Raiffeisenstra\xC3\x9Fe|1\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Saalburgring|2\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Spessartring|10\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Dr.-Weinholz-Stra\xC3\x9Fe|1\x0A63110|Dudenhofen||||26\x0A63628|Eckardroth|Bad Soden-Salm\xC3\xBCnster|Eckardroth-Wahlert|Bergstra\xC3\x9Fe|1\x0A63628|Eckardroth|Bad Soden-Salm\xC3\xBCnster|Eckardroth-Wahlert|Oberweg|2\x0A63628|Eckardroth|Bad Soden-Salm\xC3\xBCnster|Eckardroth-Wahlert|Stiftungsstra\xC3\x9Fe|4\x0A63628|Eckardroth||||7\x0A63654|Eckartshausen|B\xC3\xBCdingen|Eckartshausen|Lohrbergstra\xC3\x9Fe|1\x0A63654|Eckartshausen||||1\x0A61130|Eichen|Nidderau|Eichen|Kleine Gasse|3\x0A61130|Eichen||||3\x0A63589|Eidenges\xC3\xA4\xC3\x9F|Linsengericht|Eidenges\xC3\xA4\xC3\x9F|Dettersweg|2\x0A63589|Eidenges\xC3\xA4\xC3\x9F|Linsengericht|Eidenges\xC3\xA4\xC3\x9F|Im Bangertsfeld|1\x0A63589|Eidenges\xC3\xA4\xC3\x9F||||3\x0A61130|Erbstadt|Nidderau|Erbstadt|Bogenstra\xC3\x9Fe|2\x0A61130|Erbstadt|Nidderau|Erbstadt|Hauptstra\xC3\x9Fe|1\x0A61130|Erbstadt||||3\x0A63639 Sum|Fl\xC3\xB6rsbach|Fl\xC3\xB6rsbachtal|Fl\xC3\xB6rsbach|Gartenweg|1\x0A63639 Sum|Fl\xC3\xB6rsbach|Fl\xC3\xB6rsbachtal|Fl\xC3\xB6rsbach|Huntzelstra\xC3\x9Fe|3\x0A63639 Sum|Fl\xC3\xB6rsbach|Fl\xC3\xB6rsbachtal|Fl\xC3\xB6rsbach|Orber Stra\xC3\x9Fe|1\x0A63639 Sum|Fl\xC3\xB6rsbach||||5\x0A63500|Froschhausen|Seligenstadt|Froschhausen|Hanauer Landstra\xC3\x9Fe|2\x0A63500|Froschhausen|Seligenstadt|Froschhausen|Mittelstra\xC3\x9Fe|1\x0A63500|Froschhausen|Seligenstadt|Froschhausen|Seligenst\xC3\xA4dter Stra\xC3\x9Fe|1\x0A63500|Froschhausen||||4\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Barbarossastra\xC3\x9Fe|1\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Grimmelshausenstra\xC3\x9Fe|2\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Herzbachweg|15\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Im Setzling|3\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|In der Brug|1\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Kapellenweg|1\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Kuhgasse|3\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|M\xC3\xBChlbachweg|2\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Pappelweg|2\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Parkstra\xC3\x9Fe|1\x0A63571|Gelnhausen-Nord||||31\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Am Galgenfeld|3\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Clamecystra\xC3\x9Fe|16\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Dr.-Sondheimer-Stra\xC3\x9Fe|2\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Frankfurter Stra\xC3\x9Fe|1\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Franklinstra\xC3\x9Fe|1\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Graslitzer Stra\xC3\x9Fe|2\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Im Weiherfeld|5\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Lohm\xC3\xBChlenweg|18\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Rudolf-Diesel-Stra\xC3\x9Fe|1\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Uferweg|1\x0A63571|Gelnhausen-S\xC3\xBCd||||50\x0A63695|Glauberg, Glauburg, Deutschland|Glauburg|Glauberg|Ladestra\xC3\x9Fe|2\x0A63695|Glauberg, Glauburg, Deutschland|Glauburg|Glauberg|Wallgasse|1\x0A63695|Glauberg, Glauburg, Deutschland||||3\x0A63594|Gondsroth|Hasselroth|Gondsroth|Hauptstra\xC3\x9Fe|1\x0A63594|Gondsroth|Hasselroth|Gondsroth|Schulstra\xC3\x9Fe|2\x0A63594|Gondsroth||||3\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Brown-Boveri-Stra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Carl-Kronenberger-Stra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Hainbachstra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Karl-Kihn-Stra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Krotzenburger Stra\xC3\x9Fe|2\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Otto-Gr\xC3\xBCn-Stra\xC3\x9Fe|2\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Spitzenweg|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Zum Torfbruch|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Annette-Kolb-Weg|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Annette-von-Droste-H\xC3\xBClshoff-Weg|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|August-Gaul-Stra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Bahnhofstra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Bertolt-Brecht-Weg|4\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Franz-Kafka-Weg|3\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Goethestra\xC3\x9Fe|3\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Hauptstra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Ingeborg-Bachmann-Weg|3\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Lion-Feuchtwanger-Weg|5\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Rudolf-Hagelstange-Weg|3\x0A63457|Gro\xC3\x9Fauheim||||36\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Molkenborn|9\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Pfaffenwald|3\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|An der Schildwache|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Gr\xC3\xBCnwaldweg|2\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Pferdsbacher Weg|3\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen||Vogelsbergstra\xC3\x9Fe|3\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Zum Stadtgraben|2\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Kreischborn|2\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheimer Stra\xC3\x9Fe|3\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Eichelbergring|2\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Ostpreu\xC3\x9Fenstra\xC3\x9Fe|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Sudetenstra\xC3\x9Fe|7\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|\xC3\x9Cber den Roten Gr\xC3\xA4ben|4\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Bahnhofstra\xC3\x9Fe|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Berliner Stra\xC3\x9Fe|4\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Lorbacher Stra\xC3\x9Fe|8\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen||Orlesh\xC3\xA4user Stra\xC3\x9Fe|4\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen||\xC3\x9Cber der Seeme|3\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Im Lipperts|21\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Lorbacher Stra\xC3\x9Fe|7\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|An der Fahrbach|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Bahnhofstra\xC3\x9Fe|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Mackensenstra\xC3\x9Fe|8\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|M\xC3\xA4usfall|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Schillerstra\xC3\x9Fe|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Seemenbachstra\xC3\x9Fe|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen||Vogelsbergstra\xC3\x9Fe|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany||||104\x0A63589|Gro\xC3\x9Fenhausen|Linsengericht|Gro\xC3\x9Fenhausen|Kastanienstra\xC3\x9Fe|1\x0A63589|Gro\xC3\x9Fenhausen|Linsengericht|Gro\xC3\x9Fenhausen|Nordstra\xC3\x9Fe|1\x0A63589|Gro\xC3\x9Fenhausen||||2\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Albert-Einstein-Stra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Bahnhofstra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Danziger Stra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gutenbergallee|4\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Im Flachsgewann|2\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Max-Planck-Stra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Melmensee|3\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Oberwaldstra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Rh\xC3\xB6nstra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Robert-Koch-Weg|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Taunusstra\xC3\x9Fe|4\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Torsbyv\xC3\xA4gen|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Wahlersee|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Bahnhofstra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Beethovenstra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Wilhelmstra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg||||25\x0A63571|Hailer|Gelnhausen|Hailer|Am Fa\xC3\x9Fholzwerk|1\x0A63571|Hailer|Gelnhausen|Hailer|Bl\xC3\xBCmgesgrundstra\xC3\x9Fe|1\x0A63571|Hailer|Gelnhausen|Hailer|Dr.-Heinrich-Mohn-Stra\xC3\x9Fe|5\x0A63571|Hailer|Gelnhausen|Hailer|Eisenbahnstra\xC3\x9Fe|6\x0A63571|Hailer|Gelnhausen|Hailer|Gelnh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63571|Hailer|Gelnhausen|Hailer|Gr\xC3\xBCner Weg|5\x0A63571|Hailer|Gelnhausen|Hailer|Jahnstra\xC3\x9Fe|1\x0A63571|Hailer|Gelnhausen|Hailer|Reinhardstra\xC3\x9Fe|1\x0A63571|Hailer|Gelnhausen|Hailer|Sudetenstra\xC3\x9Fe|2\x0A63571|Hailer|Gelnhausen|Hailer|Vorm R\xC3\xB6hrig|5\x0A63571|Hailer||||28\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Burgstra\xC3\x9Fe|1\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Hainstra\xC3\x9Fe|2\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Hochstra\xC3\x9Fe|1\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Ortsberingweg|1\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Schmiedegasse|1\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Weidenstra\xC3\x9Fe|2\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Zur K\xC3\xB6nigseiche|2\x0A63584|Hain-Gr\xC3\xBCndau||||10\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Hainhausen|Br\xC3\xBCder-Grimm-Stra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Weiskirchen|Dietrich-Bonhoeffer-Stra\xC3\x9Fe|3\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Hainhausen|Eppsteiner Stra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Weiskirchen|Friedrich-Ebert-Stra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Weiskirchen|Hainh\xC3\xA4user Stra\xC3\x9Fe|2\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Weiskirchen|Hauptstra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Weiskirchen|Kolpingstra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Hainhausen|Rochusstra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Hainhausen|Rubensstra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Hainhausen|Wilhelm-Leuschner-Stra\xC3\x9Fe|5\x0A63110|Hainhausen,We\xC3\x9Fkirchen||||17\x0A63512|Hainstadt|Hainburg||Bachgasse|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Bahnhofstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Friedhofstra\xC3\x9Fe|2\x0A63512|Hainstadt|Hainburg|Hainstadt|Hainst\xC3\xA4dter Stra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Hauptstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Wilhelmstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Am Kiefernhain|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Dresdener Stra\xC3\x9Fe|2\x0A63512|Hainstadt|Hainburg|Hainstadt|Erfurter Stra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Fichtestra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Gablonzer Stra\xC3\x9Fe|2\x0A63512|Hainstadt|Hainburg|Hainstadt|Gartenstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Im L\xC3\xB6schem|1\x0A63512|Hainstadt|Hainburg|Hainstadt|K\xC3\xB6nigsberger Stra\xC3\x9Fe|4\x0A63512|Hainstadt|Hainburg|Hainstadt|Leipziger Stra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Offenbacher Landstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Reichenberger Ring|2\x0A63512|Hainstadt|Hainburg|Hainstadt|Schillerstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Uhlandstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Waldstra\xC3\x9Fe|1\x0A63512|Hainstadt||||27\x0A63571|Haitz|Gelnhausen|Haitz|Am Bocksborn|2\x0A63571|Haitz|Gelnhausen|Haitz|Am Kandelrain|1\x0A63571|Haitz|Gelnhausen|Haitz|Am Langen Steg|1\x0A63571|Haitz|Gelnhausen|Gelnhausen|Barbarossastra\xC3\x9Fe|4\x0A63571|Haitz|Gelnhausen|Haitz|Birsteiner Stra\xC3\x9Fe|2\x0A63571|Haitz|Gelnhausen|Haitz|Dorfstra\xC3\x9Fe|1\x0A63571|Haitz|Gelnhausen|Haitz|Dr.-Faust-Stra\xC3\x9Fe|2\x0A63571|Haitz|Gelnhausen|Gelnhausen|Fuldaweg|2\x0A63571|Haitz|Gelnhausen|Gelnhausen|Himmelauer M\xC3\xBChle|1\x0A63571|Haitz|Gelnhausen|Gelnhausen|Kinzigstra\xC3\x9Fe|13\x0A63571|Haitz|Gelnhausen||Kremp\'sche Spitze|4\x0A63571|Haitz|Gelnhausen|Gelnhausen|Mainstra\xC3\x9Fe|7\x0A63571|Haitz|Gelnhausen|Haitz|Neuer Weg|1\x0A63571|Haitz|Gelnhausen|Haitz|Sch\xC3\xB6ne Aussicht|1\x0A63571|Haitz|Gelnhausen|Meerholz|Spessartstra\xC3\x9Fe|2\x0A63571|Haitz|Gelnhausen|Haitz|Zum Taubengarten|8\x0A63571|Haitz||||52\x0A63450|Hanau|Hanau|Hanau|Altstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Am Frankfurter Tor|4\x0A63450|Hanau|Hanau|Hanau|Eugen-Kaiser-Stra\xC3\x9Fe|2\x0A63450|Hanau|Hanau|Hanau|Fischerh\xC3\xBCttenweg|1\x0A63450|Hanau|Hanau|Hanau|G\xC3\xA4rtnerstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Glockenstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|In den T\xC3\xBCrkischen G\xC3\xA4rten|2\x0A63450|Hanau|Hanau|Hanau|Johanneskirchplatz|1\x0A63450|Hanau|Hanau|Hanau|Karl-R\xC3\xB6ttelberg-Stra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Kinzigstra\xC3\x9Fe|2\x0A63450|Hanau|Hanau|Hanau|Kr\xC3\xA4merstra\xC3\x9Fe|2\x0A63450|Hanau|Hanau|Hanau|Lothringer Stra\xC3\x9Fe|3\x0A63450|Hanau|Hanau|Hanau|M\xC3\xBChlstra\xC3\x9Fe|11\x0A63450|Hanau|Hanau|Hanau|Nordstra\xC3\x9Fe|3\x0A63450|Hanau|Hanau|Hanau|Nu\xC3\x9Fallee|3\x0A63450|Hanau|Hanau|Hanau|Ramsaystra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|R\xC3\xB6merstra\xC3\x9Fe|5\x0A63450|Hanau|Hanau|Hanau|R\xC3\xBChlstra\xC3\x9Fe|4\x0A63450|Hanau|Hanau|Hanau|Sch\xC3\xBCtzenstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Steinheimer Stra\xC3\x9Fe|5\x0A63450|Hanau|Hanau|Hanau|Vor dem Kanaltor|2\x0A63450|Hanau|Hanau|Hanau|Akademiestra\xC3\x9Fe|2\x0A63450|Hanau|Hanau|Hanau|Am Hauptbahnhof|2\x0A63450|Hanau|Hanau|Hanau|Am Krawallgraben|1\x0A63450|Hanau|Hanau|Hanau|Barbarossastra\xC3\x9Fe|3\x0A63450|Hanau|Hanau|Hanau|B\xC3\xBCchnerstra\xC3\x9Fe|5\x0A63450|Hanau|Hanau|Hanau|Dettinger Stra\xC3\x9Fe|5\x0A63450|Hanau|Hanau|Hanau|Engelhardstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Freigerichtstra\xC3\x9Fe|5\x0A63450|Hanau|Hanau|Hanau|Friedrichstra\xC3\x9Fe|9\x0A63450|Hanau|Hanau|Hanau|Gallienstra\xC3\x9Fe|3\x0A63450|Hanau|Hanau|Hanau|Grimmelshausenstra\xC3\x9Fe|8\x0A63450|Hanau|Hanau|Hanau|Industrieweg|1\x0A63450|Hanau|Hanau|Hanau|Landwehr|2\x0A63450|Hanau|Hanau|Hanau|Matthias-Da\xC3\x9Fbach-Stra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Milseburgstra\xC3\x9Fe|5\x0A63450|Hanau|Hanau|Hanau|Ottostra\xC3\x9Fe|6\x0A63450|Hanau|Hanau|Hanau|Ronneburgstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Saalburgstra\xC3\x9Fe|2\x0A63450|Hanau|Hanau|Hanau|Auheimer Stra\xC3\x9Fe|4\x0A63450|Hanau|Hanau|Gro\xC3\x9Fauheim|Hanauer Landstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Mainstra\xC3\x9Fe|1\x0A63450|Hanau||||124\x0A63452|Hanau-Nord|Hanau|Hanau|Alter R\xC3\xBCckinger Weg|12\x0A63452|Hanau-Nord|Hanau|Hanau|B\xC3\xBCdinger Stra\xC3\x9Fe|52\x0A63452|Hanau-Nord|Hanau|Hanau|D\xC3\xB6rnigheimer Stra\xC3\x9Fe|6\x0A63452|Hanau-Nord|Hanau|Hanau|Vor der Kinzigbr\xC3\xBCcke|1\x0A63452|Hanau-Nord|Hanau|Hanau|Alter R\xC3\xBCckinger Weg|23\x0A63452|Hanau-Nord|Hanau|Hanau|Antoniterstra\xC3\x9Fe|21\x0A63452|Hanau-Nord|Hanau|Hanau|Friedberger Stra\xC3\x9Fe|7\x0A63452|Hanau-Nord|Hanau|Hanau|Im Venussee|1\x0A63452|Hanau-Nord|Hanau|Hanau|Reichenberger Stra\xC3\x9Fe|11\x0A63452|Hanau-Nord||||134\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Albert-Schweitzer-Stra\xC3\x9Fe|3\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Austra\xC3\x9Fe|8\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Bachstra\xC3\x9Fe|3\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Bauerbachstra\xC3\x9Fe|3\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Bernardstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Birkenwaldstra\xC3\x9Fe|24\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Dieburger Stra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Dreieichstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Egerl\xC3\xA4nder Platz|7\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Feldstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Forststra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Frankfurter Stra\xC3\x9Fe|8\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Gumbertseestra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Herrnstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Kapellenstra\xC3\x9Fe|2\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|L\xC3\xA4mmerspieler Stra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Laubenstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Maingaustra\xC3\x9Fe|8\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|M\xC3\xBChlstra\xC3\x9Fe|2\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Pater-Delp-Stra\xC3\x9Fe|2\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Platanenstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Richard-Wagner-Stra\xC3\x9Fe|11\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Robert-Koch-Stra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Sch\xC3\xB6nbornstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Schubertstra\xC3\x9Fe|6\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Seligenst\xC3\xA4dter Stra\xC3\x9Fe|23\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Sudetenstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Tempelhofer Stra\xC3\x9Fe|2\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Tulpenstra\xC3\x9Fe|3\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Von-Behring-Stra\xC3\x9Fe|3\x0A63179|Obertshausen Hausen||||131\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Aachener Stra\xC3\x9Fe|4\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|Ahornstra\xC3\x9Fe|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Bonner Stra\xC3\x9Fe|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Dresdener Stra\xC3\x9Fe|6\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|Fichtenstra\xC3\x9Fe|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|Ginsterweg|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Gustav-Kastropp-Stra\xC3\x9Fe|3\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Heinrich-Hofmann-Stra\xC3\x9Fe|8\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|Josef-Leistenschneider-Stra\xC3\x9Fe|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|K\xC3\xB6lner Stra\xC3\x9Fe|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|L\xC3\xA4rchenweg|2\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|Lavendelweg|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|M\xC3\xBCnchener Stra\xC3\x9Fe|8\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|Platanenstra\xC3\x9Fe|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Potsdamer Stra\xC3\x9Fe|4\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Weinstra\xC3\x9Fe|2\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|W\xC3\xBCrzburger Stra\xC3\x9Fe|2\x0A63628|Hausen||||47\x0A63674|Heegheim|Altenstadt|Heegheim|Fliederweg|1\x0A63674|Heegheim||||1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Albert-Schweitzer-Stra\xC3\x9Fe|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Am H\xC3\xBCpper|4\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Am Nidderfeld|4\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Am Pfarrgarten|2\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Am Steinweg|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|An der Landwehr|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Beethovenallee|2\x0A61130|Heldenbergen|Nidderau|Heldenbergen|B\xC3\xBCdinger Stra\xC3\x9Fe|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Castellring|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Emil-Nolde-Stra\xC3\x9Fe|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Gartenstra\xC3\x9Fe|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Jenny-Rothschild-Stra\xC3\x9Fe|2\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Saalburgstra\xC3\x9Fe|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Wagnerstra\xC3\x9Fe|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Wilhelm-Leibl-Stra\xC3\x9Fe|1\x0A61130|Heldenbergen||||24\x0A63636 Sum|Hellstein|Brachttal|Hellstein|Breulstra\xC3\x9Fe|1\x0A63636 Sum|Hellstein|Brachttal|Hellstein|Hochstra\xC3\x9Fe|3\x0A63636 Sum|Hellstein|Brachttal|Hellstein|Hochstra\xC3\x9Fe|1\x0A63636 Sum|Hellstein|Brachttal|Hellstein|Oberweg|2\x0A63636 Sum|Hellstein|Brachttal|Hellstein|Raiffeisenstra\xC3\x9Fe|1\x0A63636 Sum|Hellstein|Brachttal|Hellstein|Im Schafstall|6\x0A63636 Sum|Hellstein||||14\x0A63607|Hesseldorf|W\xC3\xA4chtersbach|Hesseldorf|Brachttalstra\xC3\x9Fe|1\x0A63607|Hesseldorf|W\xC3\xA4chtersbach|Hesseldorf|Im Alten Garten|1\x0A63607|Hesseldorf|W\xC3\xA4chtersbach|Hesseldorf|In der Aue|1\x0A63607|Hesseldorf|W\xC3\xA4chtersbach|Hesseldorf|Triebstra\xC3\x9Fe|2\x0A63607|Hesseldorf||||5\x0A63633|Hettersroth|Birstein|Hettersroth|Birkengasse|1\x0A63633|Hettersroth|Birstein|Hettersroth|Brunnenstra\xC3\x9Fe|2\x0A63633|Hettersroth|Birstein|Hettersroth|Haideacker|1\x0A63633|Hettersroth||||4\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Frankfurter Stra\xC3\x9Fe|3\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Friedenstra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Hans-Hemberger-Stra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Im Hohen Gewann|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Landgrebeweg|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Ostendstra\xC3\x9Fe|2\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Paulstra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Albert-Einstein-Stra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Am Frankfurter Weg|14\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Am Lindenbaum|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Berliner Stra\xC3\x9Fe|7\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Borsigstra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Dietrich-Bonhoeffer-Stra\xC3\x9Fe|2\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Feldbergstra\xC3\x9Fe|6\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Hegelstra\xC3\x9Fe|4\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Humboldtstra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Kolpingstra\xC3\x9Fe|4\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Konrad-Adenauer-Stra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Leipziger Ring|3\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Lerchenstra\xC3\x9Fe|10\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Schweitzerstra\xC3\x9Fe|2\x0A63150|Heusenstamm||||67\x0A63699|Hitzkirchen|Kefenrod||Am Lindenberg|7\x0A63699|Hitzkirchen|Kefenrod|Hitzkirchen|Hauptstra\xC3\x9Fe|1\x0A63699|Hitzkirchen||||8\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Am R\xC3\xBCckersberg|1\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Brunnenblick|1\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Hauptstra\xC3\x9Fe|1\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Kasseler Stra\xC3\x9Fe|2\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Ketteler Stra\xC3\x9Fe|1\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Kurzer Weg|1\x0A63674|H\xC3\xB6chst|Gelnhausen|Roth|Leipziger Stra\xC3\x9Fe|2\x0A63674|H\xC3\xB6chst|Gelnhausen||Panoramaweg|1\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Untere Sch\xC3\xB6nau|1\x0A63674|H\xC3\xB6chst|Altenstadt|H\xC3\xB6chst|Am Feldborn|1\x0A63674|H\xC3\xB6chst|Altenstadt|H\xC3\xB6chst|Burgweg|1\x0A63674|H\xC3\xB6chst|Altenstadt|H\xC3\xB6chst|G\xC3\xA4\xC3\x9Fchen|1\x0A63674|H\xC3\xB6chst|Altenstadt|H\xC3\xB6chst|Ringstra\xC3\x9Fe|3\x0A63674|H\xC3\xB6chst||||17\x0A63477|Hochstadt|Maintal|Hochstadt|Altk\xC3\xB6nigstra\xC3\x9Fe|2\x0A63477|Hochstadt|Maintal|Hochstadt|Am Weides|1\x0A63477|Hochstadt|Maintal|Hochstadt|Bernauer Stra\xC3\x9Fe|1\x0A63477|Hochstadt|Maintal|Hochstadt|Bischofsheimer Stra\xC3\x9Fe|1\x0A63477|Hochstadt|Maintal|Hochstadt|Maulbeerweg|4\x0A63477|Hochstadt|Maintal|Hochstadt|Ringstra\xC3\x9Fe S\xC3\xBCd|2\x0A63477|Hochstadt|Maintal|Hochstadt|Speierlingweg|1\x0A63477|Hochstadt|Maintal|Hochstadt|Wilhelm-Mankel-Stra\xC3\x9Fe|1\x0A63477|Hochstadt||||13\x0A63579|Horbach|Freigericht|Horbach|Am Sandberg|1\x0A63579|Horbach|Freigericht|Bernbach|Birkenhainer Stra\xC3\x9Fe|2\x0A63579|Horbach|Freigericht|Horbach|Kirchstra\xC3\x9Fe|1\x0A63579|Horbach|Freigericht|Horbach|M\xC3\xBChlstra\xC3\x9Fe|2\x0A63579|Horbach|Freigericht|Horbach|Wilhelm-Winter-Stra\xC3\x9Fe|1\x0A63579|Horbach||||7\x0A63584|H\xC3\xBChnerhof|Gr\xC3\xBCndau||H\xC3\xBChnerhof|2\x0A63584|H\xC3\xBChnerhof||||2\x0A63549 Sum|H\xC3\xBCttenges\xC3\xA4\xC3\x9F|Ronneburg|H\xC3\xBCttenges\xC3\xA4\xC3\x9F|Im Hartengrund|1\x0A63549 Sum|H\xC3\xBCttenges\xC3\xA4\xC3\x9F||||1\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Berliner Stra\xC3\x9Fe|3\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Carl-von-Ossietzky-Stra\xC3\x9Fe|1\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Dudenh\xC3\xB6fer Stra\xC3\x9Fe|5\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Eifelstra\xC3\x9Fe|4\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Eugen-Roth-Stra\xC3\x9Fe|1\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Friedlandstra\xC3\x9Fe|3\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Grenzstra\xC3\x9Fe|6\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Harzer Stra\xC3\x9Fe|4\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Heinrich-B\xC3\xB6ll-Stra\xC3\x9Fe|1\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Lange Stra\xC3\x9Fe|2\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Marburger Stra\xC3\x9Fe|12\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Paul-Gerhardt-Stra\xC3\x9Fe|5\x0A63110|J\xC3\xBCgesheim||||47\x0A63599|Kassel|Biebergem\xC3\xBCnd|Kassel|Am Burgwerksrain|1\x0A63599|Kassel|Biebergem\xC3\xBCnd|Kassel|Bornweg|1\x0A63599|Kassel|Biebergem\xC3\xBCnd|Kassel|Marienstra\xC3\x9Fe|1\x0A63599|Kassel|Biebergem\xC3\xBCnd|Kassel|Nepomukweg|4\x0A63599|Kassel|Biebergem\xC3\xBCnd|Kassel|Spessartstra\xC3\x9Fe|1\x0A63599|Kassel|Biebergem\xC3\xBCnd|Kassel|Wirtheimer Stra\xC3\x9Fe|3\x0A63599|Kassel||||11\x0A63699|Kefenrod|Kefenrod|Kefenrod|Am Hirtengarten|4\x0A63699|Kefenrod|Kefenrod||An der Hohl|1\x0A63699|Kefenrod|Kefenrod||Bindsachsener Stra\xC3\x9Fe|1\x0A63699|Kefenrod|Kefenrod|Bindsachsen|Gartenstra\xC3\x9Fe|1\x0A63699|Kefenrod|Kefenrod|Kefenrod|Hitzkirchener Stra\xC3\x9Fe|7\x0A63699|Kefenrod|Kefenrod|Kefenrod|Jahnstra\xC3\x9Fe|2\x0A63699|Kefenrod|Kefenrod|Kefenrod|Roseneck|5\x0A63699|Kefenrod|Kefenrod|Kefenrod|Schulstra\xC3\x9Fe|1\x0A63699|Kefenrod|Kefenrod|Kefenrod|Tr\xC3\xA4nkweg|1\x0A63699|Kefenrod||||23\x0A63628|Kerbersdorf|Bad Soden-Salm\xC3\xBCnster|Kerbersdorf|Ziegelh\xC3\xBCttenstra\xC3\x9Fe|2\x0A63628|Kerbersdorf||||2\x0A63454|Kesselstadt|Hanau|Kesselstadt|K\xC3\xB6nigsberger Stra\xC3\x9Fe|12\x0A63454|Kesselstadt|Hanau|Kesselstadt|Schweriner Stra\xC3\x9Fe|17\x0A63454|Kesselstadt|Hanau|Kesselstadt|Stettiner Stra\xC3\x9Fe|2\x0A63454|Kesselstadt|Hanau|Kesselstadt|Kopernikusstra\xC3\x9Fe|20\x0A63454|Kesselstadt|Hanau|Kesselstadt|Potsdamer Stra\xC3\x9Fe|2\x0A63454|Kesselstadt|Hanau|Kesselstadt|Stettiner Stra\xC3\x9Fe|4\x0A63454|Kesselstadt|Hanau|Kesselstadt|Dresdener Stra\xC3\x9Fe|39\x0A63454|Kesselstadt|Hanau|Kesselstadt|Herderweg|1\x0A63454|Kesselstadt|Hanau|Kesselstadt|K\xC3\xB6nigsberger Stra\xC3\x9Fe|19\x0A63454|Kesselstadt|Hanau|Kesselstadt|Kurt-Schumacher-Platz|7\x0A63454|Kesselstadt|Hanau|Kesselstadt|Tilsiter Stra\xC3\x9Fe|3\x0A63454|Kesselstadt|Hanau|Hanau|Burgallee|13\x0A63454|Kesselstadt|Hanau|Kesselstadt|Dresdener Stra\xC3\x9Fe|16\x0A63454|Kesselstadt|Hanau|Kesselstadt|Gerhart-Hauptmann-Stra\xC3\x9Fe|2\x0A63454|Kesselstadt|Hanau|Kesselstadt|Selma-Lagerl\xC3\xB6f-Stra\xC3\x9Fe|3\x0A63454|Kesselstadt|Hanau|Kesselstadt|Fraunhoferstra\xC3\x9Fe|1\x0A63454|Kesselstadt|Hanau|Kesselstadt|Kantstra\xC3\x9Fe|6\x0A63454|Kesselstadt|Hanau|Kesselstadt|Kirchhoffstra\xC3\x9Fe|17\x0A63454|Kesselstadt|Hanau|Kesselstadt|Liebigstra\xC3\x9Fe|1\x0A63454|Kesselstadt|Hanau|Kesselstadt|Philipp-Reis-Stra\xC3\x9Fe|11\x0A63454|Kesselstadt|Hanau|Kesselstadt|Karlsbader Stra\xC3\x9Fe|44\x0A63454|Kesselstadt|Hanau|Kesselstadt|R\xC3\xB6ntgenstra\xC3\x9Fe|13\x0A63454|Kesselstadt|Hanau|Kesselstadt|Am Tiefen Weg|1\x0A63454|Kesselstadt|Hanau|Kesselstadt|Hopfenstra\xC3\x9Fe|1\x0A63454|Kesselstadt|Hanau|Kesselstadt|Kastanienallee|2\x0A63454|Kesselstadt|Hanau|Kesselstadt|Salisweg|3\x0A63454|Kesselstadt||||260\x0A63633|Kirchbracht|Birstein|Kirchbracht|Kreisstra\xC3\x9Fe|1\x0A63633|Kirchbracht||||1\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Alzenauer Stra\xC3\x9Fe|2\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Am Pachtanger|4\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Am Wiesengrund|1\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Bornpfad|1\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Burggartsweidig|5\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Eisenbahnstra\xC3\x9Fe|8\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Feldstra\xC3\x9Fe|5\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|In den Krautg\xC3\xA4rten|1\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Karl-Arnold-Stra\xC3\x9Fe|2\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Kolpingstra\xC3\x9Fe|1\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Obergasse|1\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Seligenst\xC3\xA4dter Stra\xC3\x9Fe|1\x0A63456|Klein-Auheim||||32\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Adolph-Kolping-Stra\xC3\x9Fe|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Anne-Frank-Weg|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Erzbergerstra\xC3\x9Fe|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Fahrstra\xC3\x9Fe|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Geschwister-Scholl-Stra\xC3\x9Fe|9\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Goethestra\xC3\x9Fe|2\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Gutenbergstra\xC3\x9Fe|2\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Hessenstra\xC3\x9Fe|6\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Jahnstra\xC3\x9Fe|2\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Kapellenweg|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Kappesweg|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Kirchstra\xC3\x9Fe|3\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Konrad-Adenauer-Stra\xC3\x9Fe|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Liebigstra\xC3\x9Fe|5\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Ludwig-Erhard-Stra\xC3\x9Fe|2\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Schlesienstra\xC3\x9Fe|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Spessartstra\xC3\x9Fe|7\x0A63512|Klein-Krotzenbrg||||46\x0A63452|Lamboy|Hanau|Hanau|August-Sch\xC3\xA4rttner-Stra\xC3\x9Fe|1\x0A63452|Lamboy|Hanau|Hanau|Breitscheidstra\xC3\x9Fe|3\x0A63452|Lamboy|Hanau|Hanau|Dartforder Stra\xC3\x9Fe|4\x0A63452|Lamboy|Hanau|Hanau|Dr.-Elisabeth-Schmitz-Stra\xC3\x9Fe|8\x0A63452|Lamboy|Hanau|Hanau|Eibenweg|2\x0A63452|Lamboy|Hanau|Hanau|Friedrich-Engels-Stra\xC3\x9Fe|14\x0A63452|Lamboy|Hanau|Hanau|Gabelsbergerstra\xC3\x9Fe|3\x0A63452|Lamboy|Hanau|Hanau|Karl-Marx-Stra\xC3\x9Fe|10\x0A63452|Lamboy|Hanau|Hanau|Kleib\xC3\xB6merstra\xC3\x9Fe|2\x0A63452|Lamboy|Hanau|Hanau|Lenbachstra\xC3\x9Fe|2\x0A63452|Lamboy|Hanau|Hanau|Paul-Ehrlich-Stra\xC3\x9Fe|5\x0A63452|Lamboy|Hanau|Hanau|Plantagenstra\xC3\x9Fe|5\x0A63452|Lamboy|Hanau|Hanau|Richard-K\xC3\xBCch-Stra\xC3\x9Fe|7\x0A63452|Lamboy|Hanau|Hanau|Theodor-Groppe-Stra\xC3\x9Fe|2\x0A63452|Lamboy|Hanau|Hanau|Am T\xC3\xBCmpelgarten|12\x0A63452|Lamboy|Hanau|Hanau|August-Sch\xC3\xA4rttner-Stra\xC3\x9Fe|14\x0A63452|Lamboy|Hanau|Hanau|Kiefernweg|5\x0A63452|Lamboy|Hanau|Hanau|L\xC3\xA4rchenweg|4\x0A63452|Lamboy|Hanau|Hanau|Neuhofstra\xC3\x9Fe|6\x0A63452|Lamboy||||109\x0A63165|L\xC3\xA4mmerspiel|M\xC3\xBChlheim am Main|L\xC3\xA4mmerspiel|Bischof-Ketteler-Stra\xC3\x9Fe|1\x0A63165|L\xC3\xA4mmerspiel|M\xC3\xBChlheim am Main|L\xC3\xA4mmerspiel|Brentanostra\xC3\x9Fe|2\x0A63165|L\xC3\xA4mmerspiel|M\xC3\xBChlheim am Main|L\xC3\xA4mmerspiel|Obertsh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63165|L\xC3\xA4mmerspiel|M\xC3\xBChlheim am Main|L\xC3\xA4mmerspiel|Schumacherstra\xC3\x9Fe|3\x0A63165|L\xC3\xA4mmerspiel|M\xC3\xBChlheim am Main|L\xC3\xA4mmerspiel|Waldstra\xC3\x9Fe|2\x0A63165|L\xC3\xA4mmerspiel||||9\x0A63546 Sum|Langen-Bergheim|Hammersbach|Langen-Bergheim|Wechmarer Ring|1\x0A63546 Sum|Langen-Bergheim||||1\x0A63526|Langendiebach|Erlensee|R\xC3\xBCckingen|Am G\xC3\xA4nseweiher|1\x0A63526|Langendiebach|Erlensee|Langendiebach|Am Rathaus|2\x0A63526|Langendiebach|Erlensee|Langendiebach|August-Bebel-Stra\xC3\x9Fe|1\x0A63526|Langendiebach|Erlensee|Langendiebach|Biggleswadestra\xC3\x9Fe|19\x0A63526|Langendiebach|Erlensee|R\xC3\xBCckingen|Dammstra\xC3\x9Fe|2\x0A63526|Langendiebach|Erlensee|Langendiebach|Fallbachstra\xC3\x9Fe|4\x0A63526|Langendiebach|Erlensee|Langendiebach|Langenselbolder Weg|2\x0A63526|Langendiebach|Erlensee|R\xC3\xBCckingen|Langstra\xC3\x9Fe|2\x0A63526|Langendiebach|Erlensee|Langendiebach|Reu\xC3\x9Ferhofstra\xC3\x9Fe|1\x0A63526|Langendiebach|Erlensee|Langendiebach|Rosenstra\xC3\x9Fe|1\x0A63526|Langendiebach|Erlensee|Langendiebach|R\xC3\xBCdigheimer Weg|2\x0A63526|Langendiebach|Erlensee|Langendiebach|Theodor-Heuss-Stra\xC3\x9Fe|1\x0A63526|Langendiebach|Erlensee|Langendiebach|Vogelsbergstra\xC3\x9Fe|1\x0A63526|Langendiebach|Erlensee|Langendiebach|Wusterwitzer Stra\xC3\x9Fe|18\x0A63526|Langendiebach||||57\x0A63505|Langenselbold|Langenselbold|Langenselbold|Am Br\xC3\xBChl|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Am H\xC3\xA4usergraben|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Bahnstra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Birkenstra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Clara-Schumann-Stra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Clemens-Brentano-Stra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Elise-Meitner-Stra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Emmy-Noether-Stra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Im Stockborn|3\x0A63505|Langenselbold|Langenselbold|Langenselbold|Johann-Strau\xC3\x9F-Allee|2\x0A63505|Langenselbold|Langenselbold|Langenselbold|Kreuze|2\x0A63505|Langenselbold|Langenselbold|Langenselbold|Marie-Curie-Stra\xC3\x9Fe|4\x0A63505|Langenselbold|Langenselbold|Langenselbold|Niedertalstra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Philipp-Reis-Ring|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Robert-Koch-Stra\xC3\x9Fe|5\x0A63505|Langenselbold|Langenselbold|Langenselbold|R\xC3\xB6delbergstra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Schlo\xC3\x9Fstra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Am Pappelried|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Auf der Sieb|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Friedrichstra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Gelnh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Im Ellenb\xC3\xBCgel|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Spessartstra\xC3\x9Fe|1\x0A63505|Langenselbold||||34\x0A63599|Lanzingen|Biebergem\xC3\xBCnd|Lanzingen|Am Gassenacker|1\x0A63599|Lanzingen|Biebergem\xC3\xBCnd|Lanzingen|Breitenborner Stra\xC3\x9Fe|1\x0A63599|Lanzingen|Biebergem\xC3\xBCnd|Lanzingen|Quellenstra\xC3\x9Fe|1\x0A63599|Lanzingen||||3\x0A63607|Leisenwald|W\xC3\xA4chtersbach|Leisenwald|Wolferborner Stra\xC3\x9Fe|2\x0A63607|Leisenwald||||2\x0A63637 Sum|Letgenbrun|Jossgrund|Lettgenbrunn|S\xC3\xBCdm\xC3\xA4hrer Weg|1\x0A63637 Sum|Letgenbrun||||1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Alte Hofstra\xC3\x9Fe|8\x0A63584|Lieblos|Gr\xC3\xBCndau||Alte Leipziger Stra\xC3\x9Fe|2\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Am Dreschplatz|7\x0A63584|Lieblos|Gr\xC3\xBCndau||An der Eisenbahn|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|August-Imhof-Stra\xC3\x9Fe|15\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Breitwiese|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|B\xC3\xBCdinger Stra\xC3\x9Fe|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Dammweg|3\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Faltergartenstra\xC3\x9Fe|2\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Fr\xC3\xB6belstra\xC3\x9Fe|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Mittel-Gr\xC3\xBCndau|Gartenstra\xC3\x9Fe|2\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Herzbergstra\xC3\x9Fe|2\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Im Euler|2\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Langer Rain|2\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Leipziger Stra\xC3\x9Fe|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Meerholzer Landweg|3\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Neugersdorfer Stra\xC3\x9Fe|3\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Nordstra\xC3\x9Fe|3\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Oberfeldstra\xC3\x9Fe|7\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Oberlausitzer Stra\xC3\x9Fe|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|R\xC3\xB6testra\xC3\x9Fe|4\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Sudetenstra\xC3\x9Fe|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Th\xC3\xBCringer Stra\xC3\x9Fe|7\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Weinbergstra\xC3\x9Fe|1\x0A63584|Lieblos||||80\x0A63694|Limeshain|Hasselroth|Neuenha\xC3\x9Flau|Barbarossastra\xC3\x9Fe|1\x0A63694|Limeshain||||1\x0A63674|Lindheim|Altenstadt|Lindheim|Altenst\xC3\xA4dter Stra\xC3\x9Fe|1\x0A63674|Lindheim|Altenstadt|Lindheim|Heugasse|1\x0A63674|Lindheim|Altenstadt||Leimenkautenfeld|2\x0A63674|Lindheim|Altenstadt|Lindheim|Nikkisostra\xC3\x9Fe|1\x0A63674|Lindheim|Altenstadt|Lindheim|Siedlerstra\xC3\x9Fe|3\x0A63674|Lindheim||||8\x0A63639 Sum|Lohrhaupten|Fl\xC3\xB6rsbachtal|Lohrhaupten|Gartenstra\xC3\x9Fe|1\x0A63639 Sum|Lohrhaupten||||1\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|Am Flutgraben|1\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|Am Hellerberg|1\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|An den Drei B\xC3\xA4umen|1\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|Gartenweg|2\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|Hans-Merian-Ring|8\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|Hardecker Stra\xC3\x9Fe|2\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|Herrnhuter Stra\xC3\x9Fe|4\x0A63654|Lorbach||||19\x0A63533|Mainflingen|Mainhausen|Mainflingen|Eichenstra\xC3\x9Fe|1\x0A63533|Mainflingen|Mainhausen|Mainflingen|Hauptstra\xC3\x9Fe|2\x0A63533|Mainflingen|Mainhausen|Mainflingen|Kantstra\xC3\x9Fe|1\x0A63533|Mainflingen|Mainhausen|Mainflingen|Kettelerstra\xC3\x9Fe|2\x0A63533|Mainflingen|Mainhausen|Mainflingen|Martinstra\xC3\x9Fe|1\x0A63533|Mainflingen||||7\x0A63546 Sum|Mark\xC3\xB6bel|Hammersbach|Mark\xC3\xB6bel|Burgstra\xC3\x9Fe|2\x0A63546 Sum|Mark\xC3\xB6bel|Hammersbach|Mark\xC3\xB6bel|Limesstra\xC3\x9Fe|1\x0A63546 Sum|Mark\xC3\xB6bel|Hammersbach|Mark\xC3\xB6bel|R\xC3\xB6merstra\xC3\x9Fe|1\x0A63546 Sum|Mark\xC3\xB6bel||||4\x0A63571|Meerholz|Gelnhausen|Meerholz|Am Pfarrgarten|1\x0A63571|Meerholz|Gelnhausen|Meerholz|Am Schlo\xC3\x9Fgarten|1\x0A63571|Meerholz|Gelnhausen|Meerholz|Am Viadukt|4\x0A63571|Meerholz|Gelnhausen|Meerholz|Amselweg|1\x0A63571|Meerholz|Gelnhausen|Meerholz|Europastra\xC3\x9Fe|1\x0A63571|Meerholz|Gelnhausen|Meerholz|Graf-Gustav-Weg|2\x0A63571|Meerholz|Gelnhausen|Meerholz|Gr\xC3\xA4fin-Thekla-Weg|3\x0A63571|Meerholz|Gelnhausen|Meerholz|Im B\xC3\xB6rner|1\x0A63571|Meerholz|Gelnhausen|Meerholz|K\xC3\xB6nigsberger Stra\xC3\x9Fe|1\x0A63571|Meerholz|Gelnhausen|Meerholz|Mittlauer Weg|2\x0A63571|Meerholz|Gelnhausen|Hailer|Sudetenstra\xC3\x9Fe|1\x0A63571|Meerholz|Gelnhausen|Meerholz|Wiesenbornstra\xC3\x9Fe|3\x0A63571|Meerholz||||21\x0A63654|Michelau|B\xC3\xBCdingen|Michelau|Moosbergstra\xC3\x9Fe|3\x0A63654|Michelau|B\xC3\xBCdingen|Michelau|Wiebelsteinweg|1\x0A63654|Michelau||||4\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Am Haubenflug|1\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Am L\xC3\xBCtzelberg|2\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|An der Gro\xC3\x9Fen Wiese|3\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Auf den R\xC3\xB6merkastellen|1\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Habichtswaldstra\xC3\x9Fe|1\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Nauheimer Stra\xC3\x9Fe|1\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Ro\xC3\x9Fdorfer Stra\xC3\x9Fe|1\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Wachenbuchener Stra\xC3\x9Fe|2\x0A63454|Mittelbuchen||||12\x0A63584|Mittelgr\xC3\xBCndau|Gr\xC3\xBCndau|Mittel-Gr\xC3\xBCndau|Ahl|1\x0A63584|Mittelgr\xC3\xBCndau|Gr\xC3\xBCndau|Mittel-Gr\xC3\xBCndau|Am Hirschsprung|1\x0A63584|Mittelgr\xC3\xBCndau|Gr\xC3\xBCndau|Mittel-Gr\xC3\xBCndau|Gr\xC3\xBCner Weg|1\x0A63584|Mittelgr\xC3\xBCndau|Gr\xC3\xBCndau|Mittel-Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndauer Stra\xC3\x9Fe|1\x0A63584|Mittelgr\xC3\xBCndau|Gr\xC3\xBCndau|Mittel-Gr\xC3\xBCndau|Im Wagnersgrund|4\x0A63584|Mittelgr\xC3\xBCndau||||8\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Bahnhofstra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Dietesheimer Stra\xC3\x9Fe|4\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Holbeinstra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main||L\xC3\xA4mmerspieler Stra\xC3\x9Fe|2\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Ludwigstra\xC3\x9Fe|4\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Schillerstra\xC3\x9Fe|21\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Blumenstra\xC3\x9Fe|2\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Dresdener Stra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Friedensstra\xC3\x9Fe|7\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Hausener Weg|22\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|K\xC3\xA4the-Kollwitz-Stra\xC3\x9Fe|13\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main||L\xC3\xA4mmerspieler Stra\xC3\x9Fe|4\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|M\xC3\xBCllerweg|20\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Robert-Bosch-Weg|13\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Tiefenorter Ring|3\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Tilsiter Stra\xC3\x9Fe|2\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Tulpenweg|2\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Ulmenstra\xC3\x9Fe|7\x0A63165|M\xC3\xBChlheim||||129\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Am Dreispitz|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Angergasse|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Aussiger Stra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Austra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Ebertstra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Grenzstra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Hindemithstra\xC3\x9Fe|2\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Hoffmannstra\xC3\x9Fe|4\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Marktstra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Offenbacher Stra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Rote-Warte-Stra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|R\xC3\xBCckertstra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.||||16\x0A63607|Neudorf|W\xC3\xA4chtersbach|Neudorf|Am Rosengarten|1\x0A63607|Neudorf|W\xC3\xA4chtersbach|Neudorf|Aufenauer Stra\xC3\x9Fe|1\x0A63607|Neudorf|W\xC3\xA4chtersbach|Neudorf|Birkenstra\xC3\x9Fe|1\x0A63607|Neudorf||||3\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Bahnhofstra\xC3\x9Fe|1\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Erlenstra\xC3\x9Fe|2\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Im Rosengarten|1\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|In den St\xC3\xBCmpfen|1\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Kirchgasse|1\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Mainstra\xC3\x9Fe|2\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|M\xC3\xBChlbachstra\xC3\x9Fe|3\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Rheinstra\xC3\x9Fe|10\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Simmigstra\xC3\x9Fe|2\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Tannenstra\xC3\x9Fe|1\x0A63594|Neuenha\xC3\x9Flau||||24\x0A63636 Sum|Neuenschmidten, Brachttal, Germany|Brachttal|Schlierbach|Birsteiner Stra\xC3\x9Fe|2\x0A63636 Sum|Neuenschmidten, Brachttal, Germany||||2\x0A63579|Neuses|Freigericht|Neuses|Schulstra\xC3\x9Fe|1\x0A63579|Neuses|Freigericht|Somborn|Waldstra\xC3\x9Fe|2\x0A63579|Neuses||||3\x0A63549 Sum|Neuwiedermu\xC3\x9F|Ronneburg|Neuwiedermu\xC3\x9F|Am Eisick|2\x0A63549 Sum|Neuwiedermu\xC3\x9F|Ronneburg|Neuwiedermu\xC3\x9F|Odenwaldstra\xC3\x9Fe|1\x0A63549 Sum|Neuwiedermu\xC3\x9F||||3\x0A63599|Neuwirtheim|Biebergem\xC3\xBCnd|Neuwirtheim|Karlsbader Stra\xC3\x9Fe|2\x0A63599|Neuwirtheim|Biebergem\xC3\xBCnd|Neuwirtheim|Stettiner Stra\xC3\x9Fe|1\x0A63599|Neuwirtheim|Biebergem\xC3\xBCnd|Neuwirtheim|Tilsiter Stra\xC3\x9Fe|1\x0A63599|Neuwirtheim||||4\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|Altenburgring|1\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|An der Nachtweide|3\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|An der Ruhbank|1\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|Berliner Stra\xC3\x9Fe|2\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|Junkergasse|1\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|Oberdorfelder Stra\xC3\x9Fe|1\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|Saint-Sever-Stra\xC3\x9Fe|3\x0A61138 Sum|Niederdorfelden||||12\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Birkenweg|3\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Im Krebsengarten|3\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Laussonner Stra\xC3\x9Fe|3\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Lerchenweg|1\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Mittel-Gr\xC3\xBCndauer Stra\xC3\x9Fe|3\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Schieferbergstra\xC3\x9Fe|1\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Schwalbenrain|1\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Untergasse|2\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Weingartenstra\xC3\x9Fe|2\x0A63584|Niedergr\xC3\xBCndau||||19\x0A63486|Niederissigheim|Bruchk\xC3\xB6bel|Niederissigheim|Heinrich-B\xC3\xB6ll-Stra\xC3\x9Fe|2\x0A63486|Niederissigheim|Bruchk\xC3\xB6bel|Niederissigheim|Heinrich-Hoffmann-Stra\xC3\x9Fe|1\x0A63486|Niederissigheim||||3\x0A63594|Niedermittlau|Hasselroth|Niedermittlau|Alte Dorfstra\xC3\x9Fe|1\x0A63594|Niedermittlau|Hasselroth|Niedermittlau|Hopfengartenstra\xC3\x9Fe|1\x0A63594|Niedermittlau|Hasselroth|Niedermittlau|J\xC3\xA4gerbuschstra\xC3\x9Fe|1\x0A63594|Niedermittlau|Hasselroth|Niedermittlau|Vogelsbergstra\xC3\x9Fe|1\x0A63594|Niedermittlau||||4\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Adolf-Reichwein-Stra\xC3\x9Fe|1\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Alzenauer Stra\xC3\x9Fe|2\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Feldbergstra\xC3\x9Fe|3\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Hainbornstra\xC3\x9Fe|1\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Heinrich-Heine-Stra\xC3\x9Fe|2\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|In der Gartel|3\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Landwehrstra\xC3\x9Fe|1\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Nordring|1\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|S\xC3\xBCdring|1\x0A63517|Niederrodenbach||||15\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Am Buchrain|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Am Jubil\xC3\xA4umsstein|3\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Am Kappenwald|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Am Karnweg|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Am Wiesengrund|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Berliner Stra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Breidertring|19\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Drosselstra\xC3\x9Fe|2\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Eisenbahnstra\xC3\x9Fe|2\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Erzbergerstra\xC3\x9Fe|2\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Frankfurter Stra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Geranienstra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Hanauer Stra\xC3\x9Fe|4\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Heinrich-von-Kleist-Stra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Hermann-L\xC3\xB6ns-Stra\xC3\x9Fe|2\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|H\xC3\xBCgelstra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|J\xC3\xA4gerstra\xC3\x9Fe|2\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Lindenweg|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Ludwig-Uhland-Stra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark||Nieder-R\xC3\xB6der-Stra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Odenwaldstra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Riemenschneiderstra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Talstra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Wingertstra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Zum Steckengarten|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany||||53\x0A63674|Oberau|Altenstadt|Oberau|Am Pfahlgraben|1\x0A63674|Oberau|Altenstadt|Oberau|Kochgasse|1\x0A63674|Oberau|Altenstadt|Oberau|Lange Stra\xC3\x9Fe|1\x0A63674|Oberau||||3\x0A63637 Sum|Oberndorf|Jossgrund|Oberndorf|Lohrer Stra\xC3\x9Fe|1\x0A63637 Sum|Oberndorf|Jossgrund|Oberndorf|Schulstra\xC3\x9Fe|1\x0A63637 Sum|Oberndorf||||2\x0A63517|Oberrodenbach|Rodenbach||Barbarossastra\xC3\x9Fe|1\x0A63517|Oberrodenbach|Rodenbach|Oberrodenbach|Hanauer Stra\xC3\x9Fe|1\x0A63517|Oberrodenbach|Rodenbach|Oberrodenbach|Talstra\xC3\x9Fe|1\x0A63517|Oberrodenbach||||3\x0A63633|Obersotzbach|Birstein|Obersotzbach|Hellwaldblick|1\x0A63633|Obersotzbach|Birstein|Obersotzbach|Waldschulstra\xC3\x9Fe|1\x0A63633|Obersotzbach||||2\x0A63179|Obertshausen|Obertshausen|Obertshausen|August-Bebel-Stra\xC3\x9Fe|1\x0A63179|Obertshausen|Obertshausen|Obertshausen|B\xC3\xB6hmerwaldstra\xC3\x9Fe|4\x0A63179|Obertshausen|Obertshausen|Obertshausen|Danziger Stra\xC3\x9Fe|22\x0A63179|Obertshausen|Obertshausen|Obertshausen|Geleitstra\xC3\x9Fe|2\x0A63179|Obertshausen|Obertshausen|Obertshausen|Georg-Kerschensteiner-Stra\xC3\x9Fe|5\x0A63179|Obertshausen|Obertshausen|Obertshausen|Grenzstra\xC3\x9Fe|1\x0A63179|Obertshausen|Obertshausen|Obertshausen|Laakirchener Stra\xC3\x9Fe|9\x0A63179|Obertshausen|Obertshausen|Obertshausen|Leipziger Stra\xC3\x9Fe|11\x0A63179|Obertshausen|Obertshausen|Obertshausen|Theodor-Heuss-Stra\xC3\x9Fe|1\x0A63179|Obertshausen|Obertshausen|Obertshausen|Beethovenstra\xC3\x9Fe|3\x0A63179|Obertshausen|Obertshausen|Obertshausen|Berliner Stra\xC3\x9Fe|2\x0A63179|Obertshausen|Obertshausen|Obertshausen|Bieberer Stra\xC3\x9Fe|12\x0A63179|Obertshausen|Obertshausen|Obertshausen|Eichenweg|1\x0A63179|Obertshausen|Obertshausen|Obertshausen|Erzbergerstra\xC3\x9Fe|1\x0A63179|Obertshausen|Obertshausen|Obertshausen|Heusenstammer Stra\xC3\x9Fe|1\x0A63179|Obertshausen|Obertshausen|Obertshausen|Stra\xC3\x9Fe im Loh|3\x0A63179|Obertshausen|Obertshausen|Obertshausen|Vogelsbergstra\xC3\x9Fe|7\x0A63179|Obertshausen|Obertshausen|Obertshausen|Von-Stauffenberg-Stra\xC3\x9Fe|2\x0A63179|Obertshausen|Obertshausen|Obertshausen|Waldstra\xC3\x9Fe|1\x0A63179|Obertshausen||||89\x0A63654|Orleshausen|B\xC3\xBCdingen|Orleshausen|Am Herrenh\xC3\xB6fchen|3\x0A63654|Orleshausen|B\xC3\xBCdingen|Orleshausen|B\xC3\xBCcheser Stra\xC3\x9Fe|2\x0A63654|Orleshausen|B\xC3\xBCdingen|Orleshausen|Hardeckring|9\x0A63654|Orleshausen|B\xC3\xBCdingen|Orleshausen|Hungebergweg|3\x0A63654|Orleshausen|B\xC3\xBCdingen|Orleshausen|Orlesh\xC3\xA4user Hauptstra\xC3\x9Fe|8\x0A63654|Orleshausen||||25\x0A61130|Ostheim|Nidderau|Ostheim|Alte Ziegelei|1\x0A61130|Ostheim|Nidderau|Ostheim|Am Jungfernborn|2\x0A61130|Ostheim|Nidderau|Ostheim|Am Weinberg|1\x0A61130|Ostheim|Nidderau|Ostheim|Am Ziegelweiher|3\x0A61130|Ostheim|Nidderau|Ostheim|Eisenbahnstra\xC3\x9Fe|1\x0A61130|Ostheim|Nidderau|Ostheim|Fasanenweg|1\x0A61130|Ostheim|Nidderau|Ostheim|In der M\xC3\xBChlweide|1\x0A61130|Ostheim|Nidderau|Ostheim|Limesstra\xC3\x9Fe|1\x0A61130|Ostheim||||11\x0A63543|Ravolzhausen|Neuberg|Ravolzhausen|Darmst\xC3\xA4dter Stra\xC3\x9Fe|1\x0A63543|Ravolzhausen|Neuberg|Ravolzhausen|Oberissigheimer Stra\xC3\x9Fe|1\x0A63543|Ravolzhausen||||2\x0A63150|Rembr\xC3\xBCcken, Heusenstamm, Germany|Heusenstamm|Rembr\xC3\xBCcken|Im Vogelseen|2\x0A63150|Rembr\xC3\xBCcken, Heusenstamm, Germany||||2\x0A63654|Rinderb\xC3\xBCgen|B\xC3\xBCdingen|Rinderb\xC3\xBCgen|Am Eckelgarten|1\x0A63654|Rinderb\xC3\xBCgen|B\xC3\xBCdingen|Rinderb\xC3\xBCgen|Am Hohenrain|8\x0A63654|Rinderb\xC3\xBCgen|B\xC3\xBCdingen|Rinderb\xC3\xBCgen|Auf der Wann|1\x0A63654|Rinderb\xC3\xBCgen|B\xC3\xBCdingen|Rinderb\xC3\xBCgen|Haingarten|1\x0A63654|Rinderb\xC3\xBCgen|B\xC3\xBCdingen|Rinderb\xC3\xBCgen|M\xC3\xBChlgasse|1\x0A63654|Rinderb\xC3\xBCgen|B\xC3\xBCdingen|Rinderb\xC3\xBCgen|Parkstra\xC3\x9Fe|2\x0A63654|Rinderb\xC3\xBCgen||||14\x0A63674|Rodenbach|Altenstadt|Rodenbach|Ortenberger Stra\xC3\x9Fe|1\x0A63674|Rodenbach|Altenstadt|Rodenbach|Rh\xC3\xB6nstra\xC3\x9Fe|1\x0A63674|Rodenbach|Altenstadt|Rodenbach|Unterstra\xC3\x9Fe|8\x0A63674|Rodenbach||||10\x0A63322|R\xC3\xB6dermark-Messenhausen|R\xC3\xB6dermark||Urberacher Stra\xC3\x9Fe|1\x0A63322|R\xC3\xB6dermark-Messenhausen||||1\x0A63322|R\xC3\xB6dermark-Urberach|R\xC3\xB6dermark|Urberach|Bruchwiesenstra\xC3\x9Fe|3\x0A63322|R\xC3\xB6dermark-Urberach|R\xC3\xB6dermark|Urberach|Naheweg|1\x0A63322|R\xC3\xB6dermark-Urberach|R\xC3\xB6dermark|Urberach|Nikolaus-Schwarzkopf-Stra\xC3\x9Fe|9\x0A63322|R\xC3\xB6dermark-Urberach|R\xC3\xB6dermark|Urberach|Rodaustra\xC3\x9Fe|1\x0A63322|R\xC3\xB6dermark-Urberach|R\xC3\xB6dermark|Urberach|Schillerstra\xC3\x9Fe|8\x0A63322|R\xC3\xB6dermark-Urberach||||22\x0A63628|Romsthal|Bad Soden-Salm\xC3\xBCnster|Romsthal|Lange Wiese|5\x0A63628|Romsthal|Bad Soden-Salm\xC3\xBCnster|Romsthal|Luzerneweg|1\x0A63628|Romsthal|Bad Soden-Salm\xC3\xBCnster|Romsthal|Wahlerter Stra\xC3\x9Fe|1\x0A63628|Romsthal||||7\x0A63452|Rosenau|Hanau|Hanau|Ameliastra\xC3\x9Fe|1\x0A63452|Rosenau|Hanau|Hanau|Beethovenplatz|1\x0A63452|Rosenau|Hanau|Hanau|Brahmsweg|1\x0A63452|Rosenau|Hanau|Hanau|Brucknerstra\xC3\x9Fe|2\x0A63452|Rosenau|Hanau|Hanau|Gustav-Adolf-Stra\xC3\x9Fe|1\x0A63452|Rosenau|Hanau|Hanau|Kattenstra\xC3\x9Fe|1\x0A63452|Rosenau|Hanau|Gro\xC3\x9Fauheim|Carl-Kronenberger-Stra\xC3\x9Fe|1\x0A63452|Rosenau|Hanau|Hanau|Salisweg|1\x0A63452|Rosenau||||9\x0A63599|Ro\xC3\x9Fbach|Biebergem\xC3\xBCnd|Ro\xC3\x9Fbach|Brunnenstra\xC3\x9Fe|1\x0A63599|Ro\xC3\x9Fbach|Biebergem\xC3\xBCnd|Ro\xC3\x9Fbach|Zur Kaisereiche|1\x0A63599|Ro\xC3\x9Fbach||||2\x0A63486|Ro\xC3\x9Fdorf|Bruchk\xC3\xB6bel|Ro\xC3\x9Fdorf|Eichendorffanlage|4\x0A63486|Ro\xC3\x9Fdorf|Bruchk\xC3\xB6bel|Ro\xC3\x9Fdorf|Hanauer Stra\xC3\x9Fe|1\x0A63486|Ro\xC3\x9Fdorf|Bruchk\xC3\xB6bel|Ro\xC3\x9Fdorf|Thomas-Mann-Stra\xC3\x9Fe|1\x0A63486|Ro\xC3\x9Fdorf||||6\x0A63571|Roth|Gelnhausen|Roth|Altdorfstra\xC3\x9Fe|3\x0A63571|Roth|Gelnhausen|Roth|Am R\xC3\xB6ther H\xC3\xA4uschen|1\x0A63571|Roth|Gelnhausen|Roth|Gartenstra\xC3\x9Fe|2\x0A63571|Roth|Gelnhausen|Hailer|Gelnh\xC3\xA4user Stra\xC3\x9Fe|3\x0A63571|Roth|Gelnhausen|Roth|Herzbergstra\xC3\x9Fe|1\x0A63571|Roth|Gelnhausen|Roth|Hochstra\xC3\x9Fe|4\x0A63571|Roth|Gelnhausen|Roth|Im Goldberg|4\x0A63571|Roth|Gelnhausen|Roth|Junkenhofstra\xC3\x9Fe|3\x0A63571|Roth|Gelnhausen||Kinzigtalblick|1\x0A63571|Roth|Gelnhausen|Roth|Nordstra\xC3\x9Fe|2\x0A63571|Roth|Gelnhausen|Roth|Quellenstra\xC3\x9Fe|2\x0A63571|Roth|Gelnhausen|Roth|Rathausstra\xC3\x9Fe|2\x0A63571|Roth|Gelnhausen|Roth|R\xC3\xB6ther Wingertstra\xC3\x9Fe|1\x0A63571|Roth|Gelnhausen|Roth|Unterstra\xC3\x9Fe|1\x0A63571|Roth||||30\x0A63584|Rothenbergen|Gr\xC3\xBCndau||Alte Leipziger Stra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Heiligenstock|3\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Am Sportplatz|4\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|An der Nachtweide|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Auf der Messbach|7\x0A63584|Rothenbergen|Gr\xC3\xBCndau||Bahnhofstra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Berliner Stra\xC3\x9Fe|2\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Bogenstra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Br\xC3\xBCder-Grimm-Stra\xC3\x9Fe|2\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Brunnenstra\xC3\x9Fe|2\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Eichendorffstra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Feldstra\xC3\x9Fe|6\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Frankfurter Stra\xC3\x9Fe|3\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Fuldaer Stra\xC3\x9Fe|6\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|F\xC3\xBCnfkirchner Stra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Georg-B\xC3\xBCchner-Stra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Goethestra\xC3\x9Fe|3\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Hofackerheeg|12\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Im Kleinen Feldchen|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|In der Hochstadt|5\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Jahnstra\xC3\x9Fe|3\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|John-Wesley-Stra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Karlsbader Stra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Niedergr\xC3\xBCndauer Stra\xC3\x9Fe|3\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Philipp-Reis-Stra\xC3\x9Fe|5\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Rohrstra\xC3\x9Fe|2\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Wibaustra\xC3\x9Fe|2\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Wiesenstra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Wingertstra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Zingelweg|1\x0A63584|Rothenbergen||||83\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|An der Sandwiese|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|An der W\xC3\xBCstung|4\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Beethovenstra\xC3\x9Fe|10\x0A63526|R\xC3\xBCckingen|Erlensee||Br\xC3\xBCckenstra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Georg-B\xC3\xBCchner-Stra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Hainstra\xC3\x9Fe|2\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Hattergasse|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Kastellstra\xC3\x9Fe|7\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Leipziger Stra\xC3\x9Fe|13\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Lindenstra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Marienstra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Markwaldsiedlung|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Mozartstra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Rh\xC3\xB6nstra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Taunusstra\xC3\x9Fe|7\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Waldstra\xC3\x9Fe|2\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Wilhelmstra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen||||55\x0A63543|R\xC3\xBCdigheim|Neuberg|R\xC3\xBCdigheim|Am M\xC3\xB6llerborn|1\x0A63543|R\xC3\xBCdigheim|Neuberg|R\xC3\xBCdigheim|Hainstra\xC3\x9Fe|1\x0A63543|R\xC3\xBCdigheim|Neuberg|R\xC3\xBCdigheim|Hintergasse|1\x0A63543|R\xC3\xBCdigheim|Neuberg|R\xC3\xBCdigheim|M\xC3\xBChlstra\xC3\x9Fe|1\x0A63543|R\xC3\xBCdigheim||||4\x0A63636 Sum|Schlierbach|Brachttal||Brachtstra\xC3\x9Fe|1\x0A63636 Sum|Schlierbach|Brachttal|Schlierbach|Hegstra\xC3\x9Fe|1\x0A63636 Sum|Schlierbach|Brachttal|Schlierbach|Hippegasse|2\x0A63636 Sum|Schlierbach|Brachttal|Schlierbach|In der Aue|2\x0A63636 Sum|Schlierbach|Brachttal|Schlierbach|Neue Stra\xC3\x9Fe|2\x0A63636 Sum|Schlierbach|Brachttal|Schlierbach|Weihergasse|1\x0A63636 Sum|Schlierbach||||9\x0A61137|Sch\xC3\xB6neck-B\xC3\xBCdesheim|Sch\xC3\xB6neck|B\xC3\xBCdesheim|Am Na\xC3\x9Fling|1\x0A61137|Sch\xC3\xB6neck-B\xC3\xBCdesheim|Sch\xC3\xB6neck|B\xC3\xBCdesheim|Eulenring|1\x0A61137|Sch\xC3\xB6neck-B\xC3\xBCdesheim|Sch\xC3\xB6neck|B\xC3\xBCdesheim|Fasanenstra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-B\xC3\xBCdesheim|Sch\xC3\xB6neck|B\xC3\xBCdesheim|Froschbachstra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-B\xC3\xBCdesheim|Sch\xC3\xB6neck|B\xC3\xBCdesheim|Ringstra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-B\xC3\xBCdesheim||||5\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Am Neuberg|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Anne-Frank-Stra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck||Bleichstra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Johann-Sebastian-Bach-Stra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Sonnensteig|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Talstra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Untergasse|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Wachenbucher Stra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Waldstra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten||||9\x0A61137|Sch\xC3\xB6neck-Oberdorffelden|Sch\xC3\xB6neck|Oberdorfelden|Hessenstra\xC3\x9Fe|2\x0A61137|Sch\xC3\xB6neck-Oberdorffelden|Sch\xC3\xB6neck|Oberdorfelden|Lerchenweg|1\x0A61137|Sch\xC3\xB6neck-Oberdorffelden|Sch\xC3\xB6neck|Oberdorfelden|Nidderauer Stra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Oberdorffelden|Sch\xC3\xB6neck|Oberdorfelden|Odenwaldstra\xC3\x9Fe|2\x0A61137|Sch\xC3\xB6neck-Oberdorffelden||||6\x0A63500|Seligenstadt|Seligenstadt|Seligenstadt|Berliner Stra\xC3\x9Fe|17\x0A63500|Seligenstadt|Seligenstadt|Seligenstadt|Babenh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63500|Seligenstadt|Seligenstadt|Seligenstadt|Giselastra\xC3\x9Fe|1\x0A63500|Seligenstadt|Seligenstadt|Seligenstadt|Hauptstra\xC3\x9Fe|1\x0A63500|Seligenstadt|Seligenstadt|Seligenstadt|Querstra\xC3\x9Fe|3\x0A63500|Seligenstadt|Seligenstadt|Seligenstadt|Wolfstra\xC3\x9Fe|1\x0A63500|Seligenstadt||||24\x0A63579|Somborn|Freigericht|Somborn|Am Sportfeld|5\x0A63579|Somborn|Freigericht|Somborn|Aue|2\x0A63579|Somborn|Freigericht||Auf dem Weidenstrauch|1\x0A63579|Somborn|Freigericht|Somborn|Dangelweg|2\x0A63579|Somborn|Freigericht||Im Schwalbengrund|1\x0A63579|Somborn|Freigericht|Somborn|Karlstra\xC3\x9Fe|1\x0A63579|Somborn|Freigericht|Somborn|Nelkenweg|1\x0A63579|Somborn|Freigericht|Somborn|Raiffeisenstra\xC3\x9Fe|1\x0A63579|Somborn|Freigericht|Somborn|Rosenstra\xC3\x9Fe|2\x0A63579|Somborn|Freigericht|Somborn|Theodor-Heuss-Stra\xC3\x9Fe|1\x0A63579|Somborn|Freigericht|Somborn|Tulpenweg|2\x0A63579|Somborn|Freigericht|Somborn|Vogelsbergblick|1\x0A63579|Somborn||||20\x0A63636 Sum|Spielberg|Brachttal|Spielberg|Hainbuchenweg|1\x0A63636 Sum|Spielberg|Brachttal|Spielberg|Herrnschwender Stra\xC3\x9Fe|1\x0A63636 Sum|Spielberg|Brachttal||Kreutstra\xC3\x9Fe|1\x0A63636 Sum|Spielberg||||3\x0A63456|Steinheim|Hanau|Steinheim|Auf den Sickenrain|1\x0A63456|Steinheim|Hanau|Steinheim|Brandenburgstra\xC3\x9Fe|1\x0A63456|Steinheim|Hanau|Steinheim|Doorner Stra\xC3\x9Fe|1\x0A63456|Steinheim|Hanau|Steinheim|Hermann-Ehlers-Stra\xC3\x9Fe|5\x0A63456|Steinheim|Hanau|Steinheim|Johannes-Eppert-Weg|1\x0A63456|Steinheim|Hanau|Steinheim|Johannes-Machern-Stra\xC3\x9Fe|4\x0A63456|Steinheim|Hanau|Steinheim|Karl-Kirstein-Stra\xC3\x9Fe|9\x0A63456|Steinheim|Hanau|Steinheim|Karlstra\xC3\x9Fe|2\x0A63456|Steinheim|Hanau|Steinheim|Pfaffenbrunnenstra\xC3\x9Fe|2\x0A63456|Steinheim|Hanau|Steinheim|Albrecht-D\xC3\xBCrer-Stra\xC3\x9Fe|1\x0A63456|Steinheim|Hanau|Steinheim|Dietzenseestra\xC3\x9Fe|3\x0A63456|Steinheim|Hanau|Steinheim|Eppsteinstra\xC3\x9Fe|4\x0A63456|Steinheim|Hanau|Steinheim|Idastra\xC3\x9Fe|3\x0A63456|Steinheim|Hanau|Steinheim|Illweg|1\x0A63456|Steinheim|Hanau|Steinheim|Kreuzweg|3\x0A63456|Steinheim|Hanau||Offenbacher Landstra\xC3\x9Fe|2\x0A63456|Steinheim|Hanau|Steinheim|Otto-Hahn-Stra\xC3\x9Fe|1\x0A63456|Steinheim|Hanau|Steinheim|Wilhelm-Paul-Stra\xC3\x9Fe|1\x0A63456|Steinheim||||45\x0A63695|Stockheim, Glauburg, Deutschland|Glauburg|Stockheim|Am W\xC3\xA4ldchen|1\x0A63695|Stockheim, Glauburg, Deutschland|Glauburg|Stockheim|Bahnhofstra\xC3\x9Fe|1\x0A63695|Stockheim, Glauburg, Deutschland|Glauburg|Stockheim|Berliner Stra\xC3\x9Fe|1\x0A63695|Stockheim, Glauburg, Deutschland|Glauburg|Stockheim|Ringstra\xC3\x9Fe|1\x0A63695|Stockheim, Glauburg, Deutschland|Glauburg|Stockheim|Unter der Struth|1\x0A63695|Stockheim, Glauburg, Deutschland|Glauburg|Stockheim|Weinbergstra\xC3\x9Fe|1\x0A63695|Stockheim, Glauburg, Deutschland||||6\x0A63636 Sum|Udenhain|Brachttal|Udenhain|Schauerwaldweg|1\x0A63636 Sum|Udenhain|Brachttal|Udenhain|Schulstra\xC3\x9Fe|3\x0A63636 Sum|Udenhain||||4\x0A63633|Unterreichenbach|Birstein|Unterreichenbach|Am Kirchacker|1\x0A63633|Unterreichenbach|Birstein|Unterreichenbach|Am Nollfeld|1\x0A63633|Unterreichenbach||||2\x0A63654|Vonhausen|B\xC3\xBCdingen|Vonhausen|Am Herrngarten|1\x0A63654|Vonhausen|B\xC3\xBCdingen|Vonhausen|An den Kernb\xC3\xA4umen|2\x0A63654|Vonhausen|B\xC3\xBCdingen|Vonhausen|Blumenstra\xC3\x9Fe|1\x0A63654|Vonhausen|B\xC3\xBCdingen|Vonhausen|Im M\xC3\xBCnchhohlring|2\x0A63654|Vonhausen||||6\x0A63477|Wachenbuchen|Maintal|Wachenbuchen|Bleichstra\xC3\x9Fe|1\x0A63477|Wachenbuchen|Maintal|Wachenbuchen|Saalburgstra\xC3\x9Fe|1\x0A63477|Wachenbuchen|Maintal|Wachenbuchen|Taufsteinstra\xC3\x9Fe|1\x0A63477|Wachenbuchen||||3\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Am Roten Berg|2\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|An der Etzweide|5\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Breitenborner Stra\xC3\x9Fe|5\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Chatilloner Stra\xC3\x9Fe|7\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Gelnh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Haitzer Stra\xC3\x9Fe|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Ro\xC3\x9Flebener Stra\xC3\x9Fe|7\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Wirtheimer Stra\xC3\x9Fe|2\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Auweg|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Bahnhofstra\xC3\x9Fe|21\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Bleichgartenstra\xC3\x9Fe|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Br\xC3\xBCckenstra\xC3\x9Fe|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Heegstra\xC3\x9Fe|7\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Mittelweg|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Poststra\xC3\x9Fe|14\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Ysenburger Stra\xC3\x9Fe|3\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Adtring|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Alsfelder Stra\xC3\x9Fe|6\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Birsteiner Stra\xC3\x9Fe|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Wittgenborn|Baumgartenweg|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Hainhofweg|2\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Hesseldorfer Stra\xC3\x9Fe|7\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Im Ziegelgarten|5\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|In den R\xC3\xB6dern|4\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Lauterbacher Stra\xC3\x9Fe|14\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Schlierbacher Stra\xC3\x9Fe|3\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Spessartstra\xC3\x9Fe|3\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Vogelsbergstra\xC3\x9Fe|4\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Im Ziegelgarten|1\x0A63607|W\xC3\xA4chtersbach||||131\x0A63607|Waldensberg|Hanau|Gro\xC3\x9Fauheim|Von-Brentano-Stra\xC3\x9Fe|3\x0A63607|Waldensberg|W\xC3\xA4chtersbach|Waldensberg|Arnaudstra\xC3\x9Fe|1\x0A63607|Waldensberg|W\xC3\xA4chtersbach|Waldensberg|B\xC3\xBCdinger Weg|1\x0A63607|Waldensberg||||5\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Bruchwiesenweg|2\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Ernst-Reuter-Stra\xC3\x9Fe|1\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|F\xC3\xBCrstenbergstra\xC3\x9Fe|1\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Gr\xC3\xBCnaustra\xC3\x9Fe|1\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Hermelinweg|2\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|In den Heimerswiesen|1\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|John-F.-Kennedy-Stra\xC3\x9Fe|20\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Ollenhauerstra\xC3\x9Fe|6\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Ratiborstra\xC3\x9Fe|1\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Theodor-Heuss-Stra\xC3\x9Fe|3\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Vosswaldestra\xC3\x9Fe|2\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Am Eichwald|1\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Amselweg|1\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Bornflo\xC3\x9Fstra\xC3\x9Fe|5\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Eichbaumstra\xC3\x9Fe|3\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Fasanenweg|3\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Hainstra\xC3\x9Fe|2\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Herrnstra\xC3\x9Fe|17\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Philipp-Reis-Stra\xC3\x9Fe|7\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Waldstra\xC3\x9Fe|2\x0A63674|Waldsiedlung||||81\x0A63607|Weilers|W\xC3\xA4chtersbach|Weilers|Im Alten Weg|2\x0A63607|Weilers||||2\x0A63110|Weiskirchen|Rodgau|Weiskirchen|Schlesienstra\xC3\x9Fe|1\x0A63110|Weiskirchen||||1\x0A63633|Wettges|Birstein|Wettges|Triebstra\xC3\x9Fe|1\x0A63633|Wettges||||1\x0A61130|Windecken|Nidderau|Windecken|Lindenstra\xC3\x9Fe|1\x0A61130|Windecken|Nidderau|Windecken|Ostheimer Stra\xC3\x9Fe|1\x0A61130|Windecken||||2\x0A63599|Wirtheim|Biebergem\xC3\xBCnd|Wirtheim|Frankfurter Stra\xC3\x9Fe|3\x0A63599|Wirtheim|Biebergem\xC3\xBCnd|Wirtheim|Gro\xC3\x9Fer Garten|1\x0A63599|Wirtheim|Biebergem\xC3\xBCnd|Wirtheim|Marktplatz|1\x0A63599|Wirtheim|Biebergem\xC3\xBCnd|Wirtheim|Pfingstborn|1\x0A63599|Wirtheim|Biebergem\xC3\xBCnd|Wirtheim|Schinnsgraben|2\x0A63599|Wirtheim|Biebergem\xC3\xBCnd|Wirtheim|Taubenfang|1\x0A63599|Wirtheim||||9\x0A63607|Wittgenborn|W\xC3\xA4chtersbach|Wittgenborn|Langgasse|2\x0A63607|Wittgenborn|W\xC3\xA4chtersbach|Wittgenborn|Siedlungsstra\xC3\x9Fe|1\x0A63607|Wittgenborn|W\xC3\xA4chtersbach||Sophie-Knoth-Stra\xC3\x9Fe|4\x0A63607|Wittgenborn|W\xC3\xA4chtersbach|Wittgenborn|Waldensberger Stra\xC3\x9Fe|3\x0A63607|Wittgenborn||||10\x0A63654|Wolferborn|B\xC3\xBCdingen|Wolferborn|Am Alten Graben|3\x0A63654|Wolferborn|B\xC3\xBCdingen|Wolferborn|An den \xC3\x84ckerwiesen|1\x0A63654|Wolferborn|B\xC3\xBCdingen|Wolferborn|Wehrtbornstra\xC3\x9Fe|2\x0A63654|Wolferborn||||6\x0A63457|Wolfgang|Hanau|Wolfgang|August-Bebel-Stra\xC3\x9Fe|1\x0A63457|Wolfgang|Hanau||Blaumeisenweg|2\x0A63457|Wolfgang|Hanau|Wolfgang|Friedrich-Fr\xC3\xB6bel-Stra\xC3\x9Fe|2\x0A63457|Wolfgang|Hanau||Gr\xC3\xBCnspechtweg|1\x0A63457|Wolfgang|Hanau||Heidelerchenweg|1\x0A63457|Wolfgang|Hanau|Wolfgang|Lehrh\xC3\xB6fer Stra\xC3\x9Fe|1\x0A63457|Wolfgang|Hanau||Sandbienenweg|3\x0A63457|Wolfgang|Hanau|Wolfgang|Schanzenstra\xC3\x9Fe|1\x0A63457|Wolfgang|Hanau|Wolfgang|Vor der Pulverm\xC3\xBChle|1\x0A63457|Wolfgang|Hanau||Zitronenfalterweg|2\x0A63457|Wolfgang||||15\x0A63533|Zellhausen|Mainhausen|Zellhausen|Am Gellmannsr\xC3\xB6dchen|1\x0A63533|Zellhausen|Mainhausen||Am Zellerbruch|1\x0A63533|Zellhausen|Mainhausen|Zellhausen|Babenh\xC3\xA4user Stra\xC3\x9Fe|3\x0A63533|Zellhausen|Mainhausen|Zellhausen|Bahnhofstra\xC3\x9Fe|1\x0A63533|Zellhausen|Mainhausen|Zellhausen|Harresh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63533|Zellhausen|Mainhausen|Zellhausen|Obergasse|1\x0A63533|Zellhausen|Mainhausen|Zellhausen|Wingertspfad|1\x0A63533|Zellhausen||||9"), ConstSet2, -1);
    var headerSeq_14720630 = nsuSplitString(streets_14720629[chckIndx(0, 0, (streets_14720629).length-1)], makeNimstrLit("|"), -1);
    var headerTbl_14730614 = [initTable_14720633(32)];
    L1: do {
      var i_14740229 = 0;
      var h_14740230 = [];
      var i_14910789 = 0;
      var L_14910790 = (headerSeq_14720630).length;
      L2: do {
          L3: while (true) {
          if (!(i_14910789 < L_14910790)) break L3;
            i_14740229 = i_14910789;
            h_14740230 = headerSeq_14720630[chckIndx(i_14910789, 0, (headerSeq_14720630).length-1)];
            HEX5BHEX5DHEX3D_14740348(headerTbl_14730614[0], h_14740230, chckRange(i_14740229, 0, 2147483647));
            i_14910789 = addInt(i_14910789, 1);
            if (!(((headerSeq_14720630).length == L_14910790))) {
            failedAssertImpl_115480(makeNimstrLit("iterators.nim(137, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    L4: do {
      var i_14810694 = 0;
      var colontmp__14910796 = 0;
      colontmp__14910796 = (streets_14720629).length - 1;
      var res_14910797 = 1;
      L5: do {
          L6: while (true) {
          if (!(res_14910797 <= colontmp__14910796)) break L6;
            i_14810694 = res_14910797;
            L7: do {
              var rowSeq_14810695 = nsuSplitString(streets_14720629[chckIndx(i_14810694, 0, (streets_14720629).length-1)], makeNimstrLit("|"), -1);
              var strN_14810696 = [];
              var city_14810697 = [];
              var dstr_14810698 = [];
              var plz_14810699 = [];
              var totalFam_14810700 = [];
              var strN_14810696 = nimCopy(null, rowSeq_14810695[chckIndx((Tmp8 = HEX5BHEX5D_14815153(headerTbl_14730614[0], makeNimstrLit("Street")), Tmp8)[0][Tmp8[1]], 0, (rowSeq_14810695).length-1)], NTI113);
              if (eqStrings(strN_14810696, [])) {
              break L7;
              }
              
              var city_14810697 = nimCopy(null, rowSeq_14810695[chckIndx((Tmp9 = HEX5BHEX5D_14815153(headerTbl_14730614[0], makeNimstrLit("City")), Tmp9)[0][Tmp9[1]], 0, (rowSeq_14810695).length-1)], NTI113);
              var dstr_14810698 = nimCopy(null, rowSeq_14810695[chckIndx((Tmp10 = HEX5BHEX5D_14815153(headerTbl_14730614[0], makeNimstrLit("District")), Tmp10)[0][Tmp10[1]], 0, (rowSeq_14810695).length-1)], NTI113);
              if (eqStrings(dstr_14810698, city_14810697)) {
              Tmp11 = [];
              }
              else {
              Tmp11 = dstr_14810698;
              }
              
              var district_14830168 = nimCopy(null, Tmp11, NTI113);
              var plz_14810699 = nimCopy(null, rowSeq_14810695[chckIndx((Tmp12 = HEX5BHEX5D_14815153(headerTbl_14730614[0], makeNimstrLit("Plz")), Tmp12)[0][Tmp12[1]], 0, (rowSeq_14810695).length-1)], NTI113);
              var sector_14835166 = {postalCode: nimCopy(null, plz_14810699, NTI113), city: nimCopy(null, city_14810697, NTI113), district: nimCopy(null, district_14830168, NTI113), folkDistrict: [], pFix: 0, streets: ({data: [], counter: 0, first: 0, last: 0}), shownOnMap: false, exclude: false};
              var street_14835167 = {name: nimCopy(null, strN_14810696, NTI113), sector: sector_14835166, links: [], totalFamilies: 0};
              var totalFam_14810700 = nimCopy(null, rowSeq_14810695[chckIndx((Tmp13 = HEX5BHEX5D_14815153(headerTbl_14730614[0], makeNimstrLit("TotalFamilies")), Tmp13)[0][Tmp13[1]], 0, (rowSeq_14810695).length-1)], NTI113);
              HEX5BHEX5DHEX3D_14840283(result_14710861[0], hash_14631255(street_14835167), chckRange(parseInt(toJSStr(totalFam_14810700), 10), 0, 2147483647));
            } while(false);
            res_14910797 = addInt(res_14910797, 1);
          }
      } while(false);
    } while(false);

  return result_14710861[0];

}
var tblTotalFam_14910773 = [initTblTotFamByStreet_14710837()];
function nsuFindChar(s_8930216, sub_8930217, start_8930218, last_8930219) {
    var Tmp1;

  var result_8930221 = 0;

  BeforeRet: do {
    if ((last_8930219 == 0)) {
    Tmp1 = (s_8930216).length - 1;
    }
    else {
    Tmp1 = last_8930219;
    }
    
    var last_8930223 = Tmp1;
    L2: do {
      var i_8930606 = 0;
      var colontmp__15825338 = 0;
      colontmp__15825338 = start_8930218;
      var res_15825339 = colontmp__15825338;
      L3: do {
          L4: while (true) {
          if (!(res_15825339 <= last_8930223)) break L4;
            i_8930606 = res_15825339;
            if ((sub_8930217 == s_8930216[chckIndx(i_8930606, 0, (s_8930216).length-1)])) {
            result_8930221 = i_8930606;
            break BeforeRet;
            }
            
            res_15825339 = addInt(res_15825339, 1);
          }
      } while(false);
    } while(false);
    result_8930221 = -1;
    break BeforeRet;
  } while (false);

  return result_8930221;

}
function substr_381053(s_381055, first_381056) {
  var result_381058 = [];

    result_381058 = nimCopy(null, substr_381022(s_381055, first_381056, (s_381055).length - 1), NTI113);

  return result_381058;

}
function nsuInitSkipTable(a_8925081, sub_8925082) {
    var m_8925083 = (sub_8925082).length;
    var i_8925085 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_8925085 <= 248)) break L2;
          a_8925081[chckIndx(chckRange(addInt(i_8925085, 0), 0, 255), 0, (a_8925081).length-1)] = m_8925083;
          a_8925081[chckIndx(chckRange(addInt(i_8925085, 1), 0, 255), 0, (a_8925081).length-1)] = m_8925083;
          a_8925081[chckIndx(chckRange(addInt(i_8925085, 2), 0, 255), 0, (a_8925081).length-1)] = m_8925083;
          a_8925081[chckIndx(chckRange(addInt(i_8925085, 3), 0, 255), 0, (a_8925081).length-1)] = m_8925083;
          a_8925081[chckIndx(chckRange(addInt(i_8925085, 4), 0, 255), 0, (a_8925081).length-1)] = m_8925083;
          a_8925081[chckIndx(chckRange(addInt(i_8925085, 5), 0, 255), 0, (a_8925081).length-1)] = m_8925083;
          a_8925081[chckIndx(chckRange(addInt(i_8925085, 6), 0, 255), 0, (a_8925081).length-1)] = m_8925083;
          a_8925081[chckIndx(chckRange(addInt(i_8925085, 7), 0, 255), 0, (a_8925081).length-1)] = m_8925083;
          i_8925085 = addInt(i_8925085, 8);
        }
    } while(false);
    L3: do {
      var i_8925101 = 0;
      var colontmp__15825346 = 0;
      colontmp__15825346 = subInt(m_8925083, 1);
      var i_15825347 = 0;
      L4: do {
          L5: while (true) {
          if (!(i_15825347 < colontmp__15825346)) break L5;
            i_8925101 = i_15825347;
            a_8925081[chckIndx(sub_8925082[chckIndx(i_8925101, 0, (sub_8925082).length-1)], 0, (a_8925081).length-1)] = subInt(subInt(m_8925083, 1), i_8925101);
            i_15825347 = addInt(i_15825347, 1);
          }
      } while(false);
    } while(false);

  
}
function nsuFindStrA(a_8925117, s_8925118, sub_8925119, start_8925120, last_8925121) {
    var Tmp1;

  var result_8925123 = 0;

  BeforeRet: do {
    if ((last_8925121 == 0)) {
    Tmp1 = (s_8925118).length - 1;
    }
    else {
    Tmp1 = last_8925121;
    }
    
    var last_8925125 = Tmp1;
    var subLast_8925126 = subInt((sub_8925119).length, 1);
    if ((subLast_8925126 == -1)) {
    result_8925123 = start_8925120;
    break BeforeRet;
    }
    
    var skip_8925127 = start_8925120;
    L2: do {
        L3: while (true) {
        if (!(subLast_8925126 <= subInt(last_8925125, skip_8925127))) break L3;
          var i_8930001 = subLast_8925126;
          L4: do {
              L5: while (true) {
              if (!(s_8925118[chckIndx(addInt(skip_8925127, i_8930001), 0, (s_8925118).length-1)] == sub_8925119[chckIndx(i_8930001, 0, (sub_8925119).length-1)])) break L5;
                if ((i_8930001 == 0)) {
                result_8925123 = skip_8925127;
                break BeforeRet;
                }
                
                i_8930001 = subInt(i_8930001, 1);
              }
          } while(false);
          skip_8925127 = addInt(skip_8925127, a_8925117[chckIndx(s_8925118[chckIndx(addInt(skip_8925127, subLast_8925126), 0, (s_8925118).length-1)], 0, (a_8925117).length-1)]);
        }
    } while(false);
    result_8925123 = -1;
    break BeforeRet;
  } while (false);

  return result_8925123;

}
function nsuReplaceStr(s_9000016, sub_9000017, by_9000018) {
  var result_9000019 = [];

    result_9000019 = nimCopy(null, [], NTI113);
    var subLen_9000020 = (sub_9000017).length;
    if ((subLen_9000020 == 0)) {
    result_9000019 = nimCopy(null, s_9000016, NTI113);
    }
    else {
    if ((subLen_9000020 == 1)) {
    var c_9000021 = sub_9000017[chckIndx(0, 0, (sub_9000017).length-1)];
    var last_9000023 = (s_9000016).length - 1;
    var i_9000025 = 0;
    L1: do {
        L2: while (true) {
        if (!true) break L2;
          var j_9000026 = nsuFindChar(s_9000016, c_9000021, chckRange(i_9000025, 0, 2147483647), last_9000023);
          if ((j_9000026 < 0)) {
          break L1;
          }
          
          result_9000019.push.apply(result_9000019, substr_381022(s_9000016, i_9000025, subInt(j_9000026, 1)));;
          result_9000019.push.apply(result_9000019, by_9000018);;
          i_9000025 = addInt(j_9000026, subLen_9000020);
        }
    } while(false);
    result_9000019.push.apply(result_9000019, substr_381053(s_9000016, i_9000025));;
    }
    else {
      var a_9000027 = [new Int32Array(256)];
      nsuInitSkipTable(a_9000027[0], sub_9000017);
      var last_9000030 = (s_9000016).length - 1;
      var i_9000032 = 0;
      L3: do {
          L4: while (true) {
          if (!true) break L4;
            var j_9000033 = nsuFindStrA(a_9000027[0], s_9000016, sub_9000017, chckRange(i_9000032, 0, 2147483647), last_9000030);
            if ((j_9000033 < 0)) {
            break L3;
            }
            
            result_9000019.push.apply(result_9000019, substr_381022(s_9000016, i_9000032, subInt(j_9000033, 1)));;
            result_9000019.push.apply(result_9000019, by_9000018);;
            i_9000032 = addInt(j_9000033, subLen_9000020);
          }
      } while(false);
      result_9000019.push.apply(result_9000019, substr_381053(s_9000016, i_9000032));;
    }
    }

  return result_9000019;

}
function newSeq_14205012(len_14205015) {
  var result_14205017 = [];

    result_14205017 = new Array(len_14205015); for (var i=0;i<len_14205015;++i) {result_14205017[i]=({k: 0, parent: null, current: null, newNode: null, oldNode: null});}
  return result_14205017;

}
function newSeq_14205064(len_14205067) {
  var result_14205069 = [];

    result_14205069 = new Array(len_14205067); for (var i=0;i<len_14205067;++i) {result_14205069[i]=({parent: null, newChild: null, pos: 0});}
  return result_14205069;

}
function valueHEX3D_13390140(n_13390142, v_13390143) {
    n_13390142.text = v_13390143;

  
}
function value_13390123(n_13390125) {
  var result_13390126 = null;

    result_13390126 = n_13390125.text;

  return result_13390126;

}
function addEventShell_13647375(d_13647377, name_13647378, h_13647379) {
    d_13647377.addEventListener(name_13647378, h_13647379, false);
    if ((d_13647377.karaxEvents == null)) {
    d_13647377.karaxEvents = new Array(0);
    }
    
    d_13647377.karaxEvents.push({Field0: name_13647378, Field1: h_13647379});

  
}
function wrapEvent_13650097(d_13650099, n_13650100, k_13650101, action_13650102) {
      function laterWrapper_13720042() {
          function HEX3Aanonymous_13720048(ev_13720050) {
              function wrapper_13720051() {
                  var vHEX60gensym15_13730001 = ev_13720050.target.value;
                  valueHEX3D_13390140(n_13720046, vHEX60gensym15_13730001);
                  if (!(!((action_13720045 == null)))) {
                  failedAssertImpl_115480(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
                  }
                  
                  action_13720045(ev_13720050, n_13720046);
                  if (!((value_13390123(n_13720046) == vHEX60gensym15_13730001))) {
                  ev_13720050.target.value = value_13390123(n_13720046);
                  }
                  

                
              }

              if (!((timer_13720047 == null))) {
              clearTimeout(timer_13720047);
              }
              
              timer_13720047 = setTimeout(wrapper_13720051, 400);

            
          }

        var result_13720044 = null;

          var action_13720045 = action_13650102;
          var n_13720046 = n_13650100;
          var timer_13720047 = null;
          result_13720044 = HEX3Aanonymous_13720048;

        return result_13720044;

      }
      function enterWrapper_13685042() {
          function HEX3Aanonymous_13685047(ev_13685049) {
              if ((ev_13685049.keyCode == 13)) {
              var vHEX60gensym8_13695001 = ev_13685049.target.value;
              valueHEX3D_13390140(n_13685046, vHEX60gensym8_13695001);
              if (!(!((action_13685045 == null)))) {
              failedAssertImpl_115480(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
              }
              
              action_13685045(ev_13685049, n_13685046);
              if (!((value_13390123(n_13685046) == vHEX60gensym8_13695001))) {
              ev_13685049.target.value = value_13390123(n_13685046);
              }
              
              }
              

            
          }

        var result_13685044 = null;

          var action_13685045 = action_13650102;
          var n_13685046 = n_13650100;
          result_13685044 = HEX3Aanonymous_13685047;

        return result_13685044;

      }
      function stdWrapper_13650104() {
          function HEX3Aanonymous_13650109(ev_13650111) {
                var Tmp1;
                var Tmp2;

                if ((n_13650108.kind == 111)) Tmp2 = true; else {                  Tmp2 = (n_13650108.kind == 105);                }                if (Tmp2) Tmp1 = true; else {                  Tmp1 = (n_13650108.kind == 107);                }              if (Tmp1) {
              var vHEX60gensym1_13660001 = ev_13650111.target.value;
              valueHEX3D_13390140(n_13650108, vHEX60gensym1_13660001);
              if (!(!((action_13650107 == null)))) {
              failedAssertImpl_115480(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
              }
              
              action_13650107(ev_13650111, n_13650108);
              if (!((value_13390123(n_13650108) == vHEX60gensym1_13660001))) {
              ev_13650111.target.value = value_13390123(n_13650108);
              }
              
              }
              else {
              action_13650107(ev_13650111, n_13650108);
              }
              

            
          }

        var result_13650106 = null;

          var action_13650107 = action_13650102;
          var n_13650108 = n_13650100;
          result_13650106 = HEX3Aanonymous_13650109;

        return result_13650106;

      }

  var result_13650103 = null;

    switch (k_13650101) {
    case 30:
      result_13650103 = laterWrapper_13720042();
      addEventShell_13647375(d_13650099, "keyup", result_13650103);
      break;
    case 29:
      result_13650103 = enterWrapper_13685042();
      addEventShell_13647375(d_13650099, "keyup", result_13650103);
      break;
    default: 
      result_13650103 = stdWrapper_13650104();
      addEventShell_13647375(d_13650099, toEventName_13390012[chckIndx(k_13650101, 0, (toEventName_13390012).length-1)], result_13650103);
      break;
    }

  return result_13650103;

}
function applyEvents_13760073(n_13760075) {
    var dest_13760076 = n_13760075.dom;
    L1: do {
      var i_13760089 = 0;
      var colontmp__15825380 = 0;
      colontmp__15825380 = (n_13760075.events).length;
      var i_15825381 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_15825381 < colontmp__15825380)) break L3;
            i_13760089 = i_15825381;
            n_13760075.events[chckIndx(i_13760089, 0, (n_13760075.events).length-1)]["Field2"] = wrapEvent_13650097(dest_13760076, n_13760075, n_13760075.events[chckIndx(i_13760089, 0, (n_13760075.events).length-1)]["Field0"], n_13760075.events[chckIndx(i_13760089, 0, (n_13760075.events).length-1)]["Field1"]);
            i_15825381 = addInt(i_15825381, 1);
          }
      } while(false);
    } while(false);

  
}
function applyStyle_13380628(n_13380630, s_13380631) {
    n_13380630.style = {};
    L1: do {
      var i_13380664 = 0;
      var colontmp__15825391 = 0;
      colontmp__15825391 = subInt(s_13380631.length, 1);
      var res_15825392 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_15825392 <= colontmp__15825391)) break L3;
            i_13380664 = res_15825392;
            n_13380630.style[s_13380631[i_13380664]] = s_13380631[addInt(i_13380664, 1)];
            res_15825392 = addInt(res_15825392, 2);
          }
      } while(false);
    } while(false);

  
}
function toDom_13760154(n_13760156, useAttachedNode_13760157, kxi_13760158) {
      var Tmp9;
      var Tmp10;

  var result_13760159 = null;

  BeforeRet: do {
    if (useAttachedNode_13760157) {
    if (!((n_13760156.dom == null))) {
    if (!((n_13760156.id == null))) {
    kxi_13760158.byId[n_13760156.id] = n_13760156;
    }
    
    result_13760159 = n_13760156.dom;
    break BeforeRet;
    }
    
    }
    
    if ((n_13760156.kind == 0)) {
    result_13760159 = document.createTextNode(n_13760156.text);
    n_13760156.dom = result_13760159;
    if (!((n_13760156.id == null))) {
    kxi_13647284[0].byId[n_13760156.id] = n_13760156;
    }
    
    }
    else {
    if ((n_13760156.kind == 6)) {
    result_13760159 = document.createElement("div");
    result_13760159.innerHTML = n_13760156.text;
    n_13760156.dom = result_13760159;
    if (!((n_13760156.id == null))) {
    kxi_13647284[0].byId[n_13760156.id] = n_13760156;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_13760156.kind == 3)) {
    var x_13795001 = vcomponents_13556239[0][n_13760156.text](n_13760156.kids);
    result_13760159 = toDom_13760154(x_13795001, useAttachedNode_13760157, kxi_13760158);
    n_13760156.dom = result_13760159;
    if (!((n_13760156.id == null))) {
    kxi_13647284[0].byId[n_13760156.id] = n_13760156;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_13760156.kind == 4)) {
    result_13760159 = n_13760156.dom;
    if (!(!((result_13760159 == null)))) {
    failedAssertImpl_115480(makeNimstrLit("karax.nim(176, 12) `result != nil` "));
    }
    
    n_13760156.dom = result_13760159;
    if (!((n_13760156.id == null))) {
    kxi_13647284[0].byId[n_13760156.id] = n_13760156;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_13760156.kind == 5)) {
    var x_13830022 = n_13760156;
    if (!((x_13830022.onAttachImpl == null))) {
    x_13830022.onAttachImpl(x_13830022);
    }
    
    if (!(!((x_13830022.renderImpl == null)))) {
    failedAssertImpl_115480(makeNimstrLit("karax.nim(183, 12) `x.renderImpl != nil` "));
    }
    
    if ((x_13830022.expanded == null)) {
    x_13830022.expanded = x_13830022.renderImpl(x_13830022);
    }
    
    if (!(!((x_13830022.expanded == null)))) {
    failedAssertImpl_115480(makeNimstrLit("karax.nim(187, 12) `x.expanded != nil` "));
    }
    
    result_13760159 = toDom_13760154(x_13830022.expanded, useAttachedNode_13760157, kxi_13760158);
    n_13760156.dom = result_13760159;
    if (!((n_13760156.id == null))) {
    kxi_13647284[0].byId[n_13760156.id] = n_13760156;
    }
    
    break BeforeRet;
    }
    else {
      result_13760159 = document.createElement(toTag_13390006[chckIndx(n_13760156.kind, 0, (toTag_13390006).length-1)]);
      n_13760156.dom = result_13760159;
      if (!((n_13760156.id == null))) {
      kxi_13647284[0].byId[n_13760156.id] = n_13760156;
      }
      
      L1: do {
        var k_13885016 = null;
        L2: do {
          var i_15825360 = 0;
          var colontmp__15825361 = 0;
          colontmp__15825361 = (n_13760156.kids).length;
          var i_15825362 = 0;
          L3: do {
              L4: while (true) {
              if (!(i_15825362 < colontmp__15825361)) break L4;
                i_15825360 = i_15825362;
                k_13885016 = n_13760156.kids[chckIndx(i_15825360, 0, (n_13760156.kids).length-1)];
                result_13760159.appendChild(toDom_13760154(k_13885016, useAttachedNode_13760157, kxi_13760158));
                i_15825362 = addInt(i_15825362, 1);
              }
          } while(false);
        } while(false);
      } while(false);
      if (!((n_13760156.text == null))) {
      result_13760159.value = n_13760156.text;
      }
      
    }
    }}}}
    if (!((n_13760156.id == null))) {
    result_13760159.id = n_13760156.id;
    }
    
    if (!((n_13760156.class == null))) {
    result_13760159.className = n_13760156.class;
    }
    
    L5: do {
      var k_13900001 = null;
      var v_13900002 = null;
      L6: do {
        var i_15825373 = 0;
        var colontmp__15825374 = 0;
        colontmp__15825374 = subInt((n_13760156.attrs).length, 2);
        var res_15825375 = 0;
        L7: do {
            L8: while (true) {
            if (!(res_15825375 <= colontmp__15825374)) break L8;
              i_15825373 = res_15825375;
              k_13900001 = n_13760156.attrs[chckIndx(i_15825373, 0, (n_13760156.attrs).length-1)];
              v_13900002 = n_13760156.attrs[chckIndx(addInt(i_15825373, 1), 0, (n_13760156.attrs).length-1)];
              if (!((v_13900002 == null))) {
              result_13760159.setAttribute(k_13900001, v_13900002);
              }
              
              res_15825375 = addInt(res_15825375, 2);
            }
        } while(false);
      } while(false);
    } while(false);
    applyEvents_13760073(n_13760156);
      if (!!((kxi_13760158 == null))) Tmp10 = false; else {        Tmp10 = (n_13760156 == kxi_13760158.toFocusV);      }      if (!Tmp10) Tmp9 = false; else {        Tmp9 = (kxi_13760158.toFocus == null);      }    if (Tmp9) {
    kxi_13760158.toFocus = result_13760159;
    }
    
    if (!((n_13760156.style == null))) {
    applyStyle_13380628(result_13760159, n_13760156.style);
    }
    
  } while (false);

  return result_13760159;

}
function replaceById_13925059(id_13925061, newTree_13925062) {
    var x_13925063 = document.getElementById(id_13925061);
    x_13925063.parentNode.replaceChild(newTree_13925062, x_13925063);
    newTree_13925062.id = id_13925061;

  
}
function len_13475014(x_13475016) {
  var result_13475017 = 0;

    result_13475017 = (x_13475016.kids).length;

  return result_13475017;

}
function HEX5BHEX5D_13475036(x_13475038, idx_13475039) {
  var result_13475040 = null;

    result_13475040 = x_13475038.kids[chckIndx(idx_13475039, 0, (x_13475038.kids).length-1)];

  return result_13475040;

}
function same_13910072(n_13910074, e_13910075, nesting_13910076) {
      var Tmp1;
      var Tmp2;

  var result_13910078 = false;

  BeforeRet: do {
    if (kxi_13647284[0].orphans.hasOwnProperty(n_13910074.id)) {
    result_13910078 = true;
    break BeforeRet;
    }
    
    if ((n_13910074.kind == 5)) {
    result_13910078 = same_13910072(n_13910074.expanded, e_13910075, addInt(nesting_13910076, 1));
    }
    else {
    if ((n_13910074.kind == 6)) {
    result_13910078 = true;
    }
    else {
      if ((n_13910074.kind == 3)) Tmp1 = true; else {        Tmp1 = (n_13910074.kind == 4);      }    if (Tmp1) {
    result_13910078 = true;
    }
    else {
    if ((toTag_13390006[chckIndx(n_13910074.kind, 0, (toTag_13390006).length-1)] == e_13910075.nodeName)) {
    result_13910078 = true;
    if (!((n_13910074.kind == 0))) {
      if (!!((e_13910075.childNodes.length == len_13475014(n_13910074)))) Tmp2 = false; else {        Tmp2 = !((n_13910074.kind == 111));      }    if (Tmp2) {
    rawEcho(makeNimstrLit("expected "), cstrToNimstr((len_13475014(n_13910074))+""), makeNimstrLit(" real "), cstrToNimstr((e_13910075.childNodes.length)+""), makeNimstrLit(" "), cstrToNimstr(toTag_13390006[chckIndx(n_13910074.kind, 0, (toTag_13390006).length-1)]), makeNimstrLit(" nesting "), cstrToNimstr((nesting_13910076)+""));
    result_13910078 = false;
    break BeforeRet;
    }
    
    L3: do {
      var i_13925024 = 0;
      var colontmp__15825398 = 0;
      colontmp__15825398 = len_13475014(n_13910074);
      var i_15825399 = 0;
      L4: do {
          L5: while (true) {
          if (!(i_15825399 < colontmp__15825398)) break L5;
            i_13925024 = i_15825399;
            if (!(same_13910072(HEX5BHEX5D_13475036(n_13910074, i_13925024), e_13910075.childNodes[i_13925024], addInt(nesting_13910076, 1)))) {
            result_13910078 = false;
            break BeforeRet;
            }
            
            i_15825399 = addInt(i_15825399, 1);
          }
      } while(false);
    } while(false);
    }
    
    }
    else {
    rawEcho(makeNimstrLit("VDOM: "), cstrToNimstr(toTag_13390006[chckIndx(n_13910074.kind, 0, (toTag_13390006).length-1)]), makeNimstrLit(" DOM: "), cstrToNimstr(e_13910075.nodeName));
    }
    }}}
  } while (false);

  return result_13910078;

}
function eq_13345229(a_13345231, b_13345232) {
  var result_13345233 = false;

  BeforeRet: do {
    if ((a_13345231 == null)) {
    if ((b_13345232 == null)) {
    result_13345233 = true;
    break BeforeRet;
    }
    else {
      result_13345233 = false;
      break BeforeRet;
    }
    
    }
    else {
    if ((b_13345232 == null)) {
    result_13345233 = false;
    break BeforeRet;
    }
    }
    if (!((a_13345231.length == b_13345232.length))) {
    result_13345233 = false;
    break BeforeRet;
    }
    
    L1: do {
      var i_13350083 = 0;
      var colontmp__15825438 = 0;
      colontmp__15825438 = a_13345231.length;
      var i_15825439 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_15825439 < colontmp__15825438)) break L3;
            i_13350083 = i_15825439;
            if (!((a_13345231[i_13350083] == b_13345232[i_13350083]))) {
            result_13345233 = false;
            break BeforeRet;
            }
            
            i_15825439 = addInt(i_15825439, 1);
          }
      } while(false);
    } while(false);
    result_13345233 = true;
    break BeforeRet;
  } while (false);

  return result_13345233;

}
function sameAttrs_13486079(a_13486081, b_13486082) {
  var result_13486083 = false;

  BeforeRet: do {
    if (((a_13486081.attrs).length == (b_13486082.attrs).length)) {
    result_13486083 = true;
    L1: do {
      var i_13486106 = 0;
      var colontmp__15825442 = 0;
      colontmp__15825442 = (a_13486081.attrs).length;
      var i_15825443 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_15825443 < colontmp__15825442)) break L3;
            i_13486106 = i_15825443;
            if (!((a_13486081.attrs[chckIndx(i_13486106, 0, (a_13486081.attrs).length-1)] == b_13486082.attrs[chckIndx(i_13486106, 0, (b_13486082.attrs).length-1)]))) {
            result_13486083 = false;
            break BeforeRet;
            }
            
            i_15825443 = addInt(i_15825443, 1);
          }
      } while(false);
    } while(false);
    }
    
  } while (false);

  return result_13486083;

}
function eq_13925214(a_13925216, b_13925217, recursive_13925218) {
      var Tmp4;
      var Tmp5;

  var result_13925219 = 0;

  BeforeRet: do {
    if (!((a_13925216.kind == b_13925217.kind))) {
    result_13925219 = 1;
    break BeforeRet;
    }
    
    if (!((a_13925216.id == b_13925217.id))) {
    result_13925219 = 1;
    break BeforeRet;
    }
    
    result_13925219 = 3;
    if (!((a_13925216.index == b_13925217.index))) {
    result_13925219 = 1;
    break BeforeRet;
    }
    
    if ((a_13925216.kind == 0)) {
    if (!((a_13925216.text == b_13925217.text))) {
    result_13925219 = 1;
    break BeforeRet;
    }
    
    }
    else {
    if ((a_13925216.kind == 3)) {
    if (!((a_13925216.text == b_13925217.text))) {
    result_13925219 = 1;
    break BeforeRet;
    }
    
    if (!((len_13475014(a_13925216) == len_13475014(b_13925217)))) {
    result_13925219 = 1;
    break BeforeRet;
    }
    
    L1: do {
      var i_13955008 = 0;
      var colontmp__15825430 = 0;
      colontmp__15825430 = len_13475014(a_13925216);
      var i_15825431 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_15825431 < colontmp__15825430)) break L3;
            i_13955008 = i_15825431;
            if ((eq_13925214(HEX5BHEX5D_13475036(a_13925216, i_13955008), HEX5BHEX5D_13475036(b_13925217, i_13955008), recursive_13925218) == 1)) {
            result_13925219 = 1;
            break BeforeRet;
            }
            
            i_15825431 = addInt(i_15825431, 1);
          }
      } while(false);
    } while(false);
    }
    else {
    if ((a_13925216.kind == 4)) {
    if ((a_13925216.dom == b_13925217.dom)) {
    result_13925219 = 3;
    break BeforeRet;
    }
    else {
      result_13925219 = 1;
      break BeforeRet;
    }
    
    }
    else {
    if ((a_13925216.kind == 6)) {
    if (!((a_13925216.text == b_13925217.text))) {
    result_13925219 = 1;
    break BeforeRet;
    }
    
    }
    else {
    if ((b_13925217.kind == 5)) {
    if (!((a_13925216.text == b_13925217.text))) {
    result_13925219 = 1;
    break BeforeRet;
    }
    
    if (!((a_13925216.key == b_13925217.key))) {
    result_13925219 = 1;
    break BeforeRet;
    }
    
    result_13925219 = 0;
    break BeforeRet;
    }
    }}}}
      if (!((a_13925216.class == b_13925217.class))) Tmp5 = true; else {        Tmp5 = !(eq_13345229(a_13925216.style, b_13925217.style));      }      if (Tmp5) Tmp4 = true; else {        Tmp4 = !(sameAttrs_13486079(a_13925216, b_13925217));      }    if (Tmp4) {
    result_13925219 = 2;
    break BeforeRet;
    }
    
    if (recursive_13925218) {
    if (!((len_13475014(a_13925216) == len_13475014(b_13925217)))) {
    result_13925219 = 1;
    break BeforeRet;
    }
    
    L6: do {
      var i_13980008 = 0;
      var colontmp__15825434 = 0;
      colontmp__15825434 = len_13475014(a_13925216);
      var i_15825435 = 0;
      L7: do {
          L8: while (true) {
          if (!(i_15825435 < colontmp__15825434)) break L8;
            i_13980008 = i_15825435;
            if (!((eq_13925214(HEX5BHEX5D_13475036(a_13925216, i_13980008), HEX5BHEX5D_13475036(b_13925217, i_13980008), true) == 3))) {
            result_13925219 = 1;
            break BeforeRet;
            }
            
            i_15825435 = addInt(i_15825435, 1);
          }
      } while(false);
    } while(false);
    }
    
    break BeforeRet;
  } while (false);

  return result_13925219;

}
function updateStyles_13985034(newNode_13985036, oldNode_13985037) {
    if (!((oldNode_13985037.dom == null))) {
    if (!((newNode_13985036.style == null))) {
    applyStyle_13380628(oldNode_13985037.dom, newNode_13985036.style);
    }
    else {
      oldNode_13985037.dom.style = {m_type: NTI10167293, alignContent: null, alignItems: null, alignSelf: null, all: null, animation: null, animationDelay: null, animationDirection: null, animationDuration: null, animationFillMode: null, animationIterationCount: null, animationName: null, animationPlayState: null, animationTimingFunction: null, backdropFilter: null, backfaceVisibility: null, background: null, backgroundAttachment: null, backgroundBlendMode: null, backgroundClip: null, backgroundColor: null, backgroundImage: null, backgroundOrigin: null, backgroundPosition: null, backgroundRepeat: null, backgroundSize: null, blockSize: null, border: null, borderBlock: null, borderBlockColor: null, borderBlockEnd: null, borderBlockEndColor: null, borderBlockEndStyle: null, borderBlockEndWidth: null, borderBlockStart: null, borderBlockStartColor: null, borderBlockStartStyle: null, borderBlockStartWidth: null, borderBlockStyle: null, borderBlockWidth: null, borderBottom: null, borderBottomColor: null, borderBottomLeftRadius: null, borderBottomRightRadius: null, borderBottomStyle: null, borderBottomWidth: null, borderCollapse: null, borderColor: null, borderEndEndRadius: null, borderEndStartRadius: null, borderImage: null, borderImageOutset: null, borderImageRepeat: null, borderImageSlice: null, borderImageSource: null, borderImageWidth: null, borderInline: null, borderInlineColor: null, borderInlineEnd: null, borderInlineEndColor: null, borderInlineEndStyle: null, borderInlineEndWidth: null, borderInlineStart: null, borderInlineStartColor: null, borderInlineStartStyle: null, borderInlineStartWidth: null, borderInlineStyle: null, borderInlineWidth: null, borderLeft: null, borderLeftColor: null, borderLeftStyle: null, borderLeftWidth: null, borderRadius: null, borderRight: null, borderRightColor: null, borderRightStyle: null, borderRightWidth: null, borderSpacing: null, borderStartEndRadius: null, borderStartStartRadius: null, borderStyle: null, borderTop: null, borderTopColor: null, borderTopLeftRadius: null, borderTopRightRadius: null, borderTopStyle: null, borderTopWidth: null, borderWidth: null, bottom: null, boxDecorationBreak: null, boxShadow: null, boxSizing: null, breakAfter: null, breakBefore: null, breakInside: null, captionSide: null, caretColor: null, clear: null, clip: null, clipPath: null, color: null, colorAdjust: null, columnCount: null, columnFill: null, columnGap: null, columnRule: null, columnRuleColor: null, columnRuleStyle: null, columnRuleWidth: null, columnSpan: null, columnWidth: null, columns: null, contain: null, content: null, counterIncrement: null, counterReset: null, counterSet: null, cursor: null, direction: null, display: null, emptyCells: null, filter: null, flex: null, flexBasis: null, flexDirection: null, flexFlow: null, flexGrow: null, flexShrink: null, flexWrap: null, cssFloat: null, font: null, fontFamily: null, fontFeatureSettings: null, fontKerning: null, fontLanguageOverride: null, fontOpticalSizing: null, fontSize: null, fontSizeAdjust: null, fontStretch: null, fontStyle: null, fontSynthesis: null, fontVariant: null, fontVariantAlternates: null, fontVariantCaps: null, fontVariantEastAsian: null, fontVariantLigatures: null, fontVariantNumeric: null, fontVariantPosition: null, fontVariationSettings: null, fontWeight: null, gap: null, grid: null, gridArea: null, gridAutoColumns: null, gridAutoFlow: null, gridAutoRows: null, gridColumn: null, gridColumnEnd: null, gridColumnStart: null, gridRow: null, gridRowEnd: null, gridRowStart: null, gridTemplate: null, gridTemplateAreas: null, gridTemplateColumns: null, gridTemplateRows: null, hangingPunctuation: null, height: null, hyphens: null, imageOrientation: null, imageRendering: null, inlineSize: null, inset: null, insetBlock: null, insetBlockEnd: null, insetBlockStart: null, insetInline: null, insetInlineEnd: null, insetInlineStart: null, isolation: null, justifyContent: null, justifyItems: null, justifySelf: null, left: null, letterSpacing: null, lineBreak: null, lineHeight: null, listStyle: null, listStyleImage: null, listStylePosition: null, listStyleType: null, margin: null, marginBlock: null, marginBlockEnd: null, marginBlockStart: null, marginBottom: null, marginInline: null, marginInlineEnd: null, marginInlineStart: null, marginLeft: null, marginRight: null, marginTop: null, mask: null, maskBorder: null, maskBorderMode: null, maskBorderOutset: null, maskBorderRepeat: null, maskBorderSlice: null, maskBorderSource: null, maskBorderWidth: null, maskClip: null, maskComposite: null, maskImage: null, maskMode: null, maskOrigin: null, maskPosition: null, maskRepeat: null, maskSize: null, maskType: null, maxBlockSize: null, maxHeight: null, maxInlineSize: null, maxWidth: null, minBlockSize: null, minHeight: null, minInlineSize: null, minWidth: null, mixBlendMode: null, objectFit: null, objectPosition: null, offset: null, offsetAnchor: null, offsetDistance: null, offsetPath: null, offsetRotate: null, opacity: null, order: null, orphans: null, outline: null, outlineColor: null, outlineOffset: null, outlineStyle: null, outlineWidth: null, overflow: null, overflowAnchor: null, overflowBlock: null, overflowInline: null, overflowWrap: null, overflowX: null, overflowY: null, overscrollBehavior: null, overscrollBehaviorBlock: null, overscrollBehaviorInline: null, overscrollBehaviorX: null, overscrollBehaviorY: null, padding: null, paddingBlock: null, paddingBlockEnd: null, paddingBlockStart: null, paddingBottom: null, paddingInline: null, paddingInlineEnd: null, paddingInlineStart: null, paddingLeft: null, paddingRight: null, paddingTop: null, pageBreakAfter: null, pageBreakBefore: null, pageBreakInside: null, paintOrder: null, perspective: null, perspectiveOrigin: null, placeContent: null, placeItems: null, placeSelf: null, pointerEvents: null, position: null, quotes: null, resize: null, right: null, rotate: null, rowGap: null, scale: null, scrollBehavior: null, scrollMargin: null, scrollMarginBlock: null, scrollMarginBlockEnd: null, scrollMarginBlockStart: null, scrollMarginBottom: null, scrollMarginInline: null, scrollMarginInlineEnd: null, scrollMarginInlineStart: null, scrollMarginLeft: null, scrollMarginRight: null, scrollMarginTop: null, scrollPadding: null, scrollPaddingBlock: null, scrollPaddingBlockEnd: null, scrollPaddingBlockStart: null, scrollPaddingBottom: null, scrollPaddingInline: null, scrollPaddingInlineEnd: null, scrollPaddingInlineStart: null, scrollPaddingLeft: null, scrollPaddingRight: null, scrollPaddingTop: null, scrollSnapAlign: null, scrollSnapStop: null, scrollSnapType: null, scrollbar3dLightColor: null, scrollbarArrowColor: null, scrollbarBaseColor: null, scrollbarColor: null, scrollbarDarkshadowColor: null, scrollbarFaceColor: null, scrollbarHighlightColor: null, scrollbarShadowColor: null, scrollbarTrackColor: null, scrollbarWidth: null, shapeImageThreshold: null, shapeMargin: null, shapeOutside: null, tabSize: null, tableLayout: null, textAlign: null, textAlignLast: null, textCombineUpright: null, textDecoration: null, textDecorationColor: null, textDecorationLine: null, textDecorationSkipInk: null, textDecorationStyle: null, textDecorationThickness: null, textEmphasis: null, textEmphasisColor: null, textEmphasisPosition: null, textEmphasisStyle: null, textIndent: null, textJustify: null, textOrientation: null, textOverflow: null, textRendering: null, textShadow: null, textTransform: null, textUnderlineOffset: null, textUnderlinePosition: null, top: null, touchAction: null, transform: null, transformBox: null, transformOrigin: null, transformStyle: null, transition: null, transitionDelay: null, transitionDuration: null, transitionProperty: null, transitionTimingFunction: null, translate: null, unicodeBidi: null, verticalAlign: null, visibility: null, whiteSpace: null, widows: null, width: null, willChange: null, wordBreak: null, wordSpacing: null, writingMode: null, zIndex: null};
    }
    
    oldNode_13985037.dom.className = newNode_13985036.class;
    }
    
    oldNode_13985037.style = newNode_13985036.style;
    oldNode_13985037.class = newNode_13985036.class;

  
}
function takeOverAttr_13425214(newNode_13425216, oldNode_13425217) {
    oldNode_13425217.attrs = newNode_13425216.attrs;

  
}
function updateAttributes_13995052(newNode_13995054, oldNode_13995055) {
    if (!((oldNode_13995055.dom == null))) {
    L1: do {
      var k_14000009 = null;
      var __14000010 = null;
      L2: do {
        var i_15825448 = 0;
        var colontmp__15825449 = 0;
        colontmp__15825449 = subInt((oldNode_13995055.attrs).length, 2);
        var res_15825450 = 0;
        L3: do {
            L4: while (true) {
            if (!(res_15825450 <= colontmp__15825449)) break L4;
              i_15825448 = res_15825450;
              k_14000009 = oldNode_13995055.attrs[chckIndx(i_15825448, 0, (oldNode_13995055.attrs).length-1)];
              __14000010 = oldNode_13995055.attrs[chckIndx(addInt(i_15825448, 1), 0, (oldNode_13995055.attrs).length-1)];
              oldNode_13995055.dom.removeAttribute(k_14000009);
              res_15825450 = addInt(res_15825450, 2);
            }
        } while(false);
      } while(false);
    } while(false);
    L5: do {
      var k_14000011 = null;
      var v_14000012 = null;
      L6: do {
        var i_15825456 = 0;
        var colontmp__15825457 = 0;
        colontmp__15825457 = subInt((newNode_13995054.attrs).length, 2);
        var res_15825458 = 0;
        L7: do {
            L8: while (true) {
            if (!(res_15825458 <= colontmp__15825457)) break L8;
              i_15825456 = res_15825458;
              k_14000011 = newNode_13995054.attrs[chckIndx(i_15825456, 0, (newNode_13995054.attrs).length-1)];
              v_14000012 = newNode_13995054.attrs[chckIndx(addInt(i_15825456, 1), 0, (newNode_13995054.attrs).length-1)];
              if (!((v_14000012 == null))) {
              oldNode_13995055.dom.setAttribute(k_14000011, v_14000012);
              }
              
              res_15825458 = addInt(res_15825458, 2);
            }
        } while(false);
      } while(false);
    } while(false);
    }
    
    takeOverAttr_13425214(newNode_13995054, oldNode_13995055);

  
}
function removeAllEventHandlers_13647436(d_13647438) {
    if (!((d_13647438.karaxEvents == null))) {
    L1: do {
      var i_13650041 = 0;
      var colontmp__15825463 = 0;
      colontmp__15825463 = d_13647438.karaxEvents.length;
      var i_15825464 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_15825464 < colontmp__15825463)) break L3;
            i_13650041 = i_15825464;
            d_13647438.removeEventListener(d_13647438.karaxEvents[i_13650041]["Field0"], d_13647438.karaxEvents[i_13650041]["Field1"]);
            i_15825464 = addInt(i_15825464, 1);
          }
      } while(false);
    } while(false);
    }
    

  
}
function mergeEvents_14005014(newNode_14005016, oldNode_14005017, kxi_14005018) {
    var d_14005019 = oldNode_14005017.dom;
    if (!((d_14005019 == null))) {
    removeAllEventHandlers_13647436(d_14005019);
    }
    
    oldNode_14005017.events = newNode_14005016.events;
    applyEvents_13760073(oldNode_14005017);

  
}
function addPatch_14010414(kxi_14010416, ka_14010417, parenta_14010418, currenta_14010419, na_14010420, oldNode_14010421) {
    var L_14010422 = kxi_14010416.patchLen;
    if (((kxi_14010416.patches).length <= L_14010422)) {
    kxi_14010416.patches.push({k: ka_14010417, parent: parenta_14010418, current: currenta_14010419, newNode: na_14010420, oldNode: oldNode_14010421});;
    }
    else {
      kxi_14010416.patches[chckIndx(L_14010422, 0, (kxi_14010416.patches).length-1)].k = ka_14010417;
      kxi_14010416.patches[chckIndx(L_14010422, 0, (kxi_14010416.patches).length-1)].parent = parenta_14010418;
      kxi_14010416.patches[chckIndx(L_14010422, 0, (kxi_14010416.patches).length-1)].current = currenta_14010419;
      kxi_14010416.patches[chckIndx(L_14010422, 0, (kxi_14010416.patches).length-1)].newNode = na_14010420;
      kxi_14010416.patches[chckIndx(L_14010422, 0, (kxi_14010416.patches).length-1)].oldNode = oldNode_14010421;
    }
    
    kxi_14010416.patchLen = addInt(kxi_14010416.patchLen, 1);

  
}
function diff_14060215(newNode_14060217, oldNode_14060218, parent_14060219, current_14060220, kxi_14060221) {
        var Tmp1;
            var Tmp6;

  BeforeRet: do {
    var result_14060401 = eq_13925214(newNode_14060217, oldNode_14060218, false);
    switch (result_14060401) {
    case 0:
      kxi_14060221.components.push({oldNode: oldNode_14060218, newNode: newNode_14060217, parent: parent_14060219, current: current_14060220});;
      break;
    case 3:
    case 2:
      newNode_14060217.dom = oldNode_14060218.dom;
      if ((result_14060401 == 2)) {
      updateStyles_13985034(newNode_14060217, oldNode_14060218);
      updateAttributes_13995052(newNode_14060217, oldNode_14060218);
      if ((oldNode_14060218.kind == 0)) {
      oldNode_14060218.text = newNode_14060217.text;
      oldNode_14060218.dom.nodeValue = newNode_14060217.text;
      }
      
      }
      
        if (!(((newNode_14060217.events).length == 0))) Tmp1 = true; else {          Tmp1 = !(((oldNode_14060218.events).length == 0));        }      if (Tmp1) {
      mergeEvents_14005014(newNode_14060217, oldNode_14060218, kxi_14060221);
      }
      
      var newLength_14070006 = len_13475014(newNode_14060217);
      var oldLength_14070007 = len_13475014(oldNode_14060218);
      if (((newLength_14070006 == 0) && (oldLength_14070007 == 0))) {
      break BeforeRet;
      }
      
      var minLength_14070008 = nimMin(newLength_14070006, oldLength_14070007);
      if (!((oldNode_14060218.kind == newNode_14060217.kind))) {
      failedAssertImpl_115480(makeNimstrLit("karax.nim(487, 12) `oldNode.kind == newNode.kind` "));
      }
      
      var commonPrefix_14080202 = 0;
      L2: do {
          L3: while (true) {
          if (!(commonPrefix_14080202 < minLength_14070008)) break L3;
            if ((eq_13925214(HEX5BHEX5D_13475036(newNode_14060217, commonPrefix_14080202), HEX5BHEX5D_13475036(oldNode_14060218, commonPrefix_14080202), true) == 3)) {
            addPatch_14010414(kxi_14060221, 5, null, null, HEX5BHEX5D_13475036(newNode_14060217, commonPrefix_14080202), HEX5BHEX5D_13475036(oldNode_14060218, commonPrefix_14080202));
            commonPrefix_14080202 = addInt(commonPrefix_14080202, 1);
            }
            else {
              break L2;
            }
            
          }
      } while(false);
      var oldPos_14080214 = subInt(oldLength_14070007, 1);
      var newPos_14080215 = subInt(newLength_14070006, 1);
      L4: do {
          L5: while (true) {
            if (!(commonPrefix_14080202 <= oldPos_14080214)) Tmp6 = false; else {              Tmp6 = (commonPrefix_14080202 <= newPos_14080215);            }          if (!Tmp6) break L5;
            if ((eq_13925214(HEX5BHEX5D_13475036(newNode_14060217, newPos_14080215), HEX5BHEX5D_13475036(oldNode_14060218, oldPos_14080214), true) == 3)) {
            addPatch_14010414(kxi_14060221, 5, null, null, HEX5BHEX5D_13475036(newNode_14060217, newPos_14080215), HEX5BHEX5D_13475036(oldNode_14060218, oldPos_14080214));
            oldPos_14080214 = subInt(oldPos_14080214, 1);
            newPos_14080215 = subInt(newPos_14080215, 1);
            }
            else {
              break L4;
            }
            
          }
      } while(false);
      var pos_14090018 = addInt(nimMin(oldPos_14080214, newPos_14080215), 1);
      L7: do {
        var i_14090024 = 0;
        var colontmp__15825405 = 0;
        colontmp__15825405 = subInt(pos_14090018, 1);
        var res_15825406 = commonPrefix_14080202;
        L8: do {
            L9: while (true) {
            if (!(res_15825406 <= colontmp__15825405)) break L9;
              i_14090024 = res_15825406;
              diff_14060215(HEX5BHEX5D_13475036(newNode_14060217, i_14090024), HEX5BHEX5D_13475036(oldNode_14060218, i_14090024), current_14060220, current_14060220.childNodes[chckIndx(i_14090024, 0, (current_14060220.childNodes).length-1)], kxi_14060221);
              res_15825406 = addInt(res_15825406, 1);
            }
        } while(false);
      } while(false);
      if ((addInt(oldPos_14080214, 1) == oldLength_14070007)) {
      L10: do {
        var i_14090030 = 0;
        var res_15825412 = pos_14090018;
        L11: do {
            L12: while (true) {
            if (!(res_15825412 <= newPos_14080215)) break L12;
              i_14090030 = res_15825412;
              addPatch_14010414(kxi_14060221, 2, current_14060220, null, HEX5BHEX5D_13475036(newNode_14060217, i_14090030), null);
              res_15825412 = addInt(res_15825412, 1);
            }
        } while(false);
      } while(false);
      }
      else {
        var before_14090031 = current_14060220.childNodes[chckIndx(addInt(oldPos_14080214, 1), 0, (current_14060220.childNodes).length-1)];
        L13: do {
          var i_14090037 = 0;
          var res_15825418 = pos_14090018;
          L14: do {
              L15: while (true) {
              if (!(res_15825418 <= newPos_14080215)) break L15;
                i_14090037 = res_15825418;
                addPatch_14010414(kxi_14060221, 3, current_14060220, before_14090031, HEX5BHEX5D_13475036(newNode_14060217, i_14090037), null);
                res_15825418 = addInt(res_15825418, 1);
              }
          } while(false);
        } while(false);
      }
      
      L16: do {
        var i_14090043 = 0;
        var res_15825424 = pos_14090018;
        L17: do {
            L18: while (true) {
            if (!(res_15825424 <= oldPos_14080214)) break L18;
              i_14090043 = res_15825424;
              addPatch_14010414(kxi_13647284[0], 4, null, null, null, HEX5BHEX5D_13475036(oldNode_14060218, i_14090043));
              addPatch_14010414(kxi_14060221, 1, current_14060220, current_14060220.childNodes[chckIndx(i_14090043, 0, (current_14060220.childNodes).length-1)], null, null);
              res_15825424 = addInt(res_15825424, 1);
            }
        } while(false);
      } while(false);
      break;
    case 1:
      addPatch_14010414(kxi_13647284[0], 4, null, null, null, oldNode_14060218);
      addPatch_14010414(kxi_14060221, 0, parent_14060219, current_14060220, newNode_14060217, null);
      break;
    case 4:
      if (true) {
      failedAssertImpl_115480(makeNimstrLit("karax.nim(529, 26) `false` eq returned usenewNode"));
      }
      
      break;
    }
  } while (false);

  
}
function applyComponents_14110429(kxi_14110431) {
            var Tmp3;

    var i_14110433 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_14110433 < (kxi_14110431.components).length)) break L2;
          var x_14110439 = kxi_14110431.components[chckIndx(i_14110433, 0, (kxi_14110431.components).length-1)].oldNode;
          var newNode_14110440 = kxi_14110431.components[chckIndx(i_14110433, 0, (kxi_14110431.components).length-1)].newNode;
            if (!!((x_14110439.changedImpl == null))) Tmp3 = false; else {              Tmp3 = x_14110439.changedImpl(x_14110439, newNode_14110440);            }          if (Tmp3) {
          var current_14115201 = kxi_14110431.components[chckIndx(i_14110433, 0, (kxi_14110431.components).length-1)].current;
          var parent_14115202 = kxi_14110431.components[chckIndx(i_14110433, 0, (kxi_14110431.components).length-1)].parent;
          x_14110439.updatedImpl(x_14110439, newNode_14110440);
          var oldExpanded_14115203 = x_14110439.expanded;
          x_14110439.expanded = x_14110439.renderImpl(x_14110439);
          x_14110439.renderedVersion = x_14110439.version;
          if ((oldExpanded_14115203 == null)) {
          addPatch_14010414(kxi_13647284[0], 4, null, null, null, x_14110439);
          addPatch_14010414(kxi_14110431, 0, parent_14115202, current_14115201, x_14110439.expanded, null);
          }
          else {
            diff_14060215(x_14110439.expanded, oldExpanded_14115203, parent_14115202, current_14115201, kxi_14110431);
          }
          
          }
          
          i_14110433 = addInt(i_14110433, 1);
        }
    } while(false);
    if (kxi_14110431.components.length < 0) { for (var i=kxi_14110431.components.length;i<0;++i) kxi_14110431.components.push(({oldNode: null, newNode: null, parent: null, current: null})); }
               else { kxi_14110431.components.length = 0; };

  
}
function moveDom_14020048(dest_14020050, src_14020051) {
    dest_14020050.dom = src_14020051.dom;
    src_14020051.dom = null;
    if (!((dest_14020050.id == null))) {
    kxi_13647284[0].byId[dest_14020050.id] = dest_14020050;
    }
    
    if (!((len_13475014(dest_14020050) == len_13475014(src_14020051)))) {
    failedAssertImpl_115480(makeNimstrLit("karax.nim(390, 10) `dest.len == src.len` "));
    }
    
    L1: do {
      var i_14035208 = 0;
      var colontmp__15825475 = 0;
      colontmp__15825475 = len_13475014(dest_14020050);
      var i_15825476 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_15825476 < colontmp__15825475)) break L3;
            i_14035208 = i_15825476;
            moveDom_14020048(HEX5BHEX5D_13475036(dest_14020050, i_14035208), HEX5BHEX5D_13475036(src_14020051, i_14035208));
            i_15825476 = addInt(i_15825476, 1);
          }
      } while(false);
    } while(false);

  
}
function HEX5BHEX5DHEX3D_13475054(x_13475056, idx_13475057, y_13475058) {
    x_13475056.kids[chckIndx(idx_13475057, 0, (x_13475056.kids).length-1)] = y_13475058;

  
}
function applyPatch_14035222(kxi_14035224) {
    L1: do {
      var i_14035232 = 0;
      var i_15825469 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_15825469 < kxi_14035224.patchLen)) break L3;
            i_14035232 = i_15825469;
            var p_14035233 = nimCopy(null, kxi_14035224.patches[chckIndx(i_14035232, 0, (kxi_14035224.patches).length-1)], NTI13647209);
            switch (p_14035233.k) {
            case 0:
              var nn_14035234 = toDom_13760154(p_14035233.newNode, true, kxi_14035224);
              if ((p_14035233.parent == null)) {
              replaceById_13925059(kxi_14035224.rootId, nn_14035234);
              }
              else {
                if ((p_14035233.current.parentNode == p_14035233.parent)) {
                p_14035233.parent.replaceChild(nn_14035234, p_14035233.current);
                }
                else {
                p_14035233.parent.appendChild(nn_14035234);
                }
                
              }
              
              break;
            case 5:
              moveDom_14020048(p_14035233.newNode, p_14035233.oldNode);
              break;
            case 1:
              p_14035233.parent.removeChild(p_14035233.current);
              break;
            case 2:
              var nn_14035250 = toDom_13760154(p_14035233.newNode, true, kxi_14035224);
              p_14035233.parent.appendChild(nn_14035250);
              break;
            case 3:
              var nn_14035251 = toDom_13760154(p_14035233.newNode, true, kxi_14035224);
              p_14035233.parent.insertBefore(nn_14035251, p_14035233.current);
              break;
            case 4:
              var n_14035252 = p_14035233.oldNode;
              if (!((n_14035252.id == null))) {
              delete kxi_14035224.byId[n_14035252.id];
              }
              
              if ((n_14035252.kind == 5)) {
              var x_14040018 = n_14035252;
              if (!((x_14040018.onDetachImpl == null))) {
              x_14040018.onDetachImpl(x_14040018);
              }
              
              }
              
              if (!(kxi_14035224.surpressRedraws)) {
              n_14035252.dom = null;
              }
              
              break;
            }
            i_15825469 = addInt(i_15825469, 1);
          }
      } while(false);
    } while(false);
    kxi_14035224.patchLen = 0;
    L4: do {
      var i_14045013 = 0;
      var i_15825472 = 0;
      L5: do {
          L6: while (true) {
          if (!(i_15825472 < kxi_14035224.patchLenV)) break L6;
            i_14045013 = i_15825472;
            var p_14045014 = nimCopy(null, kxi_14035224.patchesV[chckIndx(i_14045013, 0, (kxi_14035224.patchesV).length-1)], NTI13647211);
            HEX5BHEX5DHEX3D_13475054(p_14045014.parent, p_14045014.pos, p_14045014.newChild);
            if (!(!((p_14045014.newChild.dom == null)))) {
            failedAssertImpl_115480(makeNimstrLit("karax.nim(429, 12) `p.newChild.dom != nil` "));
            }
            
            i_15825472 = addInt(i_15825472, 1);
          }
      } while(false);
    } while(false);
    kxi_14035224.patchLenV = 0;

  
}
function dodraw_14175262(kxi_14175264) {
  BeforeRet: do {
    if ((kxi_14175264.renderer == null)) {
    break BeforeRet;
    }
    
    var rdata_14175269 = {hashPart: window.location.hash};
    var newtree_14175270 = kxi_14175264.renderer(rdata_14175269);
    kxi_14175264.runCount = addInt(kxi_14175264.runCount, 1);
    newtree_14175270.id = kxi_14175264.rootId;
    kxi_14175264.toFocus = null;
    if ((kxi_14175264.currentTree == null)) {
    var asdom_14175285 = toDom_13760154(newtree_14175270, true, kxi_14175264);
    replaceById_13925059(kxi_14175264.rootId, asdom_14175285);
    }
    else {
      if (!(same_13910072(kxi_14175264.currentTree, document.getElementById(kxi_14175264.rootId), 0))) {
      failedAssertImpl_115480(makeNimstrLit("karax.nim(644, 14) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
      }
      
      var olddom_14185201 = document.getElementById(kxi_14175264.rootId);
      diff_14060215(newtree_14175270, kxi_14175264.currentTree, null, olddom_14185201, kxi_14175264);
    }
    
    applyComponents_14110429(kxi_14175264);
    applyPatch_14035222(kxi_14175264);
    kxi_14175264.currentTree = newtree_14175270;
    if (!(same_13910072(kxi_14175264.currentTree, document.getElementById(kxi_14175264.rootId), 0))) {
    failedAssertImpl_115480(makeNimstrLit("karax.nim(657, 12) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
    }
    
    if (!((kxi_14175264.postRenderCallback == null))) {
    kxi_14175264.postRenderCallback(rdata_14175269);
    }
    
    if (!((kxi_14175264.toFocus == null))) {
    kxi_14175264.toFocus.focus();
    }
    
    kxi_14175264.renderId = 0;
  } while (false);

  
}
function init_14200646(ev_14200648) {
    function HEX3Aanonymous_14200649() {
        dodraw_14175262(kxi_13647284[0]);

      
    }

    kxi_13647284[0].renderId = window.requestAnimationFrame(HEX3Aanonymous_14200649);

  
}
function redraw_14200414(kxi_14200416) {
    function HEX3Aanonymous_14200601() {
        dodraw_14175262(kxi_14200416);

      
    }

    if ((kxi_14200416.renderId == 0)) {
    kxi_14200416.renderId = window.requestAnimationFrame(HEX3Aanonymous_14200601);
    }
    

  
}
function setRenderer_14200693(renderer_14200698, root_14200699, clientPostRenderCallback_14200703) {
    function HEX3Aanonymous_14205135() {
        redraw_14200414(kxi_13647284[0]);

      
    }

  var result_14200704 = null;

    if ((document.getElementById(root_14200699) == null)) {
    var msg_14200710 = (("Could not find a <div> with id=" + root_14200699) + ". Karax needs it as its rendering target.");
    raiseException({message: cstrToNimstr(msg_14200710), parent: null, m_type: NTI6817, name: null, trace: [], up: null}, "Exception");
    }
    
    result_14200704 = {rootId: root_14200699, renderer: renderer_14200698, postRenderCallback: clientPostRenderCallback_14200703, patches: newSeq_14205012(60), patchesV: newSeq_14205064(30), components: [], surpressRedraws: false, byId: {}, orphans: {}, currentTree: null, toFocus: null, toFocusV: null, renderId: 0, patchLen: 0, patchLenV: 0, runCount: 0};
    kxi_13647284[0] = result_14200704;
    window.onload = init_14200646;
    window.onhashchange = HEX3Aanonymous_14205135;

  return result_14200704;

}
function setRenderer_14205238(renderer_14205242, root_14205243, clientPostRenderCallback_14205246) {
    function wrapRenderer_14205248(data_14205250) {
      var result_14205251 = null;

        result_14205251 = renderer_14205242();

      return result_14205251;

    }
    function wrapPostRender_14205265(data_14205267) {
        if (!((clientPostRenderCallback_14205246 == null))) {
        clientPostRenderCallback_14205246();
        }
        

      
    }

  var result_14205247 = null;

    result_14205247 = setRenderer_14200693(wrapRenderer_14205248, root_14205243, wrapPostRender_14205265);

  return result_14205247;

}
function newVNode_13485428(kind_13485430) {
  var result_13485431 = null;

    result_13485431 = {kind: kind_13485430, index: -1, m_type: NTI13390031, id: null, class: null, text: null, kids: [], attrs: [], events: [], style: null, dom: null};

  return result_13485431;

}
function add_13475072(parent_13475074, kid_13475075) {
    parent_13475074.kids.push(kid_13475075);;

  
}
function tree_13485445(kind_13485447, kids_13485449) {
  var result_13485450 = null;

    result_13485450 = newVNode_13485428(kind_13485447);
    L1: do {
      var k_13485483 = null;
      var k_13485483_Idx = 0;
      var i_15825557 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_15825557 < (kids_13485449).length)) break L3;
            k_13485483 = kids_13485449; k_13485483_Idx = chckIndx(i_15825557, 0, (kids_13485449).length-1);
            add_13475072(result_13485450, k_13485483[k_13485483_Idx]);
            i_15825557 = addInt(i_15825557, 1);
          }
      } while(false);
    } while(false);

  return result_13485450;

}
function addEventListener_13490014(n_13490016, event_13490017, handler_13490018) {
    n_13490016.events.push({Field0: event_13490017, Field1: handler_13490018, Field2: null});;

  
}
function addEventHandler_14210118(n_14210120, k_14210121, action_14210122, kxi_14210123) {
    function wrapper_14210124(ev_14210126, n_14210127) {
        action_14210122(ev_14210126, n_14210127);
        if (!(kxi_14210123.surpressRedraws)) {
        redraw_14200414(kxi_14210123);
        }
        

      
    }

    addEventListener_13490014(n_14210120, k_14210121, wrapper_14210124);

  
}
function chckdCheck_15400267(ev_15400270, n_15400271) {
    L1: do {
      var inpChck_15410214 = null;
      var inpChck_15410214_Idx = 0;
      var colontmp__15825561 = [];
      colontmp__15825561 = document.querySelectorAll(".show-sector");
      var i_15825563 = 0;
      var L_15825564 = (colontmp__15825561).length;
      L2: do {
          L3: while (true) {
          if (!(i_15825563 < L_15825564)) break L3;
            inpChck_15410214 = colontmp__15825561; inpChck_15410214_Idx = chckIndx(i_15825563, 0, (colontmp__15825561).length-1);
            if ((inpChck_15410214[inpChck_15410214_Idx].getAttribute("checkd") == "true")) {
            inpChck_15410214[inpChck_15410214_Idx].setAttribute("checked", "true");
            }
            else {
            inpChck_15410214[inpChck_15410214_Idx].removeAttribute("checked");
            }
            
            i_15825563 = addInt(i_15825563, 1);
            if (!(((colontmp__15825561).length == L_15825564))) {
            failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);

  
}
function len_14930198(t_14930203) {
  var result_14930204 = 0;

    result_14930204 = t_14930203.counter;

  return result_14930204;

}
function text_13485582(s_13485584) {
  var result_13485585 = null;

    result_13485585 = {kind: 0, text: toJSStr(s_13485584), index: -1, m_type: NTI13390031, id: null, class: null, kids: [], attrs: [], events: [], style: null, dom: null};

  return result_13485585;

}
function initOrderedTable_15316460(initialSize_15316464) {
  var result_15316466 = ({data: [], counter: 0, first: 0, last: 0});

    var correctSizeHEX60gensym128_15320001 = slotsNeeded_10295048(chckRange(initialSize_15316464, 0, 2147483647));
    result_15316466.counter = 0;
    result_15316466.data = new Array(chckRange(correctSizeHEX60gensym128_15320001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym128_15320001, 0, 2147483647);++i) {result_15316466.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    result_15316466.first = -1;
    result_15316466.last = -1;

  return result_15316466;

}
function rawGet_15340621(t_15340626, key_15340627, hc_15340628, hc_15340628_Idx) {
            var Tmp3;

  var result_15340629 = 0;

  BeforeRet: do {
    hc_15340628[hc_15340628_Idx] = hash_10270214(key_15340627);
    if ((hc_15340628[hc_15340628_Idx] == 0)) {
    hc_15340628[hc_15340628_Idx] = 314159265;
    }
    
    if (((t_15340626.data).length == 0)) {
    result_15340629 = -1;
    break BeforeRet;
    }
    
    var h_15350138 = (hc_15340628[hc_15340628_Idx] & (t_15340626.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_10291218(t_15340626.data[chckIndx(h_15350138, 0, (t_15340626.data).length-1)].Field0)) break L2;
            if (!(t_15340626.data[chckIndx(h_15350138, 0, (t_15340626.data).length-1)].Field0 == hc_15340628[hc_15340628_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_15340626.data[chckIndx(h_15350138, 0, (t_15340626.data).length-1)].Field2, key_15340627);            }          if (Tmp3) {
          result_15340629 = h_15350138;
          break BeforeRet;
          }
          
          h_15350138 = nextTry_10295014(h_15350138, (t_15340626.data).length - 1);
        }
    } while(false);
    result_15340629 = subInt(-1, h_15350138);
  } while (false);

  return result_15340629;

}
function mustRehash_15365601(t_15365604) {
  var result_15365605 = false;

    if (!((t_15365604.counter < (t_15365604.data).length))) {
    failedAssertImpl_115480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_15365605 = ((mulInt((t_15365604.data).length, 2) < mulInt(t_15365604.counter, 3)) || (subInt((t_15365604.data).length, t_15365604.counter) < 4));

  return result_15365605;

}
function rawInsert_15391359(t_15391365, data_15391368, data_15391368_Idx, key_15391369, val_15391371, hc_15391372, h_15391373) {
    data_15391368[data_15391368_Idx][chckIndx(h_15391373, 0, (data_15391368[data_15391368_Idx]).length-1)].Field2 = nimCopy(null, key_15391369, NTI113);
    data_15391368[data_15391368_Idx][chckIndx(h_15391373, 0, (data_15391368[data_15391368_Idx]).length-1)].Field3 = val_15391371;
    data_15391368[data_15391368_Idx][chckIndx(h_15391373, 0, (data_15391368[data_15391368_Idx]).length-1)].Field0 = hc_15391372;
    data_15391368[data_15391368_Idx][chckIndx(h_15391373, 0, (data_15391368[data_15391368_Idx]).length-1)].Field1 = -1;
    if ((t_15391365.first < 0)) {
    t_15391365.first = h_15391373;
    }
    
    if ((0 <= t_15391365.last)) {
    data_15391368[data_15391368_Idx][chckIndx(t_15391365.last, 0, (data_15391368[data_15391368_Idx]).length-1)].Field1 = h_15391373;
    }
    
    t_15391365.last = h_15391373;

  
}
function enlarge_15390180(t_15390186) {
          var Tmp6;
          var Tmp7;

    var n_15390194 = [];
    n_15390194 = new Array(chckRange(mulInt((t_15390186.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_15390186.data).length, 2), 0, 2147483647);++i) {n_15390194[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    var h_15390333 = t_15390186.first;
    t_15390186.first = -1;
    t_15390186.last = -1;
    var Tmp1 = t_15390186.data; t_15390186.data = n_15390194; n_15390194 = Tmp1;    L2: do {
        L3: while (true) {
        if (!(0 <= h_15390333)) break L3;
          var nxt_15390496 = n_15390194[chckIndx(h_15390333, 0, (n_15390194).length-1)].Field1;
          var eh_15390652 = n_15390194[chckIndx(h_15390333, 0, (n_15390194).length-1)].Field0;
          if (isFilled_10291218(eh_15390652)) {
          var j_15390659 = (eh_15390652 & (t_15390186.data).length - 1);
          L4: do {
              L5: while (true) {
              if (!isFilled_10291218(t_15390186.data[chckIndx(j_15390659, 0, (t_15390186.data).length-1)].Field0)) break L5;
                j_15390659 = nextTry_10295014(j_15390659, (t_15390186.data).length - 1);
              }
          } while(false);
          Tmp6 = n_15390194[chckIndx(h_15390333, 0, (n_15390194).length-1)].Field2;
          n_15390194[chckIndx(h_15390333, 0, (n_15390194).length-1)].Field2 = genericReset(n_15390194[chckIndx(h_15390333, 0, (n_15390194).length-1)].Field2, NTI113);
          Tmp7 = n_15390194[chckIndx(h_15390333, 0, (n_15390194).length-1)].Field3;
          n_15390194[chckIndx(h_15390333, 0, (n_15390194).length-1)].Field3 = genericReset(n_15390194[chckIndx(h_15390333, 0, (n_15390194).length-1)].Field3, NTI14631027);
          rawInsert_15391359(t_15390186, t_15390186, "data", Tmp6, Tmp7, n_15390194[chckIndx(h_15390333, 0, (n_15390194).length-1)].Field0, j_15390659);
          }
          
          h_15390333 = nxt_15390496;
        }
    } while(false);

  
}
function rawGetKnownHC_15392195(t_15392200, key_15392201, hc_15392202) {
  var result_15392203 = 0;

  BeforeRet: do {
    if (((t_15392200.data).length == 0)) {
    result_15392203 = -1;
    break BeforeRet;
    }
    
    var h_15395138 = (hc_15392202 & (t_15392200.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_10291218(t_15392200.data[chckIndx(h_15395138, 0, (t_15392200.data).length-1)].Field0)) break L2;
          if (((t_15392200.data[chckIndx(h_15395138, 0, (t_15392200.data).length-1)].Field0 == hc_15392202) && eqStrings(t_15392200.data[chckIndx(h_15395138, 0, (t_15392200.data).length-1)].Field2, key_15392201))) {
          result_15392203 = h_15395138;
          break BeforeRet;
          }
          
          h_15395138 = nextTry_10295014(h_15395138, (t_15392200.data).length - 1);
        }
    } while(false);
    result_15392203 = subInt(-1, h_15395138);
  } while (false);

  return result_15392203;

}
function HEX5BHEX5DHEX3D_15325730(t_15325736, key_15325737, val_15325739) {
    if (((t_15325736.data).length == 0)) {
    var correctSizeHEX60gensym131_15335001 = slotsNeeded_10295048(32);
    t_15325736.counter = 0;
    t_15325736.data = new Array(chckRange(correctSizeHEX60gensym131_15335001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym131_15335001, 0, 2147483647);++i) {t_15325736.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    t_15325736.first = -1;
    t_15325736.last = -1;
    }
    
    var hc_15340601 = [0];
    var index_15350626 = rawGet_15340621(t_15325736, key_15325737, hc_15340601, 0);
    if ((0 <= index_15350626)) {
    t_15325736.data[chckIndx(index_15350626, 0, (t_15325736.data).length-1)].Field3 = val_15325739;
    }
    else {
      if (((t_15325736.data).length == 0)) {
      var correctSizeHEX60gensym136_15360001 = slotsNeeded_10295048(32);
      t_15325736.counter = 0;
      t_15325736.data = new Array(chckRange(correctSizeHEX60gensym136_15360001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym136_15360001, 0, 2147483647);++i) {t_15325736.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}      t_15325736.first = -1;
      t_15325736.last = -1;
      }
      
      if (mustRehash_15365601(t_15325736)) {
      enlarge_15390180(t_15325736);
      index_15350626 = rawGetKnownHC_15392195(t_15325736, key_15325737, hc_15340601[0]);
      }
      
      index_15350626 = subInt(-1, index_15350626);
      rawInsert_15391359(t_15325736, t_15325736, "data", key_15325737, val_15325739, hc_15340601[0], index_15350626);
      t_15325736.counter = addInt(t_15325736.counter, 1);
    }
    

  
}
function isInitialized_12450214(dt_12450216) {
  var result_12450217 = false;

    result_12450217 = !((dt_12450216.monthZero == 0));

  return result_12450217;

}
function monthday_12290229(dt_12290231) {
  var result_12290232 = 0;

    if (!(!((dt_12290231.monthdayZero == 0)))) {
    failedAssertImpl_115480(makeNimstrLit("times.nim(989, 28) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_12290232 = dt_12290231.monthdayZero;

  return result_12290232;

}
function nsuIntToStr(x_8575404, minchars_8575405) {
  var result_8575406 = [];

    result_8575406 = nimCopy(null, cstrToNimstr((absInt(x_8575404))+""), NTI113);
    L1: do {
      var i_8575415 = 0;
      var colontmp__15825590 = 0;
      colontmp__15825590 = subInt(minchars_8575405, (result_8575406).length);
      var res_15825591 = 1;
      L2: do {
          L3: while (true) {
          if (!(res_15825591 <= colontmp__15825590)) break L3;
            i_8575415 = res_15825591;
            result_8575406 = nimCopy(null, [48].concat(result_8575406 || []), NTI113);
            res_15825591 = addInt(res_15825591, 1);
          }
      } while(false);
    } while(false);
    if ((x_8575404 < 0)) {
    result_8575406 = nimCopy(null, [45].concat(result_8575406 || []), NTI113);
    }
    

  return result_8575406;

}
function HEX2D_11993091(a_11993093, b_11993094) {
  var result_11993095 = 0;

    result_11993095 = (a_11993093 - b_11993094);

  return result_11993095;

}
function month_12310214(dt_12310216) {
  var result_12310217 = 0;

    if (!(!((dt_12310216.monthdayZero == 0)))) {
    failedAssertImpl_115480(makeNimstrLit("times.nim(996, 28) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_12310217 = dt_12310216.monthZero;

  return result_12310217;

}
function HEX2A_11993001(a_11993003, b_11993004) {
  var result_11993005 = 0;

    result_11993005 = (a_11993003 * b_11993004);

  return result_11993005;

}
function convert_12110226(unitFrom_12110229, unitTo_12110230, quantity_12110231) {
    var Tmp1;

  var result_12110232 = 0;

    if ((unitFrom_12110229 < unitTo_12110230)) {
    Tmp1 = chckRange(divInt(quantity_12110231, divInt(unitWeights_11993382[chckIndx(unitTo_12110230, 0, (unitWeights_11993382).length-1)], unitWeights_11993382[chckIndx(unitFrom_12110229, 0, (unitWeights_11993382).length-1)])), 0, 999999999);
    }
    else {
    Tmp1 = chckRange(HEX2A_11993001(divInt(unitWeights_11993382[chckIndx(unitFrom_12110229, 0, (unitWeights_11993382).length-1)], unitWeights_11993382[chckIndx(unitTo_12110230, 0, (unitWeights_11993382).length-1)]), quantity_12110231), 0, 999999999);
    }
    
    result_12110232 = Tmp1;

  return result_12110232;

}
function HEX2B_11993055(a_11993057, b_11993058) {
  var result_11993059 = 0;

    result_11993059 = (a_11993057 + b_11993058);

  return result_11993059;

}
function HEX3DHEX3D_12520022(zone1_12520024, zone2_12520025) {
  var result_12520026 = false;

  BeforeRet: do {
    if ((zone1_12520024 == zone2_12520025)) {
    result_12520026 = true;
    break BeforeRet;
    }
    
    if (((zone1_12520024 == null) || (zone2_12520025 == null))) {
    result_12520026 = false;
    break BeforeRet;
    }
    
    result_12520026 = eqStrings(zone1_12520024.name, zone2_12520025.name);
  } while (false);

  return result_12520026;

}
function formatPattern_12665056(dt_12665058, pattern_12665059, result_12665061, result_12665061_Idx, loc_12665062) {
      var Tmp1;
      var Tmp2;
      var Tmp3;
      var Tmp4;
      var Tmp5;
      var Tmp6;
        var Tmp7;
        var Tmp8;
      var Tmp9;

    switch (pattern_12665059) {
    case 0:
      result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], cstrToNimstr((monthday_12290229(dt_12665058))+""));;
      break;
    case 1:
      result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], nsuIntToStr(monthday_12290229(dt_12665058), 2));;
      break;
    case 2:
      result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], loc_12665062.ddd[chckIndx(dt_12665058.weekday, 0, (loc_12665062.ddd).length-1)]);;
      break;
    case 3:
      result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], loc_12665062.dddd[chckIndx(dt_12665058.weekday, 0, (loc_12665062.dddd).length-1)]);;
      break;
    case 4:
      if ((dt_12665058.hour == 0)) {
      Tmp1 = makeNimstrLit("12");
      }
      else {
      if ((12 < dt_12665058.hour)) {
      Tmp1 = cstrToNimstr((HEX2D_11993091(dt_12665058.hour, 12))+"");
      }
      else {
      Tmp1 = cstrToNimstr((dt_12665058.hour)+"");
      }
      }
      result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], Tmp1);;
      break;
    case 5:
      if ((dt_12665058.hour == 0)) {
      Tmp2 = makeNimstrLit("12");
      }
      else {
      if ((12 < dt_12665058.hour)) {
      Tmp2 = nsuIntToStr(HEX2D_11993091(dt_12665058.hour, 12), 2);
      }
      else {
      Tmp2 = nsuIntToStr(dt_12665058.hour, 2);
      }
      }
      result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], Tmp2);;
      break;
    case 6:
      result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], cstrToNimstr((dt_12665058.hour)+""));;
      break;
    case 7:
      result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], nsuIntToStr(dt_12665058.hour, 2));;
      break;
    case 8:
      result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], cstrToNimstr((dt_12665058.minute)+""));;
      break;
    case 9:
      result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], nsuIntToStr(dt_12665058.minute, 2));;
      break;
    case 10:
      result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], cstrToNimstr((month_12310214(dt_12665058))+""));;
      break;
    case 11:
      result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], nsuIntToStr(month_12310214(dt_12665058), 2));;
      break;
    case 12:
      result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], loc_12665062.MMM[chckIndx(month_12310214(dt_12665058), 1, (loc_12665062.MMM).length+(1)-1)-(1)]);;
      break;
    case 13:
      result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], loc_12665062.MMMM[chckIndx(month_12310214(dt_12665058), 1, (loc_12665062.MMMM).length+(1)-1)-(1)]);;
      break;
    case 14:
      result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], cstrToNimstr((dt_12665058.second)+""));;
      break;
    case 15:
      result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], nsuIntToStr(dt_12665058.second, 2));;
      break;
    case 16:
      result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], nsuIntToStr(convert_12110226(0, 2, dt_12665058.nanosecond), 3));;
      break;
    case 17:
      result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], nsuIntToStr(convert_12110226(0, 1, dt_12665058.nanosecond), 6));;
      break;
    case 18:
      result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], nsuIntToStr(dt_12665058.nanosecond, 9));;
      break;
    case 19:
      if ((12 <= dt_12665058.hour)) {
      Tmp3 = makeNimstrLit("P");
      }
      else {
      Tmp3 = makeNimstrLit("A");
      }
      
      result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], Tmp3);;
      break;
    case 20:
      if ((12 <= dt_12665058.hour)) {
      Tmp4 = makeNimstrLit("PM");
      }
      else {
      Tmp4 = makeNimstrLit("AM");
      }
      
      result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], Tmp4);;
      break;
    case 21:
      if ((dt_12665058.year <= 0)) {
      Tmp5 = HEX2B_11993055(absInt(dt_12665058.year), 1);
      }
      else {
      Tmp5 = dt_12665058.year;
      }
      
      result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], nsuIntToStr(modInt(Tmp5, 100), 2));;
      break;
    case 22:
      if ((dt_12665058.year <= 0)) {
      Tmp6 = HEX2B_11993055(absInt(dt_12665058.year), 1);
      }
      else {
      Tmp6 = dt_12665058.year;
      }
      
      var year_12695001 = Tmp6;
      if ((year_12695001 < 10000)) {
      result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], nsuIntToStr(year_12695001, 4));;
      }
      else {
      result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], [43].concat(cstrToNimstr((year_12695001)+"") || []));;
      }
      
      break;
    case 23:
      if ((dt_12665058.year < 1)) {
      result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], cstrToNimstr((HEX2B_11993055(absInt(dt_12665058.year), 1))+""));;
      }
      else {
      result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], cstrToNimstr((dt_12665058.year)+""));;
      }
      
      break;
    case 24:
      var year_12695003 = dt_12665058.year;
      if (((year_12695003 < 10000) || (year_12695003 < 0))) {
      result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], nsuIntToStr(year_12695003, 4));;
      }
      else {
      result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], [43].concat(cstrToNimstr((year_12695003)+"") || []));;
      }
      
      break;
    case 25:
      result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], cstrToNimstr((dt_12665058.year)+""));;
      break;
    case 26:
    case 27:
    case 28:
    case 29:
        if (!!(HEX3DHEX3D_12520022(dt_12665058.timezone, null))) Tmp7 = false; else {          Tmp7 = eqStrings(dt_12665058.timezone.name, makeNimstrLit("Etc/UTC"));        }      if (Tmp7) {
      addChar(result_12665061[result_12665061_Idx], 90);;
      }
      else {
        if ((0 <= negInt(dt_12665058.utcOffset))) {
        Tmp8 = 43;
        }
        else {
        Tmp8 = 45;
        }
        
        addChar(result_12665061[result_12665061_Idx], Tmp8);;
        var absOffset_12705001 = absInt(dt_12665058.utcOffset);
        switch (pattern_12665059) {
        case 26:
          result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], cstrToNimstr((divInt(absOffset_12705001, 3600))+""));;
          break;
        case 27:
          result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], nsuIntToStr(divInt(absOffset_12705001, 3600), 2));;
          break;
        case 28:
          var h_12705005 = nsuIntToStr(divInt(absOffset_12705001, 3600), 2);
          var m_12705006 = nsuIntToStr(modInt(divInt(absOffset_12705001, 60), 60), 2);
          result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], (h_12705005 || []).concat(makeNimstrLit(":") || [],m_12705006 || []));;
          break;
        case 29:
          var absOffset_12705007 = absInt(dt_12665058.utcOffset);
          var h_12705009 = nsuIntToStr(divInt(absOffset_12705007, 3600), 2);
          var m_12705010 = nsuIntToStr(modInt(divInt(absOffset_12705007, 60), 60), 2);
          var s_12705011 = nsuIntToStr(modInt(absOffset_12705007, 60), 2);
          result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], (h_12705009 || []).concat(makeNimstrLit(":") || [],m_12705010 || [],makeNimstrLit(":") || [],s_12705011 || []));;
          break;
        default: 
          if (true) {
          failedAssertImpl_115480(makeNimstrLit("times.nim(1751, 20) `false` "));
          }
          
          break;
        }
      }
      
      break;
    case 30:
      if ((dt_12665058.year < 1)) {
      Tmp9 = makeNimstrLit("BC");
      }
      else {
      Tmp9 = makeNimstrLit("AD");
      }
      
      result_12665061[result_12665061_Idx].push.apply(result_12665061[result_12665061_Idx], Tmp9);;
      break;
    case 31:
      if (true) {
      failedAssertImpl_115480(makeNimstrLit("times.nim(1754, 18) `false` "));
      }
      
      break;
    }

  
}
function format_13045059(dt_13045061, f_13045062, loc_13045063) {
  var result_13045064 = [[]];

    if (!(!((dt_13045061.monthdayZero == 0)))) {
    failedAssertImpl_115480(makeNimstrLit("times.nim(1989, 29) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_13045064[0] = nimCopy(null, [], NTI113);
    var idx_13065202 = 0;
    L1: do {
        L2: while (true) {
        if (!(idx_13065202 <= (f_13045062.patterns).length - 1)) break L2;
          switch (chckRange(f_13045062.patterns[chckIndx(idx_13065202, 0, (f_13045062.patterns).length-1)], 0, 31)) {
          case 31:
            idx_13065202 = addInt(idx_13065202, 1);
            var len_13065215 = f_13045062.patterns[chckIndx(idx_13065202, 0, (f_13045062.patterns).length-1)];
            L3: do {
              var i_13065421 = 0;
              var res_15825584 = 1;
              L4: do {
                  L5: while (true) {
                  if (!(res_15825584 <= ((len_13065215)|0))) break L5;
                    i_13065421 = res_15825584;
                    idx_13065202 = addInt(idx_13065202, 1);
                    addChar(result_13045064[0], f_13045062.patterns[chckIndx(idx_13065202, 0, (f_13045062.patterns).length-1)]);;
                    res_15825584 = addInt(res_15825584, 1);
                  }
              } while(false);
            } while(false);
            idx_13065202 = addInt(idx_13065202, 1);
            break;
          default: 
            formatPattern_12665056(dt_13045061, chckRange(f_13045062.patterns[chckIndx(idx_13065202, 0, (f_13045062.patterns).length-1)], 0, 31), result_13045064, 0, loc_13045063);
            idx_13065202 = addInt(idx_13065202, 1);
            break;
          }
        }
    } while(false);

  return result_13045064[0];

}
function format_13070130(dt_13070133) {
  var result_13070135 = [];

    result_13070135 = nimCopy(null, format_13045059(dt_13070133, f2_13070174, DefaultLocale_12585709), NTI113);

  return result_13070135;

}
function HEX24_13070125(dt_13070127) {
  var result_13070128 = [];

    if (!(isInitialized_12450214(dt_13070127))) {
    result_13070128 = nimCopy(null, makeNimstrLit("Uninitialized DateTime"), NTI113);
    }
    else {
      result_13070128 = nimCopy(null, format_13070130(dt_13070127), NTI113);
    }
    

  return result_13070128;

}
function HEX2B_11993037(a_11993039, b_11993040) {
  var result_11993041 = 0;

    result_11993041 = (a_11993039 + b_11993040);

  return result_11993041;

}
function convert_12020442(unitFrom_12020445, unitTo_12020446, quantity_12020447) {
    var Tmp1;

  var result_12020448 = 0;

    if ((unitFrom_12020445 < unitTo_12020446)) {
    Tmp1 = divInt(quantity_12020447, divInt(unitWeights_11993382[chckIndx(unitTo_12020446, 0, (unitWeights_11993382).length-1)], unitWeights_11993382[chckIndx(unitFrom_12020445, 0, (unitWeights_11993382).length-1)]));
    }
    else {
    Tmp1 = HEX2A_11993001(divInt(unitWeights_11993382[chckIndx(unitFrom_12020445, 0, (unitWeights_11993382).length-1)], unitWeights_11993382[chckIndx(unitTo_12020446, 0, (unitWeights_11993382).length-1)]), quantity_12020447);
    }
    
    result_12020448 = Tmp1;

  return result_12020448;

}
function convert_12020558(unitFrom_12020561, unitTo_12020562, quantity_12020563) {
    var Tmp1;

  var result_12020564 = 0;

    if ((unitFrom_12020561 < unitTo_12020562)) {
    Tmp1 = chckRange(divInt(quantity_12020563, divInt(unitWeights_11993382[chckIndx(unitTo_12020562, 0, (unitWeights_11993382).length-1)], unitWeights_11993382[chckIndx(unitFrom_12020561, 0, (unitWeights_11993382).length-1)])), -2147483648, 2147483647);
    }
    else {
    Tmp1 = chckRange(HEX2A_11993001(divInt(unitWeights_11993382[chckIndx(unitFrom_12020561, 0, (unitWeights_11993382).length-1)], unitWeights_11993382[chckIndx(unitTo_12020562, 0, (unitWeights_11993382).length-1)]), quantity_12020563), -2147483648, 2147483647);
    }
    
    result_12020564 = Tmp1;

  return result_12020564;

}
function normalize_12190002(seconds_12190005, nanoseconds_12190006) {
  var result_12190007 = ({seconds: 0, nanosecond: 0});

    result_12190007.seconds = HEX2B_11993037(seconds_12190005, convert_12020442(0, 3, nanoseconds_12190006));
    var nanosecond_12190021 = modInt(nanoseconds_12190006, convert_12020558(3, 0, 1));
    if ((nanosecond_12190021 < 0)) {
    nanosecond_12190021 = addInt(nanosecond_12190021, convert_12020558(3, 0, 1));
    result_12190007.seconds = subInt(result_12190007.seconds, 1);
    }
    
    result_12190007.nanosecond = chckRange(chckRange(nanosecond_12190021, -2147483648, 2147483647), 0, 999999999);

  return result_12190007;

}
function HEX2D_11993073(a_11993075, b_11993076) {
  var result_11993077 = 0;

    result_11993077 = (a_11993075 - b_11993076);

  return result_11993077;

}
function ntSubTime(a_12190069, b_12190070) {
  var result_12190071 = ({seconds: 0, nanosecond: 0});

    nimCopy(result_12190071, normalize_12190002(HEX2D_11993073(a_12190069.seconds, b_12190070.seconds), HEX2D_11993091(a_12190069.nanosecond, b_12190070.nanosecond)), NTI11993239);

  return result_12190071;

}
function normalize_12020545(seconds_12020548, nanoseconds_12020549) {
  var result_12020550 = ({seconds: 0, nanosecond: 0});

    result_12020550.seconds = HEX2B_11993037(seconds_12020548, convert_12020442(0, 3, nanoseconds_12020549));
    var nanosecond_12020599 = modInt(nanoseconds_12020549, convert_12020558(3, 0, 1));
    if ((nanosecond_12020599 < 0)) {
    nanosecond_12020599 = addInt(nanosecond_12020599, convert_12020558(3, 0, 1));
    result_12020550.seconds = subInt(result_12020550.seconds, 1);
    }
    
    result_12020550.nanosecond = chckRange(chckRange(nanosecond_12020599, -2147483648, 2147483647), 0, 999999999);

  return result_12020550;

}
function initDuration_12020431(nanoseconds_12020433, microseconds_12020434, milliseconds_12020435, seconds_12020436, minutes_12020437, hours_12020438, days_12020439, weeks_12020440) {
  var result_12020441 = ({seconds: 0, nanosecond: 0});

    var seconds_12020525 = HEX2B_11993037(HEX2B_11993037(HEX2B_11993037(HEX2B_11993037(HEX2B_11993037(HEX2B_11993037(HEX2B_11993037(convert_12020442(7, 3, weeks_12020440), convert_12020442(6, 3, days_12020439)), convert_12020442(4, 3, minutes_12020437)), convert_12020442(5, 3, hours_12020438)), convert_12020442(3, 3, seconds_12020436)), convert_12020442(2, 3, milliseconds_12020435)), convert_12020442(1, 3, microseconds_12020434)), convert_12020442(0, 3, nanoseconds_12020433));
    var nanoseconds_12020541 = chckRange(HEX2B_11993037(HEX2B_11993037(convert_12020442(2, 0, modInt(milliseconds_12020435, 1000)), convert_12020442(1, 0, modInt(microseconds_12020434, 1000000))), modInt(nanoseconds_12020433, 1000000000)), -2147483648, 2147483647);
    nimCopy(result_12020441, normalize_12020545(seconds_12020525, nanoseconds_12020541), NTI11993243);

  return result_12020441;

}
function floorDiv_12020158(x_12020161, y_12020162) {
      var Tmp1;
      var Tmp2;
        var Tmp3;

  var result_12020163 = 0;

    result_12020163 = Math.trunc(x_12020161 / y_12020162);
    var r_12020164 = Math.trunc(x_12020161 % y_12020162);
      if (!(0 < r_12020164)) Tmp2 = false; else {        Tmp2 = (y_12020162 < 0);      }      if (Tmp2) Tmp1 = true; else {        if (!(r_12020164 < 0)) Tmp3 = false; else {          Tmp3 = (0 < y_12020162);        }        Tmp1 = Tmp3;      }    if (Tmp1) {
    result_12020163 -= 1;
    }
    

  return result_12020163;

}
function inc_11993133(a_11993136, a_11993136_Idx, b_11993137) {
    a_11993136[a_11993136_Idx] += b_11993137;

  
}
function fromEpochDay_12015036(epochday_12015038) {
    var Tmp1;
    var Tmp2;

  var result_12015043 = {Field0: 0, Field1: 0, Field2: 0};

  BeforeRet: do {
    var z_12015044 = [epochday_12015038];
    inc_11993133(z_12015044, 0, 719468);
    if ((0 <= z_12015044[0])) {
    Tmp1 = z_12015044[0];
    }
    else {
    Tmp1 = HEX2D_11993073(z_12015044[0], 146096);
    }
    
    var era_12020003 = divInt(Tmp1, 146097);
    var doe_12020005 = HEX2D_11993073(z_12015044[0], HEX2A_11993001(era_12020003, 146097));
    var yoe_12020010 = divInt(HEX2D_11993073(HEX2B_11993037(HEX2D_11993073(doe_12020005, divInt(doe_12020005, 1460)), divInt(doe_12020005, 36524)), divInt(doe_12020005, 146096)), 365);
    var y_12020012 = HEX2B_11993037(yoe_12020010, HEX2A_11993001(era_12020003, 400));
    var doy_12020015 = HEX2D_11993073(doe_12020005, HEX2D_11993073(HEX2B_11993037(HEX2A_11993001(365, yoe_12020010), divInt(yoe_12020010, 4)), divInt(yoe_12020010, 100)));
    var mp_12020017 = divInt(HEX2B_11993037(HEX2A_11993001(5, doy_12020015), 2), 153);
    var d_12020019 = HEX2B_11993037(HEX2D_11993073(doy_12020015, divInt(HEX2B_11993037(HEX2A_11993001(153, mp_12020017), 2), 5)), 1);
    if ((mp_12020017 < 10)) {
    Tmp2 = 3;
    }
    else {
    Tmp2 = -9;
    }
    
    var m_12020021 = HEX2B_11993037(mp_12020017, Tmp2);
    var colontmp__15825602 = chckRange(d_12020019, 1, 31);
    var colontmp__15825603 = chckRange(m_12020021, 1, 12);
    var colontmp__15825604 = chckRange(HEX2B_11993037(y_12020012, ((m_12020021 <= 2) ? 1:0)), -2147483648, 2147483647);
    nimCopy(result_12015043, {Field0: nimCopy(null, colontmp__15825602, NTI11993227), Field1: colontmp__15825603, Field2: colontmp__15825604}, NTI12015039);
    break BeforeRet;
  } while (false);

  return result_12015043;

}
function isLeapYear_11993443(year_11993445) {
    var Tmp1;
      var Tmp2;

  var result_11993446 = false;

    if (!(modInt(year_11993445, 4) == 0)) Tmp1 = false; else {      if (!((modInt(year_11993445, 100) == 0))) Tmp2 = true; else {        Tmp2 = (modInt(year_11993445, 400) == 0);      }      Tmp1 = Tmp2;    }    result_11993446 = Tmp1;

  return result_11993446;

}
function getDaysInMonth_11995016(month_11995018, year_11995019) {
      var Tmp1;

  var result_11995020 = 0;

    switch (month_11995018) {
    case 2:
      if (isLeapYear_11993443(year_11995019)) {
      Tmp1 = 29;
      }
      else {
      Tmp1 = 28;
      }
      
      result_11995020 = Tmp1;
      break;
    case 4:
    case 6:
    case 9:
    case 11:
      result_11995020 = 30;
      break;
    default: 
      result_11995020 = 31;
      break;
    }

  return result_11995020;

}
function assertValidDate_11995034(monthday_11995036, month_11995037, year_11995038) {
    if (!((monthday_11995036 <= getDaysInMonth_11995016(month_11995037, year_11995038)))) {
    failedAssertImpl_115480((makeNimstrLit("times.nim(443, 10) `monthday <= getDaysInMonth(month, year)` ") || []).concat(cstrToNimstr((year_11995038)+"") || [],makeNimstrLit("-") || [],nsuIntToStr(month_11995037, 2) || [],makeNimstrLit("-") || [],cstrToNimstr((monthday_11995036)+"") || [],makeNimstrLit(" is not a valid date") || []));
    }
    

  
}
function HEX2A_11993019(a_11993021, b_11993022) {
  var result_11993023 = 0;

    result_11993023 = (a_11993021 * b_11993022);

  return result_11993023;

}
function toEpochDay_12005229(monthday_12005231, month_12005232, year_12005233) {
    var Tmp1;
    var Tmp2;

  var result_12005234 = 0;

  BeforeRet: do {
    assertValidDate_11995034(monthday_12005231, month_12005232, year_12005233);
    var colontmp__15825606 = {Field0: year_12005233, Field1: month_12005232, Field2: monthday_12005231};
    var y_12005240 = colontmp__15825606["Field0"];
    var m_12005241 = colontmp__15825606["Field1"];
    var d_12005242 = colontmp__15825606["Field2"];
    if ((m_12005241 <= 2)) {
    y_12005240 = subInt(y_12005240, 1);
    }
    
    if ((0 <= y_12005240)) {
    Tmp1 = y_12005240;
    }
    else {
    Tmp1 = HEX2D_11993091(y_12005240, 399);
    }
    
    var era_12010003 = divInt(Tmp1, 400);
    var yoe_12010005 = HEX2D_11993091(y_12005240, HEX2A_11993019(era_12010003, 400));
    if ((2 < m_12005241)) {
    Tmp2 = -3;
    }
    else {
    Tmp2 = 9;
    }
    
    var doy_12015002 = HEX2D_11993091(HEX2B_11993055(divInt(HEX2B_11993055(HEX2A_11993019(153, HEX2B_11993055(m_12005241, Tmp2)), 2), 5), d_12005242), 1);
    var doe_12015005 = HEX2B_11993055(HEX2D_11993091(HEX2B_11993055(HEX2A_11993019(yoe_12010005, 365), divInt(yoe_12010005, 4)), divInt(yoe_12010005, 100)), doy_12015002);
    result_12005234 = HEX2D_11993091(HEX2B_11993055(HEX2A_11993019(era_12010003, 146097), doe_12015005), 719468);
    break BeforeRet;
  } while (false);

  return result_12005234;

}
function getDayOfWeek_12020151(monthday_12020153, month_12020154, year_12020155) {
    var Tmp1;

  var result_12020156 = 0;

    assertValidDate_11995034(monthday_12020153, month_12020154, year_12020155);
    var days_12020157 = HEX2D_11993073(toEpochDay_12005229(monthday_12020153, month_12020154, year_12020155), 3);
    var weeks_12020184 = floorDiv_12020158(days_12020157, 7);
    var wd_12020185 = HEX2D_11993073(days_12020157, HEX2A_11993001(weeks_12020184, 7));
    if ((wd_12020185 == 0)) {
    Tmp1 = 6;
    }
    else {
    Tmp1 = chckRange(HEX2D_11993073(wd_12020185, 1), 0, 6);
    }
    
    result_12020156 = Tmp1;

  return result_12020156;

}
function getDayOfYear_12020070(monthday_12020072, month_12020073, year_12020074) {
  var result_12020075 = 0;

    assertValidDate_11995034(monthday_12020072, month_12020073, year_12020074);
    if (isLeapYear_11993443(year_12020074)) {
    result_12020075 = chckRange(HEX2D_11993091(HEX2B_11993055(daysUntilMonthLeap_12020107[chckIndx(month_12020073, 1, (daysUntilMonthLeap_12020107).length+(1)-1)-(1)], monthday_12020072), 1), 0, 365);
    }
    else {
      result_12020075 = chckRange(HEX2D_11993091(HEX2B_11993055(daysUntilMonth_12020091[chckIndx(month_12020073, 1, (daysUntilMonth_12020091).length+(1)-1)-(1)], monthday_12020072), 1), 0, 365);
    }
    

  return result_12020075;

}
function initDateTime_12515220(zt_12515222, zone_12515223) {
  var result_12515224 = ({m_type: NTI11993241, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    var adjTime_12515225 = ntSubTime(zt_12515222.time, initDuration_12020431(0, 0, 0, zt_12515222.utcOffset, 0, 0, 0, 0));
    var s_12515226 = adjTime_12515225.seconds;
    var epochday_12515232 = floorDiv_12020158(s_12515226, 86400);
    var rem_12515233 = HEX2D_11993073(s_12515226, HEX2A_11993001(epochday_12515232, 86400));
    var hour_12515234 = divInt(rem_12515233, 3600);
    rem_12515233 = HEX2D_11993073(rem_12515233, HEX2A_11993001(hour_12515234, 3600));
    var minute_12515235 = divInt(rem_12515233, 60);
    rem_12515233 = HEX2D_11993073(rem_12515233, HEX2A_11993001(minute_12515235, 60));
    var second_12515236 = rem_12515233;
    var colontmp__15825601 = fromEpochDay_12015036(epochday_12515232);
    var d_12515237 = colontmp__15825601["Field0"];
    var m_12515238 = colontmp__15825601["Field1"];
    var y_12515239 = colontmp__15825601["Field2"];
    nimCopy(result_12515224, {year: y_12515239, monthZero: ((m_12515238)|0), monthdayZero: d_12515237, hour: nimCopy(null, chckRange(hour_12515234, 0, 23), NTI11993229), minute: nimCopy(null, chckRange(minute_12515235, 0, 59), NTI11993231), second: nimCopy(null, chckRange(second_12515236, 0, 60), NTI11993233), nanosecond: nimCopy(null, zt_12515222.time.nanosecond, NTI11993237), weekday: getDayOfWeek_12020151(d_12515237, m_12515238, y_12515239), yearday: getDayOfYear_12020070(d_12515237, m_12515238, y_12515239), isDst: zt_12515222.isDst, timezone: zone_12515223, utcOffset: zt_12515222.utcOffset, m_type: NTI11993241}, NTI11993241);

  return result_12515224;

}
function zonedTimeFromTime_12515341(zone_12515343, time_12515344) {
  var result_12515345 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    nimCopy(result_12515345, zone_12515343.zonedTimeFromTimeImpl(time_12515344), NTI11993253);

  return result_12515345;

}
function inZone_12520059(time_12520061, zone_12520062) {
  var result_12520063 = ({m_type: NTI11993241, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    nimCopy(result_12520063, initDateTime_12515220(zonedTimeFromTime_12515341(zone_12520062, time_12520061), zone_12520062), NTI11993241);

  return result_12520063;

}
function newTimezone_12515268(name_12515270, zonedTimeFromTimeImpl_12515274, zonedTimeFromAdjTimeImpl_12515278) {
  var result_12515280 = null;

    result_12515280 = {name: nimCopy(null, name_12515270, NTI113), zonedTimeFromTimeImpl: zonedTimeFromTimeImpl_12515274, zonedTimeFromAdjTimeImpl: zonedTimeFromAdjTimeImpl_12515278};

  return result_12515280;

}
function localZonedTimeFromTime_12540236(time_12540238) {
  var result_12540239 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var jsDate_12540245 = new Date(HEX2A_11993001(time_12540238.seconds, 1000));
    var offset_12540246 = HEX2A_11993019(jsDate_12540245.getTimezoneOffset(), 60);
    nimCopy(result_12540239.time, time_12540238, NTI11993239);
    result_12540239.utcOffset = offset_12540246;
    result_12540239.isDst = false;

  return result_12540239;

}
function contains_12545021(s_12545027, value_12545028) {
  var result_12545029 = false;

    result_12545029 = ((s_12545027.a <= value_12545028) && (value_12545028 <= s_12545027.b));

  return result_12545029;

}
function ntAddTime(a_12185022, b_12185023) {
  var result_12185024 = ({seconds: 0, nanosecond: 0});

    nimCopy(result_12185024, normalize_12190002(HEX2B_11993037(a_12185022.seconds, b_12185023.seconds), HEX2B_11993055(a_12185022.nanosecond, b_12185023.nanosecond)), NTI11993239);

  return result_12185024;

}
function localZonedTimeFromAdjTime_12540260(adjTime_12540262) {
  var result_12540263 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var utcDate_12540269 = new Date(HEX2A_11993001(adjTime_12540262.seconds, 1000));
    var localDate_12540270 = new Date(utcDate_12540269.getUTCFullYear(),utcDate_12540269.getUTCMonth(),utcDate_12540269.getUTCDate(),utcDate_12540269.getUTCHours(),utcDate_12540269.getUTCMinutes(),utcDate_12540269.getUTCSeconds(),0);
    if (contains_12545021(HEX2EHEX2E_1825220(0, 99), utcDate_12540269.getUTCFullYear())) {
    localDate_12540270.setFullYear(utcDate_12540269.getUTCFullYear());
    }
    
    result_12540263.utcOffset = HEX2A_11993019(localDate_12540270.getTimezoneOffset(), 60);
    nimCopy(result_12540263.time, ntAddTime(adjTime_12540262, initDuration_12020431(0, 0, 0, result_12540263.utcOffset, 0, 0, 0, 0)), NTI11993239);
    result_12540263.isDst = false;

  return result_12540263;

}
function local_12545282() {
  var result_12545284 = null;

    if ((localInstance_12545232[0] == null)) {
    localInstance_12545232[0] = newTimezone_12515268(makeNimstrLit("LOCAL"), localZonedTimeFromTime_12540236, localZonedTimeFromAdjTime_12540260);
    }
    
    result_12545284 = localInstance_12545232[0];

  return result_12545284;

}
function local_12545354(t_12545356) {
  var result_12545357 = ({m_type: NTI11993241, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    nimCopy(result_12545357, inZone_12520059(t_12545356, local_12545282()), NTI11993241);

  return result_12545357;

}
function initTime_12170182(unix_12170184, nanosecond_12170185) {
  var result_12170186 = ({seconds: 0, nanosecond: 0});

    result_12170186.seconds = unix_12170184;
    result_12170186.nanosecond = nanosecond_12170185;

  return result_12170186;

}
function getTime_12180291() {
  var result_12180293 = ({seconds: 0, nanosecond: 0});

    var millis_12180401 = new Date().getTime();
    var seconds_12180408 = convert_12020558(2, 3, millis_12180401);
    var nanos_12180422 = convert_12020558(2, 0, modInt(millis_12180401, convert_12020558(3, 2, 1)));
    nimCopy(result_12180293, initTime_12170182(seconds_12180408, chckRange(nanos_12180422, 0, 999999999)), NTI11993239);

  return result_12180293;

}
function now_12545371() {
  var result_12545373 = ({m_type: NTI11993241, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    nimCopy(result_12545373, local_12545354(getTime_12180291()), NTI11993241);

  return result_12545373;

}
function saveFunc_15095033(jStr_15095035, fname_15095036) {
    function innerHEX60gensym97_15100001() {
      var result_15100003 = null;

      BeforeRet: do {
        var a_15100004 = null;
        a_15100004 = {};
        a_15100004.type = makeNimstrLit("application/json");
        result_15100003 = a_15100004;
        break BeforeRet;
      } while (false);

      return result_15100003;

    }

    var blb_15105025 = function(o,opt){return new Blob([o], opt);}(jStr_15095035, innerHEX60gensym97_15100001());
    var bUrl_15105026 = function(b){return URL.createObjectURL(b);}(blb_15105025);
    var elA_15105027 = document.createElement("a");
    elA_15105027.setAttribute("href", bUrl_15105026);
    elA_15105027.setAttribute("download", toJSStr(fname_15095036));
    document.body.appendChild(elA_15105027);
    elA_15105027.click();
    document.body.removeChild(elA_15105027);
    (function(uk){return URL.revokeObjectURL(uk);})(bUrl_15105026);

  
}
function initOrderedTable_11426271(initialSize_11426275) {
  var result_11426277 = ({data: [], counter: 0, first: 0, last: 0});

    var correctSizeHEX60gensym0_11430001 = slotsNeeded_10295048(chckRange(initialSize_11426275, 0, 2147483647));
    result_11426277.counter = 0;
    result_11426277.data = new Array(chckRange(correctSizeHEX60gensym0_11430001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym0_11430001, 0, 2147483647);++i) {result_11426277.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    result_11426277.first = -1;
    result_11426277.last = -1;

  return result_11426277;

}
function newJObject_11426266() {
  var result_11426268 = null;

    result_11426268 = {kind: 5, fields: initOrderedTable_11426271(2), isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, elems: []};

  return result_11426268;

}
function rawGet_11500621(t_11500626, key_11500627, hc_11500628, hc_11500628_Idx) {
            var Tmp3;

  var result_11500629 = 0;

  BeforeRet: do {
    hc_11500628[hc_11500628_Idx] = hash_10270214(key_11500627);
    if ((hc_11500628[hc_11500628_Idx] == 0)) {
    hc_11500628[hc_11500628_Idx] = 314159265;
    }
    
    if (((t_11500626.data).length == 0)) {
    result_11500629 = -1;
    break BeforeRet;
    }
    
    var h_11510138 = (hc_11500628[hc_11500628_Idx] & (t_11500626.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_10291218(t_11500626.data[chckIndx(h_11510138, 0, (t_11500626.data).length-1)].Field0)) break L2;
            if (!(t_11500626.data[chckIndx(h_11510138, 0, (t_11500626.data).length-1)].Field0 == hc_11500628[hc_11500628_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_11500626.data[chckIndx(h_11510138, 0, (t_11500626.data).length-1)].Field2, key_11500627);            }          if (Tmp3) {
          result_11500629 = h_11510138;
          break BeforeRet;
          }
          
          h_11510138 = nextTry_10295014(h_11510138, (t_11500626.data).length - 1);
        }
    } while(false);
    result_11500629 = subInt(-1, h_11510138);
  } while (false);

  return result_11500629;

}
function mustRehash_11525601(t_11525604) {
  var result_11525605 = false;

    if (!((t_11525604.counter < (t_11525604.data).length))) {
    failedAssertImpl_115480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_11525605 = ((mulInt((t_11525604.data).length, 2) < mulInt(t_11525604.counter, 3)) || (subInt((t_11525604.data).length, t_11525604.counter) < 4));

  return result_11525605;

}
function rawInsert_11551349(t_11551355, data_11551358, data_11551358_Idx, key_11551359, val_11551361, hc_11551362, h_11551363) {
    data_11551358[data_11551358_Idx][chckIndx(h_11551363, 0, (data_11551358[data_11551358_Idx]).length-1)].Field2 = nimCopy(null, key_11551359, NTI113);
    data_11551358[data_11551358_Idx][chckIndx(h_11551363, 0, (data_11551358[data_11551358_Idx]).length-1)].Field3 = val_11551361;
    data_11551358[data_11551358_Idx][chckIndx(h_11551363, 0, (data_11551358[data_11551358_Idx]).length-1)].Field0 = hc_11551362;
    data_11551358[data_11551358_Idx][chckIndx(h_11551363, 0, (data_11551358[data_11551358_Idx]).length-1)].Field1 = -1;
    if ((t_11551355.first < 0)) {
    t_11551355.first = h_11551363;
    }
    
    if ((0 <= t_11551355.last)) {
    data_11551358[data_11551358_Idx][chckIndx(t_11551355.last, 0, (data_11551358[data_11551358_Idx]).length-1)].Field1 = h_11551363;
    }
    
    t_11551355.last = h_11551363;

  
}
function enlarge_11550180(t_11550186) {
          var Tmp6;
          var Tmp7;

    var n_11550194 = [];
    n_11550194 = new Array(chckRange(mulInt((t_11550186.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_11550186.data).length, 2), 0, 2147483647);++i) {n_11550194[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    var h_11550333 = t_11550186.first;
    t_11550186.first = -1;
    t_11550186.last = -1;
    var Tmp1 = t_11550186.data; t_11550186.data = n_11550194; n_11550194 = Tmp1;    L2: do {
        L3: while (true) {
        if (!(0 <= h_11550333)) break L3;
          var nxt_11550489 = n_11550194[chckIndx(h_11550333, 0, (n_11550194).length-1)].Field1;
          var eh_11550638 = n_11550194[chckIndx(h_11550333, 0, (n_11550194).length-1)].Field0;
          if (isFilled_10291218(eh_11550638)) {
          var j_11550645 = (eh_11550638 & (t_11550186.data).length - 1);
          L4: do {
              L5: while (true) {
              if (!isFilled_10291218(t_11550186.data[chckIndx(j_11550645, 0, (t_11550186.data).length-1)].Field0)) break L5;
                j_11550645 = nextTry_10295014(j_11550645, (t_11550186.data).length - 1);
              }
          } while(false);
          Tmp6 = n_11550194[chckIndx(h_11550333, 0, (n_11550194).length-1)].Field2;
          n_11550194[chckIndx(h_11550333, 0, (n_11550194).length-1)].Field2 = genericReset(n_11550194[chckIndx(h_11550333, 0, (n_11550194).length-1)].Field2, NTI113);
          Tmp7 = n_11550194[chckIndx(h_11550333, 0, (n_11550194).length-1)].Field3;
          n_11550194[chckIndx(h_11550333, 0, (n_11550194).length-1)].Field3 = genericReset(n_11550194[chckIndx(h_11550333, 0, (n_11550194).length-1)].Field3, NTI11426056);
          rawInsert_11551349(t_11550186, t_11550186, "data", Tmp6, Tmp7, n_11550194[chckIndx(h_11550333, 0, (n_11550194).length-1)].Field0, j_11550645);
          }
          
          h_11550333 = nxt_11550489;
        }
    } while(false);

  
}
function rawGetKnownHC_11552150(t_11552155, key_11552156, hc_11552157) {
  var result_11552158 = 0;

  BeforeRet: do {
    if (((t_11552155.data).length == 0)) {
    result_11552158 = -1;
    break BeforeRet;
    }
    
    var h_11555138 = (hc_11552157 & (t_11552155.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_10291218(t_11552155.data[chckIndx(h_11555138, 0, (t_11552155.data).length-1)].Field0)) break L2;
          if (((t_11552155.data[chckIndx(h_11555138, 0, (t_11552155.data).length-1)].Field0 == hc_11552157) && eqStrings(t_11552155.data[chckIndx(h_11555138, 0, (t_11552155.data).length-1)].Field2, key_11552156))) {
          result_11552158 = h_11555138;
          break BeforeRet;
          }
          
          h_11555138 = nextTry_10295014(h_11555138, (t_11552155.data).length - 1);
        }
    } while(false);
    result_11552158 = subInt(-1, h_11555138);
  } while (false);

  return result_11552158;

}
function HEX5BHEX5DHEX3D_11485311(t_11485317, key_11485318, val_11485320) {
    if (((t_11485317.data).length == 0)) {
    var correctSizeHEX60gensym13_11495001 = slotsNeeded_10295048(32);
    t_11485317.counter = 0;
    t_11485317.data = new Array(chckRange(correctSizeHEX60gensym13_11495001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym13_11495001, 0, 2147483647);++i) {t_11485317.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    t_11485317.first = -1;
    t_11485317.last = -1;
    }
    
    var hc_11500601 = [0];
    var index_11510620 = rawGet_11500621(t_11485317, key_11485318, hc_11500601, 0);
    if ((0 <= index_11510620)) {
    t_11485317.data[chckIndx(index_11510620, 0, (t_11485317.data).length-1)].Field3 = val_11485320;
    }
    else {
      if (((t_11485317.data).length == 0)) {
      var correctSizeHEX60gensym18_11520001 = slotsNeeded_10295048(32);
      t_11485317.counter = 0;
      t_11485317.data = new Array(chckRange(correctSizeHEX60gensym18_11520001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym18_11520001, 0, 2147483647);++i) {t_11485317.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}      t_11485317.first = -1;
      t_11485317.last = -1;
      }
      
      if (mustRehash_11525601(t_11485317)) {
      enlarge_11550180(t_11485317);
      index_11510620 = rawGetKnownHC_11552150(t_11485317, key_11485318, hc_11500601[0]);
      }
      
      index_11510620 = subInt(-1, index_11510620);
      rawInsert_11551349(t_11485317, t_11485317, "data", key_11485318, val_11485320, hc_11500601[0], index_11510620);
      t_11485317.counter = addInt(t_11485317.counter, 1);
    }
    

  
}
function add_11475223(obj_11475225, key_11475226, val_11475227) {
    var Tmp1;

    if (!((obj_11475225.kind == 5))) {
    failedAssertImpl_115480(makeNimstrLit("json.nim(298, 10) `obj.kind == JObject` "));
    }
    
    var Tmp1 = obj_11475225;
    if (ConstSet3[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
    HEX5BHEX5DHEX3D_11485311(Tmp1.fields, key_11475226, val_11475227);

  
}
function newJString_11426100(s_11426102) {
  var result_11426103 = null;

    result_11426103 = {kind: 4, str: nimCopy(null, s_11426102, NTI113), isUnquoted: false, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_11426103;

}
function newJArray_11435657() {
  var result_11435659 = null;

    result_11435659 = {kind: 6, elems: [], isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0})};

  return result_11435659;

}
function add_11465020(father_11465022, child_11465023) {
    var Tmp1;

    if (!((father_11465022.kind == 6))) {
    failedAssertImpl_115480(makeNimstrLit("json.nim(293, 10) `father.kind == JArray` "));
    }
    
    var Tmp1 = father_11465022;
    if (ConstSet4[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'elems\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
    Tmp1.elems.push(child_11465023);;

  
}
function len_15255548(t_15255553) {
  var result_15255554 = 0;

    result_15255554 = t_15255553.counter;

  return result_15255554;

}
function newSeq_15265256(len_15265259) {
  var result_15265261 = [];

    result_15265261 = new Array(len_15265259); for (var i=0;i<len_15265259;++i) {result_15265261[i]=null;}
  return result_15265261;

}
function newSeq_650232(len_650235) {
  var result_650237 = [];

    result_650237 = new Array(len_650235); for (var i=0;i<len_650235;++i) {result_650237[i]=[];}
  return result_650237;

}
function parseSaturatedNatural_7880017(s_7880019, b_7880021, b_7880021_Idx, start_7880022) {
      var Tmp1;
          var Tmp4;

  var result_7880024 = 0;

    var i_7880025 = start_7880022;
    if (((i_7880025 < (s_7880019).length) && (s_7880019[chckIndx(i_7880025, 0, (s_7880019).length-1)] == 43))) {
    i_7880025 = addInt(i_7880025, 1);
    }
    
      if (!(i_7880025 < (s_7880019).length)) Tmp1 = false; else {        Tmp1 = (ConstSet9[s_7880019[chckIndx(i_7880025, 0, (s_7880019).length-1)]] != undefined);      }    if (Tmp1) {
    b_7880021[b_7880021_Idx] = 0;
    L2: do {
        L3: while (true) {
          if (!(i_7880025 < (s_7880019).length)) Tmp4 = false; else {            Tmp4 = (ConstSet10[s_7880019[chckIndx(i_7880025, 0, (s_7880019).length-1)]] != undefined);          }        if (!Tmp4) break L3;
          var c_7890016 = subInt(s_7880019[chckIndx(i_7880025, 0, (s_7880019).length-1)], 48);
          if ((b_7880021[b_7880021_Idx] <= divInt(subInt(2147483647, c_7890016), 10))) {
          b_7880021[b_7880021_Idx] = addInt(mulInt(b_7880021[b_7880021_Idx], 10), c_7890016);
          }
          else {
            b_7880021[b_7880021_Idx] = 2147483647;
          }
          
          i_7880025 = addInt(i_7880025, 1);
          L5: do {
              L6: while (true) {
              if (!((i_7880025 < (s_7880019).length) && (s_7880019[chckIndx(i_7880025, 0, (s_7880019).length-1)] == 95))) break L6;
                i_7880025 = addInt(i_7880025, 1);
              }
          } while(false);
        }
    } while(false);
    result_7880024 = subInt(i_7880025, start_7880022);
    }
    

  return result_7880024;

}
function HEX5BHEX5D_4275068(s_4275072, x_4275074) {
  var result_4275075 = [];

    var a_4275201 = x_4275074.a;
    var L_4275401 = addInt(subInt(subInt((s_4275072).length, x_4275074.b), a_4275201), 1);
    result_4275075 = nimCopy(null, mnewString(chckRange(L_4275401, 0, 2147483647)), NTI113);
    L1: do {
      var i_4275409 = 0;
      var i_15825654 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_15825654 < L_4275401)) break L3;
            i_4275409 = i_15825654;
            result_4275075[chckIndx(i_4275409, 0, (result_4275075).length-1)] = s_4275072[chckIndx(addInt(i_4275409, a_4275201), 0, (s_4275072).length-1)];
            i_15825654 = addInt(i_15825654, 1);
          }
      } while(false);
    } while(false);

  return result_4275075;

}
function HEX2EHEX2E_4275001(a_4275006, b_4275008) {
  var result_4275014 = ({a: 0, b: 0});

    nimCopy(result_4275014, {a: a_4275006, b: b_4275008}, NTI4275011);

  return result_4275014;

}
function parseStandardFormatSpecifier_13125322(s_13125324, start_13125325, ignoreUnknownSuffix_13125327) {
      var Tmp1;
      var Tmp2;
      var Tmp3;

  var result_13125328 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

    result_13125328.fill = 32;
    result_13125328.align = 0;
    result_13125328.sign = 45;
    var i_13125331 = start_13125325;
    if (((addInt(i_13125331, 1) < (s_13125324).length) && (ConstSet5[s_13125324[chckIndx(addInt(i_13125331, 1), 0, (s_13125324).length-1)]] != undefined))) {
    result_13125328.fill = s_13125324[chckIndx(i_13125331, 0, (s_13125324).length-1)];
    result_13125328.align = s_13125324[chckIndx(addInt(i_13125331, 1), 0, (s_13125324).length-1)];
    i_13125331 = addInt(i_13125331, 2);
    }
    else {
    if (((i_13125331 < (s_13125324).length) && (ConstSet6[s_13125324[chckIndx(i_13125331, 0, (s_13125324).length-1)]] != undefined))) {
    result_13125328.align = s_13125324[chckIndx(i_13125331, 0, (s_13125324).length-1)];
    i_13125331 = addInt(i_13125331, 1);
    }
    }
    if (((i_13125331 < (s_13125324).length) && (ConstSet7[s_13125324[chckIndx(i_13125331, 0, (s_13125324).length-1)]] != undefined))) {
    result_13125328.sign = s_13125324[chckIndx(i_13125331, 0, (s_13125324).length-1)];
    i_13125331 = addInt(i_13125331, 1);
    }
    
    if (((i_13125331 < (s_13125324).length) && (s_13125324[chckIndx(i_13125331, 0, (s_13125324).length-1)] == 35))) {
    result_13125328.alternateForm = true;
    i_13125331 = addInt(i_13125331, 1);
    }
    
      if (!((addInt(i_13125331, 1) < (s_13125324).length) && (s_13125324[chckIndx(i_13125331, 0, (s_13125324).length-1)] == 48))) Tmp1 = false; else {        Tmp1 = (ConstSet8[s_13125324[chckIndx(addInt(i_13125331, 1), 0, (s_13125324).length-1)]] != undefined);      }    if (Tmp1) {
    result_13125328.padWithZero = true;
    i_13125331 = addInt(i_13125331, 1);
    }
    
    var parsedLength_13145015 = parseSaturatedNatural_7880017(s_13125324, result_13125328, "minimumWidth", i_13125331);
    i_13125331 = addInt(i_13125331, parsedLength_13145015);
    if (((i_13125331 < (s_13125324).length) && (s_13125324[chckIndx(i_13125331, 0, (s_13125324).length-1)] == 46))) {
    i_13125331 = addInt(i_13125331, 1);
    var parsedLengthB_13145029 = parseSaturatedNatural_7880017(s_13125324, result_13125328, "precision", i_13125331);
    i_13125331 = addInt(i_13125331, parsedLengthB_13145029);
    }
    else {
      result_13125328.precision = -1;
    }
    
      if (!(i_13125331 < (s_13125324).length)) Tmp2 = false; else {        Tmp2 = (ConstSet11[s_13125324[chckIndx(i_13125331, 0, (s_13125324).length-1)]] != undefined);      }    if (Tmp2) {
    result_13125328.typ = s_13125324[chckIndx(i_13125331, 0, (s_13125324).length-1)];
    i_13125331 = addInt(i_13125331, 1);
    }
    
    result_13125328.endPosition = i_13125331;
      if (!!((i_13125331 == (s_13125324).length))) Tmp3 = false; else {        Tmp3 = !(ignoreUnknownSuffix_13125327);      }    if (Tmp3) {
    raiseException({message: (makeNimstrLit("invalid format string, cannot parse: ") || []).concat(HEX5BHEX5D_4275068(s_13125324, HEX2EHEX2E_4275001(i_13125331, 1)) || []), parent: null, m_type: NTI6843, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_13125328;

}
function nsuformatBiggestFloat(f_9070221, format_9070222, precision_9070227, decimalSep_9070228) {
  var result_9070229 = [];

    var precision_9070401 = precision_9070227;
    if ((precision_9070401 == -1)) {
    precision_9070401 = 6;
    }
    
    var res_9070402 = null;
    switch (format_9070222) {
    case 0:
      res_9070402 = f_9070221.toString();
      break;
    case 1:
      res_9070402 = f_9070221.toFixed(precision_9070401);
      break;
    case 2:
      res_9070402 = f_9070221.toExponential(precision_9070401);
      break;
    }
    result_9070229 = nimCopy(null, cstrToNimstr(res_9070402), NTI113);
    if (((1.0000000000000000e+00 / f_9070221) == -Infinity)) {
    result_9070229 = nimCopy(null, (makeNimstrLit("-") || []).concat(cstrToNimstr(res_9070402) || []), NTI113);
    }
    
    L1: do {
      var i_9070410 = 0;
      var colontmp__15825659 = 0;
      colontmp__15825659 = (result_9070229).length;
      var i_15825660 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_15825660 < colontmp__15825659)) break L3;
            i_9070410 = i_15825660;
            if ((ConstSet12[result_9070229[chckIndx(i_9070410, 0, (result_9070229).length-1)]] != undefined)) {
            result_9070229[chckIndx(i_9070410, 0, (result_9070229).length-1)] = decimalSep_9070228;
            }
            
            i_15825660 = addInt(i_15825660, 1);
          }
      } while(false);
    } while(false);

  return result_9070229;

}
function insert_375401(x_375404, x_375404_Idx, item_375405, i_375406) {
    var xl_375407 = (x_375404[x_375404_Idx]).length;
    (x_375404[x_375404_Idx].length = chckRange(addInt(xl_375407, (item_375405).length), 0, 2147483647));
    var j_375408 = subInt(xl_375407, 1);
    L1: do {
        L2: while (true) {
        if (!(i_375406 <= j_375408)) break L2;
          x_375404[x_375404_Idx][chckIndx(addInt(j_375408, (item_375405).length), 0, (x_375404[x_375404_Idx]).length-1)] = x_375404[x_375404_Idx][chckIndx(j_375408, 0, (x_375404[x_375404_Idx]).length-1)];
          j_375408 = subInt(j_375408, 1);
        }
    } while(false);
    j_375408 = 0;
    L3: do {
        L4: while (true) {
        if (!(j_375408 < (item_375405).length)) break L4;
          x_375404[x_375404_Idx][chckIndx(addInt(j_375408, i_375406), 0, (x_375404[x_375404_Idx]).length-1)] = item_375405[chckIndx(j_375408, 0, (item_375405).length-1)];
          j_375408 = addInt(j_375408, 1);
        }
    } while(false);

  
}
function nsuRepeatChar(c_8755124, count_8755125) {
  var result_8755126 = [];

    result_8755126 = nimCopy(null, mnewString(count_8755125), NTI113);
    L1: do {
      var i_8755135 = 0;
      var colontmp__15825665 = 0;
      colontmp__15825665 = subInt(count_8755125, 1);
      var res_15825666 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_15825666 <= colontmp__15825665)) break L3;
            i_8755135 = res_15825666;
            result_8755126[chckIndx(i_8755135, 0, (result_8755126).length-1)] = c_8755124;
            res_15825666 = addInt(res_15825666, 1);
          }
      } while(false);
    } while(false);

  return result_8755126;

}
function validateUtf8_1190244(s_1190246) {
            var Tmp3;
            var Tmp4;
            var Tmp5;
            var Tmp6;
            var Tmp7;
            var Tmp8;

  var result_1190247 = 0;

  BeforeRet: do {
    var i_1190249 = 0;
    var L_1190250 = (s_1190246).length;
    L1: do {
        L2: while (true) {
        if (!(i_1190249 < L_1190250)) break L2;
          if ((s_1190246[chckIndx(i_1190249, 0, (s_1190246).length-1)] <= 127)) {
          i_1190249 = addInt(i_1190249, 1);
          }
          else {
          if ((((s_1190246[chckIndx(i_1190249, 0, (s_1190246).length-1)] >>> 0) >>> 5) == 6)) {
          if ((s_1190246[chckIndx(i_1190249, 0, (s_1190246).length-1)] < 194)) {
          result_1190247 = i_1190249;
          break BeforeRet;
          }
          
            if (!(addInt(i_1190249, 1) < L_1190250)) Tmp3 = false; else {              Tmp3 = (((s_1190246[chckIndx(addInt(i_1190249, 1), 0, (s_1190246).length-1)] >>> 0) >>> 6) == 2);            }          if (Tmp3) {
          i_1190249 = addInt(i_1190249, 2);
          }
          else {
            result_1190247 = i_1190249;
            break BeforeRet;
          }
          
          }
          else {
          if ((((s_1190246[chckIndx(i_1190249, 0, (s_1190246).length-1)] >>> 0) >>> 4) == 14)) {
            if (!(addInt(i_1190249, 2) < L_1190250)) Tmp5 = false; else {              Tmp5 = (((s_1190246[chckIndx(addInt(i_1190249, 1), 0, (s_1190246).length-1)] >>> 0) >>> 6) == 2);            }            if (!Tmp5) Tmp4 = false; else {              Tmp4 = (((s_1190246[chckIndx(addInt(i_1190249, 2), 0, (s_1190246).length-1)] >>> 0) >>> 6) == 2);            }          if (Tmp4) {
          i_1190249 = addInt(i_1190249, 3);
          }
          else {
            result_1190247 = i_1190249;
            break BeforeRet;
          }
          
          }
          else {
          if ((((s_1190246[chckIndx(i_1190249, 0, (s_1190246).length-1)] >>> 0) >>> 3) == 30)) {
            if (!(addInt(i_1190249, 3) < L_1190250)) Tmp8 = false; else {              Tmp8 = (((s_1190246[chckIndx(addInt(i_1190249, 1), 0, (s_1190246).length-1)] >>> 0) >>> 6) == 2);            }            if (!Tmp8) Tmp7 = false; else {              Tmp7 = (((s_1190246[chckIndx(addInt(i_1190249, 2), 0, (s_1190246).length-1)] >>> 0) >>> 6) == 2);            }            if (!Tmp7) Tmp6 = false; else {              Tmp6 = (((s_1190246[chckIndx(addInt(i_1190249, 3), 0, (s_1190246).length-1)] >>> 0) >>> 6) == 2);            }          if (Tmp6) {
          i_1190249 = addInt(i_1190249, 4);
          }
          else {
            result_1190247 = i_1190249;
            break BeforeRet;
          }
          
          }
          else {
            result_1190247 = i_1190249;
            break BeforeRet;
          }
          }}}
        }
    } while(false);
    result_1190247 = -1;
    break BeforeRet;
  } while (false);

  return result_1190247;

}
function nucruneLen(s_948025) {
  var result_948026 = 0;

    result_948026 = 0;
    var i_948028 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_948028 < (s_948025).length)) break L2;
          if ((s_948025[chckIndx(i_948028, 0, (s_948025).length-1)] <= 127)) {
          i_948028 = addInt(i_948028, 1);
          }
          else {
          if ((((s_948025[chckIndx(i_948028, 0, (s_948025).length-1)] >>> 0) >>> 5) == 6)) {
          i_948028 = addInt(i_948028, 2);
          }
          else {
          if ((((s_948025[chckIndx(i_948028, 0, (s_948025).length-1)] >>> 0) >>> 4) == 14)) {
          i_948028 = addInt(i_948028, 3);
          }
          else {
          if ((((s_948025[chckIndx(i_948028, 0, (s_948025).length-1)] >>> 0) >>> 3) == 30)) {
          i_948028 = addInt(i_948028, 4);
          }
          else {
          if ((((s_948025[chckIndx(i_948028, 0, (s_948025).length-1)] >>> 0) >>> 2) == 62)) {
          i_948028 = addInt(i_948028, 5);
          }
          else {
          if ((((s_948025[chckIndx(i_948028, 0, (s_948025).length-1)] >>> 0) >>> 1) == 126)) {
          i_948028 = addInt(i_948028, 6);
          }
          else {
          i_948028 = addInt(i_948028, 1);
          }
          }}}}}
          result_948026 = addInt(result_948026, 1);
        }
    } while(false);

  return result_948026;

}
function alignString_13125222(s_13125224, minimumWidth_13125225, align_13125226, fill_13125227) {
      var Tmp1;

  var result_13125228 = [];

    if ((minimumWidth_13125225 == 0)) {
    result_13125228 = nimCopy(null, s_13125224, NTI113);
    }
    else {
      if ((validateUtf8_1190244(s_13125224) == -1)) {
      Tmp1 = nucruneLen(s_13125224);
      }
      else {
      Tmp1 = (s_13125224).length;
      }
      
      var sRuneLen_13125229 = Tmp1;
      var toFill_13125230 = subInt(minimumWidth_13125225, sRuneLen_13125229);
      if ((toFill_13125230 <= 0)) {
      result_13125228 = nimCopy(null, s_13125224, NTI113);
      }
      else {
      if (((align_13125226 == 60) || (align_13125226 == 0))) {
      result_13125228 = nimCopy(null, (s_13125224 || []).concat(nsuRepeatChar(fill_13125227, chckRange(toFill_13125230, 0, 2147483647)) || []), NTI113);
      }
      else {
      if ((align_13125226 == 94)) {
      var half_13125231 = divInt(toFill_13125230, 2);
      result_13125228 = nimCopy(null, (nsuRepeatChar(fill_13125227, chckRange(half_13125231, 0, 2147483647)) || []).concat(s_13125224 || [],nsuRepeatChar(fill_13125227, chckRange(subInt(toFill_13125230, half_13125231), 0, 2147483647)) || []), NTI113);
      }
      else {
        result_13125228 = nimCopy(null, (nsuRepeatChar(fill_13125227, chckRange(toFill_13125230, 0, 2147483647)) || []).concat(s_13125224 || []), NTI113);
      }
      }}
    }
    

  return result_13125228;

}
function nsuToUpperAsciiChar(c_8245016) {
  var result_8245017 = 0;

    if ((ConstSet14[c_8245016] != undefined)) {
    result_8245017 = chckRange(subInt(c_8245016, 32), 0, 255);
    }
    else {
      result_8245017 = c_8245016;
    }
    

  return result_8245017;

}
function nsuToUpperAsciiStr(s_8250037) {
  var result_8250038 = [];

    result_8250038 = nimCopy(null, mnewString(chckRange((s_8250037).length, 0, 2147483647)), NTI113);
    L1: do {
      var iHEX60gensym11_8255009 = 0;
      var colontmp__13387686 = 0;
      colontmp__13387686 = subInt((s_8250037).length, 1);
      var res_13387687 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_13387687 <= colontmp__13387686)) break L3;
            iHEX60gensym11_8255009 = res_13387687;
            result_8250038[chckIndx(iHEX60gensym11_8255009, 0, (result_8250038).length-1)] = nsuToUpperAsciiChar(s_8250037[chckIndx(iHEX60gensym11_8255009, 0, (s_8250037).length-1)]);
            res_13387687 = addInt(res_13387687, 1);
          }
      } while(false);
    } while(false);

  return result_8250038;

}
function formatValue_15290001(result_15290004, result_15290004_Idx, value_15290005, specifier_15290006) {
    var Tmp1;

  BeforeRet: do {
    if (((specifier_15290006).length == 0)) {
    result_15290004[result_15290004_Idx].push.apply(result_15290004[result_15290004_Idx], cstrToNimstr(nimFloatToString(value_15290005)));;
    break BeforeRet;
    }
    
    var spec_15290007 = parseStandardFormatSpecifier_13125322(specifier_15290006, 0, false);
    var fmode_15290008 = 0;
    switch (spec_15290007.typ) {
    case 101:
    case 69:
      fmode_15290008 = 2;
      break;
    case 102:
    case 70:
      fmode_15290008 = 1;
      break;
    case 103:
    case 71:
      fmode_15290008 = 0;
      break;
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'e\', \'E\', \'f\', \'F\', \'g\', \'G\' but got: ") || []).concat([spec_15290007.typ]), parent: null, m_type: NTI6843, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    var f_15295002 = [nsuformatBiggestFloat(value_15290005, fmode_15290008, chckRange(spec_15290007.precision, -1, 32), 46)];
    var sign_15295003 = false;
    if ((0.0 <= value_15290005)) {
    if (!((spec_15290007.sign == 45))) {
    sign_15295003 = true;
    if ((value_15290005 == 0.0)) {
    if (((1.0000000000000000e+00 / value_15290005) == Infinity)) {
    insert_375401(f_15295002, 0, nimCharToStr(spec_15290007.sign), 0);
    }
    
    }
    else {
    insert_375401(f_15295002, 0, nimCharToStr(spec_15290007.sign), 0);
    }
    
    }
    
    }
    else {
      sign_15295003 = true;
    }
    
    if (spec_15290007.padWithZero) {
    var signStr_15295006 = [];
    if (sign_15295003) {
    signStr_15295006 = nimCopy(null, nimCharToStr(f_15295002[0][chckIndx(0, 0, (f_15295002[0]).length-1)]), NTI113);
    f_15295002[0] = nimCopy(null, HEX5BHEX5D_4275068(f_15295002[0], HEX2EHEX2E_4275001(1, 1)), NTI113);
    }
    
    var toFill_15305040 = subInt(subInt(spec_15290007.minimumWidth, (f_15295002[0]).length), (sign_15295003 ? 1:0));
    if ((0 < toFill_15305040)) {
    f_15295002[0] = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_15305040, 0, 2147483647)) || []).concat(f_15295002[0] || []), NTI113);
    }
    
    if (sign_15295003) {
    f_15295002[0] = nimCopy(null, (signStr_15295006 || []).concat(f_15295002[0] || []), NTI113);
    }
    
    }
    
    if ((spec_15290007.align == 0)) {
    Tmp1 = 62;
    }
    else {
    Tmp1 = spec_15290007.align;
    }
    
    var align_15305041 = Tmp1;
    var res_15305042 = alignString_13125222(f_15295002[0], spec_15290007.minimumWidth, align_15305041, spec_15290007.fill);
    if ((ConstSet13[spec_15290007.typ] != undefined)) {
    result_15290004[result_15290004_Idx].push.apply(result_15290004[result_15290004_Idx], nsuToUpperAsciiStr(res_15305042));;
    }
    else {
    result_15290004[result_15290004_Idx].push.apply(result_15290004[result_15290004_Idx], res_15305042);;
    }
    
  } while (false);

  
}
function nsuJoinSep(a_8920018, sep_8920019) {
  var result_8920020 = [];

    if ((0 < (a_8920018).length)) {
    var L_8925009 = mulInt((sep_8920019).length, subInt((a_8920018).length, 1));
    L1: do {
      var i_8925023 = 0;
      var colontmp__15825691 = 0;
      colontmp__15825691 = (a_8920018).length - 1;
      var res_15825692 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_15825692 <= colontmp__15825691)) break L3;
            i_8925023 = res_15825692;
            L_8925009 = addInt(L_8925009, (a_8920018[chckIndx(i_8925023, 0, (a_8920018).length-1)]).length);
            res_15825692 = addInt(res_15825692, 1);
          }
      } while(false);
    } while(false);
    result_8920020 = nimCopy(null, mnewString(0), NTI113);
    result_8920020.push.apply(result_8920020, a_8920018[chckIndx(0, 0, (a_8920018).length-1)]);;
    L4: do {
      var i_8925043 = 0;
      var colontmp__15825698 = 0;
      colontmp__15825698 = (a_8920018).length - 1;
      var res_15825699 = 1;
      L5: do {
          L6: while (true) {
          if (!(res_15825699 <= colontmp__15825698)) break L6;
            i_8925043 = res_15825699;
            result_8920020.push.apply(result_8920020, sep_8920019);;
            result_8920020.push.apply(result_8920020, a_8920018[chckIndx(i_8925043, 0, (a_8920018).length-1)]);;
            res_15825699 = addInt(res_15825699, 1);
          }
      } while(false);
    } while(false);
    }
    else {
      result_8920020 = nimCopy(null, [], NTI113);
    }
    

  return result_8920020;

}
function sectors2Json_15235614(x_15235623) {
  var result_15235624 = null;

    var cnt_15235626 = 0;
    var lenObj_15235759 = len_14930198(x_15235623);
    result_15235624 = {};
    L1: do {
      var k_15235767 = [];
      var v_15235768 = null;
      var L_15825636 = len_14930198(x_15235623);
      if ((0 < x_15235623.counter)) {
      var h_15825637 = x_15235623.first;
      L2: do {
          L3: while (true) {
          if (!(0 <= h_15825637)) break L3;
            var nxt_15825639 = x_15235623.data[chckIndx(h_15825637, 0, (x_15235623.data).length-1)].Field1;
            if (isFilled_10291218(x_15235623.data[chckIndx(h_15825637, 0, (x_15235623.data).length-1)].Field0)) {
            k_15235767 = x_15235623.data[chckIndx(h_15825637, 0, (x_15235623.data).length-1)].Field2;
            v_15235768 = x_15235623.data[chckIndx(h_15825637, 0, (x_15235623.data).length-1)].Field3;
            var oS_15235769 = {};
            oS_15235769["postalCode"] = (toJSStr(v_15235768.postalCode));
            oS_15235769["district"] = (toJSStr(v_15235768.district));
            oS_15235769["folkDistrict"] = (toJSStr(v_15235768.folkDistrict));
            oS_15235769["city"] = (toJSStr(v_15235768.city));
            oS_15235769["pFix"] = (v_15235768.pFix);
            oS_15235769["streets"] = {};
            L4: do {
              var kStr_15265244 = [];
              var vStr_15265245 = [];
              var L_15825632 = len_15255548(v_15235768.streets);
              if ((0 < v_15235768.streets.counter)) {
              var h_15825633 = v_15235768.streets.first;
              L5: do {
                  L6: while (true) {
                  if (!(0 <= h_15825633)) break L6;
                    var nxt_15825635 = v_15235768.streets.data[chckIndx(h_15825633, 0, (v_15235768.streets.data).length-1)].Field1;
                    if (isFilled_10291218(v_15235768.streets.data[chckIndx(h_15825633, 0, (v_15235768.streets.data).length-1)].Field0)) {
                    kStr_15265244 = v_15235768.streets.data[chckIndx(h_15825633, 0, (v_15235768.streets.data).length-1)].Field2;
                    vStr_15265245 = v_15235768.streets.data[chckIndx(h_15825633, 0, (v_15235768.streets.data).length-1)].Field3;
                    var seqLnk_15265298 = newSeq_15265256(0);
                    L7: do {
                      var strLnk_15275214 = null;
                      var strLnk_15275214_Idx = 0;
                      var i_15825629 = 0;
                      var L_15825630 = (vStr_15265245).length;
                      L8: do {
                          L9: while (true) {
                          if (!(i_15825629 < L_15825630)) break L9;
                            strLnk_15275214 = vStr_15265245; strLnk_15275214_Idx = chckIndx(i_15825629, 0, (vStr_15265245).length-1);
                            var lnkO_15275215 = {};
                            lnkO_15275215["linkId"] = (strLnk_15275214[strLnk_15275214_Idx].linkId);
                            lnkO_15275215["name"] = (toJSStr(strLnk_15275214[strLnk_15275214_Idx].name));
                            lnkO_15275215["cityId"] = (strLnk_15275214[strLnk_15275214_Idx].cityId);
                            lnkO_15275215["districtId"] = (strLnk_15275214[strLnk_15275214_Idx].districtId);
                            lnkO_15275215["postalCode"] = (toJSStr(strLnk_15275214[strLnk_15275214_Idx].postalCode));
                            lnkO_15275215["neighborLinks"] = (strLnk_15275214[strLnk_15275214_Idx].neighborLinks);
                            var gms_15285427 = newSeq_650232(0);
                            L10: do {
                              var g_15285435 = null;
                              var g_15285435_Idx = 0;
                              var i_15825625 = 0;
                              var L_15825626 = (strLnk_15275214[strLnk_15275214_Idx].geometry).length;
                              L11: do {
                                  L12: while (true) {
                                  if (!(i_15825625 < L_15825626)) break L12;
                                    g_15285435 = strLnk_15275214[strLnk_15275214_Idx].geometry; g_15285435_Idx = chckIndx(i_15825625, 0, (strLnk_15275214[strLnk_15275214_Idx].geometry).length-1);
                                    var lat_15285436 = g_15285435[g_15285435_Idx].lat;
                                    var lng_15285437 = g_15285435[g_15285435_Idx].lng;
                                    var fmtRes_15285441 = [mnewString(0)];
                                    formatValue_15290001(fmtRes_15285441, 0, lat_15285436, makeNimstrLit("0.5f"));
                                    var Tmp13 = nimCopy(null, fmtRes_15285441[0], NTI113);
                                    gms_15285427.push(Tmp13);;
                                    var fmtRes_15305087 = [mnewString(0)];
                                    formatValue_15290001(fmtRes_15305087, 0, lng_15285437, makeNimstrLit("0.5f"));
                                    var Tmp14 = nimCopy(null, fmtRes_15305087[0], NTI113);
                                    gms_15285427.push(Tmp14);;
                                    i_15825625 = addInt(i_15825625, 1);
                                    if (!(((strLnk_15275214[strLnk_15275214_Idx].geometry).length == L_15825626))) {
                                    failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                    }
                                    
                                  }
                              } while(false);
                            } while(false);
                            lnkO_15275215["geometry"] = (toJSStr(nsuJoinSep(gms_15285427, makeNimstrLit(","))));
                            lnkO_15275215["readOnly"] = (strLnk_15275214[strLnk_15275214_Idx].readOnly);
                            lnkO_15275215["addedToMap"] = (strLnk_15275214[strLnk_15275214_Idx].addedToMap);
                            lnkO_15275215["addedToSector"] = (strLnk_15275214[strLnk_15275214_Idx].addedToSector);
                            seqLnk_15265298.push(lnkO_15275215);;
                            i_15825629 = addInt(i_15825629, 1);
                            if (!(((vStr_15265245).length == L_15825630))) {
                            failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                            }
                            
                          }
                      } while(false);
                    } while(false);
                    oS_15235769["streets"][toJSStr(kStr_15265244)] = seqLnk_15265298;
                    if (!((len_15255548(v_15235768.streets) == L_15825632))) {
                    failedAssertImpl_115480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
                    }
                    
                    }
                    
                    h_15825633 = nxt_15825635;
                  }
              } while(false);
              }
              
            } while(false);
            oS_15235769["shownOnMap"] = (v_15235768.shownOnMap);
            oS_15235769["exclude"] = (v_15235768.exclude);
            result_15235624[toJSStr(k_15235767)] = oS_15235769;
            if (!((len_14930198(x_15235623) == L_15825636))) {
            failedAssertImpl_115480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_15825637 = nxt_15825639;
          }
      } while(false);
      }
      
    } while(false);

  return result_15235624;

}
function save_15316451() {
    if ((ministryArea_14700631[0] == null)) {
    ministryArea_14700631[0] = {name: nimCopy(null, nameArea_14700632[0], NTI113), cities: initOrderedTable_15316460(32)};
    }
    
    HEX5BHEX5DHEX3D_15325730(ministryArea_14700631[0].cities, addrCity_14710633[0], {allLinks: nimCopy(null, allLinks_14660629[0], NTI14631129), allStreets: nimCopy(null, allStreets_14670629[0], NTI14631152), cachedTiles: nimCopy(null, cachedTiles_14680629[0], NTI14631178), allSectors: nimCopy(null, allSectors_14690629[0], NTI14631201), lastPostfix: nimCopy(null, lastPostfix_14700629[0], NTI14631227)});
    var ser_15395696 = JSON.stringify(ministryArea_14700631[0]);
    var fname_15395697 = (addrCity_14710633[0] || []).concat(makeNimstrLit("_") || [],HEX24_13070125(now_12545371()) || [],makeNimstrLit(".json") || []);
    saveFunc_15095033(ser_15395696, fname_15395697);
    var citiesExp_15395698 = newJObject_11426266();
    var ministryAreaExp_15395699 = newJObject_11426266();
    add_11475223(ministryAreaExp_15395699, makeNimstrLit("name"), newJString_11426100(nameArea_14700632[0]));
    var allSectorsExp_15395701 = newJArray_11435657();
    L1: do {
      var k_15395709 = [];
      var v_15395710 = null;
      var L_15825570 = len_14930198(allSectors_14690629[0]);
      if ((0 < allSectors_14690629[0].counter)) {
      var h_15825571 = allSectors_14690629[0].first;
      L2: do {
          L3: while (true) {
          if (!(0 <= h_15825571)) break L3;
            var nxt_15825573 = allSectors_14690629[0].data[chckIndx(h_15825571, 0, (allSectors_14690629[0].data).length-1)].Field1;
            if (isFilled_10291218(allSectors_14690629[0].data[chckIndx(h_15825571, 0, (allSectors_14690629[0].data).length-1)].Field0)) {
            k_15395709 = allSectors_14690629[0].data[chckIndx(h_15825571, 0, (allSectors_14690629[0].data).length-1)].Field2;
            v_15395710 = allSectors_14690629[0].data[chckIndx(h_15825571, 0, (allSectors_14690629[0].data).length-1)].Field3;
            var s_15395711 = newJObject_11426266();
            add_11475223(s_15395711, makeNimstrLit("city"), newJString_11426100(v_15395710.city));
            add_11465020(allSectorsExp_15395701, s_15395711);
            if (!((len_14930198(allSectors_14690629[0]) == L_15825570))) {
            failedAssertImpl_115480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_15825571 = nxt_15825573;
          }
      } while(false);
      }
      
    } while(false);
    var fnameExp_15395714 = (addrCity_14710633[0] || []).concat(makeNimstrLit("_Exp_") || [],HEX24_13070125(now_12545371()) || [],makeNimstrLit(".json") || []);
    var strR_15395715 = sectors2Json_15235614(allSectors_14690629[0]);
    saveFunc_15095033(JSON.stringify(strR_15395715), fnameExp_15395714);

  
}
function setAttr_13425105(n_13425107, key_13425108, val_13425109) {
  BeforeRet: do {
    if (((n_13425107.attrs).length == 0)) {
    n_13425107.attrs = nimCopy(null, [key_13425108, val_13425109], NTI13425125);
    }
    else {
      L1: do {
        var i_13425138 = 0;
        var colontmp__15825705 = 0;
        colontmp__15825705 = subInt((n_13425107.attrs).length, 2);
        var res_15825706 = 0;
        L2: do {
            L3: while (true) {
            if (!(res_15825706 <= colontmp__15825705)) break L3;
              i_13425138 = res_15825706;
              if ((n_13425107.attrs[chckIndx(i_13425138, 0, (n_13425107.attrs).length-1)] == key_13425108)) {
              n_13425107.attrs[chckIndx(addInt(i_13425138, 1), 0, (n_13425107.attrs).length-1)] = val_13425109;
              break BeforeRet;
              }
              
              res_15825706 = addInt(res_15825706, 2);
            }
        } while(false);
      } while(false);
      n_13425107.attrs.push(key_13425108);;
      n_13425107.attrs.push(val_13425109);;
    }
    
  } while (false);

  
}
function rawGet_14955230(t_14955234, key_14955235, hc_14955236, hc_14955236_Idx) {
            var Tmp3;

  var result_14955237 = 0;

  BeforeRet: do {
    hc_14955236[hc_14955236_Idx] = hash_10270214(key_14955235);
    if ((hc_14955236[hc_14955236_Idx] == 0)) {
    hc_14955236[hc_14955236_Idx] = 314159265;
    }
    
    if (((t_14955234.data).length == 0)) {
    result_14955237 = -1;
    break BeforeRet;
    }
    
    var h_14965138 = (hc_14955236[hc_14955236_Idx] & (t_14955234.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_10291218(t_14955234.data[chckIndx(h_14965138, 0, (t_14955234.data).length-1)].Field0)) break L2;
            if (!(t_14955234.data[chckIndx(h_14965138, 0, (t_14955234.data).length-1)].Field0 == hc_14955236[hc_14955236_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_14955234.data[chckIndx(h_14965138, 0, (t_14955234.data).length-1)].Field2, key_14955235);            }          if (Tmp3) {
          result_14955237 = h_14965138;
          break BeforeRet;
          }
          
          h_14965138 = nextTry_10295014(h_14965138, (t_14955234.data).length - 1);
        }
    } while(false);
    result_14955237 = subInt(-1, h_14965138);
  } while (false);

  return result_14955237;

}
function HEX5BHEX5D_14955219(t_14955225, key_14955226) {
  var result_14955228 = null;
  var result_14955228_Idx = 0;

    var hcHEX60gensym92_14955229 = [0];
    var indexHEX60gensym92_14965656 = rawGet_14955230(t_14955225, key_14955226, hcHEX60gensym92_14955229, 0);
    if ((0 <= indexHEX60gensym92_14965656)) {
    result_14955228 = t_14955225.data[chckIndx(indexHEX60gensym92_14965656, 0, (t_14955225.data).length-1)]; result_14955228_Idx = "Field3";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_14955226 || []), parent: null, m_type: NTI6845, name: null, trace: [], up: null}, "KeyError");
    }
    

  return [result_14955228, result_14955228_Idx];

}
function rawGet_14995621(t_14995626, key_14995627, hc_14995628, hc_14995628_Idx) {
            var Tmp3;

  var result_14995629 = 0;

  BeforeRet: do {
    hc_14995628[hc_14995628_Idx] = hash_10270214(key_14995627);
    if ((hc_14995628[hc_14995628_Idx] == 0)) {
    hc_14995628[hc_14995628_Idx] = 314159265;
    }
    
    if (((t_14995626.data).length == 0)) {
    result_14995629 = -1;
    break BeforeRet;
    }
    
    var h_15005138 = (hc_14995628[hc_14995628_Idx] & (t_14995626.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_10291218(t_14995626.data[chckIndx(h_15005138, 0, (t_14995626.data).length-1)].Field0)) break L2;
            if (!(t_14995626.data[chckIndx(h_15005138, 0, (t_14995626.data).length-1)].Field0 == hc_14995628[hc_14995628_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_14995626.data[chckIndx(h_15005138, 0, (t_14995626.data).length-1)].Field2, key_14995627);            }          if (Tmp3) {
          result_14995629 = h_15005138;
          break BeforeRet;
          }
          
          h_15005138 = nextTry_10295014(h_15005138, (t_14995626.data).length - 1);
        }
    } while(false);
    result_14995629 = subInt(-1, h_15005138);
  } while (false);

  return result_14995629;

}
function mustRehash_15020601(t_15020604) {
  var result_15020605 = false;

    if (!((t_15020604.counter < (t_15020604.data).length))) {
    failedAssertImpl_115480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_15020605 = ((mulInt((t_15020604.data).length, 2) < mulInt(t_15020604.counter, 3)) || (subInt((t_15020604.data).length, t_15020604.counter) < 4));

  return result_15020605;

}
function rawInsert_15046359(t_15046365, data_15046368, data_15046368_Idx, key_15046369, val_15046371, hc_15046372, h_15046373) {
    data_15046368[data_15046368_Idx][chckIndx(h_15046373, 0, (data_15046368[data_15046368_Idx]).length-1)].Field2 = nimCopy(null, key_15046369, NTI113);
    data_15046368[data_15046368_Idx][chckIndx(h_15046373, 0, (data_15046368[data_15046368_Idx]).length-1)].Field3 = val_15046371;
    data_15046368[data_15046368_Idx][chckIndx(h_15046373, 0, (data_15046368[data_15046368_Idx]).length-1)].Field0 = hc_15046372;
    data_15046368[data_15046368_Idx][chckIndx(h_15046373, 0, (data_15046368[data_15046368_Idx]).length-1)].Field1 = -1;
    if ((t_15046365.first < 0)) {
    t_15046365.first = h_15046373;
    }
    
    if ((0 <= t_15046365.last)) {
    data_15046368[data_15046368_Idx][chckIndx(t_15046365.last, 0, (data_15046368[data_15046368_Idx]).length-1)].Field1 = h_15046373;
    }
    
    t_15046365.last = h_15046373;

  
}
function enlarge_15045180(t_15045186) {
          var Tmp6;
          var Tmp7;

    var n_15045194 = [];
    n_15045194 = new Array(chckRange(mulInt((t_15045186.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_15045186.data).length, 2), 0, 2147483647);++i) {n_15045194[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    var h_15045333 = t_15045186.first;
    t_15045186.first = -1;
    t_15045186.last = -1;
    var Tmp1 = t_15045186.data; t_15045186.data = n_15045194; n_15045194 = Tmp1;    L2: do {
        L3: while (true) {
        if (!(0 <= h_15045333)) break L3;
          var nxt_15045496 = n_15045194[chckIndx(h_15045333, 0, (n_15045194).length-1)].Field1;
          var eh_15045652 = n_15045194[chckIndx(h_15045333, 0, (n_15045194).length-1)].Field0;
          if (isFilled_10291218(eh_15045652)) {
          var j_15045659 = (eh_15045652 & (t_15045186.data).length - 1);
          L4: do {
              L5: while (true) {
              if (!isFilled_10291218(t_15045186.data[chckIndx(j_15045659, 0, (t_15045186.data).length-1)].Field0)) break L5;
                j_15045659 = nextTry_10295014(j_15045659, (t_15045186.data).length - 1);
              }
          } while(false);
          Tmp6 = n_15045194[chckIndx(h_15045333, 0, (n_15045194).length-1)].Field2;
          n_15045194[chckIndx(h_15045333, 0, (n_15045194).length-1)].Field2 = genericReset(n_15045194[chckIndx(h_15045333, 0, (n_15045194).length-1)].Field2, NTI113);
          Tmp7 = n_15045194[chckIndx(h_15045333, 0, (n_15045194).length-1)].Field3;
          n_15045194[chckIndx(h_15045333, 0, (n_15045194).length-1)].Field3 = genericReset(n_15045194[chckIndx(h_15045333, 0, (n_15045194).length-1)].Field3, NTI14631023);
          rawInsert_15046359(t_15045186, t_15045186, "data", Tmp6, Tmp7, n_15045194[chckIndx(h_15045333, 0, (n_15045194).length-1)].Field0, j_15045659);
          }
          
          h_15045333 = nxt_15045496;
        }
    } while(false);

  
}
function rawGetKnownHC_15047195(t_15047200, key_15047201, hc_15047202) {
  var result_15047203 = 0;

  BeforeRet: do {
    if (((t_15047200.data).length == 0)) {
    result_15047203 = -1;
    break BeforeRet;
    }
    
    var h_15050138 = (hc_15047202 & (t_15047200.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_10291218(t_15047200.data[chckIndx(h_15050138, 0, (t_15047200.data).length-1)].Field0)) break L2;
          if (((t_15047200.data[chckIndx(h_15050138, 0, (t_15047200.data).length-1)].Field0 == hc_15047202) && eqStrings(t_15047200.data[chckIndx(h_15050138, 0, (t_15047200.data).length-1)].Field2, key_15047201))) {
          result_15047203 = h_15050138;
          break BeforeRet;
          }
          
          h_15050138 = nextTry_10295014(h_15050138, (t_15047200.data).length - 1);
        }
    } while(false);
    result_15047203 = subInt(-1, h_15050138);
  } while (false);

  return result_15047203;

}
function HEX5BHEX5DHEX3D_14980347(t_14980353, key_14980354, val_14980356) {
    if (((t_14980353.data).length == 0)) {
    var correctSizeHEX60gensym71_14990001 = slotsNeeded_10295048(32);
    t_14980353.counter = 0;
    t_14980353.data = new Array(chckRange(correctSizeHEX60gensym71_14990001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym71_14990001, 0, 2147483647);++i) {t_14980353.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    t_14980353.first = -1;
    t_14980353.last = -1;
    }
    
    var hc_14995601 = [0];
    var index_15005641 = rawGet_14995621(t_14980353, key_14980354, hc_14995601, 0);
    if ((0 <= index_15005641)) {
    t_14980353.data[chckIndx(index_15005641, 0, (t_14980353.data).length-1)].Field3 = val_14980356;
    }
    else {
      if (((t_14980353.data).length == 0)) {
      var correctSizeHEX60gensym76_15015001 = slotsNeeded_10295048(32);
      t_14980353.counter = 0;
      t_14980353.data = new Array(chckRange(correctSizeHEX60gensym76_15015001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym76_15015001, 0, 2147483647);++i) {t_14980353.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}      t_14980353.first = -1;
      t_14980353.last = -1;
      }
      
      if (mustRehash_15020601(t_14980353)) {
      enlarge_15045180(t_14980353);
      index_15005641 = rawGetKnownHC_15047195(t_14980353, key_14980354, hc_14995601[0]);
      }
      
      index_15005641 = subInt(-1, index_15005641);
      rawInsert_15046359(t_14980353, t_14980353, "data", key_14980354, val_14980356, hc_14995601[0], index_15005641);
      t_14980353.counter = addInt(t_14980353.counter, 1);
    }
    

  
}
function rawGet_15050854(t_15050858, key_15050859, hc_15050860, hc_15050860_Idx) {
            var Tmp3;

  var result_15050861 = 0;

  BeforeRet: do {
    hc_15050860[hc_15050860_Idx] = hash_10270214(key_15050859);
    if ((hc_15050860[hc_15050860_Idx] == 0)) {
    hc_15050860[hc_15050860_Idx] = 314159265;
    }
    
    if (((t_15050858.data).length == 0)) {
    result_15050861 = -1;
    break BeforeRet;
    }
    
    var h_15060138 = (hc_15050860[hc_15050860_Idx] & (t_15050858.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_10291218(t_15050858.data[chckIndx(h_15060138, 0, (t_15050858.data).length-1)].Field0)) break L2;
            if (!(t_15050858.data[chckIndx(h_15060138, 0, (t_15050858.data).length-1)].Field0 == hc_15050860[hc_15050860_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_15050858.data[chckIndx(h_15060138, 0, (t_15050858.data).length-1)].Field2, key_15050859);            }          if (Tmp3) {
          result_15050861 = h_15060138;
          break BeforeRet;
          }
          
          h_15060138 = nextTry_10295014(h_15060138, (t_15050858.data).length - 1);
        }
    } while(false);
    result_15050861 = subInt(-1, h_15060138);
  } while (false);

  return result_15050861;

}
function HEX5BHEX5D_15050843(t_15050849, key_15050850) {
  var result_15050852 = null;
  var result_15050852_Idx = 0;

    var hcHEX60gensym92_15050853 = [0];
    var indexHEX60gensym92_15060626 = rawGet_15050854(t_15050849, key_15050850, hcHEX60gensym92_15050853, 0);
    if ((0 <= indexHEX60gensym92_15060626)) {
    result_15050852 = t_15050849.data[chckIndx(indexHEX60gensym92_15060626, 0, (t_15050849.data).length-1)]; result_15050852_Idx = "Field3";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_15050850 || []), parent: null, m_type: NTI6845, name: null, trace: [], up: null}, "KeyError");
    }
    

  return [result_15050852, result_15050852_Idx];

}
function id_14915026(s_14915028) {
  var result_14915029 = [];

    result_14915029 = nimCopy(null, (s_14915028.postalCode || []).concat(makeNimstrLit("-") || [],cstrToNimstr((s_14915028.pFix)+"") || []), NTI113);

  return result_14915029;

}
function name_14911057(s_14911059) {
    var Tmp1;

  var result_14911060 = [];

    if (!(eqStrings(s_14911059.folkDistrict, []))) {
    Tmp1 = s_14911059.folkDistrict;
    }
    else {
    Tmp1 = s_14911059.district;
    }
    
    result_14911060 = nimCopy(null, nucStrip(nsuJoinSep([(s_14911059.postalCode || []).concat(makeNimstrLit("-") || [],cstrToNimstr((s_14911059.pFix)+"") || []), nimCopy(null, s_14911059.city, NTI113), nimCopy(null, Tmp1, NTI113)], makeNimstrLit(" ")), true, true, unicodeSpaces_1844041), NTI113);

  return result_14911060;

}
function hash_14930041(x_14930043) {
  var result_14930044 = 0;

    result_14930044 = HEX21HEX26_10217270(hash_10270214(id_14915026(x_14930043)), hash_10270214(name_14911057(x_14930043)));
    result_14930044 = HEX21HEX24_10217305(result_14930044);

  return result_14930044;

}
function rawGet_14940378(t_14940382, key_14940383, hc_14940384, hc_14940384_Idx) {
            var Tmp3;

  var result_14940385 = 0;

  BeforeRet: do {
    hc_14940384[hc_14940384_Idx] = hash_14930041(key_14940383);
    if ((hc_14940384[hc_14940384_Idx] == 0)) {
    hc_14940384[hc_14940384_Idx] = 314159265;
    }
    
    if (((t_14940382.data).length == 0)) {
    result_14940385 = -1;
    break BeforeRet;
    }
    
    var h_14950138 = (hc_14940384[hc_14940384_Idx] & (t_14940382.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_10291218(t_14940382.data[chckIndx(h_14950138, 0, (t_14940382.data).length-1)].Field0)) break L2;
            if (!(t_14940382.data[chckIndx(h_14950138, 0, (t_14940382.data).length-1)].Field0 == hc_14940384[hc_14940384_Idx])) Tmp3 = false; else {              Tmp3 = (t_14940382.data[chckIndx(h_14950138, 0, (t_14940382.data).length-1)].Field1 == key_14940383);            }          if (Tmp3) {
          result_14940385 = h_14950138;
          break BeforeRet;
          }
          
          h_14950138 = nextTry_10295014(h_14950138, (t_14940382.data).length - 1);
        }
    } while(false);
    result_14940385 = subInt(-1, h_14950138);
  } while (false);

  return result_14940385;

}
function HEX5BHEX5D_14940367(t_14940373, key_14940374) {
  var result_14940376 = null;
  var result_14940376_Idx = 0;

    var hcHEX60gensym22_14940377 = [0];
    var indexHEX60gensym22_14950646 = rawGet_14940378(t_14940373, key_14940374, hcHEX60gensym22_14940377, 0);
    if ((0 <= indexHEX60gensym22_14950646)) {
    result_14940376 = t_14940373.data[chckIndx(indexHEX60gensym22_14950646, 0, (t_14940373.data).length-1)]; result_14940376_Idx = "Field2";
    }
    else {
      raiseException({message: makeNimstrLit("key not found"), parent: null, m_type: NTI6845, name: null, trace: [], up: null}, "KeyError");
    }
    

  return [result_14940376, result_14940376_Idx];

}
function removeAllSectorFromMap_14930062() {
            var Tmp5;
            var Tmp6;

    L1: do {
      var s_14940215 = null;
      var s_14940215_Idx = 0;
      var L_15825730 = len_14930198(allSectors_14690629[0]);
      if ((0 < allSectors_14690629[0].counter)) {
      var h_15825731 = allSectors_14690629[0].first;
      L2: do {
          L3: while (true) {
          if (!(0 <= h_15825731)) break L3;
            var nxt_15825733 = allSectors_14690629[0].data[chckIndx(h_15825731, 0, (allSectors_14690629[0].data).length-1)].Field1;
            if (isFilled_10291218(allSectors_14690629[0].data[chckIndx(h_15825731, 0, (allSectors_14690629[0].data).length-1)].Field0)) {
            s_14940215 = allSectors_14690629[0].data[chckIndx(h_15825731, 0, (allSectors_14690629[0].data).length-1)]; s_14940215_Idx = "Field3";
            s_14940215[s_14940215_Idx].shownOnMap = false;
++excHandler;
            Tmp5 = framePtr;
            try {
            (Tmp6 = HEX5BHEX5D_14940367(sectorGrp_14710629[0], s_14940215[s_14940215_Idx]), Tmp6)[0][Tmp6[1]].removeAll();
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp5;
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp5;
            }
            if (!((len_14930198(allSectors_14690629[0]) == L_15825730))) {
            failedAssertImpl_115480(makeNimstrLit("tables.nim(1787, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_15825731 = nxt_15825733;
          }
      } while(false);
      }
      
    } while(false);
    redraw_14200414(kxi_13647284[0]);

  
}
function load_14955065(d_14955067) {
    var Tmp2;
    var Tmp3;
            var Tmp8;
            var Tmp9;
            var Tmp10;

++excHandler;
    Tmp2 = framePtr;
    try {
    var city_14970028 = (Tmp3 = HEX5BHEX5D_14955219(d_14955067.cities, addrCity_14710633[0]), Tmp3)[0][Tmp3[1]];
    nimCopy(allLinks_14660629[0], city_14970028.allLinks, NTI14631129);
    nimCopy(allStreets_14670629[0], city_14970028.allStreets, NTI14631152);
    nimCopy(cachedTiles_14680629[0], city_14970028.cachedTiles, NTI14631178);
    L4: do {
      var k_14980229 = [];
      var v_14980230 = null;
      var L_15825716 = len_14930198(city_14970028.allSectors);
      if ((0 < city_14970028.allSectors.counter)) {
      var h_15825717 = city_14970028.allSectors.first;
      L5: do {
          L6: while (true) {
          if (!(0 <= h_15825717)) break L6;
            var nxt_15825719 = city_14970028.allSectors.data[chckIndx(h_15825717, 0, (city_14970028.allSectors.data).length-1)].Field1;
            if (isFilled_10291218(city_14970028.allSectors.data[chckIndx(h_15825717, 0, (city_14970028.allSectors.data).length-1)].Field0)) {
            k_14980229 = city_14970028.allSectors.data[chckIndx(h_15825717, 0, (city_14970028.allSectors.data).length-1)].Field2;
            v_14980230 = city_14970028.allSectors.data[chckIndx(h_15825717, 0, (city_14970028.allSectors.data).length-1)].Field3;
            HEX5BHEX5DHEX3D_14980347(allSectors_14690629[0], k_14980229, v_14980230);
++excHandler;
            Tmp8 = framePtr;
            try {
            (Tmp9 = HEX5BHEX5D_15050843(allSectors_14690629[0], k_14980229), Tmp9)[0][Tmp9[1]].folkDistrict = nimCopy(null, v_14980230.folkDistrict, NTI113);
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp8;
            (Tmp10 = HEX5BHEX5D_15050843(allSectors_14690629[0], k_14980229), Tmp10)[0][Tmp10[1]].folkDistrict = nimCopy(null, [], NTI113);
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp8;
            }
            if (!((len_14930198(city_14970028.allSectors) == L_15825716))) {
            failedAssertImpl_115480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_15825717 = nxt_15825719;
          }
      } while(false);
      }
      
    } while(false);
    nimCopy(lastPostfix_14700629[0], city_14970028.lastPostfix, NTI14631227);
    redraw_14200414(kxi_13647284[0]);
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
    framePtr = Tmp2;
    window.alert(("Сначала кликнуть по городу на карте\n с каким надо работать."));
    lastJSError = prevJSError;
    } finally {
    framePtr = Tmp2;
    }
    removeAllSectorFromMap_14930062();

  
}
function hasKey_15615239(t_15615244, key_15615245) {
  var result_15615246 = false;

    var hc_15615247 = [0];
    result_15615246 = (0 <= rawGet_14855602(t_15615244, key_15615245, hc_15615247, 0));

  return result_15615246;

}
function HEX5BHEX5D_15615420(t_15615426, key_15615427) {
  var result_15615429 = null;
  var result_15615429_Idx = 0;

    var hcHEX60gensym22_15615430 = [0];
    var indexHEX60gensym22_15615439 = rawGet_14855602(t_15615426, key_15615427, hcHEX60gensym22_15615430, 0);
    if ((0 <= indexHEX60gensym22_15615439)) {
    result_15615429 = t_15615426.data[chckIndx(indexHEX60gensym22_15615439, 0, (t_15615426.data).length-1)]; result_15615429_Idx = "Field2";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(cstrToNimstr((key_15615427)+"") || []), parent: null, m_type: NTI6845, name: null, trace: [], up: null}, "KeyError");
    }
    

  return [result_15615429, result_15615429_Idx];

}
function runeLenAt_948128(s_948130, i_948131) {
  var result_948132 = 0;

    if ((s_948130[chckIndx(i_948131, 0, (s_948130).length-1)] <= 127)) {
    result_948132 = 1;
    }
    else {
    if ((((s_948130[chckIndx(i_948131, 0, (s_948130).length-1)] >>> 0) >>> 5) == 6)) {
    result_948132 = 2;
    }
    else {
    if ((((s_948130[chckIndx(i_948131, 0, (s_948130).length-1)] >>> 0) >>> 4) == 14)) {
    result_948132 = 3;
    }
    else {
    if ((((s_948130[chckIndx(i_948131, 0, (s_948130).length-1)] >>> 0) >>> 3) == 30)) {
    result_948132 = 4;
    }
    else {
    if ((((s_948130[chckIndx(i_948131, 0, (s_948130).length-1)] >>> 0) >>> 2) == 62)) {
    result_948132 = 5;
    }
    else {
    if ((((s_948130[chckIndx(i_948131, 0, (s_948130).length-1)] >>> 0) >>> 1) == 126)) {
    result_948132 = 6;
    }
    else {
      result_948132 = 1;
    }
    }}}}}

  return result_948132;

}
function runeOffset_1570259(s_1570261, pos_1570262, start_1570263) {
  var result_1570264 = 0;

  BeforeRet: do {
    var i_1570266 = 0;
    var o_1570267 = start_1570263;
    L1: do {
        L2: while (true) {
        if (!(i_1570266 < pos_1570262)) break L2;
          o_1570267 = addInt(o_1570267, chckRange(runeLenAt_948128(s_1570261, o_1570267), 0, 2147483647));
          if (((s_1570261).length <= o_1570267)) {
          result_1570264 = -1;
          break BeforeRet;
          }
          
          i_1570266 = addInt(i_1570266, 1);
        }
    } while(false);
    result_1570264 = o_1570267;
    break BeforeRet;
  } while (false);

  return result_1570264;

}
function formatValue_13170080(result_13170083, result_13170083_Idx, value_13170084, specifier_13170085) {
    var spec_13170086 = parseStandardFormatSpecifier_13125322(specifier_13170085, 0, false);
    var value_13170087 = nimCopy(null, value_13170084, NTI113);
    switch (spec_13170086.typ) {
    case 115:
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for string, expected \'s\', but got ") || []).concat([spec_13170086.typ]), parent: null, m_type: NTI6843, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    if (!((spec_13170086.precision == -1))) {
    if ((spec_13170086.precision < nucruneLen(value_13170087))) {
    (value_13170087.length = chckRange(runeOffset_1570259(value_13170087, chckRange(spec_13170086.precision, 0, 2147483647), 0), 0, 2147483647));
    }
    
    }
    
    result_13170083[result_13170083_Idx].push.apply(result_13170083[result_13170083_Idx], alignString_13125222(value_13170087, spec_13170086.minimumWidth, spec_13170086.align, spec_13170086.fill));;

  
}
function toHexImpl_8575241(x_8575243, len_8575244, handleNegative_8575245) {
  var result_8575246 = [];

    var n_8575248 = x_8575243;
    result_8575246 = nimCopy(null, mnewString(len_8575244), NTI113);
    L1: do {
      var j_8575255 = 0;
      var colontmp__15825753 = 0;
      colontmp__15825753 = subInt(len_8575244, 1);
      var res_15825758 = colontmp__15825753;
      L2: do {
          L3: while (true) {
          if (!(0 <= res_15825758)) break L3;
            j_8575255 = res_15825758;
            result_8575246[chckIndx(j_8575255, 0, (result_8575246).length-1)] = makeNimstrLit("0123456789ABCDEF")[chckIndx((n_8575248 & 15), 0, (makeNimstrLit("0123456789ABCDEF")).length-1)];
            n_8575248 = ((n_8575248 >>> 0) >>> 4);
            if (((n_8575248 == 0) && handleNegative_8575245)) {
            n_8575248 = 4294967295;
            }
            
            res_15825758 = subInt(res_15825758, 1);
          }
      } while(false);
    } while(false);

  return result_8575246;

}
function toHex_9035145(x_9035148, len_9035149) {
  var result_9035150 = [];

    result_9035150 = nimCopy(null, toHexImpl_8575241((x_9035148 >>> 0), len_9035149, (x_9035148 < 0)), NTI113);

  return result_9035150;

}
function encodeUrl_9961140(s_9961142, usePlus_9961143) {
    var Tmp1;

  var result_9961144 = [];

    result_9961144 = nimCopy(null, mnewString(0), NTI113);
    if (usePlus_9961143) {
    Tmp1 = makeNimstrLit("+");
    }
    else {
    Tmp1 = makeNimstrLit("%20");
    }
    
    var fromSpace_9961152 = nimCopy(null, Tmp1, NTI113);
    L2: do {
      var c_9961154 = 0;
      var i_15825748 = 0;
      var L_15825749 = (s_9961142).length;
      L3: do {
          L4: while (true) {
          if (!(i_15825748 < L_15825749)) break L4;
            c_9961154 = s_9961142[chckIndx(i_15825748, 0, (s_9961142).length-1)];
            switch (c_9961154) {
            case 97:
            case 98:
            case 99:
            case 100:
            case 101:
            case 102:
            case 103:
            case 104:
            case 105:
            case 106:
            case 107:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
            case 113:
            case 114:
            case 115:
            case 116:
            case 117:
            case 118:
            case 119:
            case 120:
            case 121:
            case 122:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 45:
            case 46:
            case 95:
            case 126:
              addChar(result_9961144, c_9961154);;
              break;
            case 32:
              result_9961144.push.apply(result_9961144, fromSpace_9961152);;
              break;
            default: 
              addChar(result_9961144, 37);;
              result_9961144.push.apply(result_9961144, toHex_9035145(c_9961154, 2));;
              break;
            }
            i_15825748 = addInt(i_15825748, 1);
            if (!(((s_9961142).length == L_15825749))) {
            failedAssertImpl_115480(makeNimstrLit("iterators.nim(222, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);

  return result_9961144;

}
function rawGet_15465621(t_15465626, key_15465627, hc_15465628, hc_15465628_Idx) {
            var Tmp3;

  var result_15465629 = 0;

  BeforeRet: do {
    hc_15465628[hc_15465628_Idx] = hash_10270214(key_15465627);
    if ((hc_15465628[hc_15465628_Idx] == 0)) {
    hc_15465628[hc_15465628_Idx] = 314159265;
    }
    
    if (((t_15465626.data).length == 0)) {
    result_15465629 = -1;
    break BeforeRet;
    }
    
    var h_15475138 = (hc_15465628[hc_15465628_Idx] & (t_15465626.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_10291218(t_15465626.data[chckIndx(h_15475138, 0, (t_15465626.data).length-1)].Field0)) break L2;
            if (!(t_15465626.data[chckIndx(h_15475138, 0, (t_15465626.data).length-1)].Field0 == hc_15465628[hc_15465628_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_15465626.data[chckIndx(h_15475138, 0, (t_15465626.data).length-1)].Field2, key_15465627);            }          if (Tmp3) {
          result_15465629 = h_15475138;
          break BeforeRet;
          }
          
          h_15475138 = nextTry_10295014(h_15475138, (t_15465626.data).length - 1);
        }
    } while(false);
    result_15465629 = subInt(-1, h_15475138);
  } while (false);

  return result_15465629;

}
function mustRehash_15490601(t_15490604) {
  var result_15490605 = false;

    if (!((t_15490604.counter < (t_15490604.data).length))) {
    failedAssertImpl_115480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_15490605 = ((mulInt((t_15490604.data).length, 2) < mulInt(t_15490604.counter, 3)) || (subInt((t_15490604.data).length, t_15490604.counter) < 4));

  return result_15490605;

}
function rawInsert_15516359(t_15516365, data_15516368, data_15516368_Idx, key_15516369, val_15516371, hc_15516372, h_15516373) {
    data_15516368[data_15516368_Idx][chckIndx(h_15516373, 0, (data_15516368[data_15516368_Idx]).length-1)].Field2 = nimCopy(null, key_15516369, NTI113);
    data_15516368[data_15516368_Idx][chckIndx(h_15516373, 0, (data_15516368[data_15516368_Idx]).length-1)].Field3 = nimCopy(null, val_15516371, NTI14631062);
    data_15516368[data_15516368_Idx][chckIndx(h_15516373, 0, (data_15516368[data_15516368_Idx]).length-1)].Field0 = hc_15516372;
    data_15516368[data_15516368_Idx][chckIndx(h_15516373, 0, (data_15516368[data_15516368_Idx]).length-1)].Field1 = -1;
    if ((t_15516365.first < 0)) {
    t_15516365.first = h_15516373;
    }
    
    if ((0 <= t_15516365.last)) {
    data_15516368[data_15516368_Idx][chckIndx(t_15516365.last, 0, (data_15516368[data_15516368_Idx]).length-1)].Field1 = h_15516373;
    }
    
    t_15516365.last = h_15516373;

  
}
function enlarge_15515180(t_15515186) {
          var Tmp6;
          var Tmp7;

    var n_15515194 = [];
    n_15515194 = new Array(chckRange(mulInt((t_15515186.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_15515186.data).length, 2), 0, 2147483647);++i) {n_15515194[i]={Field0: 0, Field1: 0, Field2: [], Field3: []};}    var h_15515333 = t_15515186.first;
    t_15515186.first = -1;
    t_15515186.last = -1;
    var Tmp1 = t_15515186.data; t_15515186.data = n_15515194; n_15515194 = Tmp1;    L2: do {
        L3: while (true) {
        if (!(0 <= h_15515333)) break L3;
          var nxt_15515496 = n_15515194[chckIndx(h_15515333, 0, (n_15515194).length-1)].Field1;
          var eh_15515652 = n_15515194[chckIndx(h_15515333, 0, (n_15515194).length-1)].Field0;
          if (isFilled_10291218(eh_15515652)) {
          var j_15515659 = (eh_15515652 & (t_15515186.data).length - 1);
          L4: do {
              L5: while (true) {
              if (!isFilled_10291218(t_15515186.data[chckIndx(j_15515659, 0, (t_15515186.data).length-1)].Field0)) break L5;
                j_15515659 = nextTry_10295014(j_15515659, (t_15515186.data).length - 1);
              }
          } while(false);
          Tmp6 = n_15515194[chckIndx(h_15515333, 0, (n_15515194).length-1)].Field2;
          n_15515194[chckIndx(h_15515333, 0, (n_15515194).length-1)].Field2 = genericReset(n_15515194[chckIndx(h_15515333, 0, (n_15515194).length-1)].Field2, NTI113);
          Tmp7 = n_15515194[chckIndx(h_15515333, 0, (n_15515194).length-1)].Field3;
          n_15515194[chckIndx(h_15515333, 0, (n_15515194).length-1)].Field3 = genericReset(n_15515194[chckIndx(h_15515333, 0, (n_15515194).length-1)].Field3, NTI14631062);
          rawInsert_15516359(t_15515186, t_15515186, "data", Tmp6, Tmp7, n_15515194[chckIndx(h_15515333, 0, (n_15515194).length-1)].Field0, j_15515659);
          }
          
          h_15515333 = nxt_15515496;
        }
    } while(false);

  
}
function rawGetKnownHC_15517195(t_15517200, key_15517201, hc_15517202) {
  var result_15517203 = 0;

  BeforeRet: do {
    if (((t_15517200.data).length == 0)) {
    result_15517203 = -1;
    break BeforeRet;
    }
    
    var h_15520138 = (hc_15517202 & (t_15517200.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_10291218(t_15517200.data[chckIndx(h_15520138, 0, (t_15517200.data).length-1)].Field0)) break L2;
          if (((t_15517200.data[chckIndx(h_15520138, 0, (t_15517200.data).length-1)].Field0 == hc_15517202) && eqStrings(t_15517200.data[chckIndx(h_15520138, 0, (t_15517200.data).length-1)].Field2, key_15517201))) {
          result_15517203 = h_15520138;
          break BeforeRet;
          }
          
          h_15520138 = nextTry_10295014(h_15520138, (t_15517200.data).length - 1);
        }
    } while(false);
    result_15517203 = subInt(-1, h_15520138);
  } while (false);

  return result_15517203;

}
function hasKeyOrPut_15450085(t_15450091, key_15450092, val_15450093) {
  var result_15450094 = false;

    if (((t_15450091.data).length == 0)) {
    var correctSizeHEX60gensym156_15460001 = slotsNeeded_10295048(32);
    t_15450091.counter = 0;
    t_15450091.data = new Array(chckRange(correctSizeHEX60gensym156_15460001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym156_15460001, 0, 2147483647);++i) {t_15450091.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: []};}    t_15450091.first = -1;
    t_15450091.last = -1;
    }
    
    var hc_15465601 = [0];
    var index_15475656 = rawGet_15465621(t_15450091, key_15450092, hc_15465601, 0);
    if ((index_15475656 < 0)) {
    result_15450094 = false;
    if (((t_15450091.data).length == 0)) {
    var correctSizeHEX60gensym161_15485001 = slotsNeeded_10295048(32);
    t_15450091.counter = 0;
    t_15450091.data = new Array(chckRange(correctSizeHEX60gensym161_15485001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym161_15485001, 0, 2147483647);++i) {t_15450091.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: []};}    t_15450091.first = -1;
    t_15450091.last = -1;
    }
    
    if (mustRehash_15490601(t_15450091)) {
    enlarge_15515180(t_15450091);
    index_15475656 = rawGetKnownHC_15517195(t_15450091, key_15450092, hc_15465601[0]);
    }
    
    index_15475656 = subInt(-1, index_15475656);
    rawInsert_15516359(t_15450091, t_15450091, "data", key_15450092, val_15450093, hc_15465601[0], index_15475656);
    t_15450091.counter = addInt(t_15450091.counter, 1);
    }
    else {
      result_15450094 = true;
    }
    

  return result_15450094;

}
function rawGet_15436323(t_15436327, key_15436328, hc_15436329, hc_15436329_Idx) {
            var Tmp3;

  var result_15436330 = 0;

  BeforeRet: do {
    hc_15436329[hc_15436329_Idx] = hash_10270214(key_15436328);
    if ((hc_15436329[hc_15436329_Idx] == 0)) {
    hc_15436329[hc_15436329_Idx] = 314159265;
    }
    
    if (((t_15436327.data).length == 0)) {
    result_15436330 = -1;
    break BeforeRet;
    }
    
    var h_15445138 = (hc_15436329[hc_15436329_Idx] & (t_15436327.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_10291218(t_15436327.data[chckIndx(h_15445138, 0, (t_15436327.data).length-1)].Field0)) break L2;
            if (!(t_15436327.data[chckIndx(h_15445138, 0, (t_15436327.data).length-1)].Field0 == hc_15436329[hc_15436329_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_15436327.data[chckIndx(h_15445138, 0, (t_15436327.data).length-1)].Field2, key_15436328);            }          if (Tmp3) {
          result_15436330 = h_15445138;
          break BeforeRet;
          }
          
          h_15445138 = nextTry_10295014(h_15445138, (t_15436327.data).length - 1);
        }
    } while(false);
    result_15436330 = subInt(-1, h_15445138);
  } while (false);

  return result_15436330;

}
function HEX5BHEX5D_15436312(t_15436318, key_15436319) {
  var result_15436321 = null;
  var result_15436321_Idx = 0;

    var hcHEX60gensym92_15436322 = [0];
    var indexHEX60gensym92_15445641 = rawGet_15436323(t_15436318, key_15436319, hcHEX60gensym92_15436322, 0);
    if ((0 <= indexHEX60gensym92_15445641)) {
    result_15436321 = t_15436318.data[chckIndx(indexHEX60gensym92_15445641, 0, (t_15436318.data).length-1)]; result_15436321_Idx = "Field3";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_15436319 || []), parent: null, m_type: NTI6845, name: null, trace: [], up: null}, "KeyError");
    }
    

  return [result_15436321, result_15436321_Idx];

}
function del_15675324(t_15675330, key_15675331) {
            var Tmp4;
            var Tmp5;

  BeforeRet: do {
    if ((t_15675330.counter == 0)) {
    break BeforeRet;
    }
    
    var n_15675339 = [];
    n_15675339 = new Array(chckRange((t_15675330.data).length, 0, 2147483647)); for (var i=0;i<chckRange((t_15675330.data).length, 0, 2147483647);++i) {n_15675339[i]={Field0: 0, Field1: 0, Field2: [], Field3: []};}    var h_15675478 = t_15675330.first;
    t_15675330.first = -1;
    t_15675330.last = -1;
    var Tmp1 = t_15675330.data; t_15675330.data = n_15675339; n_15675339 = Tmp1;    var resHEX60gensym197_15680001 = 0;
    resHEX60gensym197_15680001 = hash_10270214(key_15675331);
    if ((resHEX60gensym197_15680001 == 0)) {
    resHEX60gensym197_15680001 = 314159265;
    }
    
    var hc_15685004 = resHEX60gensym197_15680001;
    L2: do {
        L3: while (true) {
        if (!(0 <= h_15675478)) break L3;
          var nxt_15685160 = n_15675339[chckIndx(h_15675478, 0, (n_15675339).length-1)].Field1;
          if (isFilled_10291218(n_15675339[chckIndx(h_15675478, 0, (n_15675339).length-1)].Field0)) {
          if (((n_15675339[chckIndx(h_15675478, 0, (n_15675339).length-1)].Field0 == hc_15685004) && eqStrings(n_15675339[chckIndx(h_15675478, 0, (n_15675339).length-1)].Field2, key_15675331))) {
          t_15675330.counter = subInt(t_15675330.counter, 1);
          }
          else {
            var j_15685971 = subInt(-1, rawGetKnownHC_15517195(t_15675330, n_15675339[chckIndx(h_15675478, 0, (n_15675339).length-1)].Field2, n_15675339[chckIndx(h_15675478, 0, (n_15675339).length-1)].Field0));
            Tmp4 = n_15675339[chckIndx(h_15675478, 0, (n_15675339).length-1)].Field2;
            n_15675339[chckIndx(h_15675478, 0, (n_15675339).length-1)].Field2 = genericReset(n_15675339[chckIndx(h_15675478, 0, (n_15675339).length-1)].Field2, NTI113);
            Tmp5 = n_15675339[chckIndx(h_15675478, 0, (n_15675339).length-1)].Field3;
            n_15675339[chckIndx(h_15675478, 0, (n_15675339).length-1)].Field3 = genericReset(n_15675339[chckIndx(h_15675478, 0, (n_15675339).length-1)].Field3, NTI14631062);
            rawInsert_15516359(t_15675330, t_15675330, "data", Tmp4, Tmp5, n_15675339[chckIndx(h_15675478, 0, (n_15675339).length-1)].Field0, j_15685971);
          }
          
          }
          
          h_15675478 = nxt_15685160;
        }
    } while(false);
  } while (false);

  
}
function rawGet_14915209(t_14915213, key_14915214, hc_14915215, hc_14915215_Idx) {
            var Tmp3;

  var result_14915216 = 0;

  BeforeRet: do {
    hc_14915215[hc_14915215_Idx] = hash_10270214(key_14915214);
    if ((hc_14915215[hc_14915215_Idx] == 0)) {
    hc_14915215[hc_14915215_Idx] = 314159265;
    }
    
    if (((t_14915213.data).length == 0)) {
    result_14915216 = -1;
    break BeforeRet;
    }
    
    var h_14925138 = (hc_14915215[hc_14915215_Idx] & (t_14915213.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_10291218(t_14915213.data[chckIndx(h_14925138, 0, (t_14915213.data).length-1)].Field0)) break L2;
            if (!(t_14915213.data[chckIndx(h_14925138, 0, (t_14915213.data).length-1)].Field0 == hc_14915215[hc_14915215_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_14915213.data[chckIndx(h_14925138, 0, (t_14915213.data).length-1)].Field1, key_14915214);            }          if (Tmp3) {
          result_14915216 = h_14925138;
          break BeforeRet;
          }
          
          h_14925138 = nextTry_10295014(h_14925138, (t_14915213.data).length - 1);
        }
    } while(false);
    result_14915216 = subInt(-1, h_14925138);
  } while (false);

  return result_14915216;

}
function HEX5BHEX5D_14915198(t_14915204, key_14915205) {
  var result_14915207 = null;
  var result_14915207_Idx = 0;

    var hcHEX60gensym22_14915208 = [0];
    var indexHEX60gensym22_14925626 = rawGet_14915209(t_14915204, key_14915205, hcHEX60gensym22_14915208, 0);
    if ((0 <= indexHEX60gensym22_14925626)) {
    result_14915207 = t_14915204.data[chckIndx(indexHEX60gensym22_14925626, 0, (t_14915204.data).length-1)]; result_14915207_Idx = "Field2";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_14915205 || []), parent: null, m_type: NTI6845, name: null, trace: [], up: null}, "KeyError");
    }
    

  return [result_14915207, result_14915207_Idx];

}
function del_15521123(t_15521129, key_15521130) {
            var Tmp4;
            var Tmp5;

  BeforeRet: do {
    if ((t_15521129.counter == 0)) {
    break BeforeRet;
    }
    
    var n_15521138 = [];
    n_15521138 = new Array(chckRange((t_15521129.data).length, 0, 2147483647)); for (var i=0;i<chckRange((t_15521129.data).length, 0, 2147483647);++i) {n_15521138[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    var h_15521277 = t_15521129.first;
    t_15521129.first = -1;
    t_15521129.last = -1;
    var Tmp1 = t_15521129.data; t_15521129.data = n_15521138; n_15521138 = Tmp1;    var resHEX60gensym169_15525001 = 0;
    resHEX60gensym169_15525001 = hash_10270214(key_15521130);
    if ((resHEX60gensym169_15525001 == 0)) {
    resHEX60gensym169_15525001 = 314159265;
    }
    
    var hc_15530004 = resHEX60gensym169_15525001;
    L2: do {
        L3: while (true) {
        if (!(0 <= h_15521277)) break L3;
          var nxt_15530160 = n_15521138[chckIndx(h_15521277, 0, (n_15521138).length-1)].Field1;
          if (isFilled_10291218(n_15521138[chckIndx(h_15521277, 0, (n_15521138).length-1)].Field0)) {
          if (((n_15521138[chckIndx(h_15521277, 0, (n_15521138).length-1)].Field0 == hc_15530004) && eqStrings(n_15521138[chckIndx(h_15521277, 0, (n_15521138).length-1)].Field2, key_15521130))) {
          t_15521129.counter = subInt(t_15521129.counter, 1);
          }
          else {
            var j_15530971 = subInt(-1, rawGetKnownHC_15047195(t_15521129, n_15521138[chckIndx(h_15521277, 0, (n_15521138).length-1)].Field2, n_15521138[chckIndx(h_15521277, 0, (n_15521138).length-1)].Field0));
            Tmp4 = n_15521138[chckIndx(h_15521277, 0, (n_15521138).length-1)].Field2;
            n_15521138[chckIndx(h_15521277, 0, (n_15521138).length-1)].Field2 = genericReset(n_15521138[chckIndx(h_15521277, 0, (n_15521138).length-1)].Field2, NTI113);
            Tmp5 = n_15521138[chckIndx(h_15521277, 0, (n_15521138).length-1)].Field3;
            n_15521138[chckIndx(h_15521277, 0, (n_15521138).length-1)].Field3 = genericReset(n_15521138[chckIndx(h_15521277, 0, (n_15521138).length-1)].Field3, NTI14631023);
            rawInsert_15046359(t_15521129, t_15521129, "data", Tmp4, Tmp5, n_15521138[chckIndx(h_15521277, 0, (n_15521138).length-1)].Field0, j_15530971);
          }
          
          }
          
          h_15521277 = nxt_15530160;
        }
    } while(false);
  } while (false);

  
}
function len_15415152(t_15415157) {
  var result_15415158 = 0;

    result_15415158 = t_15415157.counter;

  return result_15415158;

}
function hasKey_15430110(t_15430115, key_15430116) {
  var result_15430117 = false;

    var hc_15430118 = [0];
    result_15430117 = (0 <= rawGet_14995621(t_15430115, key_15430116, hc_15430118, 0));

  return result_15430117;

}
function reindexSect_15415014() {
                              var Tmp10;
                            var Tmp11;
                            var Tmp12;
                            var Tmp13;
                              var Tmp15;
                                    var Tmp18;
                                    var Tmp19;
                                    var Tmp20;
                                    var Tmp21;

    var moved_15415016 = true;
    L1: do {
        L2: while (true) {
        if (!moved_15415016) break L2;
          moved_15415016 = false;
          L3: do {
            var k_15425245 = [];
            var val_15425246 = null;
            var val_15425246_Idx = 0;
            var L_15825809 = len_15415152(lastPostfix_14700629[0]);
            L4: do {
              var h_15825811 = 0;
              var colontmp__15825812 = 0;
              colontmp__15825812 = (lastPostfix_14700629[0].data).length - 1;
              var res_15825813 = 0;
              L5: do {
                  L6: while (true) {
                  if (!(res_15825813 <= colontmp__15825812)) break L6;
                    h_15825811 = res_15825813;
                    if (isFilled_10291218(lastPostfix_14700629[0].data[chckIndx(h_15825811, 0, (lastPostfix_14700629[0].data).length-1)].Field0)) {
                    k_15425245 = lastPostfix_14700629[0].data[chckIndx(h_15825811, 0, (lastPostfix_14700629[0].data).length-1)].Field1;
                    val_15425246 = lastPostfix_14700629[0].data[chckIndx(h_15825811, 0, (lastPostfix_14700629[0].data).length-1)]; val_15425246_Idx = "Field2";
                    L7: do {
                      var v_15425253 = 0;
                      var res_15825797 = val_15425246[val_15425246_Idx];
                      L8: do {
                          L9: while (true) {
                          if (!(1 <= res_15825797)) break L9;
                            v_15425253 = res_15825797;
                            var fromSect_15425254 = (k_15425245 || []).concat(makeNimstrLit("-") || [],cstrToNimstr((v_15425253)+"") || []);
                            var prevV_15425255 = subInt(v_15425253, 1);
                            var toSect_15425256 = (k_15425245 || []).concat(makeNimstrLit("-") || [],cstrToNimstr((prevV_15425255)+"") || []);
                              if (!!((prevV_15425255 == 0))) Tmp10 = false; else {                                Tmp10 = !(hasKey_15430110(allSectors_14690629[0], toSect_15425256));                              }                            if (Tmp10) {
                            moved_15415016 = true;
                            HEX5BHEX5DHEX3D_14980347(allSectors_14690629[0], toSect_15425256, {postalCode: [], district: [], folkDistrict: [], city: [], pFix: 0, streets: ({data: [], counter: 0, first: 0, last: 0}), shownOnMap: false, exclude: false});
                            (Tmp11 = HEX5BHEX5D_15050843(allSectors_14690629[0], toSect_15425256), Tmp11)[0][Tmp11[1]] = (Tmp12 = HEX5BHEX5D_15050843(allSectors_14690629[0], fromSect_15425254), Tmp12)[0][Tmp12[1]];
                            (Tmp13 = HEX5BHEX5D_15050843(allSectors_14690629[0], toSect_15425256), Tmp13)[0][Tmp13[1]].pFix = prevV_15425255;
                            L14: do {
                              var name_15435979 = [];
                              var mV_15435980 = [];
                              var colontmp__15825792 = ({data: [], counter: 0, first: 0, last: 0});
                              nimCopy(colontmp__15825792, (Tmp15 = HEX5BHEX5D_15050843(allSectors_14690629[0], fromSect_15425254), Tmp15)[0][Tmp15[1]].streets, NTI14631070);
                              var L_15825793 = len_15255548(colontmp__15825792);
                              if ((0 < colontmp__15825792.counter)) {
                              var h_15825794 = colontmp__15825792.first;
                              L16: do {
                                  L17: while (true) {
                                  if (!(0 <= h_15825794)) break L17;
                                    var nxt_15825796 = colontmp__15825792.data[chckIndx(h_15825794, 0, (colontmp__15825792.data).length-1)].Field1;
                                    if (isFilled_10291218(colontmp__15825792.data[chckIndx(h_15825794, 0, (colontmp__15825792.data).length-1)].Field0)) {
                                    name_15435979 = colontmp__15825792.data[chckIndx(h_15825794, 0, (colontmp__15825792.data).length-1)].Field2;
                                    mV_15435980 = colontmp__15825792.data[chckIndx(h_15825794, 0, (colontmp__15825792.data).length-1)].Field3;
                                    var _ = hasKeyOrPut_15450085((Tmp18 = HEX5BHEX5D_15050843(allSectors_14690629[0], toSect_15425256), Tmp18)[0][Tmp18[1]].streets, name_15435979, (Tmp19 = HEX5BHEX5D_15436312(allStreets_14670629[0], name_15435979), Tmp19)[0][Tmp19[1]].links);
                                    (Tmp20 = HEX5BHEX5D_15436312(allStreets_14670629[0], name_15435979), Tmp20)[0][Tmp20[1]].sector = (Tmp21 = HEX5BHEX5D_15050843(allSectors_14690629[0], toSect_15425256), Tmp21)[0][Tmp21[1]];
                                    if (!((len_15255548(colontmp__15825792) == L_15825793))) {
                                    failedAssertImpl_115480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
                                    }
                                    
                                    }
                                    
                                    h_15825794 = nxt_15825796;
                                  }
                              } while(false);
                              }
                              
                            } while(false);
                            del_15521123(allSectors_14690629[0], fromSect_15425254);
                            if ((v_15425253 == val_15425246[val_15425246_Idx])) {
                            val_15425246[val_15425246_Idx] = subInt(val_15425246[val_15425246_Idx], 1);
                            }
                            
                            }
                            
                            res_15825797 = subInt(res_15825797, 1);
                          }
                      } while(false);
                    } while(false);
                    if (!((len_15415152(lastPostfix_14700629[0]) == L_15825809))) {
                    failedAssertImpl_115480(makeNimstrLit("tables.nim(703, 13) `len(t) == L` the length of the table changed while iterating over it"));
                    }
                    
                    }
                    
                    res_15825813 = addInt(res_15825813, 1);
                  }
              } while(false);
            } while(false);
          } while(false);
        }
    } while(false);

  
}
function initOrderedTable_15690013(initialSize_15690017) {
  var result_15690019 = ({data: [], counter: 0, first: 0, last: 0});

    var correctSizeHEX60gensym200_15695001 = slotsNeeded_10295048(chckRange(initialSize_15690017, 0, 2147483647));
    result_15690019.counter = 0;
    result_15690019.data = new Array(chckRange(correctSizeHEX60gensym200_15695001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym200_15695001, 0, 2147483647);++i) {result_15690019.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: []};}    result_15690019.first = -1;
    result_15690019.last = -1;

  return result_15690019;

}
function contains_15740166(s_15740172, value_15740173) {
  var result_15740174 = false;

    result_15740174 = ((cmpStrings(s_15740172.a, value_15740173) <= 0) && (cmpStrings(value_15740173, s_15740172.b) <= 0));

  return result_15740174;

}
function HEX2EHEX2E_15740001(a_15740006, b_15740008) {
  var result_15740014 = ({a: [], b: []});

    nimCopy(result_15740014, {a: nimCopy(null, a_15740006, NTI113), b: nimCopy(null, b_15740008, NTI113)}, NTI15740011);

  return result_15740014;

}
function len_15750368(t_15750373) {
  var result_15750374 = 0;

    result_15750374 = t_15750373.counter;

  return result_15750374;

}
function createDom_15531539() {
    function HEX3Aanonymous_15545138(ev_15545141, n_15545142) {
        save_15316451();

      
    }
    function HEX3Aanonymous_15545161(ev_15545164, n_15545165) {
        function HEX3Aanonymous_15545168(e_15545171) {
            var dataTarget_15550004 = e_15545171.target;
            var data_15555004 = dataTarget_15550004.result;
            var a_15555009 = JSON.parse(data_15555004);
            var x_15555010 = a_15555009;
            load_14955065(x_15555010);

          
        }

        var fReader_15545166 = function(){return new FileReader();}();
        fReader_15545166.addEventListener("load", HEX3Aanonymous_15545168, false);
        var inpFile_15560214 = ev_15545164.target;
        fReader_15545166.readAsText(inpFile_15560214.files[0]);

      
    }
    function HEX3Aanonymous_15565042(ev_15565045, n_15565046) {
        function HEX3Aanonymous_15575013(r_15575015) {
            var c_15605004 = r_15575015.response.view[0].result[0].location.displayPosition;
            map.setCenter({lat: nimCopy(null, chckRange((c_15605004.latitude), -9.0000000000000000e+01, 9.0000000000000000e+01), NTI10531016), lng: nimCopy(null, chckRange((c_15605004.longitude), -1.8000000000000000e+02, 1.8000000000000000e+02), NTI10531018), m_type: NTI10531036}, false);
            map.setZoom(14, false);

          
        }
        function HEX3Aanonymous_15615023(e_15615025) {
          
        }

        var address_15565047 = ev_15565045.target.value;
        var geocoder_15565048 = platform_14650017[0].getGeocodingService();
        var geocodingParameters_15565049 = {};
        geocodingParameters_15565049.searchText = address_15565047;
        geocodingParameters_15565049.jsonattributes = 1;
        geocoder_15565048.geocode(geocodingParameters_15565049, HEX3Aanonymous_15575013, HEX3Aanonymous_15615023);

      
    }
                    var Tmp7;
                    var Tmp8;
                    function clckOnStr_15531542(ev_15531545, n_15531546) {
                        var trgt_15531547 = ev_15531545.target;
                        map.setZoom(20, false);
                        map.setCenter({lat: nimCopy(null, chckRange(parseFloat(trgt_15531547.getAttribute("data-lat")), -9.0000000000000000e+01, 9.0000000000000000e+01), NTI10531016), lng: nimCopy(null, chckRange(parseFloat(trgt_15531547.getAttribute("data-lng")), -1.8000000000000000e+02, 1.8000000000000000e+02), NTI10531018), m_type: NTI10531036}, false);

                      
                    }
            function HEX3Aanonymous_15630149(ev_15630152, n_15630153) {
                var evClck_15630154 = ev_15630152;
                var t_15635004 = evClck_15630154.target;
                var chckd_15640010 = (t_15635004.checked);
                var sN_15645010 = (t_15635004.value);
                t_15635004.checkd = nimBoolToStr((t_15635004.checked));
                if (chckd_15640010) {
                displaySector_15400263(cstrToNimstr(sN_15645010), true);
                }
                else {
                displaySector_15400263(cstrToNimstr(sN_15645010), false);
                }
                

              
            }
            function HEX3Aanonymous_15660246(ev_15660249, n_15660250) {
                var Tmp1;
                        var Tmp5;
                        var Tmp6;
                        var Tmp7;
                        var Tmp8;
                  var Tmp13;
                var Tmp14;

                removeAllSectorFromMap_14930062();
                var id_15660251 = cstrToNimstr(ev_15660249.target.id);
                var fromSect_15660252 = nsuReplaceStr(id_15660251, makeNimstrLit("_"), makeNimstrLit(" "));
                var elSel_15660253 = document.querySelectorAll(toJSStr((makeNimstrLit("select[id=\'") || []).concat(id_15660251 || [],makeNimstrLit("\']") || [])));
                var toSect_15660254 = cstrToNimstr(elSel_15660253[chckIndx(0, 0, (elSel_15660253).length-1)].value);
                var fromSector_15660416 = (Tmp1 = HEX5BHEX5D_15050843(allSectors_14690629[0], fromSect_15660252), Tmp1)[0][Tmp1[1]];
                var namesForDel_15660433 = newSeq_650232(0);
                L2: do {
                  var name_15660441 = [];
                  var mV_15660442 = [];
                  var L_15825768 = len_15255548(fromSector_15660416.streets);
                  if ((0 < fromSector_15660416.streets.counter)) {
                  var h_15825769 = fromSector_15660416.streets.first;
                  L3: do {
                      L4: while (true) {
                      if (!(0 <= h_15825769)) break L4;
                        var nxt_15825771 = fromSector_15660416.streets.data[chckIndx(h_15825769, 0, (fromSector_15660416.streets.data).length-1)].Field1;
                        if (isFilled_10291218(fromSector_15660416.streets.data[chckIndx(h_15825769, 0, (fromSector_15660416.streets.data).length-1)].Field0)) {
                        name_15660441 = fromSector_15660416.streets.data[chckIndx(h_15825769, 0, (fromSector_15660416.streets.data).length-1)].Field2;
                        mV_15660442 = fromSector_15660416.streets.data[chckIndx(h_15825769, 0, (fromSector_15660416.streets.data).length-1)].Field3;
                        var _ = hasKeyOrPut_15450085((Tmp5 = HEX5BHEX5D_15050843(allSectors_14690629[0], toSect_15660254), Tmp5)[0][Tmp5[1]].streets, name_15660441, (Tmp6 = HEX5BHEX5D_15436312(allStreets_14670629[0], name_15660441), Tmp6)[0][Tmp6[1]].links);
                        (Tmp7 = HEX5BHEX5D_15436312(allStreets_14670629[0], name_15660441), Tmp7)[0][Tmp7[1]].sector = (Tmp8 = HEX5BHEX5D_15050843(allSectors_14690629[0], toSect_15660254), Tmp8)[0][Tmp8[1]];
                        var Tmp9 = nimCopy(null, name_15660441, NTI113);
                        namesForDel_15660433.push(Tmp9);;
                        if (!((len_15255548(fromSector_15660416.streets) == L_15825768))) {
                        failedAssertImpl_115480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
                        }
                        
                        }
                        
                        h_15825769 = nxt_15825771;
                      }
                  } while(false);
                  }
                  
                } while(false);
                L10: do {
                  var n_15675214 = null;
                  var n_15675214_Idx = 0;
                  var i_15825774 = 0;
                  var L_15825775 = (namesForDel_15660433).length;
                  L11: do {
                      L12: while (true) {
                      if (!(i_15825774 < L_15825775)) break L12;
                        n_15675214 = namesForDel_15660433; n_15675214_Idx = chckIndx(i_15825774, 0, (namesForDel_15660433).length-1);
                        del_15675324(fromSector_15660416.streets, n_15675214[n_15675214_Idx]);
                        i_15825774 = addInt(i_15825774, 1);
                        if (!(((namesForDel_15660433).length == L_15825775))) {
                        failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  } while(false);
                } while(false);
                if (!(fromSector_15660416.exclude)) {
                if ((fromSector_15660416.pFix == (Tmp13 = HEX5BHEX5D_14915198(lastPostfix_14700629[0], fromSector_15660416.postalCode), Tmp13)[0][Tmp13[1]])) {
                (Tmp14 = HEX5BHEX5D_14915198(lastPostfix_14700629[0], fromSector_15660416.postalCode), Tmp14)[0][Tmp14[1]] = subInt(Tmp14[0][Tmp14[1]], 1);
                }
                
                del_15521123(allSectors_14690629[0], fromSect_15660252);
                }
                
                reindexSect_15415014();

              
            }
            function HEX3Aanonymous_15686972(ev_15686975, n_15686976) {
                var Tmp1;
                          var Tmp6;
                                  var Tmp10;
                          var Tmp11;
                            var Tmp12;
                            var Tmp13;
                                    var Tmp17;
                            var Tmp18;

                var id_15686977 = cstrToNimstr(ev_15686975.target.id);
                var fromSect_15686978 = nsuReplaceStr(id_15686977, makeNimstrLit("_"), makeNimstrLit(" "));
                var fromSector_15687140 = (Tmp1 = HEX5BHEX5D_15050843(allSectors_14690629[0], fromSect_15686978), Tmp1)[0][Tmp1[1]];
                var allSectorsTmp_15687149 = [initOrderedTable_14680632(32)];
                var addk_15687151 = 0;
                var newv_15687152 = null;
                L2: do {
                  var k_15687160 = [];
                  var v_15687161 = null;
                  var L_15825831 = len_14930198(allSectors_14690629[0]);
                  if ((0 < allSectors_14690629[0].counter)) {
                  var h_15825832 = allSectors_14690629[0].first;
                  L3: do {
                      L4: while (true) {
                      if (!(0 <= h_15825832)) break L4;
                        var nxt_15825834 = allSectors_14690629[0].data[chckIndx(h_15825832, 0, (allSectors_14690629[0].data).length-1)].Field1;
                        if (isFilled_10291218(allSectors_14690629[0].data[chckIndx(h_15825832, 0, (allSectors_14690629[0].data).length-1)].Field0)) {
                        k_15687160 = allSectors_14690629[0].data[chckIndx(h_15825832, 0, (allSectors_14690629[0].data).length-1)].Field2;
                        v_15687161 = allSectors_14690629[0].data[chckIndx(h_15825832, 0, (allSectors_14690629[0].data).length-1)].Field3;
                        L5: do {
                          if (v_15687161.exclude) {
                          break L5;
                          }
                          
                          if ((addk_15687151 == 1)) {
                          newv_15687152 = JSON.parse(JSON.stringify(v_15687161));
                          if (false) {
                          nimCopy(newv_15687152.streets, initOrderedTable_15690013(32), NTI14631070);
                          }
                          
                          newv_15687152.pFix = addInt(newv_15687152.pFix, 1);
                          L7: do {
                            var nstHEX60gensym199_15700627 = [];
                            var stHEX60gensym199_15700628 = [];
                            var L_15825821 = len_15255548(newv_15687152.streets);
                            if ((0 < newv_15687152.streets.counter)) {
                            var h_15825822 = newv_15687152.streets.first;
                            L8: do {
                                L9: while (true) {
                                if (!(0 <= h_15825822)) break L9;
                                  var nxt_15825824 = newv_15687152.streets.data[chckIndx(h_15825822, 0, (newv_15687152.streets.data).length-1)].Field1;
                                  if (isFilled_10291218(newv_15687152.streets.data[chckIndx(h_15825822, 0, (newv_15687152.streets.data).length-1)].Field0)) {
                                  nstHEX60gensym199_15700627 = newv_15687152.streets.data[chckIndx(h_15825822, 0, (newv_15687152.streets.data).length-1)].Field2;
                                  stHEX60gensym199_15700628 = newv_15687152.streets.data[chckIndx(h_15825822, 0, (newv_15687152.streets.data).length-1)].Field3;
                                  (Tmp10 = HEX5BHEX5D_15436312(allStreets_14670629[0], nstHEX60gensym199_15700627), Tmp10)[0][Tmp10[1]].sector = newv_15687152;
                                  if (!((len_15255548(newv_15687152.streets) == L_15825821))) {
                                  failedAssertImpl_115480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
                                  }
                                  
                                  }
                                  
                                  h_15825822 = nxt_15825824;
                                }
                            } while(false);
                            }
                            
                          } while(false);
                          Tmp6 = nsuJoinSep([nimCopy(null, (Tmp11 = nsuSplitString(k_15687160, makeNimstrLit("-"), -1), Tmp11)[chckIndx(0, 0, (Tmp11).length-1)], NTI113), cstrToNimstr((newv_15687152.pFix)+"")], makeNimstrLit("-"));
                          }
                          else {
                            if (eqStrings(k_15687160, fromSect_15686978)) {
                            addk_15687151 = 1;
                            (Tmp13 = HEX5BHEX5D_14915198(lastPostfix_14700629[0], fromSector_15687140.postalCode), Tmp13)[0][Tmp13[1]] = addInt(Tmp13[0][Tmp13[1]], 1);
                            HEX5BHEX5DHEX3D_14980347(allSectorsTmp_15687149[0], k_15687160, v_15687161);
                            newv_15687152 = JSON.parse(JSON.stringify(v_15687161));
                            if (true) {
                            nimCopy(newv_15687152.streets, initOrderedTable_15690013(32), NTI14631070);
                            }
                            
                            newv_15687152.pFix = addInt(newv_15687152.pFix, 1);
                            L14: do {
                              var nstHEX60gensym204_15715032 = [];
                              var stHEX60gensym204_15715033 = [];
                              var L_15825827 = len_15255548(newv_15687152.streets);
                              if ((0 < newv_15687152.streets.counter)) {
                              var h_15825828 = newv_15687152.streets.first;
                              L15: do {
                                  L16: while (true) {
                                  if (!(0 <= h_15825828)) break L16;
                                    var nxt_15825830 = newv_15687152.streets.data[chckIndx(h_15825828, 0, (newv_15687152.streets.data).length-1)].Field1;
                                    if (isFilled_10291218(newv_15687152.streets.data[chckIndx(h_15825828, 0, (newv_15687152.streets.data).length-1)].Field0)) {
                                    nstHEX60gensym204_15715032 = newv_15687152.streets.data[chckIndx(h_15825828, 0, (newv_15687152.streets.data).length-1)].Field2;
                                    stHEX60gensym204_15715033 = newv_15687152.streets.data[chckIndx(h_15825828, 0, (newv_15687152.streets.data).length-1)].Field3;
                                    (Tmp17 = HEX5BHEX5D_15436312(allStreets_14670629[0], nstHEX60gensym204_15715032), Tmp17)[0][Tmp17[1]].sector = newv_15687152;
                                    if (!((len_15255548(newv_15687152.streets) == L_15825827))) {
                                    failedAssertImpl_115480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
                                    }
                                    
                                    }
                                    
                                    h_15825828 = nxt_15825830;
                                  }
                              } while(false);
                              }
                              
                            } while(false);
                            Tmp12 = nsuJoinSep([nimCopy(null, (Tmp18 = nsuSplitString(k_15687160, makeNimstrLit("-"), -1), Tmp18)[chckIndx(0, 0, (Tmp18).length-1)], NTI113), cstrToNimstr((newv_15687152.pFix)+"")], makeNimstrLit("-"));
                            }
                            else {
                              newv_15687152 = v_15687161;
                            Tmp12 = k_15687160;
                            }
                            
                          Tmp6 = Tmp12;
                          }
                          
                          var newk_15720207 = nimCopy(null, Tmp6, NTI113);
                          HEX5BHEX5DHEX3D_14980347(allSectorsTmp_15687149[0], newk_15720207, newv_15687152);
                        } while(false);
                        if (!((len_14930198(allSectors_14690629[0]) == L_15825831))) {
                        failedAssertImpl_115480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
                        }
                        
                        }
                        
                        h_15825832 = nxt_15825834;
                      }
                  } while(false);
                  }
                  
                } while(false);
                nimCopy(allSectors_14690629[0], JSON.parse(JSON.stringify(allSectorsTmp_15687149[0])), NTI14631201);

              
            }
    function HEX3Aanonymous_15725170(ev_15725173, n_15725174) {
        var elSelects_15725175 = document.querySelectorAll("div.chg-sect-name input");
        var newDistrictName_15725176 = [];
        var fromNSect_15725177 = [];
        var toNSect_15725178 = [];
        L1: do {
          var el_15725186 = null;
          var el_15725186_Idx = 0;
          var i_15825837 = 0;
          var L_15825838 = (elSelects_15725175).length;
          L2: do {
              L3: while (true) {
              if (!(i_15825837 < L_15825838)) break L3;
                el_15725186 = elSelects_15725175; el_15725186_Idx = chckIndx(i_15825837, 0, (elSelects_15725175).length-1);
                switch (toJSStr(cstrToNimstr(el_15725186[el_15725186_Idx].name))) {
                case "newDistrictName":
                  newDistrictName_15725176 = nimCopy(null, cstrToNimstr(el_15725186[el_15725186_Idx].value.trim()), NTI113);
                  break;
                case "fromNSect":
                  fromNSect_15725177 = nimCopy(null, cstrToNimstr(el_15725186[el_15725186_Idx].value.trim()), NTI113);
                  break;
                case "toNSect":
                  toNSect_15725178 = nimCopy(null, cstrToNimstr(el_15725186[el_15725186_Idx].value.trim()), NTI113);
                  break;
                default: 
                  break;
                }
                i_15825837 = addInt(i_15825837, 1);
                if (!(((elSelects_15725175).length == L_15825838))) {
                failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);
        L4: do {
          var k_15735245 = [];
          var v_15735246 = null;
          var v_15735246_Idx = 0;
          var L_15825842 = len_14930198(allSectors_14690629[0]);
          if ((0 < allSectors_14690629[0].counter)) {
          var h_15825843 = allSectors_14690629[0].first;
          L5: do {
              L6: while (true) {
              if (!(0 <= h_15825843)) break L6;
                var nxt_15825845 = allSectors_14690629[0].data[chckIndx(h_15825843, 0, (allSectors_14690629[0].data).length-1)].Field1;
                if (isFilled_10291218(allSectors_14690629[0].data[chckIndx(h_15825843, 0, (allSectors_14690629[0].data).length-1)].Field0)) {
                k_15735245 = allSectors_14690629[0].data[chckIndx(h_15825843, 0, (allSectors_14690629[0].data).length-1)].Field2;
                v_15735246 = allSectors_14690629[0].data[chckIndx(h_15825843, 0, (allSectors_14690629[0].data).length-1)]; v_15735246_Idx = "Field3";
                if (contains_15740166(HEX2EHEX2E_15740001(fromNSect_15725177, toNSect_15725178), nucStrip(k_15735245, true, true, unicodeSpaces_1844041))) {
                v_15735246[v_15735246_Idx].folkDistrict = nimCopy(null, newDistrictName_15725176, NTI113);
                }
                
                if (!((len_14930198(allSectors_14690629[0]) == L_15825842))) {
                failedAssertImpl_115480(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                h_15825843 = nxt_15825845;
              }
          } while(false);
          }
          
        } while(false);

      
    }

  var result_15531541 = null;

    var tmp_15535276 = tree_13485445(43, []);
    tmp_15535276.class = "main-root";
    addEventHandler_14210118(tmp_15535276, 11, chckdCheck_15400267, kxi_13647284[0]);
    var tmp_15535282 = tree_13485445(43, []);
    if (!((len_14930198(allSectors_14690629[0]) == 0))) {
    var tmp_15535283 = tree_13485445(106, []);
    add_13475072(tmp_15535283, text_13485582(makeNimstrLit("\xD0\xA1\xD0\xBE\xD1\x85\xD1\x80\xD0\xB0\xD0\xBD\xD0\xB8\xD1\x82\xD1\x8C")));
    addEventHandler_14210118(tmp_15535283, 0, HEX3Aanonymous_15545138, kxi_13647284[0]);
    add_13475072(tmp_15535282, tmp_15535283);
    }
    
    var tmp_15535284 = tree_13485445(105, []);
    setAttr_13425105(tmp_15535284, "type", "file");
    setAttr_13425105(tmp_15535284, "name", "fileArea");
    addEventHandler_14210118(tmp_15535284, 8, HEX3Aanonymous_15545161, kxi_13647284[0]);
    add_13475072(tmp_15535282, tmp_15535284);
    var tmp_15535285 = tree_13485445(43, []);
    var tmp_15535286 = tree_13485445(105, []);
    setAttr_13425105(tmp_15535286, "type", "text");
    setAttr_13425105(tmp_15535286, "placeholder", "найти адрес на карте");
    addEventHandler_14210118(tmp_15535286, 8, HEX3Aanonymous_15565042, kxi_13647284[0]);
    add_13475072(tmp_15535285, tmp_15535286);
    add_13475072(tmp_15535282, tmp_15535285);
    L1: do {
      var k_15615105 = [];
      var v_15615106 = null;
      var L_15825516 = len_14930198(allSectors_14690629[0]);
      if ((0 < allSectors_14690629[0].counter)) {
      var h_15825517 = allSectors_14690629[0].first;
      L2: do {
          L3: while (true) {
          if (!(0 <= h_15825517)) break L3;
            var nxt_15825519 = allSectors_14690629[0].data[chckIndx(h_15825517, 0, (allSectors_14690629[0].data).length-1)].Field1;
            if (isFilled_10291218(allSectors_14690629[0].data[chckIndx(h_15825517, 0, (allSectors_14690629[0].data).length-1)].Field0)) {
            k_15615105 = allSectors_14690629[0].data[chckIndx(h_15825517, 0, (allSectors_14690629[0].data).length-1)].Field2;
            v_15615106 = allSectors_14690629[0].data[chckIndx(h_15825517, 0, (allSectors_14690629[0].data).length-1)].Field3;
            var id4Move_15615107 = nsuReplaceStr(k_15615105, makeNimstrLit(" "), makeNimstrLit("_"));
            var tmp_15535287 = tree_13485445(43, []);
            tmp_15535287.class = "sector";
            var tmp_15535288 = tree_13485445(70, []);
            tmp_15535288.class = "sect-name";
            add_13475072(tmp_15535288, text_13485582(name_14911057(v_15615106)));
            add_13475072(tmp_15535287, tmp_15535288);
            var tmp_15535289 = tree_13485445(43, []);
            tmp_15535289.class = "streets";
            L4: do {
              var nStreet_15615127 = [];
              var links_15615128 = [];
              var L_15825496 = len_15255548(v_15615106.streets);
              if ((0 < v_15615106.streets.counter)) {
              var h_15825497 = v_15615106.streets.first;
              L5: do {
                  L6: while (true) {
                  if (!(0 <= h_15825497)) break L6;
                    var nxt_15825499 = v_15615106.streets.data[chckIndx(h_15825497, 0, (v_15615106.streets.data).length-1)].Field1;
                    if (isFilled_10291218(v_15615106.streets.data[chckIndx(h_15825497, 0, (v_15615106.streets.data).length-1)].Field0)) {
                    nStreet_15615127 = v_15615106.streets.data[chckIndx(h_15825497, 0, (v_15615106.streets.data).length-1)].Field2;
                    links_15615128 = v_15615106.streets.data[chckIndx(h_15825497, 0, (v_15615106.streets.data).length-1)].Field3;
                    var streetObj_15615129 = {name: nimCopy(null, nStreet_15615127, NTI113), sector: v_15615106, links: [], totalFamilies: 0};
                    if (hasKey_15615239(tblTotalFam_14910773[0], hash_14631255(streetObj_15615129))) {
                    Tmp7 = (Tmp8 = HEX5BHEX5D_15615420(tblTotalFam_14910773[0], hash_14631255(streetObj_15615129)), Tmp8)[0][Tmp8[1]];
                    }
                    else {
                    Tmp7 = 0;
                    }
                    
                    var totalFam_15620016 = Tmp7;
                    var coord_15620017 = links_15615128[chckIndx(0, 0, (links_15615128).length-1)].geometry[chckIndx(0, 0, (links_15615128[chckIndx(0, 0, (links_15615128).length-1)].geometry).length-1)];
                    var fmtRes_15620018 = [mnewString(0)];
                    formatValue_13170080(fmtRes_15620018, 0, v_15615106.postalCode, []);
                    fmtRes_15620018[0].push.apply(fmtRes_15620018[0], makeNimstrLit("+"));;
                    formatValue_13170080(fmtRes_15620018, 0, v_15615106.city, []);
                    var ci_15625003 = nimCopy(null, fmtRes_15620018[0], NTI113);
                    var st_15625004 = encodeUrl_9961140(nStreet_15615127, true);
                    var tmp_15535290 = tree_13485445(43, []);
                    tmp_15535290.class = "street";
                    var tmp_15535291 = tree_13485445(43, []);
                    var tmp_15535292 = tree_13485445(70, []);
                    setAttr_13425105(tmp_15535292, "data-lat", toJSStr(cstrToNimstr(nimFloatToString(coord_15620017.lat))));
                    setAttr_13425105(tmp_15535292, "data-lng", toJSStr(cstrToNimstr(nimFloatToString(coord_15620017.lng))));
                    addEventHandler_14210118(tmp_15535292, 0, clckOnStr_15531542, kxi_13647284[0]);
                    add_13475072(tmp_15535292, text_13485582(nsuJoinSep([nimCopy(null, nStreet_15615127, NTI113), makeNimstrLit(" ("), cstrToNimstr((totalFam_15620016)+""), makeNimstrLit(")")], [])));
                    add_13475072(tmp_15535291, tmp_15535292);
                    var tmp_15535293 = tree_13485445(70, []);
                    tmp_15535293.class = "tel-book";
                    var tmp_15535294 = tree_13485445(44, []);
                    var fmtRes_15625028 = [mnewString(0)];
                    fmtRes_15625028[0].push.apply(fmtRes_15625028[0], makeNimstrLit("https://www.dasoertliche.de/?zvo_ok=0&ci="));;
                    formatValue_13170080(fmtRes_15625028, 0, ci_15625003, []);
                    fmtRes_15625028[0].push.apply(fmtRes_15625028[0], makeNimstrLit("&st="));;
                    formatValue_13170080(fmtRes_15625028, 0, st_15625004, []);
                    fmtRes_15625028[0].push.apply(fmtRes_15625028[0], makeNimstrLit("&radius=0&form_name=search_nat_ext"));;
                    setAttr_13425105(tmp_15535294, "href", toJSStr(fmtRes_15625028[0]));
                    setAttr_13425105(tmp_15535294, "target", "_blank");
                    add_13475072(tmp_15535294, text_13485582(makeNimstrLit("das \xC3\x96rtl.")));
                    add_13475072(tmp_15535293, tmp_15535294);
                    add_13475072(tmp_15535291, tmp_15535293);
                    add_13475072(tmp_15535290, tmp_15535291);
                    add_13475072(tmp_15535289, tmp_15535290);
                    if (!((len_15255548(v_15615106.streets) == L_15825496))) {
                    failedAssertImpl_115480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
                    }
                    
                    }
                    
                    h_15825497 = nxt_15825499;
                  }
              } while(false);
              }
              
            } while(false);
            add_13475072(tmp_15535287, tmp_15535289);
            var tmp_15535295 = tree_13485445(43, []);
            tmp_15535295.class = "show-sector-box";
            var tmp_15535296 = tree_13485445(104, []);
            setAttr_13425105(tmp_15535296, "for", toJSStr(k_15615105));
            add_13475072(tmp_15535296, text_13485582((makeNimstrLit("\xD0\x9F\xD0\xBE\xD0\xBA\xD0\xB0\xD0\xB7. \xD0\xBD\xD0\xB0 \xD0\xBA\xD0\xB0\xD1\x80\xD1\x82\xD0\xB5 (") || []).concat(cstrToNimstr((len_15255548(v_15615106.streets))+"") || [],makeNimstrLit(")") || [])));
            add_13475072(tmp_15535295, tmp_15535296);
            var tmp_15535297 = tree_13485445(105, []);
            setAttr_13425105(tmp_15535297, "type", "checkbox");
            setAttr_13425105(tmp_15535297, "name", "showSector");
            tmp_15535297.class = "show-sector";
            valueHEX3D_13390140(tmp_15535297, toJSStr(k_15615105));
            setAttr_13425105(tmp_15535297, "value", toJSStr(k_15615105));
            tmp_15535297.id = toJSStr(k_15615105);
            setAttr_13425105(tmp_15535297, "checkd", toJSStr(nimBoolToStr(v_15615106.shownOnMap)));
            addEventHandler_14210118(tmp_15535297, 0, HEX3Aanonymous_15630149, kxi_13647284[0]);
            add_13475072(tmp_15535295, tmp_15535297);
            add_13475072(tmp_15535287, tmp_15535295);
            var tmp_15535298 = tree_13485445(43, []);
            tmp_15535298.class = "for-select";
            var tmp_15535299 = tree_13485445(107, []);
            tmp_15535299.id = toJSStr(id4Move_15615107);
            var tmp_15535300 = tree_13485445(110, []);
            valueHEX3D_13390140(tmp_15535300, "");
            setAttr_13425105(tmp_15535300, "value", "");
            add_13475072(tmp_15535300, text_13485582(makeNimstrLit("\xD0\x94\xD0\xB2\xD0\xB8\xD0\xBD\xD1\x83\xD1\x82\xD1\x8C \xD0\xB2\xD1\x81\xD0\xB5 \xD1\x83\xD0\xBB\xD0\xB8\xD1\x86\xD1\x8B \xD0\xB2")));
            add_13475072(tmp_15535299, tmp_15535300);
            L9: do {
              var kOpt_15660233 = [];
              var vOpt_15660234 = null;
              var L_15825510 = len_14930198(allSectors_14690629[0]);
              if ((0 < allSectors_14690629[0].counter)) {
              var h_15825511 = allSectors_14690629[0].first;
              L10: do {
                  L11: while (true) {
                  if (!(0 <= h_15825511)) break L11;
                    var nxt_15825513 = allSectors_14690629[0].data[chckIndx(h_15825511, 0, (allSectors_14690629[0].data).length-1)].Field1;
                    if (isFilled_10291218(allSectors_14690629[0].data[chckIndx(h_15825511, 0, (allSectors_14690629[0].data).length-1)].Field0)) {
                    kOpt_15660233 = allSectors_14690629[0].data[chckIndx(h_15825511, 0, (allSectors_14690629[0].data).length-1)].Field2;
                    vOpt_15660234 = allSectors_14690629[0].data[chckIndx(h_15825511, 0, (allSectors_14690629[0].data).length-1)].Field3;
                    L12: do {
                      if (eqStrings(kOpt_15660233, id_14915026(v_15615106))) {
                      break L12;
                      }
                      
                      var tmp_15535301 = tree_13485445(110, []);
                      valueHEX3D_13390140(tmp_15535301, toJSStr(kOpt_15660233));
                      setAttr_13425105(tmp_15535301, "value", toJSStr(kOpt_15660233));
                      add_13475072(tmp_15535301, text_13485582(kOpt_15660233));
                      add_13475072(tmp_15535299, tmp_15535301);
                    } while(false);
                    if (!((len_14930198(allSectors_14690629[0]) == L_15825510))) {
                    failedAssertImpl_115480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
                    }
                    
                    }
                    
                    h_15825511 = nxt_15825513;
                  }
              } while(false);
              }
              
            } while(false);
            add_13475072(tmp_15535298, tmp_15535299);
            var tmp_15535302 = tree_13485445(106, []);
            tmp_15535302.id = toJSStr(id4Move_15615107);
            add_13475072(tmp_15535302, text_13485582(makeNimstrLit("\xD0\x9E\xD0\xBA !")));
            addEventHandler_14210118(tmp_15535302, 0, HEX3Aanonymous_15660246, kxi_13647284[0]);
            add_13475072(tmp_15535298, tmp_15535302);
            add_13475072(tmp_15535287, tmp_15535298);
            var tmp_15535303 = tree_13485445(106, []);
            tmp_15535303.id = toJSStr(id4Move_15615107);
            add_13475072(tmp_15535303, text_13485582(makeNimstrLit("\xD0\xB2\xD1\x81\xD1\x82\xD0\xB0\xD0\xB2\xD0\xB8\xD1\x82\xD1\x8C \xD0\xBD\xD0\xBE\xD0\xB2\xD1\x8B\xD0\xB9 \xD1\x83\xD1\x87\xD0\xB0\xD1\x81\xD1\x82\xD0\xBE\xD0\xBA")));
            addEventHandler_14210118(tmp_15535303, 0, HEX3Aanonymous_15686972, kxi_13647284[0]);
            add_13475072(tmp_15535287, tmp_15535303);
            add_13475072(tmp_15535282, tmp_15535287);
            if (!((len_14930198(allSectors_14690629[0]) == L_15825516))) {
            failedAssertImpl_115480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_15825517 = nxt_15825519;
          }
      } while(false);
      }
      
    } while(false);
    if (!((len_14930198(allSectors_14690629[0]) == 0))) {
    var tmp_15535304 = tree_13485445(43, []);
    tmp_15535304.class = "chg-sect-name";
    var tmp_15535305 = tree_13485445(104, []);
    add_13475072(tmp_15535305, text_13485582(makeNimstrLit("\xD1\x83\xD1\x81\xD1\x82\xD0\xB0\xD0\xBD\xD0\xBE\xD0\xB2\xD0\xB8\xD1\x82\xD1\x8C \xD0\xBD\xD0\xBE\xD0\xB2\xD0\xBE\xD0\xB5 \xD0\xB8\xD0\xBC\xD1\x8F \xD1\x80\xD0\xB0\xD0\xB9\xD0\xBE\xD0\xBD\xD0\xB0: ")));
    add_13475072(tmp_15535304, tmp_15535305);
    var tmp_15535306 = tree_13485445(105, []);
    setAttr_13425105(tmp_15535306, "type", "text");
    setAttr_13425105(tmp_15535306, "placeholder", "новое имя района");
    setAttr_13425105(tmp_15535306, "name", "newDistrictName");
    add_13475072(tmp_15535304, tmp_15535306);
    var tmp_15535307 = tree_13485445(31, []);
    var tmp_15535308 = tree_13485445(104, []);
    add_13475072(tmp_15535308, text_13485582(makeNimstrLit("\xD1\x81: ")));
    add_13475072(tmp_15535307, tmp_15535308);
    var tmp_15535309 = tree_13485445(105, []);
    setAttr_13425105(tmp_15535309, "type", "text");
    setAttr_13425105(tmp_15535309, "placeholder", "с номера участка");
    setAttr_13425105(tmp_15535309, "name", "fromNSect");
    add_13475072(tmp_15535307, tmp_15535309);
    var tmp_15535310 = tree_13485445(104, []);
    add_13475072(tmp_15535310, text_13485582(makeNimstrLit("\xD0\xBF\xD0\xBE: ")));
    add_13475072(tmp_15535307, tmp_15535310);
    var tmp_15535311 = tree_13485445(105, []);
    setAttr_13425105(tmp_15535311, "type", "text");
    setAttr_13425105(tmp_15535311, "placeholder", "по номер участка");
    setAttr_13425105(tmp_15535311, "name", "toNSect");
    add_13475072(tmp_15535307, tmp_15535311);
    add_13475072(tmp_15535304, tmp_15535307);
    var tmp_15535312 = tree_13485445(106, []);
    add_13475072(tmp_15535312, text_13485582(makeNimstrLit("\xD1\x83\xD1\x81\xD1\x82\xD0\xB0\xD0\xBD\xD0\xBE\xD0\xB2\xD0\xB8\xD1\x82\xD1\x8C!")));
    addEventHandler_14210118(tmp_15535312, 0, HEX3Aanonymous_15725170, kxi_13647284[0]);
    add_13475072(tmp_15535304, tmp_15535312);
    add_13475072(tmp_15535282, tmp_15535304);
    }
    
    L13: do {
      var k_15750229 = [];
      var v_15750230 = 0;
      var L_15825538 = len_15415152(lastPostfix_14700629[0]);
      L14: do {
        var h_15825540 = 0;
        var colontmp__15825541 = 0;
        colontmp__15825541 = (lastPostfix_14700629[0].data).length - 1;
        var res_15825542 = 0;
        L15: do {
            L16: while (true) {
            if (!(res_15825542 <= colontmp__15825541)) break L16;
              h_15825540 = res_15825542;
              if (isFilled_10291218(lastPostfix_14700629[0].data[chckIndx(h_15825540, 0, (lastPostfix_14700629[0].data).length-1)].Field0)) {
              k_15750229 = lastPostfix_14700629[0].data[chckIndx(h_15825540, 0, (lastPostfix_14700629[0].data).length-1)].Field1;
              v_15750230 = lastPostfix_14700629[0].data[chckIndx(h_15825540, 0, (lastPostfix_14700629[0].data).length-1)].Field2;
              var tmp_15535313 = tree_13485445(43, []);
              add_13475072(tmp_15535313, text_13485582((k_15750229 || []).concat(makeNimstrLit(" : ") || [],cstrToNimstr((v_15750230)+"") || [])));
              add_13475072(tmp_15535282, tmp_15535313);
              if (!((len_15415152(lastPostfix_14700629[0]) == L_15825538))) {
              failedAssertImpl_115480(makeNimstrLit("tables.nim(681, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_15825542 = addInt(res_15825542, 1);
            }
        } while(false);
      } while(false);
    } while(false);
    L17: do {
      var k_15760229 = [];
      var v_15760230 = null;
      var L_15825551 = len_15750368(allStreets_14670629[0]);
      if ((0 < allStreets_14670629[0].counter)) {
      var h_15825552 = allStreets_14670629[0].first;
      L18: do {
          L19: while (true) {
          if (!(0 <= h_15825552)) break L19;
            var nxt_15825554 = allStreets_14670629[0].data[chckIndx(h_15825552, 0, (allStreets_14670629[0].data).length-1)].Field1;
            if (isFilled_10291218(allStreets_14670629[0].data[chckIndx(h_15825552, 0, (allStreets_14670629[0].data).length-1)].Field0)) {
            k_15760229 = allStreets_14670629[0].data[chckIndx(h_15825552, 0, (allStreets_14670629[0].data).length-1)].Field2;
            v_15760230 = allStreets_14670629[0].data[chckIndx(h_15825552, 0, (allStreets_14670629[0].data).length-1)].Field3;
            L20: do {
              if (!((v_15760230.sector == null))) {
              break L20;
              }
              
              var coord_15765009 = v_15760230.links[chckIndx(0, 0, (v_15760230.links).length-1)].geometry[chckIndx(0, 0, (v_15760230.links[chckIndx(0, 0, (v_15760230.links).length-1)].geometry).length-1)];
              var tmp_15535314 = tree_13485445(43, []);
              tmp_15535314.class = "street";
              var tmp_15535315 = tree_13485445(70, []);
              setAttr_13425105(tmp_15535315, "data-lat", toJSStr(cstrToNimstr(nimFloatToString(coord_15765009.lat))));
              setAttr_13425105(tmp_15535315, "data-lng", toJSStr(cstrToNimstr(nimFloatToString(coord_15765009.lng))));
              addEventHandler_14210118(tmp_15535315, 0, clckOnStr_15531542, kxi_13647284[0]);
              add_13475072(tmp_15535315, text_13485582(k_15760229));
              add_13475072(tmp_15535314, tmp_15535315);
              add_13475072(tmp_15535282, tmp_15535314);
            } while(false);
            if (!((len_15750368(allStreets_14670629[0]) == L_15825551))) {
            failedAssertImpl_115480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_15825552 = nxt_15825554;
          }
      } while(false);
      }
      
    } while(false);
    add_13475072(tmp_15535276, tmp_15535282);
    result_15531541 = tmp_15535276;

  return result_15531541;

}
var Tmp3;
var locSearch_15775010 = [cstrToNimstr((window.location.search))];
locSearch_15775010[0] = nimCopy(null, nsuReplaceStr(locSearch_15775010[0], makeNimstrLit("?"), []), NTI113);
var arrLs_15775011 = nsuSplitString(locSearch_15775010[0], makeNimstrLit("&"), -1);
var apikey_15775012 = nimCopy(null, (Tmp3 = nsuSplitString(arrLs_15775011[chckIndx(0, 0, (arrLs_15775011).length-1)], makeNimstrLit("="), -1), Tmp3)[chckIndx(1, 0, (Tmp3).length-1)], NTI113);
var opts_15775014 = {apikey: toJSStr(apikey_15775012), useHTTPS: true, m_type: NTI14292030, app_id: null, app_code: null, useCIT: false};
var pixelRatio_15780010 = (window.devicePixelRatio);
var hidpi_15785001 = (1.0000000000000000e+00 < pixelRatio_15780010);
var layerOpts_15785002 = [{m_type: NTI14360014, tileSize: 0, ppi: 0, lg: null, lg2: null, style: null, pois: false, crossOrigin: []}];
if (hidpi_15785001) {
layerOpts_15785002[0].ppi = 320;
}

platform_14650017[0] = function(o){return new H.service.Platform(o)}(opts_15775014);
var defLayers_15785004 = platform_14650017[0].createDefaultLayers();
var mapOpts_15785007 = [{pixelRatio: pixelRatio_15780010, m_type: NTI14517035, noWrap: false}];
var normalMap_15790004 = defLayers_15785004.vector.normal;
map = function(element, baseLayer, opt_options){return new H.Map(element, baseLayer, opt_options)}(document.getElementById("map"), normalMap_15790004.map, mapOpts_15785007[0]);
var mapEvts_15795004 = function(map){return new H.mapevents.MapEvents(map)}(map);
var behavior = function(mapE){return new H.mapevents.Behavior(mapE)}(mapEvts_15795004);
var uiDef_15825006 = [H.ui.UI.createDefault((map), (defLayers_15785004))];
setRenderer_14205238(createDom_15531539, "main-control-container", null);
map.setCenter({lat: 5.0151851800000003e+01, lng: 8.9302924000000008e+00, m_type: NTI10531036}, false);
map.setZoom(9, false);
var mainGroup_15825008 = [function(){return new H.map.Group()}()];
var mainSectorGroup_15825009 = [function(){return new H.map.Group()}()];
mainGroup_15825008[0].setZIndex(99);
map.addObject(mainGroup_15825008[0]);
map.addObject(mainSectorGroup_15825009[0]);
var mrk_15825022 = function(position){return new H.map.Marker(position)}({lat: 5.2000000000000000e+01, lng: 8.0000000000000000e+00, m_type: NTI10531036});
var p_15825024 = {lat: 3.4000000000000000e+01, lng: 1.2300000000000000e+02, m_type: NTI10531036};
var scrPoint_15825025 = function(x,y){return new H.math.Point(x, y)}(1, 1);
var check_15825028 = isPointInPolygon(scrPoint_15825025, [function(x,y){return new H.math.Point(x, y)}(0, 0), function(x,y){return new H.math.Point(x, y)}(0, 3), function(x,y){return new H.math.Point(x, y)}(3, 3)]);
rawEcho(makeNimstrLit("check: "), nimBoolToStr(check_15825028));
var cle_15825033 = platform_14650017[0].getCustomLocationService();
var geocoder_15825034 = platform_14650017[0].getGeocodingService();
var pdeService_15825035 = [platform_14650017[0].getPlatformDataService()];
map.addObject(mvStreetGrp_14700630[0]);
var strGgeoPoint_17000250 = [newSeq_650232(0)];
function len_15115431(t_15115436) {
  var result_15115437 = 0;

    result_15115437 = t_15115436.counter;

  return result_15115437;

}
function len_16580146(t_16580151) {
  var result_16580152 = 0;

    result_16580152 = t_16580151.counter;

  return result_16580152;

}
function rawGet_15932022(t_15932026, key_15932027, hc_15932028, hc_15932028_Idx) {
            var Tmp3;

  var result_15932029 = 0;

  BeforeRet: do {
    hc_15932028[hc_15932028_Idx] = hash_10230408(key_15932027);
    if ((hc_15932028[hc_15932028_Idx] == 0)) {
    hc_15932028[hc_15932028_Idx] = 314159265;
    }
    
    if (((t_15932026.data).length == 0)) {
    result_15932029 = -1;
    break BeforeRet;
    }
    
    var h_15940138 = (hc_15932028[hc_15932028_Idx] & (t_15932026.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_10291218(t_15932026.data[chckIndx(h_15940138, 0, (t_15932026.data).length-1)].Field0)) break L2;
            if (!(t_15932026.data[chckIndx(h_15940138, 0, (t_15932026.data).length-1)].Field0 == hc_15932028[hc_15932028_Idx])) Tmp3 = false; else {              Tmp3 = (t_15932026.data[chckIndx(h_15940138, 0, (t_15932026.data).length-1)].Field1 == key_15932027);            }          if (Tmp3) {
          result_15932029 = h_15940138;
          break BeforeRet;
          }
          
          h_15940138 = nextTry_10295014(h_15940138, (t_15932026.data).length - 1);
        }
    } while(false);
    result_15932029 = subInt(-1, h_15940138);
  } while (false);

  return result_15932029;

}
function mustRehash_16225601(t_16225604) {
  var result_16225605 = false;

    if (!((t_16225604.counter < (t_16225604.data).length))) {
    failedAssertImpl_115480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_16225605 = ((mulInt((t_16225604.data).length, 2) < mulInt(t_16225604.counter, 3)) || (subInt((t_16225604.data).length, t_16225604.counter) < 4));

  return result_16225605;

}
function rawInsert_16251122(t_16251128, data_16251131, data_16251131_Idx, key_16251132, val_16251134, hc_16251135, h_16251136) {
    data_16251131[data_16251131_Idx][chckIndx(h_16251136, 0, (data_16251131[data_16251131_Idx]).length-1)].Field1 = key_16251132;
    data_16251131[data_16251131_Idx][chckIndx(h_16251136, 0, (data_16251131[data_16251131_Idx]).length-1)].Field2 = val_16251134;
    data_16251131[data_16251131_Idx][chckIndx(h_16251136, 0, (data_16251131[data_16251131_Idx]).length-1)].Field0 = hc_16251135;

  
}
function enlarge_16250161(t_16250167) {
    var n_16250175 = [];
    n_16250175 = new Array(chckRange(mulInt((t_16250167.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_16250167.data).length, 2), 0, 2147483647);++i) {n_16250175[i]={Field0: 0, Field1: 0, Field2: null};}    var Tmp1 = t_16250167.data; t_16250167.data = n_16250175; n_16250175 = Tmp1;    L2: do {
      var i_16250334 = 0;
      var colontmp__17030387 = 0;
      colontmp__17030387 = (n_16250175).length - 1;
      var res_17030388 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_17030388 <= colontmp__17030387)) break L4;
            i_16250334 = res_17030388;
            var eh_16250490 = n_16250175[chckIndx(i_16250334, 0, (n_16250175).length-1)].Field0;
            if (isFilled_10291218(eh_16250490)) {
            var j_16250497 = (eh_16250490 & (t_16250167.data).length - 1);
            L5: do {
                L6: while (true) {
                if (!isFilled_10291218(t_16250167.data[chckIndx(j_16250497, 0, (t_16250167.data).length-1)].Field0)) break L6;
                  j_16250497 = nextTry_10295014(j_16250497, (t_16250167.data).length - 1);
                }
            } while(false);
            rawInsert_16251122(t_16250167, t_16250167, "data", n_16250175[chckIndx(i_16250334, 0, (n_16250175).length-1)].Field1, n_16250175[chckIndx(i_16250334, 0, (n_16250175).length-1)].Field2, eh_16250490, j_16250497);
            }
            
            res_17030388 = addInt(res_17030388, 1);
          }
      } while(false);
    } while(false);

  
}
function rawGetKnownHC_16251629(t_16251633, key_16251634, hc_16251635) {
  var result_16251636 = 0;

  BeforeRet: do {
    if (((t_16251633.data).length == 0)) {
    result_16251636 = -1;
    break BeforeRet;
    }
    
    var h_16255138 = (hc_16251635 & (t_16251633.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_10291218(t_16251633.data[chckIndx(h_16255138, 0, (t_16251633.data).length-1)].Field0)) break L2;
          if (((t_16251633.data[chckIndx(h_16255138, 0, (t_16251633.data).length-1)].Field0 == hc_16251635) && (t_16251633.data[chckIndx(h_16255138, 0, (t_16251633.data).length-1)].Field1 == key_16251634))) {
          result_16251636 = h_16255138;
          break BeforeRet;
          }
          
          h_16255138 = nextTry_10295014(h_16255138, (t_16251633.data).length - 1);
        }
    } while(false);
    result_16251636 = subInt(-1, h_16255138);
  } while (false);

  return result_16251636;

}
function hasKeyOrPut_16195087(t_16195093, key_16195094, val_16195095) {
  var result_16195096 = false;

    if (((t_16195093.data).length == 0)) {
    var correctSizeHEX60gensym302_16205001 = slotsNeeded_10295048(32);
    t_16195093.counter = 0;
    t_16195093.data = new Array(chckRange(correctSizeHEX60gensym302_16205001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym302_16205001, 0, 2147483647);++i) {t_16195093.data[i]={Field0: 0, Field1: 0, Field2: null};}    }
    
    var hc_16210601 = [0];
    var index_16210610 = rawGet_15932022(t_16195093, key_16195094, hc_16210601, 0);
    if ((index_16210610 < 0)) {
    result_16195096 = false;
    if (((t_16195093.data).length == 0)) {
    var correctSizeHEX60gensym305_16220001 = slotsNeeded_10295048(32);
    t_16195093.counter = 0;
    t_16195093.data = new Array(chckRange(correctSizeHEX60gensym305_16220001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym305_16220001, 0, 2147483647);++i) {t_16195093.data[i]={Field0: 0, Field1: 0, Field2: null};}    }
    
    if (mustRehash_16225601(t_16195093)) {
    enlarge_16250161(t_16195093);
    index_16210610 = rawGetKnownHC_16251629(t_16195093, key_16195094, hc_16210601[0]);
    }
    
    index_16210610 = subInt(-1, index_16210610);
    rawInsert_16251122(t_16195093, t_16195093, "data", key_16195094, val_16195095, hc_16210601[0], index_16210610);
    t_16195093.counter = addInt(t_16195093.counter, 1);
    }
    else {
      result_16195096 = true;
    }
    

  return result_16195096;

}
function HEX5BHEX5D_15940788(t_15940794, key_15940795) {
  var result_15940797 = null;
  var result_15940797_Idx = 0;

    var hcHEX60gensym22_15940798 = [0];
    var indexHEX60gensym22_15940807 = rawGet_15932022(t_15940794, key_15940795, hcHEX60gensym22_15940798, 0);
    if ((0 <= indexHEX60gensym22_15940807)) {
    result_15940797 = t_15940794.data[chckIndx(indexHEX60gensym22_15940807, 0, (t_15940794.data).length-1)]; result_15940797_Idx = "Field2";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(cstrToNimstr((key_15940795)+"") || []), parent: null, m_type: NTI6845, name: null, trace: [], up: null}, "KeyError");
    }
    

  return [result_15940797, result_15940797_Idx];

}
function newSeq_16305181(len_16305184) {
  var result_16305186 = [];

    result_16305186 = new Array(len_16305184); for (var i=0;i<len_16305184;++i) {result_16305186[i]=null;}
  return result_16305186;

}
function map_16360221(s_16360226, op_16360229) {
  var result_16360231 = [];

    result_16360231 = new Array(chckRange((s_16360226).length, 0, 2147483647)); for (var i=0;i<chckRange((s_16360226).length, 0, 2147483647);++i) {result_16360231[i]=0;}    L1: do {
      var i_16360254 = 0;
      var colontmp__17030396 = 0;
      colontmp__17030396 = (s_16360226).length;
      var i_17030397 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_17030397 < colontmp__17030396)) break L3;
            i_16360254 = i_17030397;
            result_16360231[chckIndx(i_16360254, 0, (result_16360231).length-1)] = op_16360229(s_16360226[chckIndx(i_16360254, 0, (s_16360226).length-1)]);
            i_17030397 = addInt(i_17030397, 1);
          }
      } while(false);
    } while(false);

  return result_16360231;

}
function newSeq_16360283(len_16360286) {
  var result_16360288 = [];

    result_16360288 = new Array(len_16360286); for (var i=0;i<len_16360286;++i) {result_16360288[i]=0;}
  return result_16360288;

}
function concat_16360510(seqs_16360515) {
  var result_16360517 = [];

    var L_16360519 = 0;
    L1: do {
      var seqitm_16360552 = null;
      var seqitm_16360552_Idx = 0;
      var i_17030401 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_17030401 < (seqs_16360515).length)) break L3;
            seqitm_16360552 = seqs_16360515; seqitm_16360552_Idx = chckIndx(i_17030401, 0, (seqs_16360515).length-1);
            L_16360519 = addInt(L_16360519, (seqitm_16360552[seqitm_16360552_Idx]).length);
            i_17030401 = addInt(i_17030401, 1);
          }
      } while(false);
    } while(false);
    result_16360517 = new Array(chckRange(L_16360519, 0, 2147483647)); for (var i=0;i<chckRange(L_16360519, 0, 2147483647);++i) {result_16360517[i]=0;}    var i_16360572 = 0;
    L4: do {
      var s_16360579 = null;
      var s_16360579_Idx = 0;
      var i_17030409 = 0;
      L5: do {
          L6: while (true) {
          if (!(i_17030409 < (seqs_16360515).length)) break L6;
            s_16360579 = seqs_16360515; s_16360579_Idx = chckIndx(i_17030409, 0, (seqs_16360515).length-1);
            L7: do {
              var itm_16360587 = null;
              var itm_16360587_Idx = 0;
              var i_17030406 = 0;
              var L_17030407 = (s_16360579[s_16360579_Idx]).length;
              L8: do {
                  L9: while (true) {
                  if (!(i_17030406 < L_17030407)) break L9;
                    itm_16360587 = s_16360579[s_16360579_Idx]; itm_16360587_Idx = chckIndx(i_17030406, 0, (s_16360579[s_16360579_Idx]).length-1);
                    result_16360517[chckIndx(i_16360572, 0, (result_16360517).length-1)] = itm_16360587[itm_16360587_Idx];
                    i_16360572 = addInt(i_16360572, 1);
                    i_17030406 = addInt(i_17030406, 1);
                    if (!(((s_16360579[s_16360579_Idx]).length == L_17030407))) {
                    failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while(false);
            } while(false);
            i_17030409 = addInt(i_17030409, 1);
          }
      } while(false);
    } while(false);

  return result_16360517;

}
function rawGet_15885338(t_15885343, key_15885344, hc_15885345, hc_15885345_Idx) {
            var Tmp3;

  var result_15885346 = 0;

  BeforeRet: do {
    hc_15885345[hc_15885345_Idx] = hash_10270214(key_15885344);
    if ((hc_15885345[hc_15885345_Idx] == 0)) {
    hc_15885345[hc_15885345_Idx] = 314159265;
    }
    
    if (((t_15885343.data).length == 0)) {
    result_15885346 = -1;
    break BeforeRet;
    }
    
    var h_15895138 = (hc_15885345[hc_15885345_Idx] & (t_15885343.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_10291218(t_15885343.data[chckIndx(h_15895138, 0, (t_15885343.data).length-1)].Field0)) break L2;
            if (!(t_15885343.data[chckIndx(h_15895138, 0, (t_15885343.data).length-1)].Field0 == hc_15885345[hc_15885345_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_15885343.data[chckIndx(h_15895138, 0, (t_15885343.data).length-1)].Field2, key_15885344);            }          if (Tmp3) {
          result_15885346 = h_15895138;
          break BeforeRet;
          }
          
          h_15895138 = nextTry_10295014(h_15895138, (t_15885343.data).length - 1);
        }
    } while(false);
    result_15885346 = subInt(-1, h_15895138);
  } while (false);

  return result_15885346;

}
function mustRehash_16395601(t_16395604) {
  var result_16395605 = false;

    if (!((t_16395604.counter < (t_16395604.data).length))) {
    failedAssertImpl_115480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_16395605 = ((mulInt((t_16395604.data).length, 2) < mulInt(t_16395604.counter, 3)) || (subInt((t_16395604.data).length, t_16395604.counter) < 4));

  return result_16395605;

}
function rawInsert_16421359(t_16421365, data_16421368, data_16421368_Idx, key_16421369, val_16421371, hc_16421372, h_16421373) {
    data_16421368[data_16421368_Idx][chckIndx(h_16421373, 0, (data_16421368[data_16421368_Idx]).length-1)].Field2 = nimCopy(null, key_16421369, NTI113);
    data_16421368[data_16421368_Idx][chckIndx(h_16421373, 0, (data_16421368[data_16421368_Idx]).length-1)].Field3 = val_16421371;
    data_16421368[data_16421368_Idx][chckIndx(h_16421373, 0, (data_16421368[data_16421368_Idx]).length-1)].Field0 = hc_16421372;
    data_16421368[data_16421368_Idx][chckIndx(h_16421373, 0, (data_16421368[data_16421368_Idx]).length-1)].Field1 = -1;
    if ((t_16421365.first < 0)) {
    t_16421365.first = h_16421373;
    }
    
    if ((0 <= t_16421365.last)) {
    data_16421368[data_16421368_Idx][chckIndx(t_16421365.last, 0, (data_16421368[data_16421368_Idx]).length-1)].Field1 = h_16421373;
    }
    
    t_16421365.last = h_16421373;

  
}
function enlarge_16420180(t_16420186) {
          var Tmp6;
          var Tmp7;

    var n_16420194 = [];
    n_16420194 = new Array(chckRange(mulInt((t_16420186.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_16420186.data).length, 2), 0, 2147483647);++i) {n_16420194[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    var h_16420333 = t_16420186.first;
    t_16420186.first = -1;
    t_16420186.last = -1;
    var Tmp1 = t_16420186.data; t_16420186.data = n_16420194; n_16420194 = Tmp1;    L2: do {
        L3: while (true) {
        if (!(0 <= h_16420333)) break L3;
          var nxt_16420496 = n_16420194[chckIndx(h_16420333, 0, (n_16420194).length-1)].Field1;
          var eh_16420652 = n_16420194[chckIndx(h_16420333, 0, (n_16420194).length-1)].Field0;
          if (isFilled_10291218(eh_16420652)) {
          var j_16420659 = (eh_16420652 & (t_16420186.data).length - 1);
          L4: do {
              L5: while (true) {
              if (!isFilled_10291218(t_16420186.data[chckIndx(j_16420659, 0, (t_16420186.data).length-1)].Field0)) break L5;
                j_16420659 = nextTry_10295014(j_16420659, (t_16420186.data).length - 1);
              }
          } while(false);
          Tmp6 = n_16420194[chckIndx(h_16420333, 0, (n_16420194).length-1)].Field2;
          n_16420194[chckIndx(h_16420333, 0, (n_16420194).length-1)].Field2 = genericReset(n_16420194[chckIndx(h_16420333, 0, (n_16420194).length-1)].Field2, NTI113);
          Tmp7 = n_16420194[chckIndx(h_16420333, 0, (n_16420194).length-1)].Field3;
          n_16420194[chckIndx(h_16420333, 0, (n_16420194).length-1)].Field3 = genericReset(n_16420194[chckIndx(h_16420333, 0, (n_16420194).length-1)].Field3, NTI14631021);
          rawInsert_16421359(t_16420186, t_16420186, "data", Tmp6, Tmp7, n_16420194[chckIndx(h_16420333, 0, (n_16420194).length-1)].Field0, j_16420659);
          }
          
          h_16420333 = nxt_16420496;
        }
    } while(false);

  
}
function rawGetKnownHC_16422195(t_16422200, key_16422201, hc_16422202) {
  var result_16422203 = 0;

  BeforeRet: do {
    if (((t_16422200.data).length == 0)) {
    result_16422203 = -1;
    break BeforeRet;
    }
    
    var h_16425138 = (hc_16422202 & (t_16422200.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_10291218(t_16422200.data[chckIndx(h_16425138, 0, (t_16422200.data).length-1)].Field0)) break L2;
          if (((t_16422200.data[chckIndx(h_16425138, 0, (t_16422200.data).length-1)].Field0 == hc_16422202) && eqStrings(t_16422200.data[chckIndx(h_16425138, 0, (t_16422200.data).length-1)].Field2, key_16422201))) {
          result_16422203 = h_16425138;
          break BeforeRet;
          }
          
          h_16425138 = nextTry_10295014(h_16425138, (t_16422200.data).length - 1);
        }
    } while(false);
    result_16422203 = subInt(-1, h_16425138);
  } while (false);

  return result_16422203;

}
function hasKeyOrPut_16365277(t_16365283, key_16365284, val_16365285) {
  var result_16365286 = false;

    if (((t_16365283.data).length == 0)) {
    var correctSizeHEX60gensym336_16375001 = slotsNeeded_10295048(32);
    t_16365283.counter = 0;
    t_16365283.data = new Array(chckRange(correctSizeHEX60gensym336_16375001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym336_16375001, 0, 2147483647);++i) {t_16365283.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    t_16365283.first = -1;
    t_16365283.last = -1;
    }
    
    var hc_16380601 = [0];
    var index_16380630 = rawGet_15885338(t_16365283, key_16365284, hc_16380601, 0);
    if ((index_16380630 < 0)) {
    result_16365286 = false;
    if (((t_16365283.data).length == 0)) {
    var correctSizeHEX60gensym339_16390001 = slotsNeeded_10295048(32);
    t_16365283.counter = 0;
    t_16365283.data = new Array(chckRange(correctSizeHEX60gensym339_16390001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym339_16390001, 0, 2147483647);++i) {t_16365283.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    t_16365283.first = -1;
    t_16365283.last = -1;
    }
    
    if (mustRehash_16395601(t_16365283)) {
    enlarge_16420180(t_16365283);
    index_16380630 = rawGetKnownHC_16422195(t_16365283, key_16365284, hc_16380601[0]);
    }
    
    index_16380630 = subInt(-1, index_16380630);
    rawInsert_16421359(t_16365283, t_16365283, "data", key_16365284, val_16365285, hc_16380601[0], index_16380630);
    t_16365283.counter = addInt(t_16365283.counter, 1);
    }
    else {
      result_16365286 = true;
    }
    

  return result_16365286;

}
function newSeq_16365193(len_16365196) {
  var result_16365198 = [];

    result_16365198 = new Array(len_16365196); for (var i=0;i<len_16365196;++i) {result_16365198[i]=null;}
  return result_16365198;

}
function rawGet_16440602(t_16440606, key_16440607, hc_16440608, hc_16440608_Idx) {
            var Tmp3;

  var result_16440609 = 0;

  BeforeRet: do {
    hc_16440608[hc_16440608_Idx] = hash_10270214(key_16440607);
    if ((hc_16440608[hc_16440608_Idx] == 0)) {
    hc_16440608[hc_16440608_Idx] = 314159265;
    }
    
    if (((t_16440606.data).length == 0)) {
    result_16440609 = -1;
    break BeforeRet;
    }
    
    var h_16450138 = (hc_16440608[hc_16440608_Idx] & (t_16440606.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_10291218(t_16440606.data[chckIndx(h_16450138, 0, (t_16440606.data).length-1)].Field0)) break L2;
            if (!(t_16440606.data[chckIndx(h_16450138, 0, (t_16440606.data).length-1)].Field0 == hc_16440608[hc_16440608_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_16440606.data[chckIndx(h_16450138, 0, (t_16440606.data).length-1)].Field1, key_16440607);            }          if (Tmp3) {
          result_16440609 = h_16450138;
          break BeforeRet;
          }
          
          h_16450138 = nextTry_10295014(h_16450138, (t_16440606.data).length - 1);
        }
    } while(false);
    result_16440609 = subInt(-1, h_16450138);
  } while (false);

  return result_16440609;

}
function mustRehash_16465601(t_16465604) {
  var result_16465605 = false;

    if (!((t_16465604.counter < (t_16465604.data).length))) {
    failedAssertImpl_115480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_16465605 = ((mulInt((t_16465604.data).length, 2) < mulInt(t_16465604.counter, 3)) || (subInt((t_16465604.data).length, t_16465604.counter) < 4));

  return result_16465605;

}
function rawInsert_16491122(t_16491128, data_16491131, data_16491131_Idx, key_16491132, val_16491134, hc_16491135, h_16491136) {
    data_16491131[data_16491131_Idx][chckIndx(h_16491136, 0, (data_16491131[data_16491131_Idx]).length-1)].Field1 = nimCopy(null, key_16491132, NTI113);
    data_16491131[data_16491131_Idx][chckIndx(h_16491136, 0, (data_16491131[data_16491131_Idx]).length-1)].Field2 = val_16491134;
    data_16491131[data_16491131_Idx][chckIndx(h_16491136, 0, (data_16491131[data_16491131_Idx]).length-1)].Field0 = hc_16491135;

  
}
function enlarge_16490161(t_16490167) {
    var n_16490175 = [];
    n_16490175 = new Array(chckRange(mulInt((t_16490167.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_16490167.data).length, 2), 0, 2147483647);++i) {n_16490175[i]={Field0: 0, Field1: [], Field2: null};}    var Tmp1 = t_16490167.data; t_16490167.data = n_16490175; n_16490175 = Tmp1;    L2: do {
      var i_16490334 = 0;
      var colontmp__17030418 = 0;
      colontmp__17030418 = (n_16490175).length - 1;
      var res_17030419 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_17030419 <= colontmp__17030418)) break L4;
            i_16490334 = res_17030419;
            var eh_16490490 = n_16490175[chckIndx(i_16490334, 0, (n_16490175).length-1)].Field0;
            if (isFilled_10291218(eh_16490490)) {
            var j_16490497 = (eh_16490490 & (t_16490167.data).length - 1);
            L5: do {
                L6: while (true) {
                if (!isFilled_10291218(t_16490167.data[chckIndx(j_16490497, 0, (t_16490167.data).length-1)].Field0)) break L6;
                  j_16490497 = nextTry_10295014(j_16490497, (t_16490167.data).length - 1);
                }
            } while(false);
            rawInsert_16491122(t_16490167, t_16490167, "data", n_16490175[chckIndx(i_16490334, 0, (n_16490175).length-1)].Field1, n_16490175[chckIndx(i_16490334, 0, (n_16490175).length-1)].Field2, eh_16490490, j_16490497);
            }
            
            res_17030419 = addInt(res_17030419, 1);
          }
      } while(false);
    } while(false);

  
}
function rawGetKnownHC_16491629(t_16491633, key_16491634, hc_16491635) {
  var result_16491636 = 0;

  BeforeRet: do {
    if (((t_16491633.data).length == 0)) {
    result_16491636 = -1;
    break BeforeRet;
    }
    
    var h_16495138 = (hc_16491635 & (t_16491633.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_10291218(t_16491633.data[chckIndx(h_16495138, 0, (t_16491633.data).length-1)].Field0)) break L2;
          if (((t_16491633.data[chckIndx(h_16495138, 0, (t_16491633.data).length-1)].Field0 == hc_16491635) && eqStrings(t_16491633.data[chckIndx(h_16495138, 0, (t_16491633.data).length-1)].Field1, key_16491634))) {
          result_16491636 = h_16495138;
          break BeforeRet;
          }
          
          h_16495138 = nextTry_10295014(h_16495138, (t_16491633.data).length - 1);
        }
    } while(false);
    result_16491636 = subInt(-1, h_16495138);
  } while (false);

  return result_16491636;

}
function hasKeyOrPut_16426098(t_16426104, key_16426105, val_16426106) {
  var result_16426107 = false;

    if (((t_16426104.data).length == 0)) {
    var correctSizeHEX60gensym348_16435001 = slotsNeeded_10295048(32);
    t_16426104.counter = 0;
    t_16426104.data = new Array(chckRange(correctSizeHEX60gensym348_16435001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym348_16435001, 0, 2147483647);++i) {t_16426104.data[i]={Field0: 0, Field1: [], Field2: null};}    }
    
    var hc_16440601 = [0];
    var index_16450641 = rawGet_16440602(t_16426104, key_16426105, hc_16440601, 0);
    if ((index_16450641 < 0)) {
    result_16426107 = false;
    if (((t_16426104.data).length == 0)) {
    var correctSizeHEX60gensym353_16460001 = slotsNeeded_10295048(32);
    t_16426104.counter = 0;
    t_16426104.data = new Array(chckRange(correctSizeHEX60gensym353_16460001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym353_16460001, 0, 2147483647);++i) {t_16426104.data[i]={Field0: 0, Field1: [], Field2: null};}    }
    
    if (mustRehash_16465601(t_16426104)) {
    enlarge_16490161(t_16426104);
    index_16450641 = rawGetKnownHC_16491629(t_16426104, key_16426105, hc_16440601[0]);
    }
    
    index_16450641 = subInt(-1, index_16450641);
    rawInsert_16491122(t_16426104, t_16426104, "data", key_16426105, val_16426106, hc_16440601[0], index_16450641);
    t_16426104.counter = addInt(t_16426104.counter, 1);
    }
    else {
      result_16426107 = true;
    }
    

  return result_16426107;

}
function HEX2A_946019(x_946021, order_946022) {
  var result_946023 = 0;

    var y_946028 = subInt(order_946022, 1);
    result_946023 = subInt((x_946021 ^ y_946028), y_946028);

  return result_946023;

}
function sort_16505080(t_16505086, cmp_16505096, order_16505097) {
                      var Tmp9;
                        var Tmp10;

  BeforeRet: do {
    var list_16505098 = t_16505086.first;
    var p_16505099 = 0;
    var q_16505100 = 0;
    var e_16505101 = 0;
    var tail_16505102 = 0;
    var oldhead_16505103 = 0;
    var nmerges_16505104 = 0;
    var psize_16505105 = 0;
    var qsize_16505106 = 0;
    var i_16505107 = 0;
    if ((t_16505086.counter == 0)) {
    break BeforeRet;
    }
    
    var insize_16505109 = 1;
    L1: do {
        L2: while (true) {
        if (!true) break L2;
          p_16505099 = list_16505098;
          oldhead_16505103 = list_16505098;
          list_16505098 = -1;
          tail_16505102 = -1;
          nmerges_16505104 = 0;
          L3: do {
              L4: while (true) {
              if (!(0 <= p_16505099)) break L4;
                nmerges_16505104 = addInt(nmerges_16505104, 1);
                q_16505100 = p_16505099;
                psize_16505105 = 0;
                i_16505107 = 0;
                L5: do {
                    L6: while (true) {
                    if (!(i_16505107 < insize_16505109)) break L6;
                      psize_16505105 = addInt(psize_16505105, 1);
                      q_16505100 = t_16505086.data[chckIndx(q_16505100, 0, (t_16505086.data).length-1)].Field1;
                      if ((q_16505100 < 0)) {
                      break L5;
                      }
                      
                      i_16505107 = addInt(i_16505107, 1);
                    }
                } while(false);
                qsize_16505106 = insize_16505109;
                L7: do {
                    L8: while (true) {
                      if ((0 < psize_16505105)) Tmp9 = true; else {                        if (!(0 < qsize_16505106)) Tmp10 = false; else {                          Tmp10 = (0 <= q_16505100);                        }                        Tmp9 = Tmp10;                      }                    if (!Tmp9) break L8;
                      if ((psize_16505105 == 0)) {
                      e_16505101 = q_16505100;
                      q_16505100 = t_16505086.data[chckIndx(q_16505100, 0, (t_16505086.data).length-1)].Field1;
                      qsize_16505106 = subInt(qsize_16505106, 1);
                      }
                      else {
                      if (((qsize_16505106 == 0) || (q_16505100 < 0))) {
                      e_16505101 = p_16505099;
                      p_16505099 = t_16505086.data[chckIndx(p_16505099, 0, (t_16505086.data).length-1)].Field1;
                      psize_16505105 = subInt(psize_16505105, 1);
                      }
                      else {
                      if ((HEX2A_946019(cmp_16505096({Field0: nimCopy(null, t_16505086.data[chckIndx(p_16505099, 0, (t_16505086.data).length-1)].Field2, NTI113), Field1: t_16505086.data[chckIndx(p_16505099, 0, (t_16505086.data).length-1)].Field3}, {Field0: nimCopy(null, t_16505086.data[chckIndx(q_16505100, 0, (t_16505086.data).length-1)].Field2, NTI113), Field1: t_16505086.data[chckIndx(q_16505100, 0, (t_16505086.data).length-1)].Field3}), order_16505097) <= 0)) {
                      e_16505101 = p_16505099;
                      p_16505099 = t_16505086.data[chckIndx(p_16505099, 0, (t_16505086.data).length-1)].Field1;
                      psize_16505105 = subInt(psize_16505105, 1);
                      }
                      else {
                        e_16505101 = q_16505100;
                        q_16505100 = t_16505086.data[chckIndx(q_16505100, 0, (t_16505086.data).length-1)].Field1;
                        qsize_16505106 = subInt(qsize_16505106, 1);
                      }
                      }}
                      if ((0 <= tail_16505102)) {
                      t_16505086.data[chckIndx(tail_16505102, 0, (t_16505086.data).length-1)].Field1 = e_16505101;
                      }
                      else {
                        list_16505098 = e_16505101;
                      }
                      
                      tail_16505102 = e_16505101;
                    }
                } while(false);
                p_16505099 = q_16505100;
              }
          } while(false);
          t_16505086.data[chckIndx(tail_16505102, 0, (t_16505086.data).length-1)].Field1 = -1;
          if ((nmerges_16505104 <= 1)) {
          break L1;
          }
          
          insize_16505109 = mulInt(insize_16505109, 2);
        }
    } while(false);
    t_16505086.first = list_16505098;
    t_16505086.last = tail_16505102;
  } while (false);

  
}
function sortStreetTbl_16500222(x_16500227, y_16500229) {
    var Tmp1;
      var Tmp2;

  var result_16500230 = 0;

    var kX_16500231 = nimCopy(null, x_16500227["Field0"], NTI113);
    var kY_16500232 = nimCopy(null, y_16500229["Field0"], NTI113);
      if ((cmpStrings(kY_16500232, kX_16500231) < 0)) Tmp2 = true; else {        Tmp2 = eqStrings(kX_16500231, kY_16500232);      }    if (Tmp2) {
    Tmp1 = 1;
    }
    else {
    Tmp1 = -1;
    }
    
    result_16500230 = Tmp1;

  return result_16500230;

}
function hasKey_15885310(t_15885315, key_15885316) {
  var result_15885317 = false;

    var hc_15885318 = [0];
    result_15885317 = (0 <= rawGet_15885338(t_15885315, key_15885316, hc_15885318, 0));

  return result_15885317;

}
function hasKeyOrPut_15900618(t_15900624, key_15900625, val_15900626) {
  var result_15900627 = false;

    if (((t_15900624.data).length == 0)) {
    var correctSizeHEX60gensym243_15910001 = slotsNeeded_10295048(32);
    t_15900624.counter = 0;
    t_15900624.data = new Array(chckRange(correctSizeHEX60gensym243_15910001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym243_15910001, 0, 2147483647);++i) {t_15900624.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    t_15900624.first = -1;
    t_15900624.last = -1;
    }
    
    var hc_15915601 = [0];
    var index_15915630 = rawGet_14995621(t_15900624, key_15900625, hc_15915601, 0);
    if ((index_15915630 < 0)) {
    result_15900627 = false;
    if (((t_15900624.data).length == 0)) {
    var correctSizeHEX60gensym246_15925001 = slotsNeeded_10295048(32);
    t_15900624.counter = 0;
    t_15900624.data = new Array(chckRange(correctSizeHEX60gensym246_15925001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym246_15925001, 0, 2147483647);++i) {t_15900624.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    t_15900624.first = -1;
    t_15900624.last = -1;
    }
    
    if (mustRehash_15020601(t_15900624)) {
    enlarge_15045180(t_15900624);
    index_15915630 = rawGetKnownHC_15047195(t_15900624, key_15900625, hc_15915601[0]);
    }
    
    index_15915630 = subInt(-1, index_15915630);
    rawInsert_15046359(t_15900624, t_15900624, "data", key_15900625, val_15900626, hc_15915601[0], index_15915630);
    t_15900624.counter = addInt(t_15900624.counter, 1);
    }
    else {
      result_15900627 = true;
    }
    

  return result_15900627;

}
function nextId_14915043(s_14915045) {
    var Tmp1;
      var Tmp2;

  var result_14915046 = [];

    if (s_14915045.exclude) {
    Tmp1 = [];
    }
    else {
    Tmp1 = (s_14915045.postalCode || []).concat(makeNimstrLit("-") || [],cstrToNimstr((addInt((Tmp2 = HEX5BHEX5D_14915198(lastPostfix_14700629[0], s_14915045.postalCode), Tmp2)[0][Tmp2[1]], 1))+"") || []);
    }
    
    result_14915046 = nimCopy(null, Tmp1, NTI113);

  return result_14915046;

}
function HEX5BHEX5DHEX3D_15831059(t_15831065, key_15831066, val_15831068) {
    if (((t_15831065.data).length == 0)) {
    var correctSizeHEX60gensym229_15840001 = slotsNeeded_10295048(32);
    t_15831065.counter = 0;
    t_15831065.data = new Array(chckRange(correctSizeHEX60gensym229_15840001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym229_15840001, 0, 2147483647);++i) {t_15831065.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: []};}    t_15831065.first = -1;
    t_15831065.last = -1;
    }
    
    var hc_15845601 = [0];
    var index_15845630 = rawGet_15465621(t_15831065, key_15831066, hc_15845601, 0);
    if ((0 <= index_15845630)) {
    t_15831065.data[chckIndx(index_15845630, 0, (t_15831065.data).length-1)].Field3 = nimCopy(null, val_15831068, NTI14631062);
    }
    else {
      if (((t_15831065.data).length == 0)) {
      var correctSizeHEX60gensym232_15855001 = slotsNeeded_10295048(32);
      t_15831065.counter = 0;
      t_15831065.data = new Array(chckRange(correctSizeHEX60gensym232_15855001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym232_15855001, 0, 2147483647);++i) {t_15831065.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: []};}      t_15831065.first = -1;
      t_15831065.last = -1;
      }
      
      if (mustRehash_15490601(t_15831065)) {
      enlarge_15515180(t_15831065);
      index_15845630 = rawGetKnownHC_15517195(t_15831065, key_15831066, hc_15845601[0]);
      }
      
      index_15845630 = subInt(-1, index_15845630);
      rawInsert_15516359(t_15831065, t_15831065, "data", key_15831066, val_15831068, hc_15845601[0], index_15845630);
      t_15831065.counter = addInt(t_15831065.counter, 1);
    }
    

  
}
function onGrpStreet_15825848(e_15825850) {
    function HEX3Aanonymous_15830031(e_15830034) {
        var Tmp1;
        var Tmp2;
        var Tmp3;
        var Tmp4;
        var Tmp5;
        var Tmp6;
        var Tmp7;
          var Tmp8;
            var Tmp9;
          var Tmp10;
        var Tmp11;

        mvStreetGrp_14700630[0].removeAll();
        removeAllSectorFromMap_14930062();
        var trgtBtn_15830035 = e_15830034.target;
        var toSectId_15830037 = cstrToNimstr((Tmp1 = trgtBtn_15830035.parentNode.getElementsByTagName("select"), Tmp1)[chckIndx(0, 0, (Tmp1).length-1)].value);
        var sectFromId_15830038 = id_14915026(street_15830009.sector);
        var postCode_15830039 = nimCopy(null, street_15830009.sector.postalCode, NTI113);
        if (!(hasKey_15430110(allSectors_14690629[0], toSectId_15830037))) {
        (Tmp2 = HEX5BHEX5D_14915198(lastPostfix_14700629[0], postCode_15830039), Tmp2)[0][Tmp2[1]] = addInt(Tmp2[0][Tmp2[1]], 1);
        HEX5BHEX5DHEX3D_14980347(allSectors_14690629[0], toSectId_15830037, {city: nimCopy(null, addrCity_14710633[0], NTI113), postalCode: nimCopy(null, postCode_15830039, NTI113), district: nimCopy(null, street_15830009.sector.district, NTI113), pFix: (Tmp3 = HEX5BHEX5D_14915198(lastPostfix_14700629[0], postCode_15830039), Tmp3)[0][Tmp3[1]], streets: initOrderedTable_15690013(32), shownOnMap: false, folkDistrict: [], exclude: false});
        }
        
        street_15830009.sector = (Tmp4 = HEX5BHEX5D_15050843(allSectors_14690629[0], toSectId_15830037), Tmp4)[0][Tmp4[1]];
        HEX5BHEX5DHEX3D_15831059((Tmp5 = HEX5BHEX5D_15050843(allSectors_14690629[0], toSectId_15830037), Tmp5)[0][Tmp5[1]].streets, street_15830009.name, street_15830009.links);
        del_15675324((Tmp6 = HEX5BHEX5D_15050843(allSectors_14690629[0], sectFromId_15830038), Tmp6)[0][Tmp6[1]].streets, street_15830009.name);
        var fromSector_15861181 = (Tmp7 = HEX5BHEX5D_15050843(allSectors_14690629[0], sectFromId_15830038), Tmp7)[0][Tmp7[1]];
          if (!!(fromSector_15861181.exclude)) Tmp8 = false; else {            Tmp8 = (len_15255548((Tmp9 = HEX5BHEX5D_15050843(allSectors_14690629[0], sectFromId_15830038), Tmp9)[0][Tmp9[1]].streets) == 0);          }        if (Tmp8) {
        if ((fromSector_15861181.pFix == (Tmp10 = HEX5BHEX5D_14915198(lastPostfix_14700629[0], fromSector_15861181.postalCode), Tmp10)[0][Tmp10[1]])) {
        (Tmp11 = HEX5BHEX5D_14915198(lastPostfix_14700629[0], fromSector_15861181.postalCode), Tmp11)[0][Tmp11[1]] = subInt(Tmp11[0][Tmp11[1]], 1);
        }
        
        del_15521123(allSectors_14690629[0], sectFromId_15830038);
        }
        
        reindexSect_15415014();
        redraw_14200414(kxi_13647284[0]);

      
    }
    function HEX3Aanonymous_15870216(el_15870219, di_15870220, dm_15870221) {
        var Tmp1;
        var Tmp2;
        function HEX3Aanonymous_15870226(e_15870229) {
            mvStreetGrp_14700630[0].removeAll();

          
        }
        function HEX3Aanonymous_15870245(e_15870248) {
            map.removeEventListener("tap", loadLinks_14911053);

          
        }

        var btn_15870223 = (Tmp1 = el_15870219.getElementsByClassName("ok-str-mv"), Tmp1)[chckIndx(0, 0, (Tmp1).length-1)];
        var btnClose_15870225 = (Tmp2 = el_15870219.getElementsByClassName("close-str-mv"), Tmp2)[chckIndx(0, 0, (Tmp2).length-1)];
        btn_15870223.addEventListener("click", mvBtnHndl_15870214, false);
        btnClose_15870225.addEventListener("click", HEX3Aanonymous_15870226, false);
        var elEvt_15870244 = el_15870219;
        elEvt_15870244.addEventListener("mouseenter", HEX3Aanonymous_15870245, false);

      
    }
    function HEX3Aanonymous_15870293(el_15870296, di_15870297, dm_15870298) {
        var Tmp1;

        var btn_15870300 = (Tmp1 = el_15870296.getElementsByClassName("ok-str-mv"), Tmp1)[chckIndx(0, 0, (Tmp1).length-1)];
        btn_15870300.removeEventListener("click", mvBtnHndl_15870214);
        map.addEventListener("tap", loadLinks_14911053, false);

      
    }

    mvStreetGrp_14700630[0].removeAll();
    var trgtGrp_15830004 = e_15825850.currentTarget;
    var street_15830009 = trgtGrp_15830004.getData();
    var sectId_15830010 = id_14915026(street_15830009.sector);
    var sectNextId_15830011 = nextId_14915043(street_15830009.sector);
    var sectExclude_15830012 = street_15830009.sector.exclude;
    var elMoveStreet_15830013 = document.createElement("div");
    elMoveStreet_15830013.className = "move-str-marker";
    elMoveStreet_15830013.appendChild(document.createElement("span"));
    var elTxt_15830014 = document.createTextNode(toJSStr(street_15830009.name));
    elMoveStreet_15830013.childNodes[0].appendChild(elTxt_15830014);
    elMoveStreet_15830013.appendChild(document.createElement("div"));
    var selEl_15830015 = document.createElement("select");
    var mvOpt_15830016 = document.createElement("option");
    mvOpt_15830016.appendChild(document.createTextNode("Двинуть в"));
    selEl_15830015.appendChild(mvOpt_15830016);
    if (!(sectExclude_15830012)) {
    var mvOptNew_15830017 = document.createElement("option");
    mvOptNew_15830017.appendChild(document.createTextNode(toJSStr((sectNextId_15830011 || []).concat(makeNimstrLit("(\xD0\xBD\xD0\xBE\xD0\xB2\xD1\x8B\xD0\xB9)") || []))));
    mvOptNew_15830017.value = toJSStr(sectNextId_15830011);
    mvOptNew_15830017.setAttribute("data-new", "1");
    selEl_15830015.appendChild(mvOptNew_15830017);
    }
    
    L1: do {
      var kOpt_15830025 = [];
      var vOpt_15830026 = null;
      var L_17030452 = len_14930198(allSectors_14690629[0]);
      if ((0 < allSectors_14690629[0].counter)) {
      var h_17030453 = allSectors_14690629[0].first;
      L2: do {
          L3: while (true) {
          if (!(0 <= h_17030453)) break L3;
            var nxt_17030455 = allSectors_14690629[0].data[chckIndx(h_17030453, 0, (allSectors_14690629[0].data).length-1)].Field1;
            if (isFilled_10291218(allSectors_14690629[0].data[chckIndx(h_17030453, 0, (allSectors_14690629[0].data).length-1)].Field0)) {
            kOpt_15830025 = allSectors_14690629[0].data[chckIndx(h_17030453, 0, (allSectors_14690629[0].data).length-1)].Field2;
            vOpt_15830026 = allSectors_14690629[0].data[chckIndx(h_17030453, 0, (allSectors_14690629[0].data).length-1)].Field3;
            L4: do {
              if (eqStrings(kOpt_15830025, sectId_15830010)) {
              break L4;
              }
              
              var mvOpt_15830029 = document.createElement("option");
              mvOpt_15830029.appendChild(document.createTextNode(toJSStr(kOpt_15830025)));
              mvOpt_15830029.value = toJSStr(kOpt_15830025);
              selEl_15830015.appendChild(mvOpt_15830029);
            } while(false);
            if (!((len_14930198(allSectors_14690629[0]) == L_17030452))) {
            failedAssertImpl_115480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_17030453 = nxt_17030455;
          }
      } while(false);
      }
      
    } while(false);
    elMoveStreet_15830013.childNodes[1].appendChild(selEl_15830015);
    var btnOk_15830030 = document.createElement("button");
    btnOk_15830030.appendChild(document.createTextNode("Ok !"));
    btnOk_15830030.className = "ok-str-mv";
    var mvBtnHndl_15870214 = HEX3Aanonymous_15830031;
    var btnClose_15870215 = document.createElement("button");
    btnClose_15870215.appendChild(document.createTextNode("закрыть"));
    btnClose_15870215.className = "close-str-mv";
    elMoveStreet_15830013.childNodes[1].appendChild(btnOk_15830030);
    elMoveStreet_15830013.childNodes[1].appendChild(btnClose_15870215);
    var diOpt_15875215 = {onAttach: HEX3Aanonymous_15870216, onDetach: HEX3Aanonymous_15870293, m_type: NTI10626089};
    var iconMoveStreet_15875217 = function(element, opt){return new H.map.DomIcon(element, opt)}(elMoveStreet_15830013, diOpt_15875215);
    var geoPoint_15875218 = map.screenToGeo(e_15825850.currentPointer.viewportX, e_15825850.currentPointer.viewportY);
    var mvStreetMarker_15875219 = function(position){return new H.map.DomMarker(position)}(geoPoint_15875218);
    mvStreetMarker_15875219.setIcon(iconMoveStreet_15875217);
    mvStreetGrp_14700630[0].addObject(mvStreetMarker_15875219);
    rawEcho(makeNimstrLit("mvStreet: "));

  
}
function hasKey_15932013(t_15932018, key_15932019) {
  var result_15932020 = false;

    var hc_15932021 = [0];
    result_15932020 = (0 <= rawGet_15932022(t_15932018, key_15932019, hc_15932021, 0));

  return result_15932020;

}
function displayStreet_15880323(name_15880325, tree_15880326) {
      var Tmp1;
    var Tmp2;
    var Tmp3;
    var Tmp4;
    var Tmp5;
    var Tmp6;
      var Tmp8;
            var Tmp11;
            function HEX3Aanonymous_15931808(e_15931810) {
                map.removeEventListener("tap", loadLinks_14911053);

              
            }
            function HEX3Aanonymous_15931841(e_15931843) {
                map.addEventListener("tap", loadLinks_14911053, false);

              
            }
              var Tmp15;
                var Tmp16;
            var Tmp17;
                    var Tmp21;
                    var Tmp22;

  BeforeRet: do {
    if (!(hasKey_15885310(allStreets_14670629[0], name_15880325))) {
    break BeforeRet;
    }
    
    if (((Tmp1 = HEX5BHEX5D_15436312(allStreets_14670629[0], name_15880325), Tmp1)[0][Tmp1[1]].sector == null)) {
    var pFix_15900531 = (Tmp2 = HEX5BHEX5D_14915198(lastPostfix_14700629[0], postalCode_14710635[0]), Tmp2)[0][Tmp2[1]];
    var _ = hasKeyOrPut_15900618(allSectors_14690629[0], sectName_14710636[0], {city: nimCopy(null, addrCity_14710633[0], NTI113), postalCode: nimCopy(null, postalCode_14710635[0], NTI113), district: nimCopy(null, addrDistr_14710632[0], NTI113), pFix: pFix_15900531, streets: initOrderedTable_15690013(32), shownOnMap: false, folkDistrict: [], exclude: false});
    var _ = hasKeyOrPut_15450085((Tmp3 = HEX5BHEX5D_15050843(allSectors_14690629[0], sectName_14710636[0]), Tmp3)[0][Tmp3[1]].streets, name_15880325, (Tmp4 = HEX5BHEX5D_15436312(allStreets_14670629[0], name_15880325), Tmp4)[0][Tmp4[1]].links);
    (Tmp5 = HEX5BHEX5D_15436312(allStreets_14670629[0], name_15880325), Tmp5)[0][Tmp5[1]].sector = (Tmp6 = HEX5BHEX5D_15050843(allSectors_14690629[0], sectName_14710636[0]), Tmp6)[0][Tmp6[1]];
    }
    
    L7: do {
      var link_15931639 = null;
      var link_15931639_Idx = 0;
      var colontmp__17030443 = [];
      colontmp__17030443 = (Tmp8 = HEX5BHEX5D_15436312(allStreets_14670629[0], name_15880325), Tmp8)[0][Tmp8[1]].links;
      var i_17030444 = 0;
      var L_17030445 = (colontmp__17030443).length;
      L9: do {
          L10: while (true) {
          if (!(i_17030444 < L_17030445)) break L10;
            link_15931639 = colontmp__17030443; link_15931639_Idx = chckIndx(i_17030444, 0, (colontmp__17030443).length-1);
            var grpStreet_15931640 = function(){return new H.map.Group()}();
            grpStreet_15931640.setZIndex(99);
            grpStreet_15931640.setData((Tmp11 = HEX5BHEX5D_15436312(allStreets_14670629[0], name_15880325), Tmp11)[0][Tmp11[1]]);
            grpStreet_15931640.addEventListener("pointerenter", HEX3Aanonymous_15931808, true, null);
            grpStreet_15931640.addEventListener("pointerleave", HEX3Aanonymous_15931841, true, null);
            grpStreet_15931640.addEventListener("tap", onGrpStreet_15825848, true, null);
            mainGroup_15825008[0].addObject(grpStreet_15931640);
            var lnStr_15931895 = function(){return new H.geo.LineString();}();
            L12: do {
              var c_15931903 = null;
              var c_15931903_Idx = 0;
              var i_17030434 = 0;
              var L_17030435 = (link_15931639[link_15931639_Idx].geometry).length;
              L13: do {
                  L14: while (true) {
                  if (!(i_17030434 < L_17030435)) break L14;
                    c_15931903 = link_15931639[link_15931639_Idx].geometry; c_15931903_Idx = chckIndx(i_17030434, 0, (link_15931639[link_15931639_Idx].geometry).length-1);
                    lnStr_15931895.pushLatLngAlt(c_15931903[c_15931903_Idx].lat, c_15931903[c_15931903_Idx].lng, 1.0000000000000000e+00);
                    i_17030434 = addInt(i_17030434, 1);
                    if (!(((link_15931639[link_15931639_Idx].geometry).length == L_17030435))) {
                    failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while(false);
            } while(false);
              if (!hasKey_15932013(allLinks_14660629[0], link_15931639[link_15931639_Idx].linkId)) Tmp15 = false; else {                Tmp15 = !((Tmp16 = HEX5BHEX5D_15940788(allLinks_14660629[0], link_15931639[link_15931639_Idx].linkId), Tmp16)[0][Tmp16[1]].addedToMap);              }            if (Tmp15) {
            var pOpt_15945029 = {style: {strokeColor: "rgba(0, 0, 255, 0.3)", fillColor: "rgba(255, 0, 0, 0.4)", lineWidth: 10, m_type: NTI10626076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, zIndex: 99, m_type: NTI10626081};
            var pl_15945030 = function(ls, options){return new H.map.Polyline(ls, options)}(lnStr_15931895, pOpt_15945029);
            grpStreet_15931640.addObject(pl_15945030);
            (Tmp17 = HEX5BHEX5D_15940788(allLinks_14660629[0], link_15931639[link_15931639_Idx].linkId), Tmp17)[0][Tmp17[1]].addedToMap = true;
            }
            
            if (tree_15880326) {
            L18: do {
              var nLink_15950208 = null;
              var nLink_15950208_Idx = 0;
              var i_17030440 = 0;
              var L_17030441 = (link_15931639[link_15931639_Idx].neighborLinks).length;
              L19: do {
                  L20: while (true) {
                  if (!(i_17030440 < L_17030441)) break L20;
                    nLink_15950208 = link_15931639[link_15931639_Idx].neighborLinks; nLink_15950208_Idx = chckIndx(i_17030440, 0, (link_15931639[link_15931639_Idx].neighborLinks).length-1);
                    if ((0 < nLink_15950208[nLink_15950208_Idx])) {
                    Tmp21 = nLink_15950208[nLink_15950208_Idx];
                    }
                    else {
                    Tmp21 = mulInt(nLink_15950208[nLink_15950208_Idx], -1);
                    }
                    
                    var nLnk_15955001 = Tmp21;
                    if (hasKey_15932013(allLinks_14660629[0], nLnk_15955001)) {
                    displayStreet_15880323((Tmp22 = HEX5BHEX5D_15940788(allLinks_14660629[0], nLnk_15955001), Tmp22)[0][Tmp22[1]].name, false);
                    }
                    else {
                    }
                    
                    i_17030440 = addInt(i_17030440, 1);
                    if (!(((link_15931639[link_15931639_Idx].neighborLinks).length == L_17030441))) {
                    failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while(false);
            } while(false);
            }
            
            i_17030444 = addInt(i_17030444, 1);
            if (!(((colontmp__17030443).length == L_17030445))) {
            failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
  } while (false);

  
}
function mustRehash_16535601(t_16535604) {
  var result_16535605 = false;

    if (!((t_16535604.counter < (t_16535604.data).length))) {
    failedAssertImpl_115480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_16535605 = ((mulInt((t_16535604.data).length, 2) < mulInt(t_16535604.counter, 3)) || (subInt((t_16535604.data).length, t_16535604.counter) < 4));

  return result_16535605;

}
function rawInsert_16561122(t_16561128, data_16561131, data_16561131_Idx, key_16561132, val_16561134, hc_16561135, h_16561136) {
    data_16561131[data_16561131_Idx][chckIndx(h_16561136, 0, (data_16561131[data_16561131_Idx]).length-1)].Field1 = nimCopy(null, key_16561132, NTI113);
    data_16561131[data_16561131_Idx][chckIndx(h_16561136, 0, (data_16561131[data_16561131_Idx]).length-1)].Field2 = val_16561134;
    data_16561131[data_16561131_Idx][chckIndx(h_16561136, 0, (data_16561131[data_16561131_Idx]).length-1)].Field0 = hc_16561135;

  
}
function enlarge_16560161(t_16560167) {
    var n_16560175 = [];
    n_16560175 = new Array(chckRange(mulInt((t_16560167.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_16560167.data).length, 2), 0, 2147483647);++i) {n_16560175[i]={Field0: 0, Field1: [], Field2: 0};}    var Tmp1 = t_16560167.data; t_16560167.data = n_16560175; n_16560175 = Tmp1;    L2: do {
      var i_16560334 = 0;
      var colontmp__17030460 = 0;
      colontmp__17030460 = (n_16560175).length - 1;
      var res_17030461 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_17030461 <= colontmp__17030460)) break L4;
            i_16560334 = res_17030461;
            var eh_16560490 = n_16560175[chckIndx(i_16560334, 0, (n_16560175).length-1)].Field0;
            if (isFilled_10291218(eh_16560490)) {
            var j_16560497 = (eh_16560490 & (t_16560167.data).length - 1);
            L5: do {
                L6: while (true) {
                if (!isFilled_10291218(t_16560167.data[chckIndx(j_16560497, 0, (t_16560167.data).length-1)].Field0)) break L6;
                  j_16560497 = nextTry_10295014(j_16560497, (t_16560167.data).length - 1);
                }
            } while(false);
            rawInsert_16561122(t_16560167, t_16560167, "data", n_16560175[chckIndx(i_16560334, 0, (n_16560175).length-1)].Field1, n_16560175[chckIndx(i_16560334, 0, (n_16560175).length-1)].Field2, eh_16560490, j_16560497);
            }
            
            res_17030461 = addInt(res_17030461, 1);
          }
      } while(false);
    } while(false);

  
}
function rawGetKnownHC_16561629(t_16561633, key_16561634, hc_16561635) {
  var result_16561636 = 0;

  BeforeRet: do {
    if (((t_16561633.data).length == 0)) {
    result_16561636 = -1;
    break BeforeRet;
    }
    
    var h_16565138 = (hc_16561635 & (t_16561633.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_10291218(t_16561633.data[chckIndx(h_16565138, 0, (t_16561633.data).length-1)].Field0)) break L2;
          if (((t_16561633.data[chckIndx(h_16565138, 0, (t_16561633.data).length-1)].Field0 == hc_16561635) && eqStrings(t_16561633.data[chckIndx(h_16565138, 0, (t_16561633.data).length-1)].Field1, key_16561634))) {
          result_16561636 = h_16565138;
          break BeforeRet;
          }
          
          h_16565138 = nextTry_10295014(h_16565138, (t_16561633.data).length - 1);
        }
    } while(false);
    result_16561636 = subInt(-1, h_16565138);
  } while (false);

  return result_16561636;

}
function HEX5BHEX5DHEX3D_16507427(t_16507433, key_16507434, val_16507436) {
    if (((t_16507433.data).length == 0)) {
    var correctSizeHEX60gensym364_16515001 = slotsNeeded_10295048(32);
    t_16507433.counter = 0;
    t_16507433.data = new Array(chckRange(correctSizeHEX60gensym364_16515001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym364_16515001, 0, 2147483647);++i) {t_16507433.data[i]={Field0: 0, Field1: [], Field2: 0};}    }
    
    var hc_16520601 = [0];
    var index_16520610 = rawGet_14915209(t_16507433, key_16507434, hc_16520601, 0);
    if ((0 <= index_16520610)) {
    t_16507433.data[chckIndx(index_16520610, 0, (t_16507433.data).length-1)].Field2 = val_16507436;
    }
    else {
      if (((t_16507433.data).length == 0)) {
      var correctSizeHEX60gensym367_16530001 = slotsNeeded_10295048(32);
      t_16507433.counter = 0;
      t_16507433.data = new Array(chckRange(correctSizeHEX60gensym367_16530001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym367_16530001, 0, 2147483647);++i) {t_16507433.data[i]={Field0: 0, Field1: [], Field2: 0};}      }
      
      if (mustRehash_16535601(t_16507433)) {
      enlarge_16560161(t_16507433);
      index_16520610 = rawGetKnownHC_16561629(t_16507433, key_16507434, hc_16520601[0]);
      }
      
      index_16520610 = subInt(-1, index_16520610);
      rawInsert_16561122(t_16507433, t_16507433, "data", key_16507434, val_16507436, hc_16520601[0], index_16520610);
      t_16507433.counter = addInt(t_16507433.counter, 1);
    }
    

  
}
function sort_16570080(t_16570086, cmp_16570096, order_16570097) {
                      var Tmp9;
                        var Tmp10;

  BeforeRet: do {
    var list_16570098 = t_16570086.first;
    var p_16570099 = 0;
    var q_16570100 = 0;
    var e_16570101 = 0;
    var tail_16570102 = 0;
    var oldhead_16570103 = 0;
    var nmerges_16570104 = 0;
    var psize_16570105 = 0;
    var qsize_16570106 = 0;
    var i_16570107 = 0;
    if ((t_16570086.counter == 0)) {
    break BeforeRet;
    }
    
    var insize_16570109 = 1;
    L1: do {
        L2: while (true) {
        if (!true) break L2;
          p_16570099 = list_16570098;
          oldhead_16570103 = list_16570098;
          list_16570098 = -1;
          tail_16570102 = -1;
          nmerges_16570104 = 0;
          L3: do {
              L4: while (true) {
              if (!(0 <= p_16570099)) break L4;
                nmerges_16570104 = addInt(nmerges_16570104, 1);
                q_16570100 = p_16570099;
                psize_16570105 = 0;
                i_16570107 = 0;
                L5: do {
                    L6: while (true) {
                    if (!(i_16570107 < insize_16570109)) break L6;
                      psize_16570105 = addInt(psize_16570105, 1);
                      q_16570100 = t_16570086.data[chckIndx(q_16570100, 0, (t_16570086.data).length-1)].Field1;
                      if ((q_16570100 < 0)) {
                      break L5;
                      }
                      
                      i_16570107 = addInt(i_16570107, 1);
                    }
                } while(false);
                qsize_16570106 = insize_16570109;
                L7: do {
                    L8: while (true) {
                      if ((0 < psize_16570105)) Tmp9 = true; else {                        if (!(0 < qsize_16570106)) Tmp10 = false; else {                          Tmp10 = (0 <= q_16570100);                        }                        Tmp9 = Tmp10;                      }                    if (!Tmp9) break L8;
                      if ((psize_16570105 == 0)) {
                      e_16570101 = q_16570100;
                      q_16570100 = t_16570086.data[chckIndx(q_16570100, 0, (t_16570086.data).length-1)].Field1;
                      qsize_16570106 = subInt(qsize_16570106, 1);
                      }
                      else {
                      if (((qsize_16570106 == 0) || (q_16570100 < 0))) {
                      e_16570101 = p_16570099;
                      p_16570099 = t_16570086.data[chckIndx(p_16570099, 0, (t_16570086.data).length-1)].Field1;
                      psize_16570105 = subInt(psize_16570105, 1);
                      }
                      else {
                      if ((HEX2A_946019(cmp_16570096({Field0: nimCopy(null, t_16570086.data[chckIndx(p_16570099, 0, (t_16570086.data).length-1)].Field2, NTI113), Field1: t_16570086.data[chckIndx(p_16570099, 0, (t_16570086.data).length-1)].Field3}, {Field0: nimCopy(null, t_16570086.data[chckIndx(q_16570100, 0, (t_16570086.data).length-1)].Field2, NTI113), Field1: t_16570086.data[chckIndx(q_16570100, 0, (t_16570086.data).length-1)].Field3}), order_16570097) <= 0)) {
                      e_16570101 = p_16570099;
                      p_16570099 = t_16570086.data[chckIndx(p_16570099, 0, (t_16570086.data).length-1)].Field1;
                      psize_16570105 = subInt(psize_16570105, 1);
                      }
                      else {
                        e_16570101 = q_16570100;
                        q_16570100 = t_16570086.data[chckIndx(q_16570100, 0, (t_16570086.data).length-1)].Field1;
                        qsize_16570106 = subInt(qsize_16570106, 1);
                      }
                      }}
                      if ((0 <= tail_16570102)) {
                      t_16570086.data[chckIndx(tail_16570102, 0, (t_16570086.data).length-1)].Field1 = e_16570101;
                      }
                      else {
                        list_16570098 = e_16570101;
                      }
                      
                      tail_16570102 = e_16570101;
                    }
                } while(false);
                p_16570099 = q_16570100;
              }
          } while(false);
          t_16570086.data[chckIndx(tail_16570102, 0, (t_16570086.data).length-1)].Field1 = -1;
          if ((nmerges_16570104 <= 1)) {
          break L1;
          }
          
          insize_16570109 = mulInt(insize_16570109, 2);
        }
    } while(false);
    t_16570086.first = list_16570098;
    t_16570086.last = tail_16570102;
  } while (false);

  
}
function nsuRepeatStr(s_8755151, n_8755152) {
  var result_8755153 = [];

    result_8755153 = nimCopy(null, mnewString(0), NTI113);
    L1: do {
      var i_8755162 = 0;
      var colontmp__17030472 = 0;
      colontmp__17030472 = n_8755152;
      var res_17030473 = 1;
      L2: do {
          L3: while (true) {
          if (!(res_17030473 <= colontmp__17030472)) break L3;
            i_8755162 = res_17030473;
            result_8755153.push.apply(result_8755153, s_8755151);;
            res_17030473 = addInt(res_17030473, 1);
          }
      } while(false);
    } while(false);

  return result_8755153;

}
function sortSectorTbl_16565693(x_16565698, y_16565700) {
    var Tmp1;
      var Tmp2;

  var result_16565701 = 0;

    var akX_16565702 = nsuSplitString(x_16565698["Field0"], makeNimstrLit("-"), -1);
    var akY_16565703 = nsuSplitString(y_16565700["Field0"], makeNimstrLit("-"), -1);
    var kX_16565728 = (akX_16565702[chckIndx(0, 0, (akX_16565702).length-1)] || []).concat(makeNimstrLit("-") || [],nsuRepeatStr(makeNimstrLit("0"), chckRange(subInt(4, (akX_16565702[chckIndx((akX_16565702).length - 1, 0, (akX_16565702).length-1)]).length), 0, 2147483647)) || [],akX_16565702[chckIndx((akX_16565702).length - 1, 0, (akX_16565702).length-1)] || []);
    var kY_16565753 = (akY_16565703[chckIndx(0, 0, (akY_16565703).length-1)] || []).concat(makeNimstrLit("-") || [],nsuRepeatStr(makeNimstrLit("0"), chckRange(subInt(4, (akY_16565703[chckIndx((akY_16565703).length - 1, 0, (akY_16565703).length-1)]).length), 0, 2147483647)) || [],akY_16565703[chckIndx((akY_16565703).length - 1, 0, (akY_16565703).length-1)] || []);
      if ((cmpStrings(kY_16565753, kX_16565728) < 0)) Tmp2 = true; else {        Tmp2 = eqStrings(kX_16565728, kY_16565753);      }    if (Tmp2) {
    Tmp1 = 1;
    }
    else {
    Tmp1 = -1;
    }
    
    result_16565701 = Tmp1;

  return result_16565701;

}
function newSeq_16610024(len_16610027) {
  var result_16610029 = [];

    result_16610029 = new Array(len_16610027); for (var i=0;i<len_16610027;++i) {result_16610029[i]={Field0: 0.0, Field1: 0.0};}
  return result_16610029;

}
function initTable_16610072(initialSize_16610076) {
  var result_16610092 = ({data: [], counter: 0});

    var correctSizeHEX60gensym384_16615001 = slotsNeeded_10295048(chckRange(initialSize_16610076, 0, 2147483647));
    result_16610092.counter = 0;
    result_16610092.data = new Array(chckRange(correctSizeHEX60gensym384_16615001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym384_16615001, 0, 2147483647);++i) {result_16610092.data[i]={Field0: 0, Field1: [], Field2: {Field0: 0, Field1: 0, Field2: 0}};}
  return result_16610092;

}
function HEX2AHEX3D_10826033(x_10826037, x_10826037_Idx, y_10826038) {
    x_10826037[x_10826037_Idx] = mulInt(x_10826037[x_10826037_Idx], y_10826038);

  
}
function HEX5E_10826024(x_10826027, y_10826028) {
  var result_10826029 = [0];

    switch (y_10826028) {
    case 0:
      result_10826029[0] = 1;
      break;
    case 1:
      result_10826029[0] = x_10826027;
      break;
    case 2:
      result_10826029[0] = mulInt(x_10826027, x_10826027);
      break;
    case 3:
      result_10826029[0] = mulInt(mulInt(x_10826027, x_10826027), x_10826027);
      break;
    default: 
      var colontmp__17030481 = {Field0: x_10826027, Field1: nimCopy(null, y_10826028, NTI6604)};
      var x_10826031 = [colontmp__17030481["Field0"]];
      var y_10826032 = colontmp__17030481["Field1"];
      result_10826029[0] = 1;
      L1: do {
          L2: while (true) {
          if (!true) break L2;
            if (!(((y_10826032 & 1) == 0))) {
            HEX2AHEX3D_10826033(result_10826029, 0, x_10826031[0]);
            }
            
            y_10826032 = chckRange((y_10826032 >> 1), 0, 2147483647);
            if ((y_10826032 == 0)) {
            break L1;
            }
            
            HEX2AHEX3D_10826033(x_10826031, 0, x_10826031[0]);
          }
      } while(false);
      break;
    }

  return result_10826029[0];

}
function getCoord_10826015(level_10826017, tileX_10826018, tileY_10826019) {
  var result_10826021 = {Field0: 0.0, Field1: 0.0};

    var tileSize_10826081 = HEX2F_365648(180, HEX5E_10826024(2, chckRange(level_10826017, 0, 2147483647)));
    nimCopy(result_10826021, {Field0: ((tileY_10826019 * tileSize_10826081) - 9.0000000000000000e+01), Field1: ((tileX_10826018 * tileSize_10826081) - 1.8000000000000000e+02)}, NTI10826020);

  return result_10826021;

}
function rawGet_16645602(t_16645606, key_16645607, hc_16645608, hc_16645608_Idx) {
            var Tmp3;

  var result_16645609 = 0;

  BeforeRet: do {
    hc_16645608[hc_16645608_Idx] = hash_10270214(key_16645607);
    if ((hc_16645608[hc_16645608_Idx] == 0)) {
    hc_16645608[hc_16645608_Idx] = 314159265;
    }
    
    if (((t_16645606.data).length == 0)) {
    result_16645609 = -1;
    break BeforeRet;
    }
    
    var h_16655138 = (hc_16645608[hc_16645608_Idx] & (t_16645606.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_10291218(t_16645606.data[chckIndx(h_16655138, 0, (t_16645606.data).length-1)].Field0)) break L2;
            if (!(t_16645606.data[chckIndx(h_16655138, 0, (t_16645606.data).length-1)].Field0 == hc_16645608[hc_16645608_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_16645606.data[chckIndx(h_16655138, 0, (t_16645606.data).length-1)].Field1, key_16645607);            }          if (Tmp3) {
          result_16645609 = h_16655138;
          break BeforeRet;
          }
          
          h_16655138 = nextTry_10295014(h_16655138, (t_16645606.data).length - 1);
        }
    } while(false);
    result_16645609 = subInt(-1, h_16655138);
  } while (false);

  return result_16645609;

}
function mustRehash_16670601(t_16670604) {
  var result_16670605 = false;

    if (!((t_16670604.counter < (t_16670604.data).length))) {
    failedAssertImpl_115480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_16670605 = ((mulInt((t_16670604.data).length, 2) < mulInt(t_16670604.counter, 3)) || (subInt((t_16670604.data).length, t_16670604.counter) < 4));

  return result_16670605;

}
function rawInsert_16696123(t_16696129, data_16696132, data_16696132_Idx, key_16696133, val_16696135, hc_16696136, h_16696137) {
    data_16696132[data_16696132_Idx][chckIndx(h_16696137, 0, (data_16696132[data_16696132_Idx]).length-1)].Field1 = nimCopy(null, key_16696133, NTI113);
    nimCopy(data_16696132[data_16696132_Idx][chckIndx(h_16696137, 0, (data_16696132[data_16696132_Idx]).length-1)].Field2, val_16696135, NTI16610067);
    data_16696132[data_16696132_Idx][chckIndx(h_16696137, 0, (data_16696132[data_16696132_Idx]).length-1)].Field0 = hc_16696136;

  
}
function enlarge_16695161(t_16695167) {
    var n_16695175 = [];
    n_16695175 = new Array(chckRange(mulInt((t_16695167.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_16695167.data).length, 2), 0, 2147483647);++i) {n_16695175[i]={Field0: 0, Field1: [], Field2: {Field0: 0, Field1: 0, Field2: 0}};}    var Tmp1 = t_16695167.data; t_16695167.data = n_16695175; n_16695175 = Tmp1;    L2: do {
      var i_16695334 = 0;
      var colontmp__17030485 = 0;
      colontmp__17030485 = (n_16695175).length - 1;
      var res_17030486 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_17030486 <= colontmp__17030485)) break L4;
            i_16695334 = res_17030486;
            var eh_16695490 = n_16695175[chckIndx(i_16695334, 0, (n_16695175).length-1)].Field0;
            if (isFilled_10291218(eh_16695490)) {
            var j_16695497 = (eh_16695490 & (t_16695167.data).length - 1);
            L5: do {
                L6: while (true) {
                if (!isFilled_10291218(t_16695167.data[chckIndx(j_16695497, 0, (t_16695167.data).length-1)].Field0)) break L6;
                  j_16695497 = nextTry_10295014(j_16695497, (t_16695167.data).length - 1);
                }
            } while(false);
            rawInsert_16696123(t_16695167, t_16695167, "data", n_16695175[chckIndx(i_16695334, 0, (n_16695175).length-1)].Field1, n_16695175[chckIndx(i_16695334, 0, (n_16695175).length-1)].Field2, eh_16695490, j_16695497);
            }
            
            res_17030486 = addInt(res_17030486, 1);
          }
      } while(false);
    } while(false);

  
}
function rawGetKnownHC_16696630(t_16696634, key_16696635, hc_16696636) {
  var result_16696637 = 0;

  BeforeRet: do {
    if (((t_16696634.data).length == 0)) {
    result_16696637 = -1;
    break BeforeRet;
    }
    
    var h_16700138 = (hc_16696636 & (t_16696634.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_10291218(t_16696634.data[chckIndx(h_16700138, 0, (t_16696634.data).length-1)].Field0)) break L2;
          if (((t_16696634.data[chckIndx(h_16700138, 0, (t_16696634.data).length-1)].Field0 == hc_16696636) && eqStrings(t_16696634.data[chckIndx(h_16700138, 0, (t_16696634.data).length-1)].Field1, key_16696635))) {
          result_16696637 = h_16700138;
          break BeforeRet;
          }
          
          h_16700138 = nextTry_10295014(h_16700138, (t_16696634.data).length - 1);
        }
    } while(false);
    result_16696637 = subInt(-1, h_16700138);
  } while (false);

  return result_16696637;

}
function HEX5BHEX5DHEX3D_16630144(t_16630150, key_16630151, val_16630153) {
    if (((t_16630150.data).length == 0)) {
    var correctSizeHEX60gensym389_16640001 = slotsNeeded_10295048(32);
    t_16630150.counter = 0;
    t_16630150.data = new Array(chckRange(correctSizeHEX60gensym389_16640001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym389_16640001, 0, 2147483647);++i) {t_16630150.data[i]={Field0: 0, Field1: [], Field2: {Field0: 0, Field1: 0, Field2: 0}};}    }
    
    var hc_16645601 = [0];
    var index_16655641 = rawGet_16645602(t_16630150, key_16630151, hc_16645601, 0);
    if ((0 <= index_16655641)) {
    nimCopy(t_16630150.data[chckIndx(index_16655641, 0, (t_16630150.data).length-1)].Field2, val_16630153, NTI16610067);
    }
    else {
      if (((t_16630150.data).length == 0)) {
      var correctSizeHEX60gensym394_16665001 = slotsNeeded_10295048(32);
      t_16630150.counter = 0;
      t_16630150.data = new Array(chckRange(correctSizeHEX60gensym394_16665001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym394_16665001, 0, 2147483647);++i) {t_16630150.data[i]={Field0: 0, Field1: [], Field2: {Field0: 0, Field1: 0, Field2: 0}};}      }
      
      if (mustRehash_16670601(t_16630150)) {
      enlarge_16695161(t_16630150);
      index_16655641 = rawGetKnownHC_16696630(t_16630150, key_16630151, hc_16645601[0]);
      }
      
      index_16655641 = subInt(-1, index_16655641);
      rawInsert_16696123(t_16630150, t_16630150, "data", key_16630151, val_16630153, hc_16645601[0], index_16655641);
      t_16630150.counter = addInt(t_16630150.counter, 1);
    }
    

  
}
function getTileXY_10826113(level_10826115, lat_10826116, lng_10826117) {
  var result_10826119 = {Field0: 0, Field1: 0};

    var tileSize_10826127 = HEX2F_365648(180, HEX5E_10826024(2, chckRange(level_10826115, 0, 2147483647)));
    nimCopy(result_10826119, {Field0: ((Math.trunc(((lng_10826117 + 1.8000000000000000e+02) / tileSize_10826127)))|0), Field1: ((Math.trunc(((lat_10826116 + 9.0000000000000000e+01) / tileSize_10826127)))|0)}, NTI10826118);

  return result_10826119;

}
function hasKeyOrPut_16720281(t_16720287, key_16720288, val_16720289) {
  var result_16720290 = false;

    if (((t_16720287.data).length == 0)) {
    var correctSizeHEX60gensym407_16730001 = slotsNeeded_10295048(32);
    t_16720287.counter = 0;
    t_16720287.data = new Array(chckRange(correctSizeHEX60gensym407_16730001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym407_16730001, 0, 2147483647);++i) {t_16720287.data[i]={Field0: 0, Field1: [], Field2: {Field0: 0, Field1: 0, Field2: 0}};}    }
    
    var hc_16735601 = [0];
    var index_16735610 = rawGet_16645602(t_16720287, key_16720288, hc_16735601, 0);
    if ((index_16735610 < 0)) {
    result_16720290 = false;
    if (((t_16720287.data).length == 0)) {
    var correctSizeHEX60gensym410_16745001 = slotsNeeded_10295048(32);
    t_16720287.counter = 0;
    t_16720287.data = new Array(chckRange(correctSizeHEX60gensym410_16745001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym410_16745001, 0, 2147483647);++i) {t_16720287.data[i]={Field0: 0, Field1: [], Field2: {Field0: 0, Field1: 0, Field2: 0}};}    }
    
    if (mustRehash_16670601(t_16720287)) {
    enlarge_16695161(t_16720287);
    index_16735610 = rawGetKnownHC_16696630(t_16720287, key_16720288, hc_16735601[0]);
    }
    
    index_16735610 = subInt(-1, index_16735610);
    rawInsert_16696123(t_16720287, t_16720287, "data", key_16720288, val_16720289, hc_16735601[0], index_16735610);
    t_16720287.counter = addInt(t_16720287.counter, 1);
    }
    else {
      result_16720290 = true;
    }
    

  return result_16720290;

}
function len_16750823(t_16750828) {
  var result_16750829 = 0;

    result_16750829 = t_16750828.counter;

  return result_16750829;

}
function hasKey_16760339(t_16760344, key_16760345) {
  var result_16760346 = false;

    var hc_16760347 = [0];
    result_16760346 = (0 <= rawGet_16440602(t_16760344, key_16760345, hc_16760347, 0));

  return result_16760346;

}
function hasKeyOrPut_16945086(t_16945092, key_16945093, val_16945094) {
  var result_16945095 = false;

    if (((t_16945092.data).length == 0)) {
    var correctSizeHEX60gensym452_16955001 = slotsNeeded_10295048(32);
    t_16945092.counter = 0;
    t_16945092.data = new Array(chckRange(correctSizeHEX60gensym452_16955001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym452_16955001, 0, 2147483647);++i) {t_16945092.data[i]={Field0: 0, Field1: [], Field2: 0};}    }
    
    var hc_16960601 = [0];
    var index_16960610 = rawGet_14915209(t_16945092, key_16945093, hc_16960601, 0);
    if ((index_16960610 < 0)) {
    result_16945095 = false;
    if (((t_16945092.data).length == 0)) {
    var correctSizeHEX60gensym455_16970001 = slotsNeeded_10295048(32);
    t_16945092.counter = 0;
    t_16945092.data = new Array(chckRange(correctSizeHEX60gensym455_16970001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym455_16970001, 0, 2147483647);++i) {t_16945092.data[i]={Field0: 0, Field1: [], Field2: 0};}    }
    
    if (mustRehash_16535601(t_16945092)) {
    enlarge_16560161(t_16945092);
    index_16960610 = rawGetKnownHC_16561629(t_16945092, key_16945093, hc_16960601[0]);
    }
    
    index_16960610 = subInt(-1, index_16960610);
    rawInsert_16561122(t_16945092, t_16945092, "data", key_16945093, val_16945094, hc_16960601[0], index_16960610);
    t_16945092.counter = addInt(t_16945092.counter, 1);
    }
    else {
      result_16945095 = true;
    }
    

  return result_16945095;

}
function loadLinks_14911053(e_14911056) {
function parseTiles_16145250(tiles_16145253) {
                        var Tmp8;
                          var Tmp9;
                        var Tmp10;
                              var Tmp16;
                                var Tmp17;
                                var Tmp18;
                              var Tmp19;
                              var Tmp20;
                              var Tmp21;
                              var Tmp22;
                              var Tmp23;
                      var Tmp29;
                              var Tmp33;
                              var Tmp34;
                              var Tmp35;
                      var Tmp36;
                      var Tmp37;
                      var Tmp38;
                      var Tmp39;
                      var Tmp40;
                        var Tmp41;
                      var Tmp42;
                      var Tmp43;
                      var Tmp44;
                      var Tmp45;
                      function HEX3Aanonymous_16360201(x_16360203) {
                        var result_16360204 = 0;

                          result_16360204 = parseInt(toJSStr(x_16360203), 10);

                        return result_16360204;

                      }
                      var Tmp46;
                        function HEX3Aanonymous_16360310(x_16360312) {
                          var result_16360313 = 0;

                            result_16360313 = parseInt(toJSStr(x_16360312), 10);

                          return result_16360313;

                        }
                      var Tmp47;
                      var Tmp48;
                        var Tmp49;
                          var Tmp50;
                      var Tmp51;
                      var Tmp52;
    var Tmp57;
    var Tmp58;

    L1: do {
      var t_16155214 = null;
      var t_16155214_Idx = 0;
      var i_17030372 = 0;
      var L_17030373 = (tiles_16145253).length;
      L2: do {
          L3: while (true) {
          if (!(i_17030372 < L_17030373)) break L3;
            t_16155214 = tiles_16145253; t_16155214_Idx = chckIndx(i_17030372, 0, (tiles_16145253).length-1);
            var rows_16160012 = (t_16155214[t_16155214_Idx].Rows);
            var meta_16165010 = (t_16155214[t_16155214_Idx].Meta);
            var tileId_16185020 = nsuJoinSep([cstrToNimstr((meta_16165010.tileX)), cstrToNimstr((meta_16165010.tileY)), cstrToNimstr((meta_16165010.level)), cstrToNimstr((meta_16165010.layerName))], makeNimstrLit("_"));
            L4: do {
              var r_16190208 = null;
              var r_16190208_Idx = 0;
              var i_17030369 = 0;
              var L_17030370 = (rows_16160012).length;
              L5: do {
                  L6: while (true) {
                  if (!(i_17030369 < L_17030370)) break L6;
                    r_16190208 = rows_16160012; r_16190208_Idx = chckIndx(i_17030369, 0, (rows_16160012).length-1);
                    L7: do {
                      var linkId_16195010 = parseInt(toJSStr(cstrToNimstr((r_16190208[r_16190208_Idx].LINK_ID))), 10);
                        if (!hasKeyOrPut_16195087(allLinks_14660629[0], linkId_16195010, {linkId: linkId_16195010, name: [], cityId: 0, districtId: 0, postalCode: [], neighborLinks: [], geometry: [], readOnly: false, addedToMap: false, addedToSector: false})) Tmp8 = false; else {                          Tmp8 = (Tmp9 = HEX5BHEX5D_15940788(allLinks_14660629[0], linkId_16195010), Tmp9)[0][Tmp9[1]].readOnly;                        }                      if (Tmp8) {
                      break L7;
                      }
                      
                        if (!(r_16190208[r_16190208_Idx].NAMES)) Tmp10 = false; else {                          Tmp10 = !((r_16190208[r_16190208_Idx].NAME));                        }                      if (Tmp10) {
                      var strName_16275010 = cstrToNimstr((r_16190208[r_16190208_Idx].NAMES));
                      L11: do {
                        var seqNames_16275011 = [];
                        var lastHEX60gensym33_17030343 = 0;
                        var splitsHEX60gensym33_17030344 = -1;
                        L12: do {
                            L13: while (true) {
                            if (!(lastHEX60gensym33_17030343 <= (strName_16275010).length)) break L13;
                              var firstHEX60gensym33_17030346 = lastHEX60gensym33_17030343;
                              L14: do {
                                  L15: while (true) {
                                  if (!((lastHEX60gensym33_17030343 < (strName_16275010).length) && !(substrEq_8325026(strName_16275010, lastHEX60gensym33_17030343, makeNimstrLit("\x1D"))))) break L15;
                                    lastHEX60gensym33_17030343 = addInt(lastHEX60gensym33_17030343, 1);
                                  }
                              } while(false);
                              if ((splitsHEX60gensym33_17030344 == 0)) {
                              lastHEX60gensym33_17030343 = (strName_16275010).length;
                              }
                              
                              seqNames_16275011 = substr_381022(strName_16275010, firstHEX60gensym33_17030346, subInt(lastHEX60gensym33_17030343, 1));
                              var txt_16280201 = nsuReplaceStr((Tmp16 = nsuSplitString(seqNames_16275011, makeNimstrLit("\x1E"), -1), Tmp16)[chckIndx(0, 0, (Tmp16).length-1)], makeNimstrLit("GERBN"), []);
                                if (!!((ConstSet15[txt_16280201[chckIndx(0, 0, (txt_16280201).length-1)]] != undefined))) Tmp17 = false; else {                                  Tmp17 = !((ConstSet16[txt_16280201[chckIndx(1, 0, (txt_16280201).length-1)]] != undefined));                                }                              if (Tmp17) {
                              if (!(eqStrings((Tmp18 = HEX5BHEX5D_15940788(allLinks_14660629[0], linkId_16195010), Tmp18)[0][Tmp18[1]].name, []))) {
                              break L11;
                              }
                              
                              (Tmp19 = HEX5BHEX5D_15940788(allLinks_14660629[0], linkId_16195010), Tmp19)[0][Tmp19[1]].name = nimCopy(null, ((Tmp20 = HEX5BHEX5D_15940788(allLinks_14660629[0], linkId_16195010), Tmp20)[0][Tmp20[1]].name || []).concat(makeNimstrLit(" ") || [],nsuReplaceStr((Tmp21 = nsuSplitString(seqNames_16275011, makeNimstrLit("\x1E"), -1), Tmp21)[chckIndx(0, 0, (Tmp21).length-1)], makeNimstrLit("GERBN"), []) || []), NTI113);
                              (Tmp22 = HEX5BHEX5D_15940788(allLinks_14660629[0], linkId_16195010), Tmp22)[0][Tmp22[1]].name = nimCopy(null, nucStrip((Tmp23 = HEX5BHEX5D_15940788(allLinks_14660629[0], linkId_16195010), Tmp23)[0][Tmp23[1]].name, true, true, unicodeSpaces_1844041), NTI113);
                              break L11;
                              }
                              
                              L24: do {
                                var seqText_16295808 = [];
                                var lastHEX60gensym33_17030338 = 0;
                                var splitsHEX60gensym33_17030339 = -1;
                                L25: do {
                                    L26: while (true) {
                                    if (!(lastHEX60gensym33_17030338 <= (seqNames_16275011).length)) break L26;
                                      var firstHEX60gensym33_17030341 = lastHEX60gensym33_17030338;
                                      L27: do {
                                          L28: while (true) {
                                          if (!((lastHEX60gensym33_17030338 < (seqNames_16275011).length) && !(substrEq_8325026(seqNames_16275011, lastHEX60gensym33_17030338, makeNimstrLit("\x1E"))))) break L28;
                                            lastHEX60gensym33_17030338 = addInt(lastHEX60gensym33_17030338, 1);
                                          }
                                      } while(false);
                                      if ((splitsHEX60gensym33_17030339 == 0)) {
                                      lastHEX60gensym33_17030338 = (seqNames_16275011).length;
                                      }
                                      
                                      seqText_16295808 = substr_381022(seqNames_16275011, firstHEX60gensym33_17030341, subInt(lastHEX60gensym33_17030338, 1));
                                      if ((splitsHEX60gensym33_17030339 == 0)) {
                                      break L25;
                                      }
                                      
                                      splitsHEX60gensym33_17030339 = subInt(splitsHEX60gensym33_17030339, 1);
                                      lastHEX60gensym33_17030338 = addInt(lastHEX60gensym33_17030338, 1);
                                    }
                                } while(false);
                              } while(false);
                              if ((splitsHEX60gensym33_17030344 == 0)) {
                              break L12;
                              }
                              
                              splitsHEX60gensym33_17030344 = subInt(splitsHEX60gensym33_17030344, 1);
                              lastHEX60gensym33_17030343 = addInt(lastHEX60gensym33_17030343, 1);
                            }
                        } while(false);
                      } while(false);
                      }
                      else {
                      if ((r_16190208[r_16190208_Idx].NAME)) {
                      (Tmp29 = HEX5BHEX5D_15940788(allLinks_14660629[0], linkId_16195010), Tmp29)[0][Tmp29[1]].geometry = nimCopy(null, newSeq_16305181(0), NTI16305185);
                      var lats_16310010 = nsuSplitString(cstrToNimstr((r_16190208[r_16190208_Idx].LAT)), makeNimstrLit(","), -1);
                      var lngs_16315010 = nsuSplitString(cstrToNimstr((r_16190208[r_16190208_Idx].LON)), makeNimstrLit(","), -1);
                      var lat0_16315011 = 0.0;
                      var lng0_16315012 = 0.0;
                      L30: do {
                        var i_16315027 = 0;
                        var colontmp__17030355 = 0;
                        colontmp__17030355 = (lats_16310010).length - 1;
                        var res_17030356 = 0;
                        L31: do {
                            L32: while (true) {
                            if (!(res_17030356 <= colontmp__17030355)) break L32;
                              i_16315027 = res_17030356;
                              if (eqStrings(nucStrip(lats_16310010[chckIndx(i_16315027, 0, (lats_16310010).length-1)], true, true, unicodeSpaces_1844041), [])) {
                              Tmp33 = lat0_16315011;
                              }
                              else {
                              Tmp33 = (lat0_16315011 + parseFloat(toJSStr(nucStrip(lats_16310010[chckIndx(i_16315027, 0, (lats_16310010).length-1)], true, true, unicodeSpaces_1844041))));
                              }
                              
                              var strLat_16315030 = Tmp33;
                              if (eqStrings(nucStrip(lngs_16315010[chckIndx(i_16315027, 0, (lngs_16315010).length-1)], true, true, unicodeSpaces_1844041), [])) {
                              Tmp34 = lng0_16315012;
                              }
                              else {
                              Tmp34 = (lng0_16315012 + parseFloat(toJSStr(nucStrip(lngs_16315010[chckIndx(i_16315027, 0, (lngs_16315010).length-1)], true, true, unicodeSpaces_1844041))));
                              }
                              
                              var strLng_16315033 = Tmp34;
                              (Tmp35 = HEX5BHEX5D_15940788(allLinks_14660629[0], linkId_16195010), Tmp35)[0][Tmp35[1]].geometry.push({lat: nimCopy(null, (strLat_16315030 / 1.0000000000000000e+05), NTI10531016), lng: nimCopy(null, (strLng_16315033 / 1.0000000000000000e+05), NTI10531018)});;
                              lat0_16315011 = strLat_16315030;
                              lng0_16315012 = strLng_16315033;
                              res_17030356 = addInt(res_17030356, 1);
                            }
                        } while(false);
                      } while(false);
                      }
                      else {
                      if ((r_16190208[r_16190208_Idx].POSTAL_CODES)) {
                      (Tmp36 = HEX5BHEX5D_15940788(allLinks_14660629[0], linkId_16195010), Tmp36)[0][Tmp36[1]].cityId = parseInt(toJSStr((Tmp38 = nsuSplitString((Tmp37 = nsuSplitString(cstrToNimstr((r_16190208[r_16190208_Idx].ADMIN_PLACE_IDS)), makeNimstrLit(","), -1), Tmp37)[chckIndx(3, 0, (Tmp37).length-1)], makeNimstrLit(";"), -1), Tmp38)[chckIndx(0, 0, (Tmp38).length-1)]), 10);
                      var distrPrt_16330010 = nimCopy(null, (Tmp39 = nsuSplitString(cstrToNimstr((r_16190208[r_16190208_Idx].ADMIN_PLACE_IDS)), makeNimstrLit(","), -1), Tmp39)[chckIndx(4, 0, (Tmp39).length-1)], NTI113);
                      if ((eqStrings(distrPrt_16330010, []) || (distrPrt_16330010[chckIndx(0, 0, (distrPrt_16330010).length-1)] == 59))) {
                      Tmp40 = 0;
                      }
                      else {
                      Tmp40 = parseInt(toJSStr((Tmp41 = nsuSplitString(distrPrt_16330010, makeNimstrLit(";"), -1), Tmp41)[chckIndx(0, 0, (Tmp41).length-1)]), 10);
                      }
                      
                      var districtId_16335204 = Tmp40;
                      (Tmp42 = HEX5BHEX5D_15940788(allLinks_14660629[0], linkId_16195010), Tmp42)[0][Tmp42[1]].districtId = addInt(districtId_16335204, (Tmp43 = HEX5BHEX5D_15940788(allLinks_14660629[0], linkId_16195010), Tmp43)[0][Tmp43[1]].cityId);
                      (Tmp44 = HEX5BHEX5D_15940788(allLinks_14660629[0], linkId_16195010), Tmp44)[0][Tmp44[1]].postalCode = nimCopy(null, (Tmp45 = nsuSplitString(cstrToNimstr((r_16190208[r_16190208_Idx].POSTAL_CODES)), makeNimstrLit(";"), -1), Tmp45)[chckIndx(0, 0, (Tmp45).length-1)], NTI113);
                      }
                      else {
                      if ((r_16190208[r_16190208_Idx].REF_NODE_NEIGHBOR_LINKS)) {
                      var rLinks_16350010 = cstrToNimstr((r_16190208[r_16190208_Idx].REF_NODE_NEIGHBOR_LINKS));
                      var nonRLinks_16355010 = cstrToNimstr((r_16190208[r_16190208_Idx].NONREF_NODE_NEIGHBOR_LINKS));
                      var refLinks_16355011 = nsuSplitString(rLinks_16350010, makeNimstrLit(","), -1);
                      var nonRefLinks_16355012 = nsuSplitString(nonRLinks_16355010, makeNimstrLit(","), -1);
                      var refLinksInt_16360270 = map_16360221(refLinks_16355011, HEX3Aanonymous_16360201);
                      if (eqStrings(nonRLinks_16355010, [])) {
                      Tmp46 = newSeq_16360283(0);
                      }
                      else {
                      Tmp46 = map_16360221(nonRefLinks_16355012, HEX3Aanonymous_16360310);
                      }
                      
                      var nonRefLinksInt_16360340 = nimCopy(null, Tmp46, NTI16360287);
                      (Tmp47 = HEX5BHEX5D_15940788(allLinks_14660629[0], linkId_16195010), Tmp47)[0][Tmp47[1]].neighborLinks = nimCopy(null, concat_16360510([nimCopy(null, refLinksInt_16360270, NTI16360502), nimCopy(null, nonRefLinksInt_16360340, NTI16360507)]), NTI16360516);
                      }
                      }}}
                      var street_16360785 = nimCopy(null, (Tmp48 = HEX5BHEX5D_15940788(allLinks_14660629[0], linkId_16195010), Tmp48)[0][Tmp48[1]].name, NTI113);
                        if (!!(eqStrings(street_16360785, []))) Tmp49 = false; else {                          Tmp49 = ((Tmp50 = HEX5BHEX5D_15940788(allLinks_14660629[0], linkId_16195010), Tmp50)[0][Tmp50[1]].cityId == cityId_14710630[0]);                        }                      if (Tmp49) {
                      if (!(hasKeyOrPut_16365277(allStreets_14670629[0], street_16360785, {name: nimCopy(null, street_16360785, NTI113), links: newSeq_16365193(0), sector: null, totalFamilies: 0}))) {
                      }
                      
                      (Tmp51 = HEX5BHEX5D_15436312(allStreets_14670629[0], street_16360785), Tmp51)[0][Tmp51[1]].links.push((Tmp52 = HEX5BHEX5D_15940788(allLinks_14660629[0], linkId_16195010), Tmp52)[0][Tmp52[1]]);;
                      }
                      
                      var _ = hasKeyOrPut_16426098(cachedTiles_14680629[0], tileId_16185020, t_16155214[t_16155214_Idx]);
                    } while(false);
                    i_17030369 = addInt(i_17030369, 1);
                    if (!(((rows_16160012).length == L_17030370))) {
                    failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while(false);
            } while(false);
            i_17030372 = addInt(i_17030372, 1);
            if (!(((tiles_16145253).length == L_17030373))) {
            failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    L53: do {
      var k_16495682 = 0;
      var v_16495683 = null;
      var v_16495683_Idx = 0;
      var L_17030376 = len_15115431(allLinks_14660629[0]);
      L54: do {
        var h_17030378 = 0;
        var colontmp__17030379 = 0;
        colontmp__17030379 = (allLinks_14660629[0].data).length - 1;
        var res_17030380 = 0;
        L55: do {
            L56: while (true) {
            if (!(res_17030380 <= colontmp__17030379)) break L56;
              h_17030378 = res_17030380;
              if (isFilled_10291218(allLinks_14660629[0].data[chckIndx(h_17030378, 0, (allLinks_14660629[0].data).length-1)].Field0)) {
              k_16495682 = allLinks_14660629[0].data[chckIndx(h_17030378, 0, (allLinks_14660629[0].data).length-1)].Field1;
              v_16495683 = allLinks_14660629[0].data[chckIndx(h_17030378, 0, (allLinks_14660629[0].data).length-1)]; v_16495683_Idx = "Field2";
              v_16495683[v_16495683_Idx].readOnly = true;
              if (eqStrings(v_16495683[v_16495683_Idx].name, [])) {
              v_16495683[v_16495683_Idx].name = nimCopy(null, makeNimstrLit("uknown!!!"), NTI113);
              }
              
              if (!((len_15115431(allLinks_14660629[0]) == L_17030376))) {
              failedAssertImpl_115480(makeNimstrLit("tables.nim(703, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_17030380 = addInt(res_17030380, 1);
            }
        } while(false);
      } while(false);
    } while(false);
    sort_16505080(allStreets_14670629[0], sortStreetTbl_16500222, 1);
    displayStreet_15880323((Tmp57 = HEX5BHEX5D_15940788(allLinks_14660629[0], clckLinkId_14710634[0]), Tmp57)[0][Tmp57[1]].name, true);
    if (!(hasKey_15430110(allSectors_14690629[0], sectName_14710636[0]))) {
    HEX5BHEX5DHEX3D_16507427(lastPostfix_14700629[0], postalCode_14710635[0], subInt((Tmp58 = HEX5BHEX5D_14915198(lastPostfix_14700629[0], postalCode_14710635[0]), Tmp58)[0][Tmp58[1]], 1));
    }
    
    sort_16570080(allSectors_14690629[0], sortSectorTbl_16565693, 1);
    redraw_14200414(kxi_13647284[0]);

  
}
    function HEX3Aanonymous_16572063(res_16572065) {
        var tiles_16580012 = (res_16572065.Tiles);
        L1: do {
          var k_16590229 = [];
          var v_16590230 = null;
          var L_17030314 = len_16580146(cachedTiles_14680629[0]);
          L2: do {
            var h_17030316 = 0;
            var colontmp__17030317 = 0;
            colontmp__17030317 = (cachedTiles_14680629[0].data).length - 1;
            var res_17030318 = 0;
            L3: do {
                L4: while (true) {
                if (!(res_17030318 <= colontmp__17030317)) break L4;
                  h_17030316 = res_17030318;
                  if (isFilled_10291218(cachedTiles_14680629[0].data[chckIndx(h_17030316, 0, (cachedTiles_14680629[0].data).length-1)].Field0)) {
                  k_16590229 = cachedTiles_14680629[0].data[chckIndx(h_17030316, 0, (cachedTiles_14680629[0].data).length-1)].Field1;
                  v_16590230 = cachedTiles_14680629[0].data[chckIndx(h_17030316, 0, (cachedTiles_14680629[0].data).length-1)].Field2;
                  tiles_16580012.push(v_16590230);;
                  if (!((len_16580146(cachedTiles_14680629[0]) == L_17030314))) {
                  failedAssertImpl_115480(makeNimstrLit("tables.nim(681, 13) `len(t) == L` the length of the table changed while iterating over it"));
                  }
                  
                  }
                  
                  res_17030318 = addInt(res_17030318, 1);
                }
            } while(false);
          } while(false);
        } while(false);
        parseTiles_16145250(tiles_16580012);

      
    }
    function HEX3Aanonymous_16590253(e_16590255) {
      
    }
    function HEX3Aanonymous_16590270(res_16590272) {
      BeforeRet: do {
        var layerObj_16595004 = res_16590272.Layers[0];
        var ePnt_16595005 = function(){return H.service.extension.platformData.Service.EntryPoint}();
        var ePntType_16595006 = function(){return H.service.extension.platformData.Service.EntryPointType}();
        var prmsPde_16600201 = {};
        var tXYs_16600218 = newSeq_650232(0);
        var layers_16600230 = [makeNimstrLit("ROAD_ADMIN_FC"), makeNimstrLit("ROAD_GEOM_FC"), makeNimstrLit("ROAD_NAME_FC"), makeNimstrLit("LINK_FC")];
        var rLayers_16600247 = newSeq_650232(0);
        var levels_16600264 = newSeq_650232(0);
        var tileXYs_16605012 = (layerObj_16595004.tileXYs);
        var level_16610010 = (layerObj_16595004.level);
        var allCrds_16610065 = newSeq_16610024(0);
        var prevTxys_16620629 = [initTable_16610072(32)];
        L1: do {
          var xy_16620637 = null;
          var xy_16620637_Idx = 0;
          var i_17030239 = 0;
          var L_17030240 = (tileXYs_16605012).length;
          L2: do {
              L3: while (true) {
              if (!(i_17030239 < L_17030240)) break L3;
                xy_16620637 = tileXYs_16605012; xy_16620637_Idx = chckIndx(i_17030239, 0, (tileXYs_16605012).length-1);
                var tx_16625010 = (xy_16620637[xy_16620637_Idx].x);
                var ty_16630010 = (xy_16620637[xy_16620637_Idx].y);
                var latlng_16630011 = getCoord_10826015(level_16610010, tx_16625010, ty_16630010);
                HEX5BHEX5DHEX3D_16630144(prevTxys_16620629[0], nsuJoinSep([cstrToNimstr((level_16610010)+""), cstrToNimstr((tx_16625010)+""), cstrToNimstr((ty_16630010)+"")], makeNimstrLit("_")), {Field0: level_16610010, Field1: tx_16625010, Field2: ty_16630010});
                allCrds_16610065.push({Field0: latlng_16630011["Field0"], Field1: latlng_16630011["Field1"]});;
                i_17030239 = addInt(i_17030239, 1);
                if (!(((tileXYs_16605012).length == L_17030240))) {
                failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);
        L4: do {
          var lvl_16705210 = 0;
          var res_17030248 = 10;
          L5: do {
              L6: while (true) {
              if (!(res_17030248 <= 13)) break L6;
                lvl_16705210 = res_17030248;
                L7: do {
                  var crd_16715214 = null;
                  var i_17030245 = 0;
                  var L_17030246 = (allCrds_16610065).length;
                  L8: do {
                      L9: while (true) {
                      if (!(i_17030245 < L_17030246)) break L9;
                        crd_16715214 = allCrds_16610065[chckIndx(i_17030245, 0, (allCrds_16610065).length-1)];
                        var txy_16715215 = getTileXY_10826113(lvl_16705210, crd_16715214["Field0"], crd_16715214["Field1"]);
                        var k_16715227 = nsuJoinSep([cstrToNimstr((lvl_16705210)+""), cstrToNimstr((txy_16715215["Field0"])+""), cstrToNimstr((txy_16715215["Field1"])+"")], makeNimstrLit("_"));
                        var _ = hasKeyOrPut_16720281(prevTxys_16620629[0], k_16715227, {Field0: lvl_16705210, Field1: txy_16715215["Field0"], Field2: txy_16715215["Field1"]});
                        i_17030245 = addInt(i_17030245, 1);
                        if (!(((allCrds_16610065).length == L_17030246))) {
                        failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  } while(false);
                } while(false);
                res_17030248 = addInt(res_17030248, 1);
              }
          } while(false);
        } while(false);
        L10: do {
          var lr_16750690 = null;
          var lr_16750690_Idx = 0;
          var i_17030271 = 0;
          var L_17030272 = (layers_16600230).length;
          L11: do {
              L12: while (true) {
              if (!(i_17030271 < L_17030272)) break L12;
                lr_16750690 = layers_16600230; lr_16750690_Idx = chckIndx(i_17030271, 0, (layers_16600230).length-1);
                L13: do {
                  var lvlTxTy_16760214 = {Field0: 0, Field1: 0, Field2: 0};
                  var L_17030263 = len_16750823(prevTxys_16620629[0]);
                  L14: do {
                    var h_17030265 = 0;
                    var colontmp__17030266 = 0;
                    colontmp__17030266 = (prevTxys_16620629[0].data).length - 1;
                    var res_17030267 = 0;
                    L15: do {
                        L16: while (true) {
                        if (!(res_17030267 <= colontmp__17030266)) break L16;
                          h_17030265 = res_17030267;
                          if (isFilled_10291218(prevTxys_16620629[0].data[chckIndx(h_17030265, 0, (prevTxys_16620629[0].data).length-1)].Field0)) {
                          nimCopy(lvlTxTy_16760214, prevTxys_16620629[0].data[chckIndx(h_17030265, 0, (prevTxys_16620629[0].data).length-1)].Field2, NTI16610067);
                          L17: do {
                            var xStr_16760215 = cstrToNimstr((lvlTxTy_16760214.Field1)+"");
                            var yStr_16760216 = cstrToNimstr((lvlTxTy_16760214.Field2)+"");
                            var level_16760217 = lvlTxTy_16760214.Field0;
                            var layerName_16760218 = (lr_16750690[lr_16750690_Idx] || []).concat(cstrToNimstr((subInt(level_16760217, 8))+"") || []);
                            if (hasKey_16760339(cachedTiles_14680629[0], nsuJoinSep([nimCopy(null, xStr_16760215, NTI113), nimCopy(null, yStr_16760216, NTI113), cstrToNimstr((level_16760217)+""), nimCopy(null, layerName_16760218, NTI113)], makeNimstrLit("_")))) {
                            break L17;
                            }
                            
                            tXYs_16600218.push((xStr_16760215 || []).concat(makeNimstrLit(",") || [],yStr_16760216 || []));;
                            levels_16600264.push(cstrToNimstr((level_16760217)+""));;
                            var Tmp18 = nimCopy(null, layerName_16760218, NTI113);
                            rLayers_16600247.push(Tmp18);;
                          } while(false);
                          if (!((len_16750823(prevTxys_16620629[0]) == L_17030263))) {
                          failedAssertImpl_115480(makeNimstrLit("tables.nim(745, 13) `len(t) == L` the length of the table changed while iterating over it"));
                          }
                          
                          }
                          
                          res_17030267 = addInt(res_17030267, 1);
                        }
                    } while(false);
                  } while(false);
                } while(false);
                i_17030271 = addInt(i_17030271, 1);
                if (!(((layers_16600230).length == L_17030272))) {
                failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);
        if (((rLayers_16600247).length == 0)) {
        var tiles_16760414 = newSeq_15265256(0);
        L19: do {
          var k_16760422 = [];
          var v_16760423 = null;
          var L_17030282 = len_16580146(cachedTiles_14680629[0]);
          L20: do {
            var h_17030284 = 0;
            var colontmp__17030285 = 0;
            colontmp__17030285 = (cachedTiles_14680629[0].data).length - 1;
            var res_17030286 = 0;
            L21: do {
                L22: while (true) {
                if (!(res_17030286 <= colontmp__17030285)) break L22;
                  h_17030284 = res_17030286;
                  if (isFilled_10291218(cachedTiles_14680629[0].data[chckIndx(h_17030284, 0, (cachedTiles_14680629[0].data).length-1)].Field0)) {
                  k_16760422 = cachedTiles_14680629[0].data[chckIndx(h_17030284, 0, (cachedTiles_14680629[0].data).length-1)].Field1;
                  v_16760423 = cachedTiles_14680629[0].data[chckIndx(h_17030284, 0, (cachedTiles_14680629[0].data).length-1)].Field2;
                  tiles_16760414.push(v_16760423);;
                  if (!((len_16580146(cachedTiles_14680629[0]) == L_17030282))) {
                  failedAssertImpl_115480(makeNimstrLit("tables.nim(681, 13) `len(t) == L` the length of the table changed while iterating over it"));
                  }
                  
                  }
                  
                  res_17030286 = addInt(res_17030286, 1);
                }
            } while(false);
          } while(false);
        } while(false);
        parseTiles_16145250(tiles_16760414);
        break BeforeRet;
        }
        
        prmsPde_16600201.layers = toJSStr(nsuJoinSep(rLayers_16600247, makeNimstrLit(",")));
        prmsPde_16600201.levels = toJSStr(nsuJoinSep(levels_16600264, makeNimstrLit(",")));
        prmsPde_16600201.tilexy = toJSStr(nsuJoinSep(tXYs_16600218, makeNimstrLit(",")));
        prmsPde_16600201.meta = 1;
        pdeService_15825035[0].request(ePnt_16595005.TILES, ePntType_16595006.JSON, prmsPde_16600201, onResRoadGeom_16590252, onErrRoadGeom_16590269);
      } while (false);

      
    }
    function HEX3Aanonymous_16785290(e_16785292) {
      
    }
    function HEX3Aanonymous_16785307(r_16785309) {
        var Tmp1;
          var Tmp5;
        var Tmp6;
        var Tmp7;
          var Tmp8;
        var Tmp9;
        var Tmp10;

      BeforeRet: do {
        var res_16785310 = r_16785309;
        var mapReference_16810004 = res_16785310.response.view[0].result[0].location.mapReference;
        var cityShape_16840010 = (res_16785310.response.view[0].result[0].location.shape.value);
        var cityGeo_16840011 = function(wkt){return new H.util.wkt.toGeometry(wkt)}(cityShape_16840010);
        var address_16865004 = res_16785310.response.view[0].result[0].location.address;
        var linkId_16870004 = mapReference_16810004.referenceId;
        clckLinkId_14710634[0] = (linkId_16870004);
        if ((cityGeo_16840011.getExterior === undefined)) {
        Tmp1 = cityGeo_16840011.getGeometries();
        }
        else {
        Tmp1 = [cityGeo_16840011];
        }
        
        var geoms_16875019 = nimCopy(null, Tmp1, NTI10615004);
        L2: do {
          var g_16890214 = null;
          var g_16890214_Idx = 0;
          var i_17030300 = 0;
          var L_17030301 = (geoms_16875019).length;
          L3: do {
              L4: while (true) {
              if (!(i_17030300 < L_17030301)) break L4;
                g_16890214 = geoms_16875019; g_16890214_Idx = chckIndx(i_17030300, 0, (geoms_16875019).length-1);
                var lnStr_16890219 = g_16890214[g_16890214_Idx].getExterior();
                var pOpt_16895201 = {style: {strokeColor: "rgba(0, 255, 255, 1)", fillColor: "rgba(0, 255, 255, 1)", lineWidth: 10, m_type: NTI10626076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, m_type: NTI10626081, zIndex: 0};
                var pl_16895202 = function(ls, options){return new H.map.Polyline(ls, options)}(lnStr_16890219, pOpt_16895201);
                if ((cityId_14710630[0] == 0)) {
                map.addObject(pl_16895202);
                }
                
                i_17030300 = addInt(i_17030300, 1);
                if (!(((geoms_16875019).length == L_17030301))) {
                failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);
        var revCityId_16900010 = parseInt(toJSStr(cstrToNimstr((mapReference_16810004.cityId))), 10);
        var revPostalCode_16905010 = cstrToNimstr((address_16865004.postalCode));
          if (!!((cityId_14710630[0] == 0))) Tmp5 = false; else {            Tmp5 = !((revCityId_16900010 == cityId_14710630[0]));          }        if (Tmp5) {
        break BeforeRet;
        }
        
        cityId_14710630[0] = revCityId_16900010;
        postalCode_14710635[0] = nimCopy(null, revPostalCode_16905010, NTI113);
        if ((mapReference_16810004.districtId)) {
        Tmp6 = parseInt(toJSStr(cstrToNimstr((mapReference_16810004.districtId))), 10);
        }
        else {
        Tmp6 = 0;
        }
        
        districtId_14710631[0] = Tmp6;
        addrCity_14710633[0] = nimCopy(null, cstrToNimstr((address_16865004.city)), NTI113);
          if ((address_16865004.district === undefined)) Tmp8 = true; else {            Tmp8 = eqStrings(cstrToNimstr((address_16865004.district)), addrCity_14710633[0]);          }        if (Tmp8) {
        Tmp7 = [];
        }
        else {
        Tmp7 = cstrToNimstr((address_16865004.district));
        }
        
        addrDistr_14710632[0] = nimCopy(null, Tmp7, NTI113);
        var _ = hasKeyOrPut_16945086(lastPostfix_14700629[0], postalCode_14710635[0], 0);
        HEX5BHEX5DHEX3D_16507427(lastPostfix_14700629[0], postalCode_14710635[0], addInt((Tmp9 = HEX5BHEX5D_14915198(lastPostfix_14700629[0], postalCode_14710635[0]), Tmp9)[0][Tmp9[1]], 1));
        var pFix_16976131 = (Tmp10 = HEX5BHEX5D_14915198(lastPostfix_14700629[0], postalCode_14710635[0]), Tmp10)[0][Tmp10[1]];
        var seqSectName_16976148 = newSeq_650232(0);
        seqSectName_16976148.push((postalCode_14710635[0] || []).concat(makeNimstrLit("-") || [],cstrToNimstr((pFix_16976131)+"") || []));;
        sectName_14710636[0] = nimCopy(null, nsuJoinSep(seqSectName_16976148, makeNimstrLit(" ")), NTI113);
        var ePnt_16980201 = function(){return H.service.extension.platformData.Service.EntryPoint}();
        var ePntType_16980202 = function(){return H.service.extension.platformData.Service.EntryPointType}();
        var prmsPde_16980203 = {};
        prmsPde_16980203.layer = "ROAD_GEOM_FCn";
        prmsPde_16980203.attributes = "LINK_ID";
        prmsPde_16980203.values = (linkId_16870004);
        var zKey_16995012 = (makeNimstrLit("z") || []).concat(addrCity_14710633[0] || [],makeNimstrLit("-1") || []);
        if (!(hasKey_15430110(allSectors_14690629[0], zKey_16995012))) {
        HEX5BHEX5DHEX3D_14980347(allSectors_14690629[0], zKey_16995012, {exclude: true, pFix: 1, city: [], postalCode: (makeNimstrLit("z") || []).concat(addrCity_14710633[0] || []), district: [], folkDistrict: [], streets: ({data: [], counter: 0, first: 0, last: 0}), shownOnMap: false});
        }
        
        pdeService_15825035[0].request(ePnt_16980201.INDEX, ePntType_16980202.JSON, prmsPde_16980203, onResIndexRoadGeom_16785289, onErrIndexRoadGeom_16785306);
      } while (false);

      
    }
    function HEX3Aanonymous_16995475(e_16995477) {
      
    }

    var pE_16130349 = e_14911056;
    mainGroup_15825008[0].removeAll();
    L1: do {
      var k_16145245 = 0;
      var v_16145246 = null;
      var v_16145246_Idx = 0;
      var L_17030223 = len_15115431(allLinks_14660629[0]);
      L2: do {
        var h_17030225 = 0;
        var colontmp__17030226 = 0;
        colontmp__17030226 = (allLinks_14660629[0].data).length - 1;
        var res_17030227 = 0;
        L3: do {
            L4: while (true) {
            if (!(res_17030227 <= colontmp__17030226)) break L4;
              h_17030225 = res_17030227;
              if (isFilled_10291218(allLinks_14660629[0].data[chckIndx(h_17030225, 0, (allLinks_14660629[0].data).length-1)].Field0)) {
              k_16145245 = allLinks_14660629[0].data[chckIndx(h_17030225, 0, (allLinks_14660629[0].data).length-1)].Field1;
              v_16145246 = allLinks_14660629[0].data[chckIndx(h_17030225, 0, (allLinks_14660629[0].data).length-1)]; v_16145246_Idx = "Field2";
              v_16145246[v_16145246_Idx].addedToMap = false;
              if (!((len_15115431(allLinks_14660629[0]) == L_17030223))) {
              failedAssertImpl_115480(makeNimstrLit("tables.nim(703, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_17030227 = addInt(res_17030227, 1);
            }
        } while(false);
      } while(false);
    } while(false);
    var geoPoint_16145247 = map.screenToGeo(pE_16130349.currentPointer.viewportX, pE_16130349.currentPointer.viewportY);
    var reverseGeocodingParameters_16145248 = {m_type: NTI14360047, jsonattributes: 0, mode: null, prox: null, maxResults: 0, additionaldata: null, locationattributes: null};
    reverseGeocodingParameters_16145248.jsonattributes = 1;
    reverseGeocodingParameters_16145248.prox = toJSStr((cstrToNimstr(nimFloatToString(geoPoint_16145247.lat)) || []).concat(makeNimstrLit(",") || [],cstrToNimstr(nimFloatToString(geoPoint_16145247.lng)) || [],makeNimstrLit(",1") || []));
    reverseGeocodingParameters_16145248.mode = "retrieveAddresses";
    reverseGeocodingParameters_16145248.maxResults = 1;
    reverseGeocodingParameters_16145248.additionaldata = "SuppressStreetType,Unnamed";
    reverseGeocodingParameters_16145248.locationattributes = "linkInfo";
    reverseGeocodingParameters_16145248.additionaldata = "IncludeShapeLevel,city";
    var rgcp_16145249 = reverseGeocodingParameters_16145248;
    var onResRoadGeom_16590252 = HEX3Aanonymous_16572063;
    var onErrRoadGeom_16590269 = HEX3Aanonymous_16590253;
    var onResIndexRoadGeom_16785289 = HEX3Aanonymous_16590270;
    var onErrIndexRoadGeom_16785306 = HEX3Aanonymous_16785290;
    var onResRevGeo_16995474 = HEX3Aanonymous_16785307;
    var onErrRevGeo_16995491 = HEX3Aanonymous_16995475;
    geocoder_15825034.reverseGeocode(reverseGeocodingParameters_16145248, onResRevGeo_16995474, onErrRevGeo_16995491);

  
}
function map_16030412(s_16030417, op_16030420) {
  var result_16030422 = [];

    result_16030422 = new Array(chckRange((s_16030417).length, 0, 2147483647)); for (var i=0;i<chckRange((s_16030417).length, 0, 2147483647);++i) {result_16030422[i]=[];}    L1: do {
      var i_16030445 = 0;
      var colontmp__17030506 = 0;
      colontmp__17030506 = (s_16030417).length;
      var i_17030507 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_17030507 < colontmp__17030506)) break L3;
            i_16030445 = i_17030507;
            result_16030422[chckIndx(i_16030445, 0, (result_16030422).length-1)] = nimCopy(null, op_16030420(s_16030417[chckIndx(i_16030445, 0, (s_16030417).length-1)]), NTI113);
            i_17030507 = addInt(i_17030507, 1);
          }
      } while(false);
    } while(false);

  return result_16030422;

}
function showBorder_16030380(hrCoord_16030382, sCol_16030383, latlon_16030384, lineWidth_16030385, allCommas_16030387) {
    var Tmp1;
      function HEX3Aanonymous_16030388(item_16030390) {
          function HEX3Aanonymous_16030392(item_16030394) {
            var result_16030395 = [];

              result_16030395 = nimCopy(null, nucStrip(item_16030394, true, true, unicodeSpaces_1844041), NTI113);

            return result_16030395;

          }

        var result_16030391 = [];

          result_16030391 = nimCopy(null, nsuJoinSep(map_16030412(nsuSplitString(item_16030390, makeNimstrLit(","), -1), HEX3Aanonymous_16030392), makeNimstrLit(",")), NTI113);

        return result_16030391;

      }

    if (allCommas_16030387) {
    Tmp1 = nsuSplitString(hrCoord_16030382, makeNimstrLit(","), -1);
    }
    else {
    Tmp1 = nsuSplitString(nsuJoinSep(map_16030412(nsuSplitString(hrCoord_16030382, makeNimstrLit(" "), -1), HEX3Aanonymous_16030388), makeNimstrLit(",")), makeNimstrLit(","), -1);
    }
    
    var hrArrArea_16030517 = nimCopy(null, Tmp1, NTI8500043);
    var hrLnStr_16030518 = function(){return new H.geo.LineString();}();
    var iLat_16030520 = 0;
    var iLng_16030522 = 1;
    if (latlon_16030384) {
    iLat_16030520 = 1;
    iLng_16030522 = 0;
    }
    
    L2: do {
      var i_16030536 = 0;
      var colontmp__17030496 = 0;
      colontmp__17030496 = subInt((hrArrArea_16030517).length - 1, 3);
      var res_17030497 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_17030497 <= colontmp__17030496)) break L4;
            i_16030536 = res_17030497;
            hrLnStr_16030518.pushLatLngAlt(chckRange(parseFloat(toJSStr(hrArrArea_16030517[chckIndx(addInt(i_16030536, iLng_16030522), 0, (hrArrArea_16030517).length-1)])), -9.0000000000000000e+01, 9.0000000000000000e+01), chckRange(parseFloat(toJSStr(hrArrArea_16030517[chckIndx(addInt(i_16030536, iLat_16030520), 0, (hrArrArea_16030517).length-1)])), -1.8000000000000000e+02, 1.8000000000000000e+02), parseFloat(toJSStr(hrArrArea_16030517[chckIndx(addInt(i_16030536, 3), 0, (hrArrArea_16030517).length-1)])));
            res_17030497 = addInt(res_17030497, 3);
          }
      } while(false);
    } while(false);
    hrLnStr_16030518.pushLatLngAlt(chckRange(parseFloat(toJSStr(hrArrArea_16030517[chckIndx(iLng_16030522, 0, (hrArrArea_16030517).length-1)])), -9.0000000000000000e+01, 9.0000000000000000e+01), chckRange(parseFloat(toJSStr(hrArrArea_16030517[chckIndx(iLat_16030520, 0, (hrArrArea_16030517).length-1)])), -1.8000000000000000e+02, 1.8000000000000000e+02), parseFloat(toJSStr(hrArrArea_16030517[chckIndx(2, 0, (hrArrArea_16030517).length-1)])));
    var pOpt_16030537 = {style: {strokeColor: toJSStr(sCol_16030383), fillColor: toJSStr(sCol_16030383), lineWidth: lineWidth_16030385, m_type: NTI10626076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, m_type: NTI10626081, zIndex: 0};
    var pl_16030538 = function(ls, options){return new H.map.Polyline(ls, options)}(hrLnStr_16030518, pOpt_16030537);
    map.addObject(pl_16030538);

  
}
function geoArea_16030557() {
    function showBorderDistrict_16030601(borderData_16030603, strokeColor_16030604, fillColor_16030605) {
        function HEX3Aanonymous_16035201(item_16035203) {
            function HEX3Aanonymous_16035205(item_16035207) {
              var result_16035208 = [];

                result_16035208 = nimCopy(null, nucStrip(item_16035207, true, true, unicodeSpaces_1844041), NTI113);

              return result_16035208;

            }

          var result_16035204 = [];

            result_16035204 = nimCopy(null, nsuJoinSep(map_16030412(nsuSplitString(item_16035203, makeNimstrLit(","), -1), HEX3Aanonymous_16035205), makeNimstrLit(",")), NTI113);

          return result_16035204;

        }
        function HEX3Aanonymous_16040201(e_16040203) {
          
        }
        strokeColor_16030604 = nimCopy(null, strokeColor_16030604, NTI113);
        fillColor_16030605 = nimCopy(null, fillColor_16030605, NTI113);
        function HEX3Aanonymous_16040218(r_16040220) {
            var res_16055004 = r_16040220.response.view[0].result[0];
            var loc_16055005 = res_16055004["location"];
            var shp_16070010 = cstrToNimstr((loc_16055005.shape.value));
            var pOpt_16070013 = {style: {strokeColor: toJSStr(strokeColor_16030604), fillColor: toJSStr(fillColor_16030605), lineWidth: 5, m_type: NTI10626076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, zIndex: -999, m_type: NTI10626085};
            var pl_16070019 = function(ls, opt){return new H.map.Polygon(ls, opt)}(function(wkt){return new H.util.wkt.toGeometry(wkt)}(toJSStr(shp_16070010)), pOpt_16070013);
            map.addObject(pl_16070019);

          
        }
                function HEX3Aanonymous_16075001() {
                    function HEX3Aanonymous_16075005(r_16075007) {
                        var Tmp1;

                        var res_16090004 = r_16075007.response.view[0].result[0];
                        var matchLvl_16095010 = cstrToNimstr((res_16090004.matchLevel));
                        var loc_16095011 = res_16090004["location"];
                        if ((loc_16095011.shape === undefined)) {
                        Tmp1 = makeNimstrLit("city");
                        }
                        else {
                        Tmp1 = makeNimstrLit("district");
                        }
                        
                        var typeShp_16105008 = nimCopy(null, Tmp1, NTI113);
                        var reverseGeocodingParameters_16105009 = {m_type: NTI14360047, jsonattributes: 0, mode: null, prox: null, maxResults: 0, additionaldata: null, locationattributes: null};
                        reverseGeocodingParameters_16105009.jsonattributes = 1;
                        reverseGeocodingParameters_16105009.prox = toJSStr((cstrToNimstr(nimFloatToString((loc_16095011.displayPosition.latitude))) || []).concat(makeNimstrLit(",") || [],cstrToNimstr(nimFloatToString((loc_16095011.displayPosition.longitude))) || [],makeNimstrLit(",1") || []));
                        reverseGeocodingParameters_16105009.mode = "retrieveAddresses";
                        reverseGeocodingParameters_16105009.locationattributes = "none";
                        reverseGeocodingParameters_16105009.maxResults = 1;
                        reverseGeocodingParameters_16105009.additionaldata = additionalData_16075004;
                        geocodingParameters_16030606.searchtext = toJSStr(c_16075003);
                        geocodingParameters_16030606.additionaldata = additionalData_16075004;
                        geocoder_15825034.reverseGeocode(reverseGeocodingParameters_16105009, onResGeoForMap_16070083, onErrGeo_16040217);

                      
                    }

                    var c_16075003 = nimCopy(null, arrCity_16070092[chckIndx(0, 0, (arrCity_16070092).length-1)], NTI113);
                    var additionalData_16075004 = geocodingParameters_16030606.additionaldata;
                    var onResGeo_16130274 = HEX3Aanonymous_16075005;
                    geocodingParameters_16030606.searchtext = toJSStr(arrCity_16070092[chckIndx(0, 0, (arrCity_16070092).length-1)]);
                    geocoder_15825034.geocode(geocodingParameters_16030606, onResGeo_16130274, onErrGeo_16040217);

                  
                }

        var geocodingParameters_16030606 = {m_type: NTI14360055, searchtext: null, jsonattributes: 0, country: null, state: null, additionaldata: null};
        geocodingParameters_16030606.jsonattributes = 1;
        geocodingParameters_16030606.searchtext = "";
        geocodingParameters_16030606.country = "DEU";
        geocodingParameters_16030606.state = "Hessen";
        geocodingParameters_16030606.additionaldata = "IncludeShapeLevel,district";
        var bordersStr_16030607 = nimCopy(null, borderData_16030603, NTI113);
        var arrArea_16035261 = nsuSplitString(nsuJoinSep(map_16030412(nsuSplitCharSet(bordersStr_16030607, ConstSet17, -1), HEX3Aanonymous_16035201), makeNimstrLit(",")), makeNimstrLit(","), -1);
        var onErrGeo_16040217 = HEX3Aanonymous_16040201;
        var onResGeoForMap_16070083 = HEX3Aanonymous_16040218;
        L1: do {
          var city_16070091 = null;
          var city_16070091_Idx = 0;
          var i_17030519 = 0;
          var L_17030520 = (arrArea_16035261).length;
          L2: do {
              L3: while (true) {
              if (!(i_17030519 < L_17030520)) break L3;
                city_16070091 = arrArea_16035261; city_16070091_Idx = chckIndx(i_17030519, 0, (arrArea_16035261).length-1);
                var arrCity_16070092 = nsuSplitString(city_16070091[city_16070091_Idx], makeNimstrLit(">"), -1);
                var isCity_16070100 = (((arrCity_16070092).length == 2) && eqStrings(arrCity_16070092[chckIndx(1, 0, (arrCity_16070092).length-1)], makeNimstrLit("city")));
                if (isCity_16070100) {
                geocodingParameters_16030606.additionaldata = "IncludeShapeLevel,city";
                }
                else {
                  geocodingParameters_16030606.additionaldata = "IncludeShapeLevel,district";
                }
                
                HEX3Aanonymous_16075001();
                i_17030519 = addInt(i_17030519, 1);
                if (!(((arrArea_16035261).length == L_17030520))) {
                failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);

      
    }

    var hrCoordReal_16030559 = makeNimstrLit("49.95856259839435,8.850124261434395,0.0 49.96396515545882,8.899470891953959,0.0 49.989107714500946,8.942093035419573,0.0 49.99375559635732,8.973836498540546,0.0 49.98852001928919,9.014720749471216,0.0 49.98595544705414,9.046298016450189,0.0 49.993374764204034,9.054906229836575,0.0 50.01241735811533,9.038966773881107,0.0 50.02965494688769,9.03186813780005,0.0 50.0384117586606,9.032281998108914,0.0 50.042818175748586,9.027509152282287,0.0 50.04441439462123,9.022565665862723,0.0 50.04644677958852,9.013523319190714,0.0 50.04425309054112,8.996242389995311,0.0 50.04241418571553,8.987752631175479,0.0 50.04476926168952,8.980317812800713,0.0 50.05134995729781,8.977353932502664,0.0 50.05405939323471,8.980217342282131,0.0 50.06044531552646,8.986546984952541,0.0 50.062896251887224,8.988757336361253,0.0 50.06734631621531,8.99182168717788,0.0 50.06673365070724,8.992977098141527,0.0 50.0668626335698,8.99398180332731,0.0 50.06718803495289,8.994414733080061,0.0 50.06771451792822,8.995464253486665,0.0 50.06829194422368,8.99569356046626,0.0 50.0688014322406,8.995790574957626,0.0 50.06906749605375,8.996778358869724,0.0 50.06879577129238,8.997378084816354,0.0 50.06905051330128,8.998956775175868,0.0 50.06930053266752,8.99941800765802,0.0 50.0695826597326,8.999881101814484,0.0 50.07118974475246,8.99940230955102,0.0 50.07246819127017,8.999262421160052,0.0 50.073681046891316,8.999278572803176,0.0 50.07593045003854,8.998761720223174,0.0 50.07685298579153,8.998697113650673,0.0 50.079516837714955,8.99906860144255,0.0 50.08036829651911,8.999048176213728,0.0 50.08163131412362,8.999132593752917,0.0 50.08380948509669,8.998839123161446,0.0 50.08398524097505,8.998457611392535,0.0 50.08529083589718,8.998731517277907,0.0 50.0858180853043,8.999103246693766,0.0 50.087745007018746,8.999113029046814,0.0 50.08994800500485,8.99887825257364,0.0 50.09095218700986,8.998614129041318,0.0 50.09268435151408,8.997880452562647,0.0 50.093989709477825,8.9992499819895,0.0 50.09529893546212,9.000556974921759,0.0 50.097739470199144,9.003266612926636,0.0 50.11201852058528,9.02981141216353,0.0 50.11661516874831,9.067234864827416,0.0 50.12025635598552,9.07282045477725,0.0 50.14215732616893,9.07477541125969,0.0 50.13214371793553,9.104686488157405,0.0 50.130002073318444,9.11819544464286,0.0 50.12962960360105,9.129525537179045,0.0 50.124042209958354,9.131849658724928,0.0 50.12329717485541,9.139257796152435,0.0 50.12525286726787,9.144487069630674,0.0 50.12804657496021,9.150297373495386,0.0 50.130455597090595,9.155493171369901,0.0 50.133915546952075,9.158535444434747,0.0 50.1367776800252,9.15868265119595,0.0 50.13741151788165,9.163817274408206,0.0 50.14339492987892,9.173004915543089,0.0 50.14755755017878,9.192392814174495,0.0 50.14648131805793,9.200345557307376,0.0 50.138180651937496,9.259625280641485,0.0 50.13309753499998,9.307707323856194,0.0 50.139325423584935,9.327568851365392,0.0 50.12993748742165,9.339142835021836,0.0 50.12858337744752,9.365496359295658,0.0 50.12641773051991,9.372735178643259,0.0 50.11574275323997,9.381663055838633,0.0 50.09423086055464,9.394210342707808,0.0 50.087113888846716,9.404106700966404,0.0 50.084234652636276,9.41068546866214,0.0 50.08332028837411,9.415072180815773,0.0 50.084109152691816,9.419263307077205,0.0 50.08422122075908,9.425175379748403,0.0 50.08359146921259,9.427138246524793,0.0 50.08359146921259,9.433746564671972,0.0 50.09022443676629,9.46096498397125,0.0 50.09085360543011,9.474022801340594,0.0 50.093517639965924,9.48311122533397,0.0 50.09417105978058,9.497057255254838,0.0 50.09552813400177,9.509122921590878,0.0 50.10598134317437,9.5205618000653,0.0 50.114221688388604,9.519935012203698,0.0 50.14498492404182,9.511705614500329,0.0 50.151057005957576,9.529820900852283,0.0 50.16355592364119,9.537067015393063,0.0 50.17319571327903,9.524804360016356,0.0 50.17694399525393,9.501393836115371,0.0 50.192469459564606,9.505852983525081,0.0 50.19496733876523,9.518673032328001,0.0 50.19962499700489,9.516589022864023,0.0 50.21399704559683,9.50504530922025,0.0 50.21870102145308,9.466106812451708,0.0 50.26614431812017,9.43139020351146,0.0 50.2704110296101,9.442662471130737,0.0 50.27772026972424,9.4554185495736,0.0 50.30061968660411,9.419174629647651,0.0 50.3134338989555,9.398350843677145,0.0 50.330902260659,9.396070867111032,0.0 50.34710327756438,9.365823178000584,0.0 50.41660380223247,9.344974529943373,0.0 50.42288128194858,9.245267930092574,0.0 50.42450902384603,9.234516048623957,0.0 50.421660438811095,9.224935164146977,0.0 50.415420082407365,9.218334999285055,0.0 50.40619370176144,9.159039969799737,0.0 50.39988345120526,9.134129670159584,0.0 50.38861790491299,9.116032443925288,0.0 50.38196590399061,9.085373613598946,0.0 50.373828204075195,9.060876585432112,0.0 50.374851912213195,9.039245421406951,0.0 50.37455942642779,9.033894956807094,0.0 50.36909604401242,9.032055311810234,0.0 50.34884219264727,9.036714437078075,0.0 50.34206593823363,9.028913111048201,0.0 50.338055046494205,9.028371352296126,0.0 50.32394508151426,9.03866476858554,0.0 50.31439772920148,9.016777715001732,0.0 50.30756222761449,9.006886141097945,0.0 50.30215231393127,8.999211834250447,0.0 50.30015521042514,8.987558257185748,0.0 50.29616075185897,8.975449906381932,0.0 50.29107641039998,8.972493877077715,0.0 50.27792723722931,8.94907302951354,0.0 50.27618342766435,8.937021525427118,0.0 50.274948190575785,8.92258245921037,0.0 50.25656116848032,8.893022166168203,0.0 50.24522017796395,8.85641288016981,0.0 50.23634884074695,8.855222008654989,0.0 50.22470113569143,8.860339308210316,0.0 50.20947108695584,8.860934343042329,0.0 50.20672916183294,8.839751103022607,0.0 50.20094013589099,8.796432567251937,0.0 50.197435910668744,8.790006191066185,0.0 50.1946134041465,8.79057185680632,0.0 50.18875997039989,8.791839840630303,0.0 50.18371958792864,8.791637049898368,0.0 50.17642594359777,8.789065201919588,0.0 50.17596274342498,8.78995123147805,0.0 50.17430232089517,8.792046274117968,0.0 50.17337983900064,8.792936667239935,0.0 50.173916557905876,8.7938270603619,0.0 50.173195340484554,8.794979333813854,0.0 50.17431909312838,8.796367299562801,0.0 50.17334629386889,8.798724222532709,0.0 50.17103162290417,8.799588427621675,0.0 50.16957231619278,8.79793858154274,0.0 50.16703939070253,8.793905624460896,0.0 50.16438890109903,8.794534137252873,0.0 50.16375141964782,8.79050118017103,0.0 50.16162082784406,8.789139402455083,0.0 50.16103364018217,8.79076306050102,0.0 50.1591545911941,8.790527368204028,0.0 50.1596579151296,8.787280052112155,0.0 50.15856737323834,8.783220906997313,0.0 50.157225133682765,8.783011402733322,0.0 50.1560842004315,8.7835875394593,0.0 50.15568151160696,8.781728189116372,0.0 50.138275414238024,8.77894862521831,0.0 50.13670242407733,8.77838227975314,0.0 50.13690217682525,8.784467717601034,0.0 50.13534508071917,8.794250560713733,0.0 50.13391419097039,8.802588957192343,0.0 50.13357750481077,8.81237180030504,0.0 50.13319873004944,8.816967766868055,0.0 50.12932663828693,8.816967766868055,0.0 50.12356000792097,8.817755646850285,0.0 50.12381257562391,8.812306143639855,0.0 50.12170780404554,8.807447550416098,0.0 50.120865869500825,8.806725327099054,0.0 50.11556134136147,8.803179867179015,0.0 50.11324568846011,8.805346537130145,0.0 50.106340167703365,8.80816977373314,0.0 50.10335027363762,8.817164736863607,0.0 50.100570768108895,8.819594033475484,0.0 50.09652756307581,8.818280900171766,0.0 50.090630610745976,8.820775853448833,0.0 50.08907200924542,8.82274555340441,0.0 50.08818737503363,8.82530616334666,0.0 50.0851963479583,8.842048612969064,0.0 50.07200832727764,8.835811229776404,0.0 50.07049126160658,8.824386970034057,0.0 50.069570879337796,8.78607195954587,0.0 50.0601144750599,8.77637532098599,0.0 50.048860122033034,8.752320198404746,0.0 50.01891548545801,8.76089799405387,0.0 50.01232515932821,8.762762732238464,0.0 50.00777131509019,8.767797525336864,0.0 50.00381631081293,8.766492208607648,0.0 50.002510604252436,8.768218421614016,0.0 50.00128762337993,8.775689982557171,0.0 50.002779059304025,8.78613160499326,0.0 50.00131196288862,8.790503627643895,0.0 49.99779764073278,8.794819888766732,0.0 49.99865804458652,8.799875040273319,0.0 50.00348400921596,8.811082687365706,0.0 50.00061646545155,8.81260605687341,0.0 50.00033669592648,8.815217547458044,0.0 49.99781869693746,8.815326359565736,0.0 49.99648969985931,8.811844372119557,0.0 49.99383159550032,8.813150117411876,0.0 49.994111402878666,8.819134783334993,0.0 49.98877967758542,8.820035779675596,0.0 49.98385558936126,8.814211125129365,0.0 49.97969399505043,8.814642581021678,0.0 49.9713003514494,8.818202092133264,0.0 49.96810899538112,8.812377437587031,0.0 49.96519496372066,8.813456077317817,0.0 49.962003202814614,8.82165373927177,0.0 49.96255830686967,8.839127702910474,0.0 49.96380726759058,8.846246725133646,0.0");
    var hrCoord_16030560 = makeNimstrLit("8.74344999062572,50.04918999904961,0 8.751160000623477,50.0240599912103,0 8.754709994364463,50.01274999536513,0 8.757490069155791,50.00470163525198,0 8.762733428456755,50.00328437886608,0 8.764625619546589,50.00285518138227,0 8.770820082372893,50.00139911723744,0 8.772673791350965,50.00094266817716,0 8.77914111075552,49.99943225272401,0 8.799229992240086,49.99467000542582,0 8.806542356164457,49.99340340620989,0 8.809790356707138,49.99206374565822,0 8.826786125387034,49.98576635583486,0 8.828778769472731,49.98395187720181,0 8.831507689809753,49.98097186169272,0 8.830959149889964,49.97966245881608,0 8.829928960125969,49.9778595543125,0 8.830465197667758,49.9768960693446,0 8.830997048231009,49.97595153004782,0 8.83394675737425,49.97397788936575,0 8.836460977629683,49.97217362668664,0 8.83910802473485,49.96908500881526,0 8.840122212590229,49.96799437118023,0 8.841363208739749,49.9668289258026,0 8.842263170839054,49.96603842183582,0 8.843115976927399,49.96501359037988,0 8.846351833332184,49.9627537294549,0 8.849460013049532,49.95986999442856,0 8.850210000098501,49.95926998619805,0 8.850310012566743,49.95926999267505,0 8.865430008710506,49.95390999382382,0 8.891260000848778,49.94599000213314,0 8.908000004981322,49.96970998840088,0 8.960089986326672,49.98685999774121,0 9.028550004173386,49.98896999905399,0 9.051090005623092,49.98967000446294,0 9.063509599805697,49.99349370576994,0 9.058420003685276,50.00014000125238,0 9.053349983587822,50.00350000123728,0 9.043370001095513,50.00774999264858,0 9.039590003958708,50.01043999620001,0 9.037680002386232,50.0117099996073,0 9.035770000347792,50.01386000058577,0 9.035669991374673,50.01396999599814,0 9.033520003630585,50.01612999279517,0 9.03276999394412,50.01722999549925,0 9.031890007343058,50.01854999140686,0 9.031080010354554,50.02017000106182,0 9.030590017083911,50.02186000123651,0 9.030160003507783,50.02427999548287,0 9.030019994132037,50.02558000112721,0 9.03012998938997,50.02655999787962,0 9.030250000259972,50.02768999624666,0 9.03161000235999,50.03279999301565,0 9.032170004807355,50.0358999942769,0 9.032050012345229,50.03739999588439,0 9.031490007969513,50.03882000226924,0 9.030510014244126,50.04000000228209,0 9.029080001550227,50.04103999783368,0 9.029060008563725,50.04106000232493,0 9.028230008798136,50.04156999577097,0 9.026240009262718,50.04279999711334,0 9.024160016072742,50.04365000084064,0 9.023260013005588,50.04386000537015,0 9.019740018159242,50.04436999886058,0 9.017760016210493,50.04465999781608,0 9.013460007365307,50.04553999270155,0 9.011000004708681,50.04575999839583,0 9.00992999888183,50.04561998877342,0 9.008480008624115,50.04557998927629,0 9.005680013424682,50.04550000056366,0 8.986750005661659,50.04149000275402,0 8.978420013141989,50.04530999078934,0 8.976519982950132,50.0514200003693,0 8.982709988738773,50.05690999839843,0 8.986820008613575,50.06226000595279,0 8.987800012679832,50.06321000762544,0 8.989760009887313,50.06513000580236,0 8.990918897321578,50.0669106073983,0 8.9955775301496,50.06892022836311,0 8.998568988963262,50.06893433107653,0 8.999404770882135,50.06967750682338,0 8.99907863971808,50.070980702649,0 8.998540008233778,50.07845000669163,0 8.999480727122569,50.07942879191786,0 8.998936147196799,50.08570047236539,0 8.997979981825159,50.09309999923527,0 9.009470009726822,50.10552999340482,0 9.014060011409995,50.1093099951841,0 9.018390009198136,50.11148999968705,0 9.022280002796611,50.11211998982098,0 9.030180002730933,50.11276999957308,0 9.036709983650752,50.11439000225139,0 9.03690999604585,50.11440999933917,0 9.03949998805237,50.11470999733926,0 9.041409993836245,50.11494000056713,0 9.043569987178085,50.11518999631258,0 9.047210001617215,50.1158499945509,0 9.05294999694393,50.11569999345475,0 9.055779984887241,50.11657998906307,0 9.062110001201511,50.11675000135271,0 9.065399990762362,50.11700000561905,0 9.071007549127517,50.11922371673292,0 9.076630005563471,50.1161700007584,0 9.077190003068765,50.115860002529,0 9.090149996865359,50.11705999751791,0 9.097210008411061,50.12491999822693,0 9.097229998645521,50.12493000896303,0 9.097450000598039,50.12500001156322,0 9.100480005609697,50.12522999907779,0 9.101720017827175,50.12503999964554,0 9.104050013666759,50.12524999543405,0 9.106250000414615,50.1255599977141,0 9.106320013833074,50.12556999995883,0 9.11103000773252,50.12645000491829,0 9.112480002104718,50.12650000158009,0 9.118190018941625,50.12683999405951,0 9.11824001589531,50.12684999758118,0 9.119370021092625,50.12667000066124,0 9.120230000806123,50.12640000226687,0 9.121240007930481,50.12608999931724,0 9.122669997795143,50.1251799912294,0 9.125470008557192,50.12341000006478,0 9.129070017631035,50.12185001116103,0 9.134449996804847,50.11918999923478,0 9.134810008978569,50.11920999602372,0 9.134890001642818,50.11917000907523,0 9.138790008249355,50.11738000700088,0 9.143799995794254,50.11436000115628,0 9.153480013609004,50.1177800012857,0 9.174246170565004,50.11909431140469,0 9.178573419936008,50.12093255348469,0 9.187279993149794,50.12424999394975,0 9.190869996641968,50.12840999555607,0 9.190140006470225,50.12852999126118,0 9.189239992099489,50.12886999244492,0 9.18859001078415,50.13008000182714,0 9.188529991233642,50.13068000290921,0 9.188270001636816,50.13122999393559,0 9.187689999246999,50.13169000225765,0 9.186230008527531,50.13220000137167,0 9.184630011698792,50.13358999951587,0 9.184889997736651,50.13418000049787,0 9.184539995171448,50.13461999983619,0 9.183930004443509,50.13530000248941,0 9.183950002803973,50.135519998149,0 9.183550012978392,50.13613999783406,0 9.183569996231322,50.13690999406499,0 9.18340000738119,50.13743999921365,0 9.183380014260379,50.13787000106181,0 9.190900001716518,50.139159993859,0 9.193700011750751,50.13930999759451,0 9.19464001127551,50.13981000038044,0 9.195470000586393,50.14028998889953,0 9.196120007766066,50.14010998828039,0 9.196500004917223,50.14001998961674,0 9.197040001756861,50.14030999242293,0 9.199190010294648,50.14073999922731,0 9.200440003999781,50.14084998669727,0 9.201030013515277,50.14057999207999,0 9.203099982949214,50.14095000662204,0 9.205299986371029,50.14180000860304,0 9.206359985346644,50.142070008102,0 9.207580000543322,50.14207999782826,0 9.209859987405412,50.14242999853374,0 9.210280003353484,50.1423899976447,0 9.210799991009644,50.14220999766564,0 9.21077998816282,50.1435000057295,0 9.211479992867652,50.14477000460019,0 9.214099996581536,50.14445000468506,0 9.218959999344854,50.14661000455769,0 9.221479995862085,50.14939999389495,0 9.225630001631478,50.14855000094843,0 9.23032000616189,50.14765999014259,0 9.232970002625747,50.14675999789494,0 9.233769992622126,50.14662999691726,0 9.235819988502438,50.14626998818617,0 9.240770008871321,50.14369999990418,0 9.250599997697448,50.14088999946022,0 9.253009998704444,50.13936000061953,0 9.257409988922282,50.13877999779094,0 9.258539987369192,50.13882999185971,0 9.261029985191303,50.13894999352718,0 9.26667000168456,50.13956998800712,0 9.270219998473655,50.14184999133448,0 9.271399995864714,50.14201999982645,0 9.276349996686779,50.14272000476213,0 9.281169993334959,50.14154000700376,0 9.281790004285499,50.14151999702619,0 9.28505000417664,50.14177000501881,0 9.294040000079619,50.13933999639883,0 9.298069993519123,50.13708999386204,0 9.304220003766982,50.13527001045085,0 9.307460002912588,50.13401000172517,0 9.3099899963248,50.13394000197258,0 9.313210010638157,50.13483999891268,0 9.317820007007097,50.13657000315733,0 9.32087000656426,50.13792000208673,0 9.327880001083775,50.14102000396739,0 9.332359997806428,50.13920999562789,0 9.335839993928891,50.13698998995007,0 9.336390008811645,50.13671999110127,0 9.339360000403303,50.13273000018819,0 9.341829993133189,50.1314900069315,0 9.349580011888042,50.13060000490764,0 9.357900000002719,50.1309800011009,0 9.364500003588615,50.1308599976779,0 9.373790012600809,50.13085001035299,0 9.374940014378062,50.13078000272372,0 9.376428136780461,50.13060459037479,0 9.375980001360301,50.12583000875451,0 9.380379996288745,50.12133000326065,0 9.382299998223088,50.11936999839725,0 9.384039990002806,50.11687999723922,0 9.386960003003646,50.1104799943284,0 9.392690004434337,50.10208999192354,0 9.39389999043634,50.09908999048587,0 9.39441999471242,50.09769998717655,0 9.395280005887983,50.09654000569314,0 9.398049991407143,50.09346000849757,0 9.399579989575344,50.09215000204925,0 9.401979985879303,50.08986000850655,0 9.404899991283124,50.08774999576386,0 9.408080014793335,50.08628000072305,0 9.410360008182412,50.08474000191088,0 9.412109999917282,50.08400999347561,0 9.414540018844249,50.08372999722369,0 9.416490008385686,50.08366999838898,0 9.419320007524787,50.08447000100686,0 9.421189997530622,50.08477000057801,0 9.421729983690359,50.0848199989533,0 9.422609992020972,50.0848999888351,0 9.424210000439418,50.08487999332674,0 9.426209991743331,50.08466000872539,0 9.426650001161059,50.08445000438933,0 9.427099982830001,50.08406000313204,0 9.427139990696315,50.08406000087415,0 9.427652721408091,50.08399998652941,0 9.433353179705726,50.08402470953537,0 9.435354143826626,50.08505389047933,0 9.436088619491672,50.08522879361796,0 9.438430526576967,50.08697187563428,0 9.440104382080714,50.08699613917442,0 9.445369991346254,50.08990999762638,0 9.447630008726817,50.08999999740072,0 9.450919994621692,50.09031000114513,0 9.452070007349786,50.0907899928403,0 9.454410007723135,50.09108999360934,0 9.460950000938215,50.09060999515631,0 9.462300008199286,50.0910400032701,0 9.463400013428359,50.09106000139991,0 9.464200003484436,50.09124000726924,0 9.465530012619313,50.09153000694008,0 9.468800008351925,50.09136999634158,0 9.470470017914517,50.09143000256835,0 9.472329999587991,50.09161000390467,0 9.473620019051696,50.09215000133324,0 9.474920003056653,50.09292999912699,0 9.476870017014669,50.09377000009614,0 9.478919993936698,50.09430999575569,0 9.481419984146658,50.0947799948108,0 9.483559984403359,50.09436999910113,0 9.485509981915525,50.09412999558609,0 9.48570999585527,50.09412000396971,0 9.487359987494594,50.09400999892856,0 9.490429987404328,50.09412999491645,0 9.493209983692267,50.09459999267533,0 9.495159986345893,50.09531999217066,0 9.496829992324216,50.09657999894574,0 9.498319988002368,50.09723999301944,0 9.49989998994757,50.09718000287389,0 9.501569988519432,50.09664000069188,0 9.502680008048856,50.09603999797577,0 9.504629999438921,50.09574000956214,0 9.506760006872188,50.09622000084823,0 9.507140003812562,50.09742000406875,0 9.507229996886643,50.09819000714014,0 9.50669001130621,50.09907000222062,0 9.507150006893196,50.09931999902311,0 9.50923999463094,50.09956000551333,0 9.512149998788429,50.09941000120356,0 9.512820008669731,50.0990800014653,0 9.513100009864747,50.09966999606637,0 9.518980005320945,50.10612000219624,0 9.523749987770032,50.10609999798064,0 9.509789996972424,50.14568999412518,0 9.510159999038692,50.17993000361417,0 9.523900010995279,50.20862999333181,0 9.497610010511844,50.23025999464183,0 9.465759992135864,50.23500999995167,0 9.427309998664841,50.28948999496187,0 9.39269000551494,50.33608999941583,0 9.354189991318192,50.3790699957637,0 9.352780014398681,50.43896001016936,0 9.340660001490294,50.4547299998002,0 9.312470000603268,50.45978998838441,0 9.299499989859983,50.45929999898711,0 9.289360011907432,50.45382000673616,0 9.262010012800003,50.40678999774384,0 9.261579990204883,50.37911000208434,0 9.163230003564165,50.3586100105654,0 9.131989998719183,50.34574999621018,0 9.062800000324119,50.32285000000135,0 9.054520002404079,50.31968000467632,0 9.043719996102452,50.32165000058219,0 9.029761680801087,50.32841918451295,0 9.031495109187416,50.31272183455483,0 8.995839452582921,50.30250677011594,0 8.987631336027818,50.30006956026648,0 8.975659492935346,50.29547621167906,0 8.958677331367527,50.28630458701393,0 8.94929415829554,50.28125262914848,0 8.925608601416379,50.27595619488345,0 8.912707196248872,50.26838770369456,0 8.900321281931532,50.26109642163877,0 8.883946027953995,50.2514976812132,0 8.857519269942278,50.24799938088881,0 8.843243933535447,50.24615324039392,0 8.843337919829239,50.24519622029486,0 8.844352709690199,50.23641778130721,0 8.848844132593994,50.23205190395576,0 8.859845616898108,50.22335260208263,0 8.858916319673716,50.22092275483271,0 8.854913957622637,50.21029795607451,0 8.828012506624319,50.20845601508016,0 8.792170003634453,50.19689999140842,0 8.792079997664727,50.19360999114326,0 8.792090007857588,50.19360999589294,0 8.792080005707826,50.1933399969401,0 8.792139995449546,50.18931998969914,0 8.792109992014069,50.18893999697589,0 8.792080000426376,50.18849999434099,0 8.792679986357536,50.18761999891223,0 8.792780002183326,50.18624999797653,0 8.792809992943038,50.1838499994514,0 8.78973001669163,50.17977998885446,0 8.789990009297167,50.17618999887759,0 8.790029994197257,50.17608999350487,0 8.790400013363707,50.1756399975125,0 8.795660002988884,50.17271001146669,0 8.800430009638776,50.17120000991109,0 8.800030003318794,50.17109000869478,0 8.80016999786298,50.17019999937831,0 8.800160007579409,50.16933000575472,0 8.798210009160762,50.16943000004811,0 8.798119992086578,50.16853000305719,0 8.797839987310598,50.16741000349072,0 8.795570001629894,50.16727000126137,0 8.794420002285929,50.16686998641285,0 8.794869986905674,50.16460000764227,0 8.794839990093175,50.16445000317964,0 8.795069987661732,50.1639400006493,0 8.794959989515347,50.16379001174276,0 8.794649984336918,50.1638499933831,0 8.793969990776221,50.1630399881526,0 8.791709999964247,50.16336999710949,0 8.790470002191894,50.16343999740508,0 8.790340002022822,50.16295999319533,0 8.789559999991919,50.16145999765807,0 8.790999987988663,50.16111999166834,0 8.790610009406777,50.15989999880812,0 8.790650015217244,50.1588999906634,0 8.789859999743616,50.15894999130114,0 8.789490009437273,50.1588699891094,0 8.787180014898484,50.1593899986436,0 8.786940002233044,50.15923998964287,0 8.786050003904881,50.15883999909401,0 8.785669999219367,50.15878999189965,0 8.785020015562498,50.15871999044146,0 8.783420004936072,50.15842000281186,0 8.783420004789116,50.15770999268128,0 8.783470016746801,50.15722999454914,0 8.783580009619461,50.15699999220811,0 8.784100012663544,50.15583999017743,0 8.782219996826949,50.15551999603872,0 8.782360012243217,50.15504999142234,0 8.782400002741433,50.15412000308445,0 8.782440000873432,50.1538799934948,0 8.782640002335953,50.15348999380655,0 8.782690004419679,50.15288999409114,0 8.782599997613589,50.15168999527978,0 8.782499994394218,50.15002000083744,0 8.782429997799444,50.14841999909195,0 8.782339993684557,50.14642999456324,0 8.782259999824177,50.14484999042134,0 8.782299991382095,50.14447000212288,0 8.782329990151951,50.14413999428914,0 8.782350006299202,50.14389999847396,0 8.782369988407282,50.14374000265145,0 8.78239000173469,50.14349999358076,0 8.782439996314656,50.14299999406526,0 8.782439988694478,50.1429199972104,0 8.782470000856153,50.14267999368212,0 8.782480003228939,50.14251999070935,0 8.782579988275536,50.14241999306769,0 8.783599991220438,50.14111999489931,0 8.784448782893042,50.1405347806952,0 8.784710985537078,50.14005921419489,0 8.784836043163592,50.13976715250182,0 8.784909988556111,50.13939000291317,0 8.784920000629107,50.13928999326227,0 8.784719982911794,50.13919999095377,0 8.77993000857648,50.13822000388137,0 8.779900001379451,50.13804999861398,0 8.779870002850776,50.13781999822846,0 8.779780007883684,50.13723999143221,0 8.781680019517596,50.13739999790258,0 8.785470012109293,50.13728999853527,0 8.790470012031696,50.13658999710204,0 8.795220001648541,50.13552000122132,0 8.796740008487991,50.13528000323189,0 8.79849000489105,50.13476000552564,0 8.801570014121655,50.13428000627525,0 8.809370015405136,50.13413999475548,0 8.806000008358936,50.12600000470178,0 8.800339551601194,50.11398120331311,0 8.798730684364719,50.11222326889193,0 8.803275711144671,50.10682728967874,0 8.806256200740775,50.10212970751106,0 8.809628959422538,50.09681686079544,0 8.812426567410549,50.0923736430835,0 8.814529068369041,50.08870301933311,0 8.815564740819466,50.08674190292712,0 8.816983190135087,50.08430003950284,0 8.816736771584527,50.08396773922301,0 8.819257293064814,50.08161630263398,0 8.825500005361317,50.07011000106249,0 8.825430011347251,50.06916000981824,0 8.825340007617122,50.06887000547547,0 8.825010007651045,50.06831000400231,0 8.824340007935508,50.06807000324666,0 8.824190003312365,50.0678600107172,0 8.823980000479738,50.06767000416784,0 8.823560009647329,50.06769000265334,0 8.819140000891526,50.06794999086822,0 8.784360013267232,50.06681998757962,0 8.778350008752462,50.05852000117123,0 8.769430002590275,50.05571000525481,0 8.74344999062572,50.04918999904961,0");
    showBorder_16030380(hrCoordReal_16030559, makeNimstrLit("rgba(255, 0, 0, 1)"), true, 10, false);
    showBorderDistrict_16030601(makeNimstrLit("63688 Ober-Seemen,63697 Merkenfritz,63697 Hirzenhain,63683 Li\xC3\x9Fberg,63683 Eckartsborn,63691 Bobenhausen,63683 Wippenbach,63683 Selters (Ortenberg),63683 Bleichenbach,63654 B\xC3\xBCdingen>city,63674 Enzheim,63674 Lindheim,63674 Oberau,63674 H\xC3\xB6chst,61130 Eichen,61130 Nidderau Heldenbergen,61130 Windecken,61137 Sch\xC3\xB6neck,61137 Oberdorfelden,61138 Niederdorfelden>city,63477 Maintal>city,63165 M\xC3\xBChlheim am Main>city,63075 Waldheim,63179 Obertshausen>city,63150 Heusenstamm>city,63128 Dietzenbach,63322 Waldacker,63322 R\xC3\xB6dermark Ober-Roden,63110 Rodgau>city,63533 Mainhausen>city,63538 Gro\xC3\x9Fkrotzenburg>city,63517 Rodenbach>city,63579 Neuses,63579 Horbach,63589 Waldrode,63599 Biebergem\xC3\xBCnd>city,63639 Fl\xC3\xB6rsbachtal>city,63637 Pfaffenhausen>city,63628 Alsberg,63628 Kerbersdorf,63628 Sch\xC3\xB6nhof,63633 Wettges"), makeNimstrLit("rgba(255, 0, 0, 1)"), makeNimstrLit("rgba(255, 0, 0, 0)"));

  
}
function HEX3Aanonymous_17005246(e_17005249) {
    map.getViewPort().resize();

  
}
map.addEventListener("tap", loadLinks_14911053, false);
geoArea_16030557();
window.addEventListener("resize", HEX3Aanonymous_17005246, false);
function mustRehash_15990601(t_15990604) {
  var result_15990605 = false;

    if (!((t_15990604.counter < (t_15990604.data).length))) {
    failedAssertImpl_115480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_15990605 = ((mulInt((t_15990604.data).length, 2) < mulInt(t_15990604.counter, 3)) || (subInt((t_15990604.data).length, t_15990604.counter) < 4));

  return result_15990605;

}
function rawInsert_16016122(t_16016128, data_16016131, data_16016131_Idx, key_16016132, val_16016134, hc_16016135, h_16016136) {
    data_16016131[data_16016131_Idx][chckIndx(h_16016136, 0, (data_16016131[data_16016131_Idx]).length-1)].Field1 = key_16016132;
    data_16016131[data_16016131_Idx][chckIndx(h_16016136, 0, (data_16016131[data_16016131_Idx]).length-1)].Field2 = val_16016134;
    data_16016131[data_16016131_Idx][chckIndx(h_16016136, 0, (data_16016131[data_16016131_Idx]).length-1)].Field0 = hc_16016135;

  
}
function enlarge_16015161(t_16015167) {
    var n_16015175 = [];
    n_16015175 = new Array(chckRange(mulInt((t_16015167.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_16015167.data).length, 2), 0, 2147483647);++i) {n_16015175[i]={Field0: 0, Field1: null, Field2: null};}    var Tmp1 = t_16015167.data; t_16015167.data = n_16015175; n_16015175 = Tmp1;    L2: do {
      var i_16015334 = 0;
      var colontmp__17030554 = 0;
      colontmp__17030554 = (n_16015175).length - 1;
      var res_17030555 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_17030555 <= colontmp__17030554)) break L4;
            i_16015334 = res_17030555;
            var eh_16015490 = n_16015175[chckIndx(i_16015334, 0, (n_16015175).length-1)].Field0;
            if (isFilled_10291218(eh_16015490)) {
            var j_16015497 = (eh_16015490 & (t_16015167.data).length - 1);
            L5: do {
                L6: while (true) {
                if (!isFilled_10291218(t_16015167.data[chckIndx(j_16015497, 0, (t_16015167.data).length-1)].Field0)) break L6;
                  j_16015497 = nextTry_10295014(j_16015497, (t_16015167.data).length - 1);
                }
            } while(false);
            rawInsert_16016122(t_16015167, t_16015167, "data", n_16015175[chckIndx(i_16015334, 0, (n_16015175).length-1)].Field1, n_16015175[chckIndx(i_16015334, 0, (n_16015175).length-1)].Field2, eh_16015490, j_16015497);
            }
            
            res_17030555 = addInt(res_17030555, 1);
          }
      } while(false);
    } while(false);

  
}
function rawGetKnownHC_16016629(t_16016633, key_16016634, hc_16016635) {
  var result_16016636 = 0;

  BeforeRet: do {
    if (((t_16016633.data).length == 0)) {
    result_16016636 = -1;
    break BeforeRet;
    }
    
    var h_16020138 = (hc_16016635 & (t_16016633.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_10291218(t_16016633.data[chckIndx(h_16020138, 0, (t_16016633.data).length-1)].Field0)) break L2;
          if (((t_16016633.data[chckIndx(h_16020138, 0, (t_16016633.data).length-1)].Field0 == hc_16016635) && (t_16016633.data[chckIndx(h_16020138, 0, (t_16016633.data).length-1)].Field1 == key_16016634))) {
          result_16016636 = h_16020138;
          break BeforeRet;
          }
          
          h_16020138 = nextTry_10295014(h_16020138, (t_16016633.data).length - 1);
        }
    } while(false);
    result_16016636 = subInt(-1, h_16020138);
  } while (false);

  return result_16016636;

}
function HEX5BHEX5DHEX3D_15960975(t_15960981, key_15960982, val_15960984) {
    if (((t_15960981.data).length == 0)) {
    var correctSizeHEX60gensym255_15970001 = slotsNeeded_10295048(32);
    t_15960981.counter = 0;
    t_15960981.data = new Array(chckRange(correctSizeHEX60gensym255_15970001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym255_15970001, 0, 2147483647);++i) {t_15960981.data[i]={Field0: 0, Field1: null, Field2: null};}    }
    
    var hc_15975601 = [0];
    var index_15975610 = rawGet_14940378(t_15960981, key_15960982, hc_15975601, 0);
    if ((0 <= index_15975610)) {
    t_15960981.data[chckIndx(index_15975610, 0, (t_15960981.data).length-1)].Field2 = val_15960984;
    }
    else {
      if (((t_15960981.data).length == 0)) {
      var correctSizeHEX60gensym258_15985001 = slotsNeeded_10295048(32);
      t_15960981.counter = 0;
      t_15960981.data = new Array(chckRange(correctSizeHEX60gensym258_15985001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym258_15985001, 0, 2147483647);++i) {t_15960981.data[i]={Field0: 0, Field1: null, Field2: null};}      }
      
      if (mustRehash_15990601(t_15960981)) {
      enlarge_16015161(t_15960981);
      index_15975610 = rawGetKnownHC_16016629(t_15960981, key_15960982, hc_15975601[0]);
      }
      
      index_15975610 = subInt(-1, index_15975610);
      rawInsert_16016122(t_15960981, t_15960981, "data", key_15960982, val_15960984, hc_15975601[0], index_15975610);
      t_15960981.counter = addInt(t_15960981.counter, 1);
    }
    

  
}
function displaySector_15400263(sectName_15400265, show_15400266) {
    var Tmp1;
    var Tmp2;
    var Tmp3;
    var Tmp4;
                    var Tmp14;
    var Tmp15;

  BeforeRet: do {
    var sector_15960531 = (Tmp1 = HEX5BHEX5D_15050843(allSectors_14690629[0], sectName_15400265), Tmp1)[0][Tmp1[1]];
    if (!(show_15400266)) {
    mainSectorGroup_15825009[0].removeObject((Tmp2 = HEX5BHEX5D_14940367(sectorGrp_14710629[0], sector_15960531), Tmp2)[0][Tmp2[1]]);
    (Tmp3 = HEX5BHEX5D_14940367(sectorGrp_14710629[0], sector_15960531), Tmp3)[0][Tmp3[1]].removeAll();
    sector_15960531.shownOnMap = false;
    break BeforeRet;
    }
    
    HEX5BHEX5DHEX3D_15960975(sectorGrp_14710629[0], sector_15960531, function(){return new H.map.Group()}());
    (Tmp4 = HEX5BHEX5D_14940367(sectorGrp_14710629[0], sector_15960531), Tmp4)[0][Tmp4[1]].setZIndex(-99);
    sector_15960531.shownOnMap = true;
    L5: do {
      var n_16020847 = [];
      var links_16020848 = [];
      var L_17030548 = len_15255548(sector_15960531.streets);
      if ((0 < sector_15960531.streets.counter)) {
      var h_17030549 = sector_15960531.streets.first;
      L6: do {
          L7: while (true) {
          if (!(0 <= h_17030549)) break L7;
            var nxt_17030551 = sector_15960531.streets.data[chckIndx(h_17030549, 0, (sector_15960531.streets.data).length-1)].Field1;
            if (isFilled_10291218(sector_15960531.streets.data[chckIndx(h_17030549, 0, (sector_15960531.streets.data).length-1)].Field0)) {
            n_16020847 = sector_15960531.streets.data[chckIndx(h_17030549, 0, (sector_15960531.streets.data).length-1)].Field2;
            links_16020848 = sector_15960531.streets.data[chckIndx(h_17030549, 0, (sector_15960531.streets.data).length-1)].Field3;
            L8: do {
              var link_16020856 = null;
              var link_16020856_Idx = 0;
              var i_17030545 = 0;
              var L_17030546 = (links_16020848).length;
              L9: do {
                  L10: while (true) {
                  if (!(i_17030545 < L_17030546)) break L10;
                    link_16020856 = links_16020848; link_16020856_Idx = chckIndx(i_17030545, 0, (links_16020848).length-1);
                    var lnStr_16020857 = function(){return new H.geo.LineString();}();
                    L11: do {
                      var c_16020865 = null;
                      var c_16020865_Idx = 0;
                      var i_17030540 = 0;
                      var L_17030541 = (link_16020856[link_16020856_Idx].geometry).length;
                      L12: do {
                          L13: while (true) {
                          if (!(i_17030540 < L_17030541)) break L13;
                            c_16020865 = link_16020856[link_16020856_Idx].geometry; c_16020865_Idx = chckIndx(i_17030540, 0, (link_16020856[link_16020856_Idx].geometry).length-1);
                            lnStr_16020857.pushLatLngAlt(c_16020865[c_16020865_Idx].lat, c_16020865[c_16020865_Idx].lng, 1.0000000000000000e+00);
                            i_17030540 = addInt(i_17030540, 1);
                            if (!(((link_16020856[link_16020856_Idx].geometry).length == L_17030541))) {
                            failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                            }
                            
                          }
                      } while(false);
                    } while(false);
                    var pOpt_16020868 = {style: {strokeColor: "rgba(255, 0, 0, 0.2)", fillColor: "rgba(255, 0, 0, 0.4)", lineWidth: 10, m_type: NTI10626076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, zIndex: -99, m_type: NTI10626081};
                    var pl_16020869 = function(ls, options){return new H.map.Polyline(ls, options)}(lnStr_16020857, pOpt_16020868);
                    (Tmp14 = HEX5BHEX5D_14940367(sectorGrp_14710629[0], sector_15960531), Tmp14)[0][Tmp14[1]].addObject(pl_16020869);
                    i_17030545 = addInt(i_17030545, 1);
                    if (!(((links_16020848).length == L_17030546))) {
                    failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while(false);
            } while(false);
            if (!((len_15255548(sector_15960531.streets) == L_17030548))) {
            failedAssertImpl_115480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_17030549 = nxt_17030551;
          }
      } while(false);
      }
      
    } while(false);
    mainSectorGroup_15825009[0].addObject((Tmp15 = HEX5BHEX5D_14940367(sectorGrp_14710629[0], sector_15960531), Tmp15)[0][Tmp15[1]]);
  } while (false);

  
}
