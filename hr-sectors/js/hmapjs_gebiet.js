/* Generated by the Nim Compiler v1.0.2 */
/*   (c) 2019 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI175202 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI175223 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI175227 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3686 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI202085 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI286131 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI201040 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI201024 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI201143 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI204066 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI405889 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI405928 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI204020 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI171776 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI171784 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI202048 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI202081 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI196448 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI196444 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI196440 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI196436 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI196432 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI196428 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI196424 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI196420 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI196416 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI196412 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI196408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI196404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI196400 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI196396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI196392 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI196388 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI196384 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI196380 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI196376 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI196372 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI196205 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI196283 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI196281 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI196227 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI196565 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI196563 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI196561 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI196231 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI196229 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI196289 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI200100 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI202056 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI202076 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI202096 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI202090 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI202089 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI387716 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI387707 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI387702 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI387480 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI386178 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI286121 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI286123 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI360825 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI201036 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI257588 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI86432 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI89247 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3660 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI162628 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI166420 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI166483 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI162618 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI112 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI162614 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI162697 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI162693 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI162692 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI162626 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI162649 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI162610 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI162204 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI162202 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI162636 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI162602 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI162639 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI162604 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI162642 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI162606 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI162645 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI162608 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI162653 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI162612 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI162616 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI298232 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI298229 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI298226 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI298206 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI298203 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI298200 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3738 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI187557 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI187545 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI298183 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI298180 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI298177 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI298061 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI298075 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI298072 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI298069 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI298052 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI298022 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI298047 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI298045 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI298020 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI298157 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI298154 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI298151 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI201018 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI201016 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI298027 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI298016 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI298039 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI298037 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI298031 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI298018 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI298134 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI298131 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI298128 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI268211 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI251297 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI251298 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI256761 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI256757 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI256148 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI256713 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI256701 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI256722 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI256720 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI256028 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI256714 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI256705 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI248441 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI248437 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI248433 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI248429 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI248425 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI248421 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI248417 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI248413 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI248409 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI248405 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI248401 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI248397 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI248393 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI248389 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI248385 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI248381 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI248377 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI248373 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI248369 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI248365 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI248204 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI248274 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI248220 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI248519 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI248517 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI248515 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI248224 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI248222 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI268207 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI268209 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI248276 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI124 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI291035 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI286081 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI177055 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI130 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI282030 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI51907 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3630 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3652 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3654 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3644 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI149416 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI149320 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI3694 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI3604 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI178230 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI300839 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI300836 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI300833 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3662 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3650 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3642 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3646 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3608 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3714 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI114 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI3708 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3626 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3628 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3658 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI3658 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3658.node = NNI3658;
var NNI3628 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3628.node = NNI3628;
NTI3708.base = NTI3626;
NTI3714.base = NTI3626;
var NNI3626 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3708, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI114, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI3714, name: "up", sons: null}]};
NTI3626.node = NNI3626;
var NNI3608 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3608.node = NNI3608;
NTI3626.base = NTI3608;
NTI3628.base = NTI3626;
NTI3658.base = NTI3628;
var NNI3646 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3646.node = NNI3646;
var NNI3642 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3642.node = NNI3642;
NTI3642.base = NTI3628;
NTI3646.base = NTI3642;
var NNI3650 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3650.node = NNI3650;
NTI3650.base = NTI3628;
var NNI3662 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3662.node = NNI3662;
NTI3662.base = NTI3628;
NTI3604.base = NTI3694;
var NNI300839 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI178230, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI178230, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3604, name: "Field2", sons: null}]};
NTI300839.node = NNI300839;
NTI300836.base = NTI300839;
var NNI300833 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI300836, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI104, name: "counter", sons: null}]};
NTI300833.node = NNI300833;
NTI149320.base = NTI138;
NTI149416.base = NTI138;
var NNI3644 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3644.node = NNI3644;
NTI3644.base = NTI3642;
var NNI3654 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3654.node = NNI3654;
var NNI3652 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3652.node = NNI3652;
var NNI3630 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3630.node = NNI3630;
NTI3630.base = NTI3626;
NTI3652.base = NTI3630;
NTI3654.base = NTI3652;
var NNI51907 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI104, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI104, name: "b", sons: null}]};
NTI51907.node = NNI51907;
var NNI282030 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "app_id", len: 0, typ: NTI140, name: "app_id", sons: null}, 
{kind: 1, offset: "app_code", len: 0, typ: NTI140, name: "app_code", sons: null}, 
{kind: 1, offset: "useHTTPS", len: 0, typ: NTI130, name: "useHTTPS", sons: null}, 
{kind: 1, offset: "useCIT", len: 0, typ: NTI130, name: "useCIT", sons: null}]};
NTI282030.node = NNI282030;
var NNI177055 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI177055.node = NNI177055;
NTI177055.base = NTI3608;
NTI282030.base = NTI177055;
var NNI286081 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "tileSize", len: 0, typ: NTI104, name: "tileSize", sons: null}, 
{kind: 1, offset: "ppi", len: 0, typ: NTI104, name: "ppi", sons: null}, 
{kind: 1, offset: "lg", len: 0, typ: NTI140, name: "lg", sons: null}, 
{kind: 1, offset: "lg2", len: 0, typ: NTI140, name: "lg2", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI140, name: "style", sons: null}, 
{kind: 1, offset: "pois", len: 0, typ: NTI130, name: "pois", sons: null}, 
{kind: 1, offset: "crossOrigin", len: 0, typ: NTI138, name: "crossOrigin", sons: null}]};
NTI286081.node = NNI286081;
NTI286081.base = NTI177055;
var NNI291035 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "pixelRatio", len: 0, typ: NTI124, name: "pixelRatio", sons: null}, 
{kind: 1, offset: "noWrap", len: 0, typ: NTI130, name: "noWrap", sons: null}]};
NTI291035.node = NNI291035;
NTI291035.base = NTI177055;
var NNI248276 = {kind: 2, len: 91, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI140, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI140, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI140, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI140, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI140, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI140, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI140, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI140, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI140, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI140, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI140, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI140, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI140, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI140, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI140, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI140, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI140, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI140, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI140, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI140, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI140, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI140, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI140, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI140, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI140, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI140, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI140, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI140, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI140, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI140, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI140, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI140, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI140, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI140, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI140, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI140, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI140, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI140, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI140, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI140, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI140, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI140, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI140, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI140, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI140, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI140, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI140, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI140, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI140, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI140, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI140, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI140, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI140, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI140, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI140, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI140, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI140, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI140, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI140, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI140, name: "minWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI140, name: "overflow", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI140, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI140, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI140, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI140, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI140, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI140, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI140, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI140, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI140, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI140, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI140, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI140, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI140, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI140, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI140, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI140, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI140, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI140, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI140, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI140, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI140, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI140, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI140, name: "textTransform", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI140, name: "transform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI140, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI140, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI140, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI140, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI140, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI104, name: "zIndex", sons: null}]};
NTI248276.node = NNI248276;
NTI248276.base = NTI3608;
var NNI268207 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI268207, name: "pkReplace", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI268207, name: "pkRemove", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI268207, name: "pkAppend", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI268207, name: "pkInsertBefore", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI268207, name: "pkDetach", len: 0, sons: null}}};
NTI268207.node = NNI268207;
NTI248515.base = NTI248222;
NTI248517.base = NTI248222;
NTI248519.base = NTI248222;
var NNI248220 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI248220, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI248220, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI248220, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI248220, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI248220, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI248220, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI248220, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI248220, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI248220, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI248220, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI248220, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI248220, name: "NotationNode", len: 0, sons: null}}};
NTI248220.node = NNI248220;
NTI248274.base = NTI248276;
var NNI248224 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI248515, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI248517, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI248519, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI140, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI248222, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI248222, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI248222, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI140, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI248220, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI140, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI248222, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI248222, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI140, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI248274, name: "style", sons: null}]};
NTI248224.node = NNI248224;
var NNI248204 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI248365, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI248369, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI248373, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI248377, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI248381, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI248385, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI248389, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI248393, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI248397, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI248401, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI248405, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI248409, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI248413, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI248417, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI248421, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI248425, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI248429, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI248433, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI248437, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI248441, name: "onunload", sons: null}]};
NTI248204.node = NNI248204;
NTI248204.base = NTI3608;
NTI248224.base = NTI248204;
NTI248222.base = NTI248224;
var NNI256028 = {kind: 2, offset: 0, typ: null, name: null, len: 118, sons: {"0": {kind: 1, offset: 0, typ: NTI256028, name: "#text", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI256028, name: "#int", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI256028, name: "#bool", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI256028, name: "#vthunk", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI256028, name: "#dthunk", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI256028, name: "#component", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI256028, name: "#verbatim", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI256028, name: "html", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI256028, name: "head", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI256028, name: "title", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI256028, name: "base", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI256028, name: "link", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI256028, name: "meta", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI256028, name: "style", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI256028, name: "script", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI256028, name: "noscript", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI256028, name: "body", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI256028, name: "section", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI256028, name: "nav", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI256028, name: "article", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI256028, name: "aside", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI256028, name: "h1", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI256028, name: "h2", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI256028, name: "h3", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI256028, name: "h4", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI256028, name: "h5", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI256028, name: "h6", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI256028, name: "header", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI256028, name: "footer", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI256028, name: "address", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI256028, name: "main", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI256028, name: "p", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI256028, name: "hr", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI256028, name: "pre", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI256028, name: "blockquote", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI256028, name: "ol", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI256028, name: "ul", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI256028, name: "li", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI256028, name: "dl", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI256028, name: "dt", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI256028, name: "dd", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI256028, name: "figure", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI256028, name: "figcaption", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI256028, name: "div", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI256028, name: "a", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI256028, name: "em", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI256028, name: "strong", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI256028, name: "small", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI256028, name: "s", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI256028, name: "cite", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI256028, name: "quote", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI256028, name: "dfn", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI256028, name: "abbr", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI256028, name: "data", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI256028, name: "time", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI256028, name: "code", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI256028, name: "var", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI256028, name: "samp", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI256028, name: "kdb", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI256028, name: "sub", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI256028, name: "sup", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI256028, name: "i", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI256028, name: "b", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI256028, name: "u", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI256028, name: "mark", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI256028, name: "ruby", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI256028, name: "rt", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI256028, name: "rp", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI256028, name: "bdi", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI256028, name: "dbo", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI256028, name: "span", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI256028, name: "br", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI256028, name: "wbr", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI256028, name: "ins", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI256028, name: "del", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI256028, name: "img", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI256028, name: "iframe", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI256028, name: "embed", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI256028, name: "object", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI256028, name: "param", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI256028, name: "video", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI256028, name: "audio", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI256028, name: "source", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI256028, name: "track", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI256028, name: "canvas", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI256028, name: "map", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI256028, name: "area", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI256028, name: "svg", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI256028, name: "math", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI256028, name: "table", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI256028, name: "caption", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI256028, name: "colgroup", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI256028, name: "col", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI256028, name: "tbody", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI256028, name: "thead", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI256028, name: "tfoot", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI256028, name: "tr", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI256028, name: "td", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI256028, name: "th", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI256028, name: "form", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI256028, name: "fieldset", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI256028, name: "legend", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI256028, name: "label", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI256028, name: "input", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI256028, name: "button", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI256028, name: "select", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI256028, name: "datalist", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI256028, name: "optgroup", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI256028, name: "option", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI256028, name: "textarea", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI256028, name: "keygen", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI256028, name: "output", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI256028, name: "progress", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI256028, name: "meter", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI256028, name: "details", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI256028, name: "summary", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI256028, name: "command", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI256028, name: "menu", len: 0, sons: null}}};
NTI256028.node = NNI256028;
NTI256720.base = NTI256705;
NTI256722.base = NTI140;
var NNI256148 = {kind: 2, offset: 0, typ: null, name: null, len: 31, sons: {"0": {kind: 1, offset: 0, typ: NTI256148, name: "onclick", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI256148, name: "oncontextmenu", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI256148, name: "ondblclick", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI256148, name: "onkeyup", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI256148, name: "onkeydown", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI256148, name: "onkeypressed", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI256148, name: "onfocus", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI256148, name: "onblur", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI256148, name: "onchange", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI256148, name: "onscroll", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI256148, name: "onmousedown", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI256148, name: "onmouseenter", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI256148, name: "onmouseleave", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI256148, name: "onmousemove", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI256148, name: "onmouseout", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI256148, name: "onmouseover", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI256148, name: "onmouseup", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI256148, name: "ondrag", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI256148, name: "ondragend", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI256148, name: "ondragenter", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI256148, name: "ondragleave", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI256148, name: "ondragover", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI256148, name: "ondragstart", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI256148, name: "ondrop", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI256148, name: "onsubmit", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI256148, name: "oninput", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI256148, name: "onanimationstart", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI256148, name: "onanimationend", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI256148, name: "onanimationiteration", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI256148, name: "onkeyupenter", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI256148, name: "onkeyuplater", len: 0, sons: null}}};
NTI256148.node = NNI256148;
var NNI256713 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI256148, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI256757, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI256761, name: "Field2", sons: null}]};
NTI256713.node = NNI256713;
NTI256701.base = NTI256713;
var NNI251297 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI251297.node = NNI251297;
NTI251298.base = NTI251297;
var NNI256714 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI256028, name: "kind", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI104, name: "index", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI140, name: "id", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI140, name: "class", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI140, name: "text", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI256720, name: "kids", sons: null}, 
{kind: 1, offset: "attrs", len: 0, typ: NTI256722, name: "attrs", sons: null}, 
{kind: 1, offset: "events", len: 0, typ: NTI256701, name: "events", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI251298, name: "style", sons: null}, 
{kind: 1, offset: "dom", len: 0, typ: NTI248222, name: "dom", sons: null}]};
NTI256714.node = NNI256714;
NTI256714.base = NTI3608;
NTI256705.base = NTI256714;
var NNI268209 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "k", len: 0, typ: NTI268207, name: "k", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI248222, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI248222, name: "current", sons: null}, 
{kind: 1, offset: "n", len: 0, typ: NTI256705, name: "n", sons: null}]};
NTI268209.node = NNI268209;
var NNI268211 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI256705, name: "parent", sons: null}, 
{kind: 1, offset: "newChild", len: 0, typ: NTI256705, name: "newChild", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI104, name: "pos", sons: null}]};
NTI268211.node = NNI268211;
NTI298037.base = NTI104;
NTI201016.base = NTI124;
NTI201018.base = NTI124;
var NNI298027 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "lat", len: 0, typ: NTI201016, name: "lat", sons: null}, 
{kind: 1, offset: "lng", len: 0, typ: NTI201018, name: "lng", sons: null}]};
NTI298027.node = NNI298027;
NTI298016.base = NTI298027;
NTI298039.base = NTI298016;
var NNI298031 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "linkId", len: 0, typ: NTI104, name: "linkId", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI138, name: "name", sons: null}, 
{kind: 1, offset: "cityId", len: 0, typ: NTI104, name: "cityId", sons: null}, 
{kind: 1, offset: "districtId", len: 0, typ: NTI104, name: "districtId", sons: null}, 
{kind: 1, offset: "postalCode", len: 0, typ: NTI138, name: "postalCode", sons: null}, 
{kind: 1, offset: "neighborLinks", len: 0, typ: NTI298037, name: "neighborLinks", sons: null}, 
{kind: 1, offset: "geometry", len: 0, typ: NTI298039, name: "geometry", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI130, name: "readOnly", sons: null}, 
{kind: 1, offset: "addedToMap", len: 0, typ: NTI130, name: "addedToMap", sons: null}, 
{kind: 1, offset: "addedToSector", len: 0, typ: NTI130, name: "addedToSector", sons: null}]};
NTI298031.node = NNI298031;
NTI298018.base = NTI298031;
var NNI298134 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI178230, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI298018, name: "Field2", sons: null}]};
NTI298134.node = NNI298134;
NTI298131.base = NTI298134;
var NNI298128 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI298131, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI104, name: "counter", sons: null}]};
NTI298128.node = NNI298128;
NTI298047.base = NTI298018;
NTI298061.base = NTI298018;
var NNI298075 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI178230, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI138, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI298061, name: "Field3", sons: null}]};
NTI298075.node = NNI298075;
NTI298072.base = NTI298075;
var NNI298069 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI298072, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI104, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI104, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI104, name: "last", sons: null}]};
NTI298069.node = NNI298069;
var NNI298052 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "postalCode", len: 0, typ: NTI138, name: "postalCode", sons: null}, 
{kind: 1, offset: "district", len: 0, typ: NTI138, name: "district", sons: null}, 
{kind: 1, offset: "folkDistrict", len: 0, typ: NTI138, name: "folkDistrict", sons: null}, 
{kind: 1, offset: "city", len: 0, typ: NTI138, name: "city", sons: null}, 
{kind: 1, offset: "pFix", len: 0, typ: NTI104, name: "pFix", sons: null}, 
{kind: 1, offset: "streets", len: 0, typ: NTI298069, name: "streets", sons: null}, 
{kind: 1, offset: "shownOnMap", len: 0, typ: NTI130, name: "shownOnMap", sons: null}, 
{kind: 1, offset: "exclude", len: 0, typ: NTI130, name: "exclude", sons: null}]};
NTI298052.node = NNI298052;
NTI298022.base = NTI298052;
var NNI298045 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI138, name: "name", sons: null}, 
{kind: 1, offset: "links", len: 0, typ: NTI298047, name: "links", sons: null}, 
{kind: 1, offset: "sector", len: 0, typ: NTI298022, name: "sector", sons: null}, 
{kind: 1, offset: "totalFamilies", len: 0, typ: NTI3604, name: "totalFamilies", sons: null}]};
NTI298045.node = NNI298045;
NTI298020.base = NTI298045;
var NNI298157 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI178230, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI138, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI298020, name: "Field3", sons: null}]};
NTI298157.node = NNI298157;
NTI298154.base = NTI298157;
var NNI298151 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI298154, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI104, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI104, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI104, name: "last", sons: null}]};
NTI298151.node = NNI298151;
var NNI187557 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI187557.node = NNI187557;
var NNI3738 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3738.node = NNI3738;
NTI3738.base = NTI3608;
NTI187557.base = NTI3738;
NTI187545.base = NTI187557;
var NNI298183 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI178230, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI138, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI187545, name: "Field2", sons: null}]};
NTI298183.node = NNI298183;
NTI298180.base = NTI298183;
var NNI298177 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI298180, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI104, name: "counter", sons: null}]};
NTI298177.node = NNI298177;
var NNI298206 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI178230, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI138, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI298022, name: "Field3", sons: null}]};
NTI298206.node = NNI298206;
NTI298203.base = NTI298206;
var NNI298200 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI298203, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI104, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI104, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI104, name: "last", sons: null}]};
NTI298200.node = NNI298200;
var NNI298232 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI178230, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI138, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI104, name: "Field2", sons: null}]};
NTI298232.node = NNI298232;
NTI298229.base = NTI298232;
var NNI298226 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI298229, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI104, name: "counter", sons: null}]};
NTI298226.node = NNI298226;
NTI162612.base = NTI162653;
NTI162608.base = NTI162645;
NTI162606.base = NTI162642;
NTI162604.base = NTI162639;
NTI162602.base = NTI162636;
var NNI162202 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI162202, name: "January", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI162202, name: "February", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI162202, name: "March", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI162202, name: "April", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI162202, name: "May", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI162202, name: "June", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI162202, name: "July", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI162202, name: "August", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI162202, name: "September", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI162202, name: "October", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI162202, name: "November", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI162202, name: "December", len: 0, sons: null}}};
NTI162202.node = NNI162202;
var NNI162204 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI162204, name: "Monday", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI162204, name: "Tuesday", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI162204, name: "Wednesday", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI162204, name: "Thursday", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI162204, name: "Friday", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI162204, name: "Saturday", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI162204, name: "Sunday", len: 0, sons: null}}};
NTI162204.node = NNI162204;
NTI162610.base = NTI162649;
var NNI162692 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "zonedTimeFromTimeImpl", len: 0, typ: NTI162693, name: "zonedTimeFromTimeImpl", sons: null}, 
{kind: 1, offset: "zonedTimeFromAdjTimeImpl", len: 0, typ: NTI162697, name: "zonedTimeFromAdjTimeImpl", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI138, name: "name", sons: null}]};
NTI162692.node = NNI162692;
NTI162626.base = NTI162692;
var NNI162616 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nanosecond", len: 0, typ: NTI162612, name: "nanosecond", sons: null}, 
{kind: 1, offset: "second", len: 0, typ: NTI162608, name: "second", sons: null}, 
{kind: 1, offset: "minute", len: 0, typ: NTI162606, name: "minute", sons: null}, 
{kind: 1, offset: "hour", len: 0, typ: NTI162604, name: "hour", sons: null}, 
{kind: 1, offset: "monthday", len: 0, typ: NTI162602, name: "monthday", sons: null}, 
{kind: 1, offset: "month", len: 0, typ: NTI162202, name: "month", sons: null}, 
{kind: 1, offset: "year", len: 0, typ: NTI104, name: "year", sons: null}, 
{kind: 1, offset: "weekday", len: 0, typ: NTI162204, name: "weekday", sons: null}, 
{kind: 1, offset: "yearday", len: 0, typ: NTI162610, name: "yearday", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI130, name: "isDst", sons: null}, 
{kind: 1, offset: "timezone", len: 0, typ: NTI162626, name: "timezone", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI104, name: "utcOffset", sons: null}]};
NTI162616.node = NNI162616;
NTI162616.base = NTI3608;
var NNI162614 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI112, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI162612, name: "nanosecond", sons: null}]};
NTI162614.node = NNI162614;
var NNI162618 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI112, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI162612, name: "nanosecond", sons: null}]};
NTI162618.node = NNI162618;
var NNI166483 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI162602, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI162202, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI104, name: "Field2", sons: null}]};
NTI166483.node = NNI166483;
var NNI166420 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI104, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI104, name: "Field2", sons: null}]};
NTI166420.node = NNI166420;
var NNI162628 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "time", len: 0, typ: NTI162614, name: "time", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI104, name: "utcOffset", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI130, name: "isDst", sons: null}]};
NTI162628.node = NNI162628;
var NNI3660 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3660.node = NNI3660;
NTI3660.base = NTI3628;
var NNI89247 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI86432, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI104, name: "b", sons: null}]};
NTI89247.node = NNI89247;
NTI257588.base = NTI140;
var NNI201036 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "lat", len: 0, typ: NTI201016, name: "lat", sons: null}, 
{kind: 1, offset: "lng", len: 0, typ: NTI201018, name: "lng", sons: null}]};
NTI201036.node = NNI201036;
NTI201036.base = NTI177055;
var NNI360825 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI138, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI138, name: "b", sons: null}]};
NTI360825.node = NNI360825;
var NNI286123 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "jsonattributes", len: 0, typ: NTI104, name: "jsonattributes", sons: null}, 
{kind: 1, offset: "mode", len: 0, typ: NTI140, name: "mode", sons: null}, 
{kind: 1, offset: "prox", len: 0, typ: NTI140, name: "prox", sons: null}, 
{kind: 1, offset: "maxResults", len: 0, typ: NTI104, name: "maxResults", sons: null}, 
{kind: 1, offset: "additionaldata", len: 0, typ: NTI140, name: "additionaldata", sons: null}, 
{kind: 1, offset: "locationattributes", len: 0, typ: NTI140, name: "locationattributes", sons: null}]};
NTI286123.node = NNI286123;
var NNI286121 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI286121.node = NNI286121;
NTI286121.base = NTI177055;
NTI286123.base = NTI286121;
NTI386178.base = NTI298016;
NTI387480.base = NTI104;
NTI387702.base = NTI104;
NTI387707.base = NTI104;
NTI387716.base = NTI104;
var NNI202089 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onAttach", len: 0, typ: NTI202090, name: "onAttach", sons: null}, 
{kind: 1, offset: "onDetach", len: 0, typ: NTI202096, name: "onDetach", sons: null}]};
NTI202089.node = NNI202089;
NTI202089.base = NTI177055;
var NNI202076 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "strokeColor", len: 0, typ: NTI140, name: "strokeColor", sons: null}, 
{kind: 1, offset: "fillColor", len: 0, typ: NTI140, name: "fillColor", sons: null}, 
{kind: 1, offset: "lineWidth", len: 0, typ: NTI104, name: "lineWidth", sons: null}]};
NTI202076.node = NNI202076;
var NNI202056 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI202056.node = NNI202056;
var NNI200100 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI200100.node = NNI200100;
NTI196561.base = NTI196229;
NTI196563.base = NTI196229;
NTI196565.base = NTI196229;
var NNI196227 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI196227, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI196227, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI196227, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI196227, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI196227, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI196227, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI196227, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI196227, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI196227, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI196227, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI196227, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI196227, name: "NotationNode", len: 0, sons: null}}};
NTI196227.node = NNI196227;
var NNI196283 = {kind: 2, len: 92, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI140, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI140, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI140, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI140, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI140, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI140, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI140, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI140, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI140, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI140, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI140, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI140, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI140, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI140, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI140, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI140, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI140, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI140, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI140, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI140, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI140, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI140, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI140, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI140, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI140, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI140, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI140, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI140, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI140, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI140, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI140, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI140, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI140, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI140, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI140, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI140, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI140, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI140, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI140, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI140, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI140, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI140, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI140, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI140, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI140, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI140, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI140, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI140, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI140, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI140, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI140, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI140, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI140, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI140, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI140, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI140, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI140, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI140, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI140, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI140, name: "minWidth", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI140, name: "opacity", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI140, name: "overflow", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI140, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI140, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI140, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI140, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI140, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI140, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI140, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI140, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI140, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI140, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI140, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI140, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI140, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI140, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI140, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI140, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI140, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI140, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI140, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI140, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI140, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI140, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI140, name: "textTransform", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI140, name: "transform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI140, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI140, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI140, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI140, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI140, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI104, name: "zIndex", sons: null}]};
NTI196283.node = NNI196283;
NTI196283.base = NTI3608;
NTI196281.base = NTI196283;
var NNI196231 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI196561, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI196563, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI196565, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI140, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI196229, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI196229, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI196229, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI140, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI196227, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI140, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI196229, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI196229, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI140, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI196281, name: "style", sons: null}]};
NTI196231.node = NNI196231;
var NNI196205 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI196372, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI196376, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI196380, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI196384, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI196388, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI196392, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI196396, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI196400, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI196404, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI196408, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI196412, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI196416, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI196420, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI196424, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI196428, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI196432, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI196436, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI196440, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI196444, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI196448, name: "onunload", sons: null}]};
NTI196205.node = NNI196205;
NTI196205.base = NTI3608;
NTI196231.base = NTI196205;
NTI196229.base = NTI196231;
var NNI196289 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "bubbles", len: 0, typ: NTI130, name: "bubbles", sons: null}, 
{kind: 1, offset: "cancelBubble", len: 0, typ: NTI130, name: "cancelBubble", sons: null}, 
{kind: 1, offset: "cancelable", len: 0, typ: NTI130, name: "cancelable", sons: null}, 
{kind: 1, offset: "composed", len: 0, typ: NTI130, name: "composed", sons: null}, 
{kind: 1, offset: "currentTarget", len: 0, typ: NTI196229, name: "currentTarget", sons: null}, 
{kind: 1, offset: "defaultPrevented", len: 0, typ: NTI130, name: "defaultPrevented", sons: null}, 
{kind: 1, offset: "eventPhase", len: 0, typ: NTI104, name: "eventPhase", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI196229, name: "target", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI140, name: "type", sons: null}, 
{kind: 1, offset: "isTrusted", len: 0, typ: NTI130, name: "isTrusted", sons: null}]};
NTI196289.node = NNI196289;
NTI196289.base = NTI3608;
NTI200100.base = NTI196289;
NTI202056.base = NTI200100;
NTI202076.base = NTI202056;
NTI202048.base = NTI202076;
var NNI202081 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "style", len: 0, typ: NTI202048, name: "style", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI104, name: "zIndex", sons: null}]};
NTI202081.node = NNI202081;
NTI202081.base = NTI177055;
var NNI171784 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI171776, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3604, name: "Field1", sons: null}]};
NTI171784.node = NNI171784;
var NNI204020 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}]};
NTI204020.node = NNI204020;
var NNI405928 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI104, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI104, name: "Field2", sons: null}]};
NTI405928.node = NNI405928;
var NNI405889 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}]};
NTI405889.node = NNI405889;
var NNI204066 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI104, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI204066.node = NNI204066;
var NNI201040 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI201040.node = NNI201040;
NTI201040.base = NTI177055;
NTI201024.base = NTI201040;
NTI201143.base = NTI201024;
var NNI286131 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "searchtext", len: 0, typ: NTI140, name: "searchtext", sons: null}, 
{kind: 1, offset: "country", len: 0, typ: NTI140, name: "country", sons: null}, 
{kind: 1, offset: "state", len: 0, typ: NTI140, name: "state", sons: null}, 
{kind: 1, offset: "additionaldata", len: 0, typ: NTI140, name: "additionaldata", sons: null}]};
NTI286131.node = NNI286131;
NTI286131.base = NTI286121;
var NNI202085 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "style", len: 0, typ: NTI202048, name: "style", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI104, name: "zIndex", sons: null}]};
NTI202085.node = NNI202085;
NTI202085.base = NTI177055;
var NNI3686 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3686.node = NNI3686;
NTI3686.base = NTI3628;
var NNI175227 = {kind: 1, offset: "useStderr", len: 0, typ: NTI130, name: "useStderr", sons: null};
NTI175227.node = NNI175227;
var NNI175202 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI175202, name: "lvlAll", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI175202, name: "lvlDebug", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI175202, name: "lvlInfo", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI175202, name: "lvlNotice", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI175202, name: "lvlWarn", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI175202, name: "lvlError", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI175202, name: "lvlFatal", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI175202, name: "lvlNone", len: 0, sons: null}}};
NTI175202.node = NNI175202;
var NNI175223 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "levelThreshold", len: 0, typ: NTI175202, name: "levelThreshold", sons: null}, 
{kind: 1, offset: "fmtStr", len: 0, typ: NTI138, name: "fmtStr", sons: null}]};
NTI175223.node = NNI175223;
NTI175223.base = NTI3608;
NTI175227.base = NTI175223;

function makeNimstrLit(c_23269) {
		  var ln = c_23269.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_23269.charCodeAt(i);
  }
  return result;
  

	
}

function cstrToNimstr(c_23286) {
		  var ln = c_23286.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_23286.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_23286.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_24827, src_24828, ti_24829) {
	var result_25019 = null;

		switch (ti_24829.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_24801(ti_24829))) {
			result_25019 = src_24828;
			}
			else {
				result_25019 = [src_24828[0], src_24828[1]];
			}
			
			break;
		case 19:
			      if (dest_24827 === null || dest_24827 === undefined) {
        dest_24827 = {};
      }
      else {
        for (var key in dest_24827) { delete dest_24827[key]; }
      }
      for (var key in src_24828) { dest_24827[key] = src_24828[key]; }
      result_25019 = dest_24827;
    
			break;
		case 18:
		case 17:
			if (!((ti_24829.base == null))) {
			result_25019 = nimCopy(dest_24827, src_24828, ti_24829.base);
			}
			else {
			if ((ti_24829.kind == 17)) {
			result_25019 = (dest_24827 === null || dest_24827 === undefined) ? {m_type: ti_24829} : dest_24827;
			}
			else {
				result_25019 = (dest_24827 === null || dest_24827 === undefined) ? {} : dest_24827;
			}
			}
			nimCopyAux(result_25019, src_24828, ti_24829.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_24828 === null) {
        result_25019 = null;
      }
      else {
        if (dest_24827 === null || dest_24827 === undefined) {
          dest_24827 = new Array(src_24828.length);
        }
        else {
          dest_24827.length = src_24828.length;
        }
        result_25019 = dest_24827;
        for (var i = 0; i < src_24828.length; ++i) {
          result_25019[i] = nimCopy(result_25019[i], src_24828[i], ti_24829.base);
        }
      }
    
			break;
		case 28:
			      if (src_24828 !== null) {
        result_25019 = src_24828.slice(0);
      }
    
			break;
		default: 
			result_25019 = src_24828;
			break;
		}

	return result_25019;

}

function toJSStr(s_23303) {
										var Tmp5;
						var Tmp7;

	var result_23304 = null;

		var res_23362 = new_seq_23335((s_23303 != null ? s_23303.length : 0));
		var i_23364 = 0;
		var j_23366 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_23364 < (s_23303 != null ? s_23303.length : 0))) break L2;
					var c_23367 = s_23303[i_23364];
					if ((c_23367 < 128)) {
					res_23362[j_23366] = String.fromCharCode(c_23367);
					i_23364 += 1;
					}
					else {
						var helper_23390 = new_seq_23335(0);
						L3: do {
								L4: while (true) {
								if (!true) break L4;
									var code_23391 = c_23367.toString(16);
									if (((code_23391 != null ? code_23391.length : 0) == 1)) {
									if (helper_23390 != null) { helper_23390.push("%0"); } else { helper_23390 = ["%0"]; };
									}
									else {
									if (helper_23390 != null) { helper_23390.push("%"); } else { helper_23390 = ["%"]; };
									}
									
									if (helper_23390 != null) { helper_23390.push(code_23391); } else { helper_23390 = [code_23391]; };
									i_23364 += 1;
										if (((s_23303 != null ? s_23303.length : 0) <= i_23364)) Tmp5 = true; else {											Tmp5 = (s_23303[i_23364] < 128);										}									if (Tmp5) {
									break L3;
									}
									
									c_23367 = s_23303[i_23364];
								}
						} while(false);
++excHandler;
						Tmp7 = framePtr;
						try {
						res_23362[j_23366] = decodeURIComponent(helper_23390.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
						framePtr = Tmp7;
						res_23362[j_23366] = helper_23390.join("");
						lastJSError = prevJSError;
						} finally {
						framePtr = Tmp7;
						}
					}
					
					j_23366 += 1;
				}
		} while(false);
		if (res_23362 === null) res_23362 = [];
               if (res_23362.length < j_23366) { for (var i=res_23362.length;i<j_23366;++i) res_23362.push(null); }
               else { res_23362.length = j_23366; };
		result_23304 = res_23362.join("");

	return result_23304;

}

function raiseException(e_21618, ename_21619) {
		e_21618.name = ename_21619;
		if ((excHandler == 0)) {
		unhandledException(e_21618);
		}
		
		throw e_21618;

	
}

function chckIndx(i_25105, a_25106, b_25107) {
			var Tmp1;

	var result_25108 = 0;

	BeforeRet: do {
			if (!(a_25106 <= i_25105)) Tmp1 = false; else {				Tmp1 = (i_25105 <= b_25107);			}		if (Tmp1) {
		result_25108 = i_25105;
		break BeforeRet;
		}
		else {
		raiseIndexError(i_25105, a_25106, b_25107);
		}
		
	} while (false);

	return result_25108;

}

function subInt(a_23821, b_23822) {
		    var result = a_23821 - b_23822;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function addInt(a_23803, b_23804) {
		    var result = a_23803 + b_23804;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function chckRange(i_25124, a_25125, b_25126) {
			var Tmp1;

	var result_25127 = 0;

	BeforeRet: do {
			if (!(a_25125 <= i_25124)) Tmp1 = false; else {				Tmp1 = (i_25124 <= b_25126);			}		if (Tmp1) {
		result_25127 = i_25124;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_25127;

}

function nimMax(a_24221, b_24222) {
		var Tmp1;

	var result_24223 = 0;

	BeforeRet: do {
		if ((b_24222 <= a_24221)) {
		Tmp1 = a_24221;
		}
		else {
		Tmp1 = b_24222;
		}
		
		result_24223 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_24223;

}

function nimMin(a_24203, b_24204) {
		var Tmp1;

	var result_24205 = 0;

	BeforeRet: do {
		if ((a_24203 <= b_24204)) {
		Tmp1 = a_24203;
		}
		else {
		Tmp1 = b_24204;
		}
		
		result_24205 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_24205;

}

function mnewString(len_23462) {
		    return new Array(len_23462);
  

	
}
var ConstSet2 = setConstr(13, 10);

function divInt(a_23857, b_23858) {
		    if (b_23858 == 0) raiseDivByZero();
    if (b_23858 == -1 && a_23857 == 2147483647) raiseOverflow();
    return Math.trunc(a_23857 / b_23858);
  

	
}

function mulInt(a_23839, b_23840) {
		    var result = a_23839 * b_23840;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function modInt(a_23875, b_23876) {
		    if (b_23876 == 0) raiseDivByZero();
    if (b_23876 == -1 && a_23875 == 2147483647) raiseOverflow();
    return Math.trunc(a_23875 % b_23876);
  

	
}

function eqStrings(a_23640, b_23641) {
		    if (a_23640 == b_23641) return true;
    if (a_23640 === null && b_23641.length == 0) return true;
    if (b_23641 === null && a_23640.length == 0) return true;
    if ((!a_23640) || (!b_23641)) return false;
    var alen = a_23640.length;
    if (alen != b_23641.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_23640[i] != b_23641[i]) return false;
    return true;
  

	
}
				var to_lower_ranges_62892 = [65, 90, 532, 192, 214, 532, 216, 222, 532, 393, 394, 705, 433, 434, 717, 904, 906, 537, 910, 911, 563, 913, 929, 532, 931, 939, 532, 1021, 1023, 370, 1024, 1039, 580, 1040, 1071, 532, 1329, 1366, 548, 4256, 4293, 7764, 5024, 5103, 39364, 5104, 5109, 508, 7312, 7354, -2508, 7357, 7359, -2508, 7944, 7951, 492, 7960, 7965, 492, 7976, 7983, 492, 7992, 7999, 492, 8008, 8013, 492, 8040, 8047, 492, 8072, 8079, 492, 8088, 8095, 492, 8104, 8111, 492, 8120, 8121, 492, 8122, 8123, 426, 8136, 8139, 414, 8152, 8153, 492, 8154, 8155, 400, 8168, 8169, 492, 8170, 8171, 388, 8184, 8185, 372, 8186, 8187, 374, 11264, 11310, 548, 11390, 11391, -10315, 65313, 65338, 532, 66560, 66599, 540, 66736, 66771, 540, 68736, 68786, 564, 71840, 71871, 532, 93760, 93791, 532, 125184, 125217, 534];
				var to_lower_singlets_64162 = [256, 501, 258, 501, 260, 501, 262, 501, 264, 501, 266, 501, 268, 501, 270, 501, 272, 501, 274, 501, 276, 501, 278, 501, 280, 501, 282, 501, 284, 501, 286, 501, 288, 501, 290, 501, 292, 501, 294, 501, 296, 501, 298, 501, 300, 501, 302, 501, 304, 301, 306, 501, 308, 501, 310, 501, 313, 501, 315, 501, 317, 501, 319, 501, 321, 501, 323, 501, 325, 501, 327, 501, 330, 501, 332, 501, 334, 501, 336, 501, 338, 501, 340, 501, 342, 501, 344, 501, 346, 501, 348, 501, 350, 501, 352, 501, 354, 501, 356, 501, 358, 501, 360, 501, 362, 501, 364, 501, 366, 501, 368, 501, 370, 501, 372, 501, 374, 501, 376, 379, 377, 501, 379, 501, 381, 501, 385, 710, 386, 501, 388, 501, 390, 706, 391, 501, 395, 501, 398, 579, 399, 702, 400, 703, 401, 501, 403, 705, 404, 707, 406, 711, 407, 709, 408, 501, 412, 711, 413, 713, 415, 714, 416, 501, 418, 501, 420, 501, 422, 718, 423, 501, 425, 718, 428, 501, 430, 718, 431, 501, 435, 501, 437, 501, 439, 719, 440, 501, 444, 501, 452, 502, 453, 501, 455, 502, 456, 501, 458, 502, 459, 501, 461, 501, 463, 501, 465, 501, 467, 501, 469, 501, 471, 501, 473, 501, 475, 501, 478, 501, 480, 501, 482, 501, 484, 501, 486, 501, 488, 501, 490, 501, 492, 501, 494, 501, 497, 502, 498, 501, 500, 501, 502, 403, 503, 444, 504, 501, 506, 501, 508, 501, 510, 501, 512, 501, 514, 501, 516, 501, 518, 501, 520, 501, 522, 501, 524, 501, 526, 501, 528, 501, 530, 501, 532, 501, 534, 501, 536, 501, 538, 501, 540, 501, 542, 501, 544, 370, 546, 501, 548, 501, 550, 501, 552, 501, 554, 501, 556, 501, 558, 501, 560, 501, 562, 501, 570, 11295, 571, 501, 573, 337, 574, 11292, 577, 501, 579, 305, 580, 569, 581, 571, 582, 501, 584, 501, 586, 501, 588, 501, 590, 501, 880, 501, 882, 501, 886, 501, 895, 616, 902, 538, 908, 564, 975, 508, 984, 501, 986, 501, 988, 501, 990, 501, 992, 501, 994, 501, 996, 501, 998, 501, 1000, 501, 1002, 501, 1004, 501, 1006, 501, 1012, 440, 1015, 501, 1017, 493, 1018, 501, 1120, 501, 1122, 501, 1124, 501, 1126, 501, 1128, 501, 1130, 501, 1132, 501, 1134, 501, 1136, 501, 1138, 501, 1140, 501, 1142, 501, 1144, 501, 1146, 501, 1148, 501, 1150, 501, 1152, 501, 1162, 501, 1164, 501, 1166, 501, 1168, 501, 1170, 501, 1172, 501, 1174, 501, 1176, 501, 1178, 501, 1180, 501, 1182, 501, 1184, 501, 1186, 501, 1188, 501, 1190, 501, 1192, 501, 1194, 501, 1196, 501, 1198, 501, 1200, 501, 1202, 501, 1204, 501, 1206, 501, 1208, 501, 1210, 501, 1212, 501, 1214, 501, 1216, 515, 1217, 501, 1219, 501, 1221, 501, 1223, 501, 1225, 501, 1227, 501, 1229, 501, 1232, 501, 1234, 501, 1236, 501, 1238, 501, 1240, 501, 1242, 501, 1244, 501, 1246, 501, 1248, 501, 1250, 501, 1252, 501, 1254, 501, 1256, 501, 1258, 501, 1260, 501, 1262, 501, 1264, 501, 1266, 501, 1268, 501, 1270, 501, 1272, 501, 1274, 501, 1276, 501, 1278, 501, 1280, 501, 1282, 501, 1284, 501, 1286, 501, 1288, 501, 1290, 501, 1292, 501, 1294, 501, 1296, 501, 1298, 501, 1300, 501, 1302, 501, 1304, 501, 1306, 501, 1308, 501, 1310, 501, 1312, 501, 1314, 501, 1316, 501, 1318, 501, 1320, 501, 1322, 501, 1324, 501, 1326, 501, 4295, 7764, 4301, 7764, 7680, 501, 7682, 501, 7684, 501, 7686, 501, 7688, 501, 7690, 501, 7692, 501, 7694, 501, 7696, 501, 7698, 501, 7700, 501, 7702, 501, 7704, 501, 7706, 501, 7708, 501, 7710, 501, 7712, 501, 7714, 501, 7716, 501, 7718, 501, 7720, 501, 7722, 501, 7724, 501, 7726, 501, 7728, 501, 7730, 501, 7732, 501, 7734, 501, 7736, 501, 7738, 501, 7740, 501, 7742, 501, 7744, 501, 7746, 501, 7748, 501, 7750, 501, 7752, 501, 7754, 501, 7756, 501, 7758, 501, 7760, 501, 7762, 501, 7764, 501, 7766, 501, 7768, 501, 7770, 501, 7772, 501, 7774, 501, 7776, 501, 7778, 501, 7780, 501, 7782, 501, 7784, 501, 7786, 501, 7788, 501, 7790, 501, 7792, 501, 7794, 501, 7796, 501, 7798, 501, 7800, 501, 7802, 501, 7804, 501, 7806, 501, 7808, 501, 7810, 501, 7812, 501, 7814, 501, 7816, 501, 7818, 501, 7820, 501, 7822, 501, 7824, 501, 7826, 501, 7828, 501, 7838, -7115, 7840, 501, 7842, 501, 7844, 501, 7846, 501, 7848, 501, 7850, 501, 7852, 501, 7854, 501, 7856, 501, 7858, 501, 7860, 501, 7862, 501, 7864, 501, 7866, 501, 7868, 501, 7870, 501, 7872, 501, 7874, 501, 7876, 501, 7878, 501, 7880, 501, 7882, 501, 7884, 501, 7886, 501, 7888, 501, 7890, 501, 7892, 501, 7894, 501, 7896, 501, 7898, 501, 7900, 501, 7902, 501, 7904, 501, 7906, 501, 7908, 501, 7910, 501, 7912, 501, 7914, 501, 7916, 501, 7918, 501, 7920, 501, 7922, 501, 7924, 501, 7926, 501, 7928, 501, 7930, 501, 7932, 501, 7934, 501, 8025, 492, 8027, 492, 8029, 492, 8031, 492, 8124, 491, 8140, 491, 8172, 493, 8188, 491, 8486, -7017, 8490, -7883, 8491, -7762, 8498, 528, 8579, 501, 11360, 501, 11362, -10243, 11363, -3314, 11364, -10227, 11367, 501, 11369, 501, 11371, 501, 11373, -10280, 11374, -10249, 11375, -10283, 11376, -10282, 11378, 501, 11381, 501, 11392, 501, 11394, 501, 11396, 501, 11398, 501, 11400, 501, 11402, 501, 11404, 501, 11406, 501, 11408, 501, 11410, 501, 11412, 501, 11414, 501, 11416, 501, 11418, 501, 11420, 501, 11422, 501, 11424, 501, 11426, 501, 11428, 501, 11430, 501, 11432, 501, 11434, 501, 11436, 501, 11438, 501, 11440, 501, 11442, 501, 11444, 501, 11446, 501, 11448, 501, 11450, 501, 11452, 501, 11454, 501, 11456, 501, 11458, 501, 11460, 501, 11462, 501, 11464, 501, 11466, 501, 11468, 501, 11470, 501, 11472, 501, 11474, 501, 11476, 501, 11478, 501, 11480, 501, 11482, 501, 11484, 501, 11486, 501, 11488, 501, 11490, 501, 11499, 501, 11501, 501, 11506, 501, 42560, 501, 42562, 501, 42564, 501, 42566, 501, 42568, 501, 42570, 501, 42572, 501, 42574, 501, 42576, 501, 42578, 501, 42580, 501, 42582, 501, 42584, 501, 42586, 501, 42588, 501, 42590, 501, 42592, 501, 42594, 501, 42596, 501, 42598, 501, 42600, 501, 42602, 501, 42604, 501, 42624, 501, 42626, 501, 42628, 501, 42630, 501, 42632, 501, 42634, 501, 42636, 501, 42638, 501, 42640, 501, 42642, 501, 42644, 501, 42646, 501, 42648, 501, 42650, 501, 42786, 501, 42788, 501, 42790, 501, 42792, 501, 42794, 501, 42796, 501, 42798, 501, 42802, 501, 42804, 501, 42806, 501, 42808, 501, 42810, 501, 42812, 501, 42814, 501, 42816, 501, 42818, 501, 42820, 501, 42822, 501, 42824, 501, 42826, 501, 42828, 501, 42830, 501, 42832, 501, 42834, 501, 42836, 501, 42838, 501, 42840, 501, 42842, 501, 42844, 501, 42846, 501, 42848, 501, 42850, 501, 42852, 501, 42854, 501, 42856, 501, 42858, 501, 42860, 501, 42862, 501, 42873, 501, 42875, 501, 42877, -34832, 42878, 501, 42880, 501, 42882, 501, 42884, 501, 42886, 501, 42891, 501, 42893, -41780, 42896, 501, 42898, 501, 42902, 501, 42904, 501, 42906, 501, 42908, 501, 42910, 501, 42912, 501, 42914, 501, 42916, 501, 42918, 501, 42920, 501, 42922, -41808, 42923, -41819, 42924, -41815, 42925, -41805, 42926, -41808, 42928, -41758, 42929, -41782, 42930, -41761, 42931, 1428, 42932, 501, 42934, 501, 42936, 501, 42938, 501, 42940, 501, 42942, 501, 42946, 501, 42948, 452, 42949, -41807, 42950, -34884];
			var to_tag_256689 = ["#text", "#int", "#bool", "#vthunk", "#dthunk", "#component", "#verbatim", "HTML", "HEAD", "TITLE", "BASE", "LINK", "META", "STYLE", "SCRIPT", "NOSCRIPT", "BODY", "SECTION", "NAV", "ARTICLE", "ASIDE", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "FOOTER", "ADDRESS", "MAIN", "P", "HR", "PRE", "BLOCKQUOTE", "OL", "UL", "LI", "DL", "DT", "DD", "FIGURE", "FIGCAPTION", "DIV", "A", "EM", "STRONG", "SMALL", "S", "CITE", "QUOTE", "DFN", "ABBR", "DATA", "TIME", "CODE", "VAR", "SAMP", "KDB", "SUB", "SUP", "I", "B", "U", "MARK", "RUBY", "RT", "RP", "BDI", "DBO", "SPAN", "BR", "WBR", "INS", "DEL", "IMG", "IFRAME", "EMBED", "OBJECT", "PARAM", "VIDEO", "AUDIO", "SOURCE", "TRACK", "CANVAS", "MAP", "AREA", "SVG", "MATH", "TABLE", "CAPTION", "COLGROUP", "COL", "TBODY", "THEAD", "TFOOT", "TR", "TD", "TH", "FORM", "FIELDSET", "LEGEND", "LABEL", "INPUT", "BUTTON", "SELECT", "DATALIST", "OPTGROUP", "OPTION", "TEXTAREA", "KEYGEN", "OUTPUT", "PROGRESS", "METER", "DETAILS", "SUMMARY", "COMMAND", "MENU"];
			var to_event_name_256695 = ["click", "contextmenu", "dblclick", "keyup", "keydown", "keypressed", "focus", "blur", "change", "scroll", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseout", "mouseover", "mouseup", "drag", "dragend", "dragenter", "dragleave", "dragover", "dragstart", "drop", "submit", "input", "animationstart", "animationend", "animationiteration", "keyupenter", "keyuplater"];

function rawEcho() {
		      var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

	
}

function addChar(x_25310, c_25311) {
		x_25310.push(c_25311);

	
}

function absInt(a_24019) {
		var Tmp1;

	var result_24020 = 0;

		if ((a_24019 < 0)) {
		Tmp1 = (a_24019 * -1);
		}
		else {
		Tmp1 = a_24019;
		}
		
		result_24020 = Tmp1;

	return result_24020;

}
		var unit_weights_162777 = [1, 1000, 1000000, 1000000000, 60000000000, 3600000000000, 86400000000000, 604800000000000];

function negInt(a_23983) {
	var result_23984 = 0;

		result_23984 = (a_23983 * -1);

	return result_23984;

}
		var days_until_month_leap_166587 = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];
			var days_until_month_166571 = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];
var ConstSet3 = setConstr(5);

function raiseFieldError(f_23054) {
		var e_23057 = null;
		e_23057 = {m_type: NTI3660, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_23057.message = nimCopy(null, f_23054, NTI138);
		e_23057.parent = null;
		raiseException(e_23057, "FieldError");

	
}
var ConstSet4 = setConstr(6);
var ConstSet5 = setConstr(60, 62, 94);
var ConstSet6 = setConstr(60, 62, 94);
var ConstSet7 = setConstr(45, 43, 32);
var ConstSet8 = setConstr([48, 57]);
var ConstSet9 = setConstr([48, 57]);
var ConstSet10 = setConstr([48, 57]);
var ConstSet11 = setConstr([65, 90], [97, 122]);
var ConstSet12 = setConstr(46, 44);

function nimCharToStr(x_21062) {
	var result_21063 = null;

		result_21063 = nimCopy(null, mnewString(1), NTI138);
		result_21063[0] = x_21062;

	return result_21063;

}
var ConstSet13 = setConstr([65, 90]);
var ConstSet14 = setConstr([97, 122]);

function nimBoolToStr(x_21045) {
	var result_21046 = null;

		if (x_21045) {
		result_21046 = nimCopy(null, makeNimstrLit("true"), NTI138);
		}
		else {
			result_21046 = nimCopy(null, makeNimstrLit("false"), NTI138);
		}
		

	return result_21046;

}

function cmpStrings(a_23604, b_23605) {
		    if (a_23604 == b_23605) return 0;
    if (!a_23604) return -1;
    if (!b_23605) return 1;
    for (var i = 0; i < a_23604.length && i < b_23605.length; i++) {
      var result = a_23604[i] - b_23605[i];
      if (result != 0) return result;
    }
    return a_23604.length - b_23605.length;
  

	
}
var ConstSet15 = setConstr([48, 57]);
var ConstSet16 = setConstr([48, 57]);
var ConstSet17 = setConstr(13, 10);

function isObj(obj_25269, subclass_25270) {
	var result_25271 = false;

	BeforeRet: do {
		var x_25272 = obj_25269;
		if ((x_25272 == subclass_25270)) {
		result_25271 = true;
		break BeforeRet;
		}
		
		L1: do {
				L2: while (true) {
				if (!!((x_25272 == subclass_25270))) break L2;
					if ((x_25272 == null)) {
					result_25271 = false;
					break BeforeRet;
					}
					
					x_25272 = x_25272.base;
				}
		} while(false);
		result_25271 = true;
		break BeforeRet;
	} while (false);

	return result_25271;

}
var ConstSet18 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet19 = setConstr([65, 90]);
							var level_names_175216 = [makeNimstrLit("DEBUG"), makeNimstrLit("DEBUG"), makeNimstrLit("INFO"), makeNimstrLit("NOTICE"), makeNimstrLit("WARN"), makeNimstrLit("ERROR"), makeNimstrLit("FATAL"), makeNimstrLit("NONE")];
var nim_program_result = 0;
var global_raise_hook_18618 = [null];
var local_raise_hook_18623 = [null];
var out_of_mem_hook_18626 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var utc_instance_168031 = [null];
var local_instance_168032 = [null];
var level_175401 = [0];
var handlers_175403 = [null];
var object_id_178437 = [0];
var gid_257495 = [0];
var vcomponents_261239 = [{}];
var kxi_268324 = [null];

function is_fat_pointer_24801(ti_24803) {
	var result_24804 = false;

	BeforeRet: do {
		result_24804 = !((ConstSet1[ti_24803.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_24804;

}

function nimCopyAux(dest_24832, src_24833, n_24835) {
		switch (n_24835.kind) {
		case 0:
			break;
		case 1:
			      dest_24832[n_24835.offset] = nimCopy(dest_24832[n_24835.offset], src_24833[n_24835.offset], n_24835.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_24835.sons.length; i++) {
      nimCopyAux(dest_24832, src_24833, n_24835.sons[i]);
    }
    
			break;
		case 3:
			      dest_24832[n_24835.offset] = nimCopy(dest_24832[n_24835.offset], src_24833[n_24835.offset], n_24835.typ);
      for (var i = 0; i < n_24835.sons.length; ++i) {
        nimCopyAux(dest_24832, src_24833, n_24835.sons[i][1]);
      }
    
			break;
		}

	
}

function add_18638(x_18641, x_18641_Idx, y_18642) {
		      if (x_18641[x_18641_Idx] === null) { x_18641[x_18641_Idx] = []; }
      var off = x_18641[x_18641_Idx].length;
      x_18641[x_18641_Idx].length += y_18642.length;
      for (var i = 0; i < y_18642.length; ++i) {
        x_18641[x_18641_Idx][off+i] = y_18642.charCodeAt(i);
      }
    

	
}

function new_seq_23335(len_23338) {
	var result_23340 = null;

		result_23340 = new Array(len_23338); for (var i=0;i<len_23338;++i) {result_23340[i]=null;}
	return result_23340;

}

function unhandledException(e_21529) {
		var buf_21530 = [[]];
		if (!(((e_21529.message != null ? e_21529.message.length : 0) == 0))) {
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_21530[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(e_21529.message); } else { buf_21530[0] = e_21529.message.slice(); };
		}
		else {
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_21530[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit(" [")); } else { buf_21530[0] = makeNimstrLit(" ["); };
		add_18638(buf_21530, 0, e_21529.name);
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("]\x0A")); } else { buf_21530[0] = makeNimstrLit("]\x0A"); };
		var cbuf_21601 = toJSStr(buf_21530[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_21601);
  }
  else {
    throw cbuf_21601;
  }
  

	
}

function raiseIndexError(i_22654, a_22655, b_22656) {
		var Tmp1;

		var e_22802 = null;
		e_22802 = {m_type: NTI3658, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		if ((b_22656 < a_22655)) {
		Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
		}
		else {
		Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_22654)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_22655)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_22656)+"") || []);
		}
		
		e_22802.message = nimCopy(null, Tmp1, NTI138);
		e_22802.parent = null;
		raiseException(e_22802, "IndexError");

	
}

function to_float_10657(i_10659) {
	var result_10660 = 0.0;

		result_10660 = i_10659;

	return result_10660;

}

function HEX2F_26817(x_26819, y_26820) {
	var result_26821 = 0.0;

		result_26821 = (to_float_10657(x_26819) / to_float_10657(y_26820));

	return result_26821;

}

function raiseOverflow() {
		var e_22057 = null;
		e_22057 = {m_type: NTI3646, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_22057.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
		e_22057.parent = null;
		raiseException(e_22057, "OverflowError");

	
}

function isPointInPolygon(test_point_287070, polyg_points_287072) {
							var Tmp4;
							var Tmp5;
								var Tmp6;

	var result_287073 = false;

		result_287073 = false;
		var j_287079 = (polyg_points_287072 != null ? (polyg_points_287072.length-1) : -1);
		L1: do {
			var i_287114 = 0;
			var p_287115 = null;
			var i_287165 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_287165 < (polyg_points_287072 != null ? polyg_points_287072.length : 0))) break L3;
						i_287114 = i_287165;
						p_287115 = polyg_points_287072[chckIndx(i_287165, 0, polyg_points_287072.length+0-1)-0];
						var l_p_287116 = polyg_points_287072[chckIndx(j_287079, 0, polyg_points_287072.length+0-1)-0];
							if (!(p_287115.y < test_point_287070.y)) Tmp5 = false; else {								Tmp5 = (test_point_287070.y <= l_p_287116.y);							}							if (Tmp5) Tmp4 = true; else {								if (!(l_p_287116.y < test_point_287070.y)) Tmp6 = false; else {									Tmp6 = (test_point_287070.y <= p_287115.y);								}								Tmp4 = Tmp6;							}						if (Tmp4) {
						if (((p_287115.x + (HEX2F_26817(subInt(test_point_287070.y, p_287115.y), subInt(l_p_287116.y, p_287115.y)) * subInt(l_p_287116.x, p_287115.x))) < test_point_287070.x)) {
						result_287073 = !(result_287073);
						}
						
						}
						
						j_287079 = i_287114;
						i_287165 = addInt(i_287165, 1);
					}
			} while(false);
		} while(false);

	return result_287073;

}

function is_power_of_two_143062(x_143064) {
		var Tmp1;

	var result_143065 = false;

	BeforeRet: do {
		if (!(0 < x_143064)) Tmp1 = false; else {			Tmp1 = ((x_143064 & (x_143064 - 1)) == 0);		}		result_143065 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_143065;

}

function sys_fatal_15062(message_15066) {
		var e_15203 = null;
		e_15203 = {m_type: NTI3650, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_15203.message = nimCopy(null, message_15066, NTI138);
		raiseException(e_15203, "AssertionError");

	
}

function raise_assert_15058(msg_15060) {
		sys_fatal_15062(msg_15060);

	
}

function failed_assert_impl_15266(msg_15268) {
		raise_assert_15058(msg_15268);

	
}

function raiseRangeError() {
		var e_22456 = null;
		e_22456 = {m_type: NTI3662, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_22456.message = nimCopy(null, makeNimstrLit("value out of range"), NTI138);
		e_22456.parent = null;
		raiseException(e_22456, "RangeError");

	
}

function init_table_298368(initial_size_298372) {
	var result_298374 = {data: null, counter: 0};

		if (!(is_power_of_two_143062(initial_size_298372))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_298374.counter = 0;
		result_298374.data = new Array(chckRange(initial_size_298372, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_298372, 0, 2147483647);++i) {result_298374.data[i]={Field0: 0, Field1: 0, Field2: null};}
	return result_298374;

}

function init_ordered_table_298632(initial_size_298636) {
	var result_298638 = {data: null, counter: 0, first: 0, last: 0};

		if (!(is_power_of_two_143062(initial_size_298636))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_298638.counter = 0;
		result_298638.data = new Array(chckRange(initial_size_298636, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_298636, 0, 2147483647);++i) {result_298638.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		result_298638.first = -1;
		result_298638.last = -1;

	return result_298638;

}

function init_table_299032(initial_size_299036) {
	var result_299038 = {data: null, counter: 0};

		if (!(is_power_of_two_143062(initial_size_299036))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_299038.counter = 0;
		result_299038.data = new Array(chckRange(initial_size_299036, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_299036, 0, 2147483647);++i) {result_299038.data[i]={Field0: 0, Field1: null, Field2: null};}
	return result_299038;

}

function init_ordered_table_299432(initial_size_299436) {
	var result_299438 = {data: null, counter: 0, first: 0, last: 0};

		if (!(is_power_of_two_143062(initial_size_299436))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_299438.counter = 0;
		result_299438.data = new Array(chckRange(initial_size_299436, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_299436, 0, 2147483647);++i) {result_299438.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		result_299438.first = -1;
		result_299438.last = -1;

	return result_299438;

}

function init_table_299832(initial_size_299836) {
	var result_299838 = {data: null, counter: 0};

		if (!(is_power_of_two_143062(initial_size_299836))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_299838.counter = 0;
		result_299838.data = new Array(chckRange(initial_size_299836, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_299836, 0, 2147483647);++i) {result_299838.data[i]={Field0: 0, Field1: null, Field2: 0};}
	return result_299838;

}

function init_table_300235(initial_size_300239) {
	var result_300255 = {data: null, counter: 0};

		if (!(is_power_of_two_143062(initial_size_300239))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_300255.counter = 0;
		result_300255.data = new Array(chckRange(initial_size_300239, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_300239, 0, 2147483647);++i) {result_300255.data[i]={Field0: 0, Field1: null, Field2: null};}
	return result_300255;

}
var all_links_298629 = [init_table_298368(8)];
var all_streets_299029 = [init_ordered_table_298632(8)];
var cached_tiles_299429 = [init_table_299032(8)];
var all_sectors_299829 = [init_ordered_table_299432(8)];
var last_postfix_300229 = [init_table_299832(8)];
var mv_street_grp_300230 = [function(){return new H.map.Group()}()];
var ministry_area_300231 = [null];
var name_area_300232 = [makeNimstrLit("Hanau-Russisch")];
var sector_grp_300629 = [init_table_300235(8)];
var city_id_300630 = [0];
var district_id_300631 = [0];
var addr_distr_300632 = [null];
var addr_city_300633 = [null];
var clck_link_id_300634 = [0];
var postal_code_300635 = [null];
var sect_name_300636 = [null];
var border_distr_300638 = [null];
var map = null;

function init_table_300849(initial_size_300853) {
	var result_300855 = {data: null, counter: 0};

		if (!(is_power_of_two_143062(initial_size_300853))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_300855.counter = 0;
		result_300855.data = new Array(chckRange(initial_size_300853, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_300853, 0, 2147483647);++i) {result_300855.data[i]={Field0: 0, Field1: 0, Field2: 0};}
	return result_300855;

}

function substr_30222(s_30224, first_30225, last_30226) {
	var result_30227 = null;

		var first_30228 = nimMax(first_30225, 0);
		var l_30230 = nimMax(addInt(subInt(nimMin(last_30226, (s_30224 != null ? (s_30224.length-1) : -1)), first_30228), 1), 0);
		result_30227 = nimCopy(null, mnewString(chckRange(l_30230, 0, 2147483647)), NTI138);
		L1: do {
			var i_30239 = 0;
			var colontmp__256678 = 0;
			colontmp__256678 = subInt(l_30230, 1);
			var res_256679 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_256679 <= colontmp__256678)) break L3;
						i_30239 = res_256679;
						result_30227[chckIndx(i_30239, 0, result_30227.length+0-1)-0] = s_30224[chckIndx(addInt(i_30239, first_30228), 0, s_30224.length+0-1)-0];
						res_256679 = addInt(res_256679, 1);
					}
			} while(false);
		} while(false);

	return result_30227;

}

function nsuSplitCharSet(s_149298, seps_149300, maxsplit_149302) {
	var result_149304 = null;

		result_149304 = nimCopy(null, [], NTI149320);
		L1: do {
			var x_149305 = null;
			var last_311627 = 0;
			var splits_311628 = maxsplit_149302;
			L2: do {
					L3: while (true) {
					if (!(last_311627 <= (s_149298 != null ? s_149298.length : 0))) break L3;
						var first_311630 = last_311627;
						L4: do {
								L5: while (true) {
								if (!((last_311627 < (s_149298 != null ? s_149298.length : 0)) && !((seps_149300[s_149298[chckIndx(last_311627, 0, s_149298.length+0-1)-0]] != undefined)))) break L5;
									last_311627 = addInt(last_311627, 1);
								}
						} while(false);
						if ((splits_311628 == 0)) {
						last_311627 = (s_149298 != null ? s_149298.length : 0);
						}
						
						x_149305 = substr_30222(s_149298, first_311630, subInt(last_311627, 1));
						var Tmp6 = nimCopy(null, x_149305, NTI138);
						if (result_149304 != null) { result_149304.push(Tmp6); } else { result_149304 = [Tmp6]; };
						if ((splits_311628 == 0)) {
						break L2;
						}
						
						splits_311628 = subInt(splits_311628, 1);
						last_311627 = addInt(last_311627, 1);
					}
			} while(false);
		} while(false);

	return result_149304;

}

function substr_eq_148702(s_148704, pos_148705, substr_148706) {
	var result_148707 = false;

	BeforeRet: do {
		var i_148709 = 0;
		var length_148710 = (substr_148706 != null ? substr_148706.length : 0);
		L1: do {
				L2: while (true) {
				if (!(((i_148709 < length_148710) && (addInt(pos_148705, i_148709) < (s_148704 != null ? s_148704.length : 0))) && (s_148704[chckIndx(addInt(pos_148705, i_148709), 0, s_148704.length+0-1)-0] == substr_148706[chckIndx(i_148709, 0, substr_148706.length+0-1)-0]))) break L2;
					i_148709 = addInt(i_148709, 1);
				}
		} while(false);
		result_148707 = (i_148709 == length_148710);
		break BeforeRet;
	} while (false);

	return result_148707;

}

function nsuSplitString(s_149343, sep_149344, maxsplit_149346) {
	var result_149348 = null;

		if (!((0 < (sep_149344 != null ? sep_149344.length : 0)))) {
		failed_assert_impl_15266(makeNimstrLit("strutils.nim(769, 11) `sep.len > 0` "));
		}
		
		result_149348 = nimCopy(null, [], NTI149416);
		L1: do {
			var x_149401 = null;
			var last_311635 = 0;
			var splits_311636 = maxsplit_149346;
			L2: do {
					L3: while (true) {
					if (!(last_311635 <= (s_149343 != null ? s_149343.length : 0))) break L3;
						var first_311638 = last_311635;
						L4: do {
								L5: while (true) {
								if (!((last_311635 < (s_149343 != null ? s_149343.length : 0)) && !(substr_eq_148702(s_149343, last_311635, sep_149344)))) break L5;
									last_311635 = addInt(last_311635, 1);
								}
						} while(false);
						if ((splits_311636 == 0)) {
						last_311635 = (s_149343 != null ? s_149343.length : 0);
						}
						
						x_149401 = substr_30222(s_149343, first_311638, subInt(last_311635, 1));
						var Tmp6 = nimCopy(null, x_149401, NTI138);
						if (result_149348 != null) { result_149348.push(Tmp6); } else { result_149348 = [Tmp6]; };
						if ((splits_311636 == 0)) {
						break L2;
						}
						
						splits_311636 = subInt(splits_311636, 1);
						last_311635 = addInt(last_311635, (sep_149344 != null ? sep_149344.length : 0));
					}
			} while(false);
		} while(false);

	return result_149348;

}

function init_table_301233(initial_size_301237) {
	var result_301253 = {data: null, counter: 0};

		if (!(is_power_of_two_143062(initial_size_301237))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_301253.counter = 0;
		result_301253.data = new Array(chckRange(initial_size_301237, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_301237, 0, 2147483647);++i) {result_301253.data[i]={Field0: 0, Field1: null, Field2: 0};}
	return result_301253;

}

function raiseDivByZero() {
		var e_22256 = null;
		e_22256 = {m_type: NTI3644, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_22256.message = nimCopy(null, makeNimstrLit("division by zero"), NTI138);
		e_22256.parent = null;
		raiseException(e_22256, "DivByZeroError");

	
}

function imul_178968(a_178970, b_178971) {
	var result_178972 = 0;

		var mask_178973 = 65535;
		var a_hi_178986 = (((a_178970 >>> 0) >>> 16) & mask_178973);
		var a_lo_178992 = (a_178970 & mask_178973);
		var b_hi_179005 = (((b_178971 >>> 0) >>> 16) & mask_178973);
		var b_lo_179011 = (b_178971 & mask_178973);
		result_178972 = ((((a_lo_178992 * b_lo_179011) >>> 0) + (((((a_hi_178986 * b_lo_179011) >>> 0) + ((a_lo_178992 * b_hi_179005) >>> 0)) >>> 0) << 16)) >>> 0);

	return result_178972;

}

function rotl32_179201(x_179203, r_179204) {
	var result_179205 = 0;

		result_179205 = ((x_179203 << r_179204) | ((x_179203 >>> 0) >>> subInt(32, r_179204)));

	return result_179205;

}

function murmur_hash_179237(x_179240) {
	var result_179241 = 0;

	BeforeRet: do {
		var size_179251 = (x_179240 != null ? x_179240.length : 0);
		var step_size_179253 = 4;
		var n_179254 = divInt(size_179251, step_size_179253);
		var h1_179255 = 0;
		var i_179257 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_179257 < mulInt(n_179254, step_size_179253))) break L2;
					var k1_179258 = 0;
					var j_179259 = step_size_179253;
					L3: do {
							L4: while (true) {
							if (!(0 < j_179259)) break L4;
								j_179259 = subInt(j_179259, 1);
								k1_179258 = ((k1_179258 << 8) | chckRange(x_179240[chckIndx(addInt(i_179257, j_179259), 0, x_179240.length+0-1)-0], 0, 4294967295));
							}
					} while(false);
					i_179257 = addInt(i_179257, step_size_179253);
					k1_179258 = imul_178968(k1_179258, 3432918353);
					k1_179258 = rotl32_179201(k1_179258, 15);
					k1_179258 = imul_178968(k1_179258, 461845907);
					h1_179255 = (h1_179255 ^ k1_179258);
					h1_179255 = rotl32_179201(h1_179255, 13);
					h1_179255 = ((((h1_179255 * 5) >>> 0) + 3864292196) >>> 0);
				}
		} while(false);
		var k1_179422 = 0;
		var rem_179423 = modInt(size_179251, step_size_179253);
		L5: do {
				L6: while (true) {
				if (!(0 < rem_179423)) break L6;
					rem_179423 = subInt(rem_179423, 1);
					k1_179422 = ((k1_179422 << 8) | chckRange(x_179240[chckIndx(addInt(i_179257, rem_179423), 0, x_179240.length+0-1)-0], 0, 4294967295));
				}
		} while(false);
		k1_179422 = imul_178968(k1_179422, 3432918353);
		k1_179422 = rotl32_179201(k1_179422, 15);
		k1_179422 = imul_178968(k1_179422, 461845907);
		h1_179255 = (h1_179255 ^ k1_179422);
		h1_179255 = (h1_179255 ^ chckRange(size_179251, 0, 4294967295));
		h1_179255 = (h1_179255 ^ ((h1_179255 >>> 0) >>> 16));
		h1_179255 = imul_178968(h1_179255, 2246822507);
		h1_179255 = (h1_179255 ^ ((h1_179255 >>> 0) >>> 13));
		h1_179255 = imul_178968(h1_179255, 3266489909);
		h1_179255 = (h1_179255 ^ ((h1_179255 >>> 0) >>> 16));
		result_179241 = (h1_179255|0);
		break BeforeRet;
	} while (false);

	return result_179241;

}

function hash_180014(x_180016) {
	var result_180017 = 0;

		result_180017 = murmur_hash_179237((x_180016.slice(0, (x_180016 != null ? (x_180016.length-1) : -1)+1)));

	return result_180017;

}

function is_filled_183018(hcode_183020) {
	var result_183021 = false;

		result_183021 = !((hcode_183020 == 0));

	return result_183021;

}

function next_try_183035(h_183037, max_hash_183038) {
	var result_183039 = 0;

		result_183039 = (addInt(h_183037, 1) & max_hash_183038);

	return result_183039;

}

function raw_get_302402(t_302406, key_302407, hc_302408, hc_302408_Idx) {
						var Tmp3;

	var result_302409 = 0;

	BeforeRet: do {
		hc_302408[hc_302408_Idx] = hash_180014(key_302407);
		if ((hc_302408[hc_302408_Idx] == 0)) {
		hc_302408[hc_302408_Idx] = 314159265;
		}
		
		if (((t_302406.data != null ? t_302406.data.length : 0) == 0)) {
		result_302409 = -1;
		break BeforeRet;
		}
		
		var h_302551 = (hc_302408[hc_302408_Idx] & (t_302406.data != null ? (t_302406.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_183018(t_302406.data[chckIndx(h_302551, 0, t_302406.data.length+0-1)-0].Field0)) break L2;
						if (!(t_302406.data[chckIndx(h_302551, 0, t_302406.data.length+0-1)-0].Field0 == hc_302408[hc_302408_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_302406.data[chckIndx(h_302551, 0, t_302406.data.length+0-1)-0].Field1, key_302407);						}					if (Tmp3) {
					result_302409 = h_302551;
					break BeforeRet;
					}
					
					h_302551 = next_try_183035(h_302551, (t_302406.data != null ? (t_302406.data.length-1) : -1));
				}
		} while(false);
		result_302409 = subInt(-1, h_302551);
	} while (false);

	return result_302409;

}

function must_rehash_183053(length_183055, counter_183056) {
	var result_183057 = false;

		if (!((counter_183056 < length_183055))) {
		failed_assert_impl_15266(makeNimstrLit("hashcommon.nim(33, 9) `length > counter` "));
		}
		
		result_183057 = ((mulInt(length_183055, 2) < mulInt(counter_183056, 3)) || (subInt(length_183055, counter_183056) < 4));

	return result_183057;

}

function raw_insert_304722(t_304728, data_304731, data_304731_Idx, key_304732, val_304733, hc_304734, h_304735) {
		data_304731[data_304731_Idx][chckIndx(h_304735, 0, data_304731[data_304731_Idx].length+0-1)-0].Field1 = nimCopy(null, key_304732, NTI138);
		data_304731[data_304731_Idx][chckIndx(h_304735, 0, data_304731[data_304731_Idx].length+0-1)-0].Field2 = val_304733;
		data_304731[data_304731_Idx][chckIndx(h_304735, 0, data_304731[data_304731_Idx].length+0-1)-0].Field0 = hc_304734;

	
}

function enlarge_303748(t_303754) {
		var n_303762 = null;
		n_303762 = new Array(chckRange(mulInt((t_303754.data != null ? t_303754.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_303754.data != null ? t_303754.data.length : 0), 2), 0, 2147483647);++i) {n_303762[i]={Field0: 0, Field1: null, Field2: 0};}		var Tmp1 = t_303754.data; t_303754.data = n_303762; n_303762 = Tmp1;		L2: do {
			var i_303921 = 0;
			var colontmp__311648 = 0;
			colontmp__311648 = (n_303762 != null ? (n_303762.length-1) : -1);
			var res_311649 = 0;
			L3: do {
					L4: while (true) {
					if (!(res_311649 <= colontmp__311648)) break L4;
						i_303921 = res_311649;
						var eh_304077 = n_303762[chckIndx(i_303921, 0, n_303762.length+0-1)-0].Field0;
						if (is_filled_183018(eh_304077)) {
						var j_304084 = (eh_304077 & (t_303754.data != null ? (t_303754.data.length-1) : -1));
						L5: do {
								L6: while (true) {
								if (!is_filled_183018(t_303754.data[chckIndx(j_304084, 0, t_303754.data.length+0-1)-0].Field0)) break L6;
									j_304084 = next_try_183035(j_304084, (t_303754.data != null ? (t_303754.data.length-1) : -1));
								}
						} while(false);
						raw_insert_304722(t_303754, t_303754, "data", n_303762[chckIndx(i_303921, 0, n_303762.length+0-1)-0].Field1, n_303762[chckIndx(i_303921, 0, n_303762.length+0-1)-0].Field2, eh_304077, j_304084);
						}
						
						res_311649 = addInt(res_311649, 1);
					}
			} while(false);
		} while(false);

	
}

function raw_get_known_hc_305228(t_305232, key_305233, hc_305234) {
	var result_305235 = 0;

	BeforeRet: do {
		if (((t_305232.data != null ? t_305232.data.length : 0) == 0)) {
		result_305235 = -1;
		break BeforeRet;
		}
		
		var h_305374 = (hc_305234 & (t_305232.data != null ? (t_305232.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_183018(t_305232.data[chckIndx(h_305374, 0, t_305232.data.length+0-1)-0].Field0)) break L2;
					if (((t_305232.data[chckIndx(h_305374, 0, t_305232.data.length+0-1)-0].Field0 == hc_305234) && eqStrings(t_305232.data[chckIndx(h_305374, 0, t_305232.data.length+0-1)-0].Field1, key_305233))) {
					result_305235 = h_305374;
					break BeforeRet;
					}
					
					h_305374 = next_try_183035(h_305374, (t_305232.data != null ? (t_305232.data.length-1) : -1));
				}
		} while(false);
		result_305235 = subInt(-1, h_305374);
	} while (false);

	return result_305235;

}

function HEX5BHEX5DHEX3D_301932(t_301938, key_301939, val_301940) {
		if (((t_301938.data != null ? t_301938.data.length : 0) == 0)) {
		if (!(is_power_of_two_143062(64))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_301938.counter = 0;
		t_301938.data = new Array(64); for (var i=0;i<64;++i) {t_301938.data[i]={Field0: 0, Field1: null, Field2: 0};}		}
		
		var hc_302401 = [0];
		var index_303040 = raw_get_302402(t_301938, key_301939, hc_302401, 0);
		if ((0 <= index_303040)) {
		t_301938.data[chckIndx(index_303040, 0, t_301938.data.length+0-1)-0].Field2 = val_301940;
		}
		else {
			if (((t_301938.data != null ? t_301938.data.length : 0) == 0)) {
			if (!(is_power_of_two_143062(64))) {
			failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			t_301938.counter = 0;
			t_301938.data = new Array(64); for (var i=0;i<64;++i) {t_301938.data[i]={Field0: 0, Field1: null, Field2: 0};}			}
			
			if (must_rehash_183053((t_301938.data != null ? t_301938.data.length : 0), t_301938.counter)) {
			enlarge_303748(t_301938);
			index_303040 = raw_get_known_hc_305228(t_301938, key_301939, hc_302401[0]);
			}
			
			index_303040 = subInt(-1, index_303040);
			raw_insert_304722(t_301938, t_301938, "data", key_301939, val_301940, hc_302401[0], index_303040);
			t_301938.counter = addInt(t_301938.counter, 1);
		}
		

	
}

function HEX5BHEX5D_306090(t_306096, key_306097) {
	var result_306099 = null;
	var result_306099_Idx = 0;

		var hc_306100 = [0];
		var index_306101 = raw_get_302402(t_306096, key_306097, hc_306100, 0);
		if ((0 <= index_306101)) {
		result_306099 = t_306096.data[chckIndx(index_306101, 0, t_306096.data.length+0-1)-0]; result_306099_Idx = "Field2";
		}
		else {
			var e_306403 = null;
			e_306403 = {m_type: NTI3654, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			e_306403.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(key_306097 || []), NTI138);
			e_306403.parent = null;
			raiseException(e_306403, "KeyError");
		}
		

	return [result_306099, result_306099_Idx];

}

function hash_178826(x_178828) {
	var result_178829 = 0;

		result_178829 = x_178828;

	return result_178829;

}

function raw_get_308002(t_308006, key_308007, hc_308008, hc_308008_Idx) {
						var Tmp3;

	var result_308009 = 0;

	BeforeRet: do {
		hc_308008[hc_308008_Idx] = hash_178826(key_308007);
		if ((hc_308008[hc_308008_Idx] == 0)) {
		hc_308008[hc_308008_Idx] = 314159265;
		}
		
		if (((t_308006.data != null ? t_308006.data.length : 0) == 0)) {
		result_308009 = -1;
		break BeforeRet;
		}
		
		var h_308149 = (hc_308008[hc_308008_Idx] & (t_308006.data != null ? (t_308006.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_183018(t_308006.data[chckIndx(h_308149, 0, t_308006.data.length+0-1)-0].Field0)) break L2;
						if (!(t_308006.data[chckIndx(h_308149, 0, t_308006.data.length+0-1)-0].Field0 == hc_308008[hc_308008_Idx])) Tmp3 = false; else {							Tmp3 = (t_308006.data[chckIndx(h_308149, 0, t_308006.data.length+0-1)-0].Field1 == key_308007);						}					if (Tmp3) {
					result_308009 = h_308149;
					break BeforeRet;
					}
					
					h_308149 = next_try_183035(h_308149, (t_308006.data != null ? (t_308006.data.length-1) : -1));
				}
		} while(false);
		result_308009 = subInt(-1, h_308149);
	} while (false);

	return result_308009;

}

function raw_insert_310322(t_310328, data_310331, data_310331_Idx, key_310332, val_310333, hc_310334, h_310335) {
		data_310331[data_310331_Idx][chckIndx(h_310335, 0, data_310331[data_310331_Idx].length+0-1)-0].Field1 = key_310332;
		data_310331[data_310331_Idx][chckIndx(h_310335, 0, data_310331[data_310331_Idx].length+0-1)-0].Field2 = val_310333;
		data_310331[data_310331_Idx][chckIndx(h_310335, 0, data_310331[data_310331_Idx].length+0-1)-0].Field0 = hc_310334;

	
}

function enlarge_309348(t_309354) {
		var n_309362 = null;
		n_309362 = new Array(chckRange(mulInt((t_309354.data != null ? t_309354.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_309354.data != null ? t_309354.data.length : 0), 2), 0, 2147483647);++i) {n_309362[i]={Field0: 0, Field1: 0, Field2: 0};}		var Tmp1 = t_309354.data; t_309354.data = n_309362; n_309362 = Tmp1;		L2: do {
			var i_309521 = 0;
			var colontmp__311658 = 0;
			colontmp__311658 = (n_309362 != null ? (n_309362.length-1) : -1);
			var res_311659 = 0;
			L3: do {
					L4: while (true) {
					if (!(res_311659 <= colontmp__311658)) break L4;
						i_309521 = res_311659;
						var eh_309677 = n_309362[chckIndx(i_309521, 0, n_309362.length+0-1)-0].Field0;
						if (is_filled_183018(eh_309677)) {
						var j_309684 = (eh_309677 & (t_309354.data != null ? (t_309354.data.length-1) : -1));
						L5: do {
								L6: while (true) {
								if (!is_filled_183018(t_309354.data[chckIndx(j_309684, 0, t_309354.data.length+0-1)-0].Field0)) break L6;
									j_309684 = next_try_183035(j_309684, (t_309354.data != null ? (t_309354.data.length-1) : -1));
								}
						} while(false);
						raw_insert_310322(t_309354, t_309354, "data", n_309362[chckIndx(i_309521, 0, n_309362.length+0-1)-0].Field1, n_309362[chckIndx(i_309521, 0, n_309362.length+0-1)-0].Field2, eh_309677, j_309684);
						}
						
						res_311659 = addInt(res_311659, 1);
					}
			} while(false);
		} while(false);

	
}

function raw_get_known_hc_310828(t_310832, key_310833, hc_310834) {
	var result_310835 = 0;

	BeforeRet: do {
		if (((t_310832.data != null ? t_310832.data.length : 0) == 0)) {
		result_310835 = -1;
		break BeforeRet;
		}
		
		var h_310974 = (hc_310834 & (t_310832.data != null ? (t_310832.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_183018(t_310832.data[chckIndx(h_310974, 0, t_310832.data.length+0-1)-0].Field0)) break L2;
					if (((t_310832.data[chckIndx(h_310974, 0, t_310832.data.length+0-1)-0].Field0 == hc_310834) && (t_310832.data[chckIndx(h_310974, 0, t_310832.data.length+0-1)-0].Field1 == key_310833))) {
					result_310835 = h_310974;
					break BeforeRet;
					}
					
					h_310974 = next_try_183035(h_310974, (t_310832.data != null ? (t_310832.data.length-1) : -1));
				}
		} while(false);
		result_310835 = subInt(-1, h_310974);
	} while (false);

	return result_310835;

}

function HEX5BHEX5DHEX3D_307421(t_307427, key_307428, val_307429) {
		if (((t_307427.data != null ? t_307427.data.length : 0) == 0)) {
		if (!(is_power_of_two_143062(64))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_307427.counter = 0;
		t_307427.data = new Array(64); for (var i=0;i<64;++i) {t_307427.data[i]={Field0: 0, Field1: 0, Field2: 0};}		}
		
		var hc_308001 = [0];
		var index_308636 = raw_get_308002(t_307427, key_307428, hc_308001, 0);
		if ((0 <= index_308636)) {
		t_307427.data[chckIndx(index_308636, 0, t_307427.data.length+0-1)-0].Field2 = val_307429;
		}
		else {
			if (((t_307427.data != null ? t_307427.data.length : 0) == 0)) {
			if (!(is_power_of_two_143062(64))) {
			failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			t_307427.counter = 0;
			t_307427.data = new Array(64); for (var i=0;i<64;++i) {t_307427.data[i]={Field0: 0, Field1: 0, Field2: 0};}			}
			
			if (must_rehash_183053((t_307427.data != null ? t_307427.data.length : 0), t_307427.counter)) {
			enlarge_309348(t_307427);
			index_308636 = raw_get_known_hc_310828(t_307427, key_307428, hc_308001[0]);
			}
			
			index_308636 = subInt(-1, index_308636);
			raw_insert_310322(t_307427, t_307427, "data", key_307428, val_307429, hc_308001[0], index_308636);
			t_307427.counter = addInt(t_307427.counter, 1);
		}
		

	
}

function HEX21HEX26_178244(h_178246, val_178247) {
	var result_178248 = 0;

		var h_178249 = (h_178246 >>> 0);
		var val_178250 = (val_178247 >>> 0);
		var res_178256 = ((h_178249 + val_178250) >>> 0);
		res_178256 = ((res_178256 + (res_178256 << 10)) >>> 0);
		res_178256 = (res_178256 ^ ((res_178256 >>> 0) >>> 6));
		result_178248 = (res_178256|0);

	return result_178248;

}

function binary_search_66762(c_66764, tab_66766, len_66767, stride_66768) {
			var Tmp3;

	var result_66769 = 0;

	BeforeRet: do {
		var n_66770 = len_66767;
		var t_66772 = 0;
		L1: do {
				L2: while (true) {
				if (!(1 < n_66770)) break L2;
					var m_66775 = divInt(n_66770, 2);
					var p_66776 = addInt(t_66772, mulInt(m_66775, stride_66768));
					if ((tab_66766[chckIndx(p_66776, 0, tab_66766.length+0-1)-0] <= ((c_66764)|0))) {
					t_66772 = p_66776;
					n_66770 = subInt(n_66770, m_66775);
					}
					else {
						n_66770 = m_66775;
					}
					
				}
		} while(false);
			if (!!((n_66770 == 0))) Tmp3 = false; else {				Tmp3 = (tab_66766[chckIndx(t_66772, 0, tab_66766.length+0-1)-0] <= ((c_66764)|0));			}		if (Tmp3) {
		result_66769 = t_66772;
		break BeforeRet;
		}
		
		result_66769 = -1;
		break BeforeRet;
	} while (false);

	return result_66769;

}

function nuctoLower(c_66793) {
			var Tmp1;
			var Tmp2;
			var Tmp3;

	var result_66794 = 0;

	BeforeRet: do {
		var c_66795 = c_66793;
		var p_66820 = binary_search_66762(c_66795, [65, 90, 532, 192, 214, 532, 216, 222, 532, 393, 394, 705, 433, 434, 717, 904, 906, 537, 910, 911, 563, 913, 929, 532, 931, 939, 532, 1021, 1023, 370, 1024, 1039, 580, 1040, 1071, 532, 1329, 1366, 548, 4256, 4293, 7764, 5024, 5103, 39364, 5104, 5109, 508, 7312, 7354, -2508, 7357, 7359, -2508, 7944, 7951, 492, 7960, 7965, 492, 7976, 7983, 492, 7992, 7999, 492, 8008, 8013, 492, 8040, 8047, 492, 8072, 8079, 492, 8088, 8095, 492, 8104, 8111, 492, 8120, 8121, 492, 8122, 8123, 426, 8136, 8139, 414, 8152, 8153, 492, 8154, 8155, 400, 8168, 8169, 492, 8170, 8171, 388, 8184, 8185, 372, 8186, 8187, 374, 11264, 11310, 548, 11390, 11391, -10315, 65313, 65338, 532, 66560, 66599, 540, 66736, 66771, 540, 68736, 68786, 564, 71840, 71871, 532, 93760, 93791, 532, 125184, 125217, 534], 45, 3);
			if (!(0 <= p_66820)) Tmp2 = false; else {				Tmp2 = (to_lower_ranges_62892[chckIndx(p_66820, 0, to_lower_ranges_62892.length+0-1)-0] <= ((c_66795)|0));			}			if (!Tmp2) Tmp1 = false; else {				Tmp1 = (((c_66795)|0) <= to_lower_ranges_62892[chckIndx(addInt(p_66820, 1), 0, to_lower_ranges_62892.length+0-1)-0]);			}		if (Tmp1) {
		result_66794 = subInt(addInt(((c_66795)|0), to_lower_ranges_62892[chckIndx(addInt(p_66820, 2), 0, to_lower_ranges_62892.length+0-1)-0]), 500);
		break BeforeRet;
		}
		
		p_66820 = binary_search_66762(c_66795, [256, 501, 258, 501, 260, 501, 262, 501, 264, 501, 266, 501, 268, 501, 270, 501, 272, 501, 274, 501, 276, 501, 278, 501, 280, 501, 282, 501, 284, 501, 286, 501, 288, 501, 290, 501, 292, 501, 294, 501, 296, 501, 298, 501, 300, 501, 302, 501, 304, 301, 306, 501, 308, 501, 310, 501, 313, 501, 315, 501, 317, 501, 319, 501, 321, 501, 323, 501, 325, 501, 327, 501, 330, 501, 332, 501, 334, 501, 336, 501, 338, 501, 340, 501, 342, 501, 344, 501, 346, 501, 348, 501, 350, 501, 352, 501, 354, 501, 356, 501, 358, 501, 360, 501, 362, 501, 364, 501, 366, 501, 368, 501, 370, 501, 372, 501, 374, 501, 376, 379, 377, 501, 379, 501, 381, 501, 385, 710, 386, 501, 388, 501, 390, 706, 391, 501, 395, 501, 398, 579, 399, 702, 400, 703, 401, 501, 403, 705, 404, 707, 406, 711, 407, 709, 408, 501, 412, 711, 413, 713, 415, 714, 416, 501, 418, 501, 420, 501, 422, 718, 423, 501, 425, 718, 428, 501, 430, 718, 431, 501, 435, 501, 437, 501, 439, 719, 440, 501, 444, 501, 452, 502, 453, 501, 455, 502, 456, 501, 458, 502, 459, 501, 461, 501, 463, 501, 465, 501, 467, 501, 469, 501, 471, 501, 473, 501, 475, 501, 478, 501, 480, 501, 482, 501, 484, 501, 486, 501, 488, 501, 490, 501, 492, 501, 494, 501, 497, 502, 498, 501, 500, 501, 502, 403, 503, 444, 504, 501, 506, 501, 508, 501, 510, 501, 512, 501, 514, 501, 516, 501, 518, 501, 520, 501, 522, 501, 524, 501, 526, 501, 528, 501, 530, 501, 532, 501, 534, 501, 536, 501, 538, 501, 540, 501, 542, 501, 544, 370, 546, 501, 548, 501, 550, 501, 552, 501, 554, 501, 556, 501, 558, 501, 560, 501, 562, 501, 570, 11295, 571, 501, 573, 337, 574, 11292, 577, 501, 579, 305, 580, 569, 581, 571, 582, 501, 584, 501, 586, 501, 588, 501, 590, 501, 880, 501, 882, 501, 886, 501, 895, 616, 902, 538, 908, 564, 975, 508, 984, 501, 986, 501, 988, 501, 990, 501, 992, 501, 994, 501, 996, 501, 998, 501, 1000, 501, 1002, 501, 1004, 501, 1006, 501, 1012, 440, 1015, 501, 1017, 493, 1018, 501, 1120, 501, 1122, 501, 1124, 501, 1126, 501, 1128, 501, 1130, 501, 1132, 501, 1134, 501, 1136, 501, 1138, 501, 1140, 501, 1142, 501, 1144, 501, 1146, 501, 1148, 501, 1150, 501, 1152, 501, 1162, 501, 1164, 501, 1166, 501, 1168, 501, 1170, 501, 1172, 501, 1174, 501, 1176, 501, 1178, 501, 1180, 501, 1182, 501, 1184, 501, 1186, 501, 1188, 501, 1190, 501, 1192, 501, 1194, 501, 1196, 501, 1198, 501, 1200, 501, 1202, 501, 1204, 501, 1206, 501, 1208, 501, 1210, 501, 1212, 501, 1214, 501, 1216, 515, 1217, 501, 1219, 501, 1221, 501, 1223, 501, 1225, 501, 1227, 501, 1229, 501, 1232, 501, 1234, 501, 1236, 501, 1238, 501, 1240, 501, 1242, 501, 1244, 501, 1246, 501, 1248, 501, 1250, 501, 1252, 501, 1254, 501, 1256, 501, 1258, 501, 1260, 501, 1262, 501, 1264, 501, 1266, 501, 1268, 501, 1270, 501, 1272, 501, 1274, 501, 1276, 501, 1278, 501, 1280, 501, 1282, 501, 1284, 501, 1286, 501, 1288, 501, 1290, 501, 1292, 501, 1294, 501, 1296, 501, 1298, 501, 1300, 501, 1302, 501, 1304, 501, 1306, 501, 1308, 501, 1310, 501, 1312, 501, 1314, 501, 1316, 501, 1318, 501, 1320, 501, 1322, 501, 1324, 501, 1326, 501, 4295, 7764, 4301, 7764, 7680, 501, 7682, 501, 7684, 501, 7686, 501, 7688, 501, 7690, 501, 7692, 501, 7694, 501, 7696, 501, 7698, 501, 7700, 501, 7702, 501, 7704, 501, 7706, 501, 7708, 501, 7710, 501, 7712, 501, 7714, 501, 7716, 501, 7718, 501, 7720, 501, 7722, 501, 7724, 501, 7726, 501, 7728, 501, 7730, 501, 7732, 501, 7734, 501, 7736, 501, 7738, 501, 7740, 501, 7742, 501, 7744, 501, 7746, 501, 7748, 501, 7750, 501, 7752, 501, 7754, 501, 7756, 501, 7758, 501, 7760, 501, 7762, 501, 7764, 501, 7766, 501, 7768, 501, 7770, 501, 7772, 501, 7774, 501, 7776, 501, 7778, 501, 7780, 501, 7782, 501, 7784, 501, 7786, 501, 7788, 501, 7790, 501, 7792, 501, 7794, 501, 7796, 501, 7798, 501, 7800, 501, 7802, 501, 7804, 501, 7806, 501, 7808, 501, 7810, 501, 7812, 501, 7814, 501, 7816, 501, 7818, 501, 7820, 501, 7822, 501, 7824, 501, 7826, 501, 7828, 501, 7838, -7115, 7840, 501, 7842, 501, 7844, 501, 7846, 501, 7848, 501, 7850, 501, 7852, 501, 7854, 501, 7856, 501, 7858, 501, 7860, 501, 7862, 501, 7864, 501, 7866, 501, 7868, 501, 7870, 501, 7872, 501, 7874, 501, 7876, 501, 7878, 501, 7880, 501, 7882, 501, 7884, 501, 7886, 501, 7888, 501, 7890, 501, 7892, 501, 7894, 501, 7896, 501, 7898, 501, 7900, 501, 7902, 501, 7904, 501, 7906, 501, 7908, 501, 7910, 501, 7912, 501, 7914, 501, 7916, 501, 7918, 501, 7920, 501, 7922, 501, 7924, 501, 7926, 501, 7928, 501, 7930, 501, 7932, 501, 7934, 501, 8025, 492, 8027, 492, 8029, 492, 8031, 492, 8124, 491, 8140, 491, 8172, 493, 8188, 491, 8486, -7017, 8490, -7883, 8491, -7762, 8498, 528, 8579, 501, 11360, 501, 11362, -10243, 11363, -3314, 11364, -10227, 11367, 501, 11369, 501, 11371, 501, 11373, -10280, 11374, -10249, 11375, -10283, 11376, -10282, 11378, 501, 11381, 501, 11392, 501, 11394, 501, 11396, 501, 11398, 501, 11400, 501, 11402, 501, 11404, 501, 11406, 501, 11408, 501, 11410, 501, 11412, 501, 11414, 501, 11416, 501, 11418, 501, 11420, 501, 11422, 501, 11424, 501, 11426, 501, 11428, 501, 11430, 501, 11432, 501, 11434, 501, 11436, 501, 11438, 501, 11440, 501, 11442, 501, 11444, 501, 11446, 501, 11448, 501, 11450, 501, 11452, 501, 11454, 501, 11456, 501, 11458, 501, 11460, 501, 11462, 501, 11464, 501, 11466, 501, 11468, 501, 11470, 501, 11472, 501, 11474, 501, 11476, 501, 11478, 501, 11480, 501, 11482, 501, 11484, 501, 11486, 501, 11488, 501, 11490, 501, 11499, 501, 11501, 501, 11506, 501, 42560, 501, 42562, 501, 42564, 501, 42566, 501, 42568, 501, 42570, 501, 42572, 501, 42574, 501, 42576, 501, 42578, 501, 42580, 501, 42582, 501, 42584, 501, 42586, 501, 42588, 501, 42590, 501, 42592, 501, 42594, 501, 42596, 501, 42598, 501, 42600, 501, 42602, 501, 42604, 501, 42624, 501, 42626, 501, 42628, 501, 42630, 501, 42632, 501, 42634, 501, 42636, 501, 42638, 501, 42640, 501, 42642, 501, 42644, 501, 42646, 501, 42648, 501, 42650, 501, 42786, 501, 42788, 501, 42790, 501, 42792, 501, 42794, 501, 42796, 501, 42798, 501, 42802, 501, 42804, 501, 42806, 501, 42808, 501, 42810, 501, 42812, 501, 42814, 501, 42816, 501, 42818, 501, 42820, 501, 42822, 501, 42824, 501, 42826, 501, 42828, 501, 42830, 501, 42832, 501, 42834, 501, 42836, 501, 42838, 501, 42840, 501, 42842, 501, 42844, 501, 42846, 501, 42848, 501, 42850, 501, 42852, 501, 42854, 501, 42856, 501, 42858, 501, 42860, 501, 42862, 501, 42873, 501, 42875, 501, 42877, -34832, 42878, 501, 42880, 501, 42882, 501, 42884, 501, 42886, 501, 42891, 501, 42893, -41780, 42896, 501, 42898, 501, 42902, 501, 42904, 501, 42906, 501, 42908, 501, 42910, 501, 42912, 501, 42914, 501, 42916, 501, 42918, 501, 42920, 501, 42922, -41808, 42923, -41819, 42924, -41815, 42925, -41805, 42926, -41808, 42928, -41758, 42929, -41782, 42930, -41761, 42931, 1428, 42932, 501, 42934, 501, 42936, 501, 42938, 501, 42940, 501, 42942, 501, 42946, 501, 42948, 452, 42949, -41807, 42950, -34884], 610, 2);
			if (!(0 <= p_66820)) Tmp3 = false; else {				Tmp3 = (((c_66795)|0) == to_lower_singlets_64162[chckIndx(p_66820, 0, to_lower_singlets_64162.length+0-1)-0]);			}		if (Tmp3) {
		result_66794 = subInt(addInt(((c_66795)|0), to_lower_singlets_64162[chckIndx(addInt(p_66820, 1), 0, to_lower_singlets_64162.length+0-1)-0]), 500);
		break BeforeRet;
		}
		
		result_66794 = c_66795;
		break BeforeRet;
	} while (false);

	return result_66794;

}

function nuctoLowerStr(s_76222) {
	var result_76223 = null;

		result_76223 = nimCopy(null, mnewString(chckRange((s_76222 != null ? s_76222.length : 0), 0, 2147483647)), NTI138);
		var i_76224 = 0;
		var result_index_76225 = 0;
		var rune_76226 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_76224 < (s_76222 != null ? s_76222.length : 0))) break L2;
					if ((s_76222[chckIndx(i_76224, 0, s_76222.length+0-1)-0] <= 127)) {
					rune_76226 = chckRange(s_76222[chckIndx(i_76224, 0, s_76222.length+0-1)-0], -2147483648, 2147483647);
					i_76224 = addInt(i_76224, 1);
					}
					else {
					if ((((s_76222[chckIndx(i_76224, 0, s_76222.length+0-1)-0] >>> 0) >>> 5) == 6)) {
					if ((i_76224 <= subInt((s_76222 != null ? s_76222.length : 0), 2))) {
					rune_76226 = chckRange((((s_76222[chckIndx(i_76224, 0, s_76222.length+0-1)-0] & 31) << 6) | (s_76222[chckIndx(addInt(i_76224, 1), 0, s_76222.length+0-1)-0] & 63)), -2147483648, 2147483647);
					i_76224 = addInt(i_76224, 2);
					}
					else {
						rune_76226 = 65533;
						i_76224 = addInt(i_76224, 1);
					}
					
					}
					else {
					if ((((s_76222[chckIndx(i_76224, 0, s_76222.length+0-1)-0] >>> 0) >>> 4) == 14)) {
					if ((i_76224 <= subInt((s_76222 != null ? s_76222.length : 0), 3))) {
					rune_76226 = chckRange(((((s_76222[chckIndx(i_76224, 0, s_76222.length+0-1)-0] & 15) << 12) | ((s_76222[chckIndx(addInt(i_76224, 1), 0, s_76222.length+0-1)-0] & 63) << 6)) | (s_76222[chckIndx(addInt(i_76224, 2), 0, s_76222.length+0-1)-0] & 63)), -2147483648, 2147483647);
					i_76224 = addInt(i_76224, 3);
					}
					else {
						rune_76226 = 65533;
						i_76224 = addInt(i_76224, 1);
					}
					
					}
					else {
					if ((((s_76222[chckIndx(i_76224, 0, s_76222.length+0-1)-0] >>> 0) >>> 3) == 30)) {
					if ((i_76224 <= subInt((s_76222 != null ? s_76222.length : 0), 4))) {
					rune_76226 = chckRange((((((s_76222[chckIndx(i_76224, 0, s_76222.length+0-1)-0] & 7) << 18) | ((s_76222[chckIndx(addInt(i_76224, 1), 0, s_76222.length+0-1)-0] & 63) << 12)) | ((s_76222[chckIndx(addInt(i_76224, 2), 0, s_76222.length+0-1)-0] & 63) << 6)) | (s_76222[chckIndx(addInt(i_76224, 3), 0, s_76222.length+0-1)-0] & 63)), -2147483648, 2147483647);
					i_76224 = addInt(i_76224, 4);
					}
					else {
						rune_76226 = 65533;
						i_76224 = addInt(i_76224, 1);
					}
					
					}
					else {
					if ((((s_76222[chckIndx(i_76224, 0, s_76222.length+0-1)-0] >>> 0) >>> 2) == 62)) {
					if ((i_76224 <= subInt((s_76222 != null ? s_76222.length : 0), 5))) {
					rune_76226 = chckRange(((((((s_76222[chckIndx(i_76224, 0, s_76222.length+0-1)-0] & 3) << 24) | ((s_76222[chckIndx(addInt(i_76224, 1), 0, s_76222.length+0-1)-0] & 63) << 18)) | ((s_76222[chckIndx(addInt(i_76224, 2), 0, s_76222.length+0-1)-0] & 63) << 12)) | ((s_76222[chckIndx(addInt(i_76224, 3), 0, s_76222.length+0-1)-0] & 63) << 6)) | (s_76222[chckIndx(addInt(i_76224, 4), 0, s_76222.length+0-1)-0] & 63)), -2147483648, 2147483647);
					i_76224 = addInt(i_76224, 5);
					}
					else {
						rune_76226 = 65533;
						i_76224 = addInt(i_76224, 1);
					}
					
					}
					else {
					if ((((s_76222[chckIndx(i_76224, 0, s_76222.length+0-1)-0] >>> 0) >>> 1) == 126)) {
					if ((i_76224 <= subInt((s_76222 != null ? s_76222.length : 0), 6))) {
					rune_76226 = chckRange((((((((s_76222[chckIndx(i_76224, 0, s_76222.length+0-1)-0] & 1) << 30) | ((s_76222[chckIndx(addInt(i_76224, 1), 0, s_76222.length+0-1)-0] & 63) << 24)) | ((s_76222[chckIndx(addInt(i_76224, 2), 0, s_76222.length+0-1)-0] & 63) << 18)) | ((s_76222[chckIndx(addInt(i_76224, 3), 0, s_76222.length+0-1)-0] & 63) << 12)) | ((s_76222[chckIndx(addInt(i_76224, 4), 0, s_76222.length+0-1)-0] & 63) << 6)) | (s_76222[chckIndx(addInt(i_76224, 5), 0, s_76222.length+0-1)-0] & 63)), -2147483648, 2147483647);
					i_76224 = addInt(i_76224, 6);
					}
					else {
						rune_76226 = 65533;
						i_76224 = addInt(i_76224, 1);
					}
					
					}
					else {
						rune_76226 = chckRange(s_76222[chckIndx(i_76224, 0, s_76222.length+0-1)-0], -2147483648, 2147483647);
						i_76224 = addInt(i_76224, 1);
					}
					}}}}}
					rune_76226 = nuctoLower(rune_76226);
					var i_78807 = rune_76226;
					if ((i_78807 <= 127)) {
					(result_76223 == null ? result_76223 = mnewString(chckRange(addInt(result_index_76225, 1), 0, 2147483647)) : result_76223.length = chckRange(addInt(result_index_76225, 1), 0, 2147483647));
					result_76223[chckIndx(addInt(result_index_76225, 0), 0, result_76223.length+0-1)-0] = chckRange(i_78807, 0, 255);
					result_index_76225 = addInt(result_index_76225, 1);
					}
					else {
					if ((i_78807 <= 2047)) {
					(result_76223 == null ? result_76223 = mnewString(chckRange(addInt(result_index_76225, 2), 0, 2147483647)) : result_76223.length = chckRange(addInt(result_index_76225, 2), 0, 2147483647));
					result_76223[chckIndx(addInt(result_index_76225, 0), 0, result_76223.length+0-1)-0] = chckRange(((i_78807 >> 6) | 192), 0, 255);
					result_76223[chckIndx(addInt(result_index_76225, 1), 0, result_76223.length+0-1)-0] = chckRange(((i_78807 & 63) | 128), 0, 255);
					result_index_76225 = addInt(result_index_76225, 2);
					}
					else {
					if ((i_78807 <= 65535)) {
					(result_76223 == null ? result_76223 = mnewString(chckRange(addInt(result_index_76225, 3), 0, 2147483647)) : result_76223.length = chckRange(addInt(result_index_76225, 3), 0, 2147483647));
					result_76223[chckIndx(addInt(result_index_76225, 0), 0, result_76223.length+0-1)-0] = chckRange(((i_78807 >> 12) | 224), 0, 255);
					result_76223[chckIndx(addInt(result_index_76225, 1), 0, result_76223.length+0-1)-0] = chckRange((((i_78807 >> 6) & 63) | 128), 0, 255);
					result_76223[chckIndx(addInt(result_index_76225, 2), 0, result_76223.length+0-1)-0] = chckRange(((i_78807 & 63) | 128), 0, 255);
					result_index_76225 = addInt(result_index_76225, 3);
					}
					else {
					if ((i_78807 <= 2097151)) {
					(result_76223 == null ? result_76223 = mnewString(chckRange(addInt(result_index_76225, 4), 0, 2147483647)) : result_76223.length = chckRange(addInt(result_index_76225, 4), 0, 2147483647));
					result_76223[chckIndx(addInt(result_index_76225, 0), 0, result_76223.length+0-1)-0] = chckRange(((i_78807 >> 18) | 240), 0, 255);
					result_76223[chckIndx(addInt(result_index_76225, 1), 0, result_76223.length+0-1)-0] = chckRange((((i_78807 >> 12) & 63) | 128), 0, 255);
					result_76223[chckIndx(addInt(result_index_76225, 2), 0, result_76223.length+0-1)-0] = chckRange((((i_78807 >> 6) & 63) | 128), 0, 255);
					result_76223[chckIndx(addInt(result_index_76225, 3), 0, result_76223.length+0-1)-0] = chckRange(((i_78807 & 63) | 128), 0, 255);
					result_index_76225 = addInt(result_index_76225, 4);
					}
					else {
					if ((i_78807 <= 67108863)) {
					(result_76223 == null ? result_76223 = mnewString(chckRange(addInt(result_index_76225, 5), 0, 2147483647)) : result_76223.length = chckRange(addInt(result_index_76225, 5), 0, 2147483647));
					result_76223[chckIndx(addInt(result_index_76225, 0), 0, result_76223.length+0-1)-0] = chckRange(((i_78807 >> 24) | 248), 0, 255);
					result_76223[chckIndx(addInt(result_index_76225, 1), 0, result_76223.length+0-1)-0] = chckRange((((i_78807 >> 18) & 63) | 128), 0, 255);
					result_76223[chckIndx(addInt(result_index_76225, 2), 0, result_76223.length+0-1)-0] = chckRange((((i_78807 >> 12) & 63) | 128), 0, 255);
					result_76223[chckIndx(addInt(result_index_76225, 3), 0, result_76223.length+0-1)-0] = chckRange((((i_78807 >> 6) & 63) | 128), 0, 255);
					result_76223[chckIndx(addInt(result_index_76225, 4), 0, result_76223.length+0-1)-0] = chckRange(((i_78807 & 63) | 128), 0, 255);
					result_index_76225 = addInt(result_index_76225, 5);
					}
					else {
					if ((i_78807 <= 2147483647)) {
					(result_76223 == null ? result_76223 = mnewString(chckRange(addInt(result_index_76225, 6), 0, 2147483647)) : result_76223.length = chckRange(addInt(result_index_76225, 6), 0, 2147483647));
					result_76223[chckIndx(addInt(result_index_76225, 0), 0, result_76223.length+0-1)-0] = chckRange(((i_78807 >> 30) | 252), 0, 255);
					result_76223[chckIndx(addInt(result_index_76225, 1), 0, result_76223.length+0-1)-0] = chckRange((((i_78807 >> 24) & 63) | 128), 0, 255);
					result_76223[chckIndx(addInt(result_index_76225, 2), 0, result_76223.length+0-1)-0] = chckRange((((i_78807 >> 18) & 63) | 128), 0, 255);
					result_76223[chckIndx(addInt(result_index_76225, 3), 0, result_76223.length+0-1)-0] = chckRange((((i_78807 >> 12) & 63) | 128), 0, 255);
					result_76223[chckIndx(addInt(result_index_76225, 4), 0, result_76223.length+0-1)-0] = chckRange((((i_78807 >> 6) & 63) | 128), 0, 255);
					result_76223[chckIndx(addInt(result_index_76225, 5), 0, result_76223.length+0-1)-0] = chckRange(((i_78807 & 63) | 128), 0, 255);
					result_index_76225 = addInt(result_index_76225, 6);
					}
					else {
					}
					}}}}}
				}
		} while(false);

	return result_76223;

}

function HEX3DHEX3D_62730(a_62732, b_62733) {
	var result_62734 = false;

	BeforeRet: do {
		result_62734 = (((a_62732)|0) == ((b_62733)|0));
		break BeforeRet;
	} while (false);

	return result_62734;

}

function find_114208(a_114212, item_114213) {
	var result_114214 = 0;

	BeforeRet: do {
		L1: do {
			var i_114245 = 0;
			var i_311792 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_311792 < (a_114212 != null ? a_114212.length : 0))) break L3;
						i_114245 = a_114212[chckIndx(i_311792, 0, a_114212.length+0-1)-0];
						if (HEX3DHEX3D_62730(i_114245, item_114213)) {
						break BeforeRet;
						}
						
						result_114214 = addInt(result_114214, 1);
						i_311792 = addInt(i_311792, 1);
					}
			} while(false);
		} while(false);
		result_114214 = -1;
	} while (false);

	return result_114214;

}

function contains_114201(a_114205, item_114206) {
	var result_114207 = false;

	BeforeRet: do {
		result_114207 = (0 <= find_114208(a_114205, item_114206));
		break BeforeRet;
	} while (false);

	return result_114207;

}

function HEX5BHEX5D_62281(s_62285, x_62287) {
	var result_62288 = null;

		var a_62401 = x_62287.a;
		var l_62601 = addInt(subInt(x_62287.b, a_62401), 1);
		result_62288 = nimCopy(null, mnewString(chckRange(l_62601, 0, 2147483647)), NTI138);
		L1: do {
			var i_62609 = 0;
			var i_311799 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_311799 < l_62601)) break L3;
						i_62609 = i_311799;
						result_62288[chckIndx(i_62609, 0, result_62288.length+0-1)-0] = s_62285[chckIndx(addInt(i_62609, a_62401), 0, s_62285.length+0-1)-0];
						i_311799 = addInt(i_311799, 1);
					}
			} while(false);
		} while(false);

	return result_62288;

}

function HEX2EHEX2E_62220(a_62224, b_62225) {
	var result_62227 = {a: 0, b: 0};

		nimCopy(result_62227, {a: a_62224, b: b_62225}, NTI51907);

	return result_62227;

}

function nucStrip(s_118105, leading_118106, trailing_118107, runes_118109) {
	var result_118110 = null;

		var s_i_118112 = 0;
		var e_i_118113 = subInt((s_118105 != null ? s_118105.length : 0), 1);
		if (leading_118106) {
		var i_118115 = 0;
		var x_i_118116 = 0;
		var rune_118117 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_118115 < (s_118105 != null ? s_118105.length : 0))) break L2;
					x_i_118116 = i_118115;
					if ((s_118105[chckIndx(i_118115, 0, s_118105.length+0-1)-0] <= 127)) {
					rune_118117 = chckRange(s_118105[chckIndx(i_118115, 0, s_118105.length+0-1)-0], -2147483648, 2147483647);
					i_118115 = addInt(i_118115, 1);
					}
					else {
					if ((((s_118105[chckIndx(i_118115, 0, s_118105.length+0-1)-0] >>> 0) >>> 5) == 6)) {
					if ((i_118115 <= subInt((s_118105 != null ? s_118105.length : 0), 2))) {
					rune_118117 = chckRange((((s_118105[chckIndx(i_118115, 0, s_118105.length+0-1)-0] & 31) << 6) | (s_118105[chckIndx(addInt(i_118115, 1), 0, s_118105.length+0-1)-0] & 63)), -2147483648, 2147483647);
					i_118115 = addInt(i_118115, 2);
					}
					else {
						rune_118117 = 65533;
						i_118115 = addInt(i_118115, 1);
					}
					
					}
					else {
					if ((((s_118105[chckIndx(i_118115, 0, s_118105.length+0-1)-0] >>> 0) >>> 4) == 14)) {
					if ((i_118115 <= subInt((s_118105 != null ? s_118105.length : 0), 3))) {
					rune_118117 = chckRange(((((s_118105[chckIndx(i_118115, 0, s_118105.length+0-1)-0] & 15) << 12) | ((s_118105[chckIndx(addInt(i_118115, 1), 0, s_118105.length+0-1)-0] & 63) << 6)) | (s_118105[chckIndx(addInt(i_118115, 2), 0, s_118105.length+0-1)-0] & 63)), -2147483648, 2147483647);
					i_118115 = addInt(i_118115, 3);
					}
					else {
						rune_118117 = 65533;
						i_118115 = addInt(i_118115, 1);
					}
					
					}
					else {
					if ((((s_118105[chckIndx(i_118115, 0, s_118105.length+0-1)-0] >>> 0) >>> 3) == 30)) {
					if ((i_118115 <= subInt((s_118105 != null ? s_118105.length : 0), 4))) {
					rune_118117 = chckRange((((((s_118105[chckIndx(i_118115, 0, s_118105.length+0-1)-0] & 7) << 18) | ((s_118105[chckIndx(addInt(i_118115, 1), 0, s_118105.length+0-1)-0] & 63) << 12)) | ((s_118105[chckIndx(addInt(i_118115, 2), 0, s_118105.length+0-1)-0] & 63) << 6)) | (s_118105[chckIndx(addInt(i_118115, 3), 0, s_118105.length+0-1)-0] & 63)), -2147483648, 2147483647);
					i_118115 = addInt(i_118115, 4);
					}
					else {
						rune_118117 = 65533;
						i_118115 = addInt(i_118115, 1);
					}
					
					}
					else {
					if ((((s_118105[chckIndx(i_118115, 0, s_118105.length+0-1)-0] >>> 0) >>> 2) == 62)) {
					if ((i_118115 <= subInt((s_118105 != null ? s_118105.length : 0), 5))) {
					rune_118117 = chckRange(((((((s_118105[chckIndx(i_118115, 0, s_118105.length+0-1)-0] & 3) << 24) | ((s_118105[chckIndx(addInt(i_118115, 1), 0, s_118105.length+0-1)-0] & 63) << 18)) | ((s_118105[chckIndx(addInt(i_118115, 2), 0, s_118105.length+0-1)-0] & 63) << 12)) | ((s_118105[chckIndx(addInt(i_118115, 3), 0, s_118105.length+0-1)-0] & 63) << 6)) | (s_118105[chckIndx(addInt(i_118115, 4), 0, s_118105.length+0-1)-0] & 63)), -2147483648, 2147483647);
					i_118115 = addInt(i_118115, 5);
					}
					else {
						rune_118117 = 65533;
						i_118115 = addInt(i_118115, 1);
					}
					
					}
					else {
					if ((((s_118105[chckIndx(i_118115, 0, s_118105.length+0-1)-0] >>> 0) >>> 1) == 126)) {
					if ((i_118115 <= subInt((s_118105 != null ? s_118105.length : 0), 6))) {
					rune_118117 = chckRange((((((((s_118105[chckIndx(i_118115, 0, s_118105.length+0-1)-0] & 1) << 30) | ((s_118105[chckIndx(addInt(i_118115, 1), 0, s_118105.length+0-1)-0] & 63) << 24)) | ((s_118105[chckIndx(addInt(i_118115, 2), 0, s_118105.length+0-1)-0] & 63) << 18)) | ((s_118105[chckIndx(addInt(i_118115, 3), 0, s_118105.length+0-1)-0] & 63) << 12)) | ((s_118105[chckIndx(addInt(i_118115, 4), 0, s_118105.length+0-1)-0] & 63) << 6)) | (s_118105[chckIndx(addInt(i_118115, 5), 0, s_118105.length+0-1)-0] & 63)), -2147483648, 2147483647);
					i_118115 = addInt(i_118115, 6);
					}
					else {
						rune_118117 = 65533;
						i_118115 = addInt(i_118115, 1);
					}
					
					}
					else {
						rune_118117 = chckRange(s_118105[chckIndx(i_118115, 0, s_118105.length+0-1)-0], -2147483648, 2147483647);
						i_118115 = addInt(i_118115, 1);
					}
					}}}}}
					s_i_118112 = i_118115;
					if (!(contains_114201(runes_118109, rune_118117))) {
					s_i_118112 = x_i_118116;
					break L1;
					}
					
				}
		} while(false);
		}
		
		if (trailing_118107) {
		var i_120613 = e_i_118113;
		var x_i_120614 = 0;
		var rune_120615 = 0;
		L3: do {
				L4: while (true) {
				if (!(0 <= i_120613)) break L4;
					x_i_120614 = i_120613;
					if ((s_118105[chckIndx(x_i_120614, 0, s_118105.length+0-1)-0] <= 127)) {
					rune_120615 = chckRange(s_118105[chckIndx(x_i_120614, 0, s_118105.length+0-1)-0], -2147483648, 2147483647);
					x_i_120614 = addInt(x_i_120614, 1);
					}
					else {
					if ((((s_118105[chckIndx(x_i_120614, 0, s_118105.length+0-1)-0] >>> 0) >>> 5) == 6)) {
					if ((x_i_120614 <= subInt((s_118105 != null ? s_118105.length : 0), 2))) {
					rune_120615 = chckRange((((s_118105[chckIndx(x_i_120614, 0, s_118105.length+0-1)-0] & 31) << 6) | (s_118105[chckIndx(addInt(x_i_120614, 1), 0, s_118105.length+0-1)-0] & 63)), -2147483648, 2147483647);
					x_i_120614 = addInt(x_i_120614, 2);
					}
					else {
						rune_120615 = 65533;
						x_i_120614 = addInt(x_i_120614, 1);
					}
					
					}
					else {
					if ((((s_118105[chckIndx(x_i_120614, 0, s_118105.length+0-1)-0] >>> 0) >>> 4) == 14)) {
					if ((x_i_120614 <= subInt((s_118105 != null ? s_118105.length : 0), 3))) {
					rune_120615 = chckRange(((((s_118105[chckIndx(x_i_120614, 0, s_118105.length+0-1)-0] & 15) << 12) | ((s_118105[chckIndx(addInt(x_i_120614, 1), 0, s_118105.length+0-1)-0] & 63) << 6)) | (s_118105[chckIndx(addInt(x_i_120614, 2), 0, s_118105.length+0-1)-0] & 63)), -2147483648, 2147483647);
					x_i_120614 = addInt(x_i_120614, 3);
					}
					else {
						rune_120615 = 65533;
						x_i_120614 = addInt(x_i_120614, 1);
					}
					
					}
					else {
					if ((((s_118105[chckIndx(x_i_120614, 0, s_118105.length+0-1)-0] >>> 0) >>> 3) == 30)) {
					if ((x_i_120614 <= subInt((s_118105 != null ? s_118105.length : 0), 4))) {
					rune_120615 = chckRange((((((s_118105[chckIndx(x_i_120614, 0, s_118105.length+0-1)-0] & 7) << 18) | ((s_118105[chckIndx(addInt(x_i_120614, 1), 0, s_118105.length+0-1)-0] & 63) << 12)) | ((s_118105[chckIndx(addInt(x_i_120614, 2), 0, s_118105.length+0-1)-0] & 63) << 6)) | (s_118105[chckIndx(addInt(x_i_120614, 3), 0, s_118105.length+0-1)-0] & 63)), -2147483648, 2147483647);
					x_i_120614 = addInt(x_i_120614, 4);
					}
					else {
						rune_120615 = 65533;
						x_i_120614 = addInt(x_i_120614, 1);
					}
					
					}
					else {
					if ((((s_118105[chckIndx(x_i_120614, 0, s_118105.length+0-1)-0] >>> 0) >>> 2) == 62)) {
					if ((x_i_120614 <= subInt((s_118105 != null ? s_118105.length : 0), 5))) {
					rune_120615 = chckRange(((((((s_118105[chckIndx(x_i_120614, 0, s_118105.length+0-1)-0] & 3) << 24) | ((s_118105[chckIndx(addInt(x_i_120614, 1), 0, s_118105.length+0-1)-0] & 63) << 18)) | ((s_118105[chckIndx(addInt(x_i_120614, 2), 0, s_118105.length+0-1)-0] & 63) << 12)) | ((s_118105[chckIndx(addInt(x_i_120614, 3), 0, s_118105.length+0-1)-0] & 63) << 6)) | (s_118105[chckIndx(addInt(x_i_120614, 4), 0, s_118105.length+0-1)-0] & 63)), -2147483648, 2147483647);
					x_i_120614 = addInt(x_i_120614, 5);
					}
					else {
						rune_120615 = 65533;
						x_i_120614 = addInt(x_i_120614, 1);
					}
					
					}
					else {
					if ((((s_118105[chckIndx(x_i_120614, 0, s_118105.length+0-1)-0] >>> 0) >>> 1) == 126)) {
					if ((x_i_120614 <= subInt((s_118105 != null ? s_118105.length : 0), 6))) {
					rune_120615 = chckRange((((((((s_118105[chckIndx(x_i_120614, 0, s_118105.length+0-1)-0] & 1) << 30) | ((s_118105[chckIndx(addInt(x_i_120614, 1), 0, s_118105.length+0-1)-0] & 63) << 24)) | ((s_118105[chckIndx(addInt(x_i_120614, 2), 0, s_118105.length+0-1)-0] & 63) << 18)) | ((s_118105[chckIndx(addInt(x_i_120614, 3), 0, s_118105.length+0-1)-0] & 63) << 12)) | ((s_118105[chckIndx(addInt(x_i_120614, 4), 0, s_118105.length+0-1)-0] & 63) << 6)) | (s_118105[chckIndx(addInt(x_i_120614, 5), 0, s_118105.length+0-1)-0] & 63)), -2147483648, 2147483647);
					x_i_120614 = addInt(x_i_120614, 6);
					}
					else {
						rune_120615 = 65533;
						x_i_120614 = addInt(x_i_120614, 1);
					}
					
					}
					else {
						rune_120615 = chckRange(s_118105[chckIndx(x_i_120614, 0, s_118105.length+0-1)-0], -2147483648, 2147483647);
						x_i_120614 = addInt(x_i_120614, 1);
					}
					}}}}}
					var y_i_123207 = subInt(i_120613, 1);
					L5: do {
							L6: while (true) {
							if (!(0 <= y_i_123207)) break L6;
								var y_iend_123209 = y_i_123207;
								var p_rune_123210 = 0;
								if ((s_118105[chckIndx(y_iend_123209, 0, s_118105.length+0-1)-0] <= 127)) {
								p_rune_123210 = chckRange(s_118105[chckIndx(y_iend_123209, 0, s_118105.length+0-1)-0], -2147483648, 2147483647);
								y_iend_123209 = addInt(y_iend_123209, 1);
								}
								else {
								if ((((s_118105[chckIndx(y_iend_123209, 0, s_118105.length+0-1)-0] >>> 0) >>> 5) == 6)) {
								if ((y_iend_123209 <= subInt((s_118105 != null ? s_118105.length : 0), 2))) {
								p_rune_123210 = chckRange((((s_118105[chckIndx(y_iend_123209, 0, s_118105.length+0-1)-0] & 31) << 6) | (s_118105[chckIndx(addInt(y_iend_123209, 1), 0, s_118105.length+0-1)-0] & 63)), -2147483648, 2147483647);
								y_iend_123209 = addInt(y_iend_123209, 2);
								}
								else {
									p_rune_123210 = 65533;
									y_iend_123209 = addInt(y_iend_123209, 1);
								}
								
								}
								else {
								if ((((s_118105[chckIndx(y_iend_123209, 0, s_118105.length+0-1)-0] >>> 0) >>> 4) == 14)) {
								if ((y_iend_123209 <= subInt((s_118105 != null ? s_118105.length : 0), 3))) {
								p_rune_123210 = chckRange(((((s_118105[chckIndx(y_iend_123209, 0, s_118105.length+0-1)-0] & 15) << 12) | ((s_118105[chckIndx(addInt(y_iend_123209, 1), 0, s_118105.length+0-1)-0] & 63) << 6)) | (s_118105[chckIndx(addInt(y_iend_123209, 2), 0, s_118105.length+0-1)-0] & 63)), -2147483648, 2147483647);
								y_iend_123209 = addInt(y_iend_123209, 3);
								}
								else {
									p_rune_123210 = 65533;
									y_iend_123209 = addInt(y_iend_123209, 1);
								}
								
								}
								else {
								if ((((s_118105[chckIndx(y_iend_123209, 0, s_118105.length+0-1)-0] >>> 0) >>> 3) == 30)) {
								if ((y_iend_123209 <= subInt((s_118105 != null ? s_118105.length : 0), 4))) {
								p_rune_123210 = chckRange((((((s_118105[chckIndx(y_iend_123209, 0, s_118105.length+0-1)-0] & 7) << 18) | ((s_118105[chckIndx(addInt(y_iend_123209, 1), 0, s_118105.length+0-1)-0] & 63) << 12)) | ((s_118105[chckIndx(addInt(y_iend_123209, 2), 0, s_118105.length+0-1)-0] & 63) << 6)) | (s_118105[chckIndx(addInt(y_iend_123209, 3), 0, s_118105.length+0-1)-0] & 63)), -2147483648, 2147483647);
								y_iend_123209 = addInt(y_iend_123209, 4);
								}
								else {
									p_rune_123210 = 65533;
									y_iend_123209 = addInt(y_iend_123209, 1);
								}
								
								}
								else {
								if ((((s_118105[chckIndx(y_iend_123209, 0, s_118105.length+0-1)-0] >>> 0) >>> 2) == 62)) {
								if ((y_iend_123209 <= subInt((s_118105 != null ? s_118105.length : 0), 5))) {
								p_rune_123210 = chckRange(((((((s_118105[chckIndx(y_iend_123209, 0, s_118105.length+0-1)-0] & 3) << 24) | ((s_118105[chckIndx(addInt(y_iend_123209, 1), 0, s_118105.length+0-1)-0] & 63) << 18)) | ((s_118105[chckIndx(addInt(y_iend_123209, 2), 0, s_118105.length+0-1)-0] & 63) << 12)) | ((s_118105[chckIndx(addInt(y_iend_123209, 3), 0, s_118105.length+0-1)-0] & 63) << 6)) | (s_118105[chckIndx(addInt(y_iend_123209, 4), 0, s_118105.length+0-1)-0] & 63)), -2147483648, 2147483647);
								y_iend_123209 = addInt(y_iend_123209, 5);
								}
								else {
									p_rune_123210 = 65533;
									y_iend_123209 = addInt(y_iend_123209, 1);
								}
								
								}
								else {
								if ((((s_118105[chckIndx(y_iend_123209, 0, s_118105.length+0-1)-0] >>> 0) >>> 1) == 126)) {
								if ((y_iend_123209 <= subInt((s_118105 != null ? s_118105.length : 0), 6))) {
								p_rune_123210 = chckRange((((((((s_118105[chckIndx(y_iend_123209, 0, s_118105.length+0-1)-0] & 1) << 30) | ((s_118105[chckIndx(addInt(y_iend_123209, 1), 0, s_118105.length+0-1)-0] & 63) << 24)) | ((s_118105[chckIndx(addInt(y_iend_123209, 2), 0, s_118105.length+0-1)-0] & 63) << 18)) | ((s_118105[chckIndx(addInt(y_iend_123209, 3), 0, s_118105.length+0-1)-0] & 63) << 12)) | ((s_118105[chckIndx(addInt(y_iend_123209, 4), 0, s_118105.length+0-1)-0] & 63) << 6)) | (s_118105[chckIndx(addInt(y_iend_123209, 5), 0, s_118105.length+0-1)-0] & 63)), -2147483648, 2147483647);
								y_iend_123209 = addInt(y_iend_123209, 6);
								}
								else {
									p_rune_123210 = 65533;
									y_iend_123209 = addInt(y_iend_123209, 1);
								}
								
								}
								else {
									p_rune_123210 = chckRange(s_118105[chckIndx(y_iend_123209, 0, s_118105.length+0-1)-0], -2147483648, 2147483647);
									y_iend_123209 = addInt(y_iend_123209, 1);
								}
								}}}}}
								if ((y_iend_123209 < x_i_120614)) {
								break L5;
								}
								
								i_120613 = y_i_123207;
								rune_120615 = p_rune_123210;
								y_i_123207 = subInt(y_i_123207, 1);
							}
					} while(false);
					if (!(contains_114201(runes_118109, rune_120615))) {
					e_i_118113 = subInt(x_i_120614, 1);
					break L3;
					}
					
					i_120613 = subInt(i_120613, 1);
				}
		} while(false);
		}
		
		var new_len_125825 = addInt(subInt(e_i_118113, s_i_118112), 1);
		result_118110 = nimCopy(null, mnewString(0), NTI138);
		if ((0 < new_len_125825)) {
		if (result_118110 != null) { result_118110 = (result_118110).concat(HEX5BHEX5D_62281(s_118105, HEX2EHEX2E_62220(s_i_118112, e_i_118113))); } else { result_118110 = HEX5BHEX5D_62281(s_118105, HEX2EHEX2E_62220(s_i_118112, e_i_118113)).slice(); };
		}
		

	return result_118110;

}

function HEX21HEX24_178294(h_178296) {
	var result_178297 = 0;

		var h_178298 = (h_178296 >>> 0);
		var res_178311 = ((h_178298 + (h_178298 << 3)) >>> 0);
		res_178311 = (res_178311 ^ ((res_178311 >>> 0) >>> 11));
		res_178311 = ((res_178311 + (res_178311 << 15)) >>> 0);
		result_178297 = (res_178311|0);

	return result_178297;

}

function hash_298335(x_298337) {
	var result_298338 = 0;

		result_298338 = HEX21HEX26_178244(HEX21HEX26_178244(HEX21HEX26_178244(hash_180014(nuctoLowerStr(nucStrip(x_298337.name, true, true, [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288]))), hash_180014(nuctoLowerStr(nucStrip(x_298337.sector.postalCode, true, true, [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288])))), hash_180014(nuctoLowerStr(nucStrip(x_298337.sector.city, true, true, [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288])))), hash_180014(nuctoLowerStr(nucStrip(x_298337.sector.district, true, true, [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288]))));
		result_298338 = HEX21HEX24_178294(result_298338);

	return result_298338;

}

function init_tbl_tot_fam_by_street_300822() {
							var Tmp8;
							var Tmp9;
							var Tmp10;
							var Tmp11;
							var Tmp12;
							var Tmp13;

	var result_300846 = [{data: null, counter: 0}];

		nimCopy(result_300846[0], init_table_300849(64), NTI300833);
		var streets_301229 = nsuSplitCharSet(makeNimstrLit("Plz|DistrictUser|City|District|Street|TotalFamilies\x0A63628|Ahl|Bad Soden-Salm\xC3\xBCnster|Ahl|Am Hang|1\x0A63628|Ahl|Bad Soden-Salm\xC3\xBCnster|Ahl|Sch\xC3\xB6ne Aussicht|2\x0A63628|Ahl||||3\x0A63628|Alsberg|Bad Soden-Salm\xC3\xBCnster|Alsberg|Ringstra\xC3\x9Fe|1\x0A63628|Alsberg||||1\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany|Linsengericht|Altenha\xC3\x9Flau|Elf Morgen|1\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany|Linsengericht|Altenha\xC3\x9Flau|Fasanenweg|3\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany|Linsengericht|Altenha\xC3\x9Flau|Metzgerstra\xC3\x9Fe|1\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany|Linsengericht|Altenha\xC3\x9Flau|Rosenstra\xC3\x9Fe|1\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany|Linsengericht|Altenha\xC3\x9Flau|Strumpelburg|2\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany|Linsengericht|Altenha\xC3\x9Flau|Vor der Au|1\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany||||9\x0A63579|Altenmittlau|Freigericht|Altenmittlau|An der Freigerichthalle|1\x0A63579|Altenmittlau|Freigericht|Altenmittlau|Industriestra\xC3\x9Fe|2\x0A63579|Altenmittlau|Freigericht||Kalkbergstra\xC3\x9Fe|1\x0A63579|Altenmittlau|Freigericht|Altenmittlau|Kolpingstra\xC3\x9Fe|3\x0A63579|Altenmittlau|Freigericht|Altenmittlau|Somborner Stra\xC3\x9Fe|1\x0A63579|Altenmittlau||||8\x0A63674|Altenstadt|Altenstadt|Altenstadt|Alemannenstra\xC3\x9Fe|4\x0A63674|Altenstadt|Altenstadt|Altenstadt|An der Hollerstaude|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|An der Steinkaute|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|Auf der Mauer|2\x0A63674|Altenstadt|Altenstadt|Altenstadt|Borngasse|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|Frankfurter Stra\xC3\x9Fe|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|Goethestra\xC3\x9Fe|4\x0A63674|Altenstadt|Altenstadt|Altenstadt|Hadrianstra\xC3\x9Fe|4\x0A63674|Altenstadt|Altenstadt|Altenstadt|Hanauer Stra\xC3\x9Fe|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|Kirchgasse|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|R\xC3\xB6merbrunnen|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|Seilerstra\xC3\x9Fe|2\x0A63674|Altenstadt||||23\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|Bamberger Stra\xC3\x9Fe|2\x0A63607|Aufenau|W\xC3\xA4chtersbach||Frankfurter Stra\xC3\x9Fe|9\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|F\xC3\xBCrther Stra\xC3\x9Fe|2\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|Grimmstra\xC3\x9Fe|4\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|Hermann-L\xC3\xB6ns-Stra\xC3\x9Fe|1\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|Kantstra\xC3\x9Fe|1\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|Martin-Luther-Stra\xC3\x9Fe|1\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|M\xC3\xBCnchener Stra\xC3\x9Fe|2\x0A63607|Aufenau||||22\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Am Linsenhof|2\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster||An der Rolandquelle|2\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Auf der Hohl|2\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Bornweg|7\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Burgstra\xC3\x9Fe|4\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Feldstra\xC3\x9Fe|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Hegelstra\xC3\x9Fe|5\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Hochstra\xC3\x9Fe|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Hohm\xC3\xBChlenweg|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Honiggasse|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Kantstra\xC3\x9Fe|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Karl-Roth-Stra\xC3\x9Fe|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Pacificusstra\xC3\x9Fe|4\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster||Romsthaler Stra\xC3\x9Fe|11\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Rudolf-Berta-Stra\xC3\x9Fe|6\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Sprudelallee|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Stolzenthalstra\xC3\x9Fe|17\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Weilersweg|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Bad Sodener Stra\xC3\x9Fe|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Bahnhofstra\xC3\x9Fe|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Frankfurter Stra\xC3\x9Fe|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Fuldaer Stra\xC3\x9Fe|12\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Hanauer Landstra\xC3\x9Fe|13\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Joseph-M\xC3\xBCller-Stra\xC3\x9Fe|2\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Kettelerstra\xC3\x9Fe|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|M\xC3\xBCnsterbergstra\xC3\x9Fe|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Philipp-Reis-Stra\xC3\x9Fe|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|R\xC3\xBCckm\xC3\xBChlenweg|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Schillerstra\xC3\x9Fe|4\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Schwedenring|4\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Spessartstra\xC3\x9Fe|9\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Sudetenlandstra\xC3\x9Fe|7\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Winkelgasse|1\x0A63628|B.Soden-Salm\xC3\xBCns.||||141\x0A63619|Bad Orb|Bad Orb|Bad Orb|Altenbergstra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Am Schafstrieb|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Austra\xC3\x9Fe|5\x0A63619|Bad Orb|Bad Orb|Bad Orb|Berliner Stra\xC3\x9Fe|2\x0A63619|Bad Orb|Bad Orb|Bad Orb|Burgstra\xC3\x9Fe|4\x0A63619|Bad Orb|Bad Orb|Bad Orb|Eichendorffstra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Faulhaberstra\xC3\x9Fe|4\x0A63619|Bad Orb|Bad Orb|Bad Orb|F\xC3\xBCllweinstra\xC3\x9Fe|3\x0A63619|Bad Orb|Bad Orb|Bad Orb|Kinzigweg|2\x0A63619|Bad Orb|Bad Orb|Bad Orb|Lauzenstra\xC3\x9Fe|4\x0A63619|Bad Orb|Bad Orb|Bad Orb|Martin-Luther-Stra\xC3\x9Fe|5\x0A63619|Bad Orb|Bad Orb|Bad Orb|Mittelweg|6\x0A63619|Bad Orb|Bad Orb|Bad Orb|Taunusstra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Uferweg|2\x0A63619|Bad Orb|Bad Orb|Bad Orb|W\xC3\xA4chtersbacher Weg|4\x0A63619|Bad Orb|Bad Orb|Bad Orb|Wemmstra\xC3\x9Fe|2\x0A63619|Bad Orb|Bad Orb|Bad Orb|Bayernweg|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Bennweg|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Burgring|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Eduard-Gr\xC3\xA4f-Stra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Frankenweg|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Frankfurter Stra\xC3\x9Fe|2\x0A63619|Bad Orb|Bad Orb|Bad Orb|Friedrichstalstra\xC3\x9Fe|6\x0A63619|Bad Orb|Bad Orb|Bad Orb|Hubertusstra\xC3\x9Fe|6\x0A63619|Bad Orb|Bad Orb|Bad Orb|Johann-B\xC3\xBCttel-Stra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Kanalstra\xC3\x9Fe|2\x0A63619|Bad Orb|Bad Orb|Bad Orb|Kasselbergweg|11\x0A63619|Bad Orb|Bad Orb|Bad Orb|Leimbachstra\xC3\x9Fe|5\x0A63619|Bad Orb|Bad Orb|Bad Orb|Leopold-Koch-Stra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Lindenallee|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Marktbrunnenstra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Rh\xC3\xB6nstra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Sachsenh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Salzk\xC3\xA4rrnerweg|7\x0A63619|Bad Orb||||97\x0A63594|Bahnhofsiedlung|Hasselroth|Niedermittlau-Bahnhofssiedlung|Berliner Stra\xC3\x9Fe|2\x0A63594|Bahnhofsiedlung|Hasselroth|Niedermittlau-Bahnhofssiedlung|Fichtenstra\xC3\x9Fe|1\x0A63594|Bahnhofsiedlung|Hasselroth|Niedermittlau-Bahnhofssiedlung|Heinrich-Hofmann-Stra\xC3\x9Fe|3\x0A63594|Bahnhofsiedlung|Hasselroth|Niedermittlau-Bahnhofssiedlung|Lindenstra\xC3\x9Fe|1\x0A63594|Bahnhofsiedlung|Hasselroth|Niedermittlau-Bahnhofssiedlung|Waldstra\xC3\x9Fe|1\x0A63594|Bahnhofsiedlung||||8\x0A63579|Bernbach|Freigericht|Bernbach|Birkenhainer Stra\xC3\x9Fe|2\x0A63579|Bernbach|Freigericht|Bernbach|Brentanostra\xC3\x9Fe|1\x0A63579|Bernbach|Freigericht|Neuses|Vogelsbergstra\xC3\x9Fe|1\x0A63579|Bernbach||||4\x0A63599|Bieber|Biebergem\xC3\xBCnd|Bieber|Zimmerwiesenweg|1\x0A63599|Bieber||||1\x0A63633|Birstein|Birstein|Birstein|An der Riedwiese|2\x0A63633|Birstein|Birstein|Birstein|Bornwiesenweg|1\x0A63633|Birstein|Birstein|Birstein|B\xC3\xBCdinger Stra\xC3\x9Fe|1\x0A63633|Birstein|Birstein|Birstein|F\xC3\xBCnfkirchener Stra\xC3\x9Fe|3\x0A63633|Birstein|Birstein|Birstein|M\xC3\xBChlweg|1\x0A63633|Birstein|Birstein|Birstein|Rh\xC3\xB6nstra\xC3\x9Fe|1\x0A63633|Birstein|Birstein|Birstein|Spessartstra\xC3\x9Fe|3\x0A63633|Birstein|Birstein|Birstein|Steinweg|1\x0A63633|Birstein|Birstein|Birstein|Anton-Praetorius-Weg|2\x0A63633|Birstein|Birstein|Birstein|Bathwiesenweg|5\x0A63633|Birstein|Birstein|Birstein|Charlottenstra\xC3\x9Fe|15\x0A63633|Birstein|Birstein|Birstein|Julius-Hufnagel-Weg|3\x0A63633|Birstein|Birstein|Birstein|Katharinenstra\xC3\x9Fe|4\x0A63633|Birstein|Birstein|Birstein|Raiffeisenstra\xC3\x9Fe|5\x0A63633|Birstein|Birstein|Birstein|Sophienstra\xC3\x9Fe|6\x0A63633|Birstein|Birstein|Birstein|Zehntefeld|4\x0A63633|Birstein||||57\x0A63633|B\xC3\xB6sges\xC3\xA4\xC3\x9F|Birstein|B\xC3\xB6ssges\xC3\xA4\xC3\x9F|Grundweg|2\x0A63633|B\xC3\xB6sges\xC3\xA4\xC3\x9F||||2\x0A63599|Breitenborn|Gr\xC3\xBCndau|Breitenborn A.W.|Bergwiesenstra\xC3\x9Fe|1\x0A63599|Breitenborn|Gr\xC3\xBCndau|Breitenborn A.W.|Buchenweg|1\x0A63599|Breitenborn|Gr\xC3\xBCndau|Breitenborn A.W.|Hauptstra\xC3\x9Fe|1\x0A63599|Breitenborn|Biebergem\xC3\xBCnd|Breitenborn|Lanzinger Stra\xC3\x9Fe|1\x0A63599|Breitenborn||||4\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|August-Bebel-Stra\xC3\x9Fe|2\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Buchenweg|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Erich-Ollenhauer-Stra\xC3\x9Fe|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Ernst-Reuter-Stra\xC3\x9Fe|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Gleiwitzer Stra\xC3\x9Fe|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Hauptstra\xC3\x9Fe|2\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Im Niederried|3\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Kettelerstra\xC3\x9Fe|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Kirleweg|2\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|K\xC3\xB6nigsberger Stra\xC3\x9Fe|2\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Lindenallee|3\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Tilsiter Stra\xC3\x9Fe|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Udo-M\xC3\xBCller-Ring|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Varang\xC3\xA9viller Stra\xC3\x9Fe|2\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Walter-Rathenau-Stra\xC3\x9Fe|2\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Innerer Ring|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Kellereigasse|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Saalburgring|4\x0A63486|Bruchk\xC3\xB6bel||||31\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Nu\xC3\x9Fgraben|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Schlag|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Wildenstein|4\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Bismarckstra\xC3\x9Fe|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Friedrich-Fendt-Stra\xC3\x9Fe|8\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Gymnasiumstra\xC3\x9Fe|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Kastanienring|3\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Kellergasse|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|M\xC3\xBChltorstra\xC3\x9Fe|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Wilhelm-Dotter-Stra\xC3\x9Fe|3\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Alten Viadukt|12\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Klarengarten|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Im Flachsgrund|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|In den Weiherwiesen|12\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|An der Kleibscheibe|3\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Industriestra\xC3\x9Fe|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Salzbachaue|9\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Thiergartenstra\xC3\x9Fe|22\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Am Hofacker|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Auf dem Biehm|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen||Calbacher Stra\xC3\x9Fe|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Finkenweg|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Hauptstra\xC3\x9Fe|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Im Einzel|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Im Hinterfeld|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Im Hoffeld|10\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Otto-Beppler-Stra\xC3\x9Fe|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Schulstra\xC3\x9Fe|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Waldstra\xC3\x9Fe|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Wilhelm-Leuschner-Stra\xC3\x9Fe|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Zum Seemenbach|1\x0A63654|B\xC3\xBCdingen||||114\x0A63165|Dietesheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|B\xC3\xBCrgermeister-Hainz-Stra\xC3\x9Fe|8\x0A63165|Dietesheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Elisabethenstra\xC3\x9Fe|10\x0A63165|Dietesheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Thomas-Mann-Stra\xC3\x9Fe|3\x0A63165|Dietesheim||||21\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Am Bieberbach|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Am Steinberg|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|B\xC3\xB6llstra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Gallische Stra\xC3\x9Fe|3\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Georg-August-Zinn-Stra\xC3\x9Fe|2\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Gertrud-Kolmar-Weg|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Gustav-Heinemann-Ring|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Konrad-Adenauer-Allee|2\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Kurt-Schumacher-Allee|2\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Langg\xC3\xA4sserstra\xC3\x9Fe|2\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Neckarstra\xC3\x9Fe|3\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Nibelungenstra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Patersh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Pestalozzistra\xC3\x9Fe|3\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Rheinstra\xC3\x9Fe|11\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Ringelnatzstra\xC3\x9Fe|2\x0A63128|Dietzenbach|Dietzenbach|Steinberg|R\xC3\xB6merstra\xC3\x9Fe|2\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Schlegelstra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Siedlerstra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Staufenstra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Taunusstra\xC3\x9Fe|9\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Thomas-Mann-Ring|1\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Aschaffenburger Weg|4\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Babenh\xC3\xA4user Stra\xC3\x9Fe|2\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Glash\xC3\xBCttener Weg|4\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Konrad-Lang-Stra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Marktheidenfelder Weg|3\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Rodgaustra\xC3\x9Fe|5\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Rohrbrunner Weg|2\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Talstra\xC3\x9Fe|6\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Tulpenstra\xC3\x9Fe|2\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Wertheimer Weg|1\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Wiesenstra\xC3\x9Fe|3\x0A63128|Dietzenbach||||85\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Backesweg|1\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Beethovenstra\xC3\x9Fe|1\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Berliner Stra\xC3\x9Fe|1\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Bonhoefferstra\xC3\x9Fe|2\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Hermann-L\xC3\xB6ns-Stra\xC3\x9Fe|4\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|In der Mainaue|1\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|K\xC3\xA4the-Kollwitz-Stra\xC3\x9Fe|12\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|S\xC3\xBCdring|4\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Westendstra\xC3\x9Fe|4\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Wilhelmsbader Stra\xC3\x9Fe|1\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Wingertstra\xC3\x9Fe|1\x0A63477|D\xC3\xB6rnigheim||||32\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Am Alten S\xC3\xA4gewerk|2\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Am R\xC3\xBCckersgraben|8\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Dekan-Schuster-Stra\xC3\x9Fe|1\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Nieuwpoorter Stra\xC3\x9Fe|1\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Raiffeisenstra\xC3\x9Fe|1\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Saalburgring|2\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Spessartring|10\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Dr.-Weinholz-Stra\xC3\x9Fe|1\x0A63110|Dudenhofen||||26\x0A63628|Eckardroth|Bad Soden-Salm\xC3\xBCnster|Eckardroth-Wahlert|Bergstra\xC3\x9Fe|1\x0A63628|Eckardroth|Bad Soden-Salm\xC3\xBCnster|Eckardroth-Wahlert|Oberweg|2\x0A63628|Eckardroth|Bad Soden-Salm\xC3\xBCnster|Eckardroth-Wahlert|Stiftungsstra\xC3\x9Fe|4\x0A63628|Eckardroth||||7\x0A63654|Eckartshausen|B\xC3\xBCdingen|Eckartshausen|Lohrbergstra\xC3\x9Fe|1\x0A63654|Eckartshausen||||1\x0A61130|Eichen|Nidderau|Eichen|Kleine Gasse|3\x0A61130|Eichen||||3\x0A63589|Eidenges\xC3\xA4\xC3\x9F|Linsengericht|Eidenges\xC3\xA4\xC3\x9F|Dettersweg|2\x0A63589|Eidenges\xC3\xA4\xC3\x9F|Linsengericht|Eidenges\xC3\xA4\xC3\x9F|Im Bangertsfeld|1\x0A63589|Eidenges\xC3\xA4\xC3\x9F||||3\x0A61130|Erbstadt|Nidderau|Erbstadt|Bogenstra\xC3\x9Fe|2\x0A61130|Erbstadt|Nidderau|Erbstadt|Hauptstra\xC3\x9Fe|1\x0A61130|Erbstadt||||3\x0A63639 Sum|Fl\xC3\xB6rsbach|Fl\xC3\xB6rsbachtal|Fl\xC3\xB6rsbach|Gartenweg|1\x0A63639 Sum|Fl\xC3\xB6rsbach|Fl\xC3\xB6rsbachtal|Fl\xC3\xB6rsbach|Huntzelstra\xC3\x9Fe|3\x0A63639 Sum|Fl\xC3\xB6rsbach|Fl\xC3\xB6rsbachtal|Fl\xC3\xB6rsbach|Orber Stra\xC3\x9Fe|1\x0A63639 Sum|Fl\xC3\xB6rsbach||||5\x0A63500|Froschhausen|Seligenstadt|Froschhausen|Hanauer Landstra\xC3\x9Fe|2\x0A63500|Froschhausen|Seligenstadt|Froschhausen|Mittelstra\xC3\x9Fe|1\x0A63500|Froschhausen|Seligenstadt|Froschhausen|Seligenst\xC3\xA4dter Stra\xC3\x9Fe|1\x0A63500|Froschhausen||||4\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Barbarossastra\xC3\x9Fe|1\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Grimmelshausenstra\xC3\x9Fe|2\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Herzbachweg|15\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Im Setzling|3\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|In der Brug|1\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Kapellenweg|1\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Kuhgasse|3\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|M\xC3\xBChlbachweg|2\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Pappelweg|2\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Parkstra\xC3\x9Fe|1\x0A63571|Gelnhausen-Nord||||31\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Am Galgenfeld|3\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Clamecystra\xC3\x9Fe|16\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Dr.-Sondheimer-Stra\xC3\x9Fe|2\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Frankfurter Stra\xC3\x9Fe|1\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Franklinstra\xC3\x9Fe|1\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Graslitzer Stra\xC3\x9Fe|2\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Im Weiherfeld|5\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Lohm\xC3\xBChlenweg|18\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Rudolf-Diesel-Stra\xC3\x9Fe|1\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Uferweg|1\x0A63571|Gelnhausen-S\xC3\xBCd||||50\x0A63695|Glauberg, Glauburg, Deutschland|Glauburg|Glauberg|Ladestra\xC3\x9Fe|2\x0A63695|Glauberg, Glauburg, Deutschland|Glauburg|Glauberg|Wallgasse|1\x0A63695|Glauberg, Glauburg, Deutschland||||3\x0A63594|Gondsroth|Hasselroth|Gondsroth|Hauptstra\xC3\x9Fe|1\x0A63594|Gondsroth|Hasselroth|Gondsroth|Schulstra\xC3\x9Fe|2\x0A63594|Gondsroth||||3\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Brown-Boveri-Stra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Carl-Kronenberger-Stra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Hainbachstra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Karl-Kihn-Stra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Krotzenburger Stra\xC3\x9Fe|2\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Otto-Gr\xC3\xBCn-Stra\xC3\x9Fe|2\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Spitzenweg|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Zum Torfbruch|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Annette-Kolb-Weg|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Annette-von-Droste-H\xC3\xBClshoff-Weg|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|August-Gaul-Stra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Bahnhofstra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Bertolt-Brecht-Weg|4\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Franz-Kafka-Weg|3\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Goethestra\xC3\x9Fe|3\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Hauptstra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Ingeborg-Bachmann-Weg|3\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Lion-Feuchtwanger-Weg|5\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Rudolf-Hagelstange-Weg|3\x0A63457|Gro\xC3\x9Fauheim||||36\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Molkenborn|9\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Pfaffenwald|3\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|An der Schildwache|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Gr\xC3\xBCnwaldweg|2\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Pferdsbacher Weg|3\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen||Vogelsbergstra\xC3\x9Fe|3\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Zum Stadtgraben|2\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Kreischborn|2\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheimer Stra\xC3\x9Fe|3\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Eichelbergring|2\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Ostpreu\xC3\x9Fenstra\xC3\x9Fe|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Sudetenstra\xC3\x9Fe|7\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|\xC3\x9Cber den Roten Gr\xC3\xA4ben|4\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Bahnhofstra\xC3\x9Fe|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Berliner Stra\xC3\x9Fe|4\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Lorbacher Stra\xC3\x9Fe|8\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen||Orlesh\xC3\xA4user Stra\xC3\x9Fe|4\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen||\xC3\x9Cber der Seeme|3\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Im Lipperts|21\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Lorbacher Stra\xC3\x9Fe|7\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|An der Fahrbach|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Bahnhofstra\xC3\x9Fe|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Mackensenstra\xC3\x9Fe|8\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|M\xC3\xA4usfall|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Schillerstra\xC3\x9Fe|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Seemenbachstra\xC3\x9Fe|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen||Vogelsbergstra\xC3\x9Fe|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany||||104\x0A63589|Gro\xC3\x9Fenhausen|Linsengericht|Gro\xC3\x9Fenhausen|Kastanienstra\xC3\x9Fe|1\x0A63589|Gro\xC3\x9Fenhausen|Linsengericht|Gro\xC3\x9Fenhausen|Nordstra\xC3\x9Fe|1\x0A63589|Gro\xC3\x9Fenhausen||||2\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Albert-Einstein-Stra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Bahnhofstra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Danziger Stra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gutenbergallee|4\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Im Flachsgewann|2\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Max-Planck-Stra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Melmensee|3\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Oberwaldstra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Rh\xC3\xB6nstra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Robert-Koch-Weg|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Taunusstra\xC3\x9Fe|4\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Torsbyv\xC3\xA4gen|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Wahlersee|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Bahnhofstra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Beethovenstra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Wilhelmstra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg||||25\x0A63571|Hailer|Gelnhausen|Hailer|Am Fa\xC3\x9Fholzwerk|1\x0A63571|Hailer|Gelnhausen|Hailer|Bl\xC3\xBCmgesgrundstra\xC3\x9Fe|1\x0A63571|Hailer|Gelnhausen|Hailer|Dr.-Heinrich-Mohn-Stra\xC3\x9Fe|5\x0A63571|Hailer|Gelnhausen|Hailer|Eisenbahnstra\xC3\x9Fe|6\x0A63571|Hailer|Gelnhausen|Hailer|Gelnh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63571|Hailer|Gelnhausen|Hailer|Gr\xC3\xBCner Weg|5\x0A63571|Hailer|Gelnhausen|Hailer|Jahnstra\xC3\x9Fe|1\x0A63571|Hailer|Gelnhausen|Hailer|Reinhardstra\xC3\x9Fe|1\x0A63571|Hailer|Gelnhausen|Hailer|Sudetenstra\xC3\x9Fe|2\x0A63571|Hailer|Gelnhausen|Hailer|Vorm R\xC3\xB6hrig|5\x0A63571|Hailer||||28\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Burgstra\xC3\x9Fe|1\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Hainstra\xC3\x9Fe|2\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Hochstra\xC3\x9Fe|1\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Ortsberingweg|1\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Schmiedegasse|1\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Weidenstra\xC3\x9Fe|2\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Zur K\xC3\xB6nigseiche|2\x0A63584|Hain-Gr\xC3\xBCndau||||10\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Hainhausen|Br\xC3\xBCder-Grimm-Stra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Weiskirchen|Dietrich-Bonhoeffer-Stra\xC3\x9Fe|3\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Hainhausen|Eppsteiner Stra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Weiskirchen|Friedrich-Ebert-Stra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Weiskirchen|Hainh\xC3\xA4user Stra\xC3\x9Fe|2\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Weiskirchen|Hauptstra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Weiskirchen|Kolpingstra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Hainhausen|Rochusstra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Hainhausen|Rubensstra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Hainhausen|Wilhelm-Leuschner-Stra\xC3\x9Fe|5\x0A63110|Hainhausen,We\xC3\x9Fkirchen||||17\x0A63512|Hainstadt|Hainburg||Bachgasse|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Bahnhofstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Friedhofstra\xC3\x9Fe|2\x0A63512|Hainstadt|Hainburg|Hainstadt|Hainst\xC3\xA4dter Stra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Hauptstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Wilhelmstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Am Kiefernhain|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Dresdener Stra\xC3\x9Fe|2\x0A63512|Hainstadt|Hainburg|Hainstadt|Erfurter Stra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Fichtestra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Gablonzer Stra\xC3\x9Fe|2\x0A63512|Hainstadt|Hainburg|Hainstadt|Gartenstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Im L\xC3\xB6schem|1\x0A63512|Hainstadt|Hainburg|Hainstadt|K\xC3\xB6nigsberger Stra\xC3\x9Fe|4\x0A63512|Hainstadt|Hainburg|Hainstadt|Leipziger Stra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Offenbacher Landstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Reichenberger Ring|2\x0A63512|Hainstadt|Hainburg|Hainstadt|Schillerstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Uhlandstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Waldstra\xC3\x9Fe|1\x0A63512|Hainstadt||||27\x0A63571|Haitz|Gelnhausen|Haitz|Am Bocksborn|2\x0A63571|Haitz|Gelnhausen|Haitz|Am Kandelrain|1\x0A63571|Haitz|Gelnhausen|Haitz|Am Langen Steg|1\x0A63571|Haitz|Gelnhausen|Gelnhausen|Barbarossastra\xC3\x9Fe|4\x0A63571|Haitz|Gelnhausen|Haitz|Birsteiner Stra\xC3\x9Fe|2\x0A63571|Haitz|Gelnhausen|Haitz|Dorfstra\xC3\x9Fe|1\x0A63571|Haitz|Gelnhausen|Haitz|Dr.-Faust-Stra\xC3\x9Fe|2\x0A63571|Haitz|Gelnhausen|Gelnhausen|Fuldaweg|2\x0A63571|Haitz|Gelnhausen|Gelnhausen|Himmelauer M\xC3\xBChle|1\x0A63571|Haitz|Gelnhausen|Gelnhausen|Kinzigstra\xC3\x9Fe|13\x0A63571|Haitz|Gelnhausen||Kremp\'sche Spitze|4\x0A63571|Haitz|Gelnhausen|Gelnhausen|Mainstra\xC3\x9Fe|7\x0A63571|Haitz|Gelnhausen|Haitz|Neuer Weg|1\x0A63571|Haitz|Gelnhausen|Haitz|Sch\xC3\xB6ne Aussicht|1\x0A63571|Haitz|Gelnhausen|Meerholz|Spessartstra\xC3\x9Fe|2\x0A63571|Haitz|Gelnhausen|Haitz|Zum Taubengarten|8\x0A63571|Haitz||||52\x0A63450|Hanau|Hanau|Hanau|Altstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Am Frankfurter Tor|4\x0A63450|Hanau|Hanau|Hanau|Eugen-Kaiser-Stra\xC3\x9Fe|2\x0A63450|Hanau|Hanau|Hanau|Fischerh\xC3\xBCttenweg|1\x0A63450|Hanau|Hanau|Hanau|G\xC3\xA4rtnerstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Glockenstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|In den T\xC3\xBCrkischen G\xC3\xA4rten|2\x0A63450|Hanau|Hanau|Hanau|Johanneskirchplatz|1\x0A63450|Hanau|Hanau|Hanau|Karl-R\xC3\xB6ttelberg-Stra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Kinzigstra\xC3\x9Fe|2\x0A63450|Hanau|Hanau|Hanau|Kr\xC3\xA4merstra\xC3\x9Fe|2\x0A63450|Hanau|Hanau|Hanau|Lothringer Stra\xC3\x9Fe|3\x0A63450|Hanau|Hanau|Hanau|M\xC3\xBChlstra\xC3\x9Fe|11\x0A63450|Hanau|Hanau|Hanau|Nordstra\xC3\x9Fe|3\x0A63450|Hanau|Hanau|Hanau|Nu\xC3\x9Fallee|3\x0A63450|Hanau|Hanau|Hanau|Ramsaystra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|R\xC3\xB6merstra\xC3\x9Fe|5\x0A63450|Hanau|Hanau|Hanau|R\xC3\xBChlstra\xC3\x9Fe|4\x0A63450|Hanau|Hanau|Hanau|Sch\xC3\xBCtzenstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Steinheimer Stra\xC3\x9Fe|5\x0A63450|Hanau|Hanau|Hanau|Vor dem Kanaltor|2\x0A63450|Hanau|Hanau|Hanau|Akademiestra\xC3\x9Fe|2\x0A63450|Hanau|Hanau|Hanau|Am Hauptbahnhof|2\x0A63450|Hanau|Hanau|Hanau|Am Krawallgraben|1\x0A63450|Hanau|Hanau|Hanau|Barbarossastra\xC3\x9Fe|3\x0A63450|Hanau|Hanau|Hanau|B\xC3\xBCchnerstra\xC3\x9Fe|5\x0A63450|Hanau|Hanau|Hanau|Dettinger Stra\xC3\x9Fe|5\x0A63450|Hanau|Hanau|Hanau|Engelhardstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Freigerichtstra\xC3\x9Fe|5\x0A63450|Hanau|Hanau|Hanau|Friedrichstra\xC3\x9Fe|9\x0A63450|Hanau|Hanau|Hanau|Gallienstra\xC3\x9Fe|3\x0A63450|Hanau|Hanau|Hanau|Grimmelshausenstra\xC3\x9Fe|8\x0A63450|Hanau|Hanau|Hanau|Industrieweg|1\x0A63450|Hanau|Hanau|Hanau|Landwehr|2\x0A63450|Hanau|Hanau|Hanau|Matthias-Da\xC3\x9Fbach-Stra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Milseburgstra\xC3\x9Fe|5\x0A63450|Hanau|Hanau|Hanau|Ottostra\xC3\x9Fe|6\x0A63450|Hanau|Hanau|Hanau|Ronneburgstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Saalburgstra\xC3\x9Fe|2\x0A63450|Hanau|Hanau|Hanau|Auheimer Stra\xC3\x9Fe|4\x0A63450|Hanau|Hanau|Gro\xC3\x9Fauheim|Hanauer Landstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Mainstra\xC3\x9Fe|1\x0A63450|Hanau||||124\x0A63452|Hanau-Nord|Hanau|Hanau|Alter R\xC3\xBCckinger Weg|12\x0A63452|Hanau-Nord|Hanau|Hanau|B\xC3\xBCdinger Stra\xC3\x9Fe|52\x0A63452|Hanau-Nord|Hanau|Hanau|D\xC3\xB6rnigheimer Stra\xC3\x9Fe|6\x0A63452|Hanau-Nord|Hanau|Hanau|Vor der Kinzigbr\xC3\xBCcke|1\x0A63452|Hanau-Nord|Hanau|Hanau|Alter R\xC3\xBCckinger Weg|23\x0A63452|Hanau-Nord|Hanau|Hanau|Antoniterstra\xC3\x9Fe|21\x0A63452|Hanau-Nord|Hanau|Hanau|Friedberger Stra\xC3\x9Fe|7\x0A63452|Hanau-Nord|Hanau|Hanau|Im Venussee|1\x0A63452|Hanau-Nord|Hanau|Hanau|Reichenberger Stra\xC3\x9Fe|11\x0A63452|Hanau-Nord||||134\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Albert-Schweitzer-Stra\xC3\x9Fe|3\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Austra\xC3\x9Fe|8\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Bachstra\xC3\x9Fe|3\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Bauerbachstra\xC3\x9Fe|3\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Bernardstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Birkenwaldstra\xC3\x9Fe|24\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Dieburger Stra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Dreieichstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Egerl\xC3\xA4nder Platz|7\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Feldstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Forststra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Frankfurter Stra\xC3\x9Fe|8\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Gumbertseestra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Herrnstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Kapellenstra\xC3\x9Fe|2\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|L\xC3\xA4mmerspieler Stra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Laubenstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Maingaustra\xC3\x9Fe|8\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|M\xC3\xBChlstra\xC3\x9Fe|2\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Pater-Delp-Stra\xC3\x9Fe|2\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Platanenstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Richard-Wagner-Stra\xC3\x9Fe|11\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Robert-Koch-Stra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Sch\xC3\xB6nbornstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Schubertstra\xC3\x9Fe|6\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Seligenst\xC3\xA4dter Stra\xC3\x9Fe|23\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Sudetenstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Tempelhofer Stra\xC3\x9Fe|2\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Tulpenstra\xC3\x9Fe|3\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Von-Behring-Stra\xC3\x9Fe|3\x0A63179|Obertshausen Hausen||||131\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Aachener Stra\xC3\x9Fe|4\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|Ahornstra\xC3\x9Fe|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Bonner Stra\xC3\x9Fe|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Dresdener Stra\xC3\x9Fe|6\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|Fichtenstra\xC3\x9Fe|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|Ginsterweg|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Gustav-Kastropp-Stra\xC3\x9Fe|3\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Heinrich-Hofmann-Stra\xC3\x9Fe|8\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|Josef-Leistenschneider-Stra\xC3\x9Fe|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|K\xC3\xB6lner Stra\xC3\x9Fe|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|L\xC3\xA4rchenweg|2\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|Lavendelweg|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|M\xC3\xBCnchener Stra\xC3\x9Fe|8\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|Platanenstra\xC3\x9Fe|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Potsdamer Stra\xC3\x9Fe|4\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Weinstra\xC3\x9Fe|2\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|W\xC3\xBCrzburger Stra\xC3\x9Fe|2\x0A63628|Hausen||||47\x0A63674|Heegheim|Altenstadt|Heegheim|Fliederweg|1\x0A63674|Heegheim||||1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Albert-Schweitzer-Stra\xC3\x9Fe|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Am H\xC3\xBCpper|4\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Am Nidderfeld|4\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Am Pfarrgarten|2\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Am Steinweg|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|An der Landwehr|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Beethovenallee|2\x0A61130|Heldenbergen|Nidderau|Heldenbergen|B\xC3\xBCdinger Stra\xC3\x9Fe|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Castellring|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Emil-Nolde-Stra\xC3\x9Fe|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Gartenstra\xC3\x9Fe|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Jenny-Rothschild-Stra\xC3\x9Fe|2\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Saalburgstra\xC3\x9Fe|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Wagnerstra\xC3\x9Fe|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Wilhelm-Leibl-Stra\xC3\x9Fe|1\x0A61130|Heldenbergen||||24\x0A63636 Sum|Hellstein|Brachttal|Hellstein|Breulstra\xC3\x9Fe|1\x0A63636 Sum|Hellstein|Brachttal|Hellstein|Hochstra\xC3\x9Fe|3\x0A63636 Sum|Hellstein|Brachttal|Hellstein|Hochstra\xC3\x9Fe|1\x0A63636 Sum|Hellstein|Brachttal|Hellstein|Oberweg|2\x0A63636 Sum|Hellstein|Brachttal|Hellstein|Raiffeisenstra\xC3\x9Fe|1\x0A63636 Sum|Hellstein|Brachttal|Hellstein|Im Schafstall|6\x0A63636 Sum|Hellstein||||14\x0A63607|Hesseldorf|W\xC3\xA4chtersbach|Hesseldorf|Brachttalstra\xC3\x9Fe|1\x0A63607|Hesseldorf|W\xC3\xA4chtersbach|Hesseldorf|Im Alten Garten|1\x0A63607|Hesseldorf|W\xC3\xA4chtersbach|Hesseldorf|In der Aue|1\x0A63607|Hesseldorf|W\xC3\xA4chtersbach|Hesseldorf|Triebstra\xC3\x9Fe|2\x0A63607|Hesseldorf||||5\x0A63633|Hettersroth|Birstein|Hettersroth|Birkengasse|1\x0A63633|Hettersroth|Birstein|Hettersroth|Brunnenstra\xC3\x9Fe|2\x0A63633|Hettersroth|Birstein|Hettersroth|Haideacker|1\x0A63633|Hettersroth||||4\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Frankfurter Stra\xC3\x9Fe|3\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Friedenstra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Hans-Hemberger-Stra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Im Hohen Gewann|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Landgrebeweg|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Ostendstra\xC3\x9Fe|2\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Paulstra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Albert-Einstein-Stra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Am Frankfurter Weg|14\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Am Lindenbaum|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Berliner Stra\xC3\x9Fe|7\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Borsigstra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Dietrich-Bonhoeffer-Stra\xC3\x9Fe|2\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Feldbergstra\xC3\x9Fe|6\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Hegelstra\xC3\x9Fe|4\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Humboldtstra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Kolpingstra\xC3\x9Fe|4\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Konrad-Adenauer-Stra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Leipziger Ring|3\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Lerchenstra\xC3\x9Fe|10\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Schweitzerstra\xC3\x9Fe|2\x0A63150|Heusenstamm||||67\x0A63699|Hitzkirchen|Kefenrod||Am Lindenberg|7\x0A63699|Hitzkirchen|Kefenrod|Hitzkirchen|Hauptstra\xC3\x9Fe|1\x0A63699|Hitzkirchen||||8\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Am R\xC3\xBCckersberg|1\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Brunnenblick|1\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Hauptstra\xC3\x9Fe|1\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Kasseler Stra\xC3\x9Fe|2\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Ketteler Stra\xC3\x9Fe|1\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Kurzer Weg|1\x0A63674|H\xC3\xB6chst|Gelnhausen|Roth|Leipziger Stra\xC3\x9Fe|2\x0A63674|H\xC3\xB6chst|Gelnhausen||Panoramaweg|1\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Untere Sch\xC3\xB6nau|1\x0A63674|H\xC3\xB6chst|Altenstadt|H\xC3\xB6chst|Am Feldborn|1\x0A63674|H\xC3\xB6chst|Altenstadt|H\xC3\xB6chst|Burgweg|1\x0A63674|H\xC3\xB6chst|Altenstadt|H\xC3\xB6chst|G\xC3\xA4\xC3\x9Fchen|1\x0A63674|H\xC3\xB6chst|Altenstadt|H\xC3\xB6chst|Ringstra\xC3\x9Fe|3\x0A63674|H\xC3\xB6chst||||17\x0A63477|Hochstadt|Maintal|Hochstadt|Altk\xC3\xB6nigstra\xC3\x9Fe|2\x0A63477|Hochstadt|Maintal|Hochstadt|Am Weides|1\x0A63477|Hochstadt|Maintal|Hochstadt|Bernauer Stra\xC3\x9Fe|1\x0A63477|Hochstadt|Maintal|Hochstadt|Bischofsheimer Stra\xC3\x9Fe|1\x0A63477|Hochstadt|Maintal|Hochstadt|Maulbeerweg|4\x0A63477|Hochstadt|Maintal|Hochstadt|Ringstra\xC3\x9Fe S\xC3\xBCd|2\x0A63477|Hochstadt|Maintal|Hochstadt|Speierlingweg|1\x0A63477|Hochstadt|Maintal|Hochstadt|Wilhelm-Mankel-Stra\xC3\x9Fe|1\x0A63477|Hochstadt||||13\x0A63579|Horbach|Freigericht|Horbach|Am Sandberg|1\x0A63579|Horbach|Freigericht|Bernbach|Birkenhainer Stra\xC3\x9Fe|2\x0A63579|Horbach|Freigericht|Horbach|Kirchstra\xC3\x9Fe|1\x0A63579|Horbach|Freigericht|Horbach|M\xC3\xBChlstra\xC3\x9Fe|2\x0A63579|Horbach|Freigericht|Horbach|Wilhelm-Winter-Stra\xC3\x9Fe|1\x0A63579|Horbach||||7\x0A63584|H\xC3\xBChnerhof|Gr\xC3\xBCndau||H\xC3\xBChnerhof|2\x0A63584|H\xC3\xBChnerhof||||2\x0A63549 Sum|H\xC3\xBCttenges\xC3\xA4\xC3\x9F|Ronneburg|H\xC3\xBCttenges\xC3\xA4\xC3\x9F|Im Hartengrund|1\x0A63549 Sum|H\xC3\xBCttenges\xC3\xA4\xC3\x9F||||1\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Berliner Stra\xC3\x9Fe|3\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Carl-von-Ossietzky-Stra\xC3\x9Fe|1\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Dudenh\xC3\xB6fer Stra\xC3\x9Fe|5\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Eifelstra\xC3\x9Fe|4\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Eugen-Roth-Stra\xC3\x9Fe|1\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Friedlandstra\xC3\x9Fe|3\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Grenzstra\xC3\x9Fe|6\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Harzer Stra\xC3\x9Fe|4\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Heinrich-B\xC3\xB6ll-Stra\xC3\x9Fe|1\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Lange Stra\xC3\x9Fe|2\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Marburger Stra\xC3\x9Fe|12\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Paul-Gerhardt-Stra\xC3\x9Fe|5\x0A63110|J\xC3\xBCgesheim||||47\x0A63599|Kassel|Biebergem\xC3\xBCnd|Kassel|Am Burgwerksrain|1\x0A63599|Kassel|Biebergem\xC3\xBCnd|Kassel|Bornweg|1\x0A63599|Kassel|Biebergem\xC3\xBCnd|Kassel|Marienstra\xC3\x9Fe|1\x0A63599|Kassel|Biebergem\xC3\xBCnd|Kassel|Nepomukweg|4\x0A63599|Kassel|Biebergem\xC3\xBCnd|Kassel|Spessartstra\xC3\x9Fe|1\x0A63599|Kassel|Biebergem\xC3\xBCnd|Kassel|Wirtheimer Stra\xC3\x9Fe|3\x0A63599|Kassel||||11\x0A63699|Kefenrod|Kefenrod|Kefenrod|Am Hirtengarten|4\x0A63699|Kefenrod|Kefenrod||An der Hohl|1\x0A63699|Kefenrod|Kefenrod||Bindsachsener Stra\xC3\x9Fe|1\x0A63699|Kefenrod|Kefenrod|Bindsachsen|Gartenstra\xC3\x9Fe|1\x0A63699|Kefenrod|Kefenrod|Kefenrod|Hitzkirchener Stra\xC3\x9Fe|7\x0A63699|Kefenrod|Kefenrod|Kefenrod|Jahnstra\xC3\x9Fe|2\x0A63699|Kefenrod|Kefenrod|Kefenrod|Roseneck|5\x0A63699|Kefenrod|Kefenrod|Kefenrod|Schulstra\xC3\x9Fe|1\x0A63699|Kefenrod|Kefenrod|Kefenrod|Tr\xC3\xA4nkweg|1\x0A63699|Kefenrod||||23\x0A63628|Kerbersdorf|Bad Soden-Salm\xC3\xBCnster|Kerbersdorf|Ziegelh\xC3\xBCttenstra\xC3\x9Fe|2\x0A63628|Kerbersdorf||||2\x0A63454|Kesselstadt|Hanau|Kesselstadt|K\xC3\xB6nigsberger Stra\xC3\x9Fe|12\x0A63454|Kesselstadt|Hanau|Kesselstadt|Schweriner Stra\xC3\x9Fe|17\x0A63454|Kesselstadt|Hanau|Kesselstadt|Stettiner Stra\xC3\x9Fe|2\x0A63454|Kesselstadt|Hanau|Kesselstadt|Kopernikusstra\xC3\x9Fe|20\x0A63454|Kesselstadt|Hanau|Kesselstadt|Potsdamer Stra\xC3\x9Fe|2\x0A63454|Kesselstadt|Hanau|Kesselstadt|Stettiner Stra\xC3\x9Fe|4\x0A63454|Kesselstadt|Hanau|Kesselstadt|Dresdener Stra\xC3\x9Fe|39\x0A63454|Kesselstadt|Hanau|Kesselstadt|Herderweg|1\x0A63454|Kesselstadt|Hanau|Kesselstadt|K\xC3\xB6nigsberger Stra\xC3\x9Fe|19\x0A63454|Kesselstadt|Hanau|Kesselstadt|Kurt-Schumacher-Platz|7\x0A63454|Kesselstadt|Hanau|Kesselstadt|Tilsiter Stra\xC3\x9Fe|3\x0A63454|Kesselstadt|Hanau|Hanau|Burgallee|13\x0A63454|Kesselstadt|Hanau|Kesselstadt|Dresdener Stra\xC3\x9Fe|16\x0A63454|Kesselstadt|Hanau|Kesselstadt|Gerhart-Hauptmann-Stra\xC3\x9Fe|2\x0A63454|Kesselstadt|Hanau|Kesselstadt|Selma-Lagerl\xC3\xB6f-Stra\xC3\x9Fe|3\x0A63454|Kesselstadt|Hanau|Kesselstadt|Fraunhoferstra\xC3\x9Fe|1\x0A63454|Kesselstadt|Hanau|Kesselstadt|Kantstra\xC3\x9Fe|6\x0A63454|Kesselstadt|Hanau|Kesselstadt|Kirchhoffstra\xC3\x9Fe|17\x0A63454|Kesselstadt|Hanau|Kesselstadt|Liebigstra\xC3\x9Fe|1\x0A63454|Kesselstadt|Hanau|Kesselstadt|Philipp-Reis-Stra\xC3\x9Fe|11\x0A63454|Kesselstadt|Hanau|Kesselstadt|Karlsbader Stra\xC3\x9Fe|44\x0A63454|Kesselstadt|Hanau|Kesselstadt|R\xC3\xB6ntgenstra\xC3\x9Fe|13\x0A63454|Kesselstadt|Hanau|Kesselstadt|Am Tiefen Weg|1\x0A63454|Kesselstadt|Hanau|Kesselstadt|Hopfenstra\xC3\x9Fe|1\x0A63454|Kesselstadt|Hanau|Kesselstadt|Kastanienallee|2\x0A63454|Kesselstadt|Hanau|Kesselstadt|Salisweg|3\x0A63454|Kesselstadt||||260\x0A63633|Kirchbracht|Birstein|Kirchbracht|Kreisstra\xC3\x9Fe|1\x0A63633|Kirchbracht||||1\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Alzenauer Stra\xC3\x9Fe|2\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Am Pachtanger|4\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Am Wiesengrund|1\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Bornpfad|1\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Burggartsweidig|5\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Eisenbahnstra\xC3\x9Fe|8\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Feldstra\xC3\x9Fe|5\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|In den Krautg\xC3\xA4rten|1\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Karl-Arnold-Stra\xC3\x9Fe|2\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Kolpingstra\xC3\x9Fe|1\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Obergasse|1\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Seligenst\xC3\xA4dter Stra\xC3\x9Fe|1\x0A63456|Klein-Auheim||||32\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Adolph-Kolping-Stra\xC3\x9Fe|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Anne-Frank-Weg|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Erzbergerstra\xC3\x9Fe|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Fahrstra\xC3\x9Fe|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Geschwister-Scholl-Stra\xC3\x9Fe|9\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Goethestra\xC3\x9Fe|2\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Gutenbergstra\xC3\x9Fe|2\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Hessenstra\xC3\x9Fe|6\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Jahnstra\xC3\x9Fe|2\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Kapellenweg|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Kappesweg|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Kirchstra\xC3\x9Fe|3\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Konrad-Adenauer-Stra\xC3\x9Fe|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Liebigstra\xC3\x9Fe|5\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Ludwig-Erhard-Stra\xC3\x9Fe|2\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Schlesienstra\xC3\x9Fe|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Spessartstra\xC3\x9Fe|7\x0A63512|Klein-Krotzenbrg||||46\x0A63452|Lamboy|Hanau|Hanau|August-Sch\xC3\xA4rttner-Stra\xC3\x9Fe|1\x0A63452|Lamboy|Hanau|Hanau|Breitscheidstra\xC3\x9Fe|3\x0A63452|Lamboy|Hanau|Hanau|Dartforder Stra\xC3\x9Fe|4\x0A63452|Lamboy|Hanau|Hanau|Dr.-Elisabeth-Schmitz-Stra\xC3\x9Fe|8\x0A63452|Lamboy|Hanau|Hanau|Eibenweg|2\x0A63452|Lamboy|Hanau|Hanau|Friedrich-Engels-Stra\xC3\x9Fe|14\x0A63452|Lamboy|Hanau|Hanau|Gabelsbergerstra\xC3\x9Fe|3\x0A63452|Lamboy|Hanau|Hanau|Karl-Marx-Stra\xC3\x9Fe|10\x0A63452|Lamboy|Hanau|Hanau|Kleib\xC3\xB6merstra\xC3\x9Fe|2\x0A63452|Lamboy|Hanau|Hanau|Lenbachstra\xC3\x9Fe|2\x0A63452|Lamboy|Hanau|Hanau|Paul-Ehrlich-Stra\xC3\x9Fe|5\x0A63452|Lamboy|Hanau|Hanau|Plantagenstra\xC3\x9Fe|5\x0A63452|Lamboy|Hanau|Hanau|Richard-K\xC3\xBCch-Stra\xC3\x9Fe|7\x0A63452|Lamboy|Hanau|Hanau|Theodor-Groppe-Stra\xC3\x9Fe|2\x0A63452|Lamboy|Hanau|Hanau|Am T\xC3\xBCmpelgarten|12\x0A63452|Lamboy|Hanau|Hanau|August-Sch\xC3\xA4rttner-Stra\xC3\x9Fe|14\x0A63452|Lamboy|Hanau|Hanau|Kiefernweg|5\x0A63452|Lamboy|Hanau|Hanau|L\xC3\xA4rchenweg|4\x0A63452|Lamboy|Hanau|Hanau|Neuhofstra\xC3\x9Fe|6\x0A63452|Lamboy||||109\x0A63165|L\xC3\xA4mmerspiel|M\xC3\xBChlheim am Main|L\xC3\xA4mmerspiel|Bischof-Ketteler-Stra\xC3\x9Fe|1\x0A63165|L\xC3\xA4mmerspiel|M\xC3\xBChlheim am Main|L\xC3\xA4mmerspiel|Brentanostra\xC3\x9Fe|2\x0A63165|L\xC3\xA4mmerspiel|M\xC3\xBChlheim am Main|L\xC3\xA4mmerspiel|Obertsh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63165|L\xC3\xA4mmerspiel|M\xC3\xBChlheim am Main|L\xC3\xA4mmerspiel|Schumacherstra\xC3\x9Fe|3\x0A63165|L\xC3\xA4mmerspiel|M\xC3\xBChlheim am Main|L\xC3\xA4mmerspiel|Waldstra\xC3\x9Fe|2\x0A63165|L\xC3\xA4mmerspiel||||9\x0A63546 Sum|Langen-Bergheim|Hammersbach|Langen-Bergheim|Wechmarer Ring|1\x0A63546 Sum|Langen-Bergheim||||1\x0A63526|Langendiebach|Erlensee|R\xC3\xBCckingen|Am G\xC3\xA4nseweiher|1\x0A63526|Langendiebach|Erlensee|Langendiebach|Am Rathaus|2\x0A63526|Langendiebach|Erlensee|Langendiebach|August-Bebel-Stra\xC3\x9Fe|1\x0A63526|Langendiebach|Erlensee|Langendiebach|Biggleswadestra\xC3\x9Fe|19\x0A63526|Langendiebach|Erlensee|R\xC3\xBCckingen|Dammstra\xC3\x9Fe|2\x0A63526|Langendiebach|Erlensee|Langendiebach|Fallbachstra\xC3\x9Fe|4\x0A63526|Langendiebach|Erlensee|Langendiebach|Langenselbolder Weg|2\x0A63526|Langendiebach|Erlensee|R\xC3\xBCckingen|Langstra\xC3\x9Fe|2\x0A63526|Langendiebach|Erlensee|Langendiebach|Reu\xC3\x9Ferhofstra\xC3\x9Fe|1\x0A63526|Langendiebach|Erlensee|Langendiebach|Rosenstra\xC3\x9Fe|1\x0A63526|Langendiebach|Erlensee|Langendiebach|R\xC3\xBCdigheimer Weg|2\x0A63526|Langendiebach|Erlensee|Langendiebach|Theodor-Heuss-Stra\xC3\x9Fe|1\x0A63526|Langendiebach|Erlensee|Langendiebach|Vogelsbergstra\xC3\x9Fe|1\x0A63526|Langendiebach|Erlensee|Langendiebach|Wusterwitzer Stra\xC3\x9Fe|18\x0A63526|Langendiebach||||57\x0A63505|Langenselbold|Langenselbold|Langenselbold|Am Br\xC3\xBChl|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Am H\xC3\xA4usergraben|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Bahnstra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Birkenstra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Clara-Schumann-Stra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Clemens-Brentano-Stra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Elise-Meitner-Stra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Emmy-Noether-Stra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Im Stockborn|3\x0A63505|Langenselbold|Langenselbold|Langenselbold|Johann-Strau\xC3\x9F-Allee|2\x0A63505|Langenselbold|Langenselbold|Langenselbold|Kreuze|2\x0A63505|Langenselbold|Langenselbold|Langenselbold|Marie-Curie-Stra\xC3\x9Fe|4\x0A63505|Langenselbold|Langenselbold|Langenselbold|Niedertalstra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Philipp-Reis-Ring|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Robert-Koch-Stra\xC3\x9Fe|5\x0A63505|Langenselbold|Langenselbold|Langenselbold|R\xC3\xB6delbergstra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Schlo\xC3\x9Fstra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Am Pappelried|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Auf der Sieb|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Friedrichstra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Gelnh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Im Ellenb\xC3\xBCgel|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Spessartstra\xC3\x9Fe|1\x0A63505|Langenselbold||||34\x0A63599|Lanzingen|Biebergem\xC3\xBCnd|Lanzingen|Am Gassenacker|1\x0A63599|Lanzingen|Biebergem\xC3\xBCnd|Lanzingen|Breitenborner Stra\xC3\x9Fe|1\x0A63599|Lanzingen|Biebergem\xC3\xBCnd|Lanzingen|Quellenstra\xC3\x9Fe|1\x0A63599|Lanzingen||||3\x0A63607|Leisenwald|W\xC3\xA4chtersbach|Leisenwald|Wolferborner Stra\xC3\x9Fe|2\x0A63607|Leisenwald||||2\x0A63637 Sum|Letgenbrun|Jossgrund|Lettgenbrunn|S\xC3\xBCdm\xC3\xA4hrer Weg|1\x0A63637 Sum|Letgenbrun||||1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Alte Hofstra\xC3\x9Fe|8\x0A63584|Lieblos|Gr\xC3\xBCndau||Alte Leipziger Stra\xC3\x9Fe|2\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Am Dreschplatz|7\x0A63584|Lieblos|Gr\xC3\xBCndau||An der Eisenbahn|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|August-Imhof-Stra\xC3\x9Fe|15\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Breitwiese|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|B\xC3\xBCdinger Stra\xC3\x9Fe|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Dammweg|3\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Faltergartenstra\xC3\x9Fe|2\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Fr\xC3\xB6belstra\xC3\x9Fe|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Mittel-Gr\xC3\xBCndau|Gartenstra\xC3\x9Fe|2\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Herzbergstra\xC3\x9Fe|2\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Im Euler|2\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Langer Rain|2\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Leipziger Stra\xC3\x9Fe|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Meerholzer Landweg|3\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Neugersdorfer Stra\xC3\x9Fe|3\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Nordstra\xC3\x9Fe|3\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Oberfeldstra\xC3\x9Fe|7\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Oberlausitzer Stra\xC3\x9Fe|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|R\xC3\xB6testra\xC3\x9Fe|4\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Sudetenstra\xC3\x9Fe|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Th\xC3\xBCringer Stra\xC3\x9Fe|7\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Weinbergstra\xC3\x9Fe|1\x0A63584|Lieblos||||80\x0A63694|Limeshain|Hasselroth|Neuenha\xC3\x9Flau|Barbarossastra\xC3\x9Fe|1\x0A63694|Limeshain||||1\x0A63674|Lindheim|Altenstadt|Lindheim|Altenst\xC3\xA4dter Stra\xC3\x9Fe|1\x0A63674|Lindheim|Altenstadt|Lindheim|Heugasse|1\x0A63674|Lindheim|Altenstadt||Leimenkautenfeld|2\x0A63674|Lindheim|Altenstadt|Lindheim|Nikkisostra\xC3\x9Fe|1\x0A63674|Lindheim|Altenstadt|Lindheim|Siedlerstra\xC3\x9Fe|3\x0A63674|Lindheim||||8\x0A63639 Sum|Lohrhaupten|Fl\xC3\xB6rsbachtal|Lohrhaupten|Gartenstra\xC3\x9Fe|1\x0A63639 Sum|Lohrhaupten||||1\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|Am Flutgraben|1\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|Am Hellerberg|1\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|An den Drei B\xC3\xA4umen|1\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|Gartenweg|2\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|Hans-Merian-Ring|8\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|Hardecker Stra\xC3\x9Fe|2\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|Herrnhuter Stra\xC3\x9Fe|4\x0A63654|Lorbach||||19\x0A63533|Mainflingen|Mainhausen|Mainflingen|Eichenstra\xC3\x9Fe|1\x0A63533|Mainflingen|Mainhausen|Mainflingen|Hauptstra\xC3\x9Fe|2\x0A63533|Mainflingen|Mainhausen|Mainflingen|Kantstra\xC3\x9Fe|1\x0A63533|Mainflingen|Mainhausen|Mainflingen|Kettelerstra\xC3\x9Fe|2\x0A63533|Mainflingen|Mainhausen|Mainflingen|Martinstra\xC3\x9Fe|1\x0A63533|Mainflingen||||7\x0A63546 Sum|Mark\xC3\xB6bel|Hammersbach|Mark\xC3\xB6bel|Burgstra\xC3\x9Fe|2\x0A63546 Sum|Mark\xC3\xB6bel|Hammersbach|Mark\xC3\xB6bel|Limesstra\xC3\x9Fe|1\x0A63546 Sum|Mark\xC3\xB6bel|Hammersbach|Mark\xC3\xB6bel|R\xC3\xB6merstra\xC3\x9Fe|1\x0A63546 Sum|Mark\xC3\xB6bel||||4\x0A63571|Meerholz|Gelnhausen|Meerholz|Am Pfarrgarten|1\x0A63571|Meerholz|Gelnhausen|Meerholz|Am Schlo\xC3\x9Fgarten|1\x0A63571|Meerholz|Gelnhausen|Meerholz|Am Viadukt|4\x0A63571|Meerholz|Gelnhausen|Meerholz|Amselweg|1\x0A63571|Meerholz|Gelnhausen|Meerholz|Europastra\xC3\x9Fe|1\x0A63571|Meerholz|Gelnhausen|Meerholz|Graf-Gustav-Weg|2\x0A63571|Meerholz|Gelnhausen|Meerholz|Gr\xC3\xA4fin-Thekla-Weg|3\x0A63571|Meerholz|Gelnhausen|Meerholz|Im B\xC3\xB6rner|1\x0A63571|Meerholz|Gelnhausen|Meerholz|K\xC3\xB6nigsberger Stra\xC3\x9Fe|1\x0A63571|Meerholz|Gelnhausen|Meerholz|Mittlauer Weg|2\x0A63571|Meerholz|Gelnhausen|Hailer|Sudetenstra\xC3\x9Fe|1\x0A63571|Meerholz|Gelnhausen|Meerholz|Wiesenbornstra\xC3\x9Fe|3\x0A63571|Meerholz||||21\x0A63654|Michelau|B\xC3\xBCdingen|Michelau|Moosbergstra\xC3\x9Fe|3\x0A63654|Michelau|B\xC3\xBCdingen|Michelau|Wiebelsteinweg|1\x0A63654|Michelau||||4\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Am Haubenflug|1\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Am L\xC3\xBCtzelberg|2\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|An der Gro\xC3\x9Fen Wiese|3\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Auf den R\xC3\xB6merkastellen|1\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Habichtswaldstra\xC3\x9Fe|1\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Nauheimer Stra\xC3\x9Fe|1\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Ro\xC3\x9Fdorfer Stra\xC3\x9Fe|1\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Wachenbuchener Stra\xC3\x9Fe|2\x0A63454|Mittelbuchen||||12\x0A63584|Mittelgr\xC3\xBCndau|Gr\xC3\xBCndau|Mittel-Gr\xC3\xBCndau|Ahl|1\x0A63584|Mittelgr\xC3\xBCndau|Gr\xC3\xBCndau|Mittel-Gr\xC3\xBCndau|Am Hirschsprung|1\x0A63584|Mittelgr\xC3\xBCndau|Gr\xC3\xBCndau|Mittel-Gr\xC3\xBCndau|Gr\xC3\xBCner Weg|1\x0A63584|Mittelgr\xC3\xBCndau|Gr\xC3\xBCndau|Mittel-Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndauer Stra\xC3\x9Fe|1\x0A63584|Mittelgr\xC3\xBCndau|Gr\xC3\xBCndau|Mittel-Gr\xC3\xBCndau|Im Wagnersgrund|4\x0A63584|Mittelgr\xC3\xBCndau||||8\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Bahnhofstra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Dietesheimer Stra\xC3\x9Fe|4\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Holbeinstra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main||L\xC3\xA4mmerspieler Stra\xC3\x9Fe|2\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Ludwigstra\xC3\x9Fe|4\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Schillerstra\xC3\x9Fe|21\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Blumenstra\xC3\x9Fe|2\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Dresdener Stra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Friedensstra\xC3\x9Fe|7\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Hausener Weg|22\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|K\xC3\xA4the-Kollwitz-Stra\xC3\x9Fe|13\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main||L\xC3\xA4mmerspieler Stra\xC3\x9Fe|4\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|M\xC3\xBCllerweg|20\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Robert-Bosch-Weg|13\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Tiefenorter Ring|3\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Tilsiter Stra\xC3\x9Fe|2\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Tulpenweg|2\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Ulmenstra\xC3\x9Fe|7\x0A63165|M\xC3\xBChlheim||||129\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Am Dreispitz|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Angergasse|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Aussiger Stra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Austra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Ebertstra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Grenzstra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Hindemithstra\xC3\x9Fe|2\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Hoffmannstra\xC3\x9Fe|4\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Marktstra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Offenbacher Stra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Rote-Warte-Stra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|R\xC3\xBCckertstra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.||||16\x0A63607|Neudorf|W\xC3\xA4chtersbach|Neudorf|Am Rosengarten|1\x0A63607|Neudorf|W\xC3\xA4chtersbach|Neudorf|Aufenauer Stra\xC3\x9Fe|1\x0A63607|Neudorf|W\xC3\xA4chtersbach|Neudorf|Birkenstra\xC3\x9Fe|1\x0A63607|Neudorf||||3\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Bahnhofstra\xC3\x9Fe|1\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Erlenstra\xC3\x9Fe|2\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Im Rosengarten|1\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|In den St\xC3\xBCmpfen|1\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Kirchgasse|1\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Mainstra\xC3\x9Fe|2\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|M\xC3\xBChlbachstra\xC3\x9Fe|3\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Rheinstra\xC3\x9Fe|10\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Simmigstra\xC3\x9Fe|2\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Tannenstra\xC3\x9Fe|1\x0A63594|Neuenha\xC3\x9Flau||||24\x0A63636 Sum|Neuenschmidten, Brachttal, Germany|Brachttal|Schlierbach|Birsteiner Stra\xC3\x9Fe|2\x0A63636 Sum|Neuenschmidten, Brachttal, Germany||||2\x0A63579|Neuses|Freigericht|Neuses|Schulstra\xC3\x9Fe|1\x0A63579|Neuses|Freigericht|Somborn|Waldstra\xC3\x9Fe|2\x0A63579|Neuses||||3\x0A63549 Sum|Neuwiedermu\xC3\x9F|Ronneburg|Neuwiedermu\xC3\x9F|Am Eisick|2\x0A63549 Sum|Neuwiedermu\xC3\x9F|Ronneburg|Neuwiedermu\xC3\x9F|Odenwaldstra\xC3\x9Fe|1\x0A63549 Sum|Neuwiedermu\xC3\x9F||||3\x0A63599|Neuwirtheim|Biebergem\xC3\xBCnd|Neuwirtheim|Karlsbader Stra\xC3\x9Fe|2\x0A63599|Neuwirtheim|Biebergem\xC3\xBCnd|Neuwirtheim|Stettiner Stra\xC3\x9Fe|1\x0A63599|Neuwirtheim|Biebergem\xC3\xBCnd|Neuwirtheim|Tilsiter Stra\xC3\x9Fe|1\x0A63599|Neuwirtheim||||4\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|Altenburgring|1\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|An der Nachtweide|3\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|An der Ruhbank|1\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|Berliner Stra\xC3\x9Fe|2\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|Junkergasse|1\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|Oberdorfelder Stra\xC3\x9Fe|1\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|Saint-Sever-Stra\xC3\x9Fe|3\x0A61138 Sum|Niederdorfelden||||12\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Birkenweg|3\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Im Krebsengarten|3\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Laussonner Stra\xC3\x9Fe|3\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Lerchenweg|1\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Mittel-Gr\xC3\xBCndauer Stra\xC3\x9Fe|3\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Schieferbergstra\xC3\x9Fe|1\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Schwalbenrain|1\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Untergasse|2\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Weingartenstra\xC3\x9Fe|2\x0A63584|Niedergr\xC3\xBCndau||||19\x0A63486|Niederissigheim|Bruchk\xC3\xB6bel|Niederissigheim|Heinrich-B\xC3\xB6ll-Stra\xC3\x9Fe|2\x0A63486|Niederissigheim|Bruchk\xC3\xB6bel|Niederissigheim|Heinrich-Hoffmann-Stra\xC3\x9Fe|1\x0A63486|Niederissigheim||||3\x0A63594|Niedermittlau|Hasselroth|Niedermittlau|Alte Dorfstra\xC3\x9Fe|1\x0A63594|Niedermittlau|Hasselroth|Niedermittlau|Hopfengartenstra\xC3\x9Fe|1\x0A63594|Niedermittlau|Hasselroth|Niedermittlau|J\xC3\xA4gerbuschstra\xC3\x9Fe|1\x0A63594|Niedermittlau|Hasselroth|Niedermittlau|Vogelsbergstra\xC3\x9Fe|1\x0A63594|Niedermittlau||||4\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Adolf-Reichwein-Stra\xC3\x9Fe|1\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Alzenauer Stra\xC3\x9Fe|2\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Feldbergstra\xC3\x9Fe|3\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Hainbornstra\xC3\x9Fe|1\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Heinrich-Heine-Stra\xC3\x9Fe|2\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|In der Gartel|3\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Landwehrstra\xC3\x9Fe|1\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Nordring|1\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|S\xC3\xBCdring|1\x0A63517|Niederrodenbach||||15\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Am Buchrain|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Am Jubil\xC3\xA4umsstein|3\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Am Kappenwald|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Am Karnweg|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Am Wiesengrund|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Berliner Stra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Breidertring|19\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Drosselstra\xC3\x9Fe|2\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Eisenbahnstra\xC3\x9Fe|2\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Erzbergerstra\xC3\x9Fe|2\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Frankfurter Stra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Geranienstra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Hanauer Stra\xC3\x9Fe|4\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Heinrich-von-Kleist-Stra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Hermann-L\xC3\xB6ns-Stra\xC3\x9Fe|2\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|H\xC3\xBCgelstra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|J\xC3\xA4gerstra\xC3\x9Fe|2\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Lindenweg|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Ludwig-Uhland-Stra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark||Nieder-R\xC3\xB6der-Stra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Odenwaldstra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Riemenschneiderstra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Talstra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Wingertstra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Zum Steckengarten|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany||||53\x0A63674|Oberau|Altenstadt|Oberau|Am Pfahlgraben|1\x0A63674|Oberau|Altenstadt|Oberau|Kochgasse|1\x0A63674|Oberau|Altenstadt|Oberau|Lange Stra\xC3\x9Fe|1\x0A63674|Oberau||||3\x0A63637 Sum|Oberndorf|Jossgrund|Oberndorf|Lohrer Stra\xC3\x9Fe|1\x0A63637 Sum|Oberndorf|Jossgrund|Oberndorf|Schulstra\xC3\x9Fe|1\x0A63637 Sum|Oberndorf||||2\x0A63517|Oberrodenbach|Rodenbach||Barbarossastra\xC3\x9Fe|1\x0A63517|Oberrodenbach|Rodenbach|Oberrodenbach|Hanauer Stra\xC3\x9Fe|1\x0A63517|Oberrodenbach|Rodenbach|Oberrodenbach|Talstra\xC3\x9Fe|1\x0A63517|Oberrodenbach||||3\x0A63633|Obersotzbach|Birstein|Obersotzbach|Hellwaldblick|1\x0A63633|Obersotzbach|Birstein|Obersotzbach|Waldschulstra\xC3\x9Fe|1\x0A63633|Obersotzbach||||2\x0A63179|Obertshausen|Obertshausen|Obertshausen|August-Bebel-Stra\xC3\x9Fe|1\x0A63179|Obertshausen|Obertshausen|Obertshausen|B\xC3\xB6hmerwaldstra\xC3\x9Fe|4\x0A63179|Obertshausen|Obertshausen|Obertshausen|Danziger Stra\xC3\x9Fe|22\x0A63179|Obertshausen|Obertshausen|Obertshausen|Geleitstra\xC3\x9Fe|2\x0A63179|Obertshausen|Obertshausen|Obertshausen|Georg-Kerschensteiner-Stra\xC3\x9Fe|5\x0A63179|Obertshausen|Obertshausen|Obertshausen|Grenzstra\xC3\x9Fe|1\x0A63179|Obertshausen|Obertshausen|Obertshausen|Laakirchener Stra\xC3\x9Fe|9\x0A63179|Obertshausen|Obertshausen|Obertshausen|Leipziger Stra\xC3\x9Fe|11\x0A63179|Obertshausen|Obertshausen|Obertshausen|Theodor-Heuss-Stra\xC3\x9Fe|1\x0A63179|Obertshausen|Obertshausen|Obertshausen|Beethovenstra\xC3\x9Fe|3\x0A63179|Obertshausen|Obertshausen|Obertshausen|Berliner Stra\xC3\x9Fe|2\x0A63179|Obertshausen|Obertshausen|Obertshausen|Bieberer Stra\xC3\x9Fe|12\x0A63179|Obertshausen|Obertshausen|Obertshausen|Eichenweg|1\x0A63179|Obertshausen|Obertshausen|Obertshausen|Erzbergerstra\xC3\x9Fe|1\x0A63179|Obertshausen|Obertshausen|Obertshausen|Heusenstammer Stra\xC3\x9Fe|1\x0A63179|Obertshausen|Obertshausen|Obertshausen|Stra\xC3\x9Fe im Loh|3\x0A63179|Obertshausen|Obertshausen|Obertshausen|Vogelsbergstra\xC3\x9Fe|7\x0A63179|Obertshausen|Obertshausen|Obertshausen|Von-Stauffenberg-Stra\xC3\x9Fe|2\x0A63179|Obertshausen|Obertshausen|Obertshausen|Waldstra\xC3\x9Fe|1\x0A63179|Obertshausen||||89\x0A63654|Orleshausen|B\xC3\xBCdingen|Orleshausen|Am Herrenh\xC3\xB6fchen|3\x0A63654|Orleshausen|B\xC3\xBCdingen|Orleshausen|B\xC3\xBCcheser Stra\xC3\x9Fe|2\x0A63654|Orleshausen|B\xC3\xBCdingen|Orleshausen|Hardeckring|9\x0A63654|Orleshausen|B\xC3\xBCdingen|Orleshausen|Hungebergweg|3\x0A63654|Orleshausen|B\xC3\xBCdingen|Orleshausen|Orlesh\xC3\xA4user Hauptstra\xC3\x9Fe|8\x0A63654|Orleshausen||||25\x0A61130|Ostheim|Nidderau|Ostheim|Alte Ziegelei|1\x0A61130|Ostheim|Nidderau|Ostheim|Am Jungfernborn|2\x0A61130|Ostheim|Nidderau|Ostheim|Am Weinberg|1\x0A61130|Ostheim|Nidderau|Ostheim|Am Ziegelweiher|3\x0A61130|Ostheim|Nidderau|Ostheim|Eisenbahnstra\xC3\x9Fe|1\x0A61130|Ostheim|Nidderau|Ostheim|Fasanenweg|1\x0A61130|Ostheim|Nidderau|Ostheim|In der M\xC3\xBChlweide|1\x0A61130|Ostheim|Nidderau|Ostheim|Limesstra\xC3\x9Fe|1\x0A61130|Ostheim||||11\x0A63543|Ravolzhausen|Neuberg|Ravolzhausen|Darmst\xC3\xA4dter Stra\xC3\x9Fe|1\x0A63543|Ravolzhausen|Neuberg|Ravolzhausen|Oberissigheimer Stra\xC3\x9Fe|1\x0A63543|Ravolzhausen||||2\x0A63150|Rembr\xC3\xBCcken, Heusenstamm, Germany|Heusenstamm|Rembr\xC3\xBCcken|Im Vogelseen|2\x0A63150|Rembr\xC3\xBCcken, Heusenstamm, Germany||||2\x0A63654|Rinderb\xC3\xBCgen|B\xC3\xBCdingen|Rinderb\xC3\xBCgen|Am Eckelgarten|1\x0A63654|Rinderb\xC3\xBCgen|B\xC3\xBCdingen|Rinderb\xC3\xBCgen|Am Hohenrain|8\x0A63654|Rinderb\xC3\xBCgen|B\xC3\xBCdingen|Rinderb\xC3\xBCgen|Auf der Wann|1\x0A63654|Rinderb\xC3\xBCgen|B\xC3\xBCdingen|Rinderb\xC3\xBCgen|Haingarten|1\x0A63654|Rinderb\xC3\xBCgen|B\xC3\xBCdingen|Rinderb\xC3\xBCgen|M\xC3\xBChlgasse|1\x0A63654|Rinderb\xC3\xBCgen|B\xC3\xBCdingen|Rinderb\xC3\xBCgen|Parkstra\xC3\x9Fe|2\x0A63654|Rinderb\xC3\xBCgen||||14\x0A63674|Rodenbach|Altenstadt|Rodenbach|Ortenberger Stra\xC3\x9Fe|1\x0A63674|Rodenbach|Altenstadt|Rodenbach|Rh\xC3\xB6nstra\xC3\x9Fe|1\x0A63674|Rodenbach|Altenstadt|Rodenbach|Unterstra\xC3\x9Fe|8\x0A63674|Rodenbach||||10\x0A63322|R\xC3\xB6dermark-Messenhausen|R\xC3\xB6dermark||Urberacher Stra\xC3\x9Fe|1\x0A63322|R\xC3\xB6dermark-Messenhausen||||1\x0A63322|R\xC3\xB6dermark-Urberach|R\xC3\xB6dermark|Urberach|Bruchwiesenstra\xC3\x9Fe|3\x0A63322|R\xC3\xB6dermark-Urberach|R\xC3\xB6dermark|Urberach|Naheweg|1\x0A63322|R\xC3\xB6dermark-Urberach|R\xC3\xB6dermark|Urberach|Nikolaus-Schwarzkopf-Stra\xC3\x9Fe|9\x0A63322|R\xC3\xB6dermark-Urberach|R\xC3\xB6dermark|Urberach|Rodaustra\xC3\x9Fe|1\x0A63322|R\xC3\xB6dermark-Urberach|R\xC3\xB6dermark|Urberach|Schillerstra\xC3\x9Fe|8\x0A63322|R\xC3\xB6dermark-Urberach||||22\x0A63628|Romsthal|Bad Soden-Salm\xC3\xBCnster|Romsthal|Lange Wiese|5\x0A63628|Romsthal|Bad Soden-Salm\xC3\xBCnster|Romsthal|Luzerneweg|1\x0A63628|Romsthal|Bad Soden-Salm\xC3\xBCnster|Romsthal|Wahlerter Stra\xC3\x9Fe|1\x0A63628|Romsthal||||7\x0A63452|Rosenau|Hanau|Hanau|Ameliastra\xC3\x9Fe|1\x0A63452|Rosenau|Hanau|Hanau|Beethovenplatz|1\x0A63452|Rosenau|Hanau|Hanau|Brahmsweg|1\x0A63452|Rosenau|Hanau|Hanau|Brucknerstra\xC3\x9Fe|2\x0A63452|Rosenau|Hanau|Hanau|Gustav-Adolf-Stra\xC3\x9Fe|1\x0A63452|Rosenau|Hanau|Hanau|Kattenstra\xC3\x9Fe|1\x0A63452|Rosenau|Hanau|Gro\xC3\x9Fauheim|Carl-Kronenberger-Stra\xC3\x9Fe|1\x0A63452|Rosenau|Hanau|Hanau|Salisweg|1\x0A63452|Rosenau||||9\x0A63599|Ro\xC3\x9Fbach|Biebergem\xC3\xBCnd|Ro\xC3\x9Fbach|Brunnenstra\xC3\x9Fe|1\x0A63599|Ro\xC3\x9Fbach|Biebergem\xC3\xBCnd|Ro\xC3\x9Fbach|Zur Kaisereiche|1\x0A63599|Ro\xC3\x9Fbach||||2\x0A63486|Ro\xC3\x9Fdorf|Bruchk\xC3\xB6bel|Ro\xC3\x9Fdorf|Eichendorffanlage|4\x0A63486|Ro\xC3\x9Fdorf|Bruchk\xC3\xB6bel|Ro\xC3\x9Fdorf|Hanauer Stra\xC3\x9Fe|1\x0A63486|Ro\xC3\x9Fdorf|Bruchk\xC3\xB6bel|Ro\xC3\x9Fdorf|Thomas-Mann-Stra\xC3\x9Fe|1\x0A63486|Ro\xC3\x9Fdorf||||6\x0A63571|Roth|Gelnhausen|Roth|Altdorfstra\xC3\x9Fe|3\x0A63571|Roth|Gelnhausen|Roth|Am R\xC3\xB6ther H\xC3\xA4uschen|1\x0A63571|Roth|Gelnhausen|Roth|Gartenstra\xC3\x9Fe|2\x0A63571|Roth|Gelnhausen|Hailer|Gelnh\xC3\xA4user Stra\xC3\x9Fe|3\x0A63571|Roth|Gelnhausen|Roth|Herzbergstra\xC3\x9Fe|1\x0A63571|Roth|Gelnhausen|Roth|Hochstra\xC3\x9Fe|4\x0A63571|Roth|Gelnhausen|Roth|Im Goldberg|4\x0A63571|Roth|Gelnhausen|Roth|Junkenhofstra\xC3\x9Fe|3\x0A63571|Roth|Gelnhausen||Kinzigtalblick|1\x0A63571|Roth|Gelnhausen|Roth|Nordstra\xC3\x9Fe|2\x0A63571|Roth|Gelnhausen|Roth|Quellenstra\xC3\x9Fe|2\x0A63571|Roth|Gelnhausen|Roth|Rathausstra\xC3\x9Fe|2\x0A63571|Roth|Gelnhausen|Roth|R\xC3\xB6ther Wingertstra\xC3\x9Fe|1\x0A63571|Roth|Gelnhausen|Roth|Unterstra\xC3\x9Fe|1\x0A63571|Roth||||30\x0A63584|Rothenbergen|Gr\xC3\xBCndau||Alte Leipziger Stra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Heiligenstock|3\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Am Sportplatz|4\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|An der Nachtweide|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Auf der Messbach|7\x0A63584|Rothenbergen|Gr\xC3\xBCndau||Bahnhofstra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Berliner Stra\xC3\x9Fe|2\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Bogenstra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Br\xC3\xBCder-Grimm-Stra\xC3\x9Fe|2\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Brunnenstra\xC3\x9Fe|2\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Eichendorffstra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Feldstra\xC3\x9Fe|6\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Frankfurter Stra\xC3\x9Fe|3\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Fuldaer Stra\xC3\x9Fe|6\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|F\xC3\xBCnfkirchner Stra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Georg-B\xC3\xBCchner-Stra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Goethestra\xC3\x9Fe|3\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Hofackerheeg|12\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Im Kleinen Feldchen|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|In der Hochstadt|5\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Jahnstra\xC3\x9Fe|3\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|John-Wesley-Stra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Karlsbader Stra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Niedergr\xC3\xBCndauer Stra\xC3\x9Fe|3\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Philipp-Reis-Stra\xC3\x9Fe|5\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Rohrstra\xC3\x9Fe|2\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Wibaustra\xC3\x9Fe|2\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Wiesenstra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Wingertstra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Zingelweg|1\x0A63584|Rothenbergen||||83\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|An der Sandwiese|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|An der W\xC3\xBCstung|4\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Beethovenstra\xC3\x9Fe|10\x0A63526|R\xC3\xBCckingen|Erlensee||Br\xC3\xBCckenstra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Georg-B\xC3\xBCchner-Stra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Hainstra\xC3\x9Fe|2\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Hattergasse|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Kastellstra\xC3\x9Fe|7\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Leipziger Stra\xC3\x9Fe|13\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Lindenstra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Marienstra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Markwaldsiedlung|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Mozartstra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Rh\xC3\xB6nstra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Taunusstra\xC3\x9Fe|7\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Waldstra\xC3\x9Fe|2\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Wilhelmstra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen||||55\x0A63543|R\xC3\xBCdigheim|Neuberg|R\xC3\xBCdigheim|Am M\xC3\xB6llerborn|1\x0A63543|R\xC3\xBCdigheim|Neuberg|R\xC3\xBCdigheim|Hainstra\xC3\x9Fe|1\x0A63543|R\xC3\xBCdigheim|Neuberg|R\xC3\xBCdigheim|Hintergasse|1\x0A63543|R\xC3\xBCdigheim|Neuberg|R\xC3\xBCdigheim|M\xC3\xBChlstra\xC3\x9Fe|1\x0A63543|R\xC3\xBCdigheim||||4\x0A63636 Sum|Schlierbach|Brachttal||Brachtstra\xC3\x9Fe|1\x0A63636 Sum|Schlierbach|Brachttal|Schlierbach|Hegstra\xC3\x9Fe|1\x0A63636 Sum|Schlierbach|Brachttal|Schlierbach|Hippegasse|2\x0A63636 Sum|Schlierbach|Brachttal|Schlierbach|In der Aue|2\x0A63636 Sum|Schlierbach|Brachttal|Schlierbach|Neue Stra\xC3\x9Fe|2\x0A63636 Sum|Schlierbach|Brachttal|Schlierbach|Weihergasse|1\x0A63636 Sum|Schlierbach||||9\x0A61137|Sch\xC3\xB6neck-B\xC3\xBCdesheim|Sch\xC3\xB6neck|B\xC3\xBCdesheim|Am Na\xC3\x9Fling|1\x0A61137|Sch\xC3\xB6neck-B\xC3\xBCdesheim|Sch\xC3\xB6neck|B\xC3\xBCdesheim|Eulenring|1\x0A61137|Sch\xC3\xB6neck-B\xC3\xBCdesheim|Sch\xC3\xB6neck|B\xC3\xBCdesheim|Fasanenstra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-B\xC3\xBCdesheim|Sch\xC3\xB6neck|B\xC3\xBCdesheim|Froschbachstra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-B\xC3\xBCdesheim|Sch\xC3\xB6neck|B\xC3\xBCdesheim|Ringstra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-B\xC3\xBCdesheim||||5\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Am Neuberg|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Anne-Frank-Stra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck||Bleichstra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Johann-Sebastian-Bach-Stra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Sonnensteig|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Talstra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Untergasse|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Wachenbucher Stra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Waldstra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten||||9\x0A61137|Sch\xC3\xB6neck-Oberdorffelden|Sch\xC3\xB6neck|Oberdorfelden|Hessenstra\xC3\x9Fe|2\x0A61137|Sch\xC3\xB6neck-Oberdorffelden|Sch\xC3\xB6neck|Oberdorfelden|Lerchenweg|1\x0A61137|Sch\xC3\xB6neck-Oberdorffelden|Sch\xC3\xB6neck|Oberdorfelden|Nidderauer Stra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Oberdorffelden|Sch\xC3\xB6neck|Oberdorfelden|Odenwaldstra\xC3\x9Fe|2\x0A61137|Sch\xC3\xB6neck-Oberdorffelden||||6\x0A63500|Seligenstadt|Seligenstadt|Seligenstadt|Berliner Stra\xC3\x9Fe|17\x0A63500|Seligenstadt|Seligenstadt|Seligenstadt|Babenh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63500|Seligenstadt|Seligenstadt|Seligenstadt|Giselastra\xC3\x9Fe|1\x0A63500|Seligenstadt|Seligenstadt|Seligenstadt|Hauptstra\xC3\x9Fe|1\x0A63500|Seligenstadt|Seligenstadt|Seligenstadt|Querstra\xC3\x9Fe|3\x0A63500|Seligenstadt|Seligenstadt|Seligenstadt|Wolfstra\xC3\x9Fe|1\x0A63500|Seligenstadt||||24\x0A63579|Somborn|Freigericht|Somborn|Am Sportfeld|5\x0A63579|Somborn|Freigericht|Somborn|Aue|2\x0A63579|Somborn|Freigericht||Auf dem Weidenstrauch|1\x0A63579|Somborn|Freigericht|Somborn|Dangelweg|2\x0A63579|Somborn|Freigericht||Im Schwalbengrund|1\x0A63579|Somborn|Freigericht|Somborn|Karlstra\xC3\x9Fe|1\x0A63579|Somborn|Freigericht|Somborn|Nelkenweg|1\x0A63579|Somborn|Freigericht|Somborn|Raiffeisenstra\xC3\x9Fe|1\x0A63579|Somborn|Freigericht|Somborn|Rosenstra\xC3\x9Fe|2\x0A63579|Somborn|Freigericht|Somborn|Theodor-Heuss-Stra\xC3\x9Fe|1\x0A63579|Somborn|Freigericht|Somborn|Tulpenweg|2\x0A63579|Somborn|Freigericht|Somborn|Vogelsbergblick|1\x0A63579|Somborn||||20\x0A63636 Sum|Spielberg|Brachttal|Spielberg|Hainbuchenweg|1\x0A63636 Sum|Spielberg|Brachttal|Spielberg|Herrnschwender Stra\xC3\x9Fe|1\x0A63636 Sum|Spielberg|Brachttal||Kreutstra\xC3\x9Fe|1\x0A63636 Sum|Spielberg||||3\x0A63456|Steinheim|Hanau|Steinheim|Auf den Sickenrain|1\x0A63456|Steinheim|Hanau|Steinheim|Brandenburgstra\xC3\x9Fe|1\x0A63456|Steinheim|Hanau|Steinheim|Doorner Stra\xC3\x9Fe|1\x0A63456|Steinheim|Hanau|Steinheim|Hermann-Ehlers-Stra\xC3\x9Fe|5\x0A63456|Steinheim|Hanau|Steinheim|Johannes-Eppert-Weg|1\x0A63456|Steinheim|Hanau|Steinheim|Johannes-Machern-Stra\xC3\x9Fe|4\x0A63456|Steinheim|Hanau|Steinheim|Karl-Kirstein-Stra\xC3\x9Fe|9\x0A63456|Steinheim|Hanau|Steinheim|Karlstra\xC3\x9Fe|2\x0A63456|Steinheim|Hanau|Steinheim|Pfaffenbrunnenstra\xC3\x9Fe|2\x0A63456|Steinheim|Hanau|Steinheim|Albrecht-D\xC3\xBCrer-Stra\xC3\x9Fe|1\x0A63456|Steinheim|Hanau|Steinheim|Dietzenseestra\xC3\x9Fe|3\x0A63456|Steinheim|Hanau|Steinheim|Eppsteinstra\xC3\x9Fe|4\x0A63456|Steinheim|Hanau|Steinheim|Idastra\xC3\x9Fe|3\x0A63456|Steinheim|Hanau|Steinheim|Illweg|1\x0A63456|Steinheim|Hanau|Steinheim|Kreuzweg|3\x0A63456|Steinheim|Hanau||Offenbacher Landstra\xC3\x9Fe|2\x0A63456|Steinheim|Hanau|Steinheim|Otto-Hahn-Stra\xC3\x9Fe|1\x0A63456|Steinheim|Hanau|Steinheim|Wilhelm-Paul-Stra\xC3\x9Fe|1\x0A63456|Steinheim||||45\x0A63695|Stockheim, Glauburg, Deutschland|Glauburg|Stockheim|Am W\xC3\xA4ldchen|1\x0A63695|Stockheim, Glauburg, Deutschland|Glauburg|Stockheim|Bahnhofstra\xC3\x9Fe|1\x0A63695|Stockheim, Glauburg, Deutschland|Glauburg|Stockheim|Berliner Stra\xC3\x9Fe|1\x0A63695|Stockheim, Glauburg, Deutschland|Glauburg|Stockheim|Ringstra\xC3\x9Fe|1\x0A63695|Stockheim, Glauburg, Deutschland|Glauburg|Stockheim|Unter der Struth|1\x0A63695|Stockheim, Glauburg, Deutschland|Glauburg|Stockheim|Weinbergstra\xC3\x9Fe|1\x0A63695|Stockheim, Glauburg, Deutschland||||6\x0A63636 Sum|Udenhain|Brachttal|Udenhain|Schauerwaldweg|1\x0A63636 Sum|Udenhain|Brachttal|Udenhain|Schulstra\xC3\x9Fe|3\x0A63636 Sum|Udenhain||||4\x0A63633|Unterreichenbach|Birstein|Unterreichenbach|Am Kirchacker|1\x0A63633|Unterreichenbach|Birstein|Unterreichenbach|Am Nollfeld|1\x0A63633|Unterreichenbach||||2\x0A63654|Vonhausen|B\xC3\xBCdingen|Vonhausen|Am Herrngarten|1\x0A63654|Vonhausen|B\xC3\xBCdingen|Vonhausen|An den Kernb\xC3\xA4umen|2\x0A63654|Vonhausen|B\xC3\xBCdingen|Vonhausen|Blumenstra\xC3\x9Fe|1\x0A63654|Vonhausen|B\xC3\xBCdingen|Vonhausen|Im M\xC3\xBCnchhohlring|2\x0A63654|Vonhausen||||6\x0A63477|Wachenbuchen|Maintal|Wachenbuchen|Bleichstra\xC3\x9Fe|1\x0A63477|Wachenbuchen|Maintal|Wachenbuchen|Saalburgstra\xC3\x9Fe|1\x0A63477|Wachenbuchen|Maintal|Wachenbuchen|Taufsteinstra\xC3\x9Fe|1\x0A63477|Wachenbuchen||||3\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Am Roten Berg|2\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|An der Etzweide|5\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Breitenborner Stra\xC3\x9Fe|5\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Chatilloner Stra\xC3\x9Fe|7\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Gelnh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Haitzer Stra\xC3\x9Fe|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Ro\xC3\x9Flebener Stra\xC3\x9Fe|7\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Wirtheimer Stra\xC3\x9Fe|2\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Auweg|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Bahnhofstra\xC3\x9Fe|21\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Bleichgartenstra\xC3\x9Fe|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Br\xC3\xBCckenstra\xC3\x9Fe|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Heegstra\xC3\x9Fe|7\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Mittelweg|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Poststra\xC3\x9Fe|14\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Ysenburger Stra\xC3\x9Fe|3\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Adtring|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Alsfelder Stra\xC3\x9Fe|6\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Birsteiner Stra\xC3\x9Fe|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Wittgenborn|Baumgartenweg|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Hainhofweg|2\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Hesseldorfer Stra\xC3\x9Fe|7\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Im Ziegelgarten|5\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|In den R\xC3\xB6dern|4\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Lauterbacher Stra\xC3\x9Fe|14\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Schlierbacher Stra\xC3\x9Fe|3\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Spessartstra\xC3\x9Fe|3\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Vogelsbergstra\xC3\x9Fe|4\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Im Ziegelgarten|1\x0A63607|W\xC3\xA4chtersbach||||131\x0A63607|Waldensberg|Hanau|Gro\xC3\x9Fauheim|Von-Brentano-Stra\xC3\x9Fe|3\x0A63607|Waldensberg|W\xC3\xA4chtersbach|Waldensberg|Arnaudstra\xC3\x9Fe|1\x0A63607|Waldensberg|W\xC3\xA4chtersbach|Waldensberg|B\xC3\xBCdinger Weg|1\x0A63607|Waldensberg||||5\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Bruchwiesenweg|2\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Ernst-Reuter-Stra\xC3\x9Fe|1\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|F\xC3\xBCrstenbergstra\xC3\x9Fe|1\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Gr\xC3\xBCnaustra\xC3\x9Fe|1\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Hermelinweg|2\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|In den Heimerswiesen|1\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|John-F.-Kennedy-Stra\xC3\x9Fe|20\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Ollenhauerstra\xC3\x9Fe|6\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Ratiborstra\xC3\x9Fe|1\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Theodor-Heuss-Stra\xC3\x9Fe|3\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Vosswaldestra\xC3\x9Fe|2\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Am Eichwald|1\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Amselweg|1\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Bornflo\xC3\x9Fstra\xC3\x9Fe|5\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Eichbaumstra\xC3\x9Fe|3\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Fasanenweg|3\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Hainstra\xC3\x9Fe|2\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Herrnstra\xC3\x9Fe|17\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Philipp-Reis-Stra\xC3\x9Fe|7\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Waldstra\xC3\x9Fe|2\x0A63674|Waldsiedlung||||81\x0A63607|Weilers|W\xC3\xA4chtersbach|Weilers|Im Alten Weg|2\x0A63607|Weilers||||2\x0A63110|Weiskirchen|Rodgau|Weiskirchen|Schlesienstra\xC3\x9Fe|1\x0A63110|Weiskirchen||||1\x0A63633|Wettges|Birstein|Wettges|Triebstra\xC3\x9Fe|1\x0A63633|Wettges||||1\x0A61130|Windecken|Nidderau|Windecken|Lindenstra\xC3\x9Fe|1\x0A61130|Windecken|Nidderau|Windecken|Ostheimer Stra\xC3\x9Fe|1\x0A61130|Windecken||||2\x0A63599|Wirtheim|Biebergem\xC3\xBCnd|Wirtheim|Frankfurter Stra\xC3\x9Fe|3\x0A63599|Wirtheim|Biebergem\xC3\xBCnd|Wirtheim|Gro\xC3\x9Fer Garten|1\x0A63599|Wirtheim|Biebergem\xC3\xBCnd|Wirtheim|Marktplatz|1\x0A63599|Wirtheim|Biebergem\xC3\xBCnd|Wirtheim|Pfingstborn|1\x0A63599|Wirtheim|Biebergem\xC3\xBCnd|Wirtheim|Schinnsgraben|2\x0A63599|Wirtheim|Biebergem\xC3\xBCnd|Wirtheim|Taubenfang|1\x0A63599|Wirtheim||||9\x0A63607|Wittgenborn|W\xC3\xA4chtersbach|Wittgenborn|Langgasse|2\x0A63607|Wittgenborn|W\xC3\xA4chtersbach|Wittgenborn|Siedlungsstra\xC3\x9Fe|1\x0A63607|Wittgenborn|W\xC3\xA4chtersbach||Sophie-Knoth-Stra\xC3\x9Fe|4\x0A63607|Wittgenborn|W\xC3\xA4chtersbach|Wittgenborn|Waldensberger Stra\xC3\x9Fe|3\x0A63607|Wittgenborn||||10\x0A63654|Wolferborn|B\xC3\xBCdingen|Wolferborn|Am Alten Graben|3\x0A63654|Wolferborn|B\xC3\xBCdingen|Wolferborn|An den \xC3\x84ckerwiesen|1\x0A63654|Wolferborn|B\xC3\xBCdingen|Wolferborn|Wehrtbornstra\xC3\x9Fe|2\x0A63654|Wolferborn||||6\x0A63457|Wolfgang|Hanau|Wolfgang|August-Bebel-Stra\xC3\x9Fe|1\x0A63457|Wolfgang|Hanau||Blaumeisenweg|2\x0A63457|Wolfgang|Hanau|Wolfgang|Friedrich-Fr\xC3\xB6bel-Stra\xC3\x9Fe|2\x0A63457|Wolfgang|Hanau||Gr\xC3\xBCnspechtweg|1\x0A63457|Wolfgang|Hanau||Heidelerchenweg|1\x0A63457|Wolfgang|Hanau|Wolfgang|Lehrh\xC3\xB6fer Stra\xC3\x9Fe|1\x0A63457|Wolfgang|Hanau||Sandbienenweg|3\x0A63457|Wolfgang|Hanau|Wolfgang|Schanzenstra\xC3\x9Fe|1\x0A63457|Wolfgang|Hanau|Wolfgang|Vor der Pulverm\xC3\xBChle|1\x0A63457|Wolfgang|Hanau||Zitronenfalterweg|2\x0A63457|Wolfgang||||15\x0A63533|Zellhausen|Mainhausen|Zellhausen|Am Gellmannsr\xC3\xB6dchen|1\x0A63533|Zellhausen|Mainhausen||Am Zellerbruch|1\x0A63533|Zellhausen|Mainhausen|Zellhausen|Babenh\xC3\xA4user Stra\xC3\x9Fe|3\x0A63533|Zellhausen|Mainhausen|Zellhausen|Bahnhofstra\xC3\x9Fe|1\x0A63533|Zellhausen|Mainhausen|Zellhausen|Harresh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63533|Zellhausen|Mainhausen|Zellhausen|Obergasse|1\x0A63533|Zellhausen|Mainhausen|Zellhausen|Wingertspfad|1\x0A63533|Zellhausen||||9"), ConstSet2, -1);
		var header_seq_301230 = nsuSplitString(streets_301229[chckIndx(0, 0, streets_301229.length+0-1)-0], makeNimstrLit("|"), -1);
		var header_tbl_301614 = [init_table_301233(64)];
		L1: do {
			var i_301814 = 0;
			var h_301815 = null;
			var i_311611 = 0;
			var l_311612 = (header_seq_301230 != null ? header_seq_301230.length : 0);
			L2: do {
					L3: while (true) {
					if (!(i_311611 < l_311612)) break L3;
						i_301814 = i_311611;
						h_301815 = header_seq_301230[chckIndx(i_311611, 0, header_seq_301230.length+0-1)-0];
						HEX5BHEX5DHEX3D_301932(header_tbl_301614[0], h_301815, chckRange(i_301814, 0, 2147483647));
						i_311611 = addInt(i_311611, 1);
						if (!(((header_seq_301230 != null ? header_seq_301230.length : 0) == l_311612))) {
						failed_assert_impl_15266(makeNimstrLit("iterators.nim(122, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		L4: do {
			var i_305931 = 0;
			var colontmp__311618 = 0;
			colontmp__311618 = (streets_301229 != null ? (streets_301229.length-1) : -1);
			var res_311619 = 1;
			L5: do {
					L6: while (true) {
					if (!(res_311619 <= colontmp__311618)) break L6;
						i_305931 = res_311619;
						L7: do {
							var row_seq_305932 = nsuSplitString(streets_301229[chckIndx(i_305931, 0, streets_301229.length+0-1)-0], makeNimstrLit("|"), -1);
							var str_n_305933 = null;
							var city_305934 = null;
							var dstr_305935 = null;
							var plz_305936 = null;
							var total_fam_305937 = null;
							var str_n_305933 = nimCopy(null, row_seq_305932[chckIndx((Tmp8 = HEX5BHEX5D_306090(header_tbl_301614[0], makeNimstrLit("Street")), Tmp8)[0][Tmp8[1]], 0, row_seq_305932.length+0-1)-0], NTI138);
							if (eqStrings(str_n_305933, [])) {
							break L7;
							}
							
							var city_305934 = nimCopy(null, row_seq_305932[chckIndx((Tmp9 = HEX5BHEX5D_306090(header_tbl_301614[0], makeNimstrLit("City")), Tmp9)[0][Tmp9[1]], 0, row_seq_305932.length+0-1)-0], NTI138);
							var dstr_305935 = nimCopy(null, row_seq_305932[chckIndx((Tmp10 = HEX5BHEX5D_306090(header_tbl_301614[0], makeNimstrLit("District")), Tmp10)[0][Tmp10[1]], 0, row_seq_305932.length+0-1)-0], NTI138);
							if (eqStrings(dstr_305935, city_305934)) {
							Tmp11 = [];
							}
							else {
							Tmp11 = dstr_305935;
							}
							
							var district_306972 = nimCopy(null, Tmp11, NTI138);
							var plz_305936 = nimCopy(null, row_seq_305932[chckIndx((Tmp12 = HEX5BHEX5D_306090(header_tbl_301614[0], makeNimstrLit("Plz")), Tmp12)[0][Tmp12[1]], 0, row_seq_305932.length+0-1)-0], NTI138);
							var sector_307138 = {postalCode: nimCopy(null, plz_305936, NTI138), city: nimCopy(null, city_305934, NTI138), district: nimCopy(null, district_306972, NTI138), folkDistrict: null, pFix: 0, streets: {data: null, counter: 0, first: 0, last: 0}, shownOnMap: false, exclude: false};
							var street_307139 = {name: nimCopy(null, str_n_305933, NTI138), sector: sector_307138, links: null, totalFamilies: 0};
							var total_fam_305937 = nimCopy(null, row_seq_305932[chckIndx((Tmp13 = HEX5BHEX5D_306090(header_tbl_301614[0], makeNimstrLit("TotalFamilies")), Tmp13)[0][Tmp13[1]], 0, row_seq_305932.length+0-1)-0], NTI138);
							HEX5BHEX5DHEX3D_307421(result_300846[0], hash_298335(street_307139), chckRange(parseInt(toJSStr(total_fam_305937), 10), 0, 2147483647));
						} while(false);
						res_311619 = addInt(res_311619, 1);
					}
			} while(false);
		} while(false);

	return result_300846[0];

}
var tbl_total_fam_311595 = [init_tbl_tot_fam_by_street_300822()];

function nsuFindChar(s_154016, sub_154017, start_154018, last_154019) {
		var Tmp1;

	var result_154021 = 0;

	BeforeRet: do {
		if ((last_154019 == 0)) {
		Tmp1 = (s_154016 != null ? (s_154016.length-1) : -1);
		}
		else {
		Tmp1 = last_154019;
		}
		
		var last_154023 = Tmp1;
		L2: do {
			var i_154406 = 0;
			var colontmp__363244 = 0;
			colontmp__363244 = start_154018;
			var res_363245 = colontmp__363244;
			L3: do {
					L4: while (true) {
					if (!(res_363245 <= last_154023)) break L4;
						i_154406 = res_363245;
						if ((sub_154017 == s_154016[chckIndx(i_154406, 0, s_154016.length+0-1)-0])) {
						result_154021 = i_154406;
						break BeforeRet;
						}
						
						res_363245 = addInt(res_363245, 1);
					}
			} while(false);
		} while(false);
		result_154021 = -1;
		break BeforeRet;
	} while (false);

	return result_154021;

}

function substr_30253(s_30255, first_30256) {
	var result_30258 = null;

		result_30258 = nimCopy(null, substr_30222(s_30255, first_30256, (s_30255 != null ? (s_30255.length-1) : -1)), NTI138);

	return result_30258;

}

function nsuInitSkipTable(a_153744, sub_153745) {
		var m_153746 = (sub_153745 != null ? sub_153745.length : 0);
		var i_153748 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_153748 <= 248)) break L2;
					a_153744[chckIndx(chckRange(addInt(i_153748, 0), 0, 255), 0, a_153744.length+0-1)-0] = m_153746;
					a_153744[chckIndx(chckRange(addInt(i_153748, 1), 0, 255), 0, a_153744.length+0-1)-0] = m_153746;
					a_153744[chckIndx(chckRange(addInt(i_153748, 2), 0, 255), 0, a_153744.length+0-1)-0] = m_153746;
					a_153744[chckIndx(chckRange(addInt(i_153748, 3), 0, 255), 0, a_153744.length+0-1)-0] = m_153746;
					a_153744[chckIndx(chckRange(addInt(i_153748, 4), 0, 255), 0, a_153744.length+0-1)-0] = m_153746;
					a_153744[chckIndx(chckRange(addInt(i_153748, 5), 0, 255), 0, a_153744.length+0-1)-0] = m_153746;
					a_153744[chckIndx(chckRange(addInt(i_153748, 6), 0, 255), 0, a_153744.length+0-1)-0] = m_153746;
					a_153744[chckIndx(chckRange(addInt(i_153748, 7), 0, 255), 0, a_153744.length+0-1)-0] = m_153746;
					i_153748 = addInt(i_153748, 8);
				}
		} while(false);
		L3: do {
			var i_153765 = 0;
			var colontmp__363252 = 0;
			colontmp__363252 = subInt(m_153746, 1);
			var i_363253 = 0;
			L4: do {
					L5: while (true) {
					if (!(i_363253 < colontmp__363252)) break L5;
						i_153765 = i_363253;
						a_153744[chckIndx(sub_153745[chckIndx(i_153765, 0, sub_153745.length+0-1)-0], 0, a_153744.length+0-1)-0] = subInt(subInt(m_153746, 1), i_153765);
						i_363253 = addInt(i_363253, 1);
					}
			} while(false);
		} while(false);

	
}

function nsuFindStrA(a_153781, s_153782, sub_153783, start_153784, last_153785) {
		var Tmp1;

	var result_153787 = 0;

	BeforeRet: do {
		if ((last_153785 == 0)) {
		Tmp1 = (s_153782 != null ? (s_153782.length-1) : -1);
		}
		else {
		Tmp1 = last_153785;
		}
		
		var last_153789 = Tmp1;
		var sub_last_153790 = subInt((sub_153783 != null ? sub_153783.length : 0), 1);
		if ((sub_last_153790 == -1)) {
		result_153787 = start_153784;
		break BeforeRet;
		}
		
		var skip_153792 = start_153784;
		L2: do {
				L3: while (true) {
				if (!(sub_last_153790 <= subInt(last_153789, skip_153792))) break L3;
					var i_153793 = sub_last_153790;
					L4: do {
							L5: while (true) {
							if (!(s_153782[chckIndx(addInt(skip_153792, i_153793), 0, s_153782.length+0-1)-0] == sub_153783[chckIndx(i_153793, 0, sub_153783.length+0-1)-0])) break L5;
								if ((i_153793 == 0)) {
								result_153787 = skip_153792;
								break BeforeRet;
								}
								
								i_153793 = subInt(i_153793, 1);
							}
					} while(false);
					skip_153792 = addInt(skip_153792, a_153781[chckIndx(s_153782[chckIndx(addInt(skip_153792, sub_last_153790), 0, s_153782.length+0-1)-0], 0, a_153781.length+0-1)-0]);
				}
		} while(false);
		result_153787 = -1;
		break BeforeRet;
	} while (false);

	return result_153787;

}

function nsuReplaceStr(s_155318, sub_155319, by_155320) {
	var result_155321 = null;

		result_155321 = nimCopy(null, [], NTI138);
		var sub_len_155322 = (sub_155319 != null ? sub_155319.length : 0);
		if ((sub_len_155322 == 0)) {
		result_155321 = nimCopy(null, s_155318, NTI138);
		}
		else {
		if ((sub_len_155322 == 1)) {
		var c_155323 = sub_155319[chckIndx(0, 0, sub_155319.length+0-1)-0];
		var last_155325 = (s_155318 != null ? (s_155318.length-1) : -1);
		var i_155327 = 0;
		L1: do {
				L2: while (true) {
				if (!true) break L2;
					var j_155328 = nsuFindChar(s_155318, c_155323, chckRange(i_155327, 0, 2147483647), last_155325);
					if ((j_155328 < 0)) {
					break L1;
					}
					
					if (result_155321 != null) { result_155321 = (result_155321).concat(substr_30222(s_155318, i_155327, subInt(j_155328, 1))); } else { result_155321 = substr_30222(s_155318, i_155327, subInt(j_155328, 1)).slice(); };
					if (result_155321 != null) { result_155321 = (result_155321).concat(by_155320); } else { result_155321 = by_155320.slice(); };
					i_155327 = addInt(j_155328, sub_len_155322);
				}
		} while(false);
		if (result_155321 != null) { result_155321 = (result_155321).concat(substr_30253(s_155318, i_155327)); } else { result_155321 = substr_30253(s_155318, i_155327).slice(); };
		}
		else {
			var a_155329 = [new Int32Array(256)];
			nsuInitSkipTable(a_155329[0], sub_155319);
			var last_155332 = (s_155318 != null ? (s_155318.length-1) : -1);
			var i_155334 = 0;
			L3: do {
					L4: while (true) {
					if (!true) break L4;
						var j_155335 = nsuFindStrA(a_155329[0], s_155318, sub_155319, chckRange(i_155334, 0, 2147483647), last_155332);
						if ((j_155335 < 0)) {
						break L3;
						}
						
						if (result_155321 != null) { result_155321 = (result_155321).concat(substr_30222(s_155318, i_155334, subInt(j_155335, 1))); } else { result_155321 = substr_30222(s_155318, i_155334, subInt(j_155335, 1)).slice(); };
						if (result_155321 != null) { result_155321 = (result_155321).concat(by_155320); } else { result_155321 = by_155320.slice(); };
						i_155334 = addInt(j_155335, sub_len_155322);
					}
			} while(false);
			if (result_155321 != null) { result_155321 = (result_155321).concat(substr_30253(s_155318, i_155334)); } else { result_155321 = substr_30253(s_155318, i_155334).slice(); };
		}
		}

	return result_155321;

}

function new_seq_278212(len_278215) {
	var result_278217 = null;

		result_278217 = new Array(len_278215); for (var i=0;i<len_278215;++i) {result_278217[i]={k: 0, parent: null, current: null, n: null};}
	return result_278217;

}

function new_seq_278249(len_278252) {
	var result_278254 = null;

		result_278254 = new Array(len_278252); for (var i=0;i<len_278252;++i) {result_278254[i]={parent: null, newChild: null, pos: 0};}
	return result_278254;

}

function valueHEX3D_256839(n_256841, v_256842) {
		n_256841.text = v_256842;

	
}

function value_256822(n_256824) {
	var result_256825 = null;

		result_256825 = n_256824.text;

	return result_256825;

}

function wrap_event_268390(d_268392, n_268393, k_268394, action_268395) {

			function later_wrapper_268827() {

					function HEX3Aanonymous_268833(ev_268835) {

							function wrapper_268836() {
									var v_268838 = ev_268835.target.value;
									valueHEX3D_256839(n_268831, v_268838);
									if (!(!((action_268830 == null)))) {
									failed_assert_impl_15266(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
									}
									
									action_268830(ev_268835, n_268831);
									if (!((value_256822(n_268831) == v_268838))) {
									ev_268835.target.value = value_256822(n_268831);
									}
									

								
							}

							if (!((timer_268832 == null))) {
							clearTimeout(timer_268832);
							}
							
							timer_268832 = setTimeout(wrapper_268836, 400);

						
					}

				var result_268829 = null;

					var action_268830 = action_268395;
					var n_268831 = n_268393;
					var timer_268832 = null;
					result_268829 = HEX3Aanonymous_268833;

				return result_268829;

			}

			function enter_wrapper_268657() {

					function HEX3Aanonymous_268662(ev_268664) {
							if ((ev_268664.keyCode == 13)) {
							var v_268665 = ev_268664.target.value;
							valueHEX3D_256839(n_268661, v_268665);
							if (!(!((action_268660 == null)))) {
							failed_assert_impl_15266(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
							}
							
							action_268660(ev_268664, n_268661);
							if (!((value_256822(n_268661) == v_268665))) {
							ev_268664.target.value = value_256822(n_268661);
							}
							
							}
							

						
					}

				var result_268659 = null;

					var action_268660 = action_268395;
					var n_268661 = n_268393;
					result_268659 = HEX3Aanonymous_268662;

				return result_268659;

			}

			function std_wrapper_268397() {

					function HEX3Aanonymous_268402(ev_268404) {
								var Tmp1;
								var Tmp2;

								if ((n_268401.kind == 109)) Tmp2 = true; else {									Tmp2 = (n_268401.kind == 103);								}								if (Tmp2) Tmp1 = true; else {									Tmp1 = (n_268401.kind == 105);								}							if (Tmp1) {
							var v_268423 = ev_268404.target.value;
							valueHEX3D_256839(n_268401, v_268423);
							if (!(!((action_268400 == null)))) {
							failed_assert_impl_15266(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
							}
							
							action_268400(ev_268404, n_268401);
							if (!((value_256822(n_268401) == v_268423))) {
							ev_268404.target.value = value_256822(n_268401);
							}
							
							}
							else {
							action_268400(ev_268404, n_268401);
							}
							

						
					}

				var result_268399 = null;

					var action_268400 = action_268395;
					var n_268401 = n_268393;
					result_268399 = HEX3Aanonymous_268402;

				return result_268399;

			}

	var result_268396 = null;

		switch (k_268394) {
		case 30:
			result_268396 = later_wrapper_268827();
			d_268392.addEventListener("keyup", result_268396, false);
			break;
		case 29:
			result_268396 = enter_wrapper_268657();
			d_268392.addEventListener("keyup", result_268396, false);
			break;
		default: 
			result_268396 = std_wrapper_268397();
			d_268392.addEventListener(to_event_name_256695[chckIndx(k_268394, 0, to_event_name_256695.length+0-1)-0], result_268396, false);
			break;
		}

	return result_268396;

}

function apply_events_269086(n_269088) {
		var dest_269089 = n_269088.dom;
		L1: do {
			var i_269102 = 0;
			var colontmp__363287 = 0;
			colontmp__363287 = (n_269088.events != null ? n_269088.events.length : 0);
			var i_363288 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_363288 < colontmp__363287)) break L3;
						i_269102 = i_363288;
						n_269088.events[chckIndx(i_269102, 0, n_269088.events.length+0-1)-0]["Field2"] = wrap_event_268390(dest_269089, n_269088, n_269088.events[chckIndx(i_269102, 0, n_269088.events.length+0-1)-0]["Field0"], n_269088.events[chckIndx(i_269102, 0, n_269088.events.length+0-1)-0]["Field1"]);
						i_363288 = addInt(i_363288, 1);
					}
			} while(false);
		} while(false);

	
}

function apply_style_254025(n_254027, s_254028) {
		n_254027.style = {};
		L1: do {
			var i_254061 = 0;
			var colontmp__363299 = 0;
			colontmp__363299 = subInt(s_254028.length, 1);
			var res_363300 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_363300 <= colontmp__363299)) break L3;
						i_254061 = res_363300;
						n_254027.style[s_254028[i_254061]] = s_254028[addInt(i_254061, 1)];
						res_363300 = addInt(res_363300, 2);
					}
			} while(false);
		} while(false);

	
}

function vnode_to_dom_269167(n_269169, kxi_269170) {
			var Tmp9;
			var Tmp10;

	var result_269171 = null;

	BeforeRet: do {
		if ((n_269169.kind == 0)) {
		result_269171 = document.createTextNode(n_269169.text);
		n_269169.dom = result_269171;
		if (!((n_269169.id == null))) {
		kxi_268324[0].byId[n_269169.id] = n_269169;
		}
		
		}
		else {
		if ((n_269169.kind == 6)) {
		result_269171 = document.createElement("div");
		result_269171.innerHTML = n_269169.text;
		n_269169.dom = result_269171;
		if (!((n_269169.id == null))) {
		kxi_268324[0].byId[n_269169.id] = n_269169;
		}
		
		break BeforeRet;
		}
		else {
		if ((n_269169.kind == 3)) {
		var x_269234 = vcomponents_261239[0][n_269169.text](n_269169.kids);
		result_269171 = vnode_to_dom_269167(x_269234, kxi_269170);
		n_269169.dom = result_269171;
		if (!((n_269169.id == null))) {
		kxi_268324[0].byId[n_269169.id] = n_269169;
		}
		
		break BeforeRet;
		}
		else {
		if ((n_269169.kind == 4)) {
		result_269171 = n_269169.dom;
		if (!(!((result_269171 == null)))) {
		failed_assert_impl_15266(makeNimstrLit("karax.nim(154, 12) `result != nil` "));
		}
		
		n_269169.dom = result_269171;
		if (!((n_269169.id == null))) {
		kxi_268324[0].byId[n_269169.id] = n_269169;
		}
		
		break BeforeRet;
		}
		else {
		if ((n_269169.kind == 5)) {
		var x_269422 = n_269169;
		if (!((x_269422.onAttachImpl == null))) {
		x_269422.onAttachImpl(x_269422);
		}
		
		if (!(!((x_269422.renderImpl == null)))) {
		failed_assert_impl_15266(makeNimstrLit("karax.nim(161, 12) `x.renderImpl != nil` "));
		}
		
		if ((x_269422.expanded == null)) {
		x_269422.expanded = x_269422.renderImpl(x_269422);
		}
		
		if (!(!((x_269422.expanded == null)))) {
		failed_assert_impl_15266(makeNimstrLit("karax.nim(165, 12) `x.expanded != nil` "));
		}
		
		result_269171 = vnode_to_dom_269167(x_269422.expanded, kxi_269170);
		n_269169.dom = result_269171;
		if (!((n_269169.id == null))) {
		kxi_268324[0].byId[n_269169.id] = n_269169;
		}
		
		break BeforeRet;
		}
		else {
			result_269171 = document.createElement(to_tag_256689[chckIndx(n_269169.kind, 0, to_tag_256689.length+0-1)-0]);
			n_269169.dom = result_269171;
			if (!((n_269169.id == null))) {
			kxi_268324[0].byId[n_269169.id] = n_269169;
			}
			
			L1: do {
				var k_269831 = null;
				L2: do {
					var i_363267 = 0;
					var colontmp__363268 = 0;
					colontmp__363268 = (n_269169.kids != null ? n_269169.kids.length : 0);
					var i_363269 = 0;
					L3: do {
							L4: while (true) {
							if (!(i_363269 < colontmp__363268)) break L4;
								i_363267 = i_363269;
								k_269831 = n_269169.kids[chckIndx(i_363267, 0, n_269169.kids.length+0-1)-0];
								result_269171.appendChild(vnode_to_dom_269167(k_269831, kxi_269170));
								i_363269 = addInt(i_363269, 1);
							}
					} while(false);
				} while(false);
			} while(false);
			if (!((n_269169.text == null))) {
			result_269171.value = n_269169.text;
			}
			
		}
		}}}}
		if (!((n_269169.id == null))) {
		result_269171.id = n_269169.id;
		}
		
		if (!((n_269169.class == null))) {
		result_269171.className = n_269169.class;
		}
		
		L5: do {
			var k_269832 = null;
			var v_269833 = null;
			L6: do {
				var i_363280 = 0;
				var colontmp__363281 = 0;
				colontmp__363281 = subInt((n_269169.attrs != null ? n_269169.attrs.length : 0), 2);
				var res_363282 = 0;
				L7: do {
						L8: while (true) {
						if (!(res_363282 <= colontmp__363281)) break L8;
							i_363280 = res_363282;
							k_269832 = n_269169.attrs[chckIndx(i_363280, 0, n_269169.attrs.length+0-1)-0];
							v_269833 = n_269169.attrs[chckIndx(addInt(i_363280, 1), 0, n_269169.attrs.length+0-1)-0];
							if (!((v_269833 == null))) {
							result_269171.setAttribute(k_269832, v_269833);
							}
							
							res_363282 = addInt(res_363282, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		apply_events_269086(n_269169);
			if (!!((kxi_269170 == null))) Tmp10 = false; else {				Tmp10 = (n_269169 == kxi_269170.toFocusV);			}			if (!Tmp10) Tmp9 = false; else {				Tmp9 = (kxi_269170.toFocus == null);			}		if (Tmp9) {
		kxi_269170.toFocus = result_269171;
		}
		
		if (!((n_269169.style == null))) {
		apply_style_254025(result_269171, n_269169.style);
		}
		
	} while (false);

	return result_269171;

}

function replace_by_id_270012(id_270014, new_tree_270015) {
		var x_270016 = document.getElementById(id_270014);
		x_270016.parentNode.replaceChild(new_tree_270015, x_270016);
		new_tree_270015.id = id_270014;

	
}

function len_257728(x_257730) {
	var result_257731 = 0;

		result_257731 = (x_257730.kids != null ? x_257730.kids.length : 0);

	return result_257731;

}

function HEX5BHEX5D_257750(x_257752, idx_257753) {
	var result_257754 = null;

		result_257754 = x_257752.kids[chckIndx(idx_257753, 0, x_257752.kids.length+0-1)-0];

	return result_257754;

}

function same_269920(n_269922, e_269923, nesting_269924) {
			var Tmp1;
			var Tmp2;

	var result_269926 = false;

	BeforeRet: do {
		if (kxi_268324[0].orphans.hasOwnProperty(n_269922.id)) {
		result_269926 = true;
		break BeforeRet;
		}
		
		if ((n_269922.kind == 5)) {
		result_269926 = same_269920(n_269922.expanded, e_269923, addInt(nesting_269924, 1));
		}
		else {
		if ((n_269922.kind == 6)) {
		result_269926 = true;
		}
		else {
			if ((n_269922.kind == 3)) Tmp1 = true; else {				Tmp1 = (n_269922.kind == 4);			}		if (Tmp1) {
		result_269926 = true;
		}
		else {
		if ((to_tag_256689[chckIndx(n_269922.kind, 0, to_tag_256689.length+0-1)-0] == e_269923.nodeName)) {
		result_269926 = true;
		if (!((n_269922.kind == 0))) {
			if (!!((e_269923.childNodes.length == len_257728(n_269922)))) Tmp2 = false; else {				Tmp2 = !((n_269922.kind == 109));			}		if (Tmp2) {
		rawEcho(makeNimstrLit("expected "), cstrToNimstr((len_257728(n_269922))+""), makeNimstrLit(" real "), cstrToNimstr((e_269923.childNodes.length)+""), makeNimstrLit(" "), cstrToNimstr(to_tag_256689[chckIndx(n_269922.kind, 0, to_tag_256689.length+0-1)-0]), makeNimstrLit(" nesting "), cstrToNimstr((nesting_269924)+""));
		result_269926 = false;
		break BeforeRet;
		}
		
		L3: do {
			var i_269994 = 0;
			var colontmp__363306 = 0;
			colontmp__363306 = len_257728(n_269922);
			var i_363307 = 0;
			L4: do {
					L5: while (true) {
					if (!(i_363307 < colontmp__363306)) break L5;
						i_269994 = i_363307;
						if (!(same_269920(HEX5BHEX5D_257750(n_269922, i_269994), e_269923.childNodes[i_269994], addInt(nesting_269924, 1)))) {
						result_269926 = false;
						break BeforeRet;
						}
						
						i_363307 = addInt(i_363307, 1);
					}
			} while(false);
		} while(false);
		}
		
		}
		else {
		rawEcho(makeNimstrLit("VDOM: "), cstrToNimstr(to_tag_256689[chckIndx(n_269922.kind, 0, to_tag_256689.length+0-1)-0]), makeNimstrLit(" DOM: "), cstrToNimstr(e_269923.nodeName));
		}
		}}}
	} while (false);

	return result_269926;

}

function eq_252814(a_252816, b_252817) {
	var result_252818 = false;

	BeforeRet: do {
		if ((a_252816 == null)) {
		if ((b_252817 == null)) {
		result_252818 = true;
		break BeforeRet;
		}
		else {
			result_252818 = false;
			break BeforeRet;
		}
		
		}
		else {
		if ((b_252817 == null)) {
		result_252818 = false;
		break BeforeRet;
		}
		}
		if (!((a_252816.length == b_252817.length))) {
		result_252818 = false;
		break BeforeRet;
		}
		
		L1: do {
			var i_252916 = 0;
			var colontmp__363344 = 0;
			colontmp__363344 = a_252816.length;
			var i_363345 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_363345 < colontmp__363344)) break L3;
						i_252916 = i_363345;
						if (!((a_252816[i_252916] == b_252817[i_252916]))) {
						result_252818 = false;
						break BeforeRet;
						}
						
						i_363345 = addInt(i_363345, 1);
					}
			} while(false);
		} while(false);
		result_252818 = true;
		break BeforeRet;
	} while (false);

	return result_252818;

}

function same_attrs_259480(a_259482, b_259483) {
	var result_259484 = false;

	BeforeRet: do {
		if (((a_259482.attrs != null ? a_259482.attrs.length : 0) == (b_259483.attrs != null ? b_259483.attrs.length : 0))) {
		result_259484 = true;
		L1: do {
			var i_259507 = 0;
			var colontmp__363349 = 0;
			colontmp__363349 = (a_259482.attrs != null ? a_259482.attrs.length : 0);
			var i_363350 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_363350 < colontmp__363349)) break L3;
						i_259507 = i_363350;
						if (!((a_259482.attrs[chckIndx(i_259507, 0, a_259482.attrs.length+0-1)-0] == b_259483.attrs[chckIndx(i_259507, 0, b_259483.attrs.length+0-1)-0]))) {
						result_259484 = false;
						break BeforeRet;
						}
						
						i_363350 = addInt(i_363350, 1);
					}
			} while(false);
		} while(false);
		}
		
	} while (false);

	return result_259484;

}

function eq_270214(a_270216, b_270217) {
			var Tmp4;
			var Tmp5;

	var result_270218 = 0;

	BeforeRet: do {
		if (!((a_270216.kind == b_270217.kind))) {
		result_270218 = 1;
		break BeforeRet;
		}
		
		if (!((a_270216.id == b_270217.id))) {
		result_270218 = 1;
		break BeforeRet;
		}
		
		result_270218 = 3;
		if (!((a_270216.index == b_270217.index))) {
		result_270218 = 1;
		break BeforeRet;
		}
		
		if ((a_270216.kind == 0)) {
		if (!((a_270216.text == b_270217.text))) {
		result_270218 = 1;
		break BeforeRet;
		}
		
		}
		else {
		if ((a_270216.kind == 3)) {
		if (!((a_270216.text == b_270217.text))) {
		result_270218 = 1;
		break BeforeRet;
		}
		
		if (!((len_257728(a_270216) == len_257728(b_270217)))) {
		result_270218 = 1;
		break BeforeRet;
		}
		
		L1: do {
			var i_271014 = 0;
			var colontmp__363339 = 0;
			colontmp__363339 = len_257728(a_270216);
			var i_363340 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_363340 < colontmp__363339)) break L3;
						i_271014 = i_363340;
						if ((eq_270214(HEX5BHEX5D_257750(a_270216, i_271014), HEX5BHEX5D_257750(b_270217, i_271014)) == 1)) {
						result_270218 = 1;
						break BeforeRet;
						}
						
						i_363340 = addInt(i_363340, 1);
					}
			} while(false);
		} while(false);
		}
		else {
		if ((a_270216.kind == 4)) {
		result_270218 = 3;
		break BeforeRet;
		}
		else {
		if ((a_270216.kind == 6)) {
		if (!((a_270216.text == b_270217.text))) {
		result_270218 = 1;
		break BeforeRet;
		}
		
		}
		else {
		if ((b_270217.kind == 5)) {
		if (!((a_270216.text == b_270217.text))) {
		result_270218 = 1;
		break BeforeRet;
		}
		
		if (!((a_270216.key == b_270217.key))) {
		result_270218 = 1;
		break BeforeRet;
		}
		
		result_270218 = 0;
		break BeforeRet;
		}
		}}}}
			if (!((a_270216.class == b_270217.class))) Tmp5 = true; else {				Tmp5 = !(eq_252814(a_270216.style, b_270217.style));			}			if (Tmp5) Tmp4 = true; else {				Tmp4 = !(same_attrs_259480(a_270216, b_270217));			}		if (Tmp4) {
		result_270218 = 2;
		break BeforeRet;
		}
		
		break BeforeRet;
	} while (false);

	return result_270218;

}

function update_styles_271629(new_node_271631, old_node_271632) {
		if (!((old_node_271632.dom == null))) {
		if (!((new_node_271631.style == null))) {
		apply_style_254025(old_node_271632.dom, new_node_271631.style);
		}
		else {
			old_node_271632.dom.style = {m_type: NTI248276, background: null, backgroundAttachment: null, backgroundColor: null, backgroundImage: null, backgroundPosition: null, backgroundRepeat: null, border: null, borderBottom: null, borderBottomColor: null, borderBottomStyle: null, borderBottomWidth: null, borderColor: null, borderLeft: null, borderLeftColor: null, borderLeftStyle: null, borderLeftWidth: null, borderRight: null, borderRightColor: null, borderRightStyle: null, borderRightWidth: null, borderStyle: null, borderTop: null, borderTopColor: null, borderTopStyle: null, borderTopWidth: null, borderWidth: null, bottom: null, captionSide: null, clear: null, clip: null, color: null, cursor: null, direction: null, display: null, emptyCells: null, cssFloat: null, font: null, fontFamily: null, fontSize: null, fontStretch: null, fontStyle: null, fontVariant: null, fontWeight: null, height: null, left: null, letterSpacing: null, lineHeight: null, listStyle: null, listStyleImage: null, listStylePosition: null, listStyleType: null, margin: null, marginBottom: null, marginLeft: null, marginRight: null, marginTop: null, maxHeight: null, maxWidth: null, minHeight: null, minWidth: null, overflow: null, padding: null, paddingBottom: null, paddingLeft: null, paddingRight: null, paddingTop: null, pageBreakAfter: null, pageBreakBefore: null, pointerEvents: null, position: null, right: null, scrollbar3dLightColor: null, scrollbarArrowColor: null, scrollbarBaseColor: null, scrollbarDarkshadowColor: null, scrollbarFaceColor: null, scrollbarHighlightColor: null, scrollbarShadowColor: null, scrollbarTrackColor: null, tableLayout: null, textAlign: null, textDecoration: null, textIndent: null, textTransform: null, transform: null, top: null, verticalAlign: null, visibility: null, width: null, wordSpacing: null, zIndex: 0};
		}
		
		old_node_271632.dom.className = new_node_271631.class;
		}
		
		old_node_271632.style = new_node_271631.style;
		old_node_271632.class = new_node_271631.class;

	
}

function take_over_attr_257660(new_node_257662, old_node_257663) {
		old_node_257663.attrs = new_node_257662.attrs;

	
}

function update_attributes_271677(new_node_271679, old_node_271680) {
		if (!((old_node_271680.dom == null))) {
		L1: do {
			var k_271689 = null;
			var __271690 = null;
			L2: do {
				var i_363356 = 0;
				var colontmp__363357 = 0;
				colontmp__363357 = subInt((old_node_271680.attrs != null ? old_node_271680.attrs.length : 0), 2);
				var res_363358 = 0;
				L3: do {
						L4: while (true) {
						if (!(res_363358 <= colontmp__363357)) break L4;
							i_363356 = res_363358;
							k_271689 = old_node_271680.attrs[chckIndx(i_363356, 0, old_node_271680.attrs.length+0-1)-0];
							__271690 = old_node_271680.attrs[chckIndx(addInt(i_363356, 1), 0, old_node_271680.attrs.length+0-1)-0];
							old_node_271680.dom.removeAttribute(k_271689);
							res_363358 = addInt(res_363358, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		L5: do {
			var k_271691 = null;
			var v_271692 = null;
			L6: do {
				var i_363364 = 0;
				var colontmp__363365 = 0;
				colontmp__363365 = subInt((new_node_271679.attrs != null ? new_node_271679.attrs.length : 0), 2);
				var res_363366 = 0;
				L7: do {
						L8: while (true) {
						if (!(res_363366 <= colontmp__363365)) break L8;
							i_363364 = res_363366;
							k_271691 = new_node_271679.attrs[chckIndx(i_363364, 0, new_node_271679.attrs.length+0-1)-0];
							v_271692 = new_node_271679.attrs[chckIndx(addInt(i_363364, 1), 0, new_node_271679.attrs.length+0-1)-0];
							if (!((v_271692 == null))) {
							old_node_271680.dom.setAttribute(k_271691, v_271692);
							}
							
							res_363366 = addInt(res_363366, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		}
		
		take_over_attr_257660(new_node_271679, old_node_271680);

	
}

function merge_events_271706(new_node_271708, old_node_271709, kxi_271710) {
						var Tmp4;

		var d_271711 = old_node_271709.dom;
		L1: do {
			var i_271724 = 0;
			var colontmp__363371 = 0;
			colontmp__363371 = (old_node_271709.events != null ? old_node_271709.events.length : 0);
			var i_363372 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_363372 < colontmp__363371)) break L3;
						i_271724 = i_363372;
						var k_271725 = old_node_271709.events[chckIndx(i_271724, 0, old_node_271709.events.length+0-1)-0]["Field0"];
						switch (k_271725) {
						case 30:
						case 29:
							Tmp4 = "keyup";
							break;
						default: 
							Tmp4 = to_event_name_256695[chckIndx(k_271725, 0, to_event_name_256695.length+0-1)-0];
							break;
						}
						var name_271728 = Tmp4;
						d_271711.removeEventListener(name_271728, old_node_271709.events[chckIndx(i_271724, 0, old_node_271709.events.length+0-1)-0]["Field2"]);
						i_363372 = addInt(i_363372, 1);
					}
			} while(false);
		} while(false);
		old_node_271709.events = new_node_271708.events;
		apply_events_269086(old_node_271709);

	
}

function HEX5BHEX5DHEX3D_257768(x_257770, idx_257771, y_257772) {
		x_257770.kids[chckIndx(idx_257771, 0, x_257770.kids.length+0-1)-0] = y_257772;

	
}

function add_patch_v_271868(kxi_271870, parent_271871, pos_271872, new_child_271873) {
		var l_271874 = kxi_271870.patchLenV;
		if (((kxi_271870.patchesV != null ? kxi_271870.patchesV.length : 0) <= l_271874)) {
		if (kxi_271870.patchesV != null) { kxi_271870.patchesV.push({parent: parent_271871, newChild: new_child_271873, pos: pos_271872}); } else { kxi_271870.patchesV = [{parent: parent_271871, newChild: new_child_271873, pos: pos_271872}]; };
		}
		else {
			kxi_271870.patchesV[chckIndx(l_271874, 0, kxi_271870.patchesV.length+0-1)-0].parent = parent_271871;
			kxi_271870.patchesV[chckIndx(l_271874, 0, kxi_271870.patchesV.length+0-1)-0].newChild = new_child_271873;
			kxi_271870.patchesV[chckIndx(l_271874, 0, kxi_271870.patchesV.length+0-1)-0].pos = pos_271872;
		}
		
		kxi_271870.patchLenV = addInt(kxi_271870.patchLenV, 1);

	
}

function add_patch_271814(kxi_271816, ka_271817, parenta_271818, currenta_271819, na_271820) {
		var l_271821 = kxi_271816.patchLen;
		if (((kxi_271816.patches != null ? kxi_271816.patches.length : 0) <= l_271821)) {
		if (kxi_271816.patches != null) { kxi_271816.patches.push({k: ka_271817, parent: parenta_271818, current: currenta_271819, n: na_271820}); } else { kxi_271816.patches = [{k: ka_271817, parent: parenta_271818, current: currenta_271819, n: na_271820}]; };
		}
		else {
			kxi_271816.patches[chckIndx(l_271821, 0, kxi_271816.patches.length+0-1)-0].k = ka_271817;
			kxi_271816.patches[chckIndx(l_271821, 0, kxi_271816.patches.length+0-1)-0].parent = parenta_271818;
			kxi_271816.patches[chckIndx(l_271821, 0, kxi_271816.patches.length+0-1)-0].current = currenta_271819;
			kxi_271816.patches[chckIndx(l_271821, 0, kxi_271816.patches.length+0-1)-0].n = na_271820;
		}
		
		kxi_271816.patchLen = addInt(kxi_271816.patchLen, 1);

	
}

function diff_272045(new_node_272047, old_node_272048, parent_272049, current_272050, kxi_272051) {
				var Tmp1;
			var Tmp2;
			var Tmp3;
						var Tmp6;
						var Tmp9;
						var Tmp10;

	var result_272052 = 0;

	BeforeRet: do {
		result_272052 = eq_270214(new_node_272047, old_node_272048);
		switch (result_272052) {
		case 0:
			if (kxi_272051.components != null) { kxi_272051.components.push({oldNode: old_node_272048, newNode: new_node_272047, parent: parent_272049, current: current_272050}); } else { kxi_272051.components = [{oldNode: old_node_272048, newNode: new_node_272047, parent: parent_272049, current: current_272050}]; };
			break;
		case 3:
		case 2:
			new_node_272047.dom = old_node_272048.dom;
			if ((result_272052 == 2)) {
			update_styles_271629(new_node_272047, old_node_272048);
			update_attributes_271677(new_node_272047, old_node_272048);
			if ((old_node_272048.kind == 0)) {
			old_node_272048.text = new_node_272047.text;
			old_node_272048.dom.nodeValue = new_node_272047.text;
			}
			
			}
			
				if (!(((new_node_272047.events != null ? new_node_272047.events.length : 0) == 0))) Tmp1 = true; else {					Tmp1 = !(((old_node_272048.events != null ? old_node_272048.events.length : 0) == 0));				}			if (Tmp1) {
			merge_events_271706(new_node_272047, old_node_272048, kxi_272051);
			}
			
			var new_length_272401 = len_257728(new_node_272047);
			var old_length_272402 = len_257728(old_node_272048);
			if (((new_length_272401 == 0) && (old_length_272402 == 0))) {
			break BeforeRet;
			}
			
			var min_length_272403 = nimMin(new_length_272401, old_length_272402);
			if (!((old_node_272048.kind == new_node_272047.kind))) {
			failed_assert_impl_15266(makeNimstrLit("karax.nim(418, 12) `oldNode.kind == newNode.kind` "));
			}
			
			var common_prefix_272602 = 0;
			if ((old_node_272048.kind == 5)) Tmp3 = true; else {				Tmp3 = (old_node_272048.kind == 3);			}			if (Tmp3) Tmp2 = true; else {				Tmp2 = (old_node_272048.kind == 4);			}			var is_special_272621 = Tmp2;
			L4: do {
					L5: while (true) {
					if (!(common_prefix_272602 < min_length_272403)) break L5;
						var old_len_272645 = kxi_272051.patchLen;
						var old_len_v_272646 = kxi_272051.patchLenV;
						if (!((common_prefix_272602 < len_257728(new_node_272047)))) {
						failed_assert_impl_15266(makeNimstrLit("karax.nim(427, 14) `commonPrefix <\x0A    newNode.len` "));
						}
						
						if (!((common_prefix_272602 < len_257728(old_node_272048)))) {
						failed_assert_impl_15266(makeNimstrLit("karax.nim(428, 14) `commonPrefix <\x0A    oldNode.len` "));
						}
						
						if (is_special_272621) {
						Tmp6 = diff_272045(HEX5BHEX5D_257750(new_node_272047, common_prefix_272602), HEX5BHEX5D_257750(old_node_272048, common_prefix_272602), parent_272049, current_272050, kxi_272051);
						}
						else {
						Tmp6 = diff_272045(HEX5BHEX5D_257750(new_node_272047, common_prefix_272602), HEX5BHEX5D_257750(old_node_272048, common_prefix_272602), current_272050, current_272050.childNodes[chckIndx(common_prefix_272602, 0, current_272050.childNodes.length+0-1)-0], kxi_272051);
						}
						
						var r_272647 = Tmp6;
						switch (r_272647) {
						case 3:
						case 0:
						case 2:
							HEX5BHEX5DHEX3D_257768(new_node_272047, common_prefix_272602, HEX5BHEX5D_257750(old_node_272048, common_prefix_272602));
							common_prefix_272602 = addInt(common_prefix_272602, 1);
							break;
						case 4:
							add_patch_v_271868(kxi_272051, old_node_272048, common_prefix_272602, HEX5BHEX5D_257750(new_node_272047, common_prefix_272602));
							common_prefix_272602 = addInt(common_prefix_272602, 1);
							result_272052 = 4;
							break;
						case 1:
							kxi_272051.patchLen = old_len_272645;
							kxi_272051.patchLenV = old_len_v_272646;
							if (!((result_272052 == 1))) {
							result_272052 = r_272647;
							}
							
							break L4;
							break;
						}
					}
			} while(false);
			var old_pos_273022 = subInt(old_length_272402, 1);
			var new_pos_273023 = subInt(new_length_272401, 1);
			L7: do {
					L8: while (true) {
						if (!(common_prefix_272602 <= old_pos_273022)) Tmp9 = false; else {							Tmp9 = (common_prefix_272602 <= new_pos_273023);						}					if (!Tmp9) break L8;
						var old_len_273024 = kxi_272051.patchLen;
						var old_len_v_273025 = kxi_272051.patchLenV;
						if (!((new_pos_273023 < len_257728(new_node_272047)))) {
						failed_assert_impl_15266(makeNimstrLit("karax.nim(427, 14) `newPos <\x0A    newNode.len` "));
						}
						
						if (!((old_pos_273022 < len_257728(old_node_272048)))) {
						failed_assert_impl_15266(makeNimstrLit("karax.nim(428, 14) `oldPos <\x0A    oldNode.len` "));
						}
						
						if (is_special_272621) {
						Tmp10 = diff_272045(HEX5BHEX5D_257750(new_node_272047, new_pos_273023), HEX5BHEX5D_257750(old_node_272048, old_pos_273022), parent_272049, current_272050, kxi_272051);
						}
						else {
						Tmp10 = diff_272045(HEX5BHEX5D_257750(new_node_272047, new_pos_273023), HEX5BHEX5D_257750(old_node_272048, old_pos_273022), current_272050, current_272050.childNodes[chckIndx(old_pos_273022, 0, current_272050.childNodes.length+0-1)-0], kxi_272051);
						}
						
						var r_273026 = Tmp10;
						switch (r_273026) {
						case 3:
						case 0:
						case 2:
							HEX5BHEX5DHEX3D_257768(new_node_272047, new_pos_273023, HEX5BHEX5D_257750(old_node_272048, old_pos_273022));
							old_pos_273022 = subInt(old_pos_273022, 1);
							new_pos_273023 = subInt(new_pos_273023, 1);
							break;
						case 4:
							add_patch_v_271868(kxi_272051, old_node_272048, old_pos_273022, HEX5BHEX5D_257750(new_node_272047, new_pos_273023));
							old_pos_273022 = subInt(old_pos_273022, 1);
							new_pos_273023 = subInt(new_pos_273023, 1);
							result_272052 = 4;
							break;
						case 1:
							kxi_272051.patchLen = old_len_273024;
							kxi_272051.patchLenV = old_len_v_273025;
							if (!((result_272052 == 1))) {
							result_272052 = r_273026;
							}
							
							break L7;
							break;
						}
					}
			} while(false);
			var pos_273434 = addInt(nimMin(old_pos_273022, new_pos_273023), 1);
			L11: do {
				var i_273440 = 0;
				var colontmp__363314 = 0;
				colontmp__363314 = subInt(pos_273434, 1);
				var res_363315 = common_prefix_272602;
				L12: do {
						L13: while (true) {
						if (!(res_363315 <= colontmp__363314)) break L13;
							i_273440 = res_363315;
							var r_273441 = diff_272045(HEX5BHEX5D_257750(new_node_272047, i_273440), HEX5BHEX5D_257750(old_node_272048, i_273440), current_272050, current_272050.childNodes[chckIndx(i_273440, 0, current_272050.childNodes.length+0-1)-0], kxi_272051);
							if ((r_273441 == 4)) {
							add_patch_v_271868(kxi_272051, old_node_272048, i_273440, HEX5BHEX5D_257750(new_node_272047, i_273440));
							}
							else {
							if (!((r_273441 == 1))) {
							HEX5BHEX5DHEX3D_257768(new_node_272047, i_273440, HEX5BHEX5D_257750(old_node_272048, i_273440));
							}
							}
							res_363315 = addInt(res_363315, 1);
						}
				} while(false);
			} while(false);
			if ((addInt(old_pos_273022, 1) == old_length_272402)) {
			L14: do {
				var i_273457 = 0;
				var res_363321 = pos_273434;
				L15: do {
						L16: while (true) {
						if (!(res_363321 <= new_pos_273023)) break L16;
							i_273457 = res_363321;
							add_patch_271814(kxi_272051, 2, current_272050, null, HEX5BHEX5D_257750(new_node_272047, i_273457));
							result_272052 = 4;
							res_363321 = addInt(res_363321, 1);
						}
				} while(false);
			} while(false);
			}
			else {
				var before_273458 = current_272050.childNodes[chckIndx(addInt(old_pos_273022, 1), 0, current_272050.childNodes.length+0-1)-0];
				L17: do {
					var i_273464 = 0;
					var res_363327 = pos_273434;
					L18: do {
							L19: while (true) {
							if (!(res_363327 <= new_pos_273023)) break L19;
								i_273464 = res_363327;
								add_patch_271814(kxi_272051, 3, current_272050, before_273458, HEX5BHEX5D_257750(new_node_272047, i_273464));
								result_272052 = 4;
								res_363327 = addInt(res_363327, 1);
							}
					} while(false);
				} while(false);
			}
			
			L20: do {
				var i_273470 = 0;
				var res_363333 = pos_273434;
				L21: do {
						L22: while (true) {
						if (!(res_363333 <= old_pos_273022)) break L22;
							i_273470 = res_363333;
							add_patch_271814(kxi_268324[0], 4, null, null, HEX5BHEX5D_257750(old_node_272048, i_273470));
							add_patch_271814(kxi_272051, 1, current_272050, current_272050.childNodes[chckIndx(i_273470, 0, current_272050.childNodes.length+0-1)-0], null);
							result_272052 = 4;
							res_363333 = addInt(res_363333, 1);
						}
				} while(false);
			} while(false);
			break;
		case 1:
			add_patch_271814(kxi_268324[0], 4, null, null, old_node_272048);
			add_patch_271814(kxi_272051, 0, parent_272049, current_272050, new_node_272047);
			break;
		case 4:
			if (true) {
			failed_assert_impl_15266(makeNimstrLit("karax.nim(491, 26) `false` eq returned usenewNode"));
			}
			
			break;
		}
	} while (false);

	return result_272052;

}

function apply_components_273814(kxi_273816) {
						var Tmp3;

		var i_273818 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_273818 < (kxi_273816.components != null ? kxi_273816.components.length : 0))) break L2;
					var x_273824 = kxi_273816.components[chckIndx(i_273818, 0, kxi_273816.components.length+0-1)-0].oldNode;
					var new_node_273825 = kxi_273816.components[chckIndx(i_273818, 0, kxi_273816.components.length+0-1)-0].newNode;
						if (!!((x_273824.changedImpl == null))) Tmp3 = false; else {							Tmp3 = x_273824.changedImpl(x_273824, new_node_273825);						}					if (Tmp3) {
					var current_274201 = kxi_273816.components[chckIndx(i_273818, 0, kxi_273816.components.length+0-1)-0].current;
					var parent_274202 = kxi_273816.components[chckIndx(i_273818, 0, kxi_273816.components.length+0-1)-0].parent;
					x_273824.updatedImpl(x_273824, new_node_273825);
					var old_expanded_274203 = x_273824.expanded;
					x_273824.expanded = x_273824.renderImpl(x_273824);
					x_273824.renderedVersion = x_273824.version;
					if ((old_expanded_274203 == null)) {
					add_patch_271814(kxi_268324[0], 4, null, null, x_273824);
					add_patch_271814(kxi_273816, 0, parent_274202, current_274201, x_273824.expanded);
					}
					else {
						var res_274601 = diff_272045(x_273824.expanded, old_expanded_274203, parent_274202, current_274201, kxi_273816);
						if ((res_274601 == 4)) {
						}
						else {
						if (!((res_274601 == 1))) {
						x_273824.expanded = old_expanded_274203;
						if (!(!((old_expanded_274203.dom == null)))) {
						failed_assert_impl_15266(makeNimstrLit("karax.nim(533, 18) `oldExpanded.dom != nil` old expanded.dom is nil"));
						}
						
						}
						else {
							if (!(!((x_273824.expanded.dom == null)))) {
							failed_assert_impl_15266(makeNimstrLit("karax.nim(537, 18) `x.expanded.dom != nil` expanded.dom is nil"));
							}
							
						}
						}
					}
					
					}
					
					i_273818 = addInt(i_273818, 1);
				}
		} while(false);
		if (kxi_273816.components === null) kxi_273816.components = [];
               if (kxi_273816.components.length < 0) { for (var i=kxi_273816.components.length;i<0;++i) kxi_273816.components.push({oldNode: null, newNode: null, parent: null, current: null}); }
               else { kxi_273816.components.length = 0; };

	
}

function apply_patch_271906(kxi_271908) {
		L1: do {
			var i_271916 = 0;
			var colontmp__363379 = 0;
			colontmp__363379 = kxi_271908.patchLen;
			var i_363380 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_363380 < colontmp__363379)) break L3;
						i_271916 = i_363380;
						var p_271917 = nimCopy(null, kxi_271908.patches[chckIndx(i_271916, 0, kxi_271908.patches.length+0-1)-0], NTI268209);
						switch (p_271917.k) {
						case 0:
							var nn_271918 = vnode_to_dom_269167(p_271917.n, kxi_271908);
							if ((p_271917.parent == null)) {
							replace_by_id_270012(kxi_271908.rootId, nn_271918);
							}
							else {
							p_271917.parent.replaceChild(nn_271918, p_271917.current);
							}
							
							break;
						case 1:
							p_271917.parent.removeChild(p_271917.current);
							break;
						case 2:
							var nn_271927 = vnode_to_dom_269167(p_271917.n, kxi_271908);
							p_271917.parent.appendChild(nn_271927);
							break;
						case 3:
							var nn_271928 = vnode_to_dom_269167(p_271917.n, kxi_271908);
							p_271917.parent.insertBefore(nn_271928, p_271917.current);
							break;
						case 4:
							var n_271929 = p_271917.n;
							if (!((n_271929.id == null))) {
							delete kxi_271908.byId[n_271929.id];
							}
							
							if ((n_271929.kind == 5)) {
							var x_271947 = n_271929;
							if (!((x_271947.onDetachImpl == null))) {
							x_271947.onDetachImpl(x_271947);
							}
							
							}
							
							if (!(kxi_271908.surpressRedraws)) {
							n_271929.dom = null;
							}
							
							break;
						}
						i_363380 = addInt(i_363380, 1);
					}
			} while(false);
		} while(false);
		kxi_271908.patchLen = 0;
		L4: do {
			var i_271960 = 0;
			var colontmp__363384 = 0;
			colontmp__363384 = kxi_271908.patchLenV;
			var i_363385 = 0;
			L5: do {
					L6: while (true) {
					if (!(i_363385 < colontmp__363384)) break L6;
						i_271960 = i_363385;
						var p_271961 = nimCopy(null, kxi_271908.patchesV[chckIndx(i_271960, 0, kxi_271908.patchesV.length+0-1)-0], NTI268211);
						HEX5BHEX5DHEX3D_257768(p_271961.parent, p_271961.pos, p_271961.newChild);
						if (!(!((p_271961.newChild.dom == null)))) {
						failed_assert_impl_15266(makeNimstrLit("karax.nim(377, 12) `p.newChild.dom != nil` "));
						}
						
						i_363385 = addInt(i_363385, 1);
					}
			} while(false);
		} while(false);
		kxi_271908.patchLenV = 0;

	
}

function dodraw_276646(kxi_276648) {
	BeforeRet: do {
		if ((kxi_276648.renderer == null)) {
		break BeforeRet;
		}
		
		var rdata_276653 = {hashPart: window.location.hash};
		var newtree_276654 = kxi_276648.renderer(rdata_276653);
		kxi_276648.runCount = addInt(kxi_276648.runCount, 1);
		newtree_276654.id = kxi_276648.rootId;
		kxi_276648.toFocus = null;
		if ((kxi_276648.currentTree == null)) {
		var asdom_276669 = vnode_to_dom_269167(newtree_276654, kxi_276648);
		replace_by_id_270012(kxi_276648.rootId, asdom_276669);
		}
		else {
			if (!(same_269920(kxi_276648.currentTree, document.getElementById(kxi_276648.rootId), 0))) {
			failed_assert_impl_15266(makeNimstrLit("karax.nim(597, 14) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
			}
			
			var olddom_276801 = document.getElementById(kxi_276648.rootId);
			diff_272045(newtree_276654, kxi_276648.currentTree, null, olddom_276801, kxi_276648);
		}
		
		apply_components_273814(kxi_276648);
		apply_patch_271906(kxi_276648);
		kxi_276648.currentTree = newtree_276654;
		if (!(same_269920(kxi_276648.currentTree, document.getElementById(kxi_276648.rootId), 0))) {
		failed_assert_impl_15266(makeNimstrLit("karax.nim(611, 12) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
		}
		
		if (!((kxi_276648.postRenderCallback == null))) {
		kxi_276648.postRenderCallback(rdata_276653);
		}
		
		if (!((kxi_276648.toFocus == null))) {
		kxi_276648.toFocus.focus();
		}
		
		kxi_276648.renderId = 0;
	} while (false);

	
}

function init_278046(ev_278048) {

		function HEX3Aanonymous_278049() {
				dodraw_276646(kxi_268324[0]);

			
		}

		kxi_268324[0].renderId = window.requestAnimationFrame(HEX3Aanonymous_278049);

	
}

function redraw_277814(kxi_277816) {

		function HEX3Aanonymous_278001() {
				dodraw_276646(kxi_277816);

			
		}

		if ((kxi_277816.renderId == 0)) {
		kxi_277816.renderId = window.requestAnimationFrame(HEX3Aanonymous_278001);
		}
		

	
}

function set_renderer_278078(renderer_278083, root_278084, client_post_render_callback_278088) {

		function HEX3Aanonymous_278312() {
				redraw_277814(kxi_268324[0]);

			
		}

	var result_278089 = null;

		if ((document.getElementById(root_278084) == null)) {
		var msg_278095 = (("Could not find a <div> with id=" + root_278084) + ". Karax needs it as its rendering target.");
		var e_278098 = null;
		e_278098 = {m_type: NTI3626, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_278098.message = nimCopy(null, cstrToNimstr(msg_278095), NTI138);
		e_278098.parent = null;
		raiseException(e_278098, "Exception");
		}
		
		result_278089 = {rootId: root_278084, renderer: renderer_278083, postRenderCallback: client_post_render_callback_278088, patches: new_seq_278212(60), patchesV: new_seq_278249(30), components: [], surpressRedraws: false, byId: {}, orphans: {}, currentTree: null, toFocus: null, toFocusV: null, renderId: 0, patchLen: 0, patchLenV: 0, runCount: 0};
		kxi_268324[0] = result_278089;
		window.onload = init_278046;
		window.onhashchange = HEX3Aanonymous_278312;

	return result_278089;

}

function set_renderer_278400(renderer_278404, root_278405, client_post_render_callback_278408) {

		function wrap_renderer_278410(data_278412) {
			var result_278413 = null;

				result_278413 = renderer_278404();

			return result_278413;

		}

		function wrap_post_render_278427(data_278429) {
				if (!((client_post_render_callback_278408 == null))) {
				client_post_render_callback_278408();
				}
				

			
		}

	var result_278409 = null;

		result_278409 = set_renderer_278078(wrap_renderer_278410, root_278405, wrap_post_render_278427);

	return result_278409;

}

function new_vnode_259028(kind_259030) {
	var result_259031 = null;

		result_259031 = {kind: kind_259030, index: -1, m_type: NTI256714, id: null, class: null, text: null, kids: null, attrs: null, events: null, style: null, dom: null};

	return result_259031;

}

function add_257786(parent_257788, kid_257789) {
		if (parent_257788.kids != null) { parent_257788.kids.push(kid_257789); } else { parent_257788.kids = [kid_257789]; };

	
}

function tree_259046(kind_259048, kids_259050) {
	var result_259051 = null;

		result_259051 = new_vnode_259028(kind_259048);
		L1: do {
			var k_259082 = null;
			var i_363463 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_363463 < (kids_259050 != null ? kids_259050.length : 0))) break L3;
						k_259082 = kids_259050[chckIndx(i_363463, 0, kids_259050.length+0-1)-0];
						add_257786(result_259051, k_259082);
						i_363463 = addInt(i_363463, 1);
					}
			} while(false);
		} while(false);

	return result_259051;

}

function add_event_listener_259521(n_259523, event_259524, handler_259525) {
		if (n_259523.events != null) { n_259523.events.push({Field0: event_259524, Field1: handler_259525, Field2: null}); } else { n_259523.events = [{Field0: event_259524, Field1: handler_259525, Field2: null}]; };

	
}

function add_event_handler_278547(n_278549, k_278550, action_278551, kxi_278552) {

		function wrapper_278553(ev_278555, n_278556) {
				action_278551(ev_278555, n_278556);
				if (!(kxi_278552.surpressRedraws)) {
				redraw_277814(kxi_278552);
				}
				

			
		}

		add_event_listener_259521(n_278549, k_278550, wrapper_278553);

	
}

function chckd_check_342837(ev_342840, n_342841) {
		L1: do {
			var inp_chck_343014 = null;
			var colontmp__363467 = null;
			colontmp__363467 = document.querySelectorAll(".show-sector");
			var i_363469 = 0;
			var l_363470 = (colontmp__363467 != null ? colontmp__363467.length : 0);
			L2: do {
					L3: while (true) {
					if (!(i_363469 < l_363470)) break L3;
						inp_chck_343014 = colontmp__363467[chckIndx(i_363469, 0, colontmp__363467.length+0-1)-0];
						if ((inp_chck_343014.getAttribute("checkd") == "true")) {
						inp_chck_343014.setAttribute("checked", "true");
						}
						else {
						inp_chck_343014.removeAttribute("checked");
						}
						
						i_363469 = addInt(i_363469, 1);
						if (!(((colontmp__363467 != null ? colontmp__363467.length : 0) == l_363470))) {
						failed_assert_impl_15266(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);

	
}

function len_313405(t_313410) {
	var result_313411 = 0;

		result_313411 = t_313410.counter;

	return result_313411;

}

function text_259164(s_259166) {
	var result_259167 = null;

		result_259167 = {kind: 0, text: toJSStr(s_259166), index: -1, m_type: NTI256714, id: null, class: null, kids: null, attrs: null, events: null, style: null, dom: null};

	return result_259167;

}

function init_ordered_table_337423(initial_size_337427) {
	var result_337429 = {data: null, counter: 0, first: 0, last: 0};

		if (!(is_power_of_two_143062(initial_size_337427))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_337429.counter = 0;
		result_337429.data = new Array(chckRange(initial_size_337427, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_337427, 0, 2147483647);++i) {result_337429.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		result_337429.first = -1;
		result_337429.last = -1;

	return result_337429;

}

function raw_get_338421(t_338426, key_338427, hc_338428, hc_338428_Idx) {
						var Tmp3;

	var result_338429 = 0;

	BeforeRet: do {
		hc_338428[hc_338428_Idx] = hash_180014(key_338427);
		if ((hc_338428[hc_338428_Idx] == 0)) {
		hc_338428[hc_338428_Idx] = 314159265;
		}
		
		if (((t_338426.data != null ? t_338426.data.length : 0) == 0)) {
		result_338429 = -1;
		break BeforeRet;
		}
		
		var h_338571 = (hc_338428[hc_338428_Idx] & (t_338426.data != null ? (t_338426.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_183018(t_338426.data[chckIndx(h_338571, 0, t_338426.data.length+0-1)-0].Field0)) break L2;
						if (!(t_338426.data[chckIndx(h_338571, 0, t_338426.data.length+0-1)-0].Field0 == hc_338428[hc_338428_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_338426.data[chckIndx(h_338571, 0, t_338426.data.length+0-1)-0].Field2, key_338427);						}					if (Tmp3) {
					result_338429 = h_338571;
					break BeforeRet;
					}
					
					h_338571 = next_try_183035(h_338571, (t_338426.data != null ? (t_338426.data.length-1) : -1));
				}
		} while(false);
		result_338429 = subInt(-1, h_338571);
	} while (false);

	return result_338429;

}

function raw_insert_341107(t_341113, data_341116, data_341116_Idx, key_341117, val_341118, hc_341119, h_341120) {
		data_341116[data_341116_Idx][chckIndx(h_341120, 0, data_341116[data_341116_Idx].length+0-1)-0].Field2 = nimCopy(null, key_341117, NTI138);
		data_341116[data_341116_Idx][chckIndx(h_341120, 0, data_341116[data_341116_Idx].length+0-1)-0].Field3 = val_341118;
		data_341116[data_341116_Idx][chckIndx(h_341120, 0, data_341116[data_341116_Idx].length+0-1)-0].Field0 = hc_341119;
		data_341116[data_341116_Idx][chckIndx(h_341120, 0, data_341116[data_341116_Idx].length+0-1)-0].Field1 = -1;
		if ((t_341113.first < 0)) {
		t_341113.first = h_341120;
		}
		
		if ((0 <= t_341113.last)) {
		data_341116[data_341116_Idx][chckIndx(t_341113.last, 0, data_341116[data_341116_Idx].length+0-1)-0].Field1 = h_341120;
		}
		
		t_341113.last = h_341120;

	
}

function enlarge_339967(t_339973) {
		var n_339981 = null;
		n_339981 = new Array(chckRange(mulInt((t_339973.data != null ? t_339973.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_339973.data != null ? t_339973.data.length : 0), 2), 0, 2147483647);++i) {n_339981[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		var h_340120 = t_339973.first;
		t_339973.first = -1;
		t_339973.last = -1;
		var Tmp1 = t_339973.data; t_339973.data = n_339981; n_339981 = Tmp1;		L2: do {
				L3: while (true) {
				if (!(0 <= h_340120)) break L3;
					var nxt_340286 = n_339981[chckIndx(h_340120, 0, n_339981.length+0-1)-0].Field1;
					var eh_340442 = n_339981[chckIndx(h_340120, 0, n_339981.length+0-1)-0].Field0;
					if (is_filled_183018(eh_340442)) {
					var j_340449 = (eh_340442 & (t_339973.data != null ? (t_339973.data.length-1) : -1));
					L4: do {
							L5: while (true) {
							if (!is_filled_183018(t_339973.data[chckIndx(j_340449, 0, t_339973.data.length+0-1)-0].Field0)) break L5;
								j_340449 = next_try_183035(j_340449, (t_339973.data != null ? (t_339973.data.length-1) : -1));
							}
					} while(false);
					raw_insert_341107(t_339973, t_339973, "data", n_339981[chckIndx(h_340120, 0, n_339981.length+0-1)-0].Field2, n_339981[chckIndx(h_340120, 0, n_339981.length+0-1)-0].Field3, n_339981[chckIndx(h_340120, 0, n_339981.length+0-1)-0].Field0, j_340449);
					}
					
					h_340120 = nxt_340286;
				}
		} while(false);

	
}

function raw_get_known_hc_341944(t_341949, key_341950, hc_341951) {
	var result_341952 = 0;

	BeforeRet: do {
		if (((t_341949.data != null ? t_341949.data.length : 0) == 0)) {
		result_341952 = -1;
		break BeforeRet;
		}
		
		var h_342091 = (hc_341951 & (t_341949.data != null ? (t_341949.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_183018(t_341949.data[chckIndx(h_342091, 0, t_341949.data.length+0-1)-0].Field0)) break L2;
					if (((t_341949.data[chckIndx(h_342091, 0, t_341949.data.length+0-1)-0].Field0 == hc_341951) && eqStrings(t_341949.data[chckIndx(h_342091, 0, t_341949.data.length+0-1)-0].Field2, key_341950))) {
					result_341952 = h_342091;
					break BeforeRet;
					}
					
					h_342091 = next_try_183035(h_342091, (t_341949.data != null ? (t_341949.data.length-1) : -1));
				}
		} while(false);
		result_341952 = subInt(-1, h_342091);
	} while (false);

	return result_341952;

}

function HEX5BHEX5DHEX3D_337945(t_337951, key_337952, val_337953) {
		if (((t_337951.data != null ? t_337951.data.length : 0) == 0)) {
		if (!(is_power_of_two_143062(64))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_337951.counter = 0;
		t_337951.data = new Array(64); for (var i=0;i<64;++i) {t_337951.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		t_337951.first = -1;
		t_337951.last = -1;
		}
		
		var hc_338401 = [0];
		var index_339060 = raw_get_338421(t_337951, key_337952, hc_338401, 0);
		if ((0 <= index_339060)) {
		t_337951.data[chckIndx(index_339060, 0, t_337951.data.length+0-1)-0].Field3 = val_337953;
		}
		else {
			if (((t_337951.data != null ? t_337951.data.length : 0) == 0)) {
			if (!(is_power_of_two_143062(64))) {
			failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			t_337951.counter = 0;
			t_337951.data = new Array(64); for (var i=0;i<64;++i) {t_337951.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}			t_337951.first = -1;
			t_337951.last = -1;
			}
			
			if (must_rehash_183053((t_337951.data != null ? t_337951.data.length : 0), t_337951.counter)) {
			enlarge_339967(t_337951);
			index_339060 = raw_get_known_hc_341944(t_337951, key_337952, hc_338401[0]);
			}
			
			index_339060 = subInt(-1, index_339060);
			raw_insert_341107(t_337951, t_337951, "data", key_337952, val_337953, hc_338401[0], index_339060);
			t_337951.counter = addInt(t_337951.counter, 1);
		}
		

	
}

function nsuIntToStr(x_150215, minchars_150216) {
	var result_150217 = null;

		result_150217 = nimCopy(null, cstrToNimstr((absInt(x_150215))+""), NTI138);
		L1: do {
			var i_150226 = 0;
			var colontmp__363495 = 0;
			colontmp__363495 = subInt(minchars_150216, (result_150217 != null ? result_150217.length : 0));
			var res_363496 = 1;
			L2: do {
					L3: while (true) {
					if (!(res_363496 <= colontmp__363495)) break L3;
						i_150226 = res_363496;
						result_150217 = nimCopy(null, [48].concat(result_150217 || []), NTI138);
						res_363496 = addInt(res_363496, 1);
					}
			} while(false);
		} while(false);
		if ((x_150215 < 0)) {
		result_150217 = nimCopy(null, [45].concat(result_150217 || []), NTI138);
		}
		

	return result_150217;

}

function HEX2D_162091(a_162093, b_162094) {
	var result_162095 = 0;

		result_162095 = (a_162093 - b_162094);

	return result_162095;

}

function HEX2A_162001(a_162003, b_162004) {
	var result_162005 = 0;

		result_162005 = (a_162003 * b_162004);

	return result_162005;

}

function convert_165426(unit_from_165429, unit_to_165430, quantity_165431) {
		var Tmp1;

	var result_165432 = 0;

		if ((unit_from_165429 < unit_to_165430)) {
		Tmp1 = chckRange(divInt(quantity_165431, divInt(unit_weights_162777[chckIndx(unit_to_165430, 0, unit_weights_162777.length+0-1)-0], unit_weights_162777[chckIndx(unit_from_165429, 0, unit_weights_162777.length+0-1)-0])), 0, 999999999);
		}
		else {
		Tmp1 = chckRange(HEX2A_162001(divInt(unit_weights_162777[chckIndx(unit_from_165429, 0, unit_weights_162777.length+0-1)-0], unit_weights_162777[chckIndx(unit_to_165430, 0, unit_weights_162777.length+0-1)-0]), quantity_165431), 0, 999999999);
		}
		
		result_165432 = Tmp1;

	return result_165432;

}

function HEX2B_162055(a_162057, b_162058) {
	var result_162059 = 0;

		result_162059 = (a_162057 + b_162058);

	return result_162059;

}

function HEX3DHEX3D_167792(zone1_167794, zone2_167795) {
	var result_167796 = false;

	BeforeRet: do {
		if ((zone1_167794 == zone2_167795)) {
		result_167796 = true;
		break BeforeRet;
		}
		
		if (((zone1_167794 == null) || (zone2_167795 == null))) {
		result_167796 = false;
		break BeforeRet;
		}
		
		result_167796 = eqStrings(zone1_167794.name, zone2_167795.name);
	} while (false);

	return result_167796;

}

function format_pattern_170490(dt_170492, pattern_170493, result_170495, result_170495_Idx, loc_170496) {
			var Tmp1;
			var Tmp2;
			var Tmp3;
			var Tmp4;
			var Tmp5;
			var Tmp6;
			var Tmp7;
			var Tmp8;
			var Tmp9;
				var Tmp10;
				var Tmp11;
			var Tmp12;

		switch (pattern_170493) {
		case 0:
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(cstrToNimstr((dt_170492.monthday)+"")); } else { result_170495[result_170495_Idx] = cstrToNimstr((dt_170492.monthday)+"").slice(); };
			break;
		case 1:
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(nsuIntToStr(dt_170492.monthday, 2)); } else { result_170495[result_170495_Idx] = nsuIntToStr(dt_170492.monthday, 2).slice(); };
			break;
		case 2:
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(loc_170496.ddd[chckIndx(dt_170492.weekday, 0, loc_170496.ddd.length+0-1)-0]); } else { result_170495[result_170495_Idx] = loc_170496.ddd[chckIndx(dt_170492.weekday, 0, loc_170496.ddd.length+0-1)-0].slice(); };
			break;
		case 3:
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(loc_170496.dddd[chckIndx(dt_170492.weekday, 0, loc_170496.dddd.length+0-1)-0]); } else { result_170495[result_170495_Idx] = loc_170496.dddd[chckIndx(dt_170492.weekday, 0, loc_170496.dddd.length+0-1)-0].slice(); };
			break;
		case 4:
			if ((dt_170492.hour == 0)) {
			Tmp1 = makeNimstrLit("12");
			}
			else {
			if ((12 < dt_170492.hour)) {
			Tmp1 = cstrToNimstr((HEX2D_162091(dt_170492.hour, 12))+"");
			}
			else {
			Tmp1 = cstrToNimstr((dt_170492.hour)+"");
			}
			}
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(Tmp1); } else { result_170495[result_170495_Idx] = Tmp1.slice(); };
			break;
		case 5:
			if ((dt_170492.hour == 0)) {
			Tmp2 = makeNimstrLit("12");
			}
			else {
			if ((12 < dt_170492.hour)) {
			Tmp2 = nsuIntToStr(HEX2D_162091(dt_170492.hour, 12), 2);
			}
			else {
			Tmp2 = nsuIntToStr(dt_170492.hour, 2);
			}
			}
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(Tmp2); } else { result_170495[result_170495_Idx] = Tmp2.slice(); };
			break;
		case 6:
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(cstrToNimstr((dt_170492.hour)+"")); } else { result_170495[result_170495_Idx] = cstrToNimstr((dt_170492.hour)+"").slice(); };
			break;
		case 7:
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(nsuIntToStr(dt_170492.hour, 2)); } else { result_170495[result_170495_Idx] = nsuIntToStr(dt_170492.hour, 2).slice(); };
			break;
		case 8:
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(cstrToNimstr((dt_170492.minute)+"")); } else { result_170495[result_170495_Idx] = cstrToNimstr((dt_170492.minute)+"").slice(); };
			break;
		case 9:
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(nsuIntToStr(dt_170492.minute, 2)); } else { result_170495[result_170495_Idx] = nsuIntToStr(dt_170492.minute, 2).slice(); };
			break;
		case 10:
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(cstrToNimstr((dt_170492.month)+"")); } else { result_170495[result_170495_Idx] = cstrToNimstr((dt_170492.month)+"").slice(); };
			break;
		case 11:
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(nsuIntToStr(dt_170492.month, 2)); } else { result_170495[result_170495_Idx] = nsuIntToStr(dt_170492.month, 2).slice(); };
			break;
		case 12:
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(loc_170496.MMM[chckIndx(dt_170492.month, 1, loc_170496.MMM.length+1-1)-1]); } else { result_170495[result_170495_Idx] = loc_170496.MMM[chckIndx(dt_170492.month, 1, loc_170496.MMM.length+1-1)-1].slice(); };
			break;
		case 13:
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(loc_170496.MMMM[chckIndx(dt_170492.month, 1, loc_170496.MMMM.length+1-1)-1]); } else { result_170495[result_170495_Idx] = loc_170496.MMMM[chckIndx(dt_170492.month, 1, loc_170496.MMMM.length+1-1)-1].slice(); };
			break;
		case 14:
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(cstrToNimstr((dt_170492.second)+"")); } else { result_170495[result_170495_Idx] = cstrToNimstr((dt_170492.second)+"").slice(); };
			break;
		case 15:
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(nsuIntToStr(dt_170492.second, 2)); } else { result_170495[result_170495_Idx] = nsuIntToStr(dt_170492.second, 2).slice(); };
			break;
		case 16:
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(nsuIntToStr(convert_165426(0, 2, dt_170492.nanosecond), 3)); } else { result_170495[result_170495_Idx] = nsuIntToStr(convert_165426(0, 2, dt_170492.nanosecond), 3).slice(); };
			break;
		case 17:
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(nsuIntToStr(convert_165426(0, 1, dt_170492.nanosecond), 6)); } else { result_170495[result_170495_Idx] = nsuIntToStr(convert_165426(0, 1, dt_170492.nanosecond), 6).slice(); };
			break;
		case 18:
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(nsuIntToStr(dt_170492.nanosecond, 9)); } else { result_170495[result_170495_Idx] = nsuIntToStr(dt_170492.nanosecond, 9).slice(); };
			break;
		case 19:
			if ((12 <= dt_170492.hour)) {
			Tmp3 = makeNimstrLit("P");
			}
			else {
			Tmp3 = makeNimstrLit("A");
			}
			
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(Tmp3); } else { result_170495[result_170495_Idx] = Tmp3.slice(); };
			break;
		case 20:
			if ((12 <= dt_170492.hour)) {
			Tmp4 = makeNimstrLit("PM");
			}
			else {
			Tmp4 = makeNimstrLit("AM");
			}
			
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(Tmp4); } else { result_170495[result_170495_Idx] = Tmp4.slice(); };
			break;
		case 21:
			if ((dt_170492.year <= 0)) {
			Tmp5 = HEX2B_162055(absInt(dt_170492.year), 1);
			}
			else {
			Tmp5 = dt_170492.year;
			}
			
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(cstrToNimstr((modInt(Tmp5, 10))+"")); } else { result_170495[result_170495_Idx] = cstrToNimstr((modInt(Tmp5, 10))+"").slice(); };
			break;
		case 22:
			if ((dt_170492.year <= 0)) {
			Tmp6 = HEX2B_162055(absInt(dt_170492.year), 1);
			}
			else {
			Tmp6 = dt_170492.year;
			}
			
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(nsuIntToStr(modInt(Tmp6, 100), 2)); } else { result_170495[result_170495_Idx] = nsuIntToStr(modInt(Tmp6, 100), 2).slice(); };
			break;
		case 23:
			if ((dt_170492.year <= 0)) {
			Tmp7 = HEX2B_162055(absInt(dt_170492.year), 1);
			}
			else {
			Tmp7 = dt_170492.year;
			}
			
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(nsuIntToStr(modInt(Tmp7, 1000), 3)); } else { result_170495[result_170495_Idx] = nsuIntToStr(modInt(Tmp7, 1000), 3).slice(); };
			break;
		case 24:
			if ((dt_170492.year <= 0)) {
			Tmp8 = HEX2B_162055(absInt(dt_170492.year), 1);
			}
			else {
			Tmp8 = dt_170492.year;
			}
			
			var year_170531 = Tmp8;
			if ((year_170531 < 10000)) {
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(nsuIntToStr(year_170531, 4)); } else { result_170495[result_170495_Idx] = nsuIntToStr(year_170531, 4).slice(); };
			}
			else {
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat([43].concat(cstrToNimstr((year_170531)+"") || [])); } else { result_170495[result_170495_Idx] = [43].concat(cstrToNimstr((year_170531)+"") || []).slice(); };
			}
			
			break;
		case 25:
			if ((dt_170492.year <= 0)) {
			Tmp9 = HEX2B_162055(absInt(dt_170492.year), 1);
			}
			else {
			Tmp9 = dt_170492.year;
			}
			
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(nsuIntToStr(modInt(Tmp9, 100000), 5)); } else { result_170495[result_170495_Idx] = nsuIntToStr(modInt(Tmp9, 100000), 5).slice(); };
			break;
		case 26:
			if ((dt_170492.year < 1)) {
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(cstrToNimstr((HEX2B_162055(absInt(dt_170492.year), 1))+"")); } else { result_170495[result_170495_Idx] = cstrToNimstr((HEX2B_162055(absInt(dt_170492.year), 1))+"").slice(); };
			}
			else {
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(cstrToNimstr((dt_170492.year)+"")); } else { result_170495[result_170495_Idx] = cstrToNimstr((dt_170492.year)+"").slice(); };
			}
			
			break;
		case 27:
			var year_170534 = dt_170492.year;
			if (((year_170534 < 10000) || (year_170534 < 0))) {
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(nsuIntToStr(year_170534, 4)); } else { result_170495[result_170495_Idx] = nsuIntToStr(year_170534, 4).slice(); };
			}
			else {
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat([43].concat(cstrToNimstr((year_170534)+"") || [])); } else { result_170495[result_170495_Idx] = [43].concat(cstrToNimstr((year_170534)+"") || []).slice(); };
			}
			
			break;
		case 28:
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(cstrToNimstr((dt_170492.year)+"")); } else { result_170495[result_170495_Idx] = cstrToNimstr((dt_170492.year)+"").slice(); };
			break;
		case 29:
		case 30:
		case 31:
		case 32:
				if (!!(HEX3DHEX3D_167792(dt_170492.timezone, null))) Tmp10 = false; else {					Tmp10 = eqStrings(dt_170492.timezone.name, makeNimstrLit("Etc/UTC"));				}			if (Tmp10) {
			if (result_170495[result_170495_Idx] != null) { addChar(result_170495[result_170495_Idx], 90); } else { result_170495[result_170495_Idx] = [90]; };
			}
			else {
				if ((0 <= negInt(dt_170492.utcOffset))) {
				Tmp11 = 43;
				}
				else {
				Tmp11 = 45;
				}
				
				if (result_170495[result_170495_Idx] != null) { addChar(result_170495[result_170495_Idx], Tmp11); } else { result_170495[result_170495_Idx] = [Tmp11]; };
				var abs_offset_170540 = absInt(dt_170492.utcOffset);
				switch (pattern_170493) {
				case 29:
					if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(cstrToNimstr((divInt(abs_offset_170540, 3600))+"")); } else { result_170495[result_170495_Idx] = cstrToNimstr((divInt(abs_offset_170540, 3600))+"").slice(); };
					break;
				case 30:
					if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(nsuIntToStr(divInt(abs_offset_170540, 3600), 2)); } else { result_170495[result_170495_Idx] = nsuIntToStr(divInt(abs_offset_170540, 3600), 2).slice(); };
					break;
				case 31:
					var h_170544 = nsuIntToStr(divInt(abs_offset_170540, 3600), 2);
					var m_170545 = nsuIntToStr(modInt(divInt(abs_offset_170540, 60), 60), 2);
					if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat((h_170544 || []).concat(makeNimstrLit(":") || [],m_170545 || [])); } else { result_170495[result_170495_Idx] = (h_170544 || []).concat(makeNimstrLit(":") || [],m_170545 || []).slice(); };
					break;
				case 32:
					var abs_offset_170546 = absInt(dt_170492.utcOffset);
					var h_170548 = nsuIntToStr(divInt(abs_offset_170546, 3600), 2);
					var m_170549 = nsuIntToStr(modInt(divInt(abs_offset_170546, 60), 60), 2);
					var s_170550 = nsuIntToStr(modInt(abs_offset_170546, 60), 2);
					if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat((h_170548 || []).concat(makeNimstrLit(":") || [],m_170549 || [],makeNimstrLit(":") || [],s_170550 || [])); } else { result_170495[result_170495_Idx] = (h_170548 || []).concat(makeNimstrLit(":") || [],m_170549 || [],makeNimstrLit(":") || [],s_170550 || []).slice(); };
					break;
				default: 
					if (true) {
					failed_assert_impl_15266(makeNimstrLit("times.nim(2033, 20) `false` "));
					}
					
					break;
				}
			}
			
			break;
		case 33:
			if ((dt_170492.year < 1)) {
			Tmp12 = makeNimstrLit("BC");
			}
			else {
			Tmp12 = makeNimstrLit("AD");
			}
			
			if (result_170495[result_170495_Idx] != null) { result_170495[result_170495_Idx] = (result_170495[result_170495_Idx]).concat(Tmp12); } else { result_170495[result_170495_Idx] = Tmp12.slice(); };
			break;
		case 34:
			if (true) {
			failed_assert_impl_15266(makeNimstrLit("times.nim(2036, 18) `false` "));
			}
			
			break;
		}

	
}

function format_173483(dt_173485, f_173486, loc_173487) {
	var result_173488 = [null];

		var idx_173490 = 0;
		L1: do {
				L2: while (true) {
				if (!(idx_173490 <= (f_173486.patterns != null ? (f_173486.patterns.length-1) : -1))) break L2;
					switch (chckRange(f_173486.patterns[chckIndx(idx_173490, 0, f_173486.patterns.length+0-1)-0], 0, 34)) {
					case 34:
						idx_173490 = addInt(idx_173490, 1);
						var len_173503 = f_173486.patterns[chckIndx(idx_173490, 0, f_173486.patterns.length+0-1)-0];
						L3: do {
							var i_173621 = 0;
							var res_363490 = 1;
							L4: do {
									L5: while (true) {
									if (!(res_363490 <= ((len_173503)|0))) break L5;
										i_173621 = chckRange(res_363490, 0, 255);
										idx_173490 = addInt(idx_173490, 1);
										if (result_173488[0] != null) { addChar(result_173488[0], f_173486.patterns[chckIndx(idx_173490, 0, f_173486.patterns.length+0-1)-0]); } else { result_173488[0] = [f_173486.patterns[chckIndx(idx_173490, 0, f_173486.patterns.length+0-1)-0]]; };
										res_363490 = addInt(res_363490, 1);
									}
							} while(false);
						} while(false);
						idx_173490 = addInt(idx_173490, 1);
						break;
					default: 
						format_pattern_170490(dt_173485, chckRange(f_173486.patterns[chckIndx(idx_173490, 0, f_173486.patterns.length+0-1)-0], 0, 34), result_173488, 0, loc_173487);
						idx_173490 = addInt(idx_173490, 1);
						break;
					}
				}
		} while(false);

	return result_173488[0];

}

function format_173915(dt_173918) {
	var result_173920 = null;

		result_173920 = nimCopy(null, format_173483(dt_173918, {patterns: [24, 34, 1, 45, 11, 34, 1, 45, 1, 34, 1, 84, 7, 34, 1, 58, 9, 34, 1, 58, 15, 31], formatStr: makeNimstrLit("yyyy-MM-dd\'T\'HH:mm:sszzz")}, {MMM: [makeNimstrLit("Jan"), makeNimstrLit("Feb"), makeNimstrLit("Mar"), makeNimstrLit("Apr"), makeNimstrLit("May"), makeNimstrLit("Jun"), makeNimstrLit("Jul"), makeNimstrLit("Aug"), makeNimstrLit("Sep"), makeNimstrLit("Oct"), makeNimstrLit("Nov"), makeNimstrLit("Dec")], MMMM: [makeNimstrLit("January"), makeNimstrLit("February"), makeNimstrLit("March"), makeNimstrLit("April"), makeNimstrLit("May"), makeNimstrLit("June"), makeNimstrLit("July"), makeNimstrLit("August"), makeNimstrLit("September"), makeNimstrLit("October"), makeNimstrLit("November"), makeNimstrLit("December")], ddd: [makeNimstrLit("Mon"), makeNimstrLit("Tue"), makeNimstrLit("Wed"), makeNimstrLit("Thu"), makeNimstrLit("Fri"), makeNimstrLit("Sat"), makeNimstrLit("Sun")], dddd: [makeNimstrLit("Monday"), makeNimstrLit("Tuesday"), makeNimstrLit("Wednesday"), makeNimstrLit("Thursday"), makeNimstrLit("Friday"), makeNimstrLit("Saturday"), makeNimstrLit("Sunday")]}), NTI138);

	return result_173920;

}

function HEX24_173910(dt_173912) {
	var result_173913 = null;

		result_173913 = nimCopy(null, format_173915(dt_173912), NTI138);

	return result_173913;

}

function HEX2B_162037(a_162039, b_162040) {
	var result_162041 = 0;

		result_162041 = (a_162039 + b_162040);

	return result_162041;

}

function convert_162888(unit_from_162891, unit_to_162892, quantity_162893) {
		var Tmp1;

	var result_162894 = 0;

		if ((unit_from_162891 < unit_to_162892)) {
		Tmp1 = divInt(quantity_162893, divInt(unit_weights_162777[chckIndx(unit_to_162892, 0, unit_weights_162777.length+0-1)-0], unit_weights_162777[chckIndx(unit_from_162891, 0, unit_weights_162777.length+0-1)-0]));
		}
		else {
		Tmp1 = HEX2A_162001(divInt(unit_weights_162777[chckIndx(unit_from_162891, 0, unit_weights_162777.length+0-1)-0], unit_weights_162777[chckIndx(unit_to_162892, 0, unit_weights_162777.length+0-1)-0]), quantity_162893);
		}
		
		result_162894 = Tmp1;

	return result_162894;

}

function convert_163004(unit_from_163007, unit_to_163008, quantity_163009) {
		var Tmp1;

	var result_163010 = 0;

		if ((unit_from_163007 < unit_to_163008)) {
		Tmp1 = chckRange(divInt(quantity_163009, divInt(unit_weights_162777[chckIndx(unit_to_163008, 0, unit_weights_162777.length+0-1)-0], unit_weights_162777[chckIndx(unit_from_163007, 0, unit_weights_162777.length+0-1)-0])), -2147483648, 2147483647);
		}
		else {
		Tmp1 = chckRange(HEX2A_162001(divInt(unit_weights_162777[chckIndx(unit_from_163007, 0, unit_weights_162777.length+0-1)-0], unit_weights_162777[chckIndx(unit_to_163008, 0, unit_weights_162777.length+0-1)-0]), quantity_163009), -2147483648, 2147483647);
		}
		
		result_163010 = Tmp1;

	return result_163010;

}

function normalize_167355(seconds_167358, nanoseconds_167359) {
	var result_167360 = {seconds: 0, nanosecond: 0};

		result_167360.seconds = HEX2B_162037(seconds_167358, convert_162888(0, 3, nanoseconds_167359));
		var nanosecond_167374 = modInt(nanoseconds_167359, convert_163004(3, 0, 1));
		if ((nanosecond_167374 < 0)) {
		nanosecond_167374 = addInt(nanosecond_167374, convert_163004(3, 0, 1));
		result_167360.seconds = subInt(result_167360.seconds, 1);
		}
		
		result_167360.nanosecond = chckRange(chckRange(nanosecond_167374, -2147483648, 2147483647), 0, 999999999);

	return result_167360;

}

function HEX2D_162073(a_162075, b_162076) {
	var result_162077 = 0;

		result_162077 = (a_162075 - b_162076);

	return result_162077;

}

function ntSubTime(a_167422, b_167423) {
	var result_167424 = {seconds: 0, nanosecond: 0};

		nimCopy(result_167424, normalize_167355(HEX2D_162073(a_167422.seconds, b_167423.seconds), HEX2D_162091(a_167422.nanosecond, b_167423.nanosecond)), NTI162614);

	return result_167424;

}

function normalize_162991(seconds_162994, nanoseconds_162995) {
	var result_162996 = {seconds: 0, nanosecond: 0};

		result_162996.seconds = HEX2B_162037(seconds_162994, convert_162888(0, 3, nanoseconds_162995));
		var nanosecond_163045 = modInt(nanoseconds_162995, convert_163004(3, 0, 1));
		if ((nanosecond_163045 < 0)) {
		nanosecond_163045 = addInt(nanosecond_163045, convert_163004(3, 0, 1));
		result_162996.seconds = subInt(result_162996.seconds, 1);
		}
		
		result_162996.nanosecond = chckRange(chckRange(nanosecond_163045, -2147483648, 2147483647), 0, 999999999);

	return result_162996;

}

function init_duration_162877(nanoseconds_162879, microseconds_162880, milliseconds_162881, seconds_162882, minutes_162883, hours_162884, days_162885, weeks_162886) {
	var result_162887 = {seconds: 0, nanosecond: 0};

		var seconds_162971 = HEX2B_162037(HEX2B_162037(HEX2B_162037(HEX2B_162037(HEX2B_162037(HEX2B_162037(HEX2B_162037(convert_162888(7, 3, weeks_162886), convert_162888(6, 3, days_162885)), convert_162888(4, 3, minutes_162883)), convert_162888(5, 3, hours_162884)), convert_162888(3, 3, seconds_162882)), convert_162888(2, 3, milliseconds_162881)), convert_162888(1, 3, microseconds_162880)), convert_162888(0, 3, nanoseconds_162879));
		var nanoseconds_162987 = chckRange(HEX2B_162037(HEX2B_162037(convert_162888(2, 0, modInt(milliseconds_162881, 1000)), convert_162888(1, 0, modInt(microseconds_162880, 1000000))), modInt(nanoseconds_162879, 1000000000)), -2147483648, 2147483647);
		nimCopy(result_162887, normalize_162991(seconds_162971, nanoseconds_162987), NTI162618);

	return result_162887;

}

function floor_div_166108(x_166111, y_166112) {
			var Tmp1;
			var Tmp2;
				var Tmp3;

	var result_166113 = 0;

		result_166113 = Math.trunc(x_166111 / y_166112);
		var r_166114 = Math.trunc(x_166111 % y_166112);
			if (!(0 < r_166114)) Tmp2 = false; else {				Tmp2 = (y_166112 < 0);			}			if (Tmp2) Tmp1 = true; else {				if (!(r_166114 < 0)) Tmp3 = false; else {					Tmp3 = (0 < y_166112);				}				Tmp1 = Tmp3;			}		if (Tmp1) {
		result_166113 -= 1;
		}
		

	return result_166113;

}

function inc_162133(a_162136, a_162136_Idx, b_162137) {
		a_162136[a_162136_Idx] += b_162137;

	
}

function from_epoch_day_166480(epochday_166482) {
		var Tmp1;
		var Tmp2;

	var result_166487 = {Field0: 0, Field1: 0, Field2: 0};

	BeforeRet: do {
		var z_166488 = [epochday_166482];
		inc_162133(z_166488, 0, 719468);
		if ((0 <= z_166488[0])) {
		Tmp1 = z_166488[0];
		}
		else {
		Tmp1 = HEX2D_162073(z_166488[0], 146096);
		}
		
		var era_166494 = divInt(Tmp1, 146097);
		var doe_166496 = HEX2D_162073(z_166488[0], HEX2A_162001(era_166494, 146097));
		var yoe_166501 = divInt(HEX2D_162073(HEX2B_162037(HEX2D_162073(doe_166496, divInt(doe_166496, 1460)), divInt(doe_166496, 36524)), divInt(doe_166496, 146096)), 365);
		var y_166503 = HEX2B_162037(yoe_166501, HEX2A_162001(era_166494, 400));
		var doy_166507 = HEX2D_162073(doe_166496, HEX2D_162073(HEX2B_162037(HEX2A_162001(365, yoe_166501), divInt(yoe_166501, 4)), divInt(yoe_166501, 100)));
		var mp_166510 = divInt(HEX2B_162037(HEX2A_162001(5, doy_166507), 2), 153);
		var d_166513 = HEX2B_162037(HEX2D_162073(doy_166507, divInt(HEX2B_162037(HEX2A_162001(153, mp_166510), 2), 5)), 1);
		if ((mp_166510 < 10)) {
		Tmp2 = 3;
		}
		else {
		Tmp2 = -9;
		}
		
		var m_166516 = HEX2B_162037(mp_166510, Tmp2);
		var colontmp__363503 = chckRange(d_166513, 1, 31);
		var colontmp__363504 = chckRange(m_166516, 1, 12);
		var colontmp__363505 = chckRange(HEX2B_162037(y_166503, ((m_166516 <= 2) ? 1:0)), -2147483648, 2147483647);
		nimCopy(result_166487, {Field0: nimCopy(null, colontmp__363503, NTI162602), Field1: colontmp__363504, Field2: colontmp__363505}, NTI166483);
		break BeforeRet;
	} while (false);

	return result_166487;

}

function is_leap_year_166170(year_166172) {
		var Tmp1;
			var Tmp2;

	var result_166173 = false;

		if (!(modInt(year_166172, 4) == 0)) Tmp1 = false; else {			if (!((modInt(year_166172, 100) == 0))) Tmp2 = true; else {				Tmp2 = (modInt(year_166172, 400) == 0);			}			Tmp1 = Tmp2;		}		result_166173 = Tmp1;

	return result_166173;

}

function get_days_in_month_166189(month_166191, year_166192) {
			var Tmp1;

	var result_166193 = 0;

		switch (month_166191) {
		case 2:
			if (is_leap_year_166170(year_166192)) {
			Tmp1 = 29;
			}
			else {
			Tmp1 = 28;
			}
			
			result_166193 = Tmp1;
			break;
		case 4:
		case 6:
		case 9:
		case 11:
			result_166193 = 30;
			break;
		default: 
			result_166193 = 31;
			break;
		}

	return result_166193;

}

function assert_valid_date_166226(monthday_166228, month_166229, year_166230) {
		if (!((monthday_166228 <= get_days_in_month_166189(month_166229, year_166230)))) {
		failed_assert_impl_15266((makeNimstrLit("times.nim(637, 10) `monthday <= getDaysInMonth(month, year)` ") || []).concat(cstrToNimstr((year_166230)+"") || [],makeNimstrLit("-") || [],nsuIntToStr(month_166229, 2) || [],makeNimstrLit("-") || [],cstrToNimstr((monthday_166228)+"") || [],makeNimstrLit(" is not a valid date") || []));
		}
		

	
}

function HEX2A_162019(a_162021, b_162022) {
	var result_162023 = 0;

		result_162023 = (a_162021 * b_162022);

	return result_162023;

}

function to_epoch_day_166414(monthday_166416, month_166417, year_166418) {
		var Tmp1;
		var Tmp2;

	var result_166419 = 0;

	BeforeRet: do {
		assert_valid_date_166226(monthday_166416, month_166417, year_166418);
		var colontmp__363507 = {Field0: 0, Field1: 0, Field2: 0};
		var y_166425 = 0;
		var m_166426 = 0;
		var d_166427 = 0;
		nimCopy(colontmp__363507, {Field0: year_166418, Field1: month_166417, Field2: monthday_166416}, NTI166420);
		y_166425 = colontmp__363507["Field0"];
		m_166426 = colontmp__363507["Field1"];
		d_166427 = colontmp__363507["Field2"];
		if ((m_166426 <= 2)) {
		y_166425 = subInt(y_166425, 1);
		}
		
		if ((0 <= y_166425)) {
		Tmp1 = y_166425;
		}
		else {
		Tmp1 = HEX2D_162091(y_166425, 399);
		}
		
		var era_166437 = divInt(Tmp1, 400);
		var yoe_166439 = HEX2D_162091(y_166425, HEX2A_162019(era_166437, 400));
		if ((2 < m_166426)) {
		Tmp2 = -3;
		}
		else {
		Tmp2 = 9;
		}
		
		var doy_166446 = HEX2D_162091(HEX2B_162055(divInt(HEX2B_162055(HEX2A_162019(153, HEX2B_162055(m_166426, Tmp2)), 2), 5), d_166427), 1);
		var doe_166449 = HEX2B_162055(HEX2D_162091(HEX2B_162055(HEX2A_162019(yoe_166439, 365), divInt(yoe_166439, 4)), divInt(yoe_166439, 100)), doy_166446);
		result_166419 = HEX2D_162091(HEX2B_162055(HEX2A_162019(era_166437, 146097), doe_166449), 719468);
		break BeforeRet;
	} while (false);

	return result_166419;

}

function get_day_of_week_166616(monthday_166618, month_166619, year_166620) {
		var Tmp1;

	var result_166621 = 0;

		assert_valid_date_166226(monthday_166618, month_166619, year_166620);
		var days_166622 = HEX2D_162073(to_epoch_day_166414(monthday_166618, month_166619, year_166620), 3);
		var weeks_166628 = floor_div_166108(days_166622, 7);
		var wd_166629 = HEX2D_162073(days_166622, HEX2A_162001(weeks_166628, 7));
		if ((wd_166629 == 0)) {
		Tmp1 = 6;
		}
		else {
		Tmp1 = chckRange(HEX2D_162073(wd_166629, 1), 0, 6);
		}
		
		result_166621 = Tmp1;

	return result_166621;

}

function get_day_of_year_166550(monthday_166552, month_166553, year_166554) {
	var result_166555 = 0;

		assert_valid_date_166226(monthday_166552, month_166553, year_166554);
		if (is_leap_year_166170(year_166554)) {
		result_166555 = chckRange(HEX2D_162091(HEX2B_162055(days_until_month_leap_166587[chckIndx(month_166553, 1, days_until_month_leap_166587.length+1-1)-1], monthday_166552), 1), 0, 365);
		}
		else {
			result_166555 = chckRange(HEX2D_162091(HEX2B_162055(days_until_month_166571[chckIndx(month_166553, 1, days_until_month_166571.length+1-1)-1], monthday_166552), 1), 0, 365);
		}
		

	return result_166555;

}

function init_date_time_167588(zt_167590, zone_167591) {
	var result_167592 = {m_type: NTI162616, nanosecond: 0, second: 0, minute: 0, hour: 0, monthday: 0, month: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0};

		var adj_time_167593 = ntSubTime(zt_167590.time, init_duration_162877(0, 0, 0, zt_167590.utcOffset, 0, 0, 0, 0));
		var s_167594 = adj_time_167593.seconds;
		var epochday_167600 = floor_div_166108(s_167594, 86400);
		var rem_167601 = HEX2D_162073(s_167594, HEX2A_162001(epochday_167600, 86400));
		var hour_167602 = divInt(rem_167601, 3600);
		rem_167601 = HEX2D_162073(rem_167601, HEX2A_162001(hour_167602, 3600));
		var minute_167603 = divInt(rem_167601, 60);
		rem_167601 = HEX2D_162073(rem_167601, HEX2A_162001(minute_167603, 60));
		var second_167604 = rem_167601;
		var colontmp__363502 = {Field0: 0, Field1: 0, Field2: 0};
		var d_167605 = 0;
		var m_167606 = 0;
		var y_167607 = 0;
		nimCopy(colontmp__363502, from_epoch_day_166480(epochday_167600), NTI166483);
		d_167605 = colontmp__363502["Field0"];
		m_167606 = colontmp__363502["Field1"];
		y_167607 = colontmp__363502["Field2"];
		nimCopy(result_167592, {year: y_167607, month: m_167606, monthday: nimCopy(null, d_167605, NTI162602), hour: nimCopy(null, chckRange(hour_167602, 0, 23), NTI162604), minute: nimCopy(null, chckRange(minute_167603, 0, 59), NTI162606), second: nimCopy(null, chckRange(second_167604, 0, 60), NTI162608), nanosecond: nimCopy(null, zt_167590.time.nanosecond, NTI162612), weekday: get_day_of_week_166616(d_167605, m_167606, y_167607), yearday: get_day_of_year_166550(d_167605, m_167606, y_167607), isDst: zt_167590.isDst, timezone: zone_167591, utcOffset: zt_167590.utcOffset, m_type: NTI162616}, NTI162616);

	return result_167592;

}

function zoned_time_from_time_167724(zone_167726, time_167727) {
	var result_167728 = {time: {seconds: 0, nanosecond: 0}, utcOffset: 0, isDst: false};

		nimCopy(result_167728, zone_167726.zonedTimeFromTimeImpl(time_167727), NTI162628);

	return result_167728;

}

function in_zone_167829(time_167831, zone_167832) {
	var result_167833 = {m_type: NTI162616, nanosecond: 0, second: 0, minute: 0, hour: 0, monthday: 0, month: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0};

		nimCopy(result_167833, init_date_time_167588(zoned_time_from_time_167724(zone_167832, time_167831), zone_167832), NTI162616);

	return result_167833;

}

function new_timezone_167666(name_167668, zoned_time_from_time_impl_167672, zoned_time_from_adj_time_impl_167676) {
	var result_167678 = null;

		result_167678 = {name: nimCopy(null, name_167668, NTI138), zonedTimeFromTimeImpl: zoned_time_from_time_impl_167672, zonedTimeFromAdjTimeImpl: zoned_time_from_adj_time_impl_167676};

	return result_167678;

}

function local_zoned_time_from_time_162835(time_162837) {
	var result_167890 = {time: {seconds: 0, nanosecond: 0}, utcOffset: 0, isDst: false};

		var js_date_167896 = new Date(HEX2A_162001(time_162837.seconds, 1000));
		var offset_167897 = HEX2A_162019(js_date_167896.getTimezoneOffset(), 60);
		nimCopy(result_167890.time, time_162837, NTI162614);
		result_167890.utcOffset = offset_167897;
		result_167890.isDst = false;

	return result_167890;

}

function contains_167955(s_167961, value_167962) {
	var result_167963 = false;

		result_167963 = ((s_167961.a <= value_167962) && (value_167962 <= s_167961.b));

	return result_167963;

}

function ntAddTime(a_167347, b_167348) {
	var result_167349 = {seconds: 0, nanosecond: 0};

		nimCopy(result_167349, normalize_167355(HEX2B_162037(a_167347.seconds, b_167348.seconds), HEX2B_162055(a_167347.nanosecond, b_167348.nanosecond)), NTI162614);

	return result_167349;

}

function local_zoned_time_from_adj_time_162838(adj_time_162840) {
	var result_167929 = {time: {seconds: 0, nanosecond: 0}, utcOffset: 0, isDst: false};

		var utc_date_167935 = new Date(HEX2A_162001(adj_time_162840.seconds, 1000));
		var local_date_167936 = new Date(utc_date_167935.getUTCFullYear(),utc_date_167935.getUTCMonth(),utc_date_167935.getUTCDate(),utc_date_167935.getUTCHours(),utc_date_167935.getUTCMinutes(),utc_date_167935.getUTCSeconds(),0);
		if (contains_167955(HEX2EHEX2E_62220(0, 99), utc_date_167935.getUTCFullYear())) {
		local_date_167936.setFullYear(utc_date_167935.getUTCFullYear());
		}
		
		result_167929.utcOffset = HEX2A_162019(local_date_167936.getTimezoneOffset(), 60);
		nimCopy(result_167929.time, ntAddTime(adj_time_162840, init_duration_162877(0, 0, 0, result_167929.utcOffset, 0, 0, 0, 0)), NTI162614);
		result_167929.isDst = false;

	return result_167929;

}

function local_168067() {
	var result_168069 = null;

		if ((local_instance_168032[0] == null)) {
		local_instance_168032[0] = new_timezone_167666(makeNimstrLit("LOCAL"), local_zoned_time_from_time_162835, local_zoned_time_from_adj_time_162838);
		}
		
		result_168069 = local_instance_168032[0];

	return result_168069;

}

function local_168139(t_168141) {
	var result_168142 = {m_type: NTI162616, nanosecond: 0, second: 0, minute: 0, hour: 0, monthday: 0, month: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0};

		nimCopy(result_168142, in_zone_167829(t_168141, local_168067()), NTI162616);

	return result_168142;

}

function init_time_162841(unix_162843, nanosecond_162844) {
	var result_167303 = {seconds: 0, nanosecond: 0};

		result_167303.seconds = unix_162843;
		result_167303.nanosecond = nanosecond_162844;

	return result_167303;

}

function get_time_168156() {
	var result_168158 = {seconds: 0, nanosecond: 0};

		var millis_168201 = new Date().getTime();
		var seconds_168208 = convert_163004(2, 3, millis_168201);
		var nanos_168222 = convert_163004(2, 0, modInt(millis_168201, convert_163004(3, 2, 1)));
		nimCopy(result_168158, init_time_162841(seconds_168208, chckRange(nanos_168222, 0, 999999999)), NTI162614);

	return result_168158;

}

function now_168236() {
	var result_168238 = {m_type: NTI162616, nanosecond: 0, second: 0, minute: 0, hour: 0, monthday: 0, month: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0};

		nimCopy(result_168238, local_168139(get_time_168156()), NTI162616);

	return result_168238;

}

function save_func_324263(j_str_324265, fname_324266) {

		function inner_324283() {
			var result_324285 = null;

			BeforeRet: do {
				var a_324286 = null;
				a_324286 = {};
				a_324286.type = makeNimstrLit("application/json");
				result_324285 = a_324286;
				break BeforeRet;
			} while (false);

			return result_324285;

		}

		var blb_324425 = function(o,opt){return new Blob([o], opt);}(j_str_324265, inner_324283());
		var b_url_324426 = function(b){return URL.createObjectURL(b);}(blb_324425);
		var el_a_324427 = document.createElement("a");
		el_a_324427.setAttribute("href", b_url_324426);
		el_a_324427.setAttribute("download", toJSStr(fname_324266));
		document.body.appendChild(el_a_324427);
		el_a_324427.click();
		document.body.removeChild(el_a_324427);
		(function(uk){return URL.revokeObjectURL(uk);})(b_url_324426);

	
}

function init_ordered_table_217209(initial_size_217213) {
	var result_217215 = {data: null, counter: 0, first: 0, last: 0};

		if (!(is_power_of_two_143062(initial_size_217213))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_217215.counter = 0;
		result_217215.data = new Array(chckRange(initial_size_217213, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_217213, 0, 2147483647);++i) {result_217215.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		result_217215.first = -1;
		result_217215.last = -1;

	return result_217215;

}

function new_jobject_217204() {
	var result_217206 = null;

		result_217206 = {kind: 5, fields: init_ordered_table_217209(4), str: null, num: 0, fnum: 0.0, bval: false, elems: null};

	return result_217206;

}

function raw_get_219021(t_219026, key_219027, hc_219028, hc_219028_Idx) {
						var Tmp3;

	var result_219029 = 0;

	BeforeRet: do {
		hc_219028[hc_219028_Idx] = hash_180014(key_219027);
		if ((hc_219028[hc_219028_Idx] == 0)) {
		hc_219028[hc_219028_Idx] = 314159265;
		}
		
		if (((t_219026.data != null ? t_219026.data.length : 0) == 0)) {
		result_219029 = -1;
		break BeforeRet;
		}
		
		var h_219171 = (hc_219028[hc_219028_Idx] & (t_219026.data != null ? (t_219026.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_183018(t_219026.data[chckIndx(h_219171, 0, t_219026.data.length+0-1)-0].Field0)) break L2;
						if (!(t_219026.data[chckIndx(h_219171, 0, t_219026.data.length+0-1)-0].Field0 == hc_219028[hc_219028_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_219026.data[chckIndx(h_219171, 0, t_219026.data.length+0-1)-0].Field2, key_219027);						}					if (Tmp3) {
					result_219029 = h_219171;
					break BeforeRet;
					}
					
					h_219171 = next_try_183035(h_219171, (t_219026.data != null ? (t_219026.data.length-1) : -1));
				}
		} while(false);
		result_219029 = subInt(-1, h_219171);
	} while (false);

	return result_219029;

}

function raw_insert_221465(t_221471, data_221474, data_221474_Idx, key_221475, val_221476, hc_221477, h_221478) {
		data_221474[data_221474_Idx][chckIndx(h_221478, 0, data_221474[data_221474_Idx].length+0-1)-0].Field2 = nimCopy(null, key_221475, NTI138);
		data_221474[data_221474_Idx][chckIndx(h_221478, 0, data_221474[data_221474_Idx].length+0-1)-0].Field3 = val_221476;
		data_221474[data_221474_Idx][chckIndx(h_221478, 0, data_221474[data_221474_Idx].length+0-1)-0].Field0 = hc_221477;
		data_221474[data_221474_Idx][chckIndx(h_221478, 0, data_221474[data_221474_Idx].length+0-1)-0].Field1 = -1;
		if ((t_221471.first < 0)) {
		t_221471.first = h_221478;
		}
		
		if ((0 <= t_221471.last)) {
		data_221474[data_221474_Idx][chckIndx(t_221471.last, 0, data_221474[data_221474_Idx].length+0-1)-0].Field1 = h_221478;
		}
		
		t_221471.last = h_221478;

	
}

function enlarge_220367(t_220373) {
		var n_220381 = null;
		n_220381 = new Array(chckRange(mulInt((t_220373.data != null ? t_220373.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_220373.data != null ? t_220373.data.length : 0), 2), 0, 2147483647);++i) {n_220381[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		var h_220520 = t_220373.first;
		t_220373.first = -1;
		t_220373.last = -1;
		var Tmp1 = t_220373.data; t_220373.data = n_220381; n_220381 = Tmp1;		L2: do {
				L3: while (true) {
				if (!(0 <= h_220520)) break L3;
					var nxt_220679 = n_220381[chckIndx(h_220520, 0, n_220381.length+0-1)-0].Field1;
					var eh_220828 = n_220381[chckIndx(h_220520, 0, n_220381.length+0-1)-0].Field0;
					if (is_filled_183018(eh_220828)) {
					var j_220835 = (eh_220828 & (t_220373.data != null ? (t_220373.data.length-1) : -1));
					L4: do {
							L5: while (true) {
							if (!is_filled_183018(t_220373.data[chckIndx(j_220835, 0, t_220373.data.length+0-1)-0].Field0)) break L5;
								j_220835 = next_try_183035(j_220835, (t_220373.data != null ? (t_220373.data.length-1) : -1));
							}
					} while(false);
					raw_insert_221465(t_220373, t_220373, "data", n_220381[chckIndx(h_220520, 0, n_220381.length+0-1)-0].Field2, n_220381[chckIndx(h_220520, 0, n_220381.length+0-1)-0].Field3, n_220381[chckIndx(h_220520, 0, n_220381.length+0-1)-0].Field0, j_220835);
					}
					
					h_220520 = nxt_220679;
				}
		} while(false);

	
}

function raw_get_known_hc_222267(t_222272, key_222273, hc_222274) {
	var result_222275 = 0;

	BeforeRet: do {
		if (((t_222272.data != null ? t_222272.data.length : 0) == 0)) {
		result_222275 = -1;
		break BeforeRet;
		}
		
		var h_222414 = (hc_222274 & (t_222272.data != null ? (t_222272.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_183018(t_222272.data[chckIndx(h_222414, 0, t_222272.data.length+0-1)-0].Field0)) break L2;
					if (((t_222272.data[chckIndx(h_222414, 0, t_222272.data.length+0-1)-0].Field0 == hc_222274) && eqStrings(t_222272.data[chckIndx(h_222414, 0, t_222272.data.length+0-1)-0].Field2, key_222273))) {
					result_222275 = h_222414;
					break BeforeRet;
					}
					
					h_222414 = next_try_183035(h_222414, (t_222272.data != null ? (t_222272.data.length-1) : -1));
				}
		} while(false);
		result_222275 = subInt(-1, h_222414);
	} while (false);

	return result_222275;

}

function HEX5BHEX5DHEX3D_218511(t_218517, key_218518, val_218519) {
		if (((t_218517.data != null ? t_218517.data.length : 0) == 0)) {
		if (!(is_power_of_two_143062(64))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_218517.counter = 0;
		t_218517.data = new Array(64); for (var i=0;i<64;++i) {t_218517.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		t_218517.first = -1;
		t_218517.last = -1;
		}
		
		var hc_219001 = [0];
		var index_219639 = raw_get_219021(t_218517, key_218518, hc_219001, 0);
		if ((0 <= index_219639)) {
		t_218517.data[chckIndx(index_219639, 0, t_218517.data.length+0-1)-0].Field3 = val_218519;
		}
		else {
			if (((t_218517.data != null ? t_218517.data.length : 0) == 0)) {
			if (!(is_power_of_two_143062(64))) {
			failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			t_218517.counter = 0;
			t_218517.data = new Array(64); for (var i=0;i<64;++i) {t_218517.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}			t_218517.first = -1;
			t_218517.last = -1;
			}
			
			if (must_rehash_183053((t_218517.data != null ? t_218517.data.length : 0), t_218517.counter)) {
			enlarge_220367(t_218517);
			index_219639 = raw_get_known_hc_222267(t_218517, key_218518, hc_219001[0]);
			}
			
			index_219639 = subInt(-1, index_219639);
			raw_insert_221465(t_218517, t_218517, "data", key_218518, val_218519, hc_219001[0], index_219639);
			t_218517.counter = addInt(t_218517.counter, 1);
		}
		

	
}

function add_218222(obj_218224, key_218225, val_218226) {
		var Tmp1;

		if (!((obj_218224.kind == 5))) {
		failed_assert_impl_15266(makeNimstrLit("json.nim(289, 10) `obj.kind == JObject` "));
		}
		
		var Tmp1 = obj_218224;
		if (ConstSet3[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
		HEX5BHEX5DHEX3D_218511(Tmp1.fields, key_218225, val_218226);

	
}

function new_jstring_217087(s_217089) {
	var result_217090 = null;

		result_217090 = {kind: 4, str: nimCopy(null, s_217089, NTI138), num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};

	return result_217090;

}

function new_jarray_217657() {
	var result_217659 = null;

		result_217659 = {kind: 6, elems: [], str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}};

	return result_217659;

}

function add_217995(father_217997, child_217998) {
		var Tmp1;
		var Tmp2;

		if (!((father_217997.kind == 6))) {
		failed_assert_impl_15266(makeNimstrLit("json.nim(284, 10) `father.kind == JArray` "));
		}
		
		var Tmp1 = father_217997;
		if (ConstSet4[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'elems\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
		if ((Tmp2 = Tmp1.elems, Tmp2) != null) { Tmp2.push(child_217998); } else { Tmp2 = [child_217998]; };

	
}

function len_333348(t_333353) {
	var result_333354 = 0;

		result_333354 = t_333353.counter;

	return result_333354;

}

function new_seq_334219(len_334222) {
	var result_334224 = null;

		result_334224 = new Array(len_334222); for (var i=0;i<len_334222;++i) {result_334224[i]=null;}
	return result_334224;

}

function new_seq_40233(len_40236) {
	var result_40238 = null;

		result_40238 = new Array(len_40236); for (var i=0;i<len_40236;++i) {result_40238[i]=null;}
	return result_40238;

}

function parse_saturated_natural_137231(s_137233, b_137235, b_137235_Idx, start_137236) {
			var Tmp1;
					var Tmp4;

	var result_137238 = 0;

		var i_137239 = start_137236;
		if (((i_137239 < (s_137233 != null ? s_137233.length : 0)) && (s_137233[chckIndx(i_137239, 0, s_137233.length+0-1)-0] == 43))) {
		i_137239 = addInt(i_137239, 1);
		}
		
			if (!(i_137239 < (s_137233 != null ? s_137233.length : 0))) Tmp1 = false; else {				Tmp1 = (ConstSet9[s_137233[chckIndx(i_137239, 0, s_137233.length+0-1)-0]] != undefined);			}		if (Tmp1) {
		b_137235[b_137235_Idx] = 0;
		L2: do {
				L3: while (true) {
					if (!(i_137239 < (s_137233 != null ? s_137233.length : 0))) Tmp4 = false; else {						Tmp4 = (ConstSet10[s_137233[chckIndx(i_137239, 0, s_137233.length+0-1)-0]] != undefined);					}				if (!Tmp4) break L3;
					var c_137268 = subInt(s_137233[chckIndx(i_137239, 0, s_137233.length+0-1)-0], 48);
					if ((b_137235[b_137235_Idx] <= divInt(subInt(2147483647, c_137268), 10))) {
					b_137235[b_137235_Idx] = addInt(mulInt(b_137235[b_137235_Idx], 10), c_137268);
					}
					else {
						b_137235[b_137235_Idx] = 2147483647;
					}
					
					i_137239 = addInt(i_137239, 1);
					L5: do {
							L6: while (true) {
							if (!((i_137239 < (s_137233 != null ? s_137233.length : 0)) && (s_137233[chckIndx(i_137239, 0, s_137233.length+0-1)-0] == 95))) break L6;
								i_137239 = addInt(i_137239, 1);
							}
					} while(false);
				}
		} while(false);
		result_137238 = subInt(i_137239, start_137236);
		}
		

	return result_137238;

}

function HEX5BHEX5D_89304(s_89308, x_89310) {
	var result_89311 = null;

		var a_89401 = x_89310.a;
		var l_89601 = addInt(subInt(subInt((s_89308 != null ? s_89308.length : 0), x_89310.b), a_89401), 1);
		result_89311 = nimCopy(null, mnewString(chckRange(l_89601, 0, 2147483647)), NTI138);
		L1: do {
			var i_89609 = 0;
			var i_363554 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_363554 < l_89601)) break L3;
						i_89609 = i_363554;
						result_89311[chckIndx(i_89609, 0, result_89311.length+0-1)-0] = s_89308[chckIndx(addInt(i_89609, a_89401), 0, s_89308.length+0-1)-0];
						i_363554 = addInt(i_363554, 1);
					}
			} while(false);
		} while(false);

	return result_89311;

}

function HEX2EHEX2E_89239(a_89243, b_89244) {
	var result_89250 = {a: 0, b: 0};

		nimCopy(result_89250, {a: a_89243, b: b_89244}, NTI89247);

	return result_89250;

}

function parse_standard_format_specifier_242324(s_242326, start_242327, ignore_unknown_suffix_242329) {
			var Tmp1;
			var Tmp2;
			var Tmp3;

	var result_242330 = {fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0};

		result_242330.fill = 32;
		result_242330.align = 0;
		result_242330.sign = 45;
		var i_242333 = start_242327;
		if (((addInt(i_242333, 1) < (s_242326 != null ? s_242326.length : 0)) && (ConstSet5[s_242326[chckIndx(addInt(i_242333, 1), 0, s_242326.length+0-1)-0]] != undefined))) {
		result_242330.fill = s_242326[chckIndx(i_242333, 0, s_242326.length+0-1)-0];
		result_242330.align = s_242326[chckIndx(addInt(i_242333, 1), 0, s_242326.length+0-1)-0];
		i_242333 = addInt(i_242333, 2);
		}
		else {
		if (((i_242333 < (s_242326 != null ? s_242326.length : 0)) && (ConstSet6[s_242326[chckIndx(i_242333, 0, s_242326.length+0-1)-0]] != undefined))) {
		result_242330.align = s_242326[chckIndx(i_242333, 0, s_242326.length+0-1)-0];
		i_242333 = addInt(i_242333, 1);
		}
		}
		if (((i_242333 < (s_242326 != null ? s_242326.length : 0)) && (ConstSet7[s_242326[chckIndx(i_242333, 0, s_242326.length+0-1)-0]] != undefined))) {
		result_242330.sign = s_242326[chckIndx(i_242333, 0, s_242326.length+0-1)-0];
		i_242333 = addInt(i_242333, 1);
		}
		
		if (((i_242333 < (s_242326 != null ? s_242326.length : 0)) && (s_242326[chckIndx(i_242333, 0, s_242326.length+0-1)-0] == 35))) {
		result_242330.alternateForm = true;
		i_242333 = addInt(i_242333, 1);
		}
		
			if (!((addInt(i_242333, 1) < (s_242326 != null ? s_242326.length : 0)) && (s_242326[chckIndx(i_242333, 0, s_242326.length+0-1)-0] == 48))) Tmp1 = false; else {				Tmp1 = (ConstSet8[s_242326[chckIndx(addInt(i_242333, 1), 0, s_242326.length+0-1)-0]] != undefined);			}		if (Tmp1) {
		result_242330.padWithZero = true;
		i_242333 = addInt(i_242333, 1);
		}
		
		var parsed_length_242391 = parse_saturated_natural_137231(s_242326, result_242330, "minimumWidth", i_242333);
		i_242333 = addInt(i_242333, parsed_length_242391);
		if (((i_242333 < (s_242326 != null ? s_242326.length : 0)) && (s_242326[chckIndx(i_242333, 0, s_242326.length+0-1)-0] == 46))) {
		i_242333 = addInt(i_242333, 1);
		var parsed_length_b_242405 = parse_saturated_natural_137231(s_242326, result_242330, "precision", i_242333);
		i_242333 = addInt(i_242333, parsed_length_b_242405);
		}
		else {
			result_242330.precision = -1;
		}
		
			if (!(i_242333 < (s_242326 != null ? s_242326.length : 0))) Tmp2 = false; else {				Tmp2 = (ConstSet11[s_242326[chckIndx(i_242333, 0, s_242326.length+0-1)-0]] != undefined);			}		if (Tmp2) {
		result_242330.typ = s_242326[chckIndx(i_242333, 0, s_242326.length+0-1)-0];
		i_242333 = addInt(i_242333, 1);
		}
		
		result_242330.endPosition = i_242333;
			if (!!((i_242333 == (s_242326 != null ? s_242326.length : 0)))) Tmp3 = false; else {				Tmp3 = !(ignore_unknown_suffix_242329);			}		if (Tmp3) {
		var e_242460 = null;
		e_242460 = {m_type: NTI3652, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_242460.message = nimCopy(null, (makeNimstrLit("invalid format string, cannot parse: ") || []).concat(HEX5BHEX5D_89304(s_242326, HEX2EHEX2E_89239(i_242333, 1)) || []), NTI138);
		e_242460.parent = null;
		raiseException(e_242460, "ValueError");
		}
		

	return result_242330;

}

function nsuformatBiggestFloat(f_156221, format_156222, precision_156228, decimal_sep_156229) {
	var result_156230 = null;

		var precision_156401 = precision_156228;
		if ((precision_156401 == -1)) {
		precision_156401 = 6;
		}
		
		var res_156403 = null;
		switch (format_156222) {
		case 0:
			res_156403 = f_156221.toString();
			break;
		case 1:
			res_156403 = f_156221.toFixed(precision_156401);
			break;
		case 2:
			res_156403 = f_156221.toExponential(precision_156401);
			break;
		}
		result_156230 = nimCopy(null, cstrToNimstr(res_156403), NTI138);
		if (((1.0000000000000000e+000 / f_156221) == -Infinity)) {
		result_156230 = nimCopy(null, (makeNimstrLit("-") || []).concat(cstrToNimstr(res_156403) || []), NTI138);
		}
		
		L1: do {
			var i_156411 = 0;
			var colontmp__363560 = 0;
			colontmp__363560 = (result_156230 != null ? result_156230.length : 0);
			var i_363561 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_363561 < colontmp__363560)) break L3;
						i_156411 = i_363561;
						if ((ConstSet12[result_156230[chckIndx(i_156411, 0, result_156230.length+0-1)-0]] != undefined)) {
						result_156230[chckIndx(i_156411, 0, result_156230.length+0-1)-0] = decimal_sep_156229;
						}
						
						i_363561 = addInt(i_363561, 1);
					}
			} while(false);
		} while(false);

	return result_156230;

}

function insert_28401(x_28404, x_28404_Idx, item_28405, i_28406) {
		var xl_28407 = (x_28404[x_28404_Idx] != null ? x_28404[x_28404_Idx].length : 0);
		(x_28404[x_28404_Idx] == null ? x_28404[x_28404_Idx] = mnewString(chckRange(addInt(xl_28407, (item_28405 != null ? item_28405.length : 0)), 0, 2147483647)) : x_28404[x_28404_Idx].length = chckRange(addInt(xl_28407, (item_28405 != null ? item_28405.length : 0)), 0, 2147483647));
		var j_28408 = subInt(xl_28407, 1);
		L1: do {
				L2: while (true) {
				if (!(i_28406 <= j_28408)) break L2;
					x_28404[x_28404_Idx][chckIndx(addInt(j_28408, (item_28405 != null ? item_28405.length : 0)), 0, x_28404[x_28404_Idx].length+0-1)-0] = x_28404[x_28404_Idx][chckIndx(j_28408, 0, x_28404[x_28404_Idx].length+0-1)-0];
					j_28408 = subInt(j_28408, 1);
				}
		} while(false);
		j_28408 = 0;
		L3: do {
				L4: while (true) {
				if (!(j_28408 < (item_28405 != null ? item_28405.length : 0))) break L4;
					x_28404[x_28404_Idx][chckIndx(addInt(j_28408, i_28406), 0, x_28404[x_28404_Idx].length+0-1)-0] = item_28405[chckIndx(j_28408, 0, item_28405.length+0-1)-0];
					j_28408 = addInt(j_28408, 1);
				}
		} while(false);

	
}

function nsuRepeatChar(c_152455, count_152456) {
	var result_152457 = null;

		result_152457 = nimCopy(null, mnewString(count_152456), NTI138);
		L1: do {
			var i_152466 = 0;
			var colontmp__363567 = 0;
			colontmp__363567 = subInt(count_152456, 1);
			var res_363568 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_363568 <= colontmp__363567)) break L3;
						i_152466 = res_363568;
						result_152457[chckIndx(i_152466, 0, result_152457.length+0-1)-0] = c_152455;
						res_363568 = addInt(res_363568, 1);
					}
			} while(false);
		} while(false);

	return result_152457;

}

function validate_utf8_56829(s_56831) {
						var Tmp3;
						var Tmp4;
						var Tmp5;
						var Tmp6;
						var Tmp7;
						var Tmp8;

	var result_56832 = 0;

	BeforeRet: do {
		var i_56834 = 0;
		var l_56835 = (s_56831 != null ? s_56831.length : 0);
		L1: do {
				L2: while (true) {
				if (!(i_56834 < l_56835)) break L2;
					if ((s_56831[chckIndx(i_56834, 0, s_56831.length+0-1)-0] <= 127)) {
					i_56834 = addInt(i_56834, 1);
					}
					else {
					if ((((s_56831[chckIndx(i_56834, 0, s_56831.length+0-1)-0] >>> 0) >>> 5) == 6)) {
					if ((s_56831[chckIndx(i_56834, 0, s_56831.length+0-1)-0] < 194)) {
					result_56832 = i_56834;
					break BeforeRet;
					}
					
						if (!(addInt(i_56834, 1) < l_56835)) Tmp3 = false; else {							Tmp3 = (((s_56831[chckIndx(addInt(i_56834, 1), 0, s_56831.length+0-1)-0] >>> 0) >>> 6) == 2);						}					if (Tmp3) {
					i_56834 = addInt(i_56834, 2);
					}
					else {
						result_56832 = i_56834;
						break BeforeRet;
					}
					
					}
					else {
					if ((((s_56831[chckIndx(i_56834, 0, s_56831.length+0-1)-0] >>> 0) >>> 4) == 14)) {
						if (!(addInt(i_56834, 2) < l_56835)) Tmp5 = false; else {							Tmp5 = (((s_56831[chckIndx(addInt(i_56834, 1), 0, s_56831.length+0-1)-0] >>> 0) >>> 6) == 2);						}						if (!Tmp5) Tmp4 = false; else {							Tmp4 = (((s_56831[chckIndx(addInt(i_56834, 2), 0, s_56831.length+0-1)-0] >>> 0) >>> 6) == 2);						}					if (Tmp4) {
					i_56834 = addInt(i_56834, 3);
					}
					else {
						result_56832 = i_56834;
						break BeforeRet;
					}
					
					}
					else {
					if ((((s_56831[chckIndx(i_56834, 0, s_56831.length+0-1)-0] >>> 0) >>> 3) == 30)) {
						if (!(addInt(i_56834, 3) < l_56835)) Tmp8 = false; else {							Tmp8 = (((s_56831[chckIndx(addInt(i_56834, 1), 0, s_56831.length+0-1)-0] >>> 0) >>> 6) == 2);						}						if (!Tmp8) Tmp7 = false; else {							Tmp7 = (((s_56831[chckIndx(addInt(i_56834, 2), 0, s_56831.length+0-1)-0] >>> 0) >>> 6) == 2);						}						if (!Tmp7) Tmp6 = false; else {							Tmp6 = (((s_56831[chckIndx(addInt(i_56834, 3), 0, s_56831.length+0-1)-0] >>> 0) >>> 6) == 2);						}					if (Tmp6) {
					i_56834 = addInt(i_56834, 4);
					}
					else {
						result_56832 = i_56834;
						break BeforeRet;
					}
					
					}
					else {
						result_56832 = i_56834;
						break BeforeRet;
					}
					}}}
				}
		} while(false);
		result_56832 = -1;
		break BeforeRet;
	} while (false);

	return result_56832;

}

function nucruneLen(s_53825) {
	var result_53826 = 0;

		var i_53828 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_53828 < (s_53825 != null ? s_53825.length : 0))) break L2;
					if ((s_53825[chckIndx(i_53828, 0, s_53825.length+0-1)-0] <= 127)) {
					i_53828 = addInt(i_53828, 1);
					}
					else {
					if ((((s_53825[chckIndx(i_53828, 0, s_53825.length+0-1)-0] >>> 0) >>> 5) == 6)) {
					i_53828 = addInt(i_53828, 2);
					}
					else {
					if ((((s_53825[chckIndx(i_53828, 0, s_53825.length+0-1)-0] >>> 0) >>> 4) == 14)) {
					i_53828 = addInt(i_53828, 3);
					}
					else {
					if ((((s_53825[chckIndx(i_53828, 0, s_53825.length+0-1)-0] >>> 0) >>> 3) == 30)) {
					i_53828 = addInt(i_53828, 4);
					}
					else {
					if ((((s_53825[chckIndx(i_53828, 0, s_53825.length+0-1)-0] >>> 0) >>> 2) == 62)) {
					i_53828 = addInt(i_53828, 5);
					}
					else {
					if ((((s_53825[chckIndx(i_53828, 0, s_53825.length+0-1)-0] >>> 0) >>> 1) == 126)) {
					i_53828 = addInt(i_53828, 6);
					}
					else {
					i_53828 = addInt(i_53828, 1);
					}
					}}}}}
					result_53826 = addInt(result_53826, 1);
				}
		} while(false);

	return result_53826;

}

function align_string_242223(s_242225, minimum_width_242226, align_242227, fill_242228) {
			var Tmp1;

	var result_242229 = null;

		if ((minimum_width_242226 == 0)) {
		result_242229 = nimCopy(null, s_242225, NTI138);
		}
		else {
			if ((validate_utf8_56829(s_242225) == -1)) {
			Tmp1 = nucruneLen(s_242225);
			}
			else {
			Tmp1 = (s_242225 != null ? s_242225.length : 0);
			}
			
			var s_rune_len_242231 = Tmp1;
			var to_fill_242232 = subInt(minimum_width_242226, s_rune_len_242231);
			if ((to_fill_242232 <= 0)) {
			result_242229 = nimCopy(null, s_242225, NTI138);
			}
			else {
			if (((align_242227 == 60) || (align_242227 == 0))) {
			result_242229 = nimCopy(null, (s_242225 || []).concat(nsuRepeatChar(fill_242228, chckRange(to_fill_242232, 0, 2147483647)) || []), NTI138);
			}
			else {
			if ((align_242227 == 94)) {
			var half_242233 = divInt(to_fill_242232, 2);
			result_242229 = nimCopy(null, (nsuRepeatChar(fill_242228, chckRange(half_242233, 0, 2147483647)) || []).concat(s_242225 || [],nsuRepeatChar(fill_242228, chckRange(subInt(to_fill_242232, half_242233), 0, 2147483647)) || []), NTI138);
			}
			else {
				result_242229 = nimCopy(null, (nsuRepeatChar(fill_242228, chckRange(to_fill_242232, 0, 2147483647)) || []).concat(s_242225 || []), NTI138);
			}
			}}
		}
		

	return result_242229;

}

function nsuToUpperAsciiChar(c_148462) {
	var result_148463 = 0;

		if ((ConstSet14[c_148462] != undefined)) {
		result_148463 = chckRange(subInt(c_148462, 32), 0, 255);
		}
		else {
			result_148463 = c_148462;
		}
		

	return result_148463;

}

function nsuToUpperAsciiStr(s_148501) {
	var result_148502 = null;

		result_148502 = nimCopy(null, mnewString(chckRange((s_148501 != null ? s_148501.length : 0), 0, 2147483647)), NTI138);
		L1: do {
			var i_148503 = 0;
			var colontmp__256671 = 0;
			colontmp__256671 = subInt((s_148501 != null ? s_148501.length : 0), 1);
			var res_256672 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_256672 <= colontmp__256671)) break L3;
						i_148503 = res_256672;
						result_148502[chckIndx(i_148503, 0, result_148502.length+0-1)-0] = nsuToUpperAsciiChar(s_148501[chckIndx(i_148503, 0, s_148501.length+0-1)-0]);
						res_256672 = addInt(res_256672, 1);
					}
			} while(false);
		} while(false);

	return result_148502;

}

function format_value_335645(result_335648, result_335648_Idx, value_335649, specifier_335650) {
		var Tmp1;

	BeforeRet: do {
		if (((specifier_335650 != null ? specifier_335650.length : 0) == 0)) {
		if (result_335648[result_335648_Idx] != null) { result_335648[result_335648_Idx] = (result_335648[result_335648_Idx]).concat(cstrToNimstr((value_335649)+"")); } else { result_335648[result_335648_Idx] = cstrToNimstr((value_335649)+"").slice(); };
		break BeforeRet;
		}
		
		var spec_335651 = parse_standard_format_specifier_242324(specifier_335650, 0, false);
		var fmode_335652 = 0;
		switch (spec_335651.typ) {
		case 101:
		case 69:
			fmode_335652 = 2;
			break;
		case 102:
		case 70:
			fmode_335652 = 1;
			break;
		case 103:
		case 71:
			fmode_335652 = 0;
			break;
		case 0:
			break;
		default: 
			var e_335654 = null;
			e_335654 = {m_type: NTI3652, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			e_335654.message = nimCopy(null, (makeNimstrLit("invalid type in format string for number, expected one  of \'e\', \'E\', \'f\', \'F\', \'g\', \'G\' but got: ") || []).concat([spec_335651.typ]), NTI138);
			e_335654.parent = null;
			raiseException(e_335654, "ValueError");
			break;
		}
		var f_335809 = [nsuformatBiggestFloat(value_335649, fmode_335652, chckRange(spec_335651.precision, -1, 32), 46)];
		var sign_335810 = false;
		if ((0.0 <= value_335649)) {
		if (!((spec_335651.sign == 45))) {
		sign_335810 = true;
		if ((value_335649 == 0.0)) {
		if (((1.0000000000000000e+000 / value_335649) == Infinity)) {
		insert_28401(f_335809, 0, nimCharToStr(spec_335651.sign), 0);
		}
		
		}
		else {
		insert_28401(f_335809, 0, nimCharToStr(spec_335651.sign), 0);
		}
		
		}
		
		}
		else {
			sign_335810 = true;
		}
		
		if (spec_335651.padWithZero) {
		var sign_str_335813 = [];
		if (sign_335810) {
		sign_str_335813 = nimCopy(null, nimCharToStr(f_335809[0][chckIndx(0, 0, f_335809[0].length+0-1)-0]), NTI138);
		f_335809[0] = nimCopy(null, HEX5BHEX5D_89304(f_335809[0], HEX2EHEX2E_89239(1, 1)), NTI138);
		}
		
		var to_fill_335856 = subInt(subInt(spec_335651.minimumWidth, (f_335809[0] != null ? f_335809[0].length : 0)), (sign_335810 ? 1:0));
		if ((0 < to_fill_335856)) {
		f_335809[0] = nimCopy(null, (nsuRepeatChar(48, chckRange(to_fill_335856, 0, 2147483647)) || []).concat(f_335809[0] || []), NTI138);
		}
		
		if (sign_335810) {
		f_335809[0] = nimCopy(null, (sign_str_335813 || []).concat(f_335809[0] || []), NTI138);
		}
		
		}
		
		if ((spec_335651.align == 0)) {
		Tmp1 = 62;
		}
		else {
		Tmp1 = spec_335651.align;
		}
		
		var align_335859 = Tmp1;
		var res_335860 = align_string_242223(f_335809[0], spec_335651.minimumWidth, align_335859, spec_335651.fill);
		if ((ConstSet13[spec_335651.typ] != undefined)) {
		if (result_335648[result_335648_Idx] != null) { result_335648[result_335648_Idx] = (result_335648[result_335648_Idx]).concat(nsuToUpperAsciiStr(res_335860)); } else { result_335648[result_335648_Idx] = nsuToUpperAsciiStr(res_335860).slice(); };
		}
		else {
		if (result_335648[result_335648_Idx] != null) { result_335648[result_335648_Idx] = (result_335648[result_335648_Idx]).concat(res_335860); } else { result_335648[result_335648_Idx] = res_335860.slice(); };
		}
		
	} while (false);

	
}

function nsuJoinSep(a_153659, sep_153660) {
	var result_153661 = null;

		if ((0 < (a_153659 != null ? a_153659.length : 0))) {
		var l_153672 = mulInt((sep_153660 != null ? sep_153660.length : 0), subInt((a_153659 != null ? a_153659.length : 0), 1));
		L1: do {
			var i_153686 = 0;
			var colontmp__363593 = 0;
			colontmp__363593 = (a_153659 != null ? (a_153659.length-1) : -1);
			var res_363594 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_363594 <= colontmp__363593)) break L3;
						i_153686 = res_363594;
						l_153672 = addInt(l_153672, (a_153659[chckIndx(i_153686, 0, a_153659.length+0-1)-0] != null ? a_153659[chckIndx(i_153686, 0, a_153659.length+0-1)-0].length : 0));
						res_363594 = addInt(res_363594, 1);
					}
			} while(false);
		} while(false);
		result_153661 = nimCopy(null, mnewString(0), NTI138);
		if (result_153661 != null) { result_153661 = (result_153661).concat(a_153659[chckIndx(0, 0, a_153659.length+0-1)-0]); } else { result_153661 = a_153659[chckIndx(0, 0, a_153659.length+0-1)-0].slice(); };
		L4: do {
			var i_153706 = 0;
			var colontmp__363600 = 0;
			colontmp__363600 = (a_153659 != null ? (a_153659.length-1) : -1);
			var res_363601 = 1;
			L5: do {
					L6: while (true) {
					if (!(res_363601 <= colontmp__363600)) break L6;
						i_153706 = res_363601;
						if (result_153661 != null) { result_153661 = (result_153661).concat(sep_153660); } else { result_153661 = sep_153660.slice(); };
						if (result_153661 != null) { result_153661 = (result_153661).concat(a_153659[chckIndx(i_153706, 0, a_153659.length+0-1)-0]); } else { result_153661 = a_153659[chckIndx(i_153706, 0, a_153659.length+0-1)-0].slice(); };
						res_363601 = addInt(res_363601, 1);
					}
			} while(false);
		} while(false);
		}
		else {
			result_153661 = nimCopy(null, [], NTI138);
		}
		

	return result_153661;

}

function sectors2json_332201(x_332210) {
	var result_332211 = null;

		var cnt_332213 = 0;
		var len_obj_332346 = len_313405(x_332210);
		result_332211 = {};
		L1: do {
			var k_332354 = null;
			var v_332355 = null;
			var l_363538 = len_313405(x_332210);
			if ((0 < x_332210.counter)) {
			var h_363539 = x_332210.first;
			L2: do {
					L3: while (true) {
					if (!(0 <= h_363539)) break L3;
						var nxt_363541 = x_332210.data[chckIndx(h_363539, 0, x_332210.data.length+0-1)-0].Field1;
						if (is_filled_183018(x_332210.data[chckIndx(h_363539, 0, x_332210.data.length+0-1)-0].Field0)) {
						k_332354 = x_332210.data[chckIndx(h_363539, 0, x_332210.data.length+0-1)-0].Field2;
						v_332355 = x_332210.data[chckIndx(h_363539, 0, x_332210.data.length+0-1)-0].Field3;
						var o_s_332356 = {};
						o_s_332356["postalCode"] = (toJSStr(v_332355.postalCode));
						o_s_332356["district"] = (toJSStr(v_332355.district));
						o_s_332356["folkDistrict"] = (toJSStr(v_332355.folkDistrict));
						o_s_332356["city"] = (toJSStr(v_332355.city));
						o_s_332356["pFix"] = (v_332355.pFix);
						o_s_332356["streets"] = {};
						L4: do {
							var k_str_334214 = null;
							var v_str_334215 = null;
							var colontmp__363533 = {data: null, counter: 0, first: 0, last: 0};
							nimCopy(colontmp__363533, v_332355.streets, NTI298069);
							var l_363534 = len_333348(colontmp__363533);
							if ((0 < colontmp__363533.counter)) {
							var h_363535 = colontmp__363533.first;
							L5: do {
									L6: while (true) {
									if (!(0 <= h_363535)) break L6;
										var nxt_363537 = colontmp__363533.data[chckIndx(h_363535, 0, colontmp__363533.data.length+0-1)-0].Field1;
										if (is_filled_183018(colontmp__363533.data[chckIndx(h_363535, 0, colontmp__363533.data.length+0-1)-0].Field0)) {
										k_str_334214 = colontmp__363533.data[chckIndx(h_363535, 0, colontmp__363533.data.length+0-1)-0].Field2;
										v_str_334215 = colontmp__363533.data[chckIndx(h_363535, 0, colontmp__363533.data.length+0-1)-0].Field3;
										var seq_lnk_334253 = new_seq_334219(0);
										L7: do {
											var str_lnk_334414 = null;
											var i_363530 = 0;
											var l_363531 = (v_str_334215 != null ? v_str_334215.length : 0);
											L8: do {
													L9: while (true) {
													if (!(i_363530 < l_363531)) break L9;
														str_lnk_334414 = v_str_334215[chckIndx(i_363530, 0, v_str_334215.length+0-1)-0];
														var lnk_o_334415 = {};
														lnk_o_334415["linkId"] = (str_lnk_334414.linkId);
														lnk_o_334415["name"] = (toJSStr(str_lnk_334414.name));
														lnk_o_334415["cityId"] = (str_lnk_334414.cityId);
														lnk_o_334415["districtId"] = (str_lnk_334414.districtId);
														lnk_o_334415["postalCode"] = (toJSStr(str_lnk_334414.postalCode));
														lnk_o_334415["neighborLinks"] = (str_lnk_334414.neighborLinks);
														var gms_335627 = new_seq_40233(0);
														L10: do {
															var g_335634 = null;
															var colontmp__363524 = null;
															colontmp__363524 = str_lnk_334414.geometry;
															var i_363526 = 0;
															var l_363527 = (colontmp__363524 != null ? colontmp__363524.length : 0);
															L11: do {
																	L12: while (true) {
																	if (!(i_363526 < l_363527)) break L12;
																		g_335634 = colontmp__363524[chckIndx(i_363526, 0, colontmp__363524.length+0-1)-0];
																		var lat_335635 = g_335634.lat;
																		var lng_335636 = g_335634.lng;
																		var fmt_res_335640 = [mnewString(0)];
																		format_value_335645(fmt_res_335640, 0, lat_335635, makeNimstrLit("0.5f"));
																		var Tmp13 = nimCopy(null, fmt_res_335640[0], NTI138);
																		if (gms_335627 != null) { gms_335627.push(Tmp13); } else { gms_335627 = [Tmp13]; };
																		var fmt_res_335904 = [mnewString(0)];
																		format_value_335645(fmt_res_335904, 0, lng_335636, makeNimstrLit("0.5f"));
																		var Tmp14 = nimCopy(null, fmt_res_335904[0], NTI138);
																		if (gms_335627 != null) { gms_335627.push(Tmp14); } else { gms_335627 = [Tmp14]; };
																		i_363526 = addInt(i_363526, 1);
																		if (!(((colontmp__363524 != null ? colontmp__363524.length : 0) == l_363527))) {
																		failed_assert_impl_15266(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
																		}
																		
																	}
															} while(false);
														} while(false);
														lnk_o_334415["geometry"] = (toJSStr(nsuJoinSep(gms_335627, makeNimstrLit(","))));
														lnk_o_334415["readOnly"] = (str_lnk_334414.readOnly);
														lnk_o_334415["addedToMap"] = (str_lnk_334414.addedToMap);
														lnk_o_334415["addedToSector"] = (str_lnk_334414.addedToSector);
														if (seq_lnk_334253 != null) { seq_lnk_334253.push(lnk_o_334415); } else { seq_lnk_334253 = [lnk_o_334415]; };
														i_363530 = addInt(i_363530, 1);
														if (!(((v_str_334215 != null ? v_str_334215.length : 0) == l_363531))) {
														failed_assert_impl_15266(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
														}
														
													}
											} while(false);
										} while(false);
										o_s_332356["streets"][toJSStr(k_str_334214)] = seq_lnk_334253;
										if (!((len_333348(colontmp__363533) == l_363534))) {
										failed_assert_impl_15266(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
										}
										
										}
										
										h_363535 = nxt_363537;
									}
							} while(false);
							}
							
						} while(false);
						o_s_332356["shownOnMap"] = (v_332355.shownOnMap);
						o_s_332356["exclude"] = (v_332355.exclude);
						result_332211[toJSStr(k_332354)] = o_s_332356;
						if (!((len_313405(x_332210) == l_363538))) {
						failed_assert_impl_15266(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
						}
						
						}
						
						h_363539 = nxt_363541;
					}
			} while(false);
			}
			
		} while(false);

	return result_332211;

}

function save_337414() {
		if ((ministry_area_300231[0] == null)) {
		ministry_area_300231[0] = {name: nimCopy(null, name_area_300232[0], NTI138), cities: init_ordered_table_337423(64)};
		}
		
		HEX5BHEX5DHEX3D_337945(ministry_area_300231[0].cities, addr_city_300633[0], {allLinks: nimCopy(null, all_links_298629[0], NTI298128), allStreets: nimCopy(null, all_streets_299029[0], NTI298151), cachedTiles: nimCopy(null, cached_tiles_299429[0], NTI298177), allSectors: nimCopy(null, all_sectors_299829[0], NTI298200), lastPostfix: nimCopy(null, last_postfix_300229[0], NTI298226)});
		var ser_342650 = JSON.stringify(ministry_area_300231[0]);
		var fname_342651 = (addr_city_300633[0] || []).concat(makeNimstrLit("_") || [],HEX24_173910(now_168236()) || [],makeNimstrLit(".json") || []);
		save_func_324263(ser_342650, fname_342651);
		var cities_exp_342652 = new_jobject_217204();
		var ministry_area_exp_342653 = new_jobject_217204();
		add_218222(ministry_area_exp_342653, makeNimstrLit("name"), new_jstring_217087(name_area_300232[0]));
		var all_sectors_exp_342655 = new_jarray_217657();
		L1: do {
			var k_342663 = null;
			var v_342664 = null;
			var l_363476 = len_313405(all_sectors_299829[0]);
			if ((0 < all_sectors_299829[0].counter)) {
			var h_363477 = all_sectors_299829[0].first;
			L2: do {
					L3: while (true) {
					if (!(0 <= h_363477)) break L3;
						var nxt_363479 = all_sectors_299829[0].data[chckIndx(h_363477, 0, all_sectors_299829[0].data.length+0-1)-0].Field1;
						if (is_filled_183018(all_sectors_299829[0].data[chckIndx(h_363477, 0, all_sectors_299829[0].data.length+0-1)-0].Field0)) {
						k_342663 = all_sectors_299829[0].data[chckIndx(h_363477, 0, all_sectors_299829[0].data.length+0-1)-0].Field2;
						v_342664 = all_sectors_299829[0].data[chckIndx(h_363477, 0, all_sectors_299829[0].data.length+0-1)-0].Field3;
						var s_342665 = new_jobject_217204();
						add_218222(s_342665, makeNimstrLit("city"), new_jstring_217087(v_342664.city));
						add_217995(all_sectors_exp_342655, s_342665);
						if (!((len_313405(all_sectors_299829[0]) == l_363476))) {
						failed_assert_impl_15266(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
						}
						
						}
						
						h_363477 = nxt_363479;
					}
			} while(false);
			}
			
		} while(false);
		var fname_exp_342668 = (addr_city_300633[0] || []).concat(makeNimstrLit("_Exp_") || [],HEX24_173910(now_168236()) || [],makeNimstrLit(".json") || []);
		var str_r_342669 = sectors2json_332201(all_sectors_299829[0]);
		save_func_324263(JSON.stringify(str_r_342669), fname_exp_342668);

	
}

function set_attr_257568(n_257570, key_257571, val_257572) {
	BeforeRet: do {
		if (((n_257570.attrs != null ? n_257570.attrs.length : 0) == 0)) {
		n_257570.attrs = nimCopy(null, [key_257571, val_257572], NTI257588);
		}
		else {
			L1: do {
				var i_257601 = 0;
				var colontmp__363607 = 0;
				colontmp__363607 = subInt((n_257570.attrs != null ? n_257570.attrs.length : 0), 2);
				var res_363608 = 0;
				L2: do {
						L3: while (true) {
						if (!(res_363608 <= colontmp__363607)) break L3;
							i_257601 = res_363608;
							if ((n_257570.attrs[chckIndx(i_257601, 0, n_257570.attrs.length+0-1)-0] == key_257571)) {
							n_257570.attrs[chckIndx(addInt(i_257601, 1), 0, n_257570.attrs.length+0-1)-0] = val_257572;
							break BeforeRet;
							}
							
							res_363608 = addInt(res_363608, 2);
						}
				} while(false);
			} while(false);
			if (n_257570.attrs != null) { n_257570.attrs.push(key_257571); } else { n_257570.attrs = [key_257571]; };
			if (n_257570.attrs != null) { n_257570.attrs.push(val_257572); } else { n_257570.attrs = [val_257572]; };
		}
		
	} while (false);

	
}

function raw_get_315638(t_315642, key_315643, hc_315644, hc_315644_Idx) {
						var Tmp3;

	var result_315645 = 0;

	BeforeRet: do {
		hc_315644[hc_315644_Idx] = hash_180014(key_315643);
		if ((hc_315644[hc_315644_Idx] == 0)) {
		hc_315644[hc_315644_Idx] = 314159265;
		}
		
		if (((t_315642.data != null ? t_315642.data.length : 0) == 0)) {
		result_315645 = -1;
		break BeforeRet;
		}
		
		var h_315787 = (hc_315644[hc_315644_Idx] & (t_315642.data != null ? (t_315642.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_183018(t_315642.data[chckIndx(h_315787, 0, t_315642.data.length+0-1)-0].Field0)) break L2;
						if (!(t_315642.data[chckIndx(h_315787, 0, t_315642.data.length+0-1)-0].Field0 == hc_315644[hc_315644_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_315642.data[chckIndx(h_315787, 0, t_315642.data.length+0-1)-0].Field2, key_315643);						}					if (Tmp3) {
					result_315645 = h_315787;
					break BeforeRet;
					}
					
					h_315787 = next_try_183035(h_315787, (t_315642.data != null ? (t_315642.data.length-1) : -1));
				}
		} while(false);
		result_315645 = subInt(-1, h_315787);
	} while (false);

	return result_315645;

}

function HEX5BHEX5D_315626(t_315632, key_315633) {
	var result_315635 = null;
	var result_315635_Idx = 0;

		var hc_315636 = [0];
		var index_315637 = raw_get_315638(t_315632, key_315633, hc_315636, 0);
		if ((0 <= index_315637)) {
		result_315635 = t_315632.data[chckIndx(index_315637, 0, t_315632.data.length+0-1)-0]; result_315635_Idx = "Field3";
		}
		else {
			var e_316603 = null;
			e_316603 = {m_type: NTI3654, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			e_316603.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(key_315633 || []), NTI138);
			e_316603.parent = null;
			raiseException(e_316603, "KeyError");
		}
		

	return [result_315635, result_315635_Idx];

}

function raw_get_318421(t_318426, key_318427, hc_318428, hc_318428_Idx) {
						var Tmp3;

	var result_318429 = 0;

	BeforeRet: do {
		hc_318428[hc_318428_Idx] = hash_180014(key_318427);
		if ((hc_318428[hc_318428_Idx] == 0)) {
		hc_318428[hc_318428_Idx] = 314159265;
		}
		
		if (((t_318426.data != null ? t_318426.data.length : 0) == 0)) {
		result_318429 = -1;
		break BeforeRet;
		}
		
		var h_318571 = (hc_318428[hc_318428_Idx] & (t_318426.data != null ? (t_318426.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_183018(t_318426.data[chckIndx(h_318571, 0, t_318426.data.length+0-1)-0].Field0)) break L2;
						if (!(t_318426.data[chckIndx(h_318571, 0, t_318426.data.length+0-1)-0].Field0 == hc_318428[hc_318428_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_318426.data[chckIndx(h_318571, 0, t_318426.data.length+0-1)-0].Field2, key_318427);						}					if (Tmp3) {
					result_318429 = h_318571;
					break BeforeRet;
					}
					
					h_318571 = next_try_183035(h_318571, (t_318426.data != null ? (t_318426.data.length-1) : -1));
				}
		} while(false);
		result_318429 = subInt(-1, h_318571);
	} while (false);

	return result_318429;

}

function raw_insert_321107(t_321113, data_321116, data_321116_Idx, key_321117, val_321118, hc_321119, h_321120) {
		data_321116[data_321116_Idx][chckIndx(h_321120, 0, data_321116[data_321116_Idx].length+0-1)-0].Field2 = nimCopy(null, key_321117, NTI138);
		data_321116[data_321116_Idx][chckIndx(h_321120, 0, data_321116[data_321116_Idx].length+0-1)-0].Field3 = val_321118;
		data_321116[data_321116_Idx][chckIndx(h_321120, 0, data_321116[data_321116_Idx].length+0-1)-0].Field0 = hc_321119;
		data_321116[data_321116_Idx][chckIndx(h_321120, 0, data_321116[data_321116_Idx].length+0-1)-0].Field1 = -1;
		if ((t_321113.first < 0)) {
		t_321113.first = h_321120;
		}
		
		if ((0 <= t_321113.last)) {
		data_321116[data_321116_Idx][chckIndx(t_321113.last, 0, data_321116[data_321116_Idx].length+0-1)-0].Field1 = h_321120;
		}
		
		t_321113.last = h_321120;

	
}

function enlarge_319967(t_319973) {
		var n_319981 = null;
		n_319981 = new Array(chckRange(mulInt((t_319973.data != null ? t_319973.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_319973.data != null ? t_319973.data.length : 0), 2), 0, 2147483647);++i) {n_319981[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		var h_320120 = t_319973.first;
		t_319973.first = -1;
		t_319973.last = -1;
		var Tmp1 = t_319973.data; t_319973.data = n_319981; n_319981 = Tmp1;		L2: do {
				L3: while (true) {
				if (!(0 <= h_320120)) break L3;
					var nxt_320286 = n_319981[chckIndx(h_320120, 0, n_319981.length+0-1)-0].Field1;
					var eh_320442 = n_319981[chckIndx(h_320120, 0, n_319981.length+0-1)-0].Field0;
					if (is_filled_183018(eh_320442)) {
					var j_320449 = (eh_320442 & (t_319973.data != null ? (t_319973.data.length-1) : -1));
					L4: do {
							L5: while (true) {
							if (!is_filled_183018(t_319973.data[chckIndx(j_320449, 0, t_319973.data.length+0-1)-0].Field0)) break L5;
								j_320449 = next_try_183035(j_320449, (t_319973.data != null ? (t_319973.data.length-1) : -1));
							}
					} while(false);
					raw_insert_321107(t_319973, t_319973, "data", n_319981[chckIndx(h_320120, 0, n_319981.length+0-1)-0].Field2, n_319981[chckIndx(h_320120, 0, n_319981.length+0-1)-0].Field3, n_319981[chckIndx(h_320120, 0, n_319981.length+0-1)-0].Field0, j_320449);
					}
					
					h_320120 = nxt_320286;
				}
		} while(false);

	
}

function raw_get_known_hc_321944(t_321949, key_321950, hc_321951) {
	var result_321952 = 0;

	BeforeRet: do {
		if (((t_321949.data != null ? t_321949.data.length : 0) == 0)) {
		result_321952 = -1;
		break BeforeRet;
		}
		
		var h_322091 = (hc_321951 & (t_321949.data != null ? (t_321949.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_183018(t_321949.data[chckIndx(h_322091, 0, t_321949.data.length+0-1)-0].Field0)) break L2;
					if (((t_321949.data[chckIndx(h_322091, 0, t_321949.data.length+0-1)-0].Field0 == hc_321951) && eqStrings(t_321949.data[chckIndx(h_322091, 0, t_321949.data.length+0-1)-0].Field2, key_321950))) {
					result_321952 = h_322091;
					break BeforeRet;
					}
					
					h_322091 = next_try_183035(h_322091, (t_321949.data != null ? (t_321949.data.length-1) : -1));
				}
		} while(false);
		result_321952 = subInt(-1, h_322091);
	} while (false);

	return result_321952;

}

function HEX5BHEX5DHEX3D_317932(t_317938, key_317939, val_317940) {
		if (((t_317938.data != null ? t_317938.data.length : 0) == 0)) {
		if (!(is_power_of_two_143062(64))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_317938.counter = 0;
		t_317938.data = new Array(64); for (var i=0;i<64;++i) {t_317938.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		t_317938.first = -1;
		t_317938.last = -1;
		}
		
		var hc_318401 = [0];
		var index_319060 = raw_get_318421(t_317938, key_317939, hc_318401, 0);
		if ((0 <= index_319060)) {
		t_317938.data[chckIndx(index_319060, 0, t_317938.data.length+0-1)-0].Field3 = val_317940;
		}
		else {
			if (((t_317938.data != null ? t_317938.data.length : 0) == 0)) {
			if (!(is_power_of_two_143062(64))) {
			failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			t_317938.counter = 0;
			t_317938.data = new Array(64); for (var i=0;i<64;++i) {t_317938.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}			t_317938.first = -1;
			t_317938.last = -1;
			}
			
			if (must_rehash_183053((t_317938.data != null ? t_317938.data.length : 0), t_317938.counter)) {
			enlarge_319967(t_317938);
			index_319060 = raw_get_known_hc_321944(t_317938, key_317939, hc_318401[0]);
			}
			
			index_319060 = subInt(-1, index_319060);
			raw_insert_321107(t_317938, t_317938, "data", key_317939, val_317940, hc_318401[0], index_319060);
			t_317938.counter = addInt(t_317938.counter, 1);
		}
		

	
}

function raw_get_322809(t_322813, key_322814, hc_322815, hc_322815_Idx) {
						var Tmp3;

	var result_322816 = 0;

	BeforeRet: do {
		hc_322815[hc_322815_Idx] = hash_180014(key_322814);
		if ((hc_322815[hc_322815_Idx] == 0)) {
		hc_322815[hc_322815_Idx] = 314159265;
		}
		
		if (((t_322813.data != null ? t_322813.data.length : 0) == 0)) {
		result_322816 = -1;
		break BeforeRet;
		}
		
		var h_322958 = (hc_322815[hc_322815_Idx] & (t_322813.data != null ? (t_322813.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_183018(t_322813.data[chckIndx(h_322958, 0, t_322813.data.length+0-1)-0].Field0)) break L2;
						if (!(t_322813.data[chckIndx(h_322958, 0, t_322813.data.length+0-1)-0].Field0 == hc_322815[hc_322815_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_322813.data[chckIndx(h_322958, 0, t_322813.data.length+0-1)-0].Field2, key_322814);						}					if (Tmp3) {
					result_322816 = h_322958;
					break BeforeRet;
					}
					
					h_322958 = next_try_183035(h_322958, (t_322813.data != null ? (t_322813.data.length-1) : -1));
				}
		} while(false);
		result_322816 = subInt(-1, h_322958);
	} while (false);

	return result_322816;

}

function HEX5BHEX5D_322797(t_322803, key_322804) {
	var result_322806 = null;
	var result_322806_Idx = 0;

		var hc_322807 = [0];
		var index_322808 = raw_get_322809(t_322803, key_322804, hc_322807, 0);
		if ((0 <= index_322808)) {
		result_322806 = t_322803.data[chckIndx(index_322808, 0, t_322803.data.length+0-1)-0]; result_322806_Idx = "Field3";
		}
		else {
			var e_323803 = null;
			e_323803 = {m_type: NTI3654, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			e_323803.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(key_322804 || []), NTI138);
			e_323803.parent = null;
			raiseException(e_323803, "KeyError");
		}
		

	return [result_322806, result_322806_Idx];

}

function id_311902(s_311904) {
	var result_311905 = null;

		result_311905 = nimCopy(null, (s_311904.postalCode || []).concat(makeNimstrLit("-") || [],cstrToNimstr((s_311904.pFix)+"") || []), NTI138);

	return result_311905;

}

function name_311872(s_311874) {
		var Tmp1;

	var result_311875 = null;

		if (!(eqStrings(s_311874.folkDistrict, []))) {
		Tmp1 = s_311874.folkDistrict;
		}
		else {
		Tmp1 = s_311874.district;
		}
		
		result_311875 = nimCopy(null, nucStrip(nsuJoinSep([(s_311874.postalCode || []).concat(makeNimstrLit("-") || [],cstrToNimstr((s_311874.pFix)+"") || []), nimCopy(null, s_311874.city, NTI138), nimCopy(null, Tmp1, NTI138)], makeNimstrLit(" ")), true, true, [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288]), NTI138);

	return result_311875;

}

function hash_313248(x_313250) {
	var result_313251 = 0;

		result_313251 = HEX21HEX26_178244(hash_180014(id_311902(x_313250)), hash_180014(name_311872(x_313250)));
		result_313251 = HEX21HEX24_178294(result_313251);

	return result_313251;

}

function raw_get_314379(t_314383, key_314384, hc_314385, hc_314385_Idx) {
						var Tmp3;

	var result_314386 = 0;

	BeforeRet: do {
		hc_314385[hc_314385_Idx] = hash_313248(key_314384);
		if ((hc_314385[hc_314385_Idx] == 0)) {
		hc_314385[hc_314385_Idx] = 314159265;
		}
		
		if (((t_314383.data != null ? t_314383.data.length : 0) == 0)) {
		result_314386 = -1;
		break BeforeRet;
		}
		
		var h_314526 = (hc_314385[hc_314385_Idx] & (t_314383.data != null ? (t_314383.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_183018(t_314383.data[chckIndx(h_314526, 0, t_314383.data.length+0-1)-0].Field0)) break L2;
						if (!(t_314383.data[chckIndx(h_314526, 0, t_314383.data.length+0-1)-0].Field0 == hc_314385[hc_314385_Idx])) Tmp3 = false; else {							Tmp3 = (t_314383.data[chckIndx(h_314526, 0, t_314383.data.length+0-1)-0].Field1 == key_314384);						}					if (Tmp3) {
					result_314386 = h_314526;
					break BeforeRet;
					}
					
					h_314526 = next_try_183035(h_314526, (t_314383.data != null ? (t_314383.data.length-1) : -1));
				}
		} while(false);
		result_314386 = subInt(-1, h_314526);
	} while (false);

	return result_314386;

}

function HEX5BHEX5D_314367(t_314373, key_314374) {
	var result_314376 = null;
	var result_314376_Idx = 0;

		var hc_314377 = [0];
		var index_314378 = raw_get_314379(t_314373, key_314374, hc_314377, 0);
		if ((0 <= index_314378)) {
		result_314376 = t_314373.data[chckIndx(index_314378, 0, t_314373.data.length+0-1)-0]; result_314376_Idx = "Field2";
		}
		else {
			var e_315202 = null;
			e_315202 = {m_type: NTI3654, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			e_315202.message = nimCopy(null, makeNimstrLit("key not found"), NTI138);
			e_315202.parent = null;
			raiseException(e_315202, "KeyError");
		}
		

	return [result_314376, result_314376_Idx];

}

function remove_all_sector_from_map_313269() {
						var Tmp5;
						var Tmp6;

		L1: do {
			var s_314215 = null;
			var s_314215_Idx = 0;
			var l_363631 = len_313405(all_sectors_299829[0]);
			if ((0 < all_sectors_299829[0].counter)) {
			var h_363632 = all_sectors_299829[0].first;
			L2: do {
					L3: while (true) {
					if (!(0 <= h_363632)) break L3;
						var nxt_363634 = all_sectors_299829[0].data[chckIndx(h_363632, 0, all_sectors_299829[0].data.length+0-1)-0].Field1;
						if (is_filled_183018(all_sectors_299829[0].data[chckIndx(h_363632, 0, all_sectors_299829[0].data.length+0-1)-0].Field0)) {
						s_314215 = all_sectors_299829[0].data[chckIndx(h_363632, 0, all_sectors_299829[0].data.length+0-1)-0]; s_314215_Idx = "Field3";
						s_314215[s_314215_Idx].shownOnMap = false;
++excHandler;
						Tmp5 = framePtr;
						try {
						(Tmp6 = HEX5BHEX5D_314367(sector_grp_300629[0], s_314215[s_314215_Idx]), Tmp6)[0][Tmp6[1]].removeAll();
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
						framePtr = Tmp5;
						lastJSError = prevJSError;
						} finally {
						framePtr = Tmp5;
						}
						if (!((len_313405(all_sectors_299829[0]) == l_363631))) {
						failed_assert_impl_15266(makeNimstrLit("tables.nim(1734, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
						}
						
						}
						
						h_363632 = nxt_363634;
					}
			} while(false);
			}
			
		} while(false);
		redraw_277814(kxi_268324[0]);

	
}

function load_315472(d_315474) {
		var Tmp2;
		var Tmp3;
						var Tmp8;
						var Tmp9;
						var Tmp10;

++excHandler;
		Tmp2 = framePtr;
		try {
		var city_316835 = (Tmp3 = HEX5BHEX5D_315626(d_315474.cities, addr_city_300633[0]), Tmp3)[0][Tmp3[1]];
		nimCopy(all_links_298629[0], city_316835.allLinks, NTI298128);
		nimCopy(all_streets_299029[0], city_316835.allStreets, NTI298151);
		nimCopy(cached_tiles_299429[0], city_316835.cachedTiles, NTI298177);
		L4: do {
			var k_317814 = null;
			var v_317815 = null;
			var colontmp__363618 = {data: null, counter: 0, first: 0, last: 0};
			nimCopy(colontmp__363618, city_316835.allSectors, NTI298200);
			var l_363619 = len_313405(colontmp__363618);
			if ((0 < colontmp__363618.counter)) {
			var h_363620 = colontmp__363618.first;
			L5: do {
					L6: while (true) {
					if (!(0 <= h_363620)) break L6;
						var nxt_363622 = colontmp__363618.data[chckIndx(h_363620, 0, colontmp__363618.data.length+0-1)-0].Field1;
						if (is_filled_183018(colontmp__363618.data[chckIndx(h_363620, 0, colontmp__363618.data.length+0-1)-0].Field0)) {
						k_317814 = colontmp__363618.data[chckIndx(h_363620, 0, colontmp__363618.data.length+0-1)-0].Field2;
						v_317815 = colontmp__363618.data[chckIndx(h_363620, 0, colontmp__363618.data.length+0-1)-0].Field3;
						HEX5BHEX5DHEX3D_317932(all_sectors_299829[0], k_317814, v_317815);
++excHandler;
						Tmp8 = framePtr;
						try {
						(Tmp9 = HEX5BHEX5D_322797(all_sectors_299829[0], k_317814), Tmp9)[0][Tmp9[1]].folkDistrict = nimCopy(null, v_317815.folkDistrict, NTI138);
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
						framePtr = Tmp8;
						(Tmp10 = HEX5BHEX5D_322797(all_sectors_299829[0], k_317814), Tmp10)[0][Tmp10[1]].folkDistrict = nimCopy(null, [], NTI138);
						lastJSError = prevJSError;
						} finally {
						framePtr = Tmp8;
						}
						if (!((len_313405(colontmp__363618) == l_363619))) {
						failed_assert_impl_15266(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
						}
						
						}
						
						h_363620 = nxt_363622;
					}
			} while(false);
			}
			
		} while(false);
		nimCopy(last_postfix_300229[0], city_316835.lastPostfix, NTI298226);
		redraw_277814(kxi_268324[0]);
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
		framePtr = Tmp2;
		window.alert(("Сначала кликнуть по городу на карте\n с каким надо работать."));
		lastJSError = prevJSError;
		} finally {
		framePtr = Tmp2;
		}
		remove_all_sector_from_map_313269();

	
}

function has_key_353789(t_353794, key_353795) {
	var result_353796 = false;

		var hc_353797 = [0];
		result_353796 = (0 <= raw_get_308002(t_353794, key_353795, hc_353797, 0));

	return result_353796;

}

function HEX5BHEX5D_353971(t_353977, key_353978) {
	var result_353980 = null;
	var result_353980_Idx = 0;

		var hc_353981 = [0];
		var index_353982 = raw_get_308002(t_353977, key_353978, hc_353981, 0);
		if ((0 <= index_353982)) {
		result_353980 = t_353977.data[chckIndx(index_353982, 0, t_353977.data.length+0-1)-0]; result_353980_Idx = "Field2";
		}
		else {
			var e_354202 = null;
			e_354202 = {m_type: NTI3654, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			e_354202.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(cstrToNimstr((key_353978)+"") || []), NTI138);
			e_354202.parent = null;
			raiseException(e_354202, "KeyError");
		}
		

	return [result_353980, result_353980_Idx];

}

function raw_get_347021(t_347026, key_347027, hc_347028, hc_347028_Idx) {
						var Tmp3;

	var result_347029 = 0;

	BeforeRet: do {
		hc_347028[hc_347028_Idx] = hash_180014(key_347027);
		if ((hc_347028[hc_347028_Idx] == 0)) {
		hc_347028[hc_347028_Idx] = 314159265;
		}
		
		if (((t_347026.data != null ? t_347026.data.length : 0) == 0)) {
		result_347029 = -1;
		break BeforeRet;
		}
		
		var h_347171 = (hc_347028[hc_347028_Idx] & (t_347026.data != null ? (t_347026.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_183018(t_347026.data[chckIndx(h_347171, 0, t_347026.data.length+0-1)-0].Field0)) break L2;
						if (!(t_347026.data[chckIndx(h_347171, 0, t_347026.data.length+0-1)-0].Field0 == hc_347028[hc_347028_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_347026.data[chckIndx(h_347171, 0, t_347026.data.length+0-1)-0].Field2, key_347027);						}					if (Tmp3) {
					result_347029 = h_347171;
					break BeforeRet;
					}
					
					h_347171 = next_try_183035(h_347171, (t_347026.data != null ? (t_347026.data.length-1) : -1));
				}
		} while(false);
		result_347029 = subInt(-1, h_347171);
	} while (false);

	return result_347029;

}

function raw_insert_349507(t_349513, data_349516, data_349516_Idx, key_349517, val_349518, hc_349519, h_349520) {
		data_349516[data_349516_Idx][chckIndx(h_349520, 0, data_349516[data_349516_Idx].length+0-1)-0].Field2 = nimCopy(null, key_349517, NTI138);
		data_349516[data_349516_Idx][chckIndx(h_349520, 0, data_349516[data_349516_Idx].length+0-1)-0].Field3 = nimCopy(null, val_349518, NTI298061);
		data_349516[data_349516_Idx][chckIndx(h_349520, 0, data_349516[data_349516_Idx].length+0-1)-0].Field0 = hc_349519;
		data_349516[data_349516_Idx][chckIndx(h_349520, 0, data_349516[data_349516_Idx].length+0-1)-0].Field1 = -1;
		if ((t_349513.first < 0)) {
		t_349513.first = h_349520;
		}
		
		if ((0 <= t_349513.last)) {
		data_349516[data_349516_Idx][chckIndx(t_349513.last, 0, data_349516[data_349516_Idx].length+0-1)-0].Field1 = h_349520;
		}
		
		t_349513.last = h_349520;

	
}

function enlarge_348367(t_348373) {
		var n_348381 = null;
		n_348381 = new Array(chckRange(mulInt((t_348373.data != null ? t_348373.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_348373.data != null ? t_348373.data.length : 0), 2), 0, 2147483647);++i) {n_348381[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		var h_348520 = t_348373.first;
		t_348373.first = -1;
		t_348373.last = -1;
		var Tmp1 = t_348373.data; t_348373.data = n_348381; n_348381 = Tmp1;		L2: do {
				L3: while (true) {
				if (!(0 <= h_348520)) break L3;
					var nxt_348686 = n_348381[chckIndx(h_348520, 0, n_348381.length+0-1)-0].Field1;
					var eh_348842 = n_348381[chckIndx(h_348520, 0, n_348381.length+0-1)-0].Field0;
					if (is_filled_183018(eh_348842)) {
					var j_348849 = (eh_348842 & (t_348373.data != null ? (t_348373.data.length-1) : -1));
					L4: do {
							L5: while (true) {
							if (!is_filled_183018(t_348373.data[chckIndx(j_348849, 0, t_348373.data.length+0-1)-0].Field0)) break L5;
								j_348849 = next_try_183035(j_348849, (t_348373.data != null ? (t_348373.data.length-1) : -1));
							}
					} while(false);
					raw_insert_349507(t_348373, t_348373, "data", n_348381[chckIndx(h_348520, 0, n_348381.length+0-1)-0].Field2, n_348381[chckIndx(h_348520, 0, n_348381.length+0-1)-0].Field3, n_348381[chckIndx(h_348520, 0, n_348381.length+0-1)-0].Field0, j_348849);
					}
					
					h_348520 = nxt_348686;
				}
		} while(false);

	
}

function raw_get_known_hc_350359(t_350364, key_350365, hc_350366) {
	var result_350367 = 0;

	BeforeRet: do {
		if (((t_350364.data != null ? t_350364.data.length : 0) == 0)) {
		result_350367 = -1;
		break BeforeRet;
		}
		
		var h_350506 = (hc_350366 & (t_350364.data != null ? (t_350364.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_183018(t_350364.data[chckIndx(h_350506, 0, t_350364.data.length+0-1)-0].Field0)) break L2;
					if (((t_350364.data[chckIndx(h_350506, 0, t_350364.data.length+0-1)-0].Field0 == hc_350366) && eqStrings(t_350364.data[chckIndx(h_350506, 0, t_350364.data.length+0-1)-0].Field2, key_350365))) {
					result_350367 = h_350506;
					break BeforeRet;
					}
					
					h_350506 = next_try_183035(h_350506, (t_350364.data != null ? (t_350364.data.length-1) : -1));
				}
		} while(false);
		result_350367 = subInt(-1, h_350506);
	} while (false);

	return result_350367;

}

function has_key_or_put_346492(t_346498, key_346499, val_346500) {
	var result_346501 = false;

		if (((t_346498.data != null ? t_346498.data.length : 0) == 0)) {
		if (!(is_power_of_two_143062(64))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_346498.counter = 0;
		t_346498.data = new Array(64); for (var i=0;i<64;++i) {t_346498.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		t_346498.first = -1;
		t_346498.last = -1;
		}
		
		var hc_347001 = [0];
		var index_347660 = raw_get_347021(t_346498, key_346499, hc_347001, 0);
		if ((index_347660 < 0)) {
		result_346501 = false;
		if (((t_346498.data != null ? t_346498.data.length : 0) == 0)) {
		if (!(is_power_of_two_143062(64))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_346498.counter = 0;
		t_346498.data = new Array(64); for (var i=0;i<64;++i) {t_346498.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		t_346498.first = -1;
		t_346498.last = -1;
		}
		
		if (must_rehash_183053((t_346498.data != null ? t_346498.data.length : 0), t_346498.counter)) {
		enlarge_348367(t_346498);
		index_347660 = raw_get_known_hc_350359(t_346498, key_346499, hc_347001[0]);
		}
		
		index_347660 = subInt(-1, index_347660);
		raw_insert_349507(t_346498, t_346498, "data", key_346499, val_346500, hc_347001[0], index_347660);
		t_346498.counter = addInt(t_346498.counter, 1);
		}
		else {
			result_346501 = true;
		}
		

	return result_346501;

}

function raw_get_345323(t_345327, key_345328, hc_345329, hc_345329_Idx) {
						var Tmp3;

	var result_345330 = 0;

	BeforeRet: do {
		hc_345329[hc_345329_Idx] = hash_180014(key_345328);
		if ((hc_345329[hc_345329_Idx] == 0)) {
		hc_345329[hc_345329_Idx] = 314159265;
		}
		
		if (((t_345327.data != null ? t_345327.data.length : 0) == 0)) {
		result_345330 = -1;
		break BeforeRet;
		}
		
		var h_345472 = (hc_345329[hc_345329_Idx] & (t_345327.data != null ? (t_345327.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_183018(t_345327.data[chckIndx(h_345472, 0, t_345327.data.length+0-1)-0].Field0)) break L2;
						if (!(t_345327.data[chckIndx(h_345472, 0, t_345327.data.length+0-1)-0].Field0 == hc_345329[hc_345329_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_345327.data[chckIndx(h_345472, 0, t_345327.data.length+0-1)-0].Field2, key_345328);						}					if (Tmp3) {
					result_345330 = h_345472;
					break BeforeRet;
					}
					
					h_345472 = next_try_183035(h_345472, (t_345327.data != null ? (t_345327.data.length-1) : -1));
				}
		} while(false);
		result_345330 = subInt(-1, h_345472);
	} while (false);

	return result_345330;

}

function HEX5BHEX5D_345311(t_345317, key_345318) {
	var result_345320 = null;
	var result_345320_Idx = 0;

		var hc_345321 = [0];
		var index_345322 = raw_get_345323(t_345317, key_345318, hc_345321, 0);
		if ((0 <= index_345322)) {
		result_345320 = t_345317.data[chckIndx(index_345322, 0, t_345317.data.length+0-1)-0]; result_345320_Idx = "Field3";
		}
		else {
			var e_346203 = null;
			e_346203 = {m_type: NTI3654, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			e_346203.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(key_345318 || []), NTI138);
			e_346203.parent = null;
			raiseException(e_346203, "KeyError");
		}
		

	return [result_345320, result_345320_Idx];

}

function del_356007(t_356013, key_356014) {
		var n_356022 = null;
		n_356022 = new Array(chckRange((t_356013.data != null ? t_356013.data.length : 0), 0, 2147483647)); for (var i=0;i<chckRange((t_356013.data != null ? t_356013.data.length : 0), 0, 2147483647);++i) {n_356022[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		var h_356161 = t_356013.first;
		t_356013.first = -1;
		t_356013.last = -1;
		var Tmp1 = t_356013.data; t_356013.data = n_356022; n_356022 = Tmp1;		var res_356171 = 0;
		res_356171 = hash_180014(key_356014);
		if ((res_356171 == 0)) {
		res_356171 = 314159265;
		}
		
		var hc_356175 = res_356171;
		L2: do {
				L3: while (true) {
				if (!(0 <= h_356161)) break L3;
					var nxt_356332 = n_356022[chckIndx(h_356161, 0, n_356022.length+0-1)-0].Field1;
					if (is_filled_183018(n_356022[chckIndx(h_356161, 0, n_356022.length+0-1)-0].Field0)) {
					if (((n_356022[chckIndx(h_356161, 0, n_356022.length+0-1)-0].Field0 == hc_356175) && eqStrings(n_356022[chckIndx(h_356161, 0, n_356022.length+0-1)-0].Field2, key_356014))) {
					t_356013.counter = subInt(t_356013.counter, 1);
					}
					else {
						var j_357144 = subInt(-1, raw_get_known_hc_350359(t_356013, n_356022[chckIndx(h_356161, 0, n_356022.length+0-1)-0].Field2, n_356022[chckIndx(h_356161, 0, n_356022.length+0-1)-0].Field0));
						raw_insert_349507(t_356013, t_356013, "data", n_356022[chckIndx(h_356161, 0, n_356022.length+0-1)-0].Field2, n_356022[chckIndx(h_356161, 0, n_356022.length+0-1)-0].Field3, n_356022[chckIndx(h_356161, 0, n_356022.length+0-1)-0].Field0, j_357144);
					}
					
					}
					
					h_356161 = nxt_356332;
				}
		} while(false);

	
}

function raw_get_312086(t_312090, key_312091, hc_312092, hc_312092_Idx) {
						var Tmp3;

	var result_312093 = 0;

	BeforeRet: do {
		hc_312092[hc_312092_Idx] = hash_180014(key_312091);
		if ((hc_312092[hc_312092_Idx] == 0)) {
		hc_312092[hc_312092_Idx] = 314159265;
		}
		
		if (((t_312090.data != null ? t_312090.data.length : 0) == 0)) {
		result_312093 = -1;
		break BeforeRet;
		}
		
		var h_312235 = (hc_312092[hc_312092_Idx] & (t_312090.data != null ? (t_312090.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_183018(t_312090.data[chckIndx(h_312235, 0, t_312090.data.length+0-1)-0].Field0)) break L2;
						if (!(t_312090.data[chckIndx(h_312235, 0, t_312090.data.length+0-1)-0].Field0 == hc_312092[hc_312092_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_312090.data[chckIndx(h_312235, 0, t_312090.data.length+0-1)-0].Field1, key_312091);						}					if (Tmp3) {
					result_312093 = h_312235;
					break BeforeRet;
					}
					
					h_312235 = next_try_183035(h_312235, (t_312090.data != null ? (t_312090.data.length-1) : -1));
				}
		} while(false);
		result_312093 = subInt(-1, h_312235);
	} while (false);

	return result_312093;

}

function HEX5BHEX5D_312074(t_312080, key_312081) {
	var result_312083 = null;
	var result_312083_Idx = 0;

		var hc_312084 = [0];
		var index_312085 = raw_get_312086(t_312080, key_312081, hc_312084, 0);
		if ((0 <= index_312085)) {
		result_312083 = t_312080.data[chckIndx(index_312085, 0, t_312080.data.length+0-1)-0]; result_312083_Idx = "Field2";
		}
		else {
			var e_313003 = null;
			e_313003 = {m_type: NTI3654, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			e_313003.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(key_312081 || []), NTI138);
			e_313003.parent = null;
			raiseException(e_313003, "KeyError");
		}
		

	return [result_312083, result_312083_Idx];

}

function del_351459(t_351465, key_351466) {
		var n_351474 = null;
		n_351474 = new Array(chckRange((t_351465.data != null ? t_351465.data.length : 0), 0, 2147483647)); for (var i=0;i<chckRange((t_351465.data != null ? t_351465.data.length : 0), 0, 2147483647);++i) {n_351474[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		var h_351613 = t_351465.first;
		t_351465.first = -1;
		t_351465.last = -1;
		var Tmp1 = t_351465.data; t_351465.data = n_351474; n_351474 = Tmp1;		var res_351623 = 0;
		res_351623 = hash_180014(key_351466);
		if ((res_351623 == 0)) {
		res_351623 = 314159265;
		}
		
		var hc_351627 = res_351623;
		L2: do {
				L3: while (true) {
				if (!(0 <= h_351613)) break L3;
					var nxt_351784 = n_351474[chckIndx(h_351613, 0, n_351474.length+0-1)-0].Field1;
					if (is_filled_183018(n_351474[chckIndx(h_351613, 0, n_351474.length+0-1)-0].Field0)) {
					if (((n_351474[chckIndx(h_351613, 0, n_351474.length+0-1)-0].Field0 == hc_351627) && eqStrings(n_351474[chckIndx(h_351613, 0, n_351474.length+0-1)-0].Field2, key_351466))) {
					t_351465.counter = subInt(t_351465.counter, 1);
					}
					else {
						var j_352596 = subInt(-1, raw_get_known_hc_321944(t_351465, n_351474[chckIndx(h_351613, 0, n_351474.length+0-1)-0].Field2, n_351474[chckIndx(h_351613, 0, n_351474.length+0-1)-0].Field0));
						raw_insert_321107(t_351465, t_351465, "data", n_351474[chckIndx(h_351613, 0, n_351474.length+0-1)-0].Field2, n_351474[chckIndx(h_351613, 0, n_351474.length+0-1)-0].Field3, n_351474[chckIndx(h_351613, 0, n_351474.length+0-1)-0].Field0, j_352596);
					}
					
					}
					
					h_351613 = nxt_351784;
				}
		} while(false);

	
}

function len_343208(t_343213) {
	var result_343214 = 0;

		result_343214 = t_343213.counter;

	return result_343214;

}

function has_key_344136(t_344141, key_344142) {
	var result_344143 = false;

		var hc_344144 = [0];
		result_344143 = (0 <= raw_get_318421(t_344141, key_344142, hc_344144, 0));

	return result_344143;

}

function reindex_sect_343070() {
															var Tmp10;
														var Tmp11;
														var Tmp12;
														var Tmp13;
															var Tmp15;
																		var Tmp18;
																		var Tmp19;
																		var Tmp20;
																		var Tmp21;

		var moved_343072 = true;
		L1: do {
				L2: while (true) {
				if (!moved_343072) break L2;
					moved_343072 = false;
					L3: do {
						var k_344015 = null;
						var val_344016 = null;
						var val_344016_Idx = 0;
						var l_363681 = len_343208(last_postfix_300229[0]);
						L4: do {
							var h_363683 = 0;
							var colontmp__363684 = 0;
							colontmp__363684 = (last_postfix_300229[0].data != null ? (last_postfix_300229[0].data.length-1) : -1);
							var res_363685 = 0;
							L5: do {
									L6: while (true) {
									if (!(res_363685 <= colontmp__363684)) break L6;
										h_363683 = res_363685;
										if (is_filled_183018(last_postfix_300229[0].data[chckIndx(h_363683, 0, last_postfix_300229[0].data.length+0-1)-0].Field0)) {
										k_344015 = last_postfix_300229[0].data[chckIndx(h_363683, 0, last_postfix_300229[0].data.length+0-1)-0].Field1;
										val_344016 = last_postfix_300229[0].data[chckIndx(h_363683, 0, last_postfix_300229[0].data.length+0-1)-0]; val_344016_Idx = "Field2";
										L7: do {
											var v_344023 = 0;
											var colontmp__363664 = 0;
											colontmp__363664 = val_344016[val_344016_Idx];
											var res_363669 = colontmp__363664;
											L8: do {
													L9: while (true) {
													if (!(1 <= res_363669)) break L9;
														v_344023 = res_363669;
														var from_sect_344024 = (k_344015 || []).concat(makeNimstrLit("-") || [],cstrToNimstr((v_344023)+"") || []);
														var prev_v_344025 = subInt(v_344023, 1);
														var to_sect_344026 = (k_344015 || []).concat(makeNimstrLit("-") || [],cstrToNimstr((prev_v_344025)+"") || []);
															if (!!((prev_v_344025 == 0))) Tmp10 = false; else {																Tmp10 = !(has_key_344136(all_sectors_299829[0], to_sect_344026));															}														if (Tmp10) {
														moved_343072 = true;
														HEX5BHEX5DHEX3D_317932(all_sectors_299829[0], to_sect_344026, {postalCode: null, district: null, folkDistrict: null, city: null, pFix: 0, streets: {data: null, counter: 0, first: 0, last: 0}, shownOnMap: false, exclude: false});
														(Tmp11 = HEX5BHEX5D_322797(all_sectors_299829[0], to_sect_344026), Tmp11)[0][Tmp11[1]] = (Tmp12 = HEX5BHEX5D_322797(all_sectors_299829[0], from_sect_344024), Tmp12)[0][Tmp12[1]];
														(Tmp13 = HEX5BHEX5D_322797(all_sectors_299829[0], to_sect_344026), Tmp13)[0][Tmp13[1]].pFix = prev_v_344025;
														L14: do {
															var name_344978 = null;
															var m_v_344979 = null;
															var colontmp__363659 = {data: null, counter: 0, first: 0, last: 0};
															nimCopy(colontmp__363659, (Tmp15 = HEX5BHEX5D_322797(all_sectors_299829[0], from_sect_344024), Tmp15)[0][Tmp15[1]].streets, NTI298069);
															var l_363660 = len_333348(colontmp__363659);
															if ((0 < colontmp__363659.counter)) {
															var h_363661 = colontmp__363659.first;
															L16: do {
																	L17: while (true) {
																	if (!(0 <= h_363661)) break L17;
																		var nxt_363663 = colontmp__363659.data[chckIndx(h_363661, 0, colontmp__363659.data.length+0-1)-0].Field1;
																		if (is_filled_183018(colontmp__363659.data[chckIndx(h_363661, 0, colontmp__363659.data.length+0-1)-0].Field0)) {
																		name_344978 = colontmp__363659.data[chckIndx(h_363661, 0, colontmp__363659.data.length+0-1)-0].Field2;
																		m_v_344979 = colontmp__363659.data[chckIndx(h_363661, 0, colontmp__363659.data.length+0-1)-0].Field3;
																		has_key_or_put_346492((Tmp18 = HEX5BHEX5D_322797(all_sectors_299829[0], to_sect_344026), Tmp18)[0][Tmp18[1]].streets, name_344978, (Tmp19 = HEX5BHEX5D_345311(all_streets_299029[0], name_344978), Tmp19)[0][Tmp19[1]].links);
																		(Tmp20 = HEX5BHEX5D_345311(all_streets_299029[0], name_344978), Tmp20)[0][Tmp20[1]].sector = (Tmp21 = HEX5BHEX5D_322797(all_sectors_299829[0], to_sect_344026), Tmp21)[0][Tmp21[1]];
																		if (!((len_333348(colontmp__363659) == l_363660))) {
																		failed_assert_impl_15266(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
																		}
																		
																		}
																		
																		h_363661 = nxt_363663;
																	}
															} while(false);
															}
															
														} while(false);
														del_351459(all_sectors_299829[0], from_sect_344024);
														if ((v_344023 == val_344016[val_344016_Idx])) {
														val_344016[val_344016_Idx] = subInt(val_344016[val_344016_Idx], 1);
														}
														
														}
														
														res_363669 = subInt(res_363669, 1);
													}
											} while(false);
										} while(false);
										if (!((len_343208(last_postfix_300229[0]) == l_363681))) {
										failed_assert_impl_15266(makeNimstrLit("tables.nim(691, 13) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
										}
										
										}
										
										res_363685 = addInt(res_363685, 1);
									}
							} while(false);
						} while(false);
					} while(false);
				}
		} while(false);

	
}

function init_ordered_table_358305(initial_size_358309) {
	var result_358311 = {data: null, counter: 0, first: 0, last: 0};

		if (!(is_power_of_two_143062(initial_size_358309))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_358311.counter = 0;
		result_358311.data = new Array(chckRange(initial_size_358309, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_358309, 0, 2147483647);++i) {result_358311.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		result_358311.first = -1;
		result_358311.last = -1;

	return result_358311;

}

function contains_360980(s_360986, value_360987) {
	var result_360988 = false;

		result_360988 = ((cmpStrings(s_360986.a, value_360987) <= 0) && (cmpStrings(value_360987, s_360986.b) <= 0));

	return result_360988;

}

function HEX2EHEX2E_360817(a_360821, b_360822) {
	var result_360828 = {a: null, b: null};

		nimCopy(result_360828, {a: nimCopy(null, a_360821, NTI138), b: nimCopy(null, b_360822, NTI138)}, NTI360825);

	return result_360828;

}

function len_361953(t_361958) {
	var result_361959 = 0;

		result_361959 = t_361958.counter;

	return result_361959;

}

function create_dom_353168() {

		function HEX3Aanonymous_353432(ev_353435, n_353436) {
				save_337414();

			
		}

		function HEX3Aanonymous_353455(ev_353458, n_353459) {

				function HEX3Aanonymous_353462(e_353465) {
						var data_353473 = e_353465.target.result;
						var a_353478 = JSON.parse(data_353473);
						var x_353479 = a_353478;
						load_315472(x_353479);

					
				}

				var f_reader_353460 = function(){return new FileReader();}();
				f_reader_353460.addEventListener("load", HEX3Aanonymous_353462, false);
				var inp_file_353614 = ev_353458.target;
				f_reader_353460.readAsText(inp_file_353614.files[0]);

			
		}
										var Tmp7;
										var Tmp8;

										function clck_on_str_353171(ev_353174, n_353175) {
												var trgt_353176 = ev_353174.target;
												map.setZoom(20, true);
												map.setCenter({lat: nimCopy(null, chckRange(parseFloat(trgt_353176.getAttribute("data-lat")), -9.0000000000000000e+001, 9.0000000000000000e+001), NTI201016), lng: nimCopy(null, chckRange(parseFloat(trgt_353176.getAttribute("data-lng")), -1.8000000000000000e+002, 1.8000000000000000e+002), NTI201018), m_type: NTI201036}, false);

											
										}

						function HEX3Aanonymous_354581(ev_354584, n_354585) {
								var ev_clck_354586 = ev_354584;
								var t_354590 = ev_clck_354586.target;
								var chckd_354600 = (t_354590.checked);
								var s_n_354610 = (t_354590.value);
								t_354590.checkd = nimBoolToStr((t_354590.checked));
								if (chckd_354600) {
								display_sector_342833(cstrToNimstr(s_n_354610), true);
								}
								else {
								display_sector_342833(cstrToNimstr(s_n_354610), false);
								}
								

							
						}

						function HEX3Aanonymous_354846(ev_354849, n_354850) {
								var Tmp1;
												var Tmp5;
												var Tmp6;
												var Tmp7;
												var Tmp8;
									var Tmp9;
								var Tmp10;

								remove_all_sector_from_map_313269();
								var id_354851 = cstrToNimstr(ev_354849.target.id);
								var from_sect_354852 = nsuReplaceStr(id_354851, makeNimstrLit("_"), makeNimstrLit(" "));
								var el_sel_354853 = document.querySelectorAll(toJSStr((makeNimstrLit("select[id=\'") || []).concat(id_354851 || [],makeNimstrLit("\']") || [])));
								var to_sect_354854 = cstrToNimstr(el_sel_354853[chckIndx(0, 0, el_sel_354853.length+0-1)-0].value);
								var from_sector_355016 = (Tmp1 = HEX5BHEX5D_322797(all_sectors_299829[0], from_sect_354852), Tmp1)[0][Tmp1[1]];
								L2: do {
									var name_355024 = null;
									var m_v_355025 = null;
									var colontmp__363641 = {data: null, counter: 0, first: 0, last: 0};
									nimCopy(colontmp__363641, from_sector_355016.streets, NTI298069);
									var l_363642 = len_333348(colontmp__363641);
									if ((0 < colontmp__363641.counter)) {
									var h_363643 = colontmp__363641.first;
									L3: do {
											L4: while (true) {
											if (!(0 <= h_363643)) break L4;
												var nxt_363645 = colontmp__363641.data[chckIndx(h_363643, 0, colontmp__363641.data.length+0-1)-0].Field1;
												if (is_filled_183018(colontmp__363641.data[chckIndx(h_363643, 0, colontmp__363641.data.length+0-1)-0].Field0)) {
												name_355024 = colontmp__363641.data[chckIndx(h_363643, 0, colontmp__363641.data.length+0-1)-0].Field2;
												m_v_355025 = colontmp__363641.data[chckIndx(h_363643, 0, colontmp__363641.data.length+0-1)-0].Field3;
												has_key_or_put_346492((Tmp5 = HEX5BHEX5D_322797(all_sectors_299829[0], to_sect_354854), Tmp5)[0][Tmp5[1]].streets, name_355024, (Tmp6 = HEX5BHEX5D_345311(all_streets_299029[0], name_355024), Tmp6)[0][Tmp6[1]].links);
												(Tmp7 = HEX5BHEX5D_345311(all_streets_299029[0], name_355024), Tmp7)[0][Tmp7[1]].sector = (Tmp8 = HEX5BHEX5D_322797(all_sectors_299829[0], to_sect_354854), Tmp8)[0][Tmp8[1]];
												del_356007(from_sector_355016.streets, name_355024);
												if (!((len_333348(colontmp__363641) == l_363642))) {
												failed_assert_impl_15266(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
												}
												
												}
												
												h_363643 = nxt_363645;
											}
									} while(false);
									}
									
								} while(false);
								if (!(from_sector_355016.exclude)) {
								if ((from_sector_355016.pFix == (Tmp9 = HEX5BHEX5D_312074(last_postfix_300229[0], from_sector_355016.postalCode), Tmp9)[0][Tmp9[1]])) {
								(Tmp10 = HEX5BHEX5D_312074(last_postfix_300229[0], from_sector_355016.postalCode), Tmp10)[0][Tmp10[1]] = subInt(Tmp10[0][Tmp10[1]], 1);
								}
								
								del_351459(all_sectors_299829[0], from_sect_354852);
								}
								
								reindex_sect_343070();

							
						}

						function HEX3Aanonymous_358101(ev_358104, n_358105) {
								var Tmp1;
													var Tmp6;
																	var Tmp10;
													var Tmp11;
														var Tmp12;
														var Tmp13;
																		var Tmp17;
														var Tmp18;

								var id_358106 = cstrToNimstr(ev_358104.target.id);
								var from_sect_358107 = nsuReplaceStr(id_358106, makeNimstrLit("_"), makeNimstrLit(" "));
								var from_sector_358269 = (Tmp1 = HEX5BHEX5D_322797(all_sectors_299829[0], from_sect_358107), Tmp1)[0][Tmp1[1]];
								var all_sectors_tmp_358278 = [init_ordered_table_299432(64)];
								var addk_358280 = 0;
								var newv_358281 = null;
								L2: do {
									var k_358289 = null;
									var v_358290 = null;
									var l_363705 = len_313405(all_sectors_299829[0]);
									if ((0 < all_sectors_299829[0].counter)) {
									var h_363706 = all_sectors_299829[0].first;
									L3: do {
											L4: while (true) {
											if (!(0 <= h_363706)) break L4;
												var nxt_363708 = all_sectors_299829[0].data[chckIndx(h_363706, 0, all_sectors_299829[0].data.length+0-1)-0].Field1;
												if (is_filled_183018(all_sectors_299829[0].data[chckIndx(h_363706, 0, all_sectors_299829[0].data.length+0-1)-0].Field0)) {
												k_358289 = all_sectors_299829[0].data[chckIndx(h_363706, 0, all_sectors_299829[0].data.length+0-1)-0].Field2;
												v_358290 = all_sectors_299829[0].data[chckIndx(h_363706, 0, all_sectors_299829[0].data.length+0-1)-0].Field3;
												L5: do {
													if (v_358290.exclude) {
													break L5;
													}
													
													if ((addk_358280 == 1)) {
													newv_358281 = JSON.parse(JSON.stringify(v_358290));
													if (false) {
													nimCopy(newv_358281.streets, init_ordered_table_358305(64), NTI298069);
													}
													
													newv_358281.pFix = addInt(newv_358281.pFix, 1);
													L7: do {
														var nst_358291 = null;
														var st_358292 = null;
														var colontmp__363693 = {data: null, counter: 0, first: 0, last: 0};
														nimCopy(colontmp__363693, newv_358281.streets, NTI298069);
														var l_363694 = len_333348(colontmp__363693);
														if ((0 < colontmp__363693.counter)) {
														var h_363695 = colontmp__363693.first;
														L8: do {
																L9: while (true) {
																if (!(0 <= h_363695)) break L9;
																	var nxt_363697 = colontmp__363693.data[chckIndx(h_363695, 0, colontmp__363693.data.length+0-1)-0].Field1;
																	if (is_filled_183018(colontmp__363693.data[chckIndx(h_363695, 0, colontmp__363693.data.length+0-1)-0].Field0)) {
																	nst_358291 = colontmp__363693.data[chckIndx(h_363695, 0, colontmp__363693.data.length+0-1)-0].Field2;
																	st_358292 = colontmp__363693.data[chckIndx(h_363695, 0, colontmp__363693.data.length+0-1)-0].Field3;
																	(Tmp10 = HEX5BHEX5D_345311(all_streets_299029[0], nst_358291), Tmp10)[0][Tmp10[1]].sector = newv_358281;
																	if (!((len_333348(colontmp__363693) == l_363694))) {
																	failed_assert_impl_15266(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
																	}
																	
																	}
																	
																	h_363695 = nxt_363697;
																}
														} while(false);
														}
														
													} while(false);
													Tmp6 = nsuJoinSep([nimCopy(null, (Tmp11 = nsuSplitString(k_358289, makeNimstrLit("-"), -1), Tmp11)[chckIndx(0, 0, Tmp11.length+0-1)-0], NTI138), cstrToNimstr((newv_358281.pFix)+"")], makeNimstrLit("-"));
													}
													else {
														if (eqStrings(k_358289, from_sect_358107)) {
														addk_358280 = 1;
														(Tmp13 = HEX5BHEX5D_312074(last_postfix_300229[0], from_sector_358269.postalCode), Tmp13)[0][Tmp13[1]] = addInt(Tmp13[0][Tmp13[1]], 1);
														HEX5BHEX5DHEX3D_317932(all_sectors_tmp_358278[0], k_358289, v_358290);
														newv_358281 = JSON.parse(JSON.stringify(v_358290));
														if (true) {
														nimCopy(newv_358281.streets, init_ordered_table_358305(64), NTI298069);
														}
														
														newv_358281.pFix = addInt(newv_358281.pFix, 1);
														L14: do {
															var nst_359127 = null;
															var st_359128 = null;
															var colontmp__363700 = {data: null, counter: 0, first: 0, last: 0};
															nimCopy(colontmp__363700, newv_358281.streets, NTI298069);
															var l_363701 = len_333348(colontmp__363700);
															if ((0 < colontmp__363700.counter)) {
															var h_363702 = colontmp__363700.first;
															L15: do {
																	L16: while (true) {
																	if (!(0 <= h_363702)) break L16;
																		var nxt_363704 = colontmp__363700.data[chckIndx(h_363702, 0, colontmp__363700.data.length+0-1)-0].Field1;
																		if (is_filled_183018(colontmp__363700.data[chckIndx(h_363702, 0, colontmp__363700.data.length+0-1)-0].Field0)) {
																		nst_359127 = colontmp__363700.data[chckIndx(h_363702, 0, colontmp__363700.data.length+0-1)-0].Field2;
																		st_359128 = colontmp__363700.data[chckIndx(h_363702, 0, colontmp__363700.data.length+0-1)-0].Field3;
																		(Tmp17 = HEX5BHEX5D_345311(all_streets_299029[0], nst_359127), Tmp17)[0][Tmp17[1]].sector = newv_358281;
																		if (!((len_333348(colontmp__363700) == l_363701))) {
																		failed_assert_impl_15266(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
																		}
																		
																		}
																		
																		h_363702 = nxt_363704;
																	}
															} while(false);
															}
															
														} while(false);
														Tmp12 = nsuJoinSep([nimCopy(null, (Tmp18 = nsuSplitString(k_358289, makeNimstrLit("-"), -1), Tmp18)[chckIndx(0, 0, Tmp18.length+0-1)-0], NTI138), cstrToNimstr((newv_358281.pFix)+"")], makeNimstrLit("-"));
														}
														else {
															newv_358281 = v_358290;
														Tmp12 = k_358289;
														}
														
													Tmp6 = Tmp12;
													}
													
													var newk_359407 = nimCopy(null, Tmp6, NTI138);
													HEX5BHEX5DHEX3D_317932(all_sectors_tmp_358278[0], newk_359407, newv_358281);
												} while(false);
												if (!((len_313405(all_sectors_299829[0]) == l_363705))) {
												failed_assert_impl_15266(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
												}
												
												}
												
												h_363706 = nxt_363708;
											}
									} while(false);
									}
									
								} while(false);
								nimCopy(all_sectors_299829[0], JSON.parse(JSON.stringify(all_sectors_tmp_358278[0])), NTI298200);

							
						}

		function HEX3Aanonymous_359731(ev_359734, n_359735) {
				var el_selects_359736 = document.querySelectorAll("div.chg-sect-name input");
				var new_district_name_359737 = null;
				var from_nsect_359738 = null;
				var to_nsect_359739 = null;
				L1: do {
					var el_359746 = null;
					var i_363711 = 0;
					var l_363712 = (el_selects_359736 != null ? el_selects_359736.length : 0);
					L2: do {
							L3: while (true) {
							if (!(i_363711 < l_363712)) break L3;
								el_359746 = el_selects_359736[chckIndx(i_363711, 0, el_selects_359736.length+0-1)-0];
								switch (toJSStr(cstrToNimstr(el_359746.name))) {
								case "newDistrictName":
									new_district_name_359737 = nimCopy(null, cstrToNimstr(el_359746.value.trim()), NTI138);
									break;
								case "fromNSect":
									from_nsect_359738 = nimCopy(null, cstrToNimstr(el_359746.value.trim()), NTI138);
									break;
								case "toNSect":
									to_nsect_359739 = nimCopy(null, cstrToNimstr(el_359746.value.trim()), NTI138);
									break;
								default: 
									break;
								}
								i_363711 = addInt(i_363711, 1);
								if (!(((el_selects_359736 != null ? el_selects_359736.length : 0) == l_363712))) {
								failed_assert_impl_15266(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);
				L4: do {
					var k_360815 = null;
					var v_360816 = null;
					var v_360816_Idx = 0;
					var l_363716 = len_313405(all_sectors_299829[0]);
					if ((0 < all_sectors_299829[0].counter)) {
					var h_363717 = all_sectors_299829[0].first;
					L5: do {
							L6: while (true) {
							if (!(0 <= h_363717)) break L6;
								var nxt_363719 = all_sectors_299829[0].data[chckIndx(h_363717, 0, all_sectors_299829[0].data.length+0-1)-0].Field1;
								if (is_filled_183018(all_sectors_299829[0].data[chckIndx(h_363717, 0, all_sectors_299829[0].data.length+0-1)-0].Field0)) {
								k_360815 = all_sectors_299829[0].data[chckIndx(h_363717, 0, all_sectors_299829[0].data.length+0-1)-0].Field2;
								v_360816 = all_sectors_299829[0].data[chckIndx(h_363717, 0, all_sectors_299829[0].data.length+0-1)-0]; v_360816_Idx = "Field3";
								if (contains_360980(HEX2EHEX2E_360817(from_nsect_359738, to_nsect_359739), nucStrip(k_360815, true, true, [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288]))) {
								v_360816[v_360816_Idx].folkDistrict = nimCopy(null, new_district_name_359737, NTI138);
								}
								
								if (!((len_313405(all_sectors_299829[0]) == l_363716))) {
								failed_assert_impl_15266(makeNimstrLit("tables.nim(1670, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
								}
								
								}
								
								h_363717 = nxt_363719;
							}
					} while(false);
					}
					
				} while(false);

			
		}

	var result_353170 = null;

		var tmp_353251 = tree_259046(43, []);
		tmp_353251.class = "main-root";
		add_event_handler_278547(tmp_353251, 11, chckd_check_342837, kxi_268324[0]);
		var tmp_353257 = tree_259046(43, []);
		if (!((len_313405(all_sectors_299829[0]) == 0))) {
		var tmp_353258 = tree_259046(104, []);
		add_257786(tmp_353258, text_259164(makeNimstrLit("\xD0\xA1\xD0\xBE\xD1\x85\xD1\x80\xD0\xB0\xD0\xBD\xD0\xB8\xD1\x82\xD1\x8C")));
		add_event_handler_278547(tmp_353258, 0, HEX3Aanonymous_353432, kxi_268324[0]);
		add_257786(tmp_353257, tmp_353258);
		}
		
		var tmp_353259 = tree_259046(103, []);
		set_attr_257568(tmp_353259, "type", "file");
		set_attr_257568(tmp_353259, "name", "fileArea");
		add_event_handler_278547(tmp_353259, 8, HEX3Aanonymous_353455, kxi_268324[0]);
		add_257786(tmp_353257, tmp_353259);
		L1: do {
			var k_353655 = null;
			var v_353656 = null;
			var l_363422 = len_313405(all_sectors_299829[0]);
			if ((0 < all_sectors_299829[0].counter)) {
			var h_363423 = all_sectors_299829[0].first;
			L2: do {
					L3: while (true) {
					if (!(0 <= h_363423)) break L3;
						var nxt_363425 = all_sectors_299829[0].data[chckIndx(h_363423, 0, all_sectors_299829[0].data.length+0-1)-0].Field1;
						if (is_filled_183018(all_sectors_299829[0].data[chckIndx(h_363423, 0, all_sectors_299829[0].data.length+0-1)-0].Field0)) {
						k_353655 = all_sectors_299829[0].data[chckIndx(h_363423, 0, all_sectors_299829[0].data.length+0-1)-0].Field2;
						v_353656 = all_sectors_299829[0].data[chckIndx(h_363423, 0, all_sectors_299829[0].data.length+0-1)-0].Field3;
						var id4move_353657 = nsuReplaceStr(k_353655, makeNimstrLit(" "), makeNimstrLit("_"));
						var tmp_353260 = tree_259046(43, []);
						tmp_353260.class = "sector";
						var tmp_353261 = tree_259046(70, []);
						tmp_353261.class = "sect-name";
						add_257786(tmp_353261, text_259164(name_311872(v_353656)));
						add_257786(tmp_353260, tmp_353261);
						var tmp_353262 = tree_259046(43, []);
						tmp_353262.class = "streets";
						L4: do {
							var n_street_353677 = null;
							var links_353678 = null;
							var colontmp__363400 = {data: null, counter: 0, first: 0, last: 0};
							nimCopy(colontmp__363400, v_353656.streets, NTI298069);
							var l_363402 = len_333348(colontmp__363400);
							if ((0 < colontmp__363400.counter)) {
							var h_363403 = colontmp__363400.first;
							L5: do {
									L6: while (true) {
									if (!(0 <= h_363403)) break L6;
										var nxt_363405 = colontmp__363400.data[chckIndx(h_363403, 0, colontmp__363400.data.length+0-1)-0].Field1;
										if (is_filled_183018(colontmp__363400.data[chckIndx(h_363403, 0, colontmp__363400.data.length+0-1)-0].Field0)) {
										n_street_353677 = colontmp__363400.data[chckIndx(h_363403, 0, colontmp__363400.data.length+0-1)-0].Field2;
										links_353678 = colontmp__363400.data[chckIndx(h_363403, 0, colontmp__363400.data.length+0-1)-0].Field3;
										var street_obj_353679 = {name: nimCopy(null, n_street_353677, NTI138), sector: v_353656, links: null, totalFamilies: 0};
										if (has_key_353789(tbl_total_fam_311595[0], hash_298335(street_obj_353679))) {
										Tmp7 = (Tmp8 = HEX5BHEX5D_353971(tbl_total_fam_311595[0], hash_298335(street_obj_353679)), Tmp8)[0][Tmp8[1]];
										}
										else {
										Tmp7 = 0;
										}
										
										var total_fam_354423 = Tmp7;
										var coord_354424 = links_353678[chckIndx(0, 0, links_353678.length+0-1)-0].geometry[chckIndx(0, 0, links_353678[chckIndx(0, 0, links_353678.length+0-1)-0].geometry.length+0-1)-0];
										var tmp_353263 = tree_259046(43, []);
										tmp_353263.class = "street";
										var tmp_353264 = tree_259046(70, []);
										set_attr_257568(tmp_353264, "data-lat", toJSStr(cstrToNimstr((coord_354424.lat)+"")));
										set_attr_257568(tmp_353264, "data-lng", toJSStr(cstrToNimstr((coord_354424.lng)+"")));
										add_event_handler_278547(tmp_353264, 0, clck_on_str_353171, kxi_268324[0]);
										add_257786(tmp_353264, text_259164(nsuJoinSep([nimCopy(null, n_street_353677, NTI138), makeNimstrLit(" ("), cstrToNimstr((total_fam_354423)+""), makeNimstrLit(")")], [])));
										add_257786(tmp_353263, tmp_353264);
										add_257786(tmp_353262, tmp_353263);
										if (!((len_333348(colontmp__363400) == l_363402))) {
										failed_assert_impl_15266(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
										}
										
										}
										
										h_363403 = nxt_363405;
									}
							} while(false);
							}
							
						} while(false);
						add_257786(tmp_353260, tmp_353262);
						var tmp_353265 = tree_259046(43, []);
						tmp_353265.class = "show-sector-box";
						var tmp_353266 = tree_259046(102, []);
						set_attr_257568(tmp_353266, "for", toJSStr(k_353655));
						add_257786(tmp_353266, text_259164((makeNimstrLit("\xD0\x9F\xD0\xBE\xD0\xBA\xD0\xB0\xD0\xB7. \xD0\xBD\xD0\xB0 \xD0\xBA\xD0\xB0\xD1\x80\xD1\x82\xD0\xB5 (") || []).concat(cstrToNimstr((len_333348(v_353656.streets))+"") || [],makeNimstrLit(")") || [])));
						add_257786(tmp_353265, tmp_353266);
						var tmp_353267 = tree_259046(103, []);
						set_attr_257568(tmp_353267, "type", "checkbox");
						set_attr_257568(tmp_353267, "name", "showSector");
						tmp_353267.class = "show-sector";
						valueHEX3D_256839(tmp_353267, toJSStr(k_353655));
						tmp_353267.id = toJSStr(k_353655);
						set_attr_257568(tmp_353267, "checkd", toJSStr(nimBoolToStr(v_353656.shownOnMap)));
						add_event_handler_278547(tmp_353267, 0, HEX3Aanonymous_354581, kxi_268324[0]);
						add_257786(tmp_353265, tmp_353267);
						add_257786(tmp_353260, tmp_353265);
						var tmp_353268 = tree_259046(43, []);
						tmp_353268.class = "for-select";
						var tmp_353269 = tree_259046(105, []);
						tmp_353269.id = toJSStr(id4move_353657);
						var tmp_353270 = tree_259046(108, []);
						valueHEX3D_256839(tmp_353270, "");
						add_257786(tmp_353270, text_259164(makeNimstrLit("\xD0\x94\xD0\xB2\xD0\xB8\xD0\xBD\xD1\x83\xD1\x82\xD1\x8C \xD0\xB2\xD1\x81\xD0\xB5 \xD1\x83\xD0\xBB\xD0\xB8\xD1\x86\xD1\x8B \xD0\xB2")));
						add_257786(tmp_353269, tmp_353270);
						L9: do {
							var k_opt_354833 = null;
							var v_opt_354834 = null;
							var l_363416 = len_313405(all_sectors_299829[0]);
							if ((0 < all_sectors_299829[0].counter)) {
							var h_363417 = all_sectors_299829[0].first;
							L10: do {
									L11: while (true) {
									if (!(0 <= h_363417)) break L11;
										var nxt_363419 = all_sectors_299829[0].data[chckIndx(h_363417, 0, all_sectors_299829[0].data.length+0-1)-0].Field1;
										if (is_filled_183018(all_sectors_299829[0].data[chckIndx(h_363417, 0, all_sectors_299829[0].data.length+0-1)-0].Field0)) {
										k_opt_354833 = all_sectors_299829[0].data[chckIndx(h_363417, 0, all_sectors_299829[0].data.length+0-1)-0].Field2;
										v_opt_354834 = all_sectors_299829[0].data[chckIndx(h_363417, 0, all_sectors_299829[0].data.length+0-1)-0].Field3;
										L12: do {
											if (eqStrings(k_opt_354833, id_311902(v_353656))) {
											break L12;
											}
											
											var tmp_353271 = tree_259046(108, []);
											valueHEX3D_256839(tmp_353271, toJSStr(k_opt_354833));
											add_257786(tmp_353271, text_259164(k_opt_354833));
											add_257786(tmp_353269, tmp_353271);
										} while(false);
										if (!((len_313405(all_sectors_299829[0]) == l_363416))) {
										failed_assert_impl_15266(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
										}
										
										}
										
										h_363417 = nxt_363419;
									}
							} while(false);
							}
							
						} while(false);
						add_257786(tmp_353268, tmp_353269);
						var tmp_353272 = tree_259046(104, []);
						tmp_353272.id = toJSStr(id4move_353657);
						add_257786(tmp_353272, text_259164(makeNimstrLit("\xD0\x9E\xD0\xBA !")));
						add_event_handler_278547(tmp_353272, 0, HEX3Aanonymous_354846, kxi_268324[0]);
						add_257786(tmp_353268, tmp_353272);
						add_257786(tmp_353260, tmp_353268);
						var tmp_353273 = tree_259046(104, []);
						tmp_353273.id = toJSStr(id4move_353657);
						add_257786(tmp_353273, text_259164(makeNimstrLit("\xD0\xB2\xD1\x81\xD1\x82\xD0\xB0\xD0\xB2\xD0\xB8\xD1\x82\xD1\x8C \xD0\xBD\xD0\xBE\xD0\xB2\xD1\x8B\xD0\xB9 \xD1\x83\xD1\x87\xD0\xB0\xD1\x81\xD1\x82\xD0\xBE\xD0\xBA")));
						add_event_handler_278547(tmp_353273, 0, HEX3Aanonymous_358101, kxi_268324[0]);
						add_257786(tmp_353260, tmp_353273);
						add_257786(tmp_353257, tmp_353260);
						if (!((len_313405(all_sectors_299829[0]) == l_363422))) {
						failed_assert_impl_15266(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
						}
						
						}
						
						h_363423 = nxt_363425;
					}
			} while(false);
			}
			
		} while(false);
		if (!((len_313405(all_sectors_299829[0]) == 0))) {
		var tmp_353274 = tree_259046(43, []);
		tmp_353274.class = "chg-sect-name";
		var tmp_353275 = tree_259046(102, []);
		add_257786(tmp_353275, text_259164(makeNimstrLit("\xD1\x83\xD1\x81\xD1\x82\xD0\xB0\xD0\xBD\xD0\xBE\xD0\xB2\xD0\xB8\xD1\x82\xD1\x8C \xD0\xBD\xD0\xBE\xD0\xB2\xD0\xBE\xD0\xB5 \xD0\xB8\xD0\xBC\xD1\x8F \xD1\x80\xD0\xB0\xD0\xB9\xD0\xBE\xD0\xBD\xD0\xB0: ")));
		add_257786(tmp_353274, tmp_353275);
		var tmp_353276 = tree_259046(103, []);
		set_attr_257568(tmp_353276, "type", "text");
		set_attr_257568(tmp_353276, "placeholder", "новое имя района");
		set_attr_257568(tmp_353276, "name", "newDistrictName");
		add_257786(tmp_353274, tmp_353276);
		var tmp_353277 = tree_259046(31, []);
		var tmp_353278 = tree_259046(102, []);
		add_257786(tmp_353278, text_259164(makeNimstrLit("\xD1\x81: ")));
		add_257786(tmp_353277, tmp_353278);
		var tmp_353279 = tree_259046(103, []);
		set_attr_257568(tmp_353279, "type", "text");
		set_attr_257568(tmp_353279, "placeholder", "с номера участка");
		set_attr_257568(tmp_353279, "name", "fromNSect");
		add_257786(tmp_353277, tmp_353279);
		var tmp_353280 = tree_259046(102, []);
		add_257786(tmp_353280, text_259164(makeNimstrLit("\xD0\xBF\xD0\xBE: ")));
		add_257786(tmp_353277, tmp_353280);
		var tmp_353281 = tree_259046(103, []);
		set_attr_257568(tmp_353281, "type", "text");
		set_attr_257568(tmp_353281, "placeholder", "по номер участка");
		set_attr_257568(tmp_353281, "name", "toNSect");
		add_257786(tmp_353277, tmp_353281);
		add_257786(tmp_353274, tmp_353277);
		var tmp_353282 = tree_259046(104, []);
		add_257786(tmp_353282, text_259164(makeNimstrLit("\xD1\x83\xD1\x81\xD1\x82\xD0\xB0\xD0\xBD\xD0\xBE\xD0\xB2\xD0\xB8\xD1\x82\xD1\x8C!")));
		add_event_handler_278547(tmp_353282, 0, HEX3Aanonymous_359731, kxi_268324[0]);
		add_257786(tmp_353274, tmp_353282);
		add_257786(tmp_353257, tmp_353274);
		}
		
		L13: do {
			var k_361814 = null;
			var v_361815 = 0;
			var l_363444 = len_343208(last_postfix_300229[0]);
			L14: do {
				var h_363446 = 0;
				var colontmp__363447 = 0;
				colontmp__363447 = (last_postfix_300229[0].data != null ? (last_postfix_300229[0].data.length-1) : -1);
				var res_363448 = 0;
				L15: do {
						L16: while (true) {
						if (!(res_363448 <= colontmp__363447)) break L16;
							h_363446 = res_363448;
							if (is_filled_183018(last_postfix_300229[0].data[chckIndx(h_363446, 0, last_postfix_300229[0].data.length+0-1)-0].Field0)) {
							k_361814 = last_postfix_300229[0].data[chckIndx(h_363446, 0, last_postfix_300229[0].data.length+0-1)-0].Field1;
							v_361815 = last_postfix_300229[0].data[chckIndx(h_363446, 0, last_postfix_300229[0].data.length+0-1)-0].Field2;
							var tmp_353283 = tree_259046(43, []);
							add_257786(tmp_353283, text_259164((k_361814 || []).concat(makeNimstrLit(" : ") || [],cstrToNimstr((v_361815)+"") || [])));
							add_257786(tmp_353257, tmp_353283);
							if (!((len_343208(last_postfix_300229[0]) == l_363444))) {
							failed_assert_impl_15266(makeNimstrLit("tables.nim(669, 13) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
							}
							
							}
							
							res_363448 = addInt(res_363448, 1);
						}
				} while(false);
			} while(false);
		} while(false);
		L17: do {
			var k_362814 = null;
			var v_362815 = null;
			var l_363457 = len_361953(all_streets_299029[0]);
			if ((0 < all_streets_299029[0].counter)) {
			var h_363458 = all_streets_299029[0].first;
			L18: do {
					L19: while (true) {
					if (!(0 <= h_363458)) break L19;
						var nxt_363460 = all_streets_299029[0].data[chckIndx(h_363458, 0, all_streets_299029[0].data.length+0-1)-0].Field1;
						if (is_filled_183018(all_streets_299029[0].data[chckIndx(h_363458, 0, all_streets_299029[0].data.length+0-1)-0].Field0)) {
						k_362814 = all_streets_299029[0].data[chckIndx(h_363458, 0, all_streets_299029[0].data.length+0-1)-0].Field2;
						v_362815 = all_streets_299029[0].data[chckIndx(h_363458, 0, all_streets_299029[0].data.length+0-1)-0].Field3;
						L20: do {
							if (!((v_362815.sector == null))) {
							break L20;
							}
							
							var coord_362824 = v_362815.links[chckIndx(0, 0, v_362815.links.length+0-1)-0].geometry[chckIndx(0, 0, v_362815.links[chckIndx(0, 0, v_362815.links.length+0-1)-0].geometry.length+0-1)-0];
							var tmp_353284 = tree_259046(43, []);
							tmp_353284.class = "street";
							var tmp_353285 = tree_259046(70, []);
							set_attr_257568(tmp_353285, "data-lat", toJSStr(cstrToNimstr((coord_362824.lat)+"")));
							set_attr_257568(tmp_353285, "data-lng", toJSStr(cstrToNimstr((coord_362824.lng)+"")));
							add_event_handler_278547(tmp_353285, 0, clck_on_str_353171, kxi_268324[0]);
							add_257786(tmp_353285, text_259164(k_362814));
							add_257786(tmp_353284, tmp_353285);
							add_257786(tmp_353257, tmp_353284);
						} while(false);
						if (!((len_361953(all_streets_299029[0]) == l_363457))) {
						failed_assert_impl_15266(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
						}
						
						}
						
						h_363458 = nxt_363460;
					}
			} while(false);
			}
			
		} while(false);
		add_257786(tmp_353251, tmp_353257);
		result_353170 = tmp_353251;

	return result_353170;

}
var Tmp3;
var Tmp4;
var Tmp5;
var Tmp6;
var loc_search_362894 = [cstrToNimstr((window.location.search))];
loc_search_362894[0] = nimCopy(null, nsuReplaceStr(loc_search_362894[0], makeNimstrLit("?"), []), NTI138);
var arr_ls_362895 = nsuSplitString(loc_search_362894[0], makeNimstrLit("&"), -1);
var app_id_362896 = nimCopy(null, (Tmp3 = nsuSplitString(arr_ls_362895[0], makeNimstrLit("="), -1), Tmp3)[1], NTI138);
var app_code_362897 = nimCopy(null, (Tmp4 = nsuSplitString(arr_ls_362895[1], makeNimstrLit("="), -1), Tmp4)[1], NTI138);
var opts_362899 = {app_id: toJSStr(app_id_362896), app_code: toJSStr(app_code_362897), useHTTPS: true, m_type: NTI282030, useCIT: false};
var pixel_ratio_362909 = (window.devicePixelRatio);
var hidpi_362910 = (1.0000000000000000e+000 < pixel_ratio_362909);
if (hidpi_362910) {
Tmp5 = 512;
}
else {
Tmp5 = 256;
}

var layer_opts_362913 = [{tileSize: Tmp5, pois: true, m_type: NTI286081, ppi: 0, lg: null, lg2: null, style: null, crossOrigin: null}];
if (hidpi_362910) {
layer_opts_362913[0].ppi = 320;
}

var platform_362915 = function(o){return new H.service.Platform(o)}(opts_362899);
var def_layers_362916 = platform_362915.createDefaultLayers(layer_opts_362913[0]);
if (hidpi_362910) {
Tmp6 = 2;
}
else {
Tmp6 = 1;
}

var map_opts_362919 = [{pixelRatio: Tmp6, noWrap: true, m_type: NTI291035}];
map = function(element, baseLayer, opt_options){return new H.Map(element, baseLayer, opt_options)}(document.getElementById("map"), def_layers_362916.normal.map, map_opts_362919[0]);
var map_evts_362926 = function(map){return new H.mapevents.MapEvents(map)}(map);
var behavior = function(mapE){return new H.mapevents.Behavior(mapE)}(map_evts_362926);
var ui_def_362928 = [function(map, mapTypes){return H.ui.UI.createDefault(map, mapTypes);}(map, def_layers_362916)];
set_renderer_278400(create_dom_353168, "main-control-container", null);
map.setZoom(9, true);
map.setCenter({lat: 5.0151851800000003e+001, lng: 8.9302924000000008e+000, m_type: NTI201036}, false);
var main_group_362930 = [function(){return new H.map.Group()}()];
var main_sector_group_362931 = [function(){return new H.map.Group()}()];
main_group_362930[0].setZIndex(99);
map.addObject(main_group_362930[0]);
map.addObject(main_sector_group_362931[0]);
var mrk_362944 = function(position){return new H.map.Marker(position)}({lat: 5.2000000000000000e+001, lng: 8.0000000000000000e+000, m_type: NTI201036});
var p_362946 = {lat: 3.4000000000000000e+001, lng: 1.2300000000000000e+002, m_type: NTI201036};
var scr_point_362947 = function(x,y){return new H.math.Point(x, y)}(1, 1);
var check_362950 = isPointInPolygon(scr_point_362947, [function(x,y){return new H.math.Point(x, y)}(0, 0), function(x,y){return new H.math.Point(x, y)}(0, 3), function(x,y){return new H.math.Point(x, y)}(3, 3)]);
rawEcho(makeNimstrLit("check: "), nimBoolToStr(check_362950));
var cle_362954 = platform_362915.getCustomLocationService();
var geocoder_362955 = platform_362915.getGeocodingService();
var pde_service_362956 = [platform_362915.getPlatformDataService()];
map.addObject(mv_street_grp_300230[0]);
var str_ggeo_point_417280 = [new_seq_40233(0)];

function len_324815(t_324820) {
	var result_324821 = 0;

		result_324821 = t_324820.counter;

	return result_324821;

}

function len_404946(t_404951) {
	var result_404952 = 0;

		result_404952 = t_404951.counter;

	return result_404952;

}

function raw_get_371947(t_371951, key_371952, hc_371953, hc_371953_Idx) {
						var Tmp3;

	var result_371954 = 0;

	BeforeRet: do {
		hc_371953[hc_371953_Idx] = hash_178826(key_371952);
		if ((hc_371953[hc_371953_Idx] == 0)) {
		hc_371953[hc_371953_Idx] = 314159265;
		}
		
		if (((t_371951.data != null ? t_371951.data.length : 0) == 0)) {
		result_371954 = -1;
		break BeforeRet;
		}
		
		var h_372094 = (hc_371953[hc_371953_Idx] & (t_371951.data != null ? (t_371951.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_183018(t_371951.data[chckIndx(h_372094, 0, t_371951.data.length+0-1)-0].Field0)) break L2;
						if (!(t_371951.data[chckIndx(h_372094, 0, t_371951.data.length+0-1)-0].Field0 == hc_371953[hc_371953_Idx])) Tmp3 = false; else {							Tmp3 = (t_371951.data[chckIndx(h_372094, 0, t_371951.data.length+0-1)-0].Field1 == key_371952);						}					if (Tmp3) {
					result_371954 = h_372094;
					break BeforeRet;
					}
					
					h_372094 = next_try_183035(h_372094, (t_371951.data != null ? (t_371951.data.length-1) : -1));
				}
		} while(false);
		result_371954 = subInt(-1, h_372094);
	} while (false);

	return result_371954;

}

function raw_insert_383522(t_383528, data_383531, data_383531_Idx, key_383532, val_383533, hc_383534, h_383535) {
		data_383531[data_383531_Idx][chckIndx(h_383535, 0, data_383531[data_383531_Idx].length+0-1)-0].Field1 = key_383532;
		data_383531[data_383531_Idx][chckIndx(h_383535, 0, data_383531[data_383531_Idx].length+0-1)-0].Field2 = val_383533;
		data_383531[data_383531_Idx][chckIndx(h_383535, 0, data_383531[data_383531_Idx].length+0-1)-0].Field0 = hc_383534;

	
}

function enlarge_382548(t_382554) {
		var n_382562 = null;
		n_382562 = new Array(chckRange(mulInt((t_382554.data != null ? t_382554.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_382554.data != null ? t_382554.data.length : 0), 2), 0, 2147483647);++i) {n_382562[i]={Field0: 0, Field1: 0, Field2: null};}		var Tmp1 = t_382554.data; t_382554.data = n_382562; n_382562 = Tmp1;		L2: do {
			var i_382721 = 0;
			var colontmp__418388 = 0;
			colontmp__418388 = (n_382562 != null ? (n_382562.length-1) : -1);
			var res_418389 = 0;
			L3: do {
					L4: while (true) {
					if (!(res_418389 <= colontmp__418388)) break L4;
						i_382721 = res_418389;
						var eh_382877 = n_382562[chckIndx(i_382721, 0, n_382562.length+0-1)-0].Field0;
						if (is_filled_183018(eh_382877)) {
						var j_382884 = (eh_382877 & (t_382554.data != null ? (t_382554.data.length-1) : -1));
						L5: do {
								L6: while (true) {
								if (!is_filled_183018(t_382554.data[chckIndx(j_382884, 0, t_382554.data.length+0-1)-0].Field0)) break L6;
									j_382884 = next_try_183035(j_382884, (t_382554.data != null ? (t_382554.data.length-1) : -1));
								}
						} while(false);
						raw_insert_383522(t_382554, t_382554, "data", n_382562[chckIndx(i_382721, 0, n_382562.length+0-1)-0].Field1, n_382562[chckIndx(i_382721, 0, n_382562.length+0-1)-0].Field2, eh_382877, j_382884);
						}
						
						res_418389 = addInt(res_418389, 1);
					}
			} while(false);
		} while(false);

	
}

function raw_get_known_hc_384028(t_384032, key_384033, hc_384034) {
	var result_384035 = 0;

	BeforeRet: do {
		if (((t_384032.data != null ? t_384032.data.length : 0) == 0)) {
		result_384035 = -1;
		break BeforeRet;
		}
		
		var h_384174 = (hc_384034 & (t_384032.data != null ? (t_384032.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_183018(t_384032.data[chckIndx(h_384174, 0, t_384032.data.length+0-1)-0].Field0)) break L2;
					if (((t_384032.data[chckIndx(h_384174, 0, t_384032.data.length+0-1)-0].Field0 == hc_384034) && (t_384032.data[chckIndx(h_384174, 0, t_384032.data.length+0-1)-0].Field1 == key_384033))) {
					result_384035 = h_384174;
					break BeforeRet;
					}
					
					h_384174 = next_try_183035(h_384174, (t_384032.data != null ? (t_384032.data.length-1) : -1));
				}
		} while(false);
		result_384035 = subInt(-1, h_384174);
	} while (false);

	return result_384035;

}

function has_key_or_put_381294(t_381300, key_381301, val_381302) {
	var result_381303 = false;

		if (((t_381300.data != null ? t_381300.data.length : 0) == 0)) {
		if (!(is_power_of_two_143062(64))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_381300.counter = 0;
		t_381300.data = new Array(64); for (var i=0;i<64;++i) {t_381300.data[i]={Field0: 0, Field1: 0, Field2: null};}		}
		
		var hc_381801 = [0];
		var index_381810 = raw_get_371947(t_381300, key_381301, hc_381801, 0);
		if ((index_381810 < 0)) {
		result_381303 = false;
		if (((t_381300.data != null ? t_381300.data.length : 0) == 0)) {
		if (!(is_power_of_two_143062(64))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_381300.counter = 0;
		t_381300.data = new Array(64); for (var i=0;i<64;++i) {t_381300.data[i]={Field0: 0, Field1: 0, Field2: null};}		}
		
		if (must_rehash_183053((t_381300.data != null ? t_381300.data.length : 0), t_381300.counter)) {
		enlarge_382548(t_381300);
		index_381810 = raw_get_known_hc_384028(t_381300, key_381301, hc_381801[0]);
		}
		
		index_381810 = subInt(-1, index_381810);
		raw_insert_383522(t_381300, t_381300, "data", key_381301, val_381302, hc_381801[0], index_381810);
		t_381300.counter = addInt(t_381300.counter, 1);
		}
		else {
			result_381303 = true;
		}
		

	return result_381303;

}

function HEX5BHEX5D_372746(t_372752, key_372753) {
	var result_372755 = null;
	var result_372755_Idx = 0;

		var hc_372756 = [0];
		var index_372757 = raw_get_371947(t_372752, key_372753, hc_372756, 0);
		if ((0 <= index_372757)) {
		result_372755 = t_372752.data[chckIndx(index_372757, 0, t_372752.data.length+0-1)-0]; result_372755_Idx = "Field2";
		}
		else {
			var e_373002 = null;
			e_373002 = {m_type: NTI3654, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			e_373002.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(cstrToNimstr((key_372753)+"") || []), NTI138);
			e_373002.parent = null;
			raiseException(e_373002, "KeyError");
		}
		

	return [result_372755, result_372755_Idx];

}

function new_seq_386174(len_386177) {
	var result_386179 = null;

		result_386179 = new Array(len_386177); for (var i=0;i<len_386177;++i) {result_386179[i]=null;}
	return result_386179;

}

function map_387421(s_387426, op_387429) {
	var result_387431 = null;

		result_387431 = new Array(chckRange((s_387426 != null ? s_387426.length : 0), 0, 2147483647)); for (var i=0;i<chckRange((s_387426 != null ? s_387426.length : 0), 0, 2147483647);++i) {result_387431[i]=0;}		L1: do {
			var i_387454 = 0;
			var colontmp__418396 = 0;
			colontmp__418396 = (s_387426 != null ? s_387426.length : 0);
			var i_418397 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_418397 < colontmp__418396)) break L3;
						i_387454 = i_418397;
						result_387431[chckIndx(i_387454, 0, result_387431.length+0-1)-0] = op_387429(s_387426[chckIndx(i_387454, 0, s_387426.length+0-1)-0]);
						i_418397 = addInt(i_418397, 1);
					}
			} while(false);
		} while(false);

	return result_387431;

}

function new_seq_387476(len_387479) {
	var result_387481 = null;

		result_387481 = new Array(len_387479); for (var i=0;i<len_387479;++i) {result_387481[i]=0;}
	return result_387481;

}

function concat_387710(seqs_387715) {
	var result_387717 = null;

		var l_387719 = 0;
		L1: do {
			var seqitm_387750 = null;
			var i_418402 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_418402 < (seqs_387715 != null ? seqs_387715.length : 0))) break L3;
						seqitm_387750 = seqs_387715[chckIndx(i_418402, 0, seqs_387715.length+0-1)-0];
						l_387719 = addInt(l_387719, (seqitm_387750 != null ? seqitm_387750.length : 0));
						i_418402 = addInt(i_418402, 1);
					}
			} while(false);
		} while(false);
		result_387717 = new Array(chckRange(l_387719, 0, 2147483647)); for (var i=0;i<chckRange(l_387719, 0, 2147483647);++i) {result_387717[i]=0;}		var i_387770 = 0;
		L4: do {
			var s_387776 = null;
			var i_418410 = 0;
			L5: do {
					L6: while (true) {
					if (!(i_418410 < (seqs_387715 != null ? seqs_387715.length : 0))) break L6;
						s_387776 = seqs_387715[chckIndx(i_418410, 0, seqs_387715.length+0-1)-0];
						L7: do {
							var itm_387783 = 0;
							var i_418407 = 0;
							var l_418408 = (s_387776 != null ? s_387776.length : 0);
							L8: do {
									L9: while (true) {
									if (!(i_418407 < l_418408)) break L9;
										itm_387783 = s_387776[chckIndx(i_418407, 0, s_387776.length+0-1)-0];
										result_387717[chckIndx(i_387770, 0, result_387717.length+0-1)-0] = itm_387783;
										i_387770 = addInt(i_387770, 1);
										i_418407 = addInt(i_418407, 1);
										if (!(((s_387776 != null ? s_387776.length : 0) == l_418408))) {
										failed_assert_impl_15266(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						i_418410 = addInt(i_418410, 1);
					}
			} while(false);
		} while(false);

	return result_387717;

}

function raw_get_368138(t_368143, key_368144, hc_368145, hc_368145_Idx) {
						var Tmp3;

	var result_368146 = 0;

	BeforeRet: do {
		hc_368145[hc_368145_Idx] = hash_180014(key_368144);
		if ((hc_368145[hc_368145_Idx] == 0)) {
		hc_368145[hc_368145_Idx] = 314159265;
		}
		
		if (((t_368143.data != null ? t_368143.data.length : 0) == 0)) {
		result_368146 = -1;
		break BeforeRet;
		}
		
		var h_368288 = (hc_368145[hc_368145_Idx] & (t_368143.data != null ? (t_368143.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_183018(t_368143.data[chckIndx(h_368288, 0, t_368143.data.length+0-1)-0].Field0)) break L2;
						if (!(t_368143.data[chckIndx(h_368288, 0, t_368143.data.length+0-1)-0].Field0 == hc_368145[hc_368145_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_368143.data[chckIndx(h_368288, 0, t_368143.data.length+0-1)-0].Field2, key_368144);						}					if (Tmp3) {
					result_368146 = h_368288;
					break BeforeRet;
					}
					
					h_368288 = next_try_183035(h_368288, (t_368143.data != null ? (t_368143.data.length-1) : -1));
				}
		} while(false);
		result_368146 = subInt(-1, h_368288);
	} while (false);

	return result_368146;

}

function raw_insert_390707(t_390713, data_390716, data_390716_Idx, key_390717, val_390718, hc_390719, h_390720) {
		data_390716[data_390716_Idx][chckIndx(h_390720, 0, data_390716[data_390716_Idx].length+0-1)-0].Field2 = nimCopy(null, key_390717, NTI138);
		data_390716[data_390716_Idx][chckIndx(h_390720, 0, data_390716[data_390716_Idx].length+0-1)-0].Field3 = val_390718;
		data_390716[data_390716_Idx][chckIndx(h_390720, 0, data_390716[data_390716_Idx].length+0-1)-0].Field0 = hc_390719;
		data_390716[data_390716_Idx][chckIndx(h_390720, 0, data_390716[data_390716_Idx].length+0-1)-0].Field1 = -1;
		if ((t_390713.first < 0)) {
		t_390713.first = h_390720;
		}
		
		if ((0 <= t_390713.last)) {
		data_390716[data_390716_Idx][chckIndx(t_390713.last, 0, data_390716[data_390716_Idx].length+0-1)-0].Field1 = h_390720;
		}
		
		t_390713.last = h_390720;

	
}

function enlarge_389567(t_389573) {
		var n_389581 = null;
		n_389581 = new Array(chckRange(mulInt((t_389573.data != null ? t_389573.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_389573.data != null ? t_389573.data.length : 0), 2), 0, 2147483647);++i) {n_389581[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		var h_389720 = t_389573.first;
		t_389573.first = -1;
		t_389573.last = -1;
		var Tmp1 = t_389573.data; t_389573.data = n_389581; n_389581 = Tmp1;		L2: do {
				L3: while (true) {
				if (!(0 <= h_389720)) break L3;
					var nxt_389886 = n_389581[chckIndx(h_389720, 0, n_389581.length+0-1)-0].Field1;
					var eh_390042 = n_389581[chckIndx(h_389720, 0, n_389581.length+0-1)-0].Field0;
					if (is_filled_183018(eh_390042)) {
					var j_390049 = (eh_390042 & (t_389573.data != null ? (t_389573.data.length-1) : -1));
					L4: do {
							L5: while (true) {
							if (!is_filled_183018(t_389573.data[chckIndx(j_390049, 0, t_389573.data.length+0-1)-0].Field0)) break L5;
								j_390049 = next_try_183035(j_390049, (t_389573.data != null ? (t_389573.data.length-1) : -1));
							}
					} while(false);
					raw_insert_390707(t_389573, t_389573, "data", n_389581[chckIndx(h_389720, 0, n_389581.length+0-1)-0].Field2, n_389581[chckIndx(h_389720, 0, n_389581.length+0-1)-0].Field3, n_389581[chckIndx(h_389720, 0, n_389581.length+0-1)-0].Field0, j_390049);
					}
					
					h_389720 = nxt_389886;
				}
		} while(false);

	
}

function raw_get_known_hc_391544(t_391549, key_391550, hc_391551) {
	var result_391552 = 0;

	BeforeRet: do {
		if (((t_391549.data != null ? t_391549.data.length : 0) == 0)) {
		result_391552 = -1;
		break BeforeRet;
		}
		
		var h_391691 = (hc_391551 & (t_391549.data != null ? (t_391549.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_183018(t_391549.data[chckIndx(h_391691, 0, t_391549.data.length+0-1)-0].Field0)) break L2;
					if (((t_391549.data[chckIndx(h_391691, 0, t_391549.data.length+0-1)-0].Field0 == hc_391551) && eqStrings(t_391549.data[chckIndx(h_391691, 0, t_391549.data.length+0-1)-0].Field2, key_391550))) {
					result_391552 = h_391691;
					break BeforeRet;
					}
					
					h_391691 = next_try_183035(h_391691, (t_391549.data != null ? (t_391549.data.length-1) : -1));
				}
		} while(false);
		result_391552 = subInt(-1, h_391691);
	} while (false);

	return result_391552;

}

function has_key_or_put_388243(t_388249, key_388250, val_388251) {
	var result_388252 = false;

		if (((t_388249.data != null ? t_388249.data.length : 0) == 0)) {
		if (!(is_power_of_two_143062(64))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_388249.counter = 0;
		t_388249.data = new Array(64); for (var i=0;i<64;++i) {t_388249.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		t_388249.first = -1;
		t_388249.last = -1;
		}
		
		var hc_388801 = [0];
		var index_388830 = raw_get_368138(t_388249, key_388250, hc_388801, 0);
		if ((index_388830 < 0)) {
		result_388252 = false;
		if (((t_388249.data != null ? t_388249.data.length : 0) == 0)) {
		if (!(is_power_of_two_143062(64))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_388249.counter = 0;
		t_388249.data = new Array(64); for (var i=0;i<64;++i) {t_388249.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		t_388249.first = -1;
		t_388249.last = -1;
		}
		
		if (must_rehash_183053((t_388249.data != null ? t_388249.data.length : 0), t_388249.counter)) {
		enlarge_389567(t_388249);
		index_388830 = raw_get_known_hc_391544(t_388249, key_388250, hc_388801[0]);
		}
		
		index_388830 = subInt(-1, index_388830);
		raw_insert_390707(t_388249, t_388249, "data", key_388250, val_388251, hc_388801[0], index_388830);
		t_388249.counter = addInt(t_388249.counter, 1);
		}
		else {
			result_388252 = true;
		}
		

	return result_388252;

}

function new_seq_388152(len_388155) {
	var result_388157 = null;

		result_388157 = new Array(len_388155); for (var i=0;i<len_388155;++i) {result_388157[i]=null;}
	return result_388157;

}

function raw_get_393202(t_393206, key_393207, hc_393208, hc_393208_Idx) {
						var Tmp3;

	var result_393209 = 0;

	BeforeRet: do {
		hc_393208[hc_393208_Idx] = hash_180014(key_393207);
		if ((hc_393208[hc_393208_Idx] == 0)) {
		hc_393208[hc_393208_Idx] = 314159265;
		}
		
		if (((t_393206.data != null ? t_393206.data.length : 0) == 0)) {
		result_393209 = -1;
		break BeforeRet;
		}
		
		var h_393351 = (hc_393208[hc_393208_Idx] & (t_393206.data != null ? (t_393206.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_183018(t_393206.data[chckIndx(h_393351, 0, t_393206.data.length+0-1)-0].Field0)) break L2;
						if (!(t_393206.data[chckIndx(h_393351, 0, t_393206.data.length+0-1)-0].Field0 == hc_393208[hc_393208_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_393206.data[chckIndx(h_393351, 0, t_393206.data.length+0-1)-0].Field1, key_393207);						}					if (Tmp3) {
					result_393209 = h_393351;
					break BeforeRet;
					}
					
					h_393351 = next_try_183035(h_393351, (t_393206.data != null ? (t_393206.data.length-1) : -1));
				}
		} while(false);
		result_393209 = subInt(-1, h_393351);
	} while (false);

	return result_393209;

}

function raw_insert_395522(t_395528, data_395531, data_395531_Idx, key_395532, val_395533, hc_395534, h_395535) {
		data_395531[data_395531_Idx][chckIndx(h_395535, 0, data_395531[data_395531_Idx].length+0-1)-0].Field1 = nimCopy(null, key_395532, NTI138);
		data_395531[data_395531_Idx][chckIndx(h_395535, 0, data_395531[data_395531_Idx].length+0-1)-0].Field2 = val_395533;
		data_395531[data_395531_Idx][chckIndx(h_395535, 0, data_395531[data_395531_Idx].length+0-1)-0].Field0 = hc_395534;

	
}

function enlarge_394548(t_394554) {
		var n_394562 = null;
		n_394562 = new Array(chckRange(mulInt((t_394554.data != null ? t_394554.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_394554.data != null ? t_394554.data.length : 0), 2), 0, 2147483647);++i) {n_394562[i]={Field0: 0, Field1: null, Field2: null};}		var Tmp1 = t_394554.data; t_394554.data = n_394562; n_394562 = Tmp1;		L2: do {
			var i_394721 = 0;
			var colontmp__418419 = 0;
			colontmp__418419 = (n_394562 != null ? (n_394562.length-1) : -1);
			var res_418420 = 0;
			L3: do {
					L4: while (true) {
					if (!(res_418420 <= colontmp__418419)) break L4;
						i_394721 = res_418420;
						var eh_394877 = n_394562[chckIndx(i_394721, 0, n_394562.length+0-1)-0].Field0;
						if (is_filled_183018(eh_394877)) {
						var j_394884 = (eh_394877 & (t_394554.data != null ? (t_394554.data.length-1) : -1));
						L5: do {
								L6: while (true) {
								if (!is_filled_183018(t_394554.data[chckIndx(j_394884, 0, t_394554.data.length+0-1)-0].Field0)) break L6;
									j_394884 = next_try_183035(j_394884, (t_394554.data != null ? (t_394554.data.length-1) : -1));
								}
						} while(false);
						raw_insert_395522(t_394554, t_394554, "data", n_394562[chckIndx(i_394721, 0, n_394562.length+0-1)-0].Field1, n_394562[chckIndx(i_394721, 0, n_394562.length+0-1)-0].Field2, eh_394877, j_394884);
						}
						
						res_418420 = addInt(res_418420, 1);
					}
			} while(false);
		} while(false);

	
}

function raw_get_known_hc_396028(t_396032, key_396033, hc_396034) {
	var result_396035 = 0;

	BeforeRet: do {
		if (((t_396032.data != null ? t_396032.data.length : 0) == 0)) {
		result_396035 = -1;
		break BeforeRet;
		}
		
		var h_396174 = (hc_396034 & (t_396032.data != null ? (t_396032.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_183018(t_396032.data[chckIndx(h_396174, 0, t_396032.data.length+0-1)-0].Field0)) break L2;
					if (((t_396032.data[chckIndx(h_396174, 0, t_396032.data.length+0-1)-0].Field0 == hc_396034) && eqStrings(t_396032.data[chckIndx(h_396174, 0, t_396032.data.length+0-1)-0].Field1, key_396033))) {
					result_396035 = h_396174;
					break BeforeRet;
					}
					
					h_396174 = next_try_183035(h_396174, (t_396032.data != null ? (t_396032.data.length-1) : -1));
				}
		} while(false);
		result_396035 = subInt(-1, h_396174);
	} while (false);

	return result_396035;

}

function has_key_or_put_392651(t_392657, key_392658, val_392659) {
	var result_392660 = false;

		if (((t_392657.data != null ? t_392657.data.length : 0) == 0)) {
		if (!(is_power_of_two_143062(64))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_392657.counter = 0;
		t_392657.data = new Array(64); for (var i=0;i<64;++i) {t_392657.data[i]={Field0: 0, Field1: null, Field2: null};}		}
		
		var hc_393201 = [0];
		var index_393840 = raw_get_393202(t_392657, key_392658, hc_393201, 0);
		if ((index_393840 < 0)) {
		result_392660 = false;
		if (((t_392657.data != null ? t_392657.data.length : 0) == 0)) {
		if (!(is_power_of_two_143062(64))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_392657.counter = 0;
		t_392657.data = new Array(64); for (var i=0;i<64;++i) {t_392657.data[i]={Field0: 0, Field1: null, Field2: null};}		}
		
		if (must_rehash_183053((t_392657.data != null ? t_392657.data.length : 0), t_392657.counter)) {
		enlarge_394548(t_392657);
		index_393840 = raw_get_known_hc_396028(t_392657, key_392658, hc_393201[0]);
		}
		
		index_393840 = subInt(-1, index_393840);
		raw_insert_395522(t_392657, t_392657, "data", key_392658, val_392659, hc_393201[0], index_393840);
		t_392657.counter = addInt(t_392657.counter, 1);
		}
		else {
			result_392660 = true;
		}
		

	return result_392660;

}

function HEX2A_51019(x_51021, order_51022) {
	var result_51023 = 0;

		var y_51028 = subInt(order_51022, 1);
		result_51023 = subInt((x_51021 ^ y_51028), y_51028);

	return result_51023;

}

function sort_396913(t_396919, cmp_396929, order_396930) {
											var Tmp9;
												var Tmp10;

	BeforeRet: do {
		var list_396931 = t_396919.first;
		var p_396932 = 0;
		var q_396933 = 0;
		var e_396934 = 0;
		var tail_396935 = 0;
		var oldhead_396936 = 0;
		var nmerges_396937 = 0;
		var psize_396938 = 0;
		var qsize_396939 = 0;
		var i_396940 = 0;
		if ((t_396919.counter == 0)) {
		break BeforeRet;
		}
		
		var insize_396942 = 1;
		L1: do {
				L2: while (true) {
				if (!true) break L2;
					p_396932 = list_396931;
					oldhead_396936 = list_396931;
					list_396931 = -1;
					tail_396935 = -1;
					nmerges_396937 = 0;
					L3: do {
							L4: while (true) {
							if (!(0 <= p_396932)) break L4;
								nmerges_396937 = addInt(nmerges_396937, 1);
								q_396933 = p_396932;
								psize_396938 = 0;
								i_396940 = 0;
								L5: do {
										L6: while (true) {
										if (!(i_396940 < insize_396942)) break L6;
											psize_396938 = addInt(psize_396938, 1);
											q_396933 = t_396919.data[chckIndx(q_396933, 0, t_396919.data.length+0-1)-0].Field1;
											if ((q_396933 < 0)) {
											break L5;
											}
											
											i_396940 = addInt(i_396940, 1);
										}
								} while(false);
								qsize_396939 = insize_396942;
								L7: do {
										L8: while (true) {
											if ((0 < psize_396938)) Tmp9 = true; else {												if (!(0 < qsize_396939)) Tmp10 = false; else {													Tmp10 = (0 <= q_396933);												}												Tmp9 = Tmp10;											}										if (!Tmp9) break L8;
											if ((psize_396938 == 0)) {
											e_396934 = q_396933;
											q_396933 = t_396919.data[chckIndx(q_396933, 0, t_396919.data.length+0-1)-0].Field1;
											qsize_396939 = subInt(qsize_396939, 1);
											}
											else {
											if (((qsize_396939 == 0) || (q_396933 < 0))) {
											e_396934 = p_396932;
											p_396932 = t_396919.data[chckIndx(p_396932, 0, t_396919.data.length+0-1)-0].Field1;
											psize_396938 = subInt(psize_396938, 1);
											}
											else {
											if ((HEX2A_51019(cmp_396929({Field0: nimCopy(null, t_396919.data[chckIndx(p_396932, 0, t_396919.data.length+0-1)-0].Field2, NTI138), Field1: t_396919.data[chckIndx(p_396932, 0, t_396919.data.length+0-1)-0].Field3}, {Field0: nimCopy(null, t_396919.data[chckIndx(q_396933, 0, t_396919.data.length+0-1)-0].Field2, NTI138), Field1: t_396919.data[chckIndx(q_396933, 0, t_396919.data.length+0-1)-0].Field3}), order_396930) <= 0)) {
											e_396934 = p_396932;
											p_396932 = t_396919.data[chckIndx(p_396932, 0, t_396919.data.length+0-1)-0].Field1;
											psize_396938 = subInt(psize_396938, 1);
											}
											else {
												e_396934 = q_396933;
												q_396933 = t_396919.data[chckIndx(q_396933, 0, t_396919.data.length+0-1)-0].Field1;
												qsize_396939 = subInt(qsize_396939, 1);
											}
											}}
											if ((0 <= tail_396935)) {
											t_396919.data[chckIndx(tail_396935, 0, t_396919.data.length+0-1)-0].Field1 = e_396934;
											}
											else {
												list_396931 = e_396934;
											}
											
											tail_396935 = e_396934;
										}
								} while(false);
								p_396932 = q_396933;
							}
					} while(false);
					t_396919.data[chckIndx(tail_396935, 0, t_396919.data.length+0-1)-0].Field1 = -1;
					if ((nmerges_396937 <= 1)) {
					break L1;
					}
					
					insize_396942 = mulInt(insize_396942, 2);
				}
		} while(false);
		t_396919.first = list_396931;
		t_396919.last = tail_396935;
	} while (false);

	
}

function sort_street_tbl_396822(x_396827, y_396829) {
		var Tmp1;
			var Tmp2;

	var result_396830 = 0;

		var k_x_396831 = nimCopy(null, x_396827["Field0"], NTI138);
		var k_y_396832 = nimCopy(null, y_396829["Field0"], NTI138);
			if ((cmpStrings(k_y_396832, k_x_396831) < 0)) Tmp2 = true; else {				Tmp2 = eqStrings(k_x_396831, k_y_396832);			}		if (Tmp2) {
		Tmp1 = 1;
		}
		else {
		Tmp1 = -1;
		}
		
		result_396830 = Tmp1;

	return result_396830;

}

function has_key_368110(t_368115, key_368116) {
	var result_368117 = false;

		var hc_368118 = [0];
		result_368117 = (0 <= raw_get_368138(t_368115, key_368116, hc_368118, 0));

	return result_368117;

}

function has_key_or_put_369218(t_369224, key_369225, val_369226) {
	var result_369227 = false;

		if (((t_369224.data != null ? t_369224.data.length : 0) == 0)) {
		if (!(is_power_of_two_143062(64))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_369224.counter = 0;
		t_369224.data = new Array(64); for (var i=0;i<64;++i) {t_369224.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		t_369224.first = -1;
		t_369224.last = -1;
		}
		
		var hc_369801 = [0];
		var index_369830 = raw_get_318421(t_369224, key_369225, hc_369801, 0);
		if ((index_369830 < 0)) {
		result_369227 = false;
		if (((t_369224.data != null ? t_369224.data.length : 0) == 0)) {
		if (!(is_power_of_two_143062(64))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_369224.counter = 0;
		t_369224.data = new Array(64); for (var i=0;i<64;++i) {t_369224.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		t_369224.first = -1;
		t_369224.last = -1;
		}
		
		if (must_rehash_183053((t_369224.data != null ? t_369224.data.length : 0), t_369224.counter)) {
		enlarge_319967(t_369224);
		index_369830 = raw_get_known_hc_321944(t_369224, key_369225, hc_369801[0]);
		}
		
		index_369830 = subInt(-1, index_369830);
		raw_insert_321107(t_369224, t_369224, "data", key_369225, val_369226, hc_369801[0], index_369830);
		t_369224.counter = addInt(t_369224.counter, 1);
		}
		else {
			result_369227 = true;
		}
		

	return result_369227;

}

function next_id_311919(s_311921) {
		var Tmp1;
			var Tmp2;

	var result_311922 = null;

		if (s_311921.exclude) {
		Tmp1 = [];
		}
		else {
		Tmp1 = (s_311921.postalCode || []).concat(makeNimstrLit("-") || [],cstrToNimstr((addInt((Tmp2 = HEX5BHEX5D_312074(last_postfix_300229[0], s_311921.postalCode), Tmp2)[0][Tmp2[1]], 1))+"") || []);
		}
		
		result_311922 = nimCopy(null, Tmp1, NTI138);

	return result_311922;

}

function HEX5BHEX5DHEX3D_364782(t_364788, key_364789, val_364790) {
		if (((t_364788.data != null ? t_364788.data.length : 0) == 0)) {
		if (!(is_power_of_two_143062(64))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_364788.counter = 0;
		t_364788.data = new Array(64); for (var i=0;i<64;++i) {t_364788.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		t_364788.first = -1;
		t_364788.last = -1;
		}
		
		var hc_365201 = [0];
		var index_365230 = raw_get_347021(t_364788, key_364789, hc_365201, 0);
		if ((0 <= index_365230)) {
		t_364788.data[chckIndx(index_365230, 0, t_364788.data.length+0-1)-0].Field3 = nimCopy(null, val_364790, NTI298061);
		}
		else {
			if (((t_364788.data != null ? t_364788.data.length : 0) == 0)) {
			if (!(is_power_of_two_143062(64))) {
			failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			t_364788.counter = 0;
			t_364788.data = new Array(64); for (var i=0;i<64;++i) {t_364788.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}			t_364788.first = -1;
			t_364788.last = -1;
			}
			
			if (must_rehash_183053((t_364788.data != null ? t_364788.data.length : 0), t_364788.counter)) {
			enlarge_348367(t_364788);
			index_365230 = raw_get_known_hc_350359(t_364788, key_364789, hc_365201[0]);
			}
			
			index_365230 = subInt(-1, index_365230);
			raw_insert_349507(t_364788, t_364788, "data", key_364789, val_364790, hc_365201[0], index_365230);
			t_364788.counter = addInt(t_364788.counter, 1);
		}
		

	
}

function on_grp_street_363722(e_363724) {

		function HEX3Aanonymous_363755(e_363758) {
				var Tmp1;
				var Tmp2;
				var Tmp3;
				var Tmp4;
				var Tmp5;
				var Tmp6;
				var Tmp7;
					var Tmp8;
						var Tmp9;
					var Tmp10;
				var Tmp11;

				mv_street_grp_300230[0].removeAll();
				remove_all_sector_from_map_313269();
				var trgt_btn_363759 = e_363758.target;
				var to_sect_id_363761 = cstrToNimstr((Tmp1 = trgt_btn_363759.parentNode.getElementsByTagName("select"), Tmp1)[chckIndx(0, 0, Tmp1.length+0-1)-0].value);
				var sect_from_id_363762 = id_311902(street_363733.sector);
				var post_code_363763 = nimCopy(null, street_363733.sector.postalCode, NTI138);
				if (!(has_key_344136(all_sectors_299829[0], to_sect_id_363761))) {
				(Tmp2 = HEX5BHEX5D_312074(last_postfix_300229[0], post_code_363763), Tmp2)[0][Tmp2[1]] = addInt(Tmp2[0][Tmp2[1]], 1);
				HEX5BHEX5DHEX3D_317932(all_sectors_299829[0], to_sect_id_363761, {city: nimCopy(null, addr_city_300633[0], NTI138), postalCode: nimCopy(null, post_code_363763, NTI138), district: nimCopy(null, street_363733.sector.district, NTI138), pFix: (Tmp3 = HEX5BHEX5D_312074(last_postfix_300229[0], post_code_363763), Tmp3)[0][Tmp3[1]], streets: init_ordered_table_358305(64), shownOnMap: false, folkDistrict: null, exclude: false});
				}
				
				street_363733.sector = (Tmp4 = HEX5BHEX5D_322797(all_sectors_299829[0], to_sect_id_363761), Tmp4)[0][Tmp4[1]];
				HEX5BHEX5DHEX3D_364782((Tmp5 = HEX5BHEX5D_322797(all_sectors_299829[0], to_sect_id_363761), Tmp5)[0][Tmp5[1]].streets, street_363733.name, street_363733.links);
				del_356007((Tmp6 = HEX5BHEX5D_322797(all_sectors_299829[0], sect_from_id_363762), Tmp6)[0][Tmp6[1]].streets, street_363733.name);
				var from_sector_366475 = (Tmp7 = HEX5BHEX5D_322797(all_sectors_299829[0], sect_from_id_363762), Tmp7)[0][Tmp7[1]];
					if (!!(from_sector_366475.exclude)) Tmp8 = false; else {						Tmp8 = (len_333348((Tmp9 = HEX5BHEX5D_322797(all_sectors_299829[0], sect_from_id_363762), Tmp9)[0][Tmp9[1]].streets) == 0);					}				if (Tmp8) {
				if ((from_sector_366475.pFix == (Tmp10 = HEX5BHEX5D_312074(last_postfix_300229[0], from_sector_366475.postalCode), Tmp10)[0][Tmp10[1]])) {
				(Tmp11 = HEX5BHEX5D_312074(last_postfix_300229[0], from_sector_366475.postalCode), Tmp11)[0][Tmp11[1]] = subInt(Tmp11[0][Tmp11[1]], 1);
				}
				
				del_351459(all_sectors_299829[0], sect_from_id_363762);
				}
				
				reindex_sect_343070();
				redraw_277814(kxi_268324[0]);

			
		}

		function HEX3Aanonymous_367416(el_367419, di_367420, dm_367421) {
				var Tmp1;
				var Tmp2;

				function HEX3Aanonymous_367426(e_367429) {
						mv_street_grp_300230[0].removeAll();

					
				}

				function HEX3Aanonymous_367445(e_367448) {
						map.removeEventListener("tap", load_links_311868);

					
				}

				var btn_367423 = (Tmp1 = el_367419.getElementsByClassName("ok-str-mv"), Tmp1)[chckIndx(0, 0, Tmp1.length+0-1)-0];
				var btn_close_367425 = (Tmp2 = el_367419.getElementsByClassName("close-str-mv"), Tmp2)[chckIndx(0, 0, Tmp2.length+0-1)-0];
				btn_367423.addEventListener("click", mv_btn_hndl_367414, false);
				btn_close_367425.addEventListener("click", HEX3Aanonymous_367426, false);
				var el_evt_367444 = el_367419;
				el_evt_367444.addEventListener("mouseenter", HEX3Aanonymous_367445, false);

			
		}

		function HEX3Aanonymous_367508(el_367511, di_367512, dm_367513) {
				var Tmp1;

				var btn_367515 = (Tmp1 = el_367511.getElementsByClassName("ok-str-mv"), Tmp1)[chckIndx(0, 0, Tmp1.length+0-1)-0];
				btn_367515.removeEventListener("click", mv_btn_hndl_367414);
				map.addEventListener("tap", load_links_311868, false);

			
		}

		mv_street_grp_300230[0].removeAll();
		var trgt_grp_363728 = e_363724.currentTarget;
		var street_363733 = trgt_grp_363728.getData();
		var sect_id_363734 = id_311902(street_363733.sector);
		var sect_next_id_363735 = next_id_311919(street_363733.sector);
		var sect_exclude_363736 = street_363733.sector.exclude;
		var el_move_street_363737 = document.createElement("div");
		el_move_street_363737.className = "move-str-marker";
		el_move_street_363737.appendChild(document.createElement("span"));
		var el_txt_363738 = document.createTextNode(toJSStr(street_363733.name));
		el_move_street_363737.childNodes[0].appendChild(el_txt_363738);
		el_move_street_363737.appendChild(document.createElement("div"));
		var sel_el_363739 = document.createElement("select");
		var mv_opt_363740 = document.createElement("option");
		mv_opt_363740.appendChild(document.createTextNode("Двинуть в"));
		sel_el_363739.appendChild(mv_opt_363740);
		if (!(sect_exclude_363736)) {
		var mv_opt_new_363741 = document.createElement("option");
		mv_opt_new_363741.appendChild(document.createTextNode(toJSStr((sect_next_id_363735 || []).concat(makeNimstrLit("(\xD0\xBD\xD0\xBE\xD0\xB2\xD1\x8B\xD0\xB9)") || []))));
		mv_opt_new_363741.value = toJSStr(sect_next_id_363735);
		mv_opt_new_363741.setAttribute("data-new", "1");
		sel_el_363739.appendChild(mv_opt_new_363741);
		}
		
		L1: do {
			var k_opt_363749 = null;
			var v_opt_363750 = null;
			var l_418455 = len_313405(all_sectors_299829[0]);
			if ((0 < all_sectors_299829[0].counter)) {
			var h_418456 = all_sectors_299829[0].first;
			L2: do {
					L3: while (true) {
					if (!(0 <= h_418456)) break L3;
						var nxt_418458 = all_sectors_299829[0].data[chckIndx(h_418456, 0, all_sectors_299829[0].data.length+0-1)-0].Field1;
						if (is_filled_183018(all_sectors_299829[0].data[chckIndx(h_418456, 0, all_sectors_299829[0].data.length+0-1)-0].Field0)) {
						k_opt_363749 = all_sectors_299829[0].data[chckIndx(h_418456, 0, all_sectors_299829[0].data.length+0-1)-0].Field2;
						v_opt_363750 = all_sectors_299829[0].data[chckIndx(h_418456, 0, all_sectors_299829[0].data.length+0-1)-0].Field3;
						L4: do {
							if (eqStrings(k_opt_363749, sect_id_363734)) {
							break L4;
							}
							
							var mv_opt_363753 = document.createElement("option");
							mv_opt_363753.appendChild(document.createTextNode(toJSStr(k_opt_363749)));
							mv_opt_363753.value = toJSStr(k_opt_363749);
							sel_el_363739.appendChild(mv_opt_363753);
						} while(false);
						if (!((len_313405(all_sectors_299829[0]) == l_418455))) {
						failed_assert_impl_15266(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
						}
						
						}
						
						h_418456 = nxt_418458;
					}
			} while(false);
			}
			
		} while(false);
		el_move_street_363737.childNodes[1].appendChild(sel_el_363739);
		var btn_ok_363754 = document.createElement("button");
		btn_ok_363754.appendChild(document.createTextNode("Ok !"));
		btn_ok_363754.className = "ok-str-mv";
		var mv_btn_hndl_367414 = HEX3Aanonymous_363755;
		var btn_close_367415 = document.createElement("button");
		btn_close_367415.appendChild(document.createTextNode("закрыть"));
		btn_close_367415.className = "close-str-mv";
		el_move_street_363737.childNodes[1].appendChild(btn_ok_363754);
		el_move_street_363737.childNodes[1].appendChild(btn_close_367415);
		var di_opt_367615 = {onAttach: HEX3Aanonymous_367416, onDetach: HEX3Aanonymous_367508, m_type: NTI202089};
		var icon_move_street_367617 = function(element, opt){return new H.map.DomIcon(element, opt)}(el_move_street_363737, di_opt_367615);
		var geo_point_367618 = map.screenToGeo(e_363724.currentPointer.viewportX, e_363724.currentPointer.viewportY);
		var mv_street_marker_367619 = function(position){return new H.map.DomMarker(position)}(geo_point_367618);
		mv_street_marker_367619.setIcon(icon_move_street_367617);
		mv_street_grp_300230[0].addObject(mv_street_marker_367619);
		rawEcho(makeNimstrLit("mvStreet: "));

	
}

function has_key_371938(t_371943, key_371944) {
	var result_371945 = false;

		var hc_371946 = [0];
		result_371945 = (0 <= raw_get_371947(t_371943, key_371944, hc_371946, 0));

	return result_371945;

}

function display_street_367892(name_367894, tree_367895) {
			var Tmp1;
		var Tmp2;
		var Tmp3;
		var Tmp4;
		var Tmp5;
		var Tmp6;
			var Tmp8;
						var Tmp11;

						function HEX3Aanonymous_371734(e_371736) {
								map.removeEventListener("tap", load_links_311868);

							
						}

						function HEX3Aanonymous_371767(e_371769) {
								map.addEventListener("tap", load_links_311868, false);

							
						}
							var Tmp15;
								var Tmp16;
						var Tmp17;
										var Tmp21;
										var Tmp22;

	BeforeRet: do {
		if (!(has_key_368110(all_streets_299029[0], name_367894))) {
		break BeforeRet;
		}
		
		if (((Tmp1 = HEX5BHEX5D_345311(all_streets_299029[0], name_367894), Tmp1)[0][Tmp1[1]].sector == null)) {
		var p_fix_369131 = (Tmp2 = HEX5BHEX5D_312074(last_postfix_300229[0], postal_code_300635[0]), Tmp2)[0][Tmp2[1]];
		has_key_or_put_369218(all_sectors_299829[0], sect_name_300636[0], {city: nimCopy(null, addr_city_300633[0], NTI138), postalCode: nimCopy(null, postal_code_300635[0], NTI138), district: nimCopy(null, addr_distr_300632[0], NTI138), pFix: p_fix_369131, streets: init_ordered_table_358305(64), shownOnMap: false, folkDistrict: null, exclude: false});
		has_key_or_put_346492((Tmp3 = HEX5BHEX5D_322797(all_sectors_299829[0], sect_name_300636[0]), Tmp3)[0][Tmp3[1]].streets, name_367894, (Tmp4 = HEX5BHEX5D_345311(all_streets_299029[0], name_367894), Tmp4)[0][Tmp4[1]].links);
		(Tmp5 = HEX5BHEX5D_345311(all_streets_299029[0], name_367894), Tmp5)[0][Tmp5[1]].sector = (Tmp6 = HEX5BHEX5D_322797(all_sectors_299829[0], sect_name_300636[0]), Tmp6)[0][Tmp6[1]];
		}
		
		L7: do {
			var link_371565 = null;
			var colontmp__418446 = null;
			colontmp__418446 = (Tmp8 = HEX5BHEX5D_345311(all_streets_299029[0], name_367894), Tmp8)[0][Tmp8[1]].links;
			var i_418447 = 0;
			var l_418448 = (colontmp__418446 != null ? colontmp__418446.length : 0);
			L9: do {
					L10: while (true) {
					if (!(i_418447 < l_418448)) break L10;
						link_371565 = colontmp__418446[chckIndx(i_418447, 0, colontmp__418446.length+0-1)-0];
						var grp_street_371566 = function(){return new H.map.Group()}();
						grp_street_371566.setZIndex(99);
						grp_street_371566.setData((Tmp11 = HEX5BHEX5D_345311(all_streets_299029[0], name_367894), Tmp11)[0][Tmp11[1]]);
						grp_street_371566.addEventListener("pointerenter", HEX3Aanonymous_371734, true, null);
						grp_street_371566.addEventListener("pointerleave", HEX3Aanonymous_371767, true, null);
						grp_street_371566.addEventListener("tap", on_grp_street_363722, true, null);
						main_group_362930[0].addObject(grp_street_371566);
						var ln_str_371821 = function(){return new H.geo.LineString();}();
						L12: do {
							var c_371828 = null;
							var colontmp__418435 = null;
							colontmp__418435 = link_371565.geometry;
							var i_418436 = 0;
							var l_418437 = (colontmp__418435 != null ? colontmp__418435.length : 0);
							L13: do {
									L14: while (true) {
									if (!(i_418436 < l_418437)) break L14;
										c_371828 = colontmp__418435[chckIndx(i_418436, 0, colontmp__418435.length+0-1)-0];
										ln_str_371821.pushLatLngAlt(c_371828.lat, c_371828.lng, 1.0000000000000000e+000);
										i_418436 = addInt(i_418436, 1);
										if (!(((colontmp__418435 != null ? colontmp__418435.length : 0) == l_418437))) {
										failed_assert_impl_15266(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
							if (!has_key_371938(all_links_298629[0], link_371565.linkId)) Tmp15 = false; else {								Tmp15 = !((Tmp16 = HEX5BHEX5D_372746(all_links_298629[0], link_371565.linkId), Tmp16)[0][Tmp16[1]].addedToMap);							}						if (Tmp15) {
						var p_opt_373236 = {style: {strokeColor: "rgba(0, 0, 255, 0.3)", fillColor: "rgba(255, 0, 0, 0.4)", lineWidth: 10, m_type: NTI202076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, zIndex: 99, m_type: NTI202081};
						var pl_373237 = function(ls, options){return new H.map.Polyline(ls, options)}(ln_str_371821, p_opt_373236);
						grp_street_371566.addObject(pl_373237);
						(Tmp17 = HEX5BHEX5D_372746(all_links_298629[0], link_371565.linkId), Tmp17)[0][Tmp17[1]].addedToMap = true;
						}
						
						if (tree_367895) {
						L18: do {
							var n_link_373607 = 0;
							var colontmp__418442 = null;
							colontmp__418442 = link_371565.neighborLinks;
							var i_418443 = 0;
							var l_418444 = (colontmp__418442 != null ? colontmp__418442.length : 0);
							L19: do {
									L20: while (true) {
									if (!(i_418443 < l_418444)) break L20;
										n_link_373607 = colontmp__418442[chckIndx(i_418443, 0, colontmp__418442.length+0-1)-0];
										if ((0 < n_link_373607)) {
										Tmp21 = n_link_373607;
										}
										else {
										Tmp21 = mulInt(n_link_373607, -1);
										}
										
										var n_lnk_373611 = Tmp21;
										if (has_key_371938(all_links_298629[0], n_lnk_373611)) {
										display_street_367892((Tmp22 = HEX5BHEX5D_372746(all_links_298629[0], n_lnk_373611), Tmp22)[0][Tmp22[1]].name, false);
										}
										else {
										}
										
										i_418443 = addInt(i_418443, 1);
										if (!(((colontmp__418442 != null ? colontmp__418442.length : 0) == l_418444))) {
										failed_assert_impl_15266(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						}
						
						i_418447 = addInt(i_418447, 1);
						if (!(((colontmp__418446 != null ? colontmp__418446.length : 0) == l_418448))) {
						failed_assert_impl_15266(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
	} while (false);

	
}

function raw_insert_401522(t_401528, data_401531, data_401531_Idx, key_401532, val_401533, hc_401534, h_401535) {
		data_401531[data_401531_Idx][chckIndx(h_401535, 0, data_401531[data_401531_Idx].length+0-1)-0].Field1 = nimCopy(null, key_401532, NTI138);
		data_401531[data_401531_Idx][chckIndx(h_401535, 0, data_401531[data_401531_Idx].length+0-1)-0].Field2 = val_401533;
		data_401531[data_401531_Idx][chckIndx(h_401535, 0, data_401531[data_401531_Idx].length+0-1)-0].Field0 = hc_401534;

	
}

function enlarge_400548(t_400554) {
		var n_400562 = null;
		n_400562 = new Array(chckRange(mulInt((t_400554.data != null ? t_400554.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_400554.data != null ? t_400554.data.length : 0), 2), 0, 2147483647);++i) {n_400562[i]={Field0: 0, Field1: null, Field2: 0};}		var Tmp1 = t_400554.data; t_400554.data = n_400562; n_400562 = Tmp1;		L2: do {
			var i_400721 = 0;
			var colontmp__418463 = 0;
			colontmp__418463 = (n_400562 != null ? (n_400562.length-1) : -1);
			var res_418464 = 0;
			L3: do {
					L4: while (true) {
					if (!(res_418464 <= colontmp__418463)) break L4;
						i_400721 = res_418464;
						var eh_400877 = n_400562[chckIndx(i_400721, 0, n_400562.length+0-1)-0].Field0;
						if (is_filled_183018(eh_400877)) {
						var j_400884 = (eh_400877 & (t_400554.data != null ? (t_400554.data.length-1) : -1));
						L5: do {
								L6: while (true) {
								if (!is_filled_183018(t_400554.data[chckIndx(j_400884, 0, t_400554.data.length+0-1)-0].Field0)) break L6;
									j_400884 = next_try_183035(j_400884, (t_400554.data != null ? (t_400554.data.length-1) : -1));
								}
						} while(false);
						raw_insert_401522(t_400554, t_400554, "data", n_400562[chckIndx(i_400721, 0, n_400562.length+0-1)-0].Field1, n_400562[chckIndx(i_400721, 0, n_400562.length+0-1)-0].Field2, eh_400877, j_400884);
						}
						
						res_418464 = addInt(res_418464, 1);
					}
			} while(false);
		} while(false);

	
}

function raw_get_known_hc_402028(t_402032, key_402033, hc_402034) {
	var result_402035 = 0;

	BeforeRet: do {
		if (((t_402032.data != null ? t_402032.data.length : 0) == 0)) {
		result_402035 = -1;
		break BeforeRet;
		}
		
		var h_402174 = (hc_402034 & (t_402032.data != null ? (t_402032.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_183018(t_402032.data[chckIndx(h_402174, 0, t_402032.data.length+0-1)-0].Field0)) break L2;
					if (((t_402032.data[chckIndx(h_402174, 0, t_402032.data.length+0-1)-0].Field0 == hc_402034) && eqStrings(t_402032.data[chckIndx(h_402174, 0, t_402032.data.length+0-1)-0].Field1, key_402033))) {
					result_402035 = h_402174;
					break BeforeRet;
					}
					
					h_402174 = next_try_183035(h_402174, (t_402032.data != null ? (t_402032.data.length-1) : -1));
				}
		} while(false);
		result_402035 = subInt(-1, h_402174);
	} while (false);

	return result_402035;

}

function HEX5BHEX5DHEX3D_399270(t_399276, key_399277, val_399278) {
		if (((t_399276.data != null ? t_399276.data.length : 0) == 0)) {
		if (!(is_power_of_two_143062(64))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_399276.counter = 0;
		t_399276.data = new Array(64); for (var i=0;i<64;++i) {t_399276.data[i]={Field0: 0, Field1: null, Field2: 0};}		}
		
		var hc_399801 = [0];
		var index_399810 = raw_get_312086(t_399276, key_399277, hc_399801, 0);
		if ((0 <= index_399810)) {
		t_399276.data[chckIndx(index_399810, 0, t_399276.data.length+0-1)-0].Field2 = val_399278;
		}
		else {
			if (((t_399276.data != null ? t_399276.data.length : 0) == 0)) {
			if (!(is_power_of_two_143062(64))) {
			failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			t_399276.counter = 0;
			t_399276.data = new Array(64); for (var i=0;i<64;++i) {t_399276.data[i]={Field0: 0, Field1: null, Field2: 0};}			}
			
			if (must_rehash_183053((t_399276.data != null ? t_399276.data.length : 0), t_399276.counter)) {
			enlarge_400548(t_399276);
			index_399810 = raw_get_known_hc_402028(t_399276, key_399277, hc_399801[0]);
			}
			
			index_399810 = subInt(-1, index_399810);
			raw_insert_401522(t_399276, t_399276, "data", key_399277, val_399278, hc_399801[0], index_399810);
			t_399276.counter = addInt(t_399276.counter, 1);
		}
		

	
}

function sort_402873(t_402879, cmp_402889, order_402890) {
											var Tmp9;
												var Tmp10;

	BeforeRet: do {
		var list_402891 = t_402879.first;
		var p_402892 = 0;
		var q_402893 = 0;
		var e_402894 = 0;
		var tail_402895 = 0;
		var oldhead_402896 = 0;
		var nmerges_402897 = 0;
		var psize_402898 = 0;
		var qsize_402899 = 0;
		var i_402900 = 0;
		if ((t_402879.counter == 0)) {
		break BeforeRet;
		}
		
		var insize_402902 = 1;
		L1: do {
				L2: while (true) {
				if (!true) break L2;
					p_402892 = list_402891;
					oldhead_402896 = list_402891;
					list_402891 = -1;
					tail_402895 = -1;
					nmerges_402897 = 0;
					L3: do {
							L4: while (true) {
							if (!(0 <= p_402892)) break L4;
								nmerges_402897 = addInt(nmerges_402897, 1);
								q_402893 = p_402892;
								psize_402898 = 0;
								i_402900 = 0;
								L5: do {
										L6: while (true) {
										if (!(i_402900 < insize_402902)) break L6;
											psize_402898 = addInt(psize_402898, 1);
											q_402893 = t_402879.data[chckIndx(q_402893, 0, t_402879.data.length+0-1)-0].Field1;
											if ((q_402893 < 0)) {
											break L5;
											}
											
											i_402900 = addInt(i_402900, 1);
										}
								} while(false);
								qsize_402899 = insize_402902;
								L7: do {
										L8: while (true) {
											if ((0 < psize_402898)) Tmp9 = true; else {												if (!(0 < qsize_402899)) Tmp10 = false; else {													Tmp10 = (0 <= q_402893);												}												Tmp9 = Tmp10;											}										if (!Tmp9) break L8;
											if ((psize_402898 == 0)) {
											e_402894 = q_402893;
											q_402893 = t_402879.data[chckIndx(q_402893, 0, t_402879.data.length+0-1)-0].Field1;
											qsize_402899 = subInt(qsize_402899, 1);
											}
											else {
											if (((qsize_402899 == 0) || (q_402893 < 0))) {
											e_402894 = p_402892;
											p_402892 = t_402879.data[chckIndx(p_402892, 0, t_402879.data.length+0-1)-0].Field1;
											psize_402898 = subInt(psize_402898, 1);
											}
											else {
											if ((HEX2A_51019(cmp_402889({Field0: nimCopy(null, t_402879.data[chckIndx(p_402892, 0, t_402879.data.length+0-1)-0].Field2, NTI138), Field1: t_402879.data[chckIndx(p_402892, 0, t_402879.data.length+0-1)-0].Field3}, {Field0: nimCopy(null, t_402879.data[chckIndx(q_402893, 0, t_402879.data.length+0-1)-0].Field2, NTI138), Field1: t_402879.data[chckIndx(q_402893, 0, t_402879.data.length+0-1)-0].Field3}), order_402890) <= 0)) {
											e_402894 = p_402892;
											p_402892 = t_402879.data[chckIndx(p_402892, 0, t_402879.data.length+0-1)-0].Field1;
											psize_402898 = subInt(psize_402898, 1);
											}
											else {
												e_402894 = q_402893;
												q_402893 = t_402879.data[chckIndx(q_402893, 0, t_402879.data.length+0-1)-0].Field1;
												qsize_402899 = subInt(qsize_402899, 1);
											}
											}}
											if ((0 <= tail_402895)) {
											t_402879.data[chckIndx(tail_402895, 0, t_402879.data.length+0-1)-0].Field1 = e_402894;
											}
											else {
												list_402891 = e_402894;
											}
											
											tail_402895 = e_402894;
										}
								} while(false);
								p_402892 = q_402893;
							}
					} while(false);
					t_402879.data[chckIndx(tail_402895, 0, t_402879.data.length+0-1)-0].Field1 = -1;
					if ((nmerges_402897 <= 1)) {
					break L1;
					}
					
					insize_402902 = mulInt(insize_402902, 2);
				}
		} while(false);
		t_402879.first = list_402891;
		t_402879.last = tail_402895;
	} while (false);

	
}

function nsuRepeatStr(s_152482, n_152483) {
	var result_152484 = null;

		result_152484 = nimCopy(null, mnewString(0), NTI138);
		L1: do {
			var i_152493 = 0;
			var colontmp__418475 = 0;
			colontmp__418475 = n_152483;
			var res_418476 = 1;
			L2: do {
					L3: while (true) {
					if (!(res_418476 <= colontmp__418475)) break L3;
						i_152493 = res_418476;
						if (result_152484 != null) { result_152484 = (result_152484).concat(s_152482); } else { result_152484 = s_152482.slice(); };
						res_418476 = addInt(res_418476, 1);
					}
			} while(false);
		} while(false);

	return result_152484;

}

function sort_sector_tbl_402730(x_402735, y_402737) {
		var Tmp1;
		var Tmp2;
		var Tmp3;
			var Tmp4;

	var result_402738 = 0;

		var ak_x_402739 = nsuSplitString(x_402735["Field0"], makeNimstrLit("-"), -1);
		var ak_y_402740 = nsuSplitString(y_402737["Field0"], makeNimstrLit("-"), -1);
		var k_x_402766 = (ak_x_402739[chckIndx(0, 0, ak_x_402739.length+0-1)-0] || []).concat(makeNimstrLit("-") || [],nsuRepeatStr(makeNimstrLit("0"), chckRange(subInt(4, ((Tmp1 = ak_x_402739[chckIndx((ak_x_402739 != null ? (ak_x_402739.length-1) : -1), 0, ak_x_402739.length+0-1)-0], Tmp1) != null ? Tmp1.length : 0)), 0, 2147483647)) || [],ak_x_402739[chckIndx((ak_x_402739 != null ? (ak_x_402739.length-1) : -1), 0, ak_x_402739.length+0-1)-0] || []);
		var k_y_402792 = (ak_y_402740[chckIndx(0, 0, ak_y_402740.length+0-1)-0] || []).concat(makeNimstrLit("-") || [],nsuRepeatStr(makeNimstrLit("0"), chckRange(subInt(4, ((Tmp2 = ak_y_402740[chckIndx((ak_y_402740 != null ? (ak_y_402740.length-1) : -1), 0, ak_y_402740.length+0-1)-0], Tmp2) != null ? Tmp2.length : 0)), 0, 2147483647)) || [],ak_y_402740[chckIndx((ak_y_402740 != null ? (ak_y_402740.length-1) : -1), 0, ak_y_402740.length+0-1)-0] || []);
			if ((cmpStrings(k_y_402792, k_x_402766) < 0)) Tmp4 = true; else {				Tmp4 = eqStrings(k_x_402766, k_y_402792);			}		if (Tmp4) {
		Tmp3 = 1;
		}
		else {
		Tmp3 = -1;
		}
		
		result_402738 = Tmp3;

	return result_402738;

}

function new_seq_405893(len_405896) {
	var result_405898 = null;

		result_405898 = new Array(len_405896); for (var i=0;i<len_405896;++i) {result_405898[i]={Field0: 0.0, Field1: 0.0};}
	return result_405898;

}

function init_table_405933(initial_size_405937) {
	var result_405953 = {data: null, counter: 0};

		if (!(is_power_of_two_143062(initial_size_405937))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_405953.counter = 0;
		result_405953.data = new Array(chckRange(initial_size_405937, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_405937, 0, 2147483647);++i) {result_405953.data[i]={Field0: 0, Field1: null, Field2: {Field0: 0, Field1: 0, Field2: 0}};}
	return result_405953;

}

function HEX2AHEX3D_171787(x_171791, x_171791_Idx, y_171792) {
		x_171791[x_171791_Idx] = HEX2A_162019(x_171791[x_171791_Idx], y_171792);

	
}

function HEX5E_171778(x_171781, y_171782) {
	var result_171783 = [0];

		switch (y_171782) {
		case 0:
			result_171783[0] = 1;
			break;
		case 1:
			result_171783[0] = x_171781;
			break;
		case 2:
			result_171783[0] = HEX2A_162019(x_171781, x_171781);
			break;
		case 3:
			result_171783[0] = HEX2A_162019(HEX2A_162019(x_171781, x_171781), x_171781);
			break;
		default: 
			var colontmp__418484 = {Field0: 0, Field1: 0};
			var x_171785 = [0];
			var y_171786 = 0;
			nimCopy(colontmp__418484, {Field0: x_171781, Field1: nimCopy(null, y_171782, NTI3604)}, NTI171784);
			x_171785[0] = colontmp__418484["Field0"];
			y_171786 = colontmp__418484["Field1"];
			result_171783[0] = 1;
			L1: do {
					L2: while (true) {
					if (!true) break L2;
						if (!(((y_171786 & 1) == 0))) {
						HEX2AHEX3D_171787(result_171783, 0, x_171785[0]);
						}
						
						y_171786 = chckRange((y_171786 >> 1), 0, 2147483647);
						if ((y_171786 == 0)) {
						break L1;
						}
						
						HEX2AHEX3D_171787(x_171785, 0, x_171785[0]);
					}
			} while(false);
			break;
		}

	return result_171783[0];

}

function get_coord_204015(level_204017, tile_x_204018, tile_y_204019) {
	var result_204021 = {Field0: 0.0, Field1: 0.0};

		var tile_size_204029 = HEX2F_26817(180, HEX5E_171778(2, chckRange(level_204017, 0, 2147483647)));
		nimCopy(result_204021, {Field0: ((tile_y_204019 * tile_size_204029) - 9.0000000000000000e+001), Field1: ((tile_x_204018 * tile_size_204029) - 1.8000000000000000e+002)}, NTI204020);

	return result_204021;

}

function raw_get_406802(t_406806, key_406807, hc_406808, hc_406808_Idx) {
						var Tmp3;

	var result_406809 = 0;

	BeforeRet: do {
		hc_406808[hc_406808_Idx] = hash_180014(key_406807);
		if ((hc_406808[hc_406808_Idx] == 0)) {
		hc_406808[hc_406808_Idx] = 314159265;
		}
		
		if (((t_406806.data != null ? t_406806.data.length : 0) == 0)) {
		result_406809 = -1;
		break BeforeRet;
		}
		
		var h_406951 = (hc_406808[hc_406808_Idx] & (t_406806.data != null ? (t_406806.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_183018(t_406806.data[chckIndx(h_406951, 0, t_406806.data.length+0-1)-0].Field0)) break L2;
						if (!(t_406806.data[chckIndx(h_406951, 0, t_406806.data.length+0-1)-0].Field0 == hc_406808[hc_406808_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_406806.data[chckIndx(h_406951, 0, t_406806.data.length+0-1)-0].Field1, key_406807);						}					if (Tmp3) {
					result_406809 = h_406951;
					break BeforeRet;
					}
					
					h_406951 = next_try_183035(h_406951, (t_406806.data != null ? (t_406806.data.length-1) : -1));
				}
		} while(false);
		result_406809 = subInt(-1, h_406951);
	} while (false);

	return result_406809;

}

function raw_insert_409122(t_409128, data_409131, data_409131_Idx, key_409132, val_409133, hc_409134, h_409135) {
		data_409131[data_409131_Idx][chckIndx(h_409135, 0, data_409131[data_409131_Idx].length+0-1)-0].Field1 = nimCopy(null, key_409132, NTI138);
		nimCopy(data_409131[data_409131_Idx][chckIndx(h_409135, 0, data_409131[data_409131_Idx].length+0-1)-0].Field2, val_409133, NTI405928);
		data_409131[data_409131_Idx][chckIndx(h_409135, 0, data_409131[data_409131_Idx].length+0-1)-0].Field0 = hc_409134;

	
}

function enlarge_408148(t_408154) {
		var n_408162 = null;
		n_408162 = new Array(chckRange(mulInt((t_408154.data != null ? t_408154.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_408154.data != null ? t_408154.data.length : 0), 2), 0, 2147483647);++i) {n_408162[i]={Field0: 0, Field1: null, Field2: {Field0: 0, Field1: 0, Field2: 0}};}		var Tmp1 = t_408154.data; t_408154.data = n_408162; n_408162 = Tmp1;		L2: do {
			var i_408321 = 0;
			var colontmp__418488 = 0;
			colontmp__418488 = (n_408162 != null ? (n_408162.length-1) : -1);
			var res_418489 = 0;
			L3: do {
					L4: while (true) {
					if (!(res_418489 <= colontmp__418488)) break L4;
						i_408321 = res_418489;
						var eh_408477 = n_408162[chckIndx(i_408321, 0, n_408162.length+0-1)-0].Field0;
						if (is_filled_183018(eh_408477)) {
						var j_408484 = (eh_408477 & (t_408154.data != null ? (t_408154.data.length-1) : -1));
						L5: do {
								L6: while (true) {
								if (!is_filled_183018(t_408154.data[chckIndx(j_408484, 0, t_408154.data.length+0-1)-0].Field0)) break L6;
									j_408484 = next_try_183035(j_408484, (t_408154.data != null ? (t_408154.data.length-1) : -1));
								}
						} while(false);
						raw_insert_409122(t_408154, t_408154, "data", n_408162[chckIndx(i_408321, 0, n_408162.length+0-1)-0].Field1, n_408162[chckIndx(i_408321, 0, n_408162.length+0-1)-0].Field2, eh_408477, j_408484);
						}
						
						res_418489 = addInt(res_418489, 1);
					}
			} while(false);
		} while(false);

	
}

function raw_get_known_hc_409628(t_409632, key_409633, hc_409634) {
	var result_409635 = 0;

	BeforeRet: do {
		if (((t_409632.data != null ? t_409632.data.length : 0) == 0)) {
		result_409635 = -1;
		break BeforeRet;
		}
		
		var h_409774 = (hc_409634 & (t_409632.data != null ? (t_409632.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_183018(t_409632.data[chckIndx(h_409774, 0, t_409632.data.length+0-1)-0].Field0)) break L2;
					if (((t_409632.data[chckIndx(h_409774, 0, t_409632.data.length+0-1)-0].Field0 == hc_409634) && eqStrings(t_409632.data[chckIndx(h_409774, 0, t_409632.data.length+0-1)-0].Field1, key_409633))) {
					result_409635 = h_409774;
					break BeforeRet;
					}
					
					h_409774 = next_try_183035(h_409774, (t_409632.data != null ? (t_409632.data.length-1) : -1));
				}
		} while(false);
		result_409635 = subInt(-1, h_409774);
	} while (false);

	return result_409635;

}

function HEX5BHEX5DHEX3D_406389(t_406395, key_406396, val_406397) {
		if (((t_406395.data != null ? t_406395.data.length : 0) == 0)) {
		if (!(is_power_of_two_143062(64))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_406395.counter = 0;
		t_406395.data = new Array(64); for (var i=0;i<64;++i) {t_406395.data[i]={Field0: 0, Field1: null, Field2: {Field0: 0, Field1: 0, Field2: 0}};}		}
		
		var hc_406801 = [0];
		var index_407440 = raw_get_406802(t_406395, key_406396, hc_406801, 0);
		if ((0 <= index_407440)) {
		nimCopy(t_406395.data[chckIndx(index_407440, 0, t_406395.data.length+0-1)-0].Field2, val_406397, NTI405928);
		}
		else {
			if (((t_406395.data != null ? t_406395.data.length : 0) == 0)) {
			if (!(is_power_of_two_143062(64))) {
			failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			t_406395.counter = 0;
			t_406395.data = new Array(64); for (var i=0;i<64;++i) {t_406395.data[i]={Field0: 0, Field1: null, Field2: {Field0: 0, Field1: 0, Field2: 0}};}			}
			
			if (must_rehash_183053((t_406395.data != null ? t_406395.data.length : 0), t_406395.counter)) {
			enlarge_408148(t_406395);
			index_407440 = raw_get_known_hc_409628(t_406395, key_406396, hc_406801[0]);
			}
			
			index_407440 = subInt(-1, index_407440);
			raw_insert_409122(t_406395, t_406395, "data", key_406396, val_406397, hc_406801[0], index_407440);
			t_406395.counter = addInt(t_406395.counter, 1);
		}
		

	
}

function get_tile_xy_204061(level_204063, lat_204064, lng_204065) {
	var result_204067 = {Field0: 0, Field1: 0};

		var tile_size_204075 = HEX2F_26817(180, HEX5E_171778(2, chckRange(level_204063, 0, 2147483647)));
		nimCopy(result_204067, {Field0: ((Math.trunc(((lng_204065 + 1.8000000000000000e+002) / tile_size_204075)))|0), Field1: ((Math.trunc(((lat_204064 + 9.0000000000000000e+001) / tile_size_204075)))|0)}, NTI204066);

	return result_204067;

}

function has_key_or_put_410881(t_410887, key_410888, val_410889) {
	var result_410890 = false;

		if (((t_410887.data != null ? t_410887.data.length : 0) == 0)) {
		if (!(is_power_of_two_143062(64))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_410887.counter = 0;
		t_410887.data = new Array(64); for (var i=0;i<64;++i) {t_410887.data[i]={Field0: 0, Field1: null, Field2: {Field0: 0, Field1: 0, Field2: 0}};}		}
		
		var hc_411401 = [0];
		var index_411410 = raw_get_406802(t_410887, key_410888, hc_411401, 0);
		if ((index_411410 < 0)) {
		result_410890 = false;
		if (((t_410887.data != null ? t_410887.data.length : 0) == 0)) {
		if (!(is_power_of_two_143062(64))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_410887.counter = 0;
		t_410887.data = new Array(64); for (var i=0;i<64;++i) {t_410887.data[i]={Field0: 0, Field1: null, Field2: {Field0: 0, Field1: 0, Field2: 0}};}		}
		
		if (must_rehash_183053((t_410887.data != null ? t_410887.data.length : 0), t_410887.counter)) {
		enlarge_408148(t_410887);
		index_411410 = raw_get_known_hc_409628(t_410887, key_410888, hc_411401[0]);
		}
		
		index_411410 = subInt(-1, index_411410);
		raw_insert_409122(t_410887, t_410887, "data", key_410888, val_410889, hc_411401[0], index_411410);
		t_410887.counter = addInt(t_410887.counter, 1);
		}
		else {
			result_410890 = true;
		}
		

	return result_410890;

}

function len_412348(t_412353) {
	var result_412354 = 0;

		result_412354 = t_412353.counter;

	return result_412354;

}

function has_key_413139(t_413144, key_413145) {
	var result_413146 = false;

		var hc_413147 = [0];
		result_413146 = (0 <= raw_get_393202(t_413144, key_413145, hc_413147, 0));

	return result_413146;

}

function has_key_or_put_414731(t_414737, key_414738, val_414739) {
	var result_414740 = false;

		if (((t_414737.data != null ? t_414737.data.length : 0) == 0)) {
		if (!(is_power_of_two_143062(64))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_414737.counter = 0;
		t_414737.data = new Array(64); for (var i=0;i<64;++i) {t_414737.data[i]={Field0: 0, Field1: null, Field2: 0};}		}
		
		var hc_415201 = [0];
		var index_415210 = raw_get_312086(t_414737, key_414738, hc_415201, 0);
		if ((index_415210 < 0)) {
		result_414740 = false;
		if (((t_414737.data != null ? t_414737.data.length : 0) == 0)) {
		if (!(is_power_of_two_143062(64))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_414737.counter = 0;
		t_414737.data = new Array(64); for (var i=0;i<64;++i) {t_414737.data[i]={Field0: 0, Field1: null, Field2: 0};}		}
		
		if (must_rehash_183053((t_414737.data != null ? t_414737.data.length : 0), t_414737.counter)) {
		enlarge_400548(t_414737);
		index_415210 = raw_get_known_hc_402028(t_414737, key_414738, hc_415201[0]);
		}
		
		index_415210 = subInt(-1, index_415210);
		raw_insert_401522(t_414737, t_414737, "data", key_414738, val_414739, hc_415201[0], index_415210);
		t_414737.counter = addInt(t_414737.counter, 1);
		}
		else {
			result_414740 = true;
		}
		

	return result_414740;

}

function load_links_311868(e_311871) {

function parse_tiles_380620(tiles_380623) {
												var Tmp8;
													var Tmp9;
												var Tmp10;
															var Tmp16;
																var Tmp17;
															var Tmp18;
															var Tmp19;
															var Tmp20;
															var Tmp21;
															var Tmp22;
											var Tmp28;
															var Tmp32;
															var Tmp33;
															var Tmp34;
															var Tmp35;
											var Tmp36;
											var Tmp37;
											var Tmp38;
											var Tmp39;
											var Tmp40;
												var Tmp41;
											var Tmp42;
											var Tmp43;
											var Tmp44;
											var Tmp45;

											function HEX3Aanonymous_387401(x_387403) {
												var result_387404 = 0;

													result_387404 = parseInt(toJSStr(x_387403), 10);

												return result_387404;

											}
											var Tmp46;

												function HEX3Aanonymous_387510(x_387512) {
													var result_387513 = 0;

														result_387513 = parseInt(toJSStr(x_387512), 10);

													return result_387513;

												}
											var Tmp47;
											var Tmp48;
												var Tmp49;
													var Tmp50;
											var Tmp51;
											var Tmp52;
											var Tmp53;
		var Tmp58;
		var Tmp59;

		L1: do {
			var t_381014 = null;
			var i_418373 = 0;
			var l_418374 = (tiles_380623 != null ? tiles_380623.length : 0);
			L2: do {
					L3: while (true) {
					if (!(i_418373 < l_418374)) break L3;
						t_381014 = tiles_380623[chckIndx(i_418373, 0, tiles_380623.length+0-1)-0];
						var rows_381026 = (t_381014.Rows);
						var meta_381036 = (t_381014.Meta);
						var tile_id_381084 = nsuJoinSep([cstrToNimstr((meta_381036.tileX)), cstrToNimstr((meta_381036.tileY)), cstrToNimstr((meta_381036.level)), cstrToNimstr((meta_381036.layerName))], makeNimstrLit("_"));
						L4: do {
							var r_381207 = null;
							var i_418370 = 0;
							var l_418371 = (rows_381026 != null ? rows_381026.length : 0);
							L5: do {
									L6: while (true) {
									if (!(i_418370 < l_418371)) break L6;
										r_381207 = rows_381026[chckIndx(i_418370, 0, rows_381026.length+0-1)-0];
										L7: do {
											var link_id_381217 = parseInt(toJSStr(cstrToNimstr((r_381207.LINK_ID))), 10);
												if (!has_key_or_put_381294(all_links_298629[0], link_id_381217, {linkId: link_id_381217, name: null, cityId: 0, districtId: 0, postalCode: null, neighborLinks: null, geometry: null, readOnly: false, addedToMap: false, addedToSector: false})) Tmp8 = false; else {													Tmp8 = (Tmp9 = HEX5BHEX5D_372746(all_links_298629[0], link_id_381217), Tmp9)[0][Tmp9[1]].readOnly;												}											if (Tmp8) {
											break L7;
											}
											
												if (!(r_381207.NAMES)) Tmp10 = false; else {													Tmp10 = !((r_381207.NAME));												}											if (Tmp10) {
											var str_name_385028 = cstrToNimstr((r_381207.NAMES));
											L11: do {
												var seq_names_385029 = null;
												var last_418344 = 0;
												var splits_418345 = -1;
												L12: do {
														L13: while (true) {
														if (!(last_418344 <= (str_name_385028 != null ? str_name_385028.length : 0))) break L13;
															var first_418347 = last_418344;
															L14: do {
																	L15: while (true) {
																	if (!((last_418344 < (str_name_385028 != null ? str_name_385028.length : 0)) && !(substr_eq_148702(str_name_385028, last_418344, makeNimstrLit("\x1D"))))) break L15;
																		last_418344 = addInt(last_418344, 1);
																	}
															} while(false);
															if ((splits_418345 == 0)) {
															last_418344 = (str_name_385028 != null ? str_name_385028.length : 0);
															}
															
															seq_names_385029 = substr_30222(str_name_385028, first_418347, subInt(last_418344, 1));
															var txt_385201 = nsuReplaceStr((Tmp16 = nsuSplitString(seq_names_385029, makeNimstrLit("\x1E"), -1), Tmp16)[chckIndx(0, 0, Tmp16.length+0-1)-0], makeNimstrLit("GERBN"), []);
																if (!!((ConstSet15[txt_385201[chckIndx(0, 0, txt_385201.length+0-1)-0]] != undefined))) Tmp17 = false; else {																	Tmp17 = !((ConstSet16[txt_385201[chckIndx(1, 0, txt_385201.length+0-1)-0]] != undefined));																}															if (Tmp17) {
															(Tmp18 = HEX5BHEX5D_372746(all_links_298629[0], link_id_381217), Tmp18)[0][Tmp18[1]].name = nimCopy(null, ((Tmp19 = HEX5BHEX5D_372746(all_links_298629[0], link_id_381217), Tmp19)[0][Tmp19[1]].name || []).concat(makeNimstrLit(" ") || [],nsuReplaceStr((Tmp20 = nsuSplitString(seq_names_385029, makeNimstrLit("\x1E"), -1), Tmp20)[chckIndx(0, 0, Tmp20.length+0-1)-0], makeNimstrLit("GERBN"), []) || []), NTI138);
															(Tmp21 = HEX5BHEX5D_372746(all_links_298629[0], link_id_381217), Tmp21)[0][Tmp21[1]].name = nimCopy(null, nucStrip((Tmp22 = HEX5BHEX5D_372746(all_links_298629[0], link_id_381217), Tmp22)[0][Tmp22[1]].name, true, true, [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288]), NTI138);
															break L11;
															}
															
															L23: do {
																var seq_text_385858 = null;
																var last_418339 = 0;
																var splits_418340 = -1;
																L24: do {
																		L25: while (true) {
																		if (!(last_418339 <= (seq_names_385029 != null ? seq_names_385029.length : 0))) break L25;
																			var first_418342 = last_418339;
																			L26: do {
																					L27: while (true) {
																					if (!((last_418339 < (seq_names_385029 != null ? seq_names_385029.length : 0)) && !(substr_eq_148702(seq_names_385029, last_418339, makeNimstrLit("\x1E"))))) break L27;
																						last_418339 = addInt(last_418339, 1);
																					}
																			} while(false);
																			if ((splits_418340 == 0)) {
																			last_418339 = (seq_names_385029 != null ? seq_names_385029.length : 0);
																			}
																			
																			seq_text_385858 = substr_30222(seq_names_385029, first_418342, subInt(last_418339, 1));
																			if ((splits_418340 == 0)) {
																			break L24;
																			}
																			
																			splits_418340 = subInt(splits_418340, 1);
																			last_418339 = addInt(last_418339, 1);
																		}
																} while(false);
															} while(false);
															if ((splits_418345 == 0)) {
															break L12;
															}
															
															splits_418345 = subInt(splits_418345, 1);
															last_418344 = addInt(last_418344, 1);
														}
												} while(false);
											} while(false);
											}
											else {
											if ((r_381207.NAME)) {
											(Tmp28 = HEX5BHEX5D_372746(all_links_298629[0], link_id_381217), Tmp28)[0][Tmp28[1]].geometry = nimCopy(null, new_seq_386174(0), NTI386178);
											var lats_386217 = nsuSplitString(cstrToNimstr((r_381207.LAT)), makeNimstrLit(","), -1);
											var lngs_386227 = nsuSplitString(cstrToNimstr((r_381207.LON)), makeNimstrLit(","), -1);
											var lat0_386228 = 0.0;
											var lng0_386229 = 0.0;
											L29: do {
												var i_386244 = 0;
												var colontmp__418356 = 0;
												colontmp__418356 = (lats_386217 != null ? (lats_386217.length-1) : -1);
												var res_418357 = 0;
												L30: do {
														L31: while (true) {
														if (!(res_418357 <= colontmp__418356)) break L31;
															i_386244 = res_418357;
															if (eqStrings(nucStrip(lats_386217[chckIndx(i_386244, 0, lats_386217.length+0-1)-0], true, true, [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288]), [])) {
															Tmp32 = lat0_386228;
															}
															else {
															Tmp32 = (lat0_386228 + parseFloat(toJSStr(nucStrip(lats_386217[chckIndx(i_386244, 0, lats_386217.length+0-1)-0], true, true, [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288]))));
															}
															
															var str_lat_386247 = Tmp32;
															if (eqStrings(nucStrip(lngs_386227[chckIndx(i_386244, 0, lngs_386227.length+0-1)-0], true, true, [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288]), [])) {
															Tmp33 = lng0_386229;
															}
															else {
															Tmp33 = (lng0_386229 + parseFloat(toJSStr(nucStrip(lngs_386227[chckIndx(i_386244, 0, lngs_386227.length+0-1)-0], true, true, [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288]))));
															}
															
															var str_lng_386250 = Tmp33;
															if ((Tmp35 = (Tmp34 = HEX5BHEX5D_372746(all_links_298629[0], link_id_381217), Tmp34)[0][Tmp34[1]].geometry, Tmp35) != null) { Tmp35.push({lat: nimCopy(null, (str_lat_386247 / 1.0000000000000000e+005), NTI201016), lng: nimCopy(null, (str_lng_386250 / 1.0000000000000000e+005), NTI201018)}); } else { Tmp35 = [{lat: nimCopy(null, (str_lat_386247 / 1.0000000000000000e+005), NTI201016), lng: nimCopy(null, (str_lng_386250 / 1.0000000000000000e+005), NTI201018)}]; };
															lat0_386228 = str_lat_386247;
															lng0_386229 = str_lng_386250;
															res_418357 = addInt(res_418357, 1);
														}
												} while(false);
											} while(false);
											}
											else {
											if ((r_381207.POSTAL_CODES)) {
											(Tmp36 = HEX5BHEX5D_372746(all_links_298629[0], link_id_381217), Tmp36)[0][Tmp36[1]].cityId = parseInt(toJSStr((Tmp38 = nsuSplitString((Tmp37 = nsuSplitString(cstrToNimstr((r_381207.ADMIN_PLACE_IDS)), makeNimstrLit(","), -1), Tmp37)[chckIndx(3, 0, Tmp37.length+0-1)-0], makeNimstrLit(";"), -1), Tmp38)[chckIndx(0, 0, Tmp38.length+0-1)-0]), 10);
											var distr_prt_386607 = nimCopy(null, (Tmp39 = nsuSplitString(cstrToNimstr((r_381207.ADMIN_PLACE_IDS)), makeNimstrLit(","), -1), Tmp39)[chckIndx(4, 0, Tmp39.length+0-1)-0], NTI138);
											if ((eqStrings(distr_prt_386607, []) || (distr_prt_386607[chckIndx(0, 0, distr_prt_386607.length+0-1)-0] == 59))) {
											Tmp40 = 0;
											}
											else {
											Tmp40 = parseInt(toJSStr((Tmp41 = nsuSplitString(distr_prt_386607, makeNimstrLit(";"), -1), Tmp41)[chckIndx(0, 0, Tmp41.length+0-1)-0]), 10);
											}
											
											var district_id_386804 = Tmp40;
											(Tmp42 = HEX5BHEX5D_372746(all_links_298629[0], link_id_381217), Tmp42)[0][Tmp42[1]].districtId = addInt(district_id_386804, (Tmp43 = HEX5BHEX5D_372746(all_links_298629[0], link_id_381217), Tmp43)[0][Tmp43[1]].cityId);
											(Tmp44 = HEX5BHEX5D_372746(all_links_298629[0], link_id_381217), Tmp44)[0][Tmp44[1]].postalCode = nimCopy(null, (Tmp45 = nsuSplitString(cstrToNimstr((r_381207.POSTAL_CODES)), makeNimstrLit(";"), -1), Tmp45)[chckIndx(0, 0, Tmp45.length+0-1)-0], NTI138);
											}
											else {
											if ((r_381207.REF_NODE_NEIGHBOR_LINKS)) {
											var r_links_387315 = cstrToNimstr((r_381207.REF_NODE_NEIGHBOR_LINKS));
											var non_rlinks_387325 = cstrToNimstr((r_381207.NONREF_NODE_NEIGHBOR_LINKS));
											var ref_links_387326 = nsuSplitString(r_links_387315, makeNimstrLit(","), -1);
											var non_ref_links_387327 = nsuSplitString(non_rlinks_387325, makeNimstrLit(","), -1);
											var ref_links_int_387470 = map_387421(ref_links_387326, HEX3Aanonymous_387401);
											if (eqStrings(non_rlinks_387325, [])) {
											Tmp46 = new_seq_387476(0);
											}
											else {
											Tmp46 = map_387421(non_ref_links_387327, HEX3Aanonymous_387510);
											}
											
											var non_ref_links_int_387540 = nimCopy(null, Tmp46, NTI387480);
											(Tmp47 = HEX5BHEX5D_372746(all_links_298629[0], link_id_381217), Tmp47)[0][Tmp47[1]].neighborLinks = nimCopy(null, concat_387710([nimCopy(null, ref_links_int_387470, NTI387702), nimCopy(null, non_ref_links_int_387540, NTI387707)]), NTI387716);
											}
											}}}
											var street_387966 = nimCopy(null, (Tmp48 = HEX5BHEX5D_372746(all_links_298629[0], link_id_381217), Tmp48)[0][Tmp48[1]].name, NTI138);
												if (!!(eqStrings(street_387966, []))) Tmp49 = false; else {													Tmp49 = ((Tmp50 = HEX5BHEX5D_372746(all_links_298629[0], link_id_381217), Tmp50)[0][Tmp50[1]].cityId == city_id_300630[0]);												}											if (Tmp49) {
											if (!(has_key_or_put_388243(all_streets_299029[0], street_387966, {name: nimCopy(null, street_387966, NTI138), links: new_seq_388152(0), sector: null, totalFamilies: 0}))) {
											}
											
											if ((Tmp53 = (Tmp51 = HEX5BHEX5D_345311(all_streets_299029[0], street_387966), Tmp51)[0][Tmp51[1]].links, Tmp53) != null) { Tmp53.push((Tmp52 = HEX5BHEX5D_372746(all_links_298629[0], link_id_381217), Tmp52)[0][Tmp52[1]]); } else { Tmp53 = [(Tmp52 = HEX5BHEX5D_372746(all_links_298629[0], link_id_381217), Tmp52)[0][Tmp52[1]]]; };
											}
											
											has_key_or_put_392651(cached_tiles_299429[0], tile_id_381084, t_381014);
										} while(false);
										i_418370 = addInt(i_418370, 1);
										if (!(((rows_381026 != null ? rows_381026.length : 0) == l_418371))) {
										failed_assert_impl_15266(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						i_418373 = addInt(i_418373, 1);
						if (!(((tiles_380623 != null ? tiles_380623.length : 0) == l_418374))) {
						failed_assert_impl_15266(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		L54: do {
			var k_396719 = 0;
			var v_396720 = null;
			var v_396720_Idx = 0;
			var l_418377 = len_324815(all_links_298629[0]);
			L55: do {
				var h_418379 = 0;
				var colontmp__418380 = 0;
				colontmp__418380 = (all_links_298629[0].data != null ? (all_links_298629[0].data.length-1) : -1);
				var res_418381 = 0;
				L56: do {
						L57: while (true) {
						if (!(res_418381 <= colontmp__418380)) break L57;
							h_418379 = res_418381;
							if (is_filled_183018(all_links_298629[0].data[chckIndx(h_418379, 0, all_links_298629[0].data.length+0-1)-0].Field0)) {
							k_396719 = all_links_298629[0].data[chckIndx(h_418379, 0, all_links_298629[0].data.length+0-1)-0].Field1;
							v_396720 = all_links_298629[0].data[chckIndx(h_418379, 0, all_links_298629[0].data.length+0-1)-0]; v_396720_Idx = "Field2";
							v_396720[v_396720_Idx].readOnly = true;
							if (eqStrings(v_396720[v_396720_Idx].name, [])) {
							v_396720[v_396720_Idx].name = nimCopy(null, makeNimstrLit("uknown!!!"), NTI138);
							}
							
							if (!((len_324815(all_links_298629[0]) == l_418377))) {
							failed_assert_impl_15266(makeNimstrLit("tables.nim(691, 13) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
							}
							
							}
							
							res_418381 = addInt(res_418381, 1);
						}
				} while(false);
			} while(false);
		} while(false);
		sort_396913(all_streets_299029[0], sort_street_tbl_396822, 1);
		display_street_367892((Tmp58 = HEX5BHEX5D_372746(all_links_298629[0], clck_link_id_300634[0]), Tmp58)[0][Tmp58[1]].name, true);
		if (!(has_key_344136(all_sectors_299829[0], sect_name_300636[0]))) {
		HEX5BHEX5DHEX3D_399270(last_postfix_300229[0], postal_code_300635[0], subInt((Tmp59 = HEX5BHEX5D_312074(last_postfix_300229[0], postal_code_300635[0]), Tmp59)[0][Tmp59[1]], 1));
		}
		
		sort_402873(all_sectors_299829[0], sort_sector_tbl_402730, 1);
		redraw_277814(kxi_268324[0]);

	
}

		function HEX3Aanonymous_404716(res_404718) {
				var tiles_404812 = (res_404718.Tiles);
				L1: do {
					var k_405614 = null;
					var v_405615 = null;
					var l_418315 = len_404946(cached_tiles_299429[0]);
					L2: do {
						var h_418317 = 0;
						var colontmp__418318 = 0;
						colontmp__418318 = (cached_tiles_299429[0].data != null ? (cached_tiles_299429[0].data.length-1) : -1);
						var res_418319 = 0;
						L3: do {
								L4: while (true) {
								if (!(res_418319 <= colontmp__418318)) break L4;
									h_418317 = res_418319;
									if (is_filled_183018(cached_tiles_299429[0].data[chckIndx(h_418317, 0, cached_tiles_299429[0].data.length+0-1)-0].Field0)) {
									k_405614 = cached_tiles_299429[0].data[chckIndx(h_418317, 0, cached_tiles_299429[0].data.length+0-1)-0].Field1;
									v_405615 = cached_tiles_299429[0].data[chckIndx(h_418317, 0, cached_tiles_299429[0].data.length+0-1)-0].Field2;
									if (tiles_404812 != null) { tiles_404812.push(v_405615); } else { tiles_404812 = [v_405615]; };
									if (!((len_404946(cached_tiles_299429[0]) == l_418315))) {
									failed_assert_impl_15266(makeNimstrLit("tables.nim(669, 13) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
									}
									
									}
									
									res_418319 = addInt(res_418319, 1);
								}
						} while(false);
					} while(false);
				} while(false);
				parse_tiles_380620(tiles_404812);

			
		}

		function HEX3Aanonymous_405652(e_405654) {
			
		}

		function HEX3Aanonymous_405669(res_405671) {
			BeforeRet: do {
				var layer_obj_405675 = res_405671.Layers[0];
				var e_pnt_405676 = function(){return H.service.extension.platformData.Service.EntryPoint}();
				var e_pnt_type_405677 = function(){return H.service.extension.platformData.Service.EntryPointType}();
				var prms_pde_405801 = {};
				var t_xys_405818 = new_seq_40233(0);
				var layers_405830 = [makeNimstrLit("ROAD_ADMIN_FC"), makeNimstrLit("ROAD_GEOM_FC"), makeNimstrLit("ROAD_NAME_FC"), makeNimstrLit("LINK_FC")];
				var r_layers_405847 = new_seq_40233(0);
				var levels_405864 = new_seq_40233(0);
				var tile_xys_405876 = (layer_obj_405675.tileXYs);
				var level_405886 = (layer_obj_405675.level);
				var all_crds_405926 = new_seq_405893(0);
				var prev_txys_406229 = [init_table_405933(64)];
				L1: do {
					var xy_406236 = null;
					var i_418239 = 0;
					var l_418240 = (tile_xys_405876 != null ? tile_xys_405876.length : 0);
					L2: do {
							L3: while (true) {
							if (!(i_418239 < l_418240)) break L3;
								xy_406236 = tile_xys_405876[chckIndx(i_418239, 0, tile_xys_405876.length+0-1)-0];
								var tx_406246 = (xy_406236.x);
								var ty_406256 = (xy_406236.y);
								var latlng_406257 = get_coord_204015(level_405886, tx_406246, ty_406256);
								HEX5BHEX5DHEX3D_406389(prev_txys_406229[0], nsuJoinSep([cstrToNimstr((level_405886)+""), cstrToNimstr((tx_406246)+""), cstrToNimstr((ty_406256)+"")], makeNimstrLit("_")), {Field0: level_405886, Field1: tx_406246, Field2: ty_406256});
								if (all_crds_405926 != null) { all_crds_405926.push({Field0: latlng_406257["Field0"], Field1: latlng_406257["Field1"]}); } else { all_crds_405926 = [{Field0: latlng_406257["Field0"], Field1: latlng_406257["Field1"]}]; };
								i_418239 = addInt(i_418239, 1);
								if (!(((tile_xys_405876 != null ? tile_xys_405876.length : 0) == l_418240))) {
								failed_assert_impl_15266(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);
				L4: do {
					var lvl_410410 = 0;
					var res_418248 = 10;
					L5: do {
							L6: while (true) {
							if (!(res_418248 <= 13)) break L6;
								lvl_410410 = res_418248;
								L7: do {
									var crd_410614 = {Field0: 0.0, Field1: 0.0};
									var i_418245 = 0;
									var l_418246 = (all_crds_405926 != null ? all_crds_405926.length : 0);
									L8: do {
											L9: while (true) {
											if (!(i_418245 < l_418246)) break L9;
												nimCopy(crd_410614, all_crds_405926[chckIndx(i_418245, 0, all_crds_405926.length+0-1)-0], NTI405889);
												var txy_410615 = get_tile_xy_204061(lvl_410410, crd_410614["Field0"], crd_410614["Field1"]);
												var k_410627 = nsuJoinSep([cstrToNimstr((lvl_410410)+""), cstrToNimstr((txy_410615["Field0"])+""), cstrToNimstr((txy_410615["Field1"])+"")], makeNimstrLit("_"));
												has_key_or_put_410881(prev_txys_406229[0], k_410627, {Field0: lvl_410410, Field1: txy_410615["Field0"], Field2: txy_410615["Field1"]});
												i_418245 = addInt(i_418245, 1);
												if (!(((all_crds_405926 != null ? all_crds_405926.length : 0) == l_418246))) {
												failed_assert_impl_15266(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
												}
												
											}
									} while(false);
								} while(false);
								res_418248 = addInt(res_418248, 1);
							}
					} while(false);
				} while(false);
				L10: do {
					var lr_412215 = null;
					var i_418272 = 0;
					var l_418273 = (layers_405830 != null ? layers_405830.length : 0);
					L11: do {
							L12: while (true) {
							if (!(i_418272 < l_418273)) break L12;
								lr_412215 = layers_405830[chckIndx(i_418272, 0, layers_405830.length+0-1)-0];
								L13: do {
									var lvl_tx_ty_413014 = {Field0: 0, Field1: 0, Field2: 0};
									var l_418263 = len_412348(prev_txys_406229[0]);
									L14: do {
										var h_418265 = 0;
										var colontmp__418266 = 0;
										colontmp__418266 = (prev_txys_406229[0].data != null ? (prev_txys_406229[0].data.length-1) : -1);
										var res_418267 = 0;
										L15: do {
												L16: while (true) {
												if (!(res_418267 <= colontmp__418266)) break L16;
													h_418265 = res_418267;
													if (is_filled_183018(prev_txys_406229[0].data[chckIndx(h_418265, 0, prev_txys_406229[0].data.length+0-1)-0].Field0)) {
													nimCopy(lvl_tx_ty_413014, prev_txys_406229[0].data[chckIndx(h_418265, 0, prev_txys_406229[0].data.length+0-1)-0].Field2, NTI405928);
													L17: do {
														var x_str_413015 = cstrToNimstr((lvl_tx_ty_413014.Field1)+"");
														var y_str_413016 = cstrToNimstr((lvl_tx_ty_413014.Field2)+"");
														var level_413017 = lvl_tx_ty_413014.Field0;
														var layer_name_413018 = (lr_412215 || []).concat(cstrToNimstr((subInt(level_413017, 8))+"") || []);
														if (has_key_413139(cached_tiles_299429[0], nsuJoinSep([nimCopy(null, x_str_413015, NTI138), nimCopy(null, y_str_413016, NTI138), cstrToNimstr((level_413017)+""), nimCopy(null, layer_name_413018, NTI138)], makeNimstrLit("_")))) {
														break L17;
														}
														
														if (t_xys_405818 != null) { t_xys_405818.push((x_str_413015 || []).concat(makeNimstrLit(",") || [],y_str_413016 || [])); } else { t_xys_405818 = [(x_str_413015 || []).concat(makeNimstrLit(",") || [],y_str_413016 || [])]; };
														if (levels_405864 != null) { levels_405864.push(cstrToNimstr((level_413017)+"")); } else { levels_405864 = [cstrToNimstr((level_413017)+"")]; };
														var Tmp18 = nimCopy(null, layer_name_413018, NTI138);
														if (r_layers_405847 != null) { r_layers_405847.push(Tmp18); } else { r_layers_405847 = [Tmp18]; };
													} while(false);
													if (!((len_412348(prev_txys_406229[0]) == l_418263))) {
													failed_assert_impl_15266(makeNimstrLit("tables.nim(733, 13) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
													}
													
													}
													
													res_418267 = addInt(res_418267, 1);
												}
										} while(false);
									} while(false);
								} while(false);
								i_418272 = addInt(i_418272, 1);
								if (!(((layers_405830 != null ? layers_405830.length : 0) == l_418273))) {
								failed_assert_impl_15266(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);
				if (((r_layers_405847 != null ? r_layers_405847.length : 0) == 0)) {
				var tiles_413212 = new_seq_334219(0);
				L19: do {
					var k_413220 = null;
					var v_413221 = null;
					var l_418283 = len_404946(cached_tiles_299429[0]);
					L20: do {
						var h_418285 = 0;
						var colontmp__418286 = 0;
						colontmp__418286 = (cached_tiles_299429[0].data != null ? (cached_tiles_299429[0].data.length-1) : -1);
						var res_418287 = 0;
						L21: do {
								L22: while (true) {
								if (!(res_418287 <= colontmp__418286)) break L22;
									h_418285 = res_418287;
									if (is_filled_183018(cached_tiles_299429[0].data[chckIndx(h_418285, 0, cached_tiles_299429[0].data.length+0-1)-0].Field0)) {
									k_413220 = cached_tiles_299429[0].data[chckIndx(h_418285, 0, cached_tiles_299429[0].data.length+0-1)-0].Field1;
									v_413221 = cached_tiles_299429[0].data[chckIndx(h_418285, 0, cached_tiles_299429[0].data.length+0-1)-0].Field2;
									if (tiles_413212 != null) { tiles_413212.push(v_413221); } else { tiles_413212 = [v_413221]; };
									if (!((len_404946(cached_tiles_299429[0]) == l_418283))) {
									failed_assert_impl_15266(makeNimstrLit("tables.nim(669, 13) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
									}
									
									}
									
									res_418287 = addInt(res_418287, 1);
								}
						} while(false);
					} while(false);
				} while(false);
				parse_tiles_380620(tiles_413212);
				break BeforeRet;
				}
				
				prms_pde_405801.layers = toJSStr(nsuJoinSep(r_layers_405847, makeNimstrLit(",")));
				prms_pde_405801.levels = toJSStr(nsuJoinSep(levels_405864, makeNimstrLit(",")));
				prms_pde_405801.tilexy = toJSStr(nsuJoinSep(t_xys_405818, makeNimstrLit(",")));
				prms_pde_405801.meta = 1;
				pde_service_362956[0].request(e_pnt_405676.TILES, e_pnt_type_405677.JSON, prms_pde_405801, on_res_road_geom_405651, on_err_road_geom_405668);
			} while (false);

			
		}

		function HEX3Aanonymous_413490(e_413492) {
			
		}

		function HEX3Aanonymous_413507(r_413509) {
				var Tmp1;
					var Tmp5;
				var Tmp6;
				var Tmp7;
					var Tmp8;
				var Tmp9;
				var Tmp10;

			BeforeRet: do {
				var res_413510 = r_413509;
				var map_reference_413526 = res_413510.response.view[0].result[0].location.mapReference;
				var city_shape_413551 = (res_413510.response.view[0].result[0].location.shape.value);
				var city_geo_413552 = function(wkt){return new H.util.wkt.toGeometry(wkt)}(city_shape_413551);
				var address_413568 = res_413510.response.view[0].result[0].location.address;
				var link_id_413572 = map_reference_413526.referenceId;
				clck_link_id_300634[0] = (link_id_413572);
				if ((city_geo_413552.getExterior === undefined)) {
				Tmp1 = city_geo_413552.getGeometries();
				}
				else {
				Tmp1 = [city_geo_413552];
				}
				
				var geoms_413597 = nimCopy(null, Tmp1, NTI201143);
				L2: do {
					var g_414014 = null;
					var i_418301 = 0;
					var l_418302 = (geoms_413597 != null ? geoms_413597.length : 0);
					L3: do {
							L4: while (true) {
							if (!(i_418301 < l_418302)) break L4;
								g_414014 = geoms_413597[chckIndx(i_418301, 0, geoms_413597.length+0-1)-0];
								var ln_str_414019 = g_414014.getExterior();
								var p_opt_414201 = {style: {strokeColor: "rgba(0, 255, 255, 1)", fillColor: "rgba(0, 255, 255, 1)", lineWidth: 10, m_type: NTI202076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, m_type: NTI202081, zIndex: 0};
								var pl_414202 = function(ls, options){return new H.map.Polyline(ls, options)}(ln_str_414019, p_opt_414201);
								if ((city_id_300630[0] == 0)) {
								map.addObject(pl_414202);
								}
								
								i_418301 = addInt(i_418301, 1);
								if (!(((geoms_413597 != null ? geoms_413597.length : 0) == l_418302))) {
								failed_assert_impl_15266(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);
				var rev_city_id_414415 = parseInt(toJSStr(cstrToNimstr((map_reference_413526.cityId))), 10);
				var rev_postal_code_414425 = cstrToNimstr((address_413568.postalCode));
					if (!!((city_id_300630[0] == 0))) Tmp5 = false; else {						Tmp5 = !((rev_city_id_414415 == city_id_300630[0]));					}				if (Tmp5) {
				break BeforeRet;
				}
				
				city_id_300630[0] = rev_city_id_414415;
				postal_code_300635[0] = nimCopy(null, rev_postal_code_414425, NTI138);
				if ((map_reference_413526.districtId)) {
				Tmp6 = parseInt(toJSStr(cstrToNimstr((map_reference_413526.districtId))), 10);
				}
				else {
				Tmp6 = 0;
				}
				
				district_id_300631[0] = Tmp6;
				addr_city_300633[0] = nimCopy(null, cstrToNimstr((address_413568.city)), NTI138);
					if ((address_413568.district === undefined)) Tmp8 = true; else {						Tmp8 = eqStrings(cstrToNimstr((address_413568.district)), addr_city_300633[0]);					}				if (Tmp8) {
				Tmp7 = [];
				}
				else {
				Tmp7 = cstrToNimstr((address_413568.district));
				}
				
				addr_distr_300632[0] = nimCopy(null, Tmp7, NTI138);
				has_key_or_put_414731(last_postfix_300229[0], postal_code_300635[0], 0);
				HEX5BHEX5DHEX3D_399270(last_postfix_300229[0], postal_code_300635[0], addInt((Tmp9 = HEX5BHEX5D_312074(last_postfix_300229[0], postal_code_300635[0]), Tmp9)[0][Tmp9[1]], 1));
				var p_fix_416457 = (Tmp10 = HEX5BHEX5D_312074(last_postfix_300229[0], postal_code_300635[0]), Tmp10)[0][Tmp10[1]];
				var seq_sect_name_416474 = new_seq_40233(0);
				if (seq_sect_name_416474 != null) { seq_sect_name_416474.push((postal_code_300635[0] || []).concat(makeNimstrLit("-") || [],cstrToNimstr((p_fix_416457)+"") || [])); } else { seq_sect_name_416474 = [(postal_code_300635[0] || []).concat(makeNimstrLit("-") || [],cstrToNimstr((p_fix_416457)+"") || [])]; };
				sect_name_300636[0] = nimCopy(null, nsuJoinSep(seq_sect_name_416474, makeNimstrLit(" ")), NTI138);
				var e_pnt_416601 = function(){return H.service.extension.platformData.Service.EntryPoint}();
				var e_pnt_type_416602 = function(){return H.service.extension.platformData.Service.EntryPointType}();
				var prms_pde_416603 = {};
				prms_pde_416603.layer = "ROAD_GEOM_FCn";
				prms_pde_416603.attributes = "LINK_ID";
				prms_pde_416603.values = (link_id_413572);
				var z_key_416643 = (makeNimstrLit("z") || []).concat(addr_city_300633[0] || [],makeNimstrLit("-1") || []);
				if (!(has_key_344136(all_sectors_299829[0], z_key_416643))) {
				HEX5BHEX5DHEX3D_317932(all_sectors_299829[0], z_key_416643, {exclude: true, pFix: 1, city: [], postalCode: (makeNimstrLit("z") || []).concat(addr_city_300633[0] || []), district: [], folkDistrict: null, streets: {data: null, counter: 0, first: 0, last: 0}, shownOnMap: false});
				}
				
				pde_service_362956[0].request(e_pnt_416601.INDEX, e_pnt_type_416602.JSON, prms_pde_416603, on_res_index_road_geom_413489, on_err_index_road_geom_413506);
			} while (false);

			
		}

		function HEX3Aanonymous_417045(e_417047) {
			
		}

		var p_e_379753 = e_311871;
		main_group_362930[0].removeAll();
		L1: do {
			var k_380615 = 0;
			var v_380616 = null;
			var v_380616_Idx = 0;
			var l_418223 = len_324815(all_links_298629[0]);
			L2: do {
				var h_418225 = 0;
				var colontmp__418226 = 0;
				colontmp__418226 = (all_links_298629[0].data != null ? (all_links_298629[0].data.length-1) : -1);
				var res_418227 = 0;
				L3: do {
						L4: while (true) {
						if (!(res_418227 <= colontmp__418226)) break L4;
							h_418225 = res_418227;
							if (is_filled_183018(all_links_298629[0].data[chckIndx(h_418225, 0, all_links_298629[0].data.length+0-1)-0].Field0)) {
							k_380615 = all_links_298629[0].data[chckIndx(h_418225, 0, all_links_298629[0].data.length+0-1)-0].Field1;
							v_380616 = all_links_298629[0].data[chckIndx(h_418225, 0, all_links_298629[0].data.length+0-1)-0]; v_380616_Idx = "Field2";
							v_380616[v_380616_Idx].addedToMap = false;
							if (!((len_324815(all_links_298629[0]) == l_418223))) {
							failed_assert_impl_15266(makeNimstrLit("tables.nim(691, 13) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
							}
							
							}
							
							res_418227 = addInt(res_418227, 1);
						}
				} while(false);
			} while(false);
		} while(false);
		var geo_point_380617 = map.screenToGeo(p_e_379753.currentPointer.viewportX, p_e_379753.currentPointer.viewportY);
		var reverse_geocoding_parameters_380618 = {m_type: NTI286123, jsonattributes: 0, mode: null, prox: null, maxResults: 0, additionaldata: null, locationattributes: null};
		reverse_geocoding_parameters_380618.jsonattributes = 1;
		reverse_geocoding_parameters_380618.prox = toJSStr((cstrToNimstr((geo_point_380617.lat)+"") || []).concat(makeNimstrLit(",") || [],cstrToNimstr((geo_point_380617.lng)+"") || [],makeNimstrLit(",1") || []));
		reverse_geocoding_parameters_380618.mode = "retrieveAddresses";
		reverse_geocoding_parameters_380618.maxResults = 1;
		reverse_geocoding_parameters_380618.additionaldata = "SuppressStreetType,Unnamed";
		reverse_geocoding_parameters_380618.locationattributes = "linkInfo";
		reverse_geocoding_parameters_380618.additionaldata = "IncludeShapeLevel,city";
		var rgcp_380619 = reverse_geocoding_parameters_380618;
		var on_res_road_geom_405651 = HEX3Aanonymous_404716;
		var on_err_road_geom_405668 = HEX3Aanonymous_405652;
		var on_res_index_road_geom_413489 = HEX3Aanonymous_405669;
		var on_err_index_road_geom_413506 = HEX3Aanonymous_413490;
		var on_res_rev_geo_417044 = HEX3Aanonymous_413507;
		var on_err_rev_geo_417061 = HEX3Aanonymous_417045;
		geocoder_362955.reverseGeocode(reverse_geocoding_parameters_380618, on_res_rev_geo_417044, on_err_rev_geo_417061);

	
}

function map_378809(s_378814, op_378817) {
	var result_378819 = null;

		result_378819 = new Array(chckRange((s_378814 != null ? s_378814.length : 0), 0, 2147483647)); for (var i=0;i<chckRange((s_378814 != null ? s_378814.length : 0), 0, 2147483647);++i) {result_378819[i]=null;}		L1: do {
			var i_378842 = 0;
			var colontmp__418509 = 0;
			colontmp__418509 = (s_378814 != null ? s_378814.length : 0);
			var i_418510 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_418510 < colontmp__418509)) break L3;
						i_378842 = i_418510;
						result_378819[chckIndx(i_378842, 0, result_378819.length+0-1)-0] = nimCopy(null, op_378817(s_378814[chckIndx(i_378842, 0, s_378814.length+0-1)-0]), NTI138);
						i_418510 = addInt(i_418510, 1);
					}
			} while(false);
		} while(false);

	return result_378819;

}

function show_border_378780(hr_coord_378782, s_col_378783, latlon_378784) {

		function HEX3Aanonymous_378785(item_378787) {

				function HEX3Aanonymous_378789(item_378791) {
					var result_378792 = null;

						result_378792 = nimCopy(null, nucStrip(item_378791, true, true, [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288]), NTI138);

					return result_378792;

				}

			var result_378788 = null;

				result_378788 = nimCopy(null, nsuJoinSep(map_378809(nsuSplitString(item_378787, makeNimstrLit(","), -1), HEX3Aanonymous_378789), makeNimstrLit(",")), NTI138);

			return result_378788;

		}

		var hr_arr_area_378884 = nsuSplitString(nsuJoinSep(map_378809(nsuSplitString(hr_coord_378782, makeNimstrLit(" "), -1), HEX3Aanonymous_378785), makeNimstrLit(",")), makeNimstrLit(","), -1);
		var hr_ln_str_378885 = function(){return new H.geo.LineString();}();
		var i_lat_378887 = 0;
		var i_lng_378889 = 1;
		if (latlon_378784) {
		i_lat_378887 = 1;
		i_lng_378889 = 0;
		}
		
		L1: do {
			var i_378903 = 0;
			var colontmp__418499 = 0;
			colontmp__418499 = subInt((hr_arr_area_378884 != null ? (hr_arr_area_378884.length-1) : -1), 3);
			var res_418500 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_418500 <= colontmp__418499)) break L3;
						i_378903 = res_418500;
						hr_ln_str_378885.pushLatLngAlt(chckRange(parseFloat(toJSStr(hr_arr_area_378884[chckIndx(addInt(i_378903, i_lng_378889), 0, hr_arr_area_378884.length+0-1)-0])), -9.0000000000000000e+001, 9.0000000000000000e+001), chckRange(parseFloat(toJSStr(hr_arr_area_378884[chckIndx(addInt(i_378903, i_lat_378887), 0, hr_arr_area_378884.length+0-1)-0])), -1.8000000000000000e+002, 1.8000000000000000e+002), parseFloat(toJSStr(hr_arr_area_378884[chckIndx(addInt(i_378903, 3), 0, hr_arr_area_378884.length+0-1)-0])));
						res_418500 = addInt(res_418500, 3);
					}
			} while(false);
		} while(false);
		hr_ln_str_378885.pushLatLngAlt(chckRange(parseFloat(toJSStr(hr_arr_area_378884[chckIndx(i_lng_378889, 0, hr_arr_area_378884.length+0-1)-0])), -9.0000000000000000e+001, 9.0000000000000000e+001), chckRange(parseFloat(toJSStr(hr_arr_area_378884[chckIndx(i_lat_378887, 0, hr_arr_area_378884.length+0-1)-0])), -1.8000000000000000e+002, 1.8000000000000000e+002), parseFloat(toJSStr(hr_arr_area_378884[chckIndx(2, 0, hr_arr_area_378884.length+0-1)-0])));
		var p_opt_378904 = {style: {strokeColor: toJSStr(s_col_378783), fillColor: toJSStr(s_col_378783), lineWidth: 10, m_type: NTI202076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, m_type: NTI202081, zIndex: 0};
		var pl_378905 = function(ls, options){return new H.map.Polyline(ls, options)}(hr_ln_str_378885, p_opt_378904);
		map.addObject(pl_378905);

	
}

function geo_area_378924() {

		function show_border_district_379001(border_data_379003, stroke_color_379004, fill_color_379005) {

				function HEX3Aanonymous_379201(item_379203) {

						function HEX3Aanonymous_379205(item_379207) {
							var result_379208 = null;

								result_379208 = nimCopy(null, nucStrip(item_379207, true, true, [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288]), NTI138);

							return result_379208;

						}

					var result_379204 = null;

						result_379204 = nimCopy(null, nsuJoinSep(map_378809(nsuSplitString(item_379203, makeNimstrLit(","), -1), HEX3Aanonymous_379205), makeNimstrLit(",")), NTI138);

					return result_379204;

				}

				function HEX3Aanonymous_379401(e_379403) {
					
				}
				stroke_color_379004 = nimCopy(null, stroke_color_379004, NTI138);
				fill_color_379005 = nimCopy(null, fill_color_379005, NTI138);

				function HEX3Aanonymous_379418(r_379420) {
						var res_379430 = r_379420.Response.View[0].Result[0];
						var loc_379431 = res_379430["Location"];
						var shp_379444 = cstrToNimstr((loc_379431.Shape.Value));
						var p_opt_379448 = {style: {strokeColor: toJSStr(stroke_color_379004), fillColor: toJSStr(fill_color_379005), lineWidth: 1, m_type: NTI202076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, zIndex: -999, m_type: NTI202085};
						var pl_379454 = function(ls, opt){return new H.map.Polygon(ls, opt)}(function(wkt){return new H.util.wkt.toGeometry(wkt)}(toJSStr(shp_379444)), p_opt_379448);
						map.addObject(pl_379454);

					
				}

								function HEX3Aanonymous_379615() {

										function HEX3Aanonymous_379618(r_379620) {
												var Tmp1;

												var res_379630 = r_379620.Response.View[0].Result[0];
												var match_lvl_379640 = cstrToNimstr((res_379630.MatchLevel));
												var loc_379641 = res_379630["Location"];
												if ((loc_379641.Shape === undefined)) {
												Tmp1 = makeNimstrLit("city");
												}
												else {
												Tmp1 = makeNimstrLit("district");
												}
												
												var type_shp_379649 = nimCopy(null, Tmp1, NTI138);
												geocoding_parameters_379006.searchtext = toJSStr(c_379617);
												geocoding_parameters_379006.additionaldata = toJSStr((makeNimstrLit("IncludeShapeLevel,") || []).concat(type_shp_379649 || []));
												geocoder_362955.geocode(geocoding_parameters_379006, on_res_geo_for_map_379503, on_err_geo_379417);

											
										}

										var c_379617 = nimCopy(null, city_379614, NTI138);
										var on_res_geo_379663 = HEX3Aanonymous_379618;
										geocoding_parameters_379006.searchtext = toJSStr(city_379614);
										geocoder_362955.geocode(geocoding_parameters_379006, on_res_geo_379663, on_err_geo_379417);

									
								}

				var geocoding_parameters_379006 = {m_type: NTI286131, searchtext: null, country: null, state: null, additionaldata: null};
				geocoding_parameters_379006.searchtext = "";
				geocoding_parameters_379006.country = "DEU";
				geocoding_parameters_379006.state = "Hessen";
				geocoding_parameters_379006.additionaldata = "IncludeShapeLevel,district";
				var borders_str_379007 = nimCopy(null, border_data_379003, NTI138);
				var arr_area_379261 = nsuSplitString(nsuJoinSep(map_378809(nsuSplitCharSet(borders_str_379007, ConstSet17, -1), HEX3Aanonymous_379201), makeNimstrLit(",")), makeNimstrLit(","), -1);
				var on_err_geo_379417 = HEX3Aanonymous_379401;
				var on_res_geo_for_map_379503 = HEX3Aanonymous_379418;
				L1: do {
					var city_379614 = null;
					var i_418519 = 0;
					var l_418520 = (arr_area_379261 != null ? arr_area_379261.length : 0);
					L2: do {
							L3: while (true) {
							if (!(i_418519 < l_418520)) break L3;
								city_379614 = arr_area_379261[chckIndx(i_418519, 0, arr_area_379261.length+0-1)-0];
								HEX3Aanonymous_379615();
								i_418519 = addInt(i_418519, 1);
								if (!(((arr_area_379261 != null ? arr_area_379261.length : 0) == l_418520))) {
								failed_assert_impl_15266(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);

			
		}

		var hr_coord_real_378926 = makeNimstrLit("49.95904181908018,8.850935273809228,0 49.95837229749924,8.849427872342858,0 49.95778559567659,8.849229388875756,0 49.95578385330093,8.847823911351952,0 49.95545252239804,8.847308927221093,0 49.954496481908954,8.843854242009911,0 49.954254880224994,8.841982060117516,0 49.95423417145281,8.841568999929223,0 49.95381654264659,8.839605622930321,0 49.95375096424056,8.83937495295504,0 49.95231857151512,8.835775428457055,0 49.951210595147934,8.833259516401085,0 49.95064796810658,8.831430249852929,0 49.9500128474752,8.827310376806054,0 49.949519242504806,8.823447995824523,0 49.94900837329215,8.818169408483215,0 49.94863557341978,8.816560083074279,0 49.9475861953235,8.814328485173888,0 49.946453945946494,8.812075429601379,0 49.94641252168413,8.811710649175353,0 49.95301233813149,8.805423551244445,0 49.95310898144414,8.800981813115783,0 49.95339891021844,8.80079942290277,0 49.95450683623976,8.798015289945312,0 49.954717373816415,8.79680829588861,0 49.95474843665964,8.795612030667968,0 49.954675956660964,8.794501596135802,0 49.95419275388177,8.792087608022399,0 49.95494171612277,8.791873031301208,0 49.95532482133721,8.792146616620727,0 49.956194562401365,8.791889124555297,0 49.95683995533862,8.790891342801757,0 49.95712641039451,8.790006213826842,0 49.957581973961105,8.789019160909362,0 49.958323475233655,8.786170910766941,0 49.95926218423155,8.781128357818943,0 49.95906892211046,8.780591916015965,0 49.95902750869786,8.778295945099217,0 49.95592140123064,8.773296307495457,0 49.95258038643044,8.769584130218817,0 49.95042655153455,8.763575982025458,0 49.94810692930535,8.756666611603094,0 49.94816215970436,8.755937050751044,0 49.957771284920895,8.741517495086981,0 49.95895848626439,8.741345833710028,0 49.96064260539336,8.751388024261786,0 49.95898609524966,8.756108712127997,0 49.95887565921357,8.757095765045477,0 49.959400228128835,8.75851197140534,0 49.95981435744582,8.759799431732489,0 49.96809619574408,8.75825447933994,0 49.97030444532241,8.759198616913181,0 49.9741686382908,8.757911156586033,0 49.97444464020134,8.758597802093846,0 49.97975736843787,8.759777974060398,0 49.98189609340527,8.759327362945896,0 49.98254459122235,8.760035466125828,0 49.98285946959106,8.7597368483313,0 49.98316991554748,8.75999434039673,0 49.98323890326572,8.760605884052126,0 49.98381839619305,8.760444951511232,0 49.98431509886027,8.761035037494509,0 49.98506014324478,8.761185241199342,0 49.98577758248639,8.760906291461794,0 49.98654329910248,8.760917020297853,0 49.98666746821594,8.760380578494875,0 49.98661228198287,8.75975830600342,0 49.98697788959725,8.757891488529054,0 49.988012613066005,8.756196332431642,0 49.98793673410131,8.755863738513796,0 49.993292092207646,8.755792570698787,0 49.998285496266995,8.757595015156795,0 49.99980272626717,8.757165861714412,0 50.0003820196365,8.757595015156795,0 50.002423283493556,8.756779623616268,0 50.00512644547626,8.756607962239315,0 50.00725025182523,8.755363417256405,0 50.00942912444818,8.754805517781307,0 50.01091842358343,8.755449247944881,0 50.049182301224214,8.743452323492022,0 50.05913894304469,8.777145528148395,0 50.06668746128062,8.784355305980426,0 50.06800467465507,8.819138192485724,0 50.06770166316004,8.82396616871253,0 50.06807770132477,8.82432798439217,0 50.068325618019315,8.825003901063923,0 50.06891097179635,8.825347223817829,0 50.06917265705641,8.825411596834186,0 50.070136748325304,8.825518885194782,0 50.0701505209173,8.827010193407062,0 50.06959272777753,8.827267685472492,0 50.07065321781843,8.83553961807442,0 50.071210998623734,8.835346499025349,0 50.07140416774087,8.836743216574092,0 50.073936232779715,8.83771648934595,0 50.07602945551526,8.838660626919193,0 50.07900387800023,8.839862256557865,0 50.08056722240694,8.840680069125881,0 50.083100761542376,8.84145254532217,0 50.08334860057205,8.841774410403957,0 50.08492741254222,8.842509335674038,0 50.08513049521381,8.842664903796901,0 50.08607868631057,8.83959953110758,0 50.08691164399132,8.834460418635047,0 50.08779343421183,8.828789005798626,0 50.08878468558929,8.824754963440228,0 50.09024399058544,8.821364651245432,0 50.090525363498216,8.821492078590751,0 50.09095213047077,8.822393300819755,0 50.09100719690007,8.822682979393363,0 50.09640882095173,8.818963018502956,0 50.096604972478865,8.819665757264858,0 50.096993831904285,8.820271936502223,0 50.11217681163167,8.798985301906214,0 50.113938125422486,8.800358592921839,0 50.11521942843101,8.803628713545748,0 50.11964982839633,8.806804449019381,0 50.12096843847371,8.80766614841852,0 50.121986518947494,8.808266963237855,0 50.1228670035181,8.80989774631891,0 50.1232797250855,8.812558497661684,0 50.12289451839999,8.814618434185121,0 50.12292203326604,8.816463793987367,0 50.123197181056725,8.817236270183656,0 50.12322469574879,8.818223323101137,0 50.12641629270504,8.817665423626039,0 50.12669142040987,8.818223323101137,0 50.12928849190947,8.817365016216428,0 50.134212743072176,8.809511508220908,0 50.134377792993135,8.801529254192587,0 50.13646837604697,8.790542926067587,0 50.137513633319706,8.785135592693564,0 50.13723856783036,8.779814090008017,0 50.13839383225836,8.780071582073447,0 50.13932902588707,8.784792269939658,0 50.14054001453705,8.784496040670803,0 50.14114511476699,8.783466072409084,0 50.142630328335684,8.78230735811465,0 50.1535754800216,8.782779426901271,0 50.15550024768244,8.78256485018008,0 50.15583020007308,8.78406688722842,0 50.1584422427989,8.783337326376369,0 50.15885465755254,8.78604099306338,0 50.15951451375825,8.787199707357814,0 50.158827163346295,8.789474220602443,0 50.15899212834644,8.789860458700588,0 50.15888215174293,8.790632934896877,0 50.15987193206685,8.790461273519924,0 50.16113662154801,8.790976257650783,0 50.1614940277288,8.789431305258205,0 50.16363840869707,8.790590019552639,0 50.17122544585152,8.800460548727443,0 50.172627266527776,8.795739860861147,0 50.17573311485688,8.790246696798647,0 50.179855610511744,8.789774628012026,0 50.183812871672245,8.792821617452944,0 50.18774524967272,8.792723002999992,0 50.188514615702445,8.79203635749218,0 50.197196601646944,8.790062251657105,0 50.20631648134646,8.821390452950965,0 50.20840021167392,8.828061857775708,0 50.21032277151685,8.85475520189192,0 50.224217829202246,8.860248365954448,0 50.236736390725085,8.844627180651713,0 50.24628781880627,8.843082228259135,0 50.25144698945728,8.883594313220073,0 50.275917996066944,8.925308027819682,0 50.281403043384294,8.948997297839213,0 50.29609985378827,8.975433149889994,0 50.30081503249643,8.987449446276713,0 50.31320385569571,9.030193129138041,0 50.34043430149288,9.030360868259919,0 50.369033493137515,9.032398305674747,0 50.375274158062865,9.035831533213809,0 50.37538363608576,9.05986412598736,0 50.38764357598806,9.091964803477595,0 50.4163107018737,9.11805733277447,0 50.428560061063166,9.089389882823298,0 50.438401000429685,9.10054787232525,0 50.444607937260805,9.145445894340781,0 50.424270408049146,9.243292879204063,0 50.41674475532919,9.307751726249961,0 50.41783856689898,9.339680742363242,0 50.41499460428282,9.353756975273399,0 50.379321195694146,9.354443620781211,0 50.23504141054232,9.466023515800686,0 50.23020990271532,9.496579240898342,0 50.20978039216624,9.523015092949123,0 50.17999915339515,9.509968828300686,0 50.155118411100375,9.518613909561964,0 50.14576873912996,9.509859179337354,0 50.106861454912746,9.524186609521053,0 50.09915408998494,9.512170313134334,0 50.095850553954655,9.505990503564021,0 50.09761246818392,9.496377466454646,0 50.095850553954655,9.481271265282771,0 50.0910049557353,9.452775476708553,0 50.08439653211338,9.43286275698199,0 50.083955938140406,9.414666651024959,0 50.12601438979774,9.376214502587459,0 50.13085644703369,9.376901148095271,0 50.13195684626589,9.34771871401324,0 50.14097916552506,9.327462671532771,0 50.13371743240557,9.310296533837459,0 50.14185930070402,9.280084131493709,0 50.13899880216461,9.261888025536678,0 50.14911979805772,9.22137594057574,0 50.14273941968956,9.211419580712459,0 50.13767851437947,9.183610437646053,0 50.128655572656974,9.192193506493709,0 50.124033407001285,9.186700342431209,0 50.118750385375044,9.175370691552303,0 50.11786982508587,9.154084680810115,0 50.11346678069959,9.143441675439021,0 50.125574178483916,9.122155664696834,0 50.125574178483916,9.102242944970271,0 50.11698924860077,9.089196680321834,0 50.11632880560831,9.078210352196834,0 50.11831010725494,9.071343897118709,0 50.11632880560831,9.052117822899959,0 50.112586123233655,9.029801843896053,0 50.11170544957124,9.020188806786678,0 50.09320756112447,8.998216150536678,0 50.07949469607378,8.99941778017535,0 50.078503252565355,8.998301981225154,0 50.069799701897765,8.999503610863826,0 50.069083516630094,8.99864530397906,0 50.068808057910076,8.99641370607867,0 50.065502429864196,8.99040555788531,0 50.056649591833974,8.982507682601181,0 50.05157958417609,8.976842857161728,0 50.04573738943162,8.9780444868004,0 50.041878946410264,8.987142539778915,0 50.0454066778966,9.006711936751572,0 50.045627152506455,9.012720084944931,0 50.04441452962,9.01872823313829,0 50.04287114709482,9.026109672347275,0 50.038902221309996,9.031431175032822,0 50.03603557084246,9.032289481917587,0 50.03239688338311,9.031774497786728,0 50.02699347514931,9.030401206771103,0 50.021037994565475,9.030916190901962,0 50.015853919721614,9.033834434310165,0 50.0107796027006,9.038297630110947,0 50.007580301366,9.042932487288681,0 50.00327745688426,9.053060508528915,0 50.00007765616361,9.058210349837509,0 49.99389812790324,9.063531852523056,0 49.98970442426975,9.052030540267197,0 49.98683483738531,9.046022392073837,0 49.98871112510759,9.025938010970322,0 49.98683483738531,8.960363364974228,0 49.969591302596605,8.908376108388524,0 49.94639928497898,8.891553293447117,0 49.94585146164708,8.891355032112727,0 49.95904181908018,8.850935273809228,0");
		var hr_coord_378927 = makeNimstrLit("8.74344999062572,50.04918999904961,0 8.751160000623477,50.0240599912103,0 8.754709994364463,50.01274999536513,0 8.757490069155791,50.00470163525198,0 8.762733428456755,50.00328437886608,0 8.764625619546589,50.00285518138227,0 8.770820082372893,50.00139911723744,0 8.772673791350965,50.00094266817716,0 8.77914111075552,49.99943225272401,0 8.799229992240086,49.99467000542582,0 8.806542356164457,49.99340340620989,0 8.809790356707138,49.99206374565822,0 8.826786125387034,49.98576635583486,0 8.828778769472731,49.98395187720181,0 8.831507689809753,49.98097186169272,0 8.830959149889964,49.97966245881608,0 8.829928960125969,49.9778595543125,0 8.830465197667758,49.9768960693446,0 8.830997048231009,49.97595153004782,0 8.83394675737425,49.97397788936575,0 8.836460977629683,49.97217362668664,0 8.83910802473485,49.96908500881526,0 8.840122212590229,49.96799437118023,0 8.841363208739749,49.9668289258026,0 8.842263170839054,49.96603842183582,0 8.843115976927399,49.96501359037988,0 8.846351833332184,49.9627537294549,0 8.849460013049532,49.95986999442856,0 8.850210000098501,49.95926998619805,0 8.850310012566743,49.95926999267505,0 8.865430008710506,49.95390999382382,0 8.891260000848778,49.94599000213314,0 8.908000004981322,49.96970998840088,0 8.960089986326672,49.98685999774121,0 9.028550004173386,49.98896999905399,0 9.051090005623092,49.98967000446294,0 9.063509599805697,49.99349370576994,0 9.058420003685276,50.00014000125238,0 9.053349983587822,50.00350000123728,0 9.043370001095513,50.00774999264858,0 9.039590003958708,50.01043999620001,0 9.037680002386232,50.0117099996073,0 9.035770000347792,50.01386000058577,0 9.035669991374673,50.01396999599814,0 9.033520003630585,50.01612999279517,0 9.03276999394412,50.01722999549925,0 9.031890007343058,50.01854999140686,0 9.031080010354554,50.02017000106182,0 9.030590017083911,50.02186000123651,0 9.030160003507783,50.02427999548287,0 9.030019994132037,50.02558000112721,0 9.03012998938997,50.02655999787962,0 9.030250000259972,50.02768999624666,0 9.03161000235999,50.03279999301565,0 9.032170004807355,50.0358999942769,0 9.032050012345229,50.03739999588439,0 9.031490007969513,50.03882000226924,0 9.030510014244126,50.04000000228209,0 9.029080001550227,50.04103999783368,0 9.029060008563725,50.04106000232493,0 9.028230008798136,50.04156999577097,0 9.026240009262718,50.04279999711334,0 9.024160016072742,50.04365000084064,0 9.023260013005588,50.04386000537015,0 9.019740018159242,50.04436999886058,0 9.017760016210493,50.04465999781608,0 9.013460007365307,50.04553999270155,0 9.011000004708681,50.04575999839583,0 9.00992999888183,50.04561998877342,0 9.008480008624115,50.04557998927629,0 9.005680013424682,50.04550000056366,0 8.986750005661659,50.04149000275402,0 8.978420013141989,50.04530999078934,0 8.976519982950132,50.0514200003693,0 8.982709988738773,50.05690999839843,0 8.986820008613575,50.06226000595279,0 8.987800012679832,50.06321000762544,0 8.989760009887313,50.06513000580236,0 8.990918897321578,50.0669106073983,0 8.9955775301496,50.06892022836311,0 8.998568988963262,50.06893433107653,0 8.999404770882135,50.06967750682338,0 8.99907863971808,50.070980702649,0 8.998540008233778,50.07845000669163,0 8.999480727122569,50.07942879191786,0 8.998936147196799,50.08570047236539,0 8.997979981825159,50.09309999923527,0 9.009470009726822,50.10552999340482,0 9.014060011409995,50.1093099951841,0 9.018390009198136,50.11148999968705,0 9.022280002796611,50.11211998982098,0 9.030180002730933,50.11276999957308,0 9.036709983650752,50.11439000225139,0 9.03690999604585,50.11440999933917,0 9.03949998805237,50.11470999733926,0 9.041409993836245,50.11494000056713,0 9.043569987178085,50.11518999631258,0 9.047210001617215,50.1158499945509,0 9.05294999694393,50.11569999345475,0 9.055779984887241,50.11657998906307,0 9.062110001201511,50.11675000135271,0 9.065399990762362,50.11700000561905,0 9.071007549127517,50.11922371673292,0 9.076630005563471,50.1161700007584,0 9.077190003068765,50.115860002529,0 9.090149996865359,50.11705999751791,0 9.097210008411061,50.12491999822693,0 9.097229998645521,50.12493000896303,0 9.097450000598039,50.12500001156322,0 9.100480005609697,50.12522999907779,0 9.101720017827175,50.12503999964554,0 9.104050013666759,50.12524999543405,0 9.106250000414615,50.1255599977141,0 9.106320013833074,50.12556999995883,0 9.11103000773252,50.12645000491829,0 9.112480002104718,50.12650000158009,0 9.118190018941625,50.12683999405951,0 9.11824001589531,50.12684999758118,0 9.119370021092625,50.12667000066124,0 9.120230000806123,50.12640000226687,0 9.121240007930481,50.12608999931724,0 9.122669997795143,50.1251799912294,0 9.125470008557192,50.12341000006478,0 9.129070017631035,50.12185001116103,0 9.134449996804847,50.11918999923478,0 9.134810008978569,50.11920999602372,0 9.134890001642818,50.11917000907523,0 9.138790008249355,50.11738000700088,0 9.143799995794254,50.11436000115628,0 9.153480013609004,50.1177800012857,0 9.174246170565004,50.11909431140469,0 9.178573419936008,50.12093255348469,0 9.187279993149794,50.12424999394975,0 9.190869996641968,50.12840999555607,0 9.190140006470225,50.12852999126118,0 9.189239992099489,50.12886999244492,0 9.18859001078415,50.13008000182714,0 9.188529991233642,50.13068000290921,0 9.188270001636816,50.13122999393559,0 9.187689999246999,50.13169000225765,0 9.186230008527531,50.13220000137167,0 9.184630011698792,50.13358999951587,0 9.184889997736651,50.13418000049787,0 9.184539995171448,50.13461999983619,0 9.183930004443509,50.13530000248941,0 9.183950002803973,50.135519998149,0 9.183550012978392,50.13613999783406,0 9.183569996231322,50.13690999406499,0 9.18340000738119,50.13743999921365,0 9.183380014260379,50.13787000106181,0 9.190900001716518,50.139159993859,0 9.193700011750751,50.13930999759451,0 9.19464001127551,50.13981000038044,0 9.195470000586393,50.14028998889953,0 9.196120007766066,50.14010998828039,0 9.196500004917223,50.14001998961674,0 9.197040001756861,50.14030999242293,0 9.199190010294648,50.14073999922731,0 9.200440003999781,50.14084998669727,0 9.201030013515277,50.14057999207999,0 9.203099982949214,50.14095000662204,0 9.205299986371029,50.14180000860304,0 9.206359985346644,50.142070008102,0 9.207580000543322,50.14207999782826,0 9.209859987405412,50.14242999853374,0 9.210280003353484,50.1423899976447,0 9.210799991009644,50.14220999766564,0 9.21077998816282,50.1435000057295,0 9.211479992867652,50.14477000460019,0 9.214099996581536,50.14445000468506,0 9.218959999344854,50.14661000455769,0 9.221479995862085,50.14939999389495,0 9.225630001631478,50.14855000094843,0 9.23032000616189,50.14765999014259,0 9.232970002625747,50.14675999789494,0 9.233769992622126,50.14662999691726,0 9.235819988502438,50.14626998818617,0 9.240770008871321,50.14369999990418,0 9.250599997697448,50.14088999946022,0 9.253009998704444,50.13936000061953,0 9.257409988922282,50.13877999779094,0 9.258539987369192,50.13882999185971,0 9.261029985191303,50.13894999352718,0 9.26667000168456,50.13956998800712,0 9.270219998473655,50.14184999133448,0 9.271399995864714,50.14201999982645,0 9.276349996686779,50.14272000476213,0 9.281169993334959,50.14154000700376,0 9.281790004285499,50.14151999702619,0 9.28505000417664,50.14177000501881,0 9.294040000079619,50.13933999639883,0 9.298069993519123,50.13708999386204,0 9.304220003766982,50.13527001045085,0 9.307460002912588,50.13401000172517,0 9.3099899963248,50.13394000197258,0 9.313210010638157,50.13483999891268,0 9.317820007007097,50.13657000315733,0 9.32087000656426,50.13792000208673,0 9.327880001083775,50.14102000396739,0 9.332359997806428,50.13920999562789,0 9.335839993928891,50.13698998995007,0 9.336390008811645,50.13671999110127,0 9.339360000403303,50.13273000018819,0 9.341829993133189,50.1314900069315,0 9.349580011888042,50.13060000490764,0 9.357900000002719,50.1309800011009,0 9.364500003588615,50.1308599976779,0 9.373790012600809,50.13085001035299,0 9.374940014378062,50.13078000272372,0 9.376428136780461,50.13060459037479,0 9.375980001360301,50.12583000875451,0 9.380379996288745,50.12133000326065,0 9.382299998223088,50.11936999839725,0 9.384039990002806,50.11687999723922,0 9.386960003003646,50.1104799943284,0 9.392690004434337,50.10208999192354,0 9.39389999043634,50.09908999048587,0 9.39441999471242,50.09769998717655,0 9.395280005887983,50.09654000569314,0 9.398049991407143,50.09346000849757,0 9.399579989575344,50.09215000204925,0 9.401979985879303,50.08986000850655,0 9.404899991283124,50.08774999576386,0 9.408080014793335,50.08628000072305,0 9.410360008182412,50.08474000191088,0 9.412109999917282,50.08400999347561,0 9.414540018844249,50.08372999722369,0 9.416490008385686,50.08366999838898,0 9.419320007524787,50.08447000100686,0 9.421189997530622,50.08477000057801,0 9.421729983690359,50.0848199989533,0 9.422609992020972,50.0848999888351,0 9.424210000439418,50.08487999332674,0 9.426209991743331,50.08466000872539,0 9.426650001161059,50.08445000438933,0 9.427099982830001,50.08406000313204,0 9.427139990696315,50.08406000087415,0 9.427652721408091,50.08399998652941,0 9.433353179705726,50.08402470953537,0 9.435354143826626,50.08505389047933,0 9.436088619491672,50.08522879361796,0 9.438430526576967,50.08697187563428,0 9.440104382080714,50.08699613917442,0 9.445369991346254,50.08990999762638,0 9.447630008726817,50.08999999740072,0 9.450919994621692,50.09031000114513,0 9.452070007349786,50.0907899928403,0 9.454410007723135,50.09108999360934,0 9.460950000938215,50.09060999515631,0 9.462300008199286,50.0910400032701,0 9.463400013428359,50.09106000139991,0 9.464200003484436,50.09124000726924,0 9.465530012619313,50.09153000694008,0 9.468800008351925,50.09136999634158,0 9.470470017914517,50.09143000256835,0 9.472329999587991,50.09161000390467,0 9.473620019051696,50.09215000133324,0 9.474920003056653,50.09292999912699,0 9.476870017014669,50.09377000009614,0 9.478919993936698,50.09430999575569,0 9.481419984146658,50.0947799948108,0 9.483559984403359,50.09436999910113,0 9.485509981915525,50.09412999558609,0 9.48570999585527,50.09412000396971,0 9.487359987494594,50.09400999892856,0 9.490429987404328,50.09412999491645,0 9.493209983692267,50.09459999267533,0 9.495159986345893,50.09531999217066,0 9.496829992324216,50.09657999894574,0 9.498319988002368,50.09723999301944,0 9.49989998994757,50.09718000287389,0 9.501569988519432,50.09664000069188,0 9.502680008048856,50.09603999797577,0 9.504629999438921,50.09574000956214,0 9.506760006872188,50.09622000084823,0 9.507140003812562,50.09742000406875,0 9.507229996886643,50.09819000714014,0 9.50669001130621,50.09907000222062,0 9.507150006893196,50.09931999902311,0 9.50923999463094,50.09956000551333,0 9.512149998788429,50.09941000120356,0 9.512820008669731,50.0990800014653,0 9.513100009864747,50.09966999606637,0 9.518980005320945,50.10612000219624,0 9.523749987770032,50.10609999798064,0 9.509789996972424,50.14568999412518,0 9.510159999038692,50.17993000361417,0 9.523900010995279,50.20862999333181,0 9.497610010511844,50.23025999464183,0 9.465759992135864,50.23500999995167,0 9.427309998664841,50.28948999496187,0 9.39269000551494,50.33608999941583,0 9.354189991318192,50.3790699957637,0 9.352780014398681,50.43896001016936,0 9.340660001490294,50.4547299998002,0 9.312470000603268,50.45978998838441,0 9.299499989859983,50.45929999898711,0 9.289360011907432,50.45382000673616,0 9.262010012800003,50.40678999774384,0 9.261579990204883,50.37911000208434,0 9.163230003564165,50.3586100105654,0 9.131989998719183,50.34574999621018,0 9.062800000324119,50.32285000000135,0 9.054520002404079,50.31968000467632,0 9.043719996102452,50.32165000058219,0 9.029761680801087,50.32841918451295,0 9.031495109187416,50.31272183455483,0 8.995839452582921,50.30250677011594,0 8.987631336027818,50.30006956026648,0 8.975659492935346,50.29547621167906,0 8.958677331367527,50.28630458701393,0 8.94929415829554,50.28125262914848,0 8.925608601416379,50.27595619488345,0 8.912707196248872,50.26838770369456,0 8.900321281931532,50.26109642163877,0 8.883946027953995,50.2514976812132,0 8.857519269942278,50.24799938088881,0 8.843243933535447,50.24615324039392,0 8.843337919829239,50.24519622029486,0 8.844352709690199,50.23641778130721,0 8.848844132593994,50.23205190395576,0 8.859845616898108,50.22335260208263,0 8.858916319673716,50.22092275483271,0 8.854913957622637,50.21029795607451,0 8.828012506624319,50.20845601508016,0 8.792170003634453,50.19689999140842,0 8.792079997664727,50.19360999114326,0 8.792090007857588,50.19360999589294,0 8.792080005707826,50.1933399969401,0 8.792139995449546,50.18931998969914,0 8.792109992014069,50.18893999697589,0 8.792080000426376,50.18849999434099,0 8.792679986357536,50.18761999891223,0 8.792780002183326,50.18624999797653,0 8.792809992943038,50.1838499994514,0 8.78973001669163,50.17977998885446,0 8.789990009297167,50.17618999887759,0 8.790029994197257,50.17608999350487,0 8.790400013363707,50.1756399975125,0 8.795660002988884,50.17271001146669,0 8.800430009638776,50.17120000991109,0 8.800030003318794,50.17109000869478,0 8.80016999786298,50.17019999937831,0 8.800160007579409,50.16933000575472,0 8.798210009160762,50.16943000004811,0 8.798119992086578,50.16853000305719,0 8.797839987310598,50.16741000349072,0 8.795570001629894,50.16727000126137,0 8.794420002285929,50.16686998641285,0 8.794869986905674,50.16460000764227,0 8.794839990093175,50.16445000317964,0 8.795069987661732,50.1639400006493,0 8.794959989515347,50.16379001174276,0 8.794649984336918,50.1638499933831,0 8.793969990776221,50.1630399881526,0 8.791709999964247,50.16336999710949,0 8.790470002191894,50.16343999740508,0 8.790340002022822,50.16295999319533,0 8.789559999991919,50.16145999765807,0 8.790999987988663,50.16111999166834,0 8.790610009406777,50.15989999880812,0 8.790650015217244,50.1588999906634,0 8.789859999743616,50.15894999130114,0 8.789490009437273,50.1588699891094,0 8.787180014898484,50.1593899986436,0 8.786940002233044,50.15923998964287,0 8.786050003904881,50.15883999909401,0 8.785669999219367,50.15878999189965,0 8.785020015562498,50.15871999044146,0 8.783420004936072,50.15842000281186,0 8.783420004789116,50.15770999268128,0 8.783470016746801,50.15722999454914,0 8.783580009619461,50.15699999220811,0 8.784100012663544,50.15583999017743,0 8.782219996826949,50.15551999603872,0 8.782360012243217,50.15504999142234,0 8.782400002741433,50.15412000308445,0 8.782440000873432,50.1538799934948,0 8.782640002335953,50.15348999380655,0 8.782690004419679,50.15288999409114,0 8.782599997613589,50.15168999527978,0 8.782499994394218,50.15002000083744,0 8.782429997799444,50.14841999909195,0 8.782339993684557,50.14642999456324,0 8.782259999824177,50.14484999042134,0 8.782299991382095,50.14447000212288,0 8.782329990151951,50.14413999428914,0 8.782350006299202,50.14389999847396,0 8.782369988407282,50.14374000265145,0 8.78239000173469,50.14349999358076,0 8.782439996314656,50.14299999406526,0 8.782439988694478,50.1429199972104,0 8.782470000856153,50.14267999368212,0 8.782480003228939,50.14251999070935,0 8.782579988275536,50.14241999306769,0 8.783599991220438,50.14111999489931,0 8.784448782893042,50.1405347806952,0 8.784710985537078,50.14005921419489,0 8.784836043163592,50.13976715250182,0 8.784909988556111,50.13939000291317,0 8.784920000629107,50.13928999326227,0 8.784719982911794,50.13919999095377,0 8.77993000857648,50.13822000388137,0 8.779900001379451,50.13804999861398,0 8.779870002850776,50.13781999822846,0 8.779780007883684,50.13723999143221,0 8.781680019517596,50.13739999790258,0 8.785470012109293,50.13728999853527,0 8.790470012031696,50.13658999710204,0 8.795220001648541,50.13552000122132,0 8.796740008487991,50.13528000323189,0 8.79849000489105,50.13476000552564,0 8.801570014121655,50.13428000627525,0 8.809370015405136,50.13413999475548,0 8.806000008358936,50.12600000470178,0 8.800339551601194,50.11398120331311,0 8.798730684364719,50.11222326889193,0 8.803275711144671,50.10682728967874,0 8.806256200740775,50.10212970751106,0 8.809628959422538,50.09681686079544,0 8.812426567410549,50.0923736430835,0 8.814529068369041,50.08870301933311,0 8.815564740819466,50.08674190292712,0 8.816983190135087,50.08430003950284,0 8.816736771584527,50.08396773922301,0 8.819257293064814,50.08161630263398,0 8.825500005361317,50.07011000106249,0 8.825430011347251,50.06916000981824,0 8.825340007617122,50.06887000547547,0 8.825010007651045,50.06831000400231,0 8.824340007935508,50.06807000324666,0 8.824190003312365,50.0678600107172,0 8.823980000479738,50.06767000416784,0 8.823560009647329,50.06769000265334,0 8.819140000891526,50.06794999086822,0 8.784360013267232,50.06681998757962,0 8.778350008752462,50.05852000117123,0 8.769430002590275,50.05571000525481,0 8.74344999062572,50.04918999904961,0");
		show_border_378780(hr_coord_378927, makeNimstrLit("rgba(0, 0, 255, 1)"), false);
		show_border_378780(hr_coord_real_378926, makeNimstrLit("rgba(255, 0, 0, 1)"), true);
		show_border_district_379001(makeNimstrLit("63110 Rodgau Rollwald,63322 R\xC3\xB6dermark Waldacker,63128 Dietzenbach ,63150 Heusenstamm ,63179 Obertshausen ,63073 Offenbach am Main Bieber,63075 Offenbach am Main Waldheim,63075 Offenbach am Main Biebernsee,63477 Maintal Bischofsheim,61138 Niederdorfelden ,61137 Sch\xC3\xB6neck Oberdorfelden,61137 Sch\xC3\xB6neck Kilianst\xC3\xA4dten,61130 Nidderau Heldenbergen,61130 Nidderau Eichen,63674 Altenstadt H\xC3\xB6chst,63674 Altenstadt Oberau,63674 Altenstadt Waldsiedlung,63674 Altenstadt Lindheim,63674 Altenstadt Enzheim,63654 B\xC3\xBCdingen D\xC3\xBCdelsheim,63654 B\xC3\xBCdingen Rohrbach,63654 B\xC3\xBCdingen Aulendiebach,63654 B\xC3\xBCdingen Dudenrod,63699 Kefenrod Bindsachsen,63699 Kefenrod ,63699 Kefenrod Burgbracht,63633 Birstein B\xC3\xB6ssges\xC3\xA4\xC3\x9F,63633 Birstein Illnhausen,63633 Birstein Kirchbracht,63633 Birstein V\xC3\xB6lzberg,63633 Birstein Lichenroth,63633 Birstein Wettges,63628 Bad Soden-Salm\xC3\xBCnster Sch\xC3\xB6nhof,63628 Bad Soden-Salm\xC3\xBCnster Kerbersdorf,63628 Bad Soden-Salm\xC3\xBCnster Ahl,63628 Bad Soden-Salm\xC3\xBCnster Alsberg,63637 Jossgrund Burgjo\xC3\x9F,63637 Jossgrund Oberndorf,63637 Jossgrund Pfaffenhausen,63639 Fl\xC3\xB6rsbachtal Lohrhaupten,63639 Fl\xC3\xB6rsbachtal Kempfenbrunn,63639 Fl\xC3\xB6rsbachtal Mosborn,63639 Fl\xC3\xB6rsbachtal Fl\xC3\xB6rsbach,63599 Biebergem\xC3\xBCnd Ro\xC3\x9Fbach,63599 Biebergem\xC3\xBCnd L\xC3\xBCtzel,63589 Linsengericht Waldrode,63579 Freigericht Horbach,63579 Freigericht Neuses,63579 Freigericht Somborn,63538 Gro\xC3\x9Fkrotzenburg ,63512 Hainburg Klein-Krotzenburg,63500 Seligenstadt ,63533 Mainhausen Mainflingen,63533 Mainhausen Zellhausen,63110 Rodgau Nieder-Roden,63517 Rodenbach Oberrodenbach,63599 Biebergem\xC3\xBCnd Bieber"), makeNimstrLit("rgba(0, 0, 255, 1)"), makeNimstrLit("rgba(0, 0, 255, 0.1)"));
		show_border_district_379001(makeNimstrLit("63688 Gedern Ober-Seemen, Hirzenhain, Merkenfritz, Eckartsborn, Bobenhausen, Wippenbach, Selters (Ortenberg), Bleichenbach, 63654 Rohrbach, Enzheim, Lindheim, Oberau, 63674 H\xC3\xB6chst, Eichen, Nidderau Heldenbergen, Windecken, Sch\xC3\xB6neck Kilianst\xC3\xA4dten, Niederdorfelden, Wettges, Sch\xC3\xB6nhof, Alsberg, Burgioss, Jossgrund, Lohrhaupten, Kempfenbrunn, Mosborn, L\xC3\xBCtzel, Waldrode, Horbach, Neuses, Rodenbach, Gro\xC3\x9Fkrotzenburg, Froschhausen, Mainhausen, Zellhausen, R\xC3\xB6dermark, Waldacker, Dietzenbach, Heusenstamm, Obertshausen, Waldheim, M\xC3\xBChlheim, 63477 Bischofsheim, Niederdorfelden"), makeNimstrLit("rgba(255, 0, 0, 1)"), makeNimstrLit("rgba(255, 0, 0, 0.1)"));

	
}

function HEX3Aanonymous_417416(e_417419) {
		map.getViewPort().resize();

	
}
map.addEventListener("tap", load_links_311868, false);
geo_area_378924();
window.addEventListener("resize", HEX3Aanonymous_417416, false);

function raw_insert_376922(t_376928, data_376931, data_376931_Idx, key_376932, val_376933, hc_376934, h_376935) {
		data_376931[data_376931_Idx][chckIndx(h_376935, 0, data_376931[data_376931_Idx].length+0-1)-0].Field1 = key_376932;
		data_376931[data_376931_Idx][chckIndx(h_376935, 0, data_376931[data_376931_Idx].length+0-1)-0].Field2 = val_376933;
		data_376931[data_376931_Idx][chckIndx(h_376935, 0, data_376931[data_376931_Idx].length+0-1)-0].Field0 = hc_376934;

	
}

function enlarge_375948(t_375954) {
		var n_375962 = null;
		n_375962 = new Array(chckRange(mulInt((t_375954.data != null ? t_375954.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_375954.data != null ? t_375954.data.length : 0), 2), 0, 2147483647);++i) {n_375962[i]={Field0: 0, Field1: null, Field2: null};}		var Tmp1 = t_375954.data; t_375954.data = n_375962; n_375962 = Tmp1;		L2: do {
			var i_376121 = 0;
			var colontmp__418556 = 0;
			colontmp__418556 = (n_375962 != null ? (n_375962.length-1) : -1);
			var res_418557 = 0;
			L3: do {
					L4: while (true) {
					if (!(res_418557 <= colontmp__418556)) break L4;
						i_376121 = res_418557;
						var eh_376277 = n_375962[chckIndx(i_376121, 0, n_375962.length+0-1)-0].Field0;
						if (is_filled_183018(eh_376277)) {
						var j_376284 = (eh_376277 & (t_375954.data != null ? (t_375954.data.length-1) : -1));
						L5: do {
								L6: while (true) {
								if (!is_filled_183018(t_375954.data[chckIndx(j_376284, 0, t_375954.data.length+0-1)-0].Field0)) break L6;
									j_376284 = next_try_183035(j_376284, (t_375954.data != null ? (t_375954.data.length-1) : -1));
								}
						} while(false);
						raw_insert_376922(t_375954, t_375954, "data", n_375962[chckIndx(i_376121, 0, n_375962.length+0-1)-0].Field1, n_375962[chckIndx(i_376121, 0, n_375962.length+0-1)-0].Field2, eh_376277, j_376284);
						}
						
						res_418557 = addInt(res_418557, 1);
					}
			} while(false);
		} while(false);

	
}

function raw_get_known_hc_377428(t_377432, key_377433, hc_377434) {
	var result_377435 = 0;

	BeforeRet: do {
		if (((t_377432.data != null ? t_377432.data.length : 0) == 0)) {
		result_377435 = -1;
		break BeforeRet;
		}
		
		var h_377574 = (hc_377434 & (t_377432.data != null ? (t_377432.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_183018(t_377432.data[chckIndx(h_377574, 0, t_377432.data.length+0-1)-0].Field0)) break L2;
					if (((t_377432.data[chckIndx(h_377574, 0, t_377432.data.length+0-1)-0].Field0 == hc_377434) && (t_377432.data[chckIndx(h_377574, 0, t_377432.data.length+0-1)-0].Field1 == key_377433))) {
					result_377435 = h_377574;
					break BeforeRet;
					}
					
					h_377574 = next_try_183035(h_377574, (t_377432.data != null ? (t_377432.data.length-1) : -1));
				}
		} while(false);
		result_377435 = subInt(-1, h_377574);
	} while (false);

	return result_377435;

}

function HEX5BHEX5DHEX3D_374670(t_374676, key_374677, val_374678) {
		if (((t_374676.data != null ? t_374676.data.length : 0) == 0)) {
		if (!(is_power_of_two_143062(64))) {
		failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_374676.counter = 0;
		t_374676.data = new Array(64); for (var i=0;i<64;++i) {t_374676.data[i]={Field0: 0, Field1: null, Field2: null};}		}
		
		var hc_375201 = [0];
		var index_375210 = raw_get_314379(t_374676, key_374677, hc_375201, 0);
		if ((0 <= index_375210)) {
		t_374676.data[chckIndx(index_375210, 0, t_374676.data.length+0-1)-0].Field2 = val_374678;
		}
		else {
			if (((t_374676.data != null ? t_374676.data.length : 0) == 0)) {
			if (!(is_power_of_two_143062(64))) {
			failed_assert_impl_15266(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			t_374676.counter = 0;
			t_374676.data = new Array(64); for (var i=0;i<64;++i) {t_374676.data[i]={Field0: 0, Field1: null, Field2: null};}			}
			
			if (must_rehash_183053((t_374676.data != null ? t_374676.data.length : 0), t_374676.counter)) {
			enlarge_375948(t_374676);
			index_375210 = raw_get_known_hc_377428(t_374676, key_374677, hc_375201[0]);
			}
			
			index_375210 = subInt(-1, index_375210);
			raw_insert_376922(t_374676, t_374676, "data", key_374677, val_374678, hc_375201[0], index_375210);
			t_374676.counter = addInt(t_374676.counter, 1);
		}
		

	
}

function display_sector_342833(sect_name_342835, show_342836) {
		var Tmp1;
		var Tmp2;
		var Tmp3;
		var Tmp4;
										var Tmp14;
		var Tmp15;

	BeforeRet: do {
		var sector_374226 = (Tmp1 = HEX5BHEX5D_322797(all_sectors_299829[0], sect_name_342835), Tmp1)[0][Tmp1[1]];
		if (!(show_342836)) {
		main_sector_group_362931[0].removeObject((Tmp2 = HEX5BHEX5D_314367(sector_grp_300629[0], sector_374226), Tmp2)[0][Tmp2[1]]);
		(Tmp3 = HEX5BHEX5D_314367(sector_grp_300629[0], sector_374226), Tmp3)[0][Tmp3[1]].removeAll();
		sector_374226.shownOnMap = false;
		break BeforeRet;
		}
		
		HEX5BHEX5DHEX3D_374670(sector_grp_300629[0], sector_374226, function(){return new H.map.Group()}());
		(Tmp4 = HEX5BHEX5D_314367(sector_grp_300629[0], sector_374226), Tmp4)[0][Tmp4[1]].setZIndex(-99);
		sector_374226.shownOnMap = true;
		L5: do {
			var n_378285 = null;
			var links_378286 = null;
			var colontmp__418549 = {data: null, counter: 0, first: 0, last: 0};
			nimCopy(colontmp__418549, sector_374226.streets, NTI298069);
			var l_418550 = len_333348(colontmp__418549);
			if ((0 < colontmp__418549.counter)) {
			var h_418551 = colontmp__418549.first;
			L6: do {
					L7: while (true) {
					if (!(0 <= h_418551)) break L7;
						var nxt_418553 = colontmp__418549.data[chckIndx(h_418551, 0, colontmp__418549.data.length+0-1)-0].Field1;
						if (is_filled_183018(colontmp__418549.data[chckIndx(h_418551, 0, colontmp__418549.data.length+0-1)-0].Field0)) {
						n_378285 = colontmp__418549.data[chckIndx(h_418551, 0, colontmp__418549.data.length+0-1)-0].Field2;
						links_378286 = colontmp__418549.data[chckIndx(h_418551, 0, colontmp__418549.data.length+0-1)-0].Field3;
						L8: do {
							var link_378293 = null;
							var i_418546 = 0;
							var l_418547 = (links_378286 != null ? links_378286.length : 0);
							L9: do {
									L10: while (true) {
									if (!(i_418546 < l_418547)) break L10;
										link_378293 = links_378286[chckIndx(i_418546, 0, links_378286.length+0-1)-0];
										var ln_str_378294 = function(){return new H.geo.LineString();}();
										L11: do {
											var c_378301 = null;
											var colontmp__418540 = null;
											colontmp__418540 = link_378293.geometry;
											var i_418541 = 0;
											var l_418542 = (colontmp__418540 != null ? colontmp__418540.length : 0);
											L12: do {
													L13: while (true) {
													if (!(i_418541 < l_418542)) break L13;
														c_378301 = colontmp__418540[chckIndx(i_418541, 0, colontmp__418540.length+0-1)-0];
														ln_str_378294.pushLatLngAlt(c_378301.lat, c_378301.lng, 1.0000000000000000e+000);
														i_418541 = addInt(i_418541, 1);
														if (!(((colontmp__418540 != null ? colontmp__418540.length : 0) == l_418542))) {
														failed_assert_impl_15266(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
														}
														
													}
											} while(false);
										} while(false);
										var p_opt_378305 = {style: {strokeColor: "rgba(255, 0, 0, 0.2)", fillColor: "rgba(255, 0, 0, 0.4)", lineWidth: 10, m_type: NTI202076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, zIndex: -99, m_type: NTI202081};
										var pl_378306 = function(ls, options){return new H.map.Polyline(ls, options)}(ln_str_378294, p_opt_378305);
										(Tmp14 = HEX5BHEX5D_314367(sector_grp_300629[0], sector_374226), Tmp14)[0][Tmp14[1]].addObject(pl_378306);
										i_418546 = addInt(i_418546, 1);
										if (!(((links_378286 != null ? links_378286.length : 0) == l_418547))) {
										failed_assert_impl_15266(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						if (!((len_333348(colontmp__418549) == l_418550))) {
						failed_assert_impl_15266(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
						}
						
						}
						
						h_418551 = nxt_418553;
					}
			} while(false);
			}
			
		} while(false);
		main_sector_group_362931[0].addObject((Tmp15 = HEX5BHEX5D_314367(sector_grp_300629[0], sector_374226), Tmp15)[0][Tmp15[1]]);
	} while (false);

	
}

function sys_fatal_24241(message_24245) {
		var e_24403 = null;
		e_24403 = {m_type: NTI3686, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_24403.message = nimCopy(null, message_24245, NTI138);
		raiseException(e_24403, "NilAccessError");

	
}

function chckNilDisp(p_24239, p_24239_Idx) {
		if ((p_24239 == null && p_24239_Idx == 0)) {
		sys_fatal_24241(makeNimstrLit("cannot dispatch; dispatcher is nil"));
		}
		

	
}

function nsuToLowerAsciiChar(c_148380) {
	var result_148381 = 0;

		if ((ConstSet19[c_148380] != undefined)) {
		result_148381 = chckRange(addInt(c_148380, 32), 0, 255);
		}
		else {
			result_148381 = c_148380;
		}
		

	return result_148381;

}

function ntgetDateStr(dt_168348) {
	var result_168349 = null;

		result_168349 = nimCopy(null, (cstrToNimstr((dt_168348.year)+"") || []).concat([45],nsuIntToStr(dt_168348.month, 2) || [],[45],nsuIntToStr(dt_168348.monthday, 2) || []), NTI138);

	return result_168349;

}

function ntgetClockStr(dt_168369) {
	var result_168370 = null;

		result_168370 = nimCopy(null, (nsuIntToStr(dt_168369.hour, 2) || []).concat([58],nsuIntToStr(dt_168369.minute, 2) || [],[58],nsuIntToStr(dt_168369.second, 2) || []), NTI138);

	return result_168370;

}

function substitute_log_175447(frmt_175449, level_175450, args_175452) {
	var result_175453 = null;

		var msg_len_175455 = 0;
		L1: do {
			var arg_175461 = null;
			var i_418566 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_418566 < (args_175452 != null ? args_175452.length : 0))) break L3;
						arg_175461 = args_175452[chckIndx(i_418566, 0, args_175452.length+0-1)-0];
						msg_len_175455 = addInt(msg_len_175455, (arg_175461 != null ? arg_175461.length : 0));
						i_418566 = addInt(i_418566, 1);
					}
			} while(false);
		} while(false);
		result_175453 = nimCopy(null, mnewString(0), NTI138);
		var i_175469 = 0;
		L4: do {
				L5: while (true) {
				if (!(i_175469 < (frmt_175449 != null ? frmt_175449.length : 0))) break L5;
					if (!((frmt_175449[chckIndx(i_175469, 0, frmt_175449.length+0-1)-0] == 36))) {
					if (result_175453 != null) { addChar(result_175453, frmt_175449[chckIndx(i_175469, 0, frmt_175449.length+0-1)-0]); } else { result_175453 = [frmt_175449[chckIndx(i_175469, 0, frmt_175449.length+0-1)-0]]; };
					i_175469 = addInt(i_175469, 1);
					}
					else {
						i_175469 = addInt(i_175469, 1);
						var v_175482 = [];
						var app_175601 = [];
						L6: do {
								L7: while (true) {
								if (!(ConstSet18[frmt_175449[chckIndx(i_175469, 0, frmt_175449.length+0-1)-0]] != undefined)) break L7;
									if (v_175482 != null) { addChar(v_175482, nsuToLowerAsciiChar(frmt_175449[chckIndx(i_175469, 0, frmt_175449.length+0-1)-0])); } else { v_175482 = [nsuToLowerAsciiChar(frmt_175449[chckIndx(i_175469, 0, frmt_175449.length+0-1)-0])]; };
									i_175469 = addInt(i_175469, 1);
								}
						} while(false);
						switch (toJSStr(v_175482)) {
						case "date":
							if (result_175453 != null) { result_175453 = (result_175453).concat(ntgetDateStr(now_168236())); } else { result_175453 = ntgetDateStr(now_168236()).slice(); };
							break;
						case "time":
							if (result_175453 != null) { result_175453 = (result_175453).concat(ntgetClockStr(now_168236())); } else { result_175453 = ntgetClockStr(now_168236()).slice(); };
							break;
						case "datetime":
							if (result_175453 != null) { result_175453 = (result_175453).concat((ntgetDateStr(now_168236()) || []).concat(makeNimstrLit("T") || [],ntgetClockStr(now_168236()) || [])); } else { result_175453 = (ntgetDateStr(now_168236()) || []).concat(makeNimstrLit("T") || [],ntgetClockStr(now_168236()) || []).slice(); };
							break;
						case "app":
							if (result_175453 != null) { result_175453 = (result_175453).concat(app_175601); } else { result_175453 = app_175601.slice(); };
							break;
						case "appdir":
							break;
						case "appname":
							break;
						case "levelid":
							if (result_175453 != null) { addChar(result_175453, level_names_175216[chckIndx(level_175450, 0, level_names_175216.length+0-1)-0][chckIndx(0, 0, level_names_175216[chckIndx(level_175450, 0, level_names_175216.length+0-1)-0].length+0-1)-0]); } else { result_175453 = [level_names_175216[chckIndx(level_175450, 0, level_names_175216.length+0-1)-0][chckIndx(0, 0, level_names_175216[chckIndx(level_175450, 0, level_names_175216.length+0-1)-0].length+0-1)-0]]; };
							break;
						case "levelname":
							if (result_175453 != null) { result_175453 = (result_175453).concat(level_names_175216[chckIndx(level_175450, 0, level_names_175216.length+0-1)-0]); } else { result_175453 = level_names_175216[chckIndx(level_175450, 0, level_names_175216.length+0-1)-0].slice(); };
							break;
						default: 
							break;
						}
					}
					
				}
		} while(false);
		L8: do {
			var arg_176006 = null;
			var i_418571 = 0;
			L9: do {
					L10: while (true) {
					if (!(i_418571 < (args_175452 != null ? args_175452.length : 0))) break L10;
						arg_176006 = args_175452[chckIndx(i_418571, 0, args_175452.length+0-1)-0];
						if (result_175453 != null) { result_175453 = (result_175453).concat(arg_176006); } else { result_175453 = arg_176006.slice(); };
						i_418571 = addInt(i_418571, 1);
					}
			} while(false);
		} while(false);

	return result_175453;

}

function log_176041(logger_176043, level_176044, args_176046) {
			var Tmp1;

			if (!(level_175401[0] <= level_176044)) Tmp1 = false; else {				Tmp1 = (logger_176043.levelThreshold <= level_176044);			}		if (Tmp1) {
		var ln_176057 = substitute_log_175447(logger_176043.fmtStr, level_176044, args_176046);
		var cln_176201 = toJSStr(ln_176057);
		console.log(cln_176201);
		}
		

	
}

function log_176020(logger_176022, level_176023, args_176025) {
	
}

function log_176039(logger_176022, level_176023, args_176025) {
		chckNilDisp(logger_176022);
		if (isObj(logger_176022.m_type, NTI175227)) {
		log_176041(logger_176022, level_176023, args_176025);
		}
		else {
		if (isObj(logger_176022.m_type, NTI175223)) {
		log_176020(logger_176022, level_176023, args_176025);
		}
		}

	
}
