/* Generated by the Nim Compiler v1.2.0 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI10512202 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI10512223 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10512227 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6277 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10986085 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI13435055 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10891040 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10891024 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI10975004 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11186066 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI15970011 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI15970065 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11186020 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI10986048 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI10986081 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10866295 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10877098 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10986056 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10986076 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10986096 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10986090 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10986089 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI15660516 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI15660507 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI15660502 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI15660287 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI15605183 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13435045 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI13435047 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI15000011 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI10891036 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI12475125 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI3990232 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI4245011 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI6251 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11596084 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11596073 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11596070 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11596067 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI179 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI11596041 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI11596045 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11596043 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI9748628 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI9900039 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI9748618 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI151 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI9748614 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI9748697 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9748693 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9748692 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI9748626 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI9748649 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI9748610 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI9748204 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI9748202 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI9748636 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI9748602 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI9748639 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI9748604 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI9748642 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI9748606 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI9748645 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI9748608 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI9748653 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI9748612 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI9748616 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI13701232 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13701229 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13701226 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13701206 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13701203 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13701200 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI6291 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10740097 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10740085 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI13701183 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13701180 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13701177 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13701061 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13701075 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13701072 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13701069 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13701052 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13701022 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI13701047 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13701045 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13701020 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI13701157 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13701154 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13701151 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI10891018 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI10891016 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI13701027 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13701016 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI13701039 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13701037 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13701031 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13701018 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI13701134 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13701131 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13701128 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13701118 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13701026 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI12727211 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12393297 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12393298 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI12440078 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12440074 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12437152 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12440030 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12440018 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12440039 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12440037 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12437028 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12440031 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI12440022 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI10866454 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10866450 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10866446 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10866442 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10866438 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10866434 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10866430 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10866426 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10866422 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10866418 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10866414 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10866410 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10866406 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10866402 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10866398 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10866394 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10866390 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10866386 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10866382 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10866378 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI10866205 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10866287 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI10866229 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI10866574 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10866572 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10866570 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10866233 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10866231 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI12727207 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12727209 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI10866289 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI104 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI13587035 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI13435014 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10546055 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI163 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI13367030 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI916907 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI6221 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6243 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6245 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6235 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI9065015 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI9045015 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI143 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI6018 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI6004 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI10547230 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI13840855 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13840852 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13840849 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI6253 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6241 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6233 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6237 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6008 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6286 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI114 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI6281 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI6217 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6219 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6249 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI112 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NNI6249 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6249.node = NNI6249;
var NNI6219 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6219.node = NNI6219;
NTI6281.base = NTI6217;
NTI6286.base = NTI6217;
var NNI6217 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI6281, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI114, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI112, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI112, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI6286, name: "up", sons: null}]};
NTI6217.node = NNI6217;
var NNI6008 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6008.node = NNI6008;
NTI6217.base = NTI6008;
NTI6219.base = NTI6217;
NTI6249.base = NTI6219;
var NNI6237 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6237.node = NNI6237;
var NNI6233 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6233.node = NNI6233;
NTI6233.base = NTI6219;
NTI6237.base = NTI6233;
var NNI6241 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6241.node = NNI6241;
NTI6241.base = NTI6219;
var NNI6253 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6253.node = NNI6253;
NTI6253.base = NTI6219;
NTI6004.base = NTI6018;
var NNI13840855 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI10547230, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI10547230, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI6004, name: "Field2", sons: null}]};
NTI13840855.node = NNI13840855;
NTI13840852.base = NTI13840855;
var NNI13840849 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI13840852, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI143, name: "counter", sons: null}]};
NTI13840849.node = NNI13840849;
NTI9045015.base = NTI112;
NTI9065015.base = NTI112;
var NNI6235 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6235.node = NNI6235;
NTI6235.base = NTI6233;
var NNI6245 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6245.node = NNI6245;
var NNI6243 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6243.node = NNI6243;
var NNI6221 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6221.node = NNI6221;
NTI6221.base = NTI6217;
NTI6243.base = NTI6221;
NTI6245.base = NTI6243;
var NNI916907 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI143, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI143, name: "b", sons: null}]};
NTI916907.node = NNI916907;
var NNI13367030 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "apikey", len: 0, typ: NTI114, name: "apikey", sons: null}, 
{kind: 1, offset: "app_id", len: 0, typ: NTI114, name: "app_id", sons: null}, 
{kind: 1, offset: "app_code", len: 0, typ: NTI114, name: "app_code", sons: null}, 
{kind: 1, offset: "useHTTPS", len: 0, typ: NTI163, name: "useHTTPS", sons: null}, 
{kind: 1, offset: "useCIT", len: 0, typ: NTI163, name: "useCIT", sons: null}]};
NTI13367030.node = NNI13367030;
var NNI10546055 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI10546055.node = NNI10546055;
NTI10546055.base = NTI6008;
NTI13367030.base = NTI10546055;
var NNI13435014 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "tileSize", len: 0, typ: NTI143, name: "tileSize", sons: null}, 
{kind: 1, offset: "ppi", len: 0, typ: NTI143, name: "ppi", sons: null}, 
{kind: 1, offset: "lg", len: 0, typ: NTI114, name: "lg", sons: null}, 
{kind: 1, offset: "lg2", len: 0, typ: NTI114, name: "lg2", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI114, name: "style", sons: null}, 
{kind: 1, offset: "pois", len: 0, typ: NTI163, name: "pois", sons: null}, 
{kind: 1, offset: "crossOrigin", len: 0, typ: NTI112, name: "crossOrigin", sons: null}]};
NTI13435014.node = NNI13435014;
NTI13435014.base = NTI10546055;
var NNI13587035 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "pixelRatio", len: 0, typ: NTI104, name: "pixelRatio", sons: null}, 
{kind: 1, offset: "noWrap", len: 0, typ: NTI163, name: "noWrap", sons: null}]};
NTI13587035.node = NNI13587035;
NTI13587035.base = NTI10546055;
var NNI10866289 = {kind: 2, len: 100, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI114, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI114, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI114, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI114, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI114, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI114, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "backgroundSize", len: 0, typ: NTI114, name: "backgroundSize", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI114, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI114, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI114, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI114, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI114, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI114, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI114, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI114, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI114, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI114, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRadius", len: 0, typ: NTI114, name: "borderRadius", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI114, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI114, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI114, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI114, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI114, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI114, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI114, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI114, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI114, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI114, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI114, name: "bottom", sons: null}, 
{kind: 1, offset: "boxSizing", len: 0, typ: NTI114, name: "boxSizing", sons: null}, 
{kind: 1, offset: "boxShadow", len: 0, typ: NTI114, name: "boxShadow", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI114, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI114, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI114, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI114, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI114, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI114, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI114, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI114, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI114, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI114, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI114, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI114, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI114, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI114, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI114, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI114, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI114, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI114, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI114, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI114, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI114, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI114, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI114, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI114, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI114, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI114, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI114, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI114, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI114, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI114, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI114, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI114, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI114, name: "minWidth", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI114, name: "opacity", sons: null}, 
{kind: 1, offset: "outline", len: 0, typ: NTI114, name: "outline", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI114, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI114, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI114, name: "overflowY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI114, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI114, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI114, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI114, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI114, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI114, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI114, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI114, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI114, name: "position", sons: null}, 
{kind: 1, offset: "resize", len: 0, typ: NTI114, name: "resize", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI114, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI114, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI114, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI114, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI114, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI114, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI114, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI114, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI114, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI114, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI114, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI114, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI114, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI114, name: "textTransform", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI114, name: "transform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI114, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI114, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI114, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI114, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI114, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI143, name: "zIndex", sons: null}]};
NTI10866289.node = NNI10866289;
NTI10866289.base = NTI6008;
var NNI12727207 = {kind: 2, offset: 0, typ: null, name: null, len: 6, sons: {"0": {kind: 1, offset: 0, typ: NTI12727207, name: "pkReplace", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12727207, name: "pkRemove", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI12727207, name: "pkAppend", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI12727207, name: "pkInsertBefore", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI12727207, name: "pkDetach", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI12727207, name: "pkSame", len: 0, sons: null}}};
NTI12727207.node = NNI12727207;
NTI10866570.base = NTI10866231;
NTI10866572.base = NTI10866231;
NTI10866574.base = NTI10866231;
var NNI10866229 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI10866229, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI10866229, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI10866229, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI10866229, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI10866229, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI10866229, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI10866229, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI10866229, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI10866229, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI10866229, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI10866229, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI10866229, name: "NotationNode", len: 0, sons: null}}};
NTI10866229.node = NNI10866229;
NTI10866287.base = NTI10866289;
var NNI10866233 = {kind: 2, len: 16, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI10866570, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI10866572, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI10866574, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI114, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI10866231, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI10866231, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI10866231, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI114, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI10866229, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI114, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI10866231, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI10866231, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI114, name: "innerHTML", sons: null}, 
{kind: 1, offset: "innerText", len: 0, typ: NTI114, name: "innerText", sons: null}, 
{kind: 1, offset: "textContent", len: 0, typ: NTI114, name: "textContent", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI10866287, name: "style", sons: null}]};
NTI10866233.node = NNI10866233;
var NNI10866205 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI10866378, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI10866382, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI10866386, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI10866390, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI10866394, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI10866398, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI10866402, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI10866406, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI10866410, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI10866414, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI10866418, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI10866422, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI10866426, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI10866430, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI10866434, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI10866438, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI10866442, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI10866446, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI10866450, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI10866454, name: "onunload", sons: null}]};
NTI10866205.node = NNI10866205;
NTI10866205.base = NTI6008;
NTI10866233.base = NTI10866205;
NTI10866231.base = NTI10866233;
var NNI12437028 = {kind: 2, offset: 0, typ: null, name: null, len: 120, sons: {"0": {kind: 1, offset: 0, typ: NTI12437028, name: "#text", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12437028, name: "#int", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI12437028, name: "#bool", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI12437028, name: "#vthunk", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI12437028, name: "#dthunk", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI12437028, name: "#component", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI12437028, name: "#verbatim", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI12437028, name: "html", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI12437028, name: "head", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI12437028, name: "title", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI12437028, name: "base", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI12437028, name: "link", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI12437028, name: "meta", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI12437028, name: "style", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI12437028, name: "script", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI12437028, name: "noscript", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI12437028, name: "body", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI12437028, name: "section", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI12437028, name: "nav", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI12437028, name: "article", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI12437028, name: "aside", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI12437028, name: "h1", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI12437028, name: "h2", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI12437028, name: "h3", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI12437028, name: "h4", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI12437028, name: "h5", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI12437028, name: "h6", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI12437028, name: "header", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI12437028, name: "footer", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI12437028, name: "address", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI12437028, name: "main", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI12437028, name: "p", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI12437028, name: "hr", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI12437028, name: "pre", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI12437028, name: "blockquote", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI12437028, name: "ol", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI12437028, name: "ul", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI12437028, name: "li", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI12437028, name: "dl", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI12437028, name: "dt", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI12437028, name: "dd", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI12437028, name: "figure", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI12437028, name: "figcaption", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI12437028, name: "div", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI12437028, name: "a", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI12437028, name: "em", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI12437028, name: "strong", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI12437028, name: "small", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI12437028, name: "s", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI12437028, name: "cite", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI12437028, name: "quote", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI12437028, name: "dfn", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI12437028, name: "abbr", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI12437028, name: "data", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI12437028, name: "time", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI12437028, name: "code", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI12437028, name: "var", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI12437028, name: "samp", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI12437028, name: "kdb", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI12437028, name: "sub", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI12437028, name: "sup", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI12437028, name: "i", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI12437028, name: "b", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI12437028, name: "u", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI12437028, name: "mark", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI12437028, name: "ruby", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI12437028, name: "rt", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI12437028, name: "rp", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI12437028, name: "bdi", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI12437028, name: "dbo", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI12437028, name: "span", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI12437028, name: "br", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI12437028, name: "wbr", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI12437028, name: "ins", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI12437028, name: "del", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI12437028, name: "img", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI12437028, name: "iframe", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI12437028, name: "embed", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI12437028, name: "object", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI12437028, name: "param", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI12437028, name: "video", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI12437028, name: "audio", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI12437028, name: "source", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI12437028, name: "track", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI12437028, name: "canvas", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI12437028, name: "map", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI12437028, name: "area", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI12437028, name: "svg", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI12437028, name: "math", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI12437028, name: "path", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI12437028, name: "circle", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI12437028, name: "table", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI12437028, name: "caption", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI12437028, name: "colgroup", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI12437028, name: "col", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI12437028, name: "tbody", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI12437028, name: "thead", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI12437028, name: "tfoot", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI12437028, name: "tr", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI12437028, name: "td", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI12437028, name: "th", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI12437028, name: "form", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI12437028, name: "fieldset", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI12437028, name: "legend", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI12437028, name: "label", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI12437028, name: "input", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI12437028, name: "button", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI12437028, name: "select", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI12437028, name: "datalist", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI12437028, name: "optgroup", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI12437028, name: "option", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI12437028, name: "textarea", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI12437028, name: "keygen", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI12437028, name: "output", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI12437028, name: "progress", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI12437028, name: "meter", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI12437028, name: "details", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI12437028, name: "summary", len: 0, sons: null}, 
"118": {kind: 1, offset: 118, typ: NTI12437028, name: "command", len: 0, sons: null}, 
"119": {kind: 1, offset: 119, typ: NTI12437028, name: "menu", len: 0, sons: null}}};
NTI12437028.node = NNI12437028;
NTI12440037.base = NTI12440022;
NTI12440039.base = NTI114;
var NNI12437152 = {kind: 2, offset: 0, typ: null, name: null, len: 32, sons: {"0": {kind: 1, offset: 0, typ: NTI12437152, name: "onclick", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12437152, name: "oncontextmenu", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI12437152, name: "ondblclick", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI12437152, name: "onkeyup", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI12437152, name: "onkeydown", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI12437152, name: "onkeypressed", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI12437152, name: "onfocus", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI12437152, name: "onblur", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI12437152, name: "onchange", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI12437152, name: "onscroll", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI12437152, name: "onmousedown", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI12437152, name: "onmouseenter", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI12437152, name: "onmouseleave", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI12437152, name: "onmousemove", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI12437152, name: "onmouseout", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI12437152, name: "onmouseover", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI12437152, name: "onmouseup", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI12437152, name: "ondrag", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI12437152, name: "ondragend", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI12437152, name: "ondragenter", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI12437152, name: "ondragleave", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI12437152, name: "ondragover", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI12437152, name: "ondragstart", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI12437152, name: "ondrop", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI12437152, name: "onsubmit", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI12437152, name: "oninput", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI12437152, name: "onanimationstart", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI12437152, name: "onanimationend", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI12437152, name: "onanimationiteration", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI12437152, name: "onkeyupenter", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI12437152, name: "onkeyuplater", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI12437152, name: "onload", len: 0, sons: null}}};
NTI12437152.node = NNI12437152;
var NNI12440030 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI12437152, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI12440074, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI12440078, name: "Field2", sons: null}]};
NTI12440030.node = NNI12440030;
NTI12440018.base = NTI12440030;
var NNI12393297 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI12393297.node = NNI12393297;
NTI12393298.base = NTI12393297;
var NNI12440031 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI12437028, name: "kind", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI143, name: "index", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI114, name: "id", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI114, name: "class", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI114, name: "text", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI12440037, name: "kids", sons: null}, 
{kind: 1, offset: "attrs", len: 0, typ: NTI12440039, name: "attrs", sons: null}, 
{kind: 1, offset: "events", len: 0, typ: NTI12440018, name: "events", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI12393298, name: "style", sons: null}, 
{kind: 1, offset: "dom", len: 0, typ: NTI10866231, name: "dom", sons: null}]};
NTI12440031.node = NNI12440031;
NTI12440031.base = NTI6008;
NTI12440022.base = NTI12440031;
var NNI12727209 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "k", len: 0, typ: NTI12727207, name: "k", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI10866231, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI10866231, name: "current", sons: null}, 
{kind: 1, offset: "newNode", len: 0, typ: NTI12440022, name: "newNode", sons: null}, 
{kind: 1, offset: "oldNode", len: 0, typ: NTI12440022, name: "oldNode", sons: null}]};
NTI12727209.node = NNI12727209;
var NNI12727211 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI12440022, name: "parent", sons: null}, 
{kind: 1, offset: "newChild", len: 0, typ: NTI12440022, name: "newChild", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI143, name: "pos", sons: null}]};
NTI12727211.node = NNI12727211;
NTI13701037.base = NTI143;
NTI10891016.base = NTI104;
NTI10891018.base = NTI104;
var NNI13701027 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "lat", len: 0, typ: NTI10891016, name: "lat", sons: null}, 
{kind: 1, offset: "lng", len: 0, typ: NTI10891018, name: "lng", sons: null}]};
NTI13701027.node = NNI13701027;
NTI13701016.base = NTI13701027;
NTI13701039.base = NTI13701016;
var NNI13701031 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "linkId", len: 0, typ: NTI143, name: "linkId", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI112, name: "name", sons: null}, 
{kind: 1, offset: "cityId", len: 0, typ: NTI143, name: "cityId", sons: null}, 
{kind: 1, offset: "districtId", len: 0, typ: NTI143, name: "districtId", sons: null}, 
{kind: 1, offset: "postalCode", len: 0, typ: NTI112, name: "postalCode", sons: null}, 
{kind: 1, offset: "neighborLinks", len: 0, typ: NTI13701037, name: "neighborLinks", sons: null}, 
{kind: 1, offset: "geometry", len: 0, typ: NTI13701039, name: "geometry", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI163, name: "readOnly", sons: null}, 
{kind: 1, offset: "addedToMap", len: 0, typ: NTI163, name: "addedToMap", sons: null}, 
{kind: 1, offset: "addedToSector", len: 0, typ: NTI163, name: "addedToSector", sons: null}]};
NTI13701031.node = NNI13701031;
NTI13701018.base = NTI13701031;
var NNI13701134 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI10547230, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI143, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI13701018, name: "Field2", sons: null}]};
NTI13701134.node = NNI13701134;
NTI13701131.base = NTI13701134;
var NNI13701128 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI13701131, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI143, name: "counter", sons: null}]};
NTI13701128.node = NNI13701128;
NTI13701047.base = NTI13701018;
NTI13701061.base = NTI13701018;
var NNI13701075 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI10547230, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI143, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI112, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI13701061, name: "Field3", sons: null}]};
NTI13701075.node = NNI13701075;
NTI13701072.base = NTI13701075;
var NNI13701069 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI13701072, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI143, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI143, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI143, name: "last", sons: null}]};
NTI13701069.node = NNI13701069;
var NNI13701052 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "postalCode", len: 0, typ: NTI112, name: "postalCode", sons: null}, 
{kind: 1, offset: "district", len: 0, typ: NTI112, name: "district", sons: null}, 
{kind: 1, offset: "folkDistrict", len: 0, typ: NTI112, name: "folkDistrict", sons: null}, 
{kind: 1, offset: "city", len: 0, typ: NTI112, name: "city", sons: null}, 
{kind: 1, offset: "pFix", len: 0, typ: NTI143, name: "pFix", sons: null}, 
{kind: 1, offset: "streets", len: 0, typ: NTI13701069, name: "streets", sons: null}, 
{kind: 1, offset: "shownOnMap", len: 0, typ: NTI163, name: "shownOnMap", sons: null}, 
{kind: 1, offset: "exclude", len: 0, typ: NTI163, name: "exclude", sons: null}]};
NTI13701052.node = NNI13701052;
NTI13701022.base = NTI13701052;
var NNI13701045 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI112, name: "name", sons: null}, 
{kind: 1, offset: "links", len: 0, typ: NTI13701047, name: "links", sons: null}, 
{kind: 1, offset: "sector", len: 0, typ: NTI13701022, name: "sector", sons: null}, 
{kind: 1, offset: "totalFamilies", len: 0, typ: NTI6004, name: "totalFamilies", sons: null}]};
NTI13701045.node = NNI13701045;
NTI13701020.base = NTI13701045;
var NNI13701157 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI10547230, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI143, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI112, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI13701020, name: "Field3", sons: null}]};
NTI13701157.node = NNI13701157;
NTI13701154.base = NTI13701157;
var NNI13701151 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI13701154, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI143, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI143, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI143, name: "last", sons: null}]};
NTI13701151.node = NNI13701151;
var NNI10740097 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI10740097.node = NNI10740097;
var NNI6291 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6291.node = NNI6291;
NTI6291.base = NTI6008;
NTI10740097.base = NTI6291;
NTI10740085.base = NTI10740097;
var NNI13701183 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI10547230, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI112, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI10740085, name: "Field2", sons: null}]};
NTI13701183.node = NNI13701183;
NTI13701180.base = NTI13701183;
var NNI13701177 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI13701180, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI143, name: "counter", sons: null}]};
NTI13701177.node = NNI13701177;
var NNI13701206 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI10547230, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI143, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI112, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI13701022, name: "Field3", sons: null}]};
NTI13701206.node = NNI13701206;
NTI13701203.base = NTI13701206;
var NNI13701200 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI13701203, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI143, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI143, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI143, name: "last", sons: null}]};
NTI13701200.node = NNI13701200;
var NNI13701232 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI10547230, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI112, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI143, name: "Field2", sons: null}]};
NTI13701232.node = NNI13701232;
NTI13701229.base = NTI13701232;
var NNI13701226 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI13701229, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI143, name: "counter", sons: null}]};
NTI13701226.node = NNI13701226;
var NNI13701118 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "allLinks", len: 0, typ: NTI13701128, name: "allLinks", sons: null}, 
{kind: 1, offset: "allStreets", len: 0, typ: NTI13701151, name: "allStreets", sons: null}, 
{kind: 1, offset: "cachedTiles", len: 0, typ: NTI13701177, name: "cachedTiles", sons: null}, 
{kind: 1, offset: "allSectors", len: 0, typ: NTI13701200, name: "allSectors", sons: null}, 
{kind: 1, offset: "lastPostfix", len: 0, typ: NTI13701226, name: "lastPostfix", sons: null}]};
NTI13701118.node = NNI13701118;
NTI13701026.base = NTI13701118;
NTI9748612.base = NTI9748653;
NTI9748608.base = NTI9748645;
NTI9748606.base = NTI9748642;
NTI9748604.base = NTI9748639;
NTI9748602.base = NTI9748636;
var NNI9748202 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI9748202, name: "January", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI9748202, name: "February", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI9748202, name: "March", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI9748202, name: "April", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI9748202, name: "May", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI9748202, name: "June", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI9748202, name: "July", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI9748202, name: "August", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI9748202, name: "September", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI9748202, name: "October", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI9748202, name: "November", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI9748202, name: "December", len: 0, sons: null}}};
NTI9748202.node = NNI9748202;
var NNI9748204 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI9748204, name: "Monday", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI9748204, name: "Tuesday", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI9748204, name: "Wednesday", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI9748204, name: "Thursday", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI9748204, name: "Friday", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI9748204, name: "Saturday", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI9748204, name: "Sunday", len: 0, sons: null}}};
NTI9748204.node = NNI9748204;
NTI9748610.base = NTI9748649;
var NNI9748692 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "zonedTimeFromTimeImpl", len: 0, typ: NTI9748693, name: "zonedTimeFromTimeImpl", sons: null}, 
{kind: 1, offset: "zonedTimeFromAdjTimeImpl", len: 0, typ: NTI9748697, name: "zonedTimeFromAdjTimeImpl", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI112, name: "name", sons: null}]};
NTI9748692.node = NNI9748692;
NTI9748626.base = NTI9748692;
var NNI9748616 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nanosecond", len: 0, typ: NTI9748612, name: "nanosecond", sons: null}, 
{kind: 1, offset: "second", len: 0, typ: NTI9748608, name: "second", sons: null}, 
{kind: 1, offset: "minute", len: 0, typ: NTI9748606, name: "minute", sons: null}, 
{kind: 1, offset: "hour", len: 0, typ: NTI9748604, name: "hour", sons: null}, 
{kind: 1, offset: "monthday", len: 0, typ: NTI9748602, name: "monthday", sons: null}, 
{kind: 1, offset: "month", len: 0, typ: NTI9748202, name: "month", sons: null}, 
{kind: 1, offset: "year", len: 0, typ: NTI143, name: "year", sons: null}, 
{kind: 1, offset: "weekday", len: 0, typ: NTI9748204, name: "weekday", sons: null}, 
{kind: 1, offset: "yearday", len: 0, typ: NTI9748610, name: "yearday", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI163, name: "isDst", sons: null}, 
{kind: 1, offset: "timezone", len: 0, typ: NTI9748626, name: "timezone", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI143, name: "utcOffset", sons: null}]};
NTI9748616.node = NNI9748616;
NTI9748616.base = NTI6008;
var NNI9748614 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI151, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI9748612, name: "nanosecond", sons: null}]};
NTI9748614.node = NNI9748614;
var NNI9748618 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI151, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI9748612, name: "nanosecond", sons: null}]};
NTI9748618.node = NNI9748618;
var NNI9900039 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI9748602, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI9748202, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI143, name: "Field2", sons: null}]};
NTI9900039.node = NNI9900039;
var NNI9748628 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "time", len: 0, typ: NTI9748614, name: "time", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI143, name: "utcOffset", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI163, name: "isDst", sons: null}]};
NTI9748628.node = NNI9748628;
var NNI11596041 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI11596041, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI11596041, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI11596041, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI11596041, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI11596041, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI11596041, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI11596041, name: "JArray", len: 0, sons: null}}};
NTI11596041.node = NNI11596041;
var NNI11596073 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI10547230, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI143, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI112, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI11596043, name: "Field3", sons: null}]};
NTI11596073.node = NNI11596073;
NTI11596070.base = NTI11596073;
var NNI11596067 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI11596070, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI143, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI143, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI143, name: "last", sons: null}]};
NTI11596067.node = NNI11596067;
NTI11596084.base = NTI11596043;
var NNI11596045 = {kind: 3, offset: "kind", len: 7, typ: NTI11596041, name: "kind", sons: [[setConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI112, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI179, name: "num", sons: null}], 
[setConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI104, name: "fnum", sons: null}], 
[setConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI163, name: "bval", sons: null}], 
[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI11596067, name: "fields", sons: null}], 
[setConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI11596084, name: "elems", sons: null}]]};
NTI11596045.node = NNI11596045;
NTI11596043.base = NTI11596045;
var NNI6251 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6251.node = NNI6251;
NTI6251.base = NTI6219;
var NNI4245011 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI3990232, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI143, name: "b", sons: null}]};
NTI4245011.node = NNI4245011;
NTI12475125.base = NTI114;
var NNI10891036 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "lat", len: 0, typ: NTI10891016, name: "lat", sons: null}, 
{kind: 1, offset: "lng", len: 0, typ: NTI10891018, name: "lng", sons: null}]};
NTI10891036.node = NNI10891036;
NTI10891036.base = NTI10546055;
var NNI15000011 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI112, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI112, name: "b", sons: null}]};
NTI15000011.node = NNI15000011;
var NNI13435047 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "jsonattributes", len: 0, typ: NTI143, name: "jsonattributes", sons: null}, 
{kind: 1, offset: "mode", len: 0, typ: NTI114, name: "mode", sons: null}, 
{kind: 1, offset: "prox", len: 0, typ: NTI114, name: "prox", sons: null}, 
{kind: 1, offset: "maxResults", len: 0, typ: NTI143, name: "maxResults", sons: null}, 
{kind: 1, offset: "additionaldata", len: 0, typ: NTI114, name: "additionaldata", sons: null}, 
{kind: 1, offset: "locationattributes", len: 0, typ: NTI114, name: "locationattributes", sons: null}]};
NTI13435047.node = NNI13435047;
var NNI13435045 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI13435045.node = NNI13435045;
NTI13435045.base = NTI10546055;
NTI13435047.base = NTI13435045;
NTI15605183.base = NTI13701016;
NTI15660287.base = NTI143;
NTI15660502.base = NTI143;
NTI15660507.base = NTI143;
NTI15660516.base = NTI143;
var NNI10986089 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onAttach", len: 0, typ: NTI10986090, name: "onAttach", sons: null}, 
{kind: 1, offset: "onDetach", len: 0, typ: NTI10986096, name: "onDetach", sons: null}]};
NTI10986089.node = NNI10986089;
NTI10986089.base = NTI10546055;
var NNI10986076 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "strokeColor", len: 0, typ: NTI114, name: "strokeColor", sons: null}, 
{kind: 1, offset: "fillColor", len: 0, typ: NTI114, name: "fillColor", sons: null}, 
{kind: 1, offset: "lineWidth", len: 0, typ: NTI143, name: "lineWidth", sons: null}]};
NTI10986076.node = NNI10986076;
var NNI10986056 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI10986056.node = NNI10986056;
var NNI10877098 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI10877098.node = NNI10877098;
var NNI10866295 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "bubbles", len: 0, typ: NTI163, name: "bubbles", sons: null}, 
{kind: 1, offset: "cancelBubble", len: 0, typ: NTI163, name: "cancelBubble", sons: null}, 
{kind: 1, offset: "cancelable", len: 0, typ: NTI163, name: "cancelable", sons: null}, 
{kind: 1, offset: "composed", len: 0, typ: NTI163, name: "composed", sons: null}, 
{kind: 1, offset: "currentTarget", len: 0, typ: NTI10866231, name: "currentTarget", sons: null}, 
{kind: 1, offset: "defaultPrevented", len: 0, typ: NTI163, name: "defaultPrevented", sons: null}, 
{kind: 1, offset: "eventPhase", len: 0, typ: NTI143, name: "eventPhase", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI10866231, name: "target", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI114, name: "type", sons: null}, 
{kind: 1, offset: "isTrusted", len: 0, typ: NTI163, name: "isTrusted", sons: null}]};
NTI10866295.node = NNI10866295;
NTI10866295.base = NTI6008;
NTI10877098.base = NTI10866295;
NTI10986056.base = NTI10877098;
NTI10986076.base = NTI10986056;
NTI10986048.base = NTI10986076;
var NNI10986081 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "style", len: 0, typ: NTI10986048, name: "style", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI143, name: "zIndex", sons: null}]};
NTI10986081.node = NNI10986081;
NTI10986081.base = NTI10546055;
var NNI11186020 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI104, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI11186020.node = NNI11186020;
var NNI15970065 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI143, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI143, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI143, name: "Field2", sons: null}]};
NTI15970065.node = NNI15970065;
var NNI15970011 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI104, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI15970011.node = NNI15970011;
var NNI11186066 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI143, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI143, name: "Field1", sons: null}]};
NTI11186066.node = NNI11186066;
var NNI10891040 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI10891040.node = NNI10891040;
NTI10891040.base = NTI10546055;
NTI10891024.base = NTI10891040;
NTI10975004.base = NTI10891024;
var NNI13435055 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "searchtext", len: 0, typ: NTI114, name: "searchtext", sons: null}, 
{kind: 1, offset: "country", len: 0, typ: NTI114, name: "country", sons: null}, 
{kind: 1, offset: "state", len: 0, typ: NTI114, name: "state", sons: null}, 
{kind: 1, offset: "additionaldata", len: 0, typ: NTI114, name: "additionaldata", sons: null}]};
NTI13435055.node = NNI13435055;
NTI13435055.base = NTI13435045;
var NNI10986085 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "style", len: 0, typ: NTI10986048, name: "style", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI143, name: "zIndex", sons: null}]};
NTI10986085.node = NNI10986085;
NTI10986085.base = NTI10546055;
var NNI6277 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6277.node = NNI6277;
NTI6277.base = NTI6219;
var NNI10512227 = {kind: 1, offset: "useStderr", len: 0, typ: NTI163, name: "useStderr", sons: null};
NTI10512227.node = NNI10512227;
var NNI10512202 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI10512202, name: "lvlAll", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI10512202, name: "lvlDebug", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI10512202, name: "lvlInfo", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI10512202, name: "lvlNotice", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI10512202, name: "lvlWarn", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI10512202, name: "lvlError", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI10512202, name: "lvlFatal", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI10512202, name: "lvlNone", len: 0, sons: null}}};
NTI10512202.node = NNI10512202;
var NNI10512223 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "levelThreshold", len: 0, typ: NTI10512202, name: "levelThreshold", sons: null}, 
{kind: 1, offset: "fmtStr", len: 0, typ: NTI112, name: "fmtStr", sons: null}]};
NTI10512223.node = NNI10512223;
NTI10512223.base = NTI6008;
NTI10512227.base = NTI10512223;
function makeNimstrLit(c_225062) {
      var ln = c_225062.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_225062.charCodeAt(i);
  }
  return result;
  

  
}
function cstrToNimstr(c_225079) {
      var ln = c_225079.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_225079.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_225079.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);
function nimCopy(dest_240023, src_240024, ti_240025) {
  var result_245219 = null;

    switch (ti_240025.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(is_fat_pointer_235401(ti_240025))) {
      result_245219 = src_240024;
      }
      else {
        result_245219 = [src_240024[0], src_240024[1]];
      }
      
      break;
    case 19:
            if (dest_240023 === null || dest_240023 === undefined) {
        dest_240023 = {};
      }
      else {
        for (var key in dest_240023) { delete dest_240023[key]; }
      }
      for (var key in src_240024) { dest_240023[key] = src_240024[key]; }
      result_245219 = dest_240023;
    
      break;
    case 18:
    case 17:
      if (!((ti_240025.base == null))) {
      result_245219 = nimCopy(dest_240023, src_240024, ti_240025.base);
      }
      else {
      if ((ti_240025.kind == 17)) {
      result_245219 = (dest_240023 === null || dest_240023 === undefined) ? {m_type: ti_240025} : dest_240023;
      }
      else {
        result_245219 = (dest_240023 === null || dest_240023 === undefined) ? {} : dest_240023;
      }
      }
      nimCopyAux(result_245219, src_240024, ti_240025.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_240024 === null) {
        result_245219 = null;
      }
      else {
        if (dest_240023 === null || dest_240023 === undefined) {
          dest_240023 = new Array(src_240024.length);
        }
        else {
          dest_240023.length = src_240024.length;
        }
        result_245219 = dest_240023;
        for (var i = 0; i < src_240024.length; ++i) {
          result_245219[i] = nimCopy(result_245219[i], src_240024[i], ti_240025.base);
        }
      }
    
      break;
    case 28:
            if (src_240024 !== null) {
        result_245219 = src_240024.slice(0);
      }
    
      break;
    default: 
      result_245219 = src_240024;
      break;
    }

  return result_245219;

}
function toJSStr(s_225096) {
                    var Tmp5;
            var Tmp7;

  var result_225097 = null;

    var res_225170 = new_seq_225128((s_225096 != null ? s_225096.length : 0));
    var i_225172 = 0;
    var j_225174 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_225172 < (s_225096 != null ? s_225096.length : 0))) break L2;
          var c_225175 = s_225096[i_225172];
          if ((c_225175 < 128)) {
          res_225170[j_225174] = String.fromCharCode(c_225175);
          i_225172 += 1;
          }
          else {
            var helper_225198 = new_seq_225128(0);
            L3: do {
                L4: while (true) {
                if (!true) break L4;
                  var code_225199 = c_225175.toString(16);
                  if (((code_225199 != null ? code_225199.length : 0) == 1)) {
                  if (helper_225198 != null) { helper_225198.push("%0"); } else { helper_225198 = ["%0"]; };
                  }
                  else {
                  if (helper_225198 != null) { helper_225198.push("%"); } else { helper_225198 = ["%"]; };
                  }
                  
                  if (helper_225198 != null) { helper_225198.push(code_225199); } else { helper_225198 = [code_225199]; };
                  i_225172 += 1;
                    if (((s_225096 != null ? s_225096.length : 0) <= i_225172)) Tmp5 = true; else {                      Tmp5 = (s_225096[i_225172] < 128);                    }                  if (Tmp5) {
                  break L3;
                  }
                  
                  c_225175 = s_225096[i_225172];
                }
            } while(false);
++excHandler;
            Tmp7 = framePtr;
            try {
            res_225170[j_225174] = decodeURIComponent(helper_225198.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp7;
            res_225170[j_225174] = helper_225198.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp7;
            }
          }
          
          j_225174 += 1;
        }
    } while(false);
    if (res_225170 === null) res_225170 = [];
               if (res_225170.length < j_225174) { for (var i=res_225170.length;i<j_225174;++i) res_225170.push(null); }
               else { res_225170.length = j_225174; };
    result_225097 = res_225170.join("");

  return result_225097;

}
function raiseException(e_190218, ename_190219) {
    e_190218.name = ename_190219;
    if ((excHandler == 0)) {
    unhandledException(e_190218);
    }
    
    throw e_190218;

  
}
function chckIndx(i_250086, a_250087, b_250088) {
      var Tmp1;

  var result_250089 = 0;

  BeforeRet: do {
      if (!(a_250087 <= i_250086)) Tmp1 = false; else {        Tmp1 = (i_250086 <= b_250088);      }    if (Tmp1) {
    result_250089 = i_250086;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_250086, a_250087, b_250088);
    }
    
  } while (false);

  return result_250089;

}
function subInt(a_230421, b_230422) {
        var result = a_230421 - b_230422;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}
function addInt(a_230403, b_230404) {
        var result = a_230403 + b_230404;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}
function chckRange(i_255016, a_255017, b_255018) {
      var Tmp1;

  var result_255019 = 0;

  BeforeRet: do {
      if (!(a_255017 <= i_255016)) Tmp1 = false; else {        Tmp1 = (i_255016 <= b_255018);      }    if (Tmp1) {
    result_255019 = i_255016;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_255019;

}
function nimMax(a_230821, b_230822) {
    var Tmp1;

  var result_230823 = 0;

  BeforeRet: do {
    if ((b_230822 <= a_230821)) {
    Tmp1 = a_230821;
    }
    else {
    Tmp1 = b_230822;
    }
    
    result_230823 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_230823;

}
function nimMin(a_230803, b_230804) {
    var Tmp1;

  var result_230805 = 0;

  BeforeRet: do {
    if ((a_230803 <= b_230804)) {
    Tmp1 = a_230803;
    }
    else {
    Tmp1 = b_230804;
    }
    
    result_230805 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_230805;

}
function mnewString(len_230044) {
        return new Array(len_230044);
  

  
}
var ConstSet2 = setConstr(13, 10);
function divInt(a_230457, b_230458) {
        if (b_230458 == 0) raiseDivByZero();
    if (b_230458 == -1 && a_230457 == 2147483647) raiseOverflow();
    return Math.trunc(a_230457 / b_230458);
  

  
}
function mulInt(a_230439, b_230440) {
        var result = a_230439 * b_230440;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

  
}
function modInt(a_230475, b_230476) {
        if (b_230476 == 0) raiseDivByZero();
    if (b_230476 == -1 && a_230475 == 2147483647) raiseOverflow();
    return Math.trunc(a_230475 % b_230476);
  

  
}
function eqStrings(a_230222, b_230223) {
        if (a_230222 == b_230223) return true;
    if (a_230222 === null && b_230223.length == 0) return true;
    if (b_230223 === null && a_230222.length == 0) return true;
    if ((!a_230222) || (!b_230223)) return false;
    var alen = a_230222.length;
    if (alen != b_230223.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_230222[i] != b_230223[i]) return false;
    return true;
  

  
}
        var to_lower_ranges_1810223 = [65, 90, 532, 192, 214, 532, 216, 222, 532, 393, 394, 705, 433, 434, 717, 904, 906, 537, 910, 911, 563, 913, 929, 532, 931, 939, 532, 1021, 1023, 370, 1024, 1039, 580, 1040, 1071, 532, 1329, 1366, 548, 4256, 4293, 7764, 5024, 5103, 39364, 5104, 5109, 508, 7312, 7354, -2508, 7357, 7359, -2508, 7944, 7951, 492, 7960, 7965, 492, 7976, 7983, 492, 7992, 7999, 492, 8008, 8013, 492, 8040, 8047, 492, 8072, 8079, 492, 8088, 8095, 492, 8104, 8111, 492, 8120, 8121, 492, 8122, 8123, 426, 8136, 8139, 414, 8152, 8153, 492, 8154, 8155, 400, 8168, 8169, 492, 8170, 8171, 388, 8184, 8185, 372, 8186, 8187, 374, 11264, 11310, 548, 11390, 11391, -10315, 65313, 65338, 532, 66560, 66599, 540, 66736, 66771, 540, 68736, 68786, 564, 71840, 71871, 532, 93760, 93791, 532, 125184, 125217, 534];
        var to_lower_singlets_1811470 = [256, 501, 258, 501, 260, 501, 262, 501, 264, 501, 266, 501, 268, 501, 270, 501, 272, 501, 274, 501, 276, 501, 278, 501, 280, 501, 282, 501, 284, 501, 286, 501, 288, 501, 290, 501, 292, 501, 294, 501, 296, 501, 298, 501, 300, 501, 302, 501, 304, 301, 306, 501, 308, 501, 310, 501, 313, 501, 315, 501, 317, 501, 319, 501, 321, 501, 323, 501, 325, 501, 327, 501, 330, 501, 332, 501, 334, 501, 336, 501, 338, 501, 340, 501, 342, 501, 344, 501, 346, 501, 348, 501, 350, 501, 352, 501, 354, 501, 356, 501, 358, 501, 360, 501, 362, 501, 364, 501, 366, 501, 368, 501, 370, 501, 372, 501, 374, 501, 376, 379, 377, 501, 379, 501, 381, 501, 385, 710, 386, 501, 388, 501, 390, 706, 391, 501, 395, 501, 398, 579, 399, 702, 400, 703, 401, 501, 403, 705, 404, 707, 406, 711, 407, 709, 408, 501, 412, 711, 413, 713, 415, 714, 416, 501, 418, 501, 420, 501, 422, 718, 423, 501, 425, 718, 428, 501, 430, 718, 431, 501, 435, 501, 437, 501, 439, 719, 440, 501, 444, 501, 452, 502, 453, 501, 455, 502, 456, 501, 458, 502, 459, 501, 461, 501, 463, 501, 465, 501, 467, 501, 469, 501, 471, 501, 473, 501, 475, 501, 478, 501, 480, 501, 482, 501, 484, 501, 486, 501, 488, 501, 490, 501, 492, 501, 494, 501, 497, 502, 498, 501, 500, 501, 502, 403, 503, 444, 504, 501, 506, 501, 508, 501, 510, 501, 512, 501, 514, 501, 516, 501, 518, 501, 520, 501, 522, 501, 524, 501, 526, 501, 528, 501, 530, 501, 532, 501, 534, 501, 536, 501, 538, 501, 540, 501, 542, 501, 544, 370, 546, 501, 548, 501, 550, 501, 552, 501, 554, 501, 556, 501, 558, 501, 560, 501, 562, 501, 570, 11295, 571, 501, 573, 337, 574, 11292, 577, 501, 579, 305, 580, 569, 581, 571, 582, 501, 584, 501, 586, 501, 588, 501, 590, 501, 880, 501, 882, 501, 886, 501, 895, 616, 902, 538, 908, 564, 975, 508, 984, 501, 986, 501, 988, 501, 990, 501, 992, 501, 994, 501, 996, 501, 998, 501, 1000, 501, 1002, 501, 1004, 501, 1006, 501, 1012, 440, 1015, 501, 1017, 493, 1018, 501, 1120, 501, 1122, 501, 1124, 501, 1126, 501, 1128, 501, 1130, 501, 1132, 501, 1134, 501, 1136, 501, 1138, 501, 1140, 501, 1142, 501, 1144, 501, 1146, 501, 1148, 501, 1150, 501, 1152, 501, 1162, 501, 1164, 501, 1166, 501, 1168, 501, 1170, 501, 1172, 501, 1174, 501, 1176, 501, 1178, 501, 1180, 501, 1182, 501, 1184, 501, 1186, 501, 1188, 501, 1190, 501, 1192, 501, 1194, 501, 1196, 501, 1198, 501, 1200, 501, 1202, 501, 1204, 501, 1206, 501, 1208, 501, 1210, 501, 1212, 501, 1214, 501, 1216, 515, 1217, 501, 1219, 501, 1221, 501, 1223, 501, 1225, 501, 1227, 501, 1229, 501, 1232, 501, 1234, 501, 1236, 501, 1238, 501, 1240, 501, 1242, 501, 1244, 501, 1246, 501, 1248, 501, 1250, 501, 1252, 501, 1254, 501, 1256, 501, 1258, 501, 1260, 501, 1262, 501, 1264, 501, 1266, 501, 1268, 501, 1270, 501, 1272, 501, 1274, 501, 1276, 501, 1278, 501, 1280, 501, 1282, 501, 1284, 501, 1286, 501, 1288, 501, 1290, 501, 1292, 501, 1294, 501, 1296, 501, 1298, 501, 1300, 501, 1302, 501, 1304, 501, 1306, 501, 1308, 501, 1310, 501, 1312, 501, 1314, 501, 1316, 501, 1318, 501, 1320, 501, 1322, 501, 1324, 501, 1326, 501, 4295, 7764, 4301, 7764, 7680, 501, 7682, 501, 7684, 501, 7686, 501, 7688, 501, 7690, 501, 7692, 501, 7694, 501, 7696, 501, 7698, 501, 7700, 501, 7702, 501, 7704, 501, 7706, 501, 7708, 501, 7710, 501, 7712, 501, 7714, 501, 7716, 501, 7718, 501, 7720, 501, 7722, 501, 7724, 501, 7726, 501, 7728, 501, 7730, 501, 7732, 501, 7734, 501, 7736, 501, 7738, 501, 7740, 501, 7742, 501, 7744, 501, 7746, 501, 7748, 501, 7750, 501, 7752, 501, 7754, 501, 7756, 501, 7758, 501, 7760, 501, 7762, 501, 7764, 501, 7766, 501, 7768, 501, 7770, 501, 7772, 501, 7774, 501, 7776, 501, 7778, 501, 7780, 501, 7782, 501, 7784, 501, 7786, 501, 7788, 501, 7790, 501, 7792, 501, 7794, 501, 7796, 501, 7798, 501, 7800, 501, 7802, 501, 7804, 501, 7806, 501, 7808, 501, 7810, 501, 7812, 501, 7814, 501, 7816, 501, 7818, 501, 7820, 501, 7822, 501, 7824, 501, 7826, 501, 7828, 501, 7838, -7115, 7840, 501, 7842, 501, 7844, 501, 7846, 501, 7848, 501, 7850, 501, 7852, 501, 7854, 501, 7856, 501, 7858, 501, 7860, 501, 7862, 501, 7864, 501, 7866, 501, 7868, 501, 7870, 501, 7872, 501, 7874, 501, 7876, 501, 7878, 501, 7880, 501, 7882, 501, 7884, 501, 7886, 501, 7888, 501, 7890, 501, 7892, 501, 7894, 501, 7896, 501, 7898, 501, 7900, 501, 7902, 501, 7904, 501, 7906, 501, 7908, 501, 7910, 501, 7912, 501, 7914, 501, 7916, 501, 7918, 501, 7920, 501, 7922, 501, 7924, 501, 7926, 501, 7928, 501, 7930, 501, 7932, 501, 7934, 501, 8025, 492, 8027, 492, 8029, 492, 8031, 492, 8124, 491, 8140, 491, 8172, 493, 8188, 491, 8486, -7017, 8490, -7883, 8491, -7762, 8498, 528, 8579, 501, 11360, 501, 11362, -10243, 11363, -3314, 11364, -10227, 11367, 501, 11369, 501, 11371, 501, 11373, -10280, 11374, -10249, 11375, -10283, 11376, -10282, 11378, 501, 11381, 501, 11392, 501, 11394, 501, 11396, 501, 11398, 501, 11400, 501, 11402, 501, 11404, 501, 11406, 501, 11408, 501, 11410, 501, 11412, 501, 11414, 501, 11416, 501, 11418, 501, 11420, 501, 11422, 501, 11424, 501, 11426, 501, 11428, 501, 11430, 501, 11432, 501, 11434, 501, 11436, 501, 11438, 501, 11440, 501, 11442, 501, 11444, 501, 11446, 501, 11448, 501, 11450, 501, 11452, 501, 11454, 501, 11456, 501, 11458, 501, 11460, 501, 11462, 501, 11464, 501, 11466, 501, 11468, 501, 11470, 501, 11472, 501, 11474, 501, 11476, 501, 11478, 501, 11480, 501, 11482, 501, 11484, 501, 11486, 501, 11488, 501, 11490, 501, 11499, 501, 11501, 501, 11506, 501, 42560, 501, 42562, 501, 42564, 501, 42566, 501, 42568, 501, 42570, 501, 42572, 501, 42574, 501, 42576, 501, 42578, 501, 42580, 501, 42582, 501, 42584, 501, 42586, 501, 42588, 501, 42590, 501, 42592, 501, 42594, 501, 42596, 501, 42598, 501, 42600, 501, 42602, 501, 42604, 501, 42624, 501, 42626, 501, 42628, 501, 42630, 501, 42632, 501, 42634, 501, 42636, 501, 42638, 501, 42640, 501, 42642, 501, 42644, 501, 42646, 501, 42648, 501, 42650, 501, 42786, 501, 42788, 501, 42790, 501, 42792, 501, 42794, 501, 42796, 501, 42798, 501, 42802, 501, 42804, 501, 42806, 501, 42808, 501, 42810, 501, 42812, 501, 42814, 501, 42816, 501, 42818, 501, 42820, 501, 42822, 501, 42824, 501, 42826, 501, 42828, 501, 42830, 501, 42832, 501, 42834, 501, 42836, 501, 42838, 501, 42840, 501, 42842, 501, 42844, 501, 42846, 501, 42848, 501, 42850, 501, 42852, 501, 42854, 501, 42856, 501, 42858, 501, 42860, 501, 42862, 501, 42873, 501, 42875, 501, 42877, -34832, 42878, 501, 42880, 501, 42882, 501, 42884, 501, 42886, 501, 42891, 501, 42893, -41780, 42896, 501, 42898, 501, 42902, 501, 42904, 501, 42906, 501, 42908, 501, 42910, 501, 42912, 501, 42914, 501, 42916, 501, 42918, 501, 42920, 501, 42922, -41808, 42923, -41819, 42924, -41815, 42925, -41805, 42926, -41808, 42928, -41758, 42929, -41782, 42930, -41761, 42931, 1428, 42932, 501, 42934, 501, 42936, 501, 42938, 501, 42940, 501, 42942, 501, 42946, 501, 42948, 452, 42949, -41807, 42950, -34884];
      var to_tag_12440006 = ["#text", "#int", "#bool", "#vthunk", "#dthunk", "#component", "#verbatim", "HTML", "HEAD", "TITLE", "BASE", "LINK", "META", "STYLE", "SCRIPT", "NOSCRIPT", "BODY", "SECTION", "NAV", "ARTICLE", "ASIDE", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "FOOTER", "ADDRESS", "MAIN", "P", "HR", "PRE", "BLOCKQUOTE", "OL", "UL", "LI", "DL", "DT", "DD", "FIGURE", "FIGCAPTION", "DIV", "A", "EM", "STRONG", "SMALL", "S", "CITE", "QUOTE", "DFN", "ABBR", "DATA", "TIME", "CODE", "VAR", "SAMP", "KDB", "SUB", "SUP", "I", "B", "U", "MARK", "RUBY", "RT", "RP", "BDI", "DBO", "SPAN", "BR", "WBR", "INS", "DEL", "IMG", "IFRAME", "EMBED", "OBJECT", "PARAM", "VIDEO", "AUDIO", "SOURCE", "TRACK", "CANVAS", "MAP", "AREA", "SVG", "MATH", "PATH", "CIRCLE", "TABLE", "CAPTION", "COLGROUP", "COL", "TBODY", "THEAD", "TFOOT", "TR", "TD", "TH", "FORM", "FIELDSET", "LEGEND", "LABEL", "INPUT", "BUTTON", "SELECT", "DATALIST", "OPTGROUP", "OPTION", "TEXTAREA", "KEYGEN", "OUTPUT", "PROGRESS", "METER", "DETAILS", "SUMMARY", "COMMAND", "MENU"];
      var to_event_name_12440012 = ["click", "contextmenu", "dblclick", "keyup", "keydown", "keypressed", "focus", "blur", "change", "scroll", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseout", "mouseover", "mouseup", "drag", "dragend", "dragenter", "dragleave", "dragover", "dragstart", "drop", "submit", "input", "animationstart", "animationend", "animationiteration", "keyupenter", "keyuplater", "load"];
function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
function genericReset(x_250044, ti_250045) {
  var result_250046 = null;

    result_250046 = null;
    switch (ti_250045.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (is_fat_pointer_235401(ti_250045)) {
              result_250046 = [null, 0];
      
      }
      
      break;
    case 19:
            result_250046 = {};
    
      break;
    case 18:
    case 17:
      if ((ti_250045.kind == 17)) {
      result_250046 = {m_type: ti_250045};
      }
      else {
        result_250046 = {};
      }
      
      break;
    case 24:
    case 27:
            result_250046 = [];
    
      break;
    case 4:
    case 16:
            result_250046 = new Array(x_250044.length);
      for (var i = 0; i < x_250044.length; ++i) {
        result_250046[i] = genericReset(x_250044[i], ti_250045.base);
      }
    
      break;
    default: 
      break;
    }

  return result_250046;

}
function addChar(x_275031, c_275032) {
    x_275031.push(c_275032);

  
}
function absInt(a_230617) {
    var Tmp1;

  var result_230618 = 0;

    if ((a_230617 < 0)) {
    Tmp1 = (a_230617 * -1);
    }
    else {
    Tmp1 = a_230617;
    }
    
    result_230618 = Tmp1;

  return result_230618;

}
    var unit_weights_9748762 = [1, 1000, 1000000, 1000000000, 60000000000, 3600000000000, 86400000000000, 604800000000000];
function negInt(a_230583) {
  var result_230584 = 0;

    result_230584 = (a_230583 * -1);

  return result_230584;

}
    var days_until_month_leap_9905107 = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];
      var days_until_month_9905091 = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];
var ConstSet3 = setConstr(5);
function raiseFieldError(f_220047) {
    raiseException({message: nimCopy(null, f_220047, NTI112), parent: null, m_type: NTI6251, name: null, trace: null, up: null}, "FieldError");

  
}
var ConstSet4 = setConstr(6);
var ConstSet5 = setConstr(60, 62, 94);
var ConstSet6 = setConstr(60, 62, 94);
var ConstSet7 = setConstr(45, 43, 32);
var ConstSet8 = setConstr([48, 57]);
var ConstSet9 = setConstr([48, 57]);
var ConstSet10 = setConstr([48, 57]);
var ConstSet11 = setConstr([65, 90], [97, 122]);
var ConstSet12 = setConstr(46, 44);
function nimCharToStr(x_156052) {
  var result_156053 = null;

    result_156053 = nimCopy(null, mnewString(1), NTI112);
    result_156053[0] = x_156052;

  return result_156053;

}
var ConstSet13 = setConstr([65, 90]);
var ConstSet14 = setConstr([97, 122]);
function nimBoolToStr(x_156035) {
  var result_156036 = null;

    if (x_156035) {
    result_156036 = nimCopy(null, makeNimstrLit("true"), NTI112);
    }
    else {
      result_156036 = nimCopy(null, makeNimstrLit("false"), NTI112);
    }
    

  return result_156036;

}
function cmpStrings(a_230186, b_230187) {
        if (a_230186 == b_230187) return 0;
    if (!a_230186) return -1;
    if (!b_230187) return 1;
    for (var i = 0; i < a_230186.length && i < b_230187.length; i++) {
      var result = a_230186[i] - b_230187[i];
      if (result != 0) return result;
    }
    return a_230186.length - b_230187.length;
  

  
}
var ConstSet15 = setConstr([48, 57]);
var ConstSet16 = setConstr([48, 57]);
var ConstSet17 = setConstr(13, 10);
function isObj(obj_270062, subclass_270063) {
  var result_270064 = false;

  BeforeRet: do {
    var x_270065 = obj_270062;
    if ((x_270065 == subclass_270063)) {
    result_270064 = true;
    break BeforeRet;
    }
    
    L1: do {
        L2: while (true) {
        if (!!((x_270065 == subclass_270063))) break L2;
          if ((x_270065 == null)) {
          result_270064 = false;
          break BeforeRet;
          }
          
          x_270065 = x_270065.base;
        }
    } while(false);
    result_270064 = true;
    break BeforeRet;
  } while (false);

  return result_270064;

}
var ConstSet18 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet19 = setConstr([65, 90]);
              var level_names_10512216 = [makeNimstrLit("DEBUG"), makeNimstrLit("DEBUG"), makeNimstrLit("INFO"), makeNimstrLit("NOTICE"), makeNimstrLit("WARN"), makeNimstrLit("ERROR"), makeNimstrLit("FATAL"), makeNimstrLit("NONE")];
var nim_program_result = 0;
var global_raise_hook_142018 = [null];
var local_raise_hook_142023 = [null];
var out_of_mem_hook_142026 = [null];
var unhandled_exception_hook_142031 = [null];
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var utc_instance_9985231 = [null];
var local_instance_9985232 = [null];
var level_10512401 = [0];
var handlers_10512403 = [null];
var object_id_10550031 = [0];
var gid_12475032 = [0];
var vcomponents_12606239 = [{}];
var kxi_12727284 = [null];
function is_fat_pointer_235401(ti_235403) {
  var result_235404 = false;

  BeforeRet: do {
    result_235404 = !((ConstSet1[ti_235403.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_235404;

}
function nimCopyAux(dest_240028, src_240029, n_240031) {
    switch (n_240031.kind) {
    case 0:
      break;
    case 1:
            dest_240028[n_240031.offset] = nimCopy(dest_240028[n_240031.offset], src_240029[n_240031.offset], n_240031.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_240031.sons.length; i++) {
      nimCopyAux(dest_240028, src_240029, n_240031.sons[i]);
    }
    
      break;
    case 3:
            dest_240028[n_240031.offset] = nimCopy(dest_240028[n_240031.offset], src_240029[n_240031.offset], n_240031.typ);
      for (var i = 0; i < n_240031.sons.length; ++i) {
        nimCopyAux(dest_240028, src_240029, n_240031.sons[i][1]);
      }
    
      break;
    }

  
}
function add_142042(x_142045, x_142045_Idx, y_142046) {
          if (x_142045[x_142045_Idx] === null) { x_142045[x_142045_Idx] = []; }
      var off = x_142045[x_142045_Idx].length;
      x_142045[x_142045_Idx].length += y_142046.length;
      for (var i = 0; i < y_142046.length; ++i) {
        x_142045[x_142045_Idx][off+i] = y_142046.charCodeAt(i);
      }
    

  
}
function new_seq_225128(len_225131) {
  var result_225133 = null;

    result_225133 = new Array(len_225131); for (var i=0;i<len_225131;++i) {result_225133[i]=null;}
  return result_225133;

}
function unhandledException(e_185059) {
    var buf_185060 = [[]];
    if (!(((e_185059.message != null ? e_185059.message.length : 0) == 0))) {
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_185060[0] = makeNimstrLit("Error: unhandled exception: "); };
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(e_185059.message); } else { buf_185060[0] = e_185059.message.slice(); };
    }
    else {
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_185060[0] = makeNimstrLit("Error: unhandled exception"); };
    }
    
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(makeNimstrLit(" [")); } else { buf_185060[0] = makeNimstrLit(" ["); };
    add_142042(buf_185060, 0, e_185059.name);
    if (buf_185060[0] != null) { buf_185060[0] = (buf_185060[0]).concat(makeNimstrLit("]\x0A")); } else { buf_185060[0] = makeNimstrLit("]\x0A"); };
    var cbuf_190201 = toJSStr(buf_185060[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_190201);
  }
  else {
    throw cbuf_190201;
  }
  

  
}
function raiseIndexError(i_210047, a_210048, b_210049) {
    var Tmp1;

    if ((b_210049 < a_210048)) {
    Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_210047)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_210048)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_210049)+"") || []);
    }
    
    raiseException({message: nimCopy(null, Tmp1, NTI112), parent: null, m_type: NTI6249, name: null, trace: null, up: null}, "IndexError");

  
}
function to_float_26459(i_26461) {
  var result_26462 = 0.0;

    result_26462 = i_26461;

  return result_26462;

}
function HEX2F_325648(x_325650, y_325651) {
  var result_325652 = 0.0;

    result_325652 = (to_float_26459(x_325650) / to_float_26459(y_325651));

  return result_325652;

}
function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI6237, name: null, trace: null, up: null}, "OverflowError");

  
}
function isPointInPolygon(test_point_13490007, polyg_points_13490009) {
              var Tmp4;
              var Tmp5;
                var Tmp6;

  var result_13490010 = false;

    result_13490010 = false;
    var j_13490016 = (polyg_points_13490009 != null ? (polyg_points_13490009.length-1) : -1);
    L1: do {
      var i_13490081 = 0;
      var p_13490082 = null;
      var i_13500019 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_13500019 < (polyg_points_13490009 != null ? polyg_points_13490009.length : 0))) break L3;
            i_13490081 = i_13500019;
            p_13490082 = polyg_points_13490009[chckIndx(i_13500019, 0, (polyg_points_13490009 != null ? polyg_points_13490009.length : 0)+0-1)-0];
            var l_p_13490083 = polyg_points_13490009[chckIndx(j_13490016, 0, (polyg_points_13490009 != null ? polyg_points_13490009.length : 0)+0-1)-0];
              if (!(p_13490082.y < test_point_13490007.y)) Tmp5 = false; else {                Tmp5 = (test_point_13490007.y <= l_p_13490083.y);              }              if (Tmp5) Tmp4 = true; else {                if (!(l_p_13490083.y < test_point_13490007.y)) Tmp6 = false; else {                  Tmp6 = (test_point_13490007.y <= p_13490082.y);                }                Tmp4 = Tmp6;              }            if (Tmp4) {
            if (((p_13490082.x + (HEX2F_325648(subInt(test_point_13490007.y, p_13490082.y), subInt(l_p_13490083.y, p_13490082.y)) * subInt(l_p_13490083.x, p_13490082.x))) < test_point_13490007.x)) {
            result_13490010 = !(result_13490010);
            }
            
            }
            
            j_13490016 = i_13490081;
            i_13500019 = addInt(i_13500019, 1);
          }
      } while(false);
    } while(false);

  return result_13490010;

}
function is_power_of_two_8715029(x_8715031) {
    var Tmp1;

  var result_8715032 = false;

  BeforeRet: do {
    if (!(0 < x_8715031)) Tmp1 = false; else {      Tmp1 = ((x_8715031 & (x_8715031 - 1)) == 0);    }    result_8715032 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_8715032;

}
function sys_fatal_102618(message_102622) {
    raiseException({message: nimCopy(null, message_102622, NTI112), m_type: NTI6241, parent: null, name: null, trace: null, up: null}, "AssertionError");

  
}
function raise_assert_102614(msg_102616) {
    sys_fatal_102618(msg_102616);

  
}
function failed_assert_impl_102680(msg_102682) {
    raise_assert_102614(msg_102682);

  
}
function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI6253, name: null, trace: null, up: null}, "RangeError");

  
}
function init_table_13720020(initial_size_13720024) {
  var result_13720026 = {data: null, counter: 0};

    if (!(is_power_of_two_8715029(initial_size_13720024))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(initialSize)` "));
    }
    
    result_13720026.counter = 0;
    result_13720026.data = new Array(chckRange(initial_size_13720024, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_13720024, 0, 2147483647);++i) {result_13720026.data[i]={Field0: 0, Field1: 0, Field2: null};}
  return result_13720026;

}
function init_ordered_table_13740632(initial_size_13740636) {
  var result_13740638 = {data: null, counter: 0, first: 0, last: 0};

    if (!(is_power_of_two_8715029(initial_size_13740636))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(initialSize)` "));
    }
    
    result_13740638.counter = 0;
    result_13740638.data = new Array(chckRange(initial_size_13740636, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_13740636, 0, 2147483647);++i) {result_13740638.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    result_13740638.first = -1;
    result_13740638.last = -1;

  return result_13740638;

}
function init_table_13760632(initial_size_13760636) {
  var result_13760638 = {data: null, counter: 0};

    if (!(is_power_of_two_8715029(initial_size_13760636))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(initialSize)` "));
    }
    
    result_13760638.counter = 0;
    result_13760638.data = new Array(chckRange(initial_size_13760636, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_13760636, 0, 2147483647);++i) {result_13760638.data[i]={Field0: 0, Field1: null, Field2: null};}
  return result_13760638;

}
function init_ordered_table_13780632(initial_size_13780636) {
  var result_13780638 = {data: null, counter: 0, first: 0, last: 0};

    if (!(is_power_of_two_8715029(initial_size_13780636))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(initialSize)` "));
    }
    
    result_13780638.counter = 0;
    result_13780638.data = new Array(chckRange(initial_size_13780636, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_13780636, 0, 2147483647);++i) {result_13780638.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    result_13780638.first = -1;
    result_13780638.last = -1;

  return result_13780638;

}
function init_table_13800632(initial_size_13800636) {
  var result_13800638 = {data: null, counter: 0};

    if (!(is_power_of_two_8715029(initial_size_13800636))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(initialSize)` "));
    }
    
    result_13800638.counter = 0;
    result_13800638.data = new Array(chckRange(initial_size_13800636, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_13800636, 0, 2147483647);++i) {result_13800638.data[i]={Field0: 0, Field1: null, Field2: 0};}
  return result_13800638;

}
function init_table_13820635(initial_size_13820639) {
  var result_13820655 = {data: null, counter: 0};

    if (!(is_power_of_two_8715029(initial_size_13820639))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(initialSize)` "));
    }
    
    result_13820655.counter = 0;
    result_13820655.data = new Array(chckRange(initial_size_13820639, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_13820639, 0, 2147483647);++i) {result_13820655.data[i]={Field0: 0, Field1: null, Field2: null};}
  return result_13820655;

}
var platform_13720017 = [null];
var all_links_13740629 = [init_table_13720020(8)];
var all_streets_13760629 = [init_ordered_table_13740632(8)];
var cached_tiles_13780629 = [init_table_13760632(8)];
var all_sectors_13800629 = [init_ordered_table_13780632(8)];
var last_postfix_13820629 = [init_table_13800632(8)];
var mv_street_grp_13820630 = [function(){return new H.map.Group()}()];
var ministry_area_13820631 = [null];
var name_area_13820632 = [makeNimstrLit("Hanau-Russisch")];
var sector_grp_13840629 = [init_table_13820635(8)];
var city_id_13840630 = [0];
var district_id_13840631 = [0];
var addr_distr_13840632 = [null];
var addr_city_13840633 = [null];
var clck_link_id_13840634 = [0];
var postal_code_13840635 = [null];
var sect_name_13840636 = [null];
var border_distr_13840638 = [null];
var map = null;
function init_table_13840865(initial_size_13840869) {
  var result_13840871 = {data: null, counter: 0};

    if (!(is_power_of_two_8715029(initial_size_13840869))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(initialSize)` "));
    }
    
    result_13840871.counter = 0;
    result_13840871.data = new Array(chckRange(initial_size_13840869, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_13840869, 0, 2147483647);++i) {result_13840871.data[i]={Field0: 0, Field1: 0, Field2: 0};}
  return result_13840871;

}
function substr_341022(s_341024, first_341025, last_341026) {
  var result_341027 = null;

    var first_341028 = nimMax(first_341025, 0);
    var l_341030 = nimMax(addInt(subInt(nimMin(last_341026, (s_341024 != null ? (s_341024.length-1) : -1)), first_341028), 1), 0);
    result_341027 = nimCopy(null, mnewString(chckRange(l_341030, 0, 2147483647)), NTI112);
    L1: do {
      var i_341039 = 0;
      var colontmp__12437693 = 0;
      colontmp__12437693 = subInt(l_341030, 1);
      var res_12437694 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12437694 <= colontmp__12437693)) break L3;
            i_341039 = res_12437694;
            result_341027[chckIndx(i_341039, 0, (result_341027 != null ? result_341027.length : 0)+0-1)-0] = s_341024[chckIndx(addInt(i_341039, first_341028), 0, (s_341024 != null ? s_341024.length : 0)+0-1)-0];
            res_12437694 = addInt(res_12437694, 1);
          }
      } while(false);
    } while(false);

  return result_341027;

}
function nsuSplitCharSet(s_9040038, seps_9040040, maxsplit_9040041) {
  var result_9040043 = null;

    result_9040043 = nimCopy(null, [], NTI9045015);
    L1: do {
      var x_9040044 = null;
      var last_14100804 = 0;
      var splits_14100805 = maxsplit_9040041;
      L2: do {
          L3: while (true) {
          if (!(last_14100804 <= (s_9040038 != null ? s_9040038.length : 0))) break L3;
            var first_14100807 = last_14100804;
            L4: do {
                L5: while (true) {
                if (!((last_14100804 < (s_9040038 != null ? s_9040038.length : 0)) && !((seps_9040040[s_9040038[chckIndx(last_14100804, 0, (s_9040038 != null ? s_9040038.length : 0)+0-1)-0]] != undefined)))) break L5;
                  last_14100804 = addInt(last_14100804, 1);
                }
            } while(false);
            if ((splits_14100805 == 0)) {
            last_14100804 = (s_9040038 != null ? s_9040038.length : 0);
            }
            
            x_9040044 = substr_341022(s_9040038, first_14100807, subInt(last_14100804, 1));
            var Tmp6 = nimCopy(null, x_9040044, NTI112);
            if (result_9040043 != null) { result_9040043.push(Tmp6); } else { result_9040043 = [Tmp6]; };
            if ((splits_14100805 == 0)) {
            break L2;
            }
            
            splits_14100805 = subInt(splits_14100805, 1);
            last_14100804 = addInt(last_14100804, 1);
          }
      } while(false);
    } while(false);

  return result_9040043;

}
function substr_eq_8870026(s_8870028, pos_8870029, substr_8870030) {
  var result_8870031 = false;

  BeforeRet: do {
    var i_8870033 = 0;
    var length_8870034 = (substr_8870030 != null ? substr_8870030.length : 0);
    L1: do {
        L2: while (true) {
        if (!(((i_8870033 < length_8870034) && (addInt(pos_8870029, i_8870033) < (s_8870028 != null ? s_8870028.length : 0))) && (s_8870028[chckIndx(addInt(pos_8870029, i_8870033), 0, (s_8870028 != null ? s_8870028.length : 0)+0-1)-0] == substr_8870030[chckIndx(i_8870033, 0, (substr_8870030 != null ? substr_8870030.length : 0)+0-1)-0]))) break L2;
          i_8870033 = addInt(i_8870033, 1);
        }
    } while(false);
    result_8870031 = (i_8870033 == length_8870034);
    break BeforeRet;
  } while (false);

  return result_8870031;

}
function nsuSplitString(s_9045038, sep_9045039, maxsplit_9045040) {
  var result_9045042 = null;

    if (!((0 < (sep_9045039 != null ? sep_9045039.length : 0)))) {
    failed_assert_impl_102680(makeNimstrLit("strutils.nim(756, 11) `sep.len > 0` "));
    }
    
    result_9045042 = nimCopy(null, [], NTI9065015);
    L1: do {
      var x_9060201 = null;
      var last_14100812 = 0;
      var splits_14100813 = maxsplit_9045040;
      L2: do {
          L3: while (true) {
          if (!(last_14100812 <= (s_9045038 != null ? s_9045038.length : 0))) break L3;
            var first_14100815 = last_14100812;
            L4: do {
                L5: while (true) {
                if (!((last_14100812 < (s_9045038 != null ? s_9045038.length : 0)) && !(substr_eq_8870026(s_9045038, last_14100812, sep_9045039)))) break L5;
                  last_14100812 = addInt(last_14100812, 1);
                }
            } while(false);
            if ((splits_14100813 == 0)) {
            last_14100812 = (s_9045038 != null ? s_9045038.length : 0);
            }
            
            x_9060201 = substr_341022(s_9045038, first_14100815, subInt(last_14100812, 1));
            var Tmp6 = nimCopy(null, x_9060201, NTI112);
            if (result_9045042 != null) { result_9045042.push(Tmp6); } else { result_9045042 = [Tmp6]; };
            if ((splits_14100813 == 0)) {
            break L2;
            }
            
            splits_14100813 = subInt(splits_14100813, 1);
            last_14100812 = addInt(last_14100812, (sep_9045039 != null ? sep_9045039.length : 0));
          }
      } while(false);
    } while(false);

  return result_9045042;

}
function init_table_13860633(initial_size_13860637) {
  var result_13860653 = {data: null, counter: 0};

    if (!(is_power_of_two_8715029(initial_size_13860637))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(initialSize)` "));
    }
    
    result_13860653.counter = 0;
    result_13860653.data = new Array(chckRange(initial_size_13860637, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_13860637, 0, 2147483647);++i) {result_13860653.data[i]={Field0: 0, Field1: null, Field2: 0};}
  return result_13860653;

}
function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI6235, name: null, trace: null, up: null}, "DivByZeroError");

  
}
function imul_10550517(a_10550519, b_10550520) {
  var result_10550521 = 0;

    var mask_10550522 = 65535;
    var a_hi_10550531 = (((a_10550519 >>> 0) >>> 16) & mask_10550522);
    var a_lo_10550532 = (a_10550519 & mask_10550522);
    var b_hi_10550541 = (((b_10550520 >>> 0) >>> 16) & mask_10550522);
    var b_lo_10550542 = (b_10550520 & mask_10550522);
    result_10550521 = ((((a_lo_10550532 * b_lo_10550542) >>> 0) + (((((a_hi_10550531 * b_lo_10550542) >>> 0) + ((a_lo_10550532 * b_hi_10550541) >>> 0)) >>> 0) << 16)) >>> 0);

  return result_10550521;

}
function rotl32_10550601(x_10550603, r_10550604) {
  var result_10550605 = 0;

    result_10550605 = ((x_10550603 << r_10550604) | ((x_10550603 >>> 0) >>> subInt(32, r_10550604)));

  return result_10550605;

}
function murmur_hash_10550629(x_10550632) {
  var result_10550633 = 0;

  BeforeRet: do {
    var size_10550643 = (x_10550632 != null ? x_10550632.length : 0);
    var step_size_10550645 = 4;
    var n_10550646 = divInt(size_10550643, step_size_10550645);
    var h1_10550647 = 0;
    var i_10550649 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_10550649 < mulInt(n_10550646, step_size_10550645))) break L2;
          var k1_10550650 = 0;
          var j_10550651 = step_size_10550645;
          L3: do {
              L4: while (true) {
              if (!(0 < j_10550651)) break L4;
                j_10550651 = subInt(j_10550651, 1);
                k1_10550650 = ((k1_10550650 << 8) | x_10550632[chckIndx(addInt(i_10550649, j_10550651), 0, (x_10550632 != null ? x_10550632.length : 0)+0-1)-0]);
              }
          } while(false);
          i_10550649 = addInt(i_10550649, step_size_10550645);
          k1_10550650 = imul_10550517(k1_10550650, 3432918353);
          k1_10550650 = rotl32_10550601(k1_10550650, 15);
          k1_10550650 = imul_10550517(k1_10550650, 461845907);
          h1_10550647 = (h1_10550647 ^ k1_10550650);
          h1_10550647 = rotl32_10550601(h1_10550647, 13);
          h1_10550647 = ((((h1_10550647 * 5) >>> 0) + 3864292196) >>> 0);
        }
    } while(false);
    var k1_10555207 = 0;
    var rem_10555208 = modInt(size_10550643, step_size_10550645);
    L5: do {
        L6: while (true) {
        if (!(0 < rem_10555208)) break L6;
          rem_10555208 = subInt(rem_10555208, 1);
          k1_10555207 = ((k1_10555207 << 8) | x_10550632[chckIndx(addInt(i_10550649, rem_10555208), 0, (x_10550632 != null ? x_10550632.length : 0)+0-1)-0]);
        }
    } while(false);
    k1_10555207 = imul_10550517(k1_10555207, 3432918353);
    k1_10555207 = rotl32_10550601(k1_10555207, 15);
    k1_10555207 = imul_10550517(k1_10555207, 461845907);
    h1_10550647 = (h1_10550647 ^ k1_10555207);
    h1_10550647 = (h1_10550647 ^ size_10550643);
    h1_10550647 = (h1_10550647 ^ ((h1_10550647 >>> 0) >>> 16));
    h1_10550647 = imul_10550517(h1_10550647, 2246822507);
    h1_10550647 = (h1_10550647 ^ ((h1_10550647 >>> 0) >>> 13));
    h1_10550647 = imul_10550517(h1_10550647, 3266489909);
    h1_10550647 = (h1_10550647 ^ ((h1_10550647 >>> 0) >>> 16));
    result_10550633 = (h1_10550647|0);
    break BeforeRet;
  } while (false);

  return result_10550633;

}
function hash_10590214(x_10590216) {
  var result_10590217 = 0;

    result_10590217 = murmur_hash_10550629((x_10590216.slice(0, (x_10590216 != null ? (x_10590216.length-1) : -1)+1)));

  return result_10590217;

}
function is_filled_10612018(hcode_10612020) {
  var result_10612021 = false;

    result_10612021 = !((hcode_10612020 == 0));

  return result_10612021;

}
function next_try_10615014(h_10615016, max_hash_10615017) {
  var result_10615018 = 0;

    result_10615018 = (addInt(h_10615016, 1) & max_hash_10615017);

  return result_10615018;

}
function raw_get_13915602(t_13915606, key_13915607, hc_13915608, hc_13915608_Idx) {
            var Tmp3;

  var result_13915609 = 0;

  BeforeRet: do {
    hc_13915608[hc_13915608_Idx] = hash_10590214(key_13915607);
    if ((hc_13915608[hc_13915608_Idx] == 0)) {
    hc_13915608[hc_13915608_Idx] = 314159265;
    }
    
    if (((t_13915606.data != null ? t_13915606.data.length : 0) == 0)) {
    result_13915609 = -1;
    break BeforeRet;
    }
    
    var h_13925138 = (hc_13915608[hc_13915608_Idx] & (t_13915606.data != null ? (t_13915606.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_10612018(t_13915606.data[chckIndx(h_13925138, 0, (t_13915606.data != null ? t_13915606.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_13915606.data[chckIndx(h_13925138, 0, (t_13915606.data != null ? t_13915606.data.length : 0)+0-1)-0].Field0 == hc_13915608[hc_13915608_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_13915606.data[chckIndx(h_13925138, 0, (t_13915606.data != null ? t_13915606.data.length : 0)+0-1)-0].Field1, key_13915607);            }          if (Tmp3) {
          result_13915609 = h_13925138;
          break BeforeRet;
          }
          
          h_13925138 = next_try_10615014(h_13925138, (t_13915606.data != null ? (t_13915606.data.length-1) : -1));
        }
    } while(false);
    result_13915609 = subInt(-1, h_13925138);
  } while (false);

  return result_13915609;

}
function must_rehash_13950601(t_13950604) {
  var result_13950605 = false;

    if (!((t_13950604.counter < (t_13950604.data != null ? t_13950604.data.length : 0)))) {
    failed_assert_impl_102680(makeNimstrLit("hashcommon.nim(33, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_13950605 = ((mulInt((t_13950604.data != null ? t_13950604.data.length : 0), 2) < mulInt(t_13950604.counter, 3)) || (subInt((t_13950604.data != null ? t_13950604.data.length : 0), t_13950604.counter) < 4));

  return result_13950605;

}
function raw_insert_13976122(t_13976128, data_13976131, data_13976131_Idx, key_13976132, val_13976133, hc_13976134, h_13976135) {
    data_13976131[data_13976131_Idx][chckIndx(h_13976135, 0, (data_13976131[data_13976131_Idx] != null ? data_13976131[data_13976131_Idx].length : 0)+0-1)-0].Field1 = nimCopy(null, key_13976132, NTI112);
    data_13976131[data_13976131_Idx][chckIndx(h_13976135, 0, (data_13976131[data_13976131_Idx] != null ? data_13976131[data_13976131_Idx].length : 0)+0-1)-0].Field2 = val_13976133;
    data_13976131[data_13976131_Idx][chckIndx(h_13976135, 0, (data_13976131[data_13976131_Idx] != null ? data_13976131[data_13976131_Idx].length : 0)+0-1)-0].Field0 = hc_13976134;

  
}
function enlarge_13975161(t_13975167) {
    var n_13975175 = null;
    n_13975175 = new Array(chckRange(mulInt((t_13975167.data != null ? t_13975167.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_13975167.data != null ? t_13975167.data.length : 0), 2), 0, 2147483647);++i) {n_13975175[i]={Field0: 0, Field1: null, Field2: 0};}    var Tmp1 = t_13975167.data; t_13975167.data = n_13975175; n_13975175 = Tmp1;    L2: do {
      var i_13975334 = 0;
      var colontmp__14100826 = 0;
      colontmp__14100826 = (n_13975175 != null ? (n_13975175.length-1) : -1);
      var res_14100827 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_14100827 <= colontmp__14100826)) break L4;
            i_13975334 = res_14100827;
            var eh_13975490 = n_13975175[chckIndx(i_13975334, 0, (n_13975175 != null ? n_13975175.length : 0)+0-1)-0].Field0;
            if (is_filled_10612018(eh_13975490)) {
            var j_13975497 = (eh_13975490 & (t_13975167.data != null ? (t_13975167.data.length-1) : -1));
            L5: do {
                L6: while (true) {
                if (!is_filled_10612018(t_13975167.data[chckIndx(j_13975497, 0, (t_13975167.data != null ? t_13975167.data.length : 0)+0-1)-0].Field0)) break L6;
                  j_13975497 = next_try_10615014(j_13975497, (t_13975167.data != null ? (t_13975167.data.length-1) : -1));
                }
            } while(false);
            raw_insert_13976122(t_13975167, t_13975167, "data", n_13975175[chckIndx(i_13975334, 0, (n_13975175 != null ? n_13975175.length : 0)+0-1)-0].Field1, n_13975175[chckIndx(i_13975334, 0, (n_13975175 != null ? n_13975175.length : 0)+0-1)-0].Field2, eh_13975490, j_13975497);
            }
            
            res_14100827 = addInt(res_14100827, 1);
          }
      } while(false);
    } while(false);

  
}
function raw_get_known_hc_13976628(t_13976632, key_13976633, hc_13976634) {
  var result_13976635 = 0;

  BeforeRet: do {
    if (((t_13976632.data != null ? t_13976632.data.length : 0) == 0)) {
    result_13976635 = -1;
    break BeforeRet;
    }
    
    var h_13980138 = (hc_13976634 & (t_13976632.data != null ? (t_13976632.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_10612018(t_13976632.data[chckIndx(h_13980138, 0, (t_13976632.data != null ? t_13976632.data.length : 0)+0-1)-0].Field0)) break L2;
          if (((t_13976632.data[chckIndx(h_13980138, 0, (t_13976632.data != null ? t_13976632.data.length : 0)+0-1)-0].Field0 == hc_13976634) && eqStrings(t_13976632.data[chckIndx(h_13980138, 0, (t_13976632.data != null ? t_13976632.data.length : 0)+0-1)-0].Field1, key_13976633))) {
          result_13976635 = h_13980138;
          break BeforeRet;
          }
          
          h_13980138 = next_try_10615014(h_13980138, (t_13976632.data != null ? (t_13976632.data.length-1) : -1));
        }
    } while(false);
    result_13976635 = subInt(-1, h_13980138);
  } while (false);

  return result_13976635;

}
function HEX5BHEX5DHEX3D_13890347(t_13890353, key_13890354, val_13890355) {
    if (((t_13890353.data != null ? t_13890353.data.length : 0) == 0)) {
    if (!(is_power_of_two_8715029(64))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    t_13890353.counter = 0;
    t_13890353.data = new Array(64); for (var i=0;i<64;++i) {t_13890353.data[i]={Field0: 0, Field1: null, Field2: 0};}    }
    
    var hc_13915601 = [0];
    var index_13925641 = raw_get_13915602(t_13890353, key_13890354, hc_13915601, 0);
    if ((0 <= index_13925641)) {
    t_13890353.data[chckIndx(index_13925641, 0, (t_13890353.data != null ? t_13890353.data.length : 0)+0-1)-0].Field2 = val_13890355;
    }
    else {
      if (((t_13890353.data != null ? t_13890353.data.length : 0) == 0)) {
      if (!(is_power_of_two_8715029(64))) {
      failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
      }
      
      t_13890353.counter = 0;
      t_13890353.data = new Array(64); for (var i=0;i<64;++i) {t_13890353.data[i]={Field0: 0, Field1: null, Field2: 0};}      }
      
      if (must_rehash_13950601(t_13890353)) {
      enlarge_13975161(t_13890353);
      index_13925641 = raw_get_known_hc_13976628(t_13890353, key_13890354, hc_13915601[0]);
      }
      
      index_13925641 = subInt(-1, index_13925641);
      raw_insert_13976122(t_13890353, t_13890353, "data", key_13890354, val_13890355, hc_13915601[0], index_13925641);
      t_13890353.counter = addInt(t_13890353.counter, 1);
    }
    

  
}
function HEX5BHEX5D_13985153(t_13985159, key_13985160) {
  var result_13985162 = null;
  var result_13985162_Idx = 0;

    var hc_13985163 = [0];
    var index_13985164 = raw_get_13915602(t_13985159, key_13985160, hc_13985163, 0);
    if ((0 <= index_13985164)) {
    result_13985162 = t_13985159.data[chckIndx(index_13985164, 0, (t_13985159.data != null ? t_13985159.data.length : 0)+0-1)-0]; result_13985162_Idx = "Field2";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_13985160 || []), parent: null, m_type: NTI6245, name: null, trace: null, up: null}, "KeyError");
    }
    

  return [result_13985162, result_13985162_Idx];

}
function hash_10550440(x_10550443) {
  var result_10550444 = 0;

    result_10550444 = x_10550443;

  return result_10550444;

}
function raw_get_14035602(t_14035606, key_14035607, hc_14035608, hc_14035608_Idx) {
            var Tmp3;

  var result_14035609 = 0;

  BeforeRet: do {
    hc_14035608[hc_14035608_Idx] = hash_10550440(key_14035607);
    if ((hc_14035608[hc_14035608_Idx] == 0)) {
    hc_14035608[hc_14035608_Idx] = 314159265;
    }
    
    if (((t_14035606.data != null ? t_14035606.data.length : 0) == 0)) {
    result_14035609 = -1;
    break BeforeRet;
    }
    
    var h_14045138 = (hc_14035608[hc_14035608_Idx] & (t_14035606.data != null ? (t_14035606.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_10612018(t_14035606.data[chckIndx(h_14045138, 0, (t_14035606.data != null ? t_14035606.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_14035606.data[chckIndx(h_14045138, 0, (t_14035606.data != null ? t_14035606.data.length : 0)+0-1)-0].Field0 == hc_14035608[hc_14035608_Idx])) Tmp3 = false; else {              Tmp3 = (t_14035606.data[chckIndx(h_14045138, 0, (t_14035606.data != null ? t_14035606.data.length : 0)+0-1)-0].Field1 == key_14035607);            }          if (Tmp3) {
          result_14035609 = h_14045138;
          break BeforeRet;
          }
          
          h_14045138 = next_try_10615014(h_14045138, (t_14035606.data != null ? (t_14035606.data.length-1) : -1));
        }
    } while(false);
    result_14035609 = subInt(-1, h_14045138);
  } while (false);

  return result_14035609;

}
function must_rehash_14070601(t_14070604) {
  var result_14070605 = false;

    if (!((t_14070604.counter < (t_14070604.data != null ? t_14070604.data.length : 0)))) {
    failed_assert_impl_102680(makeNimstrLit("hashcommon.nim(33, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_14070605 = ((mulInt((t_14070604.data != null ? t_14070604.data.length : 0), 2) < mulInt(t_14070604.counter, 3)) || (subInt((t_14070604.data != null ? t_14070604.data.length : 0), t_14070604.counter) < 4));

  return result_14070605;

}
function raw_insert_14096122(t_14096128, data_14096131, data_14096131_Idx, key_14096132, val_14096133, hc_14096134, h_14096135) {
    data_14096131[data_14096131_Idx][chckIndx(h_14096135, 0, (data_14096131[data_14096131_Idx] != null ? data_14096131[data_14096131_Idx].length : 0)+0-1)-0].Field1 = key_14096132;
    data_14096131[data_14096131_Idx][chckIndx(h_14096135, 0, (data_14096131[data_14096131_Idx] != null ? data_14096131[data_14096131_Idx].length : 0)+0-1)-0].Field2 = val_14096133;
    data_14096131[data_14096131_Idx][chckIndx(h_14096135, 0, (data_14096131[data_14096131_Idx] != null ? data_14096131[data_14096131_Idx].length : 0)+0-1)-0].Field0 = hc_14096134;

  
}
function enlarge_14095161(t_14095167) {
    var n_14095175 = null;
    n_14095175 = new Array(chckRange(mulInt((t_14095167.data != null ? t_14095167.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_14095167.data != null ? t_14095167.data.length : 0), 2), 0, 2147483647);++i) {n_14095175[i]={Field0: 0, Field1: 0, Field2: 0};}    var Tmp1 = t_14095167.data; t_14095167.data = n_14095175; n_14095175 = Tmp1;    L2: do {
      var i_14095334 = 0;
      var colontmp__14100838 = 0;
      colontmp__14100838 = (n_14095175 != null ? (n_14095175.length-1) : -1);
      var res_14100839 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_14100839 <= colontmp__14100838)) break L4;
            i_14095334 = res_14100839;
            var eh_14095490 = n_14095175[chckIndx(i_14095334, 0, (n_14095175 != null ? n_14095175.length : 0)+0-1)-0].Field0;
            if (is_filled_10612018(eh_14095490)) {
            var j_14095497 = (eh_14095490 & (t_14095167.data != null ? (t_14095167.data.length-1) : -1));
            L5: do {
                L6: while (true) {
                if (!is_filled_10612018(t_14095167.data[chckIndx(j_14095497, 0, (t_14095167.data != null ? t_14095167.data.length : 0)+0-1)-0].Field0)) break L6;
                  j_14095497 = next_try_10615014(j_14095497, (t_14095167.data != null ? (t_14095167.data.length-1) : -1));
                }
            } while(false);
            raw_insert_14096122(t_14095167, t_14095167, "data", n_14095175[chckIndx(i_14095334, 0, (n_14095175 != null ? n_14095175.length : 0)+0-1)-0].Field1, n_14095175[chckIndx(i_14095334, 0, (n_14095175 != null ? n_14095175.length : 0)+0-1)-0].Field2, eh_14095490, j_14095497);
            }
            
            res_14100839 = addInt(res_14100839, 1);
          }
      } while(false);
    } while(false);

  
}
function raw_get_known_hc_14096628(t_14096632, key_14096633, hc_14096634) {
  var result_14096635 = 0;

  BeforeRet: do {
    if (((t_14096632.data != null ? t_14096632.data.length : 0) == 0)) {
    result_14096635 = -1;
    break BeforeRet;
    }
    
    var h_14100138 = (hc_14096634 & (t_14096632.data != null ? (t_14096632.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_10612018(t_14096632.data[chckIndx(h_14100138, 0, (t_14096632.data != null ? t_14096632.data.length : 0)+0-1)-0].Field0)) break L2;
          if (((t_14096632.data[chckIndx(h_14100138, 0, (t_14096632.data != null ? t_14096632.data.length : 0)+0-1)-0].Field0 == hc_14096634) && (t_14096632.data[chckIndx(h_14100138, 0, (t_14096632.data != null ? t_14096632.data.length : 0)+0-1)-0].Field1 == key_14096633))) {
          result_14096635 = h_14100138;
          break BeforeRet;
          }
          
          h_14100138 = next_try_10615014(h_14100138, (t_14096632.data != null ? (t_14096632.data.length-1) : -1));
        }
    } while(false);
    result_14096635 = subInt(-1, h_14100138);
  } while (false);

  return result_14096635;

}
function HEX5BHEX5DHEX3D_14010282(t_14010288, key_14010289, val_14010290) {
    if (((t_14010288.data != null ? t_14010288.data.length : 0) == 0)) {
    if (!(is_power_of_two_8715029(64))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    t_14010288.counter = 0;
    t_14010288.data = new Array(64); for (var i=0;i<64;++i) {t_14010288.data[i]={Field0: 0, Field1: 0, Field2: 0};}    }
    
    var hc_14035601 = [0];
    var index_14045639 = raw_get_14035602(t_14010288, key_14010289, hc_14035601, 0);
    if ((0 <= index_14045639)) {
    t_14010288.data[chckIndx(index_14045639, 0, (t_14010288.data != null ? t_14010288.data.length : 0)+0-1)-0].Field2 = val_14010290;
    }
    else {
      if (((t_14010288.data != null ? t_14010288.data.length : 0) == 0)) {
      if (!(is_power_of_two_8715029(64))) {
      failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
      }
      
      t_14010288.counter = 0;
      t_14010288.data = new Array(64); for (var i=0;i<64;++i) {t_14010288.data[i]={Field0: 0, Field1: 0, Field2: 0};}      }
      
      if (must_rehash_14070601(t_14010288)) {
      enlarge_14095161(t_14010288);
      index_14045639 = raw_get_known_hc_14096628(t_14010288, key_14010289, hc_14035601[0]);
      }
      
      index_14045639 = subInt(-1, index_14045639);
      raw_insert_14096122(t_14010288, t_14010288, "data", key_14010289, val_14010290, hc_14035601[0], index_14045639);
      t_14010288.counter = addInt(t_14010288.counter, 1);
    }
    

  
}
function HEX21HEX26_10547244(h_10547246, val_10547247) {
  var result_10547248 = 0;

    var h_10547249 = (h_10547246 >>> 0);
    var val_10547250 = (val_10547247 >>> 0);
    var res_10547251 = ((h_10547249 + val_10547250) >>> 0);
    res_10547251 = ((res_10547251 + (res_10547251 << 10)) >>> 0);
    res_10547251 = (res_10547251 ^ ((res_10547251 >>> 0) >>> 6));
    result_10547248 = (res_10547251|0);

  return result_10547248;

}
function binary_search_1814190(c_1814192, tab_1814194, len_1814195, stride_1814196) {
      var Tmp3;

  var result_1814197 = 0;

  BeforeRet: do {
    var n_1814198 = len_1814195;
    var t_1814200 = 0;
    L1: do {
        L2: while (true) {
        if (!(1 < n_1814198)) break L2;
          var m_1815001 = divInt(n_1814198, 2);
          var p_1815002 = addInt(t_1814200, mulInt(m_1815001, stride_1814196));
          if ((tab_1814194[chckIndx(p_1815002, 0, (tab_1814194 != null ? tab_1814194.length : 0)+0-1)-0] <= ((c_1814192)|0))) {
          t_1814200 = p_1815002;
          n_1814198 = subInt(n_1814198, m_1815001);
          }
          else {
            n_1814198 = m_1815001;
          }
          
        }
    } while(false);
      if (!!((n_1814198 == 0))) Tmp3 = false; else {        Tmp3 = (tab_1814194[chckIndx(t_1814200, 0, (tab_1814194 != null ? tab_1814194.length : 0)+0-1)-0] <= ((c_1814192)|0));      }    if (Tmp3) {
    result_1814197 = t_1814200;
    break BeforeRet;
    }
    
    result_1814197 = -1;
    break BeforeRet;
  } while (false);

  return result_1814197;

}
function nuctoLower(c_1830016) {
      var Tmp1;
      var Tmp2;
      var Tmp3;

  var result_1830017 = 0;

  BeforeRet: do {
    var c_1830018 = c_1830016;
    var p_1830042 = binary_search_1814190(c_1830018, [65, 90, 532, 192, 214, 532, 216, 222, 532, 393, 394, 705, 433, 434, 717, 904, 906, 537, 910, 911, 563, 913, 929, 532, 931, 939, 532, 1021, 1023, 370, 1024, 1039, 580, 1040, 1071, 532, 1329, 1366, 548, 4256, 4293, 7764, 5024, 5103, 39364, 5104, 5109, 508, 7312, 7354, -2508, 7357, 7359, -2508, 7944, 7951, 492, 7960, 7965, 492, 7976, 7983, 492, 7992, 7999, 492, 8008, 8013, 492, 8040, 8047, 492, 8072, 8079, 492, 8088, 8095, 492, 8104, 8111, 492, 8120, 8121, 492, 8122, 8123, 426, 8136, 8139, 414, 8152, 8153, 492, 8154, 8155, 400, 8168, 8169, 492, 8170, 8171, 388, 8184, 8185, 372, 8186, 8187, 374, 11264, 11310, 548, 11390, 11391, -10315, 65313, 65338, 532, 66560, 66599, 540, 66736, 66771, 540, 68736, 68786, 564, 71840, 71871, 532, 93760, 93791, 532, 125184, 125217, 534], 45, 3);
      if (!(0 <= p_1830042)) Tmp2 = false; else {        Tmp2 = (to_lower_ranges_1810223[chckIndx(p_1830042, 0, (to_lower_ranges_1810223 != null ? to_lower_ranges_1810223.length : 0)+0-1)-0] <= ((c_1830018)|0));      }      if (!Tmp2) Tmp1 = false; else {        Tmp1 = (((c_1830018)|0) <= to_lower_ranges_1810223[chckIndx(addInt(p_1830042, 1), 0, (to_lower_ranges_1810223 != null ? to_lower_ranges_1810223.length : 0)+0-1)-0]);      }    if (Tmp1) {
    result_1830017 = subInt(addInt(((c_1830018)|0), to_lower_ranges_1810223[chckIndx(addInt(p_1830042, 2), 0, (to_lower_ranges_1810223 != null ? to_lower_ranges_1810223.length : 0)+0-1)-0]), 500);
    break BeforeRet;
    }
    
    p_1830042 = binary_search_1814190(c_1830018, [256, 501, 258, 501, 260, 501, 262, 501, 264, 501, 266, 501, 268, 501, 270, 501, 272, 501, 274, 501, 276, 501, 278, 501, 280, 501, 282, 501, 284, 501, 286, 501, 288, 501, 290, 501, 292, 501, 294, 501, 296, 501, 298, 501, 300, 501, 302, 501, 304, 301, 306, 501, 308, 501, 310, 501, 313, 501, 315, 501, 317, 501, 319, 501, 321, 501, 323, 501, 325, 501, 327, 501, 330, 501, 332, 501, 334, 501, 336, 501, 338, 501, 340, 501, 342, 501, 344, 501, 346, 501, 348, 501, 350, 501, 352, 501, 354, 501, 356, 501, 358, 501, 360, 501, 362, 501, 364, 501, 366, 501, 368, 501, 370, 501, 372, 501, 374, 501, 376, 379, 377, 501, 379, 501, 381, 501, 385, 710, 386, 501, 388, 501, 390, 706, 391, 501, 395, 501, 398, 579, 399, 702, 400, 703, 401, 501, 403, 705, 404, 707, 406, 711, 407, 709, 408, 501, 412, 711, 413, 713, 415, 714, 416, 501, 418, 501, 420, 501, 422, 718, 423, 501, 425, 718, 428, 501, 430, 718, 431, 501, 435, 501, 437, 501, 439, 719, 440, 501, 444, 501, 452, 502, 453, 501, 455, 502, 456, 501, 458, 502, 459, 501, 461, 501, 463, 501, 465, 501, 467, 501, 469, 501, 471, 501, 473, 501, 475, 501, 478, 501, 480, 501, 482, 501, 484, 501, 486, 501, 488, 501, 490, 501, 492, 501, 494, 501, 497, 502, 498, 501, 500, 501, 502, 403, 503, 444, 504, 501, 506, 501, 508, 501, 510, 501, 512, 501, 514, 501, 516, 501, 518, 501, 520, 501, 522, 501, 524, 501, 526, 501, 528, 501, 530, 501, 532, 501, 534, 501, 536, 501, 538, 501, 540, 501, 542, 501, 544, 370, 546, 501, 548, 501, 550, 501, 552, 501, 554, 501, 556, 501, 558, 501, 560, 501, 562, 501, 570, 11295, 571, 501, 573, 337, 574, 11292, 577, 501, 579, 305, 580, 569, 581, 571, 582, 501, 584, 501, 586, 501, 588, 501, 590, 501, 880, 501, 882, 501, 886, 501, 895, 616, 902, 538, 908, 564, 975, 508, 984, 501, 986, 501, 988, 501, 990, 501, 992, 501, 994, 501, 996, 501, 998, 501, 1000, 501, 1002, 501, 1004, 501, 1006, 501, 1012, 440, 1015, 501, 1017, 493, 1018, 501, 1120, 501, 1122, 501, 1124, 501, 1126, 501, 1128, 501, 1130, 501, 1132, 501, 1134, 501, 1136, 501, 1138, 501, 1140, 501, 1142, 501, 1144, 501, 1146, 501, 1148, 501, 1150, 501, 1152, 501, 1162, 501, 1164, 501, 1166, 501, 1168, 501, 1170, 501, 1172, 501, 1174, 501, 1176, 501, 1178, 501, 1180, 501, 1182, 501, 1184, 501, 1186, 501, 1188, 501, 1190, 501, 1192, 501, 1194, 501, 1196, 501, 1198, 501, 1200, 501, 1202, 501, 1204, 501, 1206, 501, 1208, 501, 1210, 501, 1212, 501, 1214, 501, 1216, 515, 1217, 501, 1219, 501, 1221, 501, 1223, 501, 1225, 501, 1227, 501, 1229, 501, 1232, 501, 1234, 501, 1236, 501, 1238, 501, 1240, 501, 1242, 501, 1244, 501, 1246, 501, 1248, 501, 1250, 501, 1252, 501, 1254, 501, 1256, 501, 1258, 501, 1260, 501, 1262, 501, 1264, 501, 1266, 501, 1268, 501, 1270, 501, 1272, 501, 1274, 501, 1276, 501, 1278, 501, 1280, 501, 1282, 501, 1284, 501, 1286, 501, 1288, 501, 1290, 501, 1292, 501, 1294, 501, 1296, 501, 1298, 501, 1300, 501, 1302, 501, 1304, 501, 1306, 501, 1308, 501, 1310, 501, 1312, 501, 1314, 501, 1316, 501, 1318, 501, 1320, 501, 1322, 501, 1324, 501, 1326, 501, 4295, 7764, 4301, 7764, 7680, 501, 7682, 501, 7684, 501, 7686, 501, 7688, 501, 7690, 501, 7692, 501, 7694, 501, 7696, 501, 7698, 501, 7700, 501, 7702, 501, 7704, 501, 7706, 501, 7708, 501, 7710, 501, 7712, 501, 7714, 501, 7716, 501, 7718, 501, 7720, 501, 7722, 501, 7724, 501, 7726, 501, 7728, 501, 7730, 501, 7732, 501, 7734, 501, 7736, 501, 7738, 501, 7740, 501, 7742, 501, 7744, 501, 7746, 501, 7748, 501, 7750, 501, 7752, 501, 7754, 501, 7756, 501, 7758, 501, 7760, 501, 7762, 501, 7764, 501, 7766, 501, 7768, 501, 7770, 501, 7772, 501, 7774, 501, 7776, 501, 7778, 501, 7780, 501, 7782, 501, 7784, 501, 7786, 501, 7788, 501, 7790, 501, 7792, 501, 7794, 501, 7796, 501, 7798, 501, 7800, 501, 7802, 501, 7804, 501, 7806, 501, 7808, 501, 7810, 501, 7812, 501, 7814, 501, 7816, 501, 7818, 501, 7820, 501, 7822, 501, 7824, 501, 7826, 501, 7828, 501, 7838, -7115, 7840, 501, 7842, 501, 7844, 501, 7846, 501, 7848, 501, 7850, 501, 7852, 501, 7854, 501, 7856, 501, 7858, 501, 7860, 501, 7862, 501, 7864, 501, 7866, 501, 7868, 501, 7870, 501, 7872, 501, 7874, 501, 7876, 501, 7878, 501, 7880, 501, 7882, 501, 7884, 501, 7886, 501, 7888, 501, 7890, 501, 7892, 501, 7894, 501, 7896, 501, 7898, 501, 7900, 501, 7902, 501, 7904, 501, 7906, 501, 7908, 501, 7910, 501, 7912, 501, 7914, 501, 7916, 501, 7918, 501, 7920, 501, 7922, 501, 7924, 501, 7926, 501, 7928, 501, 7930, 501, 7932, 501, 7934, 501, 8025, 492, 8027, 492, 8029, 492, 8031, 492, 8124, 491, 8140, 491, 8172, 493, 8188, 491, 8486, -7017, 8490, -7883, 8491, -7762, 8498, 528, 8579, 501, 11360, 501, 11362, -10243, 11363, -3314, 11364, -10227, 11367, 501, 11369, 501, 11371, 501, 11373, -10280, 11374, -10249, 11375, -10283, 11376, -10282, 11378, 501, 11381, 501, 11392, 501, 11394, 501, 11396, 501, 11398, 501, 11400, 501, 11402, 501, 11404, 501, 11406, 501, 11408, 501, 11410, 501, 11412, 501, 11414, 501, 11416, 501, 11418, 501, 11420, 501, 11422, 501, 11424, 501, 11426, 501, 11428, 501, 11430, 501, 11432, 501, 11434, 501, 11436, 501, 11438, 501, 11440, 501, 11442, 501, 11444, 501, 11446, 501, 11448, 501, 11450, 501, 11452, 501, 11454, 501, 11456, 501, 11458, 501, 11460, 501, 11462, 501, 11464, 501, 11466, 501, 11468, 501, 11470, 501, 11472, 501, 11474, 501, 11476, 501, 11478, 501, 11480, 501, 11482, 501, 11484, 501, 11486, 501, 11488, 501, 11490, 501, 11499, 501, 11501, 501, 11506, 501, 42560, 501, 42562, 501, 42564, 501, 42566, 501, 42568, 501, 42570, 501, 42572, 501, 42574, 501, 42576, 501, 42578, 501, 42580, 501, 42582, 501, 42584, 501, 42586, 501, 42588, 501, 42590, 501, 42592, 501, 42594, 501, 42596, 501, 42598, 501, 42600, 501, 42602, 501, 42604, 501, 42624, 501, 42626, 501, 42628, 501, 42630, 501, 42632, 501, 42634, 501, 42636, 501, 42638, 501, 42640, 501, 42642, 501, 42644, 501, 42646, 501, 42648, 501, 42650, 501, 42786, 501, 42788, 501, 42790, 501, 42792, 501, 42794, 501, 42796, 501, 42798, 501, 42802, 501, 42804, 501, 42806, 501, 42808, 501, 42810, 501, 42812, 501, 42814, 501, 42816, 501, 42818, 501, 42820, 501, 42822, 501, 42824, 501, 42826, 501, 42828, 501, 42830, 501, 42832, 501, 42834, 501, 42836, 501, 42838, 501, 42840, 501, 42842, 501, 42844, 501, 42846, 501, 42848, 501, 42850, 501, 42852, 501, 42854, 501, 42856, 501, 42858, 501, 42860, 501, 42862, 501, 42873, 501, 42875, 501, 42877, -34832, 42878, 501, 42880, 501, 42882, 501, 42884, 501, 42886, 501, 42891, 501, 42893, -41780, 42896, 501, 42898, 501, 42902, 501, 42904, 501, 42906, 501, 42908, 501, 42910, 501, 42912, 501, 42914, 501, 42916, 501, 42918, 501, 42920, 501, 42922, -41808, 42923, -41819, 42924, -41815, 42925, -41805, 42926, -41808, 42928, -41758, 42929, -41782, 42930, -41761, 42931, 1428, 42932, 501, 42934, 501, 42936, 501, 42938, 501, 42940, 501, 42942, 501, 42946, 501, 42948, 452, 42949, -41807, 42950, -34884], 610, 2);
      if (!(0 <= p_1830042)) Tmp3 = false; else {        Tmp3 = (((c_1830018)|0) == to_lower_singlets_1811470[chckIndx(p_1830042, 0, (to_lower_singlets_1811470 != null ? to_lower_singlets_1811470.length : 0)+0-1)-0]);      }    if (Tmp3) {
    result_1830017 = subInt(addInt(((c_1830018)|0), to_lower_singlets_1811470[chckIndx(addInt(p_1830042, 1), 0, (to_lower_singlets_1811470 != null ? to_lower_singlets_1811470.length : 0)+0-1)-0]), 500);
    break BeforeRet;
    }
    
    result_1830017 = c_1830018;
    break BeforeRet;
  } while (false);

  return result_1830017;

}
function HEX3CHEX3DHEX25_4294(x_4296, y_4297) {
  var result_4298 = false;

    result_4298 = ((x_4296 >>> 0) <= (y_4297 >>> 0));

  return result_4298;

}
function nuctoLowerStr(s_2880222) {
  var result_2880223 = null;

    result_2880223 = nimCopy(null, mnewString(chckRange((s_2880222 != null ? s_2880222.length : 0), 0, 2147483647)), NTI112);
    var i_2880224 = 0;
    var result_index_2880225 = 0;
    var rune_2880226 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_2880224 < (s_2880222 != null ? s_2880222.length : 0))) break L2;
          if ((s_2880222[chckIndx(i_2880224, 0, (s_2880222 != null ? s_2880222.length : 0)+0-1)-0] <= 127)) {
          rune_2880226 = chckRange(s_2880222[chckIndx(i_2880224, 0, (s_2880222 != null ? s_2880222.length : 0)+0-1)-0], -2147483648, 2147483647);
          i_2880224 = addInt(i_2880224, 1);
          }
          else {
          if ((((s_2880222[chckIndx(i_2880224, 0, (s_2880222 != null ? s_2880222.length : 0)+0-1)-0] >>> 0) >>> 5) == 6)) {
          if ((i_2880224 <= subInt((s_2880222 != null ? s_2880222.length : 0), 2))) {
          rune_2880226 = chckRange((((s_2880222[chckIndx(i_2880224, 0, (s_2880222 != null ? s_2880222.length : 0)+0-1)-0] & 31) << 6) | (s_2880222[chckIndx(addInt(i_2880224, 1), 0, (s_2880222 != null ? s_2880222.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
          i_2880224 = addInt(i_2880224, 2);
          }
          else {
            rune_2880226 = 65533;
            i_2880224 = addInt(i_2880224, 1);
          }
          
          }
          else {
          if ((((s_2880222[chckIndx(i_2880224, 0, (s_2880222 != null ? s_2880222.length : 0)+0-1)-0] >>> 0) >>> 4) == 14)) {
          if ((i_2880224 <= subInt((s_2880222 != null ? s_2880222.length : 0), 3))) {
          rune_2880226 = chckRange(((((s_2880222[chckIndx(i_2880224, 0, (s_2880222 != null ? s_2880222.length : 0)+0-1)-0] & 15) << 12) | ((s_2880222[chckIndx(addInt(i_2880224, 1), 0, (s_2880222 != null ? s_2880222.length : 0)+0-1)-0] & 63) << 6)) | (s_2880222[chckIndx(addInt(i_2880224, 2), 0, (s_2880222 != null ? s_2880222.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
          i_2880224 = addInt(i_2880224, 3);
          }
          else {
            rune_2880226 = 65533;
            i_2880224 = addInt(i_2880224, 1);
          }
          
          }
          else {
          if ((((s_2880222[chckIndx(i_2880224, 0, (s_2880222 != null ? s_2880222.length : 0)+0-1)-0] >>> 0) >>> 3) == 30)) {
          if ((i_2880224 <= subInt((s_2880222 != null ? s_2880222.length : 0), 4))) {
          rune_2880226 = chckRange((((((s_2880222[chckIndx(i_2880224, 0, (s_2880222 != null ? s_2880222.length : 0)+0-1)-0] & 7) << 18) | ((s_2880222[chckIndx(addInt(i_2880224, 1), 0, (s_2880222 != null ? s_2880222.length : 0)+0-1)-0] & 63) << 12)) | ((s_2880222[chckIndx(addInt(i_2880224, 2), 0, (s_2880222 != null ? s_2880222.length : 0)+0-1)-0] & 63) << 6)) | (s_2880222[chckIndx(addInt(i_2880224, 3), 0, (s_2880222 != null ? s_2880222.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
          i_2880224 = addInt(i_2880224, 4);
          }
          else {
            rune_2880226 = 65533;
            i_2880224 = addInt(i_2880224, 1);
          }
          
          }
          else {
          if ((((s_2880222[chckIndx(i_2880224, 0, (s_2880222 != null ? s_2880222.length : 0)+0-1)-0] >>> 0) >>> 2) == 62)) {
          if ((i_2880224 <= subInt((s_2880222 != null ? s_2880222.length : 0), 5))) {
          rune_2880226 = chckRange(((((((s_2880222[chckIndx(i_2880224, 0, (s_2880222 != null ? s_2880222.length : 0)+0-1)-0] & 3) << 24) | ((s_2880222[chckIndx(addInt(i_2880224, 1), 0, (s_2880222 != null ? s_2880222.length : 0)+0-1)-0] & 63) << 18)) | ((s_2880222[chckIndx(addInt(i_2880224, 2), 0, (s_2880222 != null ? s_2880222.length : 0)+0-1)-0] & 63) << 12)) | ((s_2880222[chckIndx(addInt(i_2880224, 3), 0, (s_2880222 != null ? s_2880222.length : 0)+0-1)-0] & 63) << 6)) | (s_2880222[chckIndx(addInt(i_2880224, 4), 0, (s_2880222 != null ? s_2880222.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
          i_2880224 = addInt(i_2880224, 5);
          }
          else {
            rune_2880226 = 65533;
            i_2880224 = addInt(i_2880224, 1);
          }
          
          }
          else {
          if ((((s_2880222[chckIndx(i_2880224, 0, (s_2880222 != null ? s_2880222.length : 0)+0-1)-0] >>> 0) >>> 1) == 126)) {
          if ((i_2880224 <= subInt((s_2880222 != null ? s_2880222.length : 0), 6))) {
          rune_2880226 = chckRange((((((((s_2880222[chckIndx(i_2880224, 0, (s_2880222 != null ? s_2880222.length : 0)+0-1)-0] & 1) << 30) | ((s_2880222[chckIndx(addInt(i_2880224, 1), 0, (s_2880222 != null ? s_2880222.length : 0)+0-1)-0] & 63) << 24)) | ((s_2880222[chckIndx(addInt(i_2880224, 2), 0, (s_2880222 != null ? s_2880222.length : 0)+0-1)-0] & 63) << 18)) | ((s_2880222[chckIndx(addInt(i_2880224, 3), 0, (s_2880222 != null ? s_2880222.length : 0)+0-1)-0] & 63) << 12)) | ((s_2880222[chckIndx(addInt(i_2880224, 4), 0, (s_2880222 != null ? s_2880222.length : 0)+0-1)-0] & 63) << 6)) | (s_2880222[chckIndx(addInt(i_2880224, 5), 0, (s_2880222 != null ? s_2880222.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
          i_2880224 = addInt(i_2880224, 6);
          }
          else {
            rune_2880226 = 65533;
            i_2880224 = addInt(i_2880224, 1);
          }
          
          }
          else {
            rune_2880226 = chckRange(s_2880222[chckIndx(i_2880224, 0, (s_2880222 != null ? s_2880222.length : 0)+0-1)-0], -2147483648, 2147483647);
            i_2880224 = addInt(i_2880224, 1);
          }
          }}}}}
          rune_2880226 = nuctoLower(rune_2880226);
          var i_3130207 = rune_2880226;
          if (HEX3CHEX3DHEX25_4294(i_3130207, 127)) {
          (result_2880223 == null ? result_2880223 = mnewString(chckRange(addInt(result_index_2880225, 1), 0, 2147483647)) : result_2880223.length = chckRange(addInt(result_index_2880225, 1), 0, 2147483647));
          result_2880223[chckIndx(addInt(result_index_2880225, 0), 0, (result_2880223 != null ? result_2880223.length : 0)+0-1)-0] = chckRange(i_3130207, 0, 255);
          result_index_2880225 = addInt(result_index_2880225, 1);
          }
          else {
          if (HEX3CHEX3DHEX25_4294(i_3130207, 2047)) {
          (result_2880223 == null ? result_2880223 = mnewString(chckRange(addInt(result_index_2880225, 2), 0, 2147483647)) : result_2880223.length = chckRange(addInt(result_index_2880225, 2), 0, 2147483647));
          result_2880223[chckIndx(addInt(result_index_2880225, 0), 0, (result_2880223 != null ? result_2880223.length : 0)+0-1)-0] = chckRange(((i_3130207 >> 6) | 192), 0, 255);
          result_2880223[chckIndx(addInt(result_index_2880225, 1), 0, (result_2880223 != null ? result_2880223.length : 0)+0-1)-0] = chckRange(((i_3130207 & 63) | 128), 0, 255);
          result_index_2880225 = addInt(result_index_2880225, 2);
          }
          else {
          if (HEX3CHEX3DHEX25_4294(i_3130207, 65535)) {
          (result_2880223 == null ? result_2880223 = mnewString(chckRange(addInt(result_index_2880225, 3), 0, 2147483647)) : result_2880223.length = chckRange(addInt(result_index_2880225, 3), 0, 2147483647));
          result_2880223[chckIndx(addInt(result_index_2880225, 0), 0, (result_2880223 != null ? result_2880223.length : 0)+0-1)-0] = chckRange(((i_3130207 >> 12) | 224), 0, 255);
          result_2880223[chckIndx(addInt(result_index_2880225, 1), 0, (result_2880223 != null ? result_2880223.length : 0)+0-1)-0] = chckRange((((i_3130207 >> 6) & 63) | 128), 0, 255);
          result_2880223[chckIndx(addInt(result_index_2880225, 2), 0, (result_2880223 != null ? result_2880223.length : 0)+0-1)-0] = chckRange(((i_3130207 & 63) | 128), 0, 255);
          result_index_2880225 = addInt(result_index_2880225, 3);
          }
          else {
          if (HEX3CHEX3DHEX25_4294(i_3130207, 2097151)) {
          (result_2880223 == null ? result_2880223 = mnewString(chckRange(addInt(result_index_2880225, 4), 0, 2147483647)) : result_2880223.length = chckRange(addInt(result_index_2880225, 4), 0, 2147483647));
          result_2880223[chckIndx(addInt(result_index_2880225, 0), 0, (result_2880223 != null ? result_2880223.length : 0)+0-1)-0] = chckRange(((i_3130207 >> 18) | 240), 0, 255);
          result_2880223[chckIndx(addInt(result_index_2880225, 1), 0, (result_2880223 != null ? result_2880223.length : 0)+0-1)-0] = chckRange((((i_3130207 >> 12) & 63) | 128), 0, 255);
          result_2880223[chckIndx(addInt(result_index_2880225, 2), 0, (result_2880223 != null ? result_2880223.length : 0)+0-1)-0] = chckRange((((i_3130207 >> 6) & 63) | 128), 0, 255);
          result_2880223[chckIndx(addInt(result_index_2880225, 3), 0, (result_2880223 != null ? result_2880223.length : 0)+0-1)-0] = chckRange(((i_3130207 & 63) | 128), 0, 255);
          result_index_2880225 = addInt(result_index_2880225, 4);
          }
          else {
          if (HEX3CHEX3DHEX25_4294(i_3130207, 67108863)) {
          (result_2880223 == null ? result_2880223 = mnewString(chckRange(addInt(result_index_2880225, 5), 0, 2147483647)) : result_2880223.length = chckRange(addInt(result_index_2880225, 5), 0, 2147483647));
          result_2880223[chckIndx(addInt(result_index_2880225, 0), 0, (result_2880223 != null ? result_2880223.length : 0)+0-1)-0] = chckRange(((i_3130207 >> 24) | 248), 0, 255);
          result_2880223[chckIndx(addInt(result_index_2880225, 1), 0, (result_2880223 != null ? result_2880223.length : 0)+0-1)-0] = chckRange((((i_3130207 >> 18) & 63) | 128), 0, 255);
          result_2880223[chckIndx(addInt(result_index_2880225, 2), 0, (result_2880223 != null ? result_2880223.length : 0)+0-1)-0] = chckRange((((i_3130207 >> 12) & 63) | 128), 0, 255);
          result_2880223[chckIndx(addInt(result_index_2880225, 3), 0, (result_2880223 != null ? result_2880223.length : 0)+0-1)-0] = chckRange((((i_3130207 >> 6) & 63) | 128), 0, 255);
          result_2880223[chckIndx(addInt(result_index_2880225, 4), 0, (result_2880223 != null ? result_2880223.length : 0)+0-1)-0] = chckRange(((i_3130207 & 63) | 128), 0, 255);
          result_index_2880225 = addInt(result_index_2880225, 5);
          }
          else {
          if (HEX3CHEX3DHEX25_4294(i_3130207, 2147483647)) {
          (result_2880223 == null ? result_2880223 = mnewString(chckRange(addInt(result_index_2880225, 6), 0, 2147483647)) : result_2880223.length = chckRange(addInt(result_index_2880225, 6), 0, 2147483647));
          result_2880223[chckIndx(addInt(result_index_2880225, 0), 0, (result_2880223 != null ? result_2880223.length : 0)+0-1)-0] = chckRange(((i_3130207 >> 30) | 252), 0, 255);
          result_2880223[chckIndx(addInt(result_index_2880225, 1), 0, (result_2880223 != null ? result_2880223.length : 0)+0-1)-0] = chckRange((((i_3130207 >> 24) & 63) | 128), 0, 255);
          result_2880223[chckIndx(addInt(result_index_2880225, 2), 0, (result_2880223 != null ? result_2880223.length : 0)+0-1)-0] = chckRange((((i_3130207 >> 18) & 63) | 128), 0, 255);
          result_2880223[chckIndx(addInt(result_index_2880225, 3), 0, (result_2880223 != null ? result_2880223.length : 0)+0-1)-0] = chckRange((((i_3130207 >> 12) & 63) | 128), 0, 255);
          result_2880223[chckIndx(addInt(result_index_2880225, 4), 0, (result_2880223 != null ? result_2880223.length : 0)+0-1)-0] = chckRange((((i_3130207 >> 6) & 63) | 128), 0, 255);
          result_2880223[chckIndx(addInt(result_index_2880225, 5), 0, (result_2880223 != null ? result_2880223.length : 0)+0-1)-0] = chckRange(((i_3130207 & 63) | 128), 0, 255);
          result_index_2880225 = addInt(result_index_2880225, 6);
          }
          else {
          }
          }}}}}
        }
    } while(false);

  return result_2880223;

}
function HEX3DHEX3D_1810064(a_1810066, b_1810067) {
  var result_1810068 = false;

  BeforeRet: do {
    result_1810068 = (((a_1810066)|0) == ((b_1810067)|0));
    break BeforeRet;
  } while (false);

  return result_1810068;

}
function find_6695208(a_6695212, item_6695213) {
  var result_6695214 = 0;

  BeforeRet: do {
    L1: do {
      var i_6695245 = 0;
      var i_14100974 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_14100974 < (a_6695212 != null ? a_6695212.length : 0))) break L3;
            i_6695245 = a_6695212[chckIndx(i_14100974, 0, (a_6695212 != null ? a_6695212.length : 0)+0-1)-0];
            if (HEX3DHEX3D_1810064(i_6695245, item_6695213)) {
            break BeforeRet;
            }
            
            result_6695214 = addInt(result_6695214, 1);
            i_14100974 = addInt(i_14100974, 1);
          }
      } while(false);
    } while(false);
    result_6695214 = -1;
  } while (false);

  return result_6695214;

}
function contains_6695201(a_6695205, item_6695206) {
  var result_6695207 = false;

  BeforeRet: do {
    result_6695207 = (0 <= find_6695208(a_6695205, item_6695206));
    break BeforeRet;
  } while (false);

  return result_6695207;

}
function HEX5BHEX5D_1795283(s_1795287, x_1795289) {
  var result_1795290 = null;

    var a_1795401 = x_1795289.a;
    var l_1795601 = addInt(subInt(x_1795289.b, a_1795401), 1);
    result_1795290 = nimCopy(null, mnewString(chckRange(l_1795601, 0, 2147483647)), NTI112);
    L1: do {
      var i_1795609 = 0;
      var i_14100981 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_14100981 < l_1795601)) break L3;
            i_1795609 = i_14100981;
            result_1795290[chckIndx(i_1795609, 0, (result_1795290 != null ? result_1795290.length : 0)+0-1)-0] = s_1795287[chckIndx(addInt(i_1795609, a_1795401), 0, (s_1795287 != null ? s_1795287.length : 0)+0-1)-0];
            i_14100981 = addInt(i_14100981, 1);
          }
      } while(false);
    } while(false);

  return result_1795290;

}
function HEX2EHEX2E_1795220(a_1795225, b_1795227) {
  var result_1795229 = {a: 0, b: 0};

    nimCopy(result_1795229, {a: a_1795225, b: b_1795227}, NTI916907);

  return result_1795229;

}
function nucStrip(s_6985038, leading_6985039, trailing_6985040, runes_6985042) {
  var result_6985043 = null;

    var s_i_6985045 = 0;
    var e_i_6985046 = subInt((s_6985038 != null ? s_6985038.length : 0), 1);
    if (leading_6985039) {
    var i_6985048 = 0;
    var x_i_6985049 = 0;
    var rune_6985050 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_6985048 < (s_6985038 != null ? s_6985038.length : 0))) break L2;
          x_i_6985049 = i_6985048;
          if ((s_6985038[chckIndx(i_6985048, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] <= 127)) {
          rune_6985050 = chckRange(s_6985038[chckIndx(i_6985048, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0], -2147483648, 2147483647);
          i_6985048 = addInt(i_6985048, 1);
          }
          else {
          if ((((s_6985038[chckIndx(i_6985048, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] >>> 0) >>> 5) == 6)) {
          if ((i_6985048 <= subInt((s_6985038 != null ? s_6985038.length : 0), 2))) {
          rune_6985050 = chckRange((((s_6985038[chckIndx(i_6985048, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 31) << 6) | (s_6985038[chckIndx(addInt(i_6985048, 1), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
          i_6985048 = addInt(i_6985048, 2);
          }
          else {
            rune_6985050 = 65533;
            i_6985048 = addInt(i_6985048, 1);
          }
          
          }
          else {
          if ((((s_6985038[chckIndx(i_6985048, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] >>> 0) >>> 4) == 14)) {
          if ((i_6985048 <= subInt((s_6985038 != null ? s_6985038.length : 0), 3))) {
          rune_6985050 = chckRange(((((s_6985038[chckIndx(i_6985048, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 15) << 12) | ((s_6985038[chckIndx(addInt(i_6985048, 1), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63) << 6)) | (s_6985038[chckIndx(addInt(i_6985048, 2), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
          i_6985048 = addInt(i_6985048, 3);
          }
          else {
            rune_6985050 = 65533;
            i_6985048 = addInt(i_6985048, 1);
          }
          
          }
          else {
          if ((((s_6985038[chckIndx(i_6985048, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] >>> 0) >>> 3) == 30)) {
          if ((i_6985048 <= subInt((s_6985038 != null ? s_6985038.length : 0), 4))) {
          rune_6985050 = chckRange((((((s_6985038[chckIndx(i_6985048, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 7) << 18) | ((s_6985038[chckIndx(addInt(i_6985048, 1), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63) << 12)) | ((s_6985038[chckIndx(addInt(i_6985048, 2), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63) << 6)) | (s_6985038[chckIndx(addInt(i_6985048, 3), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
          i_6985048 = addInt(i_6985048, 4);
          }
          else {
            rune_6985050 = 65533;
            i_6985048 = addInt(i_6985048, 1);
          }
          
          }
          else {
          if ((((s_6985038[chckIndx(i_6985048, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] >>> 0) >>> 2) == 62)) {
          if ((i_6985048 <= subInt((s_6985038 != null ? s_6985038.length : 0), 5))) {
          rune_6985050 = chckRange(((((((s_6985038[chckIndx(i_6985048, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 3) << 24) | ((s_6985038[chckIndx(addInt(i_6985048, 1), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63) << 18)) | ((s_6985038[chckIndx(addInt(i_6985048, 2), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63) << 12)) | ((s_6985038[chckIndx(addInt(i_6985048, 3), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63) << 6)) | (s_6985038[chckIndx(addInt(i_6985048, 4), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
          i_6985048 = addInt(i_6985048, 5);
          }
          else {
            rune_6985050 = 65533;
            i_6985048 = addInt(i_6985048, 1);
          }
          
          }
          else {
          if ((((s_6985038[chckIndx(i_6985048, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] >>> 0) >>> 1) == 126)) {
          if ((i_6985048 <= subInt((s_6985038 != null ? s_6985038.length : 0), 6))) {
          rune_6985050 = chckRange((((((((s_6985038[chckIndx(i_6985048, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 1) << 30) | ((s_6985038[chckIndx(addInt(i_6985048, 1), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63) << 24)) | ((s_6985038[chckIndx(addInt(i_6985048, 2), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63) << 18)) | ((s_6985038[chckIndx(addInt(i_6985048, 3), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63) << 12)) | ((s_6985038[chckIndx(addInt(i_6985048, 4), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63) << 6)) | (s_6985038[chckIndx(addInt(i_6985048, 5), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
          i_6985048 = addInt(i_6985048, 6);
          }
          else {
            rune_6985050 = 65533;
            i_6985048 = addInt(i_6985048, 1);
          }
          
          }
          else {
            rune_6985050 = chckRange(s_6985038[chckIndx(i_6985048, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0], -2147483648, 2147483647);
            i_6985048 = addInt(i_6985048, 1);
          }
          }}}}}
          s_i_6985045 = i_6985048;
          if (!(contains_6695201(runes_6985042, rune_6985050))) {
          s_i_6985045 = x_i_6985049;
          break L1;
          }
          
        }
    } while(false);
    }
    
    if (trailing_6985040) {
    var i_7230213 = e_i_6985046;
    var x_i_7230214 = 0;
    var rune_7230215 = 0;
    L3: do {
        L4: while (true) {
        if (!(0 <= i_7230213)) break L4;
          x_i_7230214 = i_7230213;
          if ((s_6985038[chckIndx(x_i_7230214, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] <= 127)) {
          rune_7230215 = chckRange(s_6985038[chckIndx(x_i_7230214, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0], -2147483648, 2147483647);
          x_i_7230214 = addInt(x_i_7230214, 1);
          }
          else {
          if ((((s_6985038[chckIndx(x_i_7230214, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] >>> 0) >>> 5) == 6)) {
          if ((x_i_7230214 <= subInt((s_6985038 != null ? s_6985038.length : 0), 2))) {
          rune_7230215 = chckRange((((s_6985038[chckIndx(x_i_7230214, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 31) << 6) | (s_6985038[chckIndx(addInt(x_i_7230214, 1), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
          x_i_7230214 = addInt(x_i_7230214, 2);
          }
          else {
            rune_7230215 = 65533;
            x_i_7230214 = addInt(x_i_7230214, 1);
          }
          
          }
          else {
          if ((((s_6985038[chckIndx(x_i_7230214, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] >>> 0) >>> 4) == 14)) {
          if ((x_i_7230214 <= subInt((s_6985038 != null ? s_6985038.length : 0), 3))) {
          rune_7230215 = chckRange(((((s_6985038[chckIndx(x_i_7230214, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 15) << 12) | ((s_6985038[chckIndx(addInt(x_i_7230214, 1), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63) << 6)) | (s_6985038[chckIndx(addInt(x_i_7230214, 2), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
          x_i_7230214 = addInt(x_i_7230214, 3);
          }
          else {
            rune_7230215 = 65533;
            x_i_7230214 = addInt(x_i_7230214, 1);
          }
          
          }
          else {
          if ((((s_6985038[chckIndx(x_i_7230214, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] >>> 0) >>> 3) == 30)) {
          if ((x_i_7230214 <= subInt((s_6985038 != null ? s_6985038.length : 0), 4))) {
          rune_7230215 = chckRange((((((s_6985038[chckIndx(x_i_7230214, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 7) << 18) | ((s_6985038[chckIndx(addInt(x_i_7230214, 1), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63) << 12)) | ((s_6985038[chckIndx(addInt(x_i_7230214, 2), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63) << 6)) | (s_6985038[chckIndx(addInt(x_i_7230214, 3), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
          x_i_7230214 = addInt(x_i_7230214, 4);
          }
          else {
            rune_7230215 = 65533;
            x_i_7230214 = addInt(x_i_7230214, 1);
          }
          
          }
          else {
          if ((((s_6985038[chckIndx(x_i_7230214, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] >>> 0) >>> 2) == 62)) {
          if ((x_i_7230214 <= subInt((s_6985038 != null ? s_6985038.length : 0), 5))) {
          rune_7230215 = chckRange(((((((s_6985038[chckIndx(x_i_7230214, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 3) << 24) | ((s_6985038[chckIndx(addInt(x_i_7230214, 1), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63) << 18)) | ((s_6985038[chckIndx(addInt(x_i_7230214, 2), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63) << 12)) | ((s_6985038[chckIndx(addInt(x_i_7230214, 3), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63) << 6)) | (s_6985038[chckIndx(addInt(x_i_7230214, 4), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
          x_i_7230214 = addInt(x_i_7230214, 5);
          }
          else {
            rune_7230215 = 65533;
            x_i_7230214 = addInt(x_i_7230214, 1);
          }
          
          }
          else {
          if ((((s_6985038[chckIndx(x_i_7230214, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] >>> 0) >>> 1) == 126)) {
          if ((x_i_7230214 <= subInt((s_6985038 != null ? s_6985038.length : 0), 6))) {
          rune_7230215 = chckRange((((((((s_6985038[chckIndx(x_i_7230214, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 1) << 30) | ((s_6985038[chckIndx(addInt(x_i_7230214, 1), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63) << 24)) | ((s_6985038[chckIndx(addInt(x_i_7230214, 2), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63) << 18)) | ((s_6985038[chckIndx(addInt(x_i_7230214, 3), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63) << 12)) | ((s_6985038[chckIndx(addInt(x_i_7230214, 4), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63) << 6)) | (s_6985038[chckIndx(addInt(x_i_7230214, 5), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
          x_i_7230214 = addInt(x_i_7230214, 6);
          }
          else {
            rune_7230215 = 65533;
            x_i_7230214 = addInt(x_i_7230214, 1);
          }
          
          }
          else {
            rune_7230215 = chckRange(s_6985038[chckIndx(x_i_7230214, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0], -2147483648, 2147483647);
            x_i_7230214 = addInt(x_i_7230214, 1);
          }
          }}}}}
          var y_i_7480207 = subInt(i_7230213, 1);
          L5: do {
              L6: while (true) {
              if (!(0 <= y_i_7480207)) break L6;
                var y_iend_7485001 = y_i_7480207;
                var p_rune_7485002 = 0;
                if ((s_6985038[chckIndx(y_iend_7485001, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] <= 127)) {
                p_rune_7485002 = chckRange(s_6985038[chckIndx(y_iend_7485001, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0], -2147483648, 2147483647);
                y_iend_7485001 = addInt(y_iend_7485001, 1);
                }
                else {
                if ((((s_6985038[chckIndx(y_iend_7485001, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] >>> 0) >>> 5) == 6)) {
                if ((y_iend_7485001 <= subInt((s_6985038 != null ? s_6985038.length : 0), 2))) {
                p_rune_7485002 = chckRange((((s_6985038[chckIndx(y_iend_7485001, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 31) << 6) | (s_6985038[chckIndx(addInt(y_iend_7485001, 1), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
                y_iend_7485001 = addInt(y_iend_7485001, 2);
                }
                else {
                  p_rune_7485002 = 65533;
                  y_iend_7485001 = addInt(y_iend_7485001, 1);
                }
                
                }
                else {
                if ((((s_6985038[chckIndx(y_iend_7485001, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] >>> 0) >>> 4) == 14)) {
                if ((y_iend_7485001 <= subInt((s_6985038 != null ? s_6985038.length : 0), 3))) {
                p_rune_7485002 = chckRange(((((s_6985038[chckIndx(y_iend_7485001, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 15) << 12) | ((s_6985038[chckIndx(addInt(y_iend_7485001, 1), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63) << 6)) | (s_6985038[chckIndx(addInt(y_iend_7485001, 2), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
                y_iend_7485001 = addInt(y_iend_7485001, 3);
                }
                else {
                  p_rune_7485002 = 65533;
                  y_iend_7485001 = addInt(y_iend_7485001, 1);
                }
                
                }
                else {
                if ((((s_6985038[chckIndx(y_iend_7485001, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] >>> 0) >>> 3) == 30)) {
                if ((y_iend_7485001 <= subInt((s_6985038 != null ? s_6985038.length : 0), 4))) {
                p_rune_7485002 = chckRange((((((s_6985038[chckIndx(y_iend_7485001, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 7) << 18) | ((s_6985038[chckIndx(addInt(y_iend_7485001, 1), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63) << 12)) | ((s_6985038[chckIndx(addInt(y_iend_7485001, 2), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63) << 6)) | (s_6985038[chckIndx(addInt(y_iend_7485001, 3), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
                y_iend_7485001 = addInt(y_iend_7485001, 4);
                }
                else {
                  p_rune_7485002 = 65533;
                  y_iend_7485001 = addInt(y_iend_7485001, 1);
                }
                
                }
                else {
                if ((((s_6985038[chckIndx(y_iend_7485001, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] >>> 0) >>> 2) == 62)) {
                if ((y_iend_7485001 <= subInt((s_6985038 != null ? s_6985038.length : 0), 5))) {
                p_rune_7485002 = chckRange(((((((s_6985038[chckIndx(y_iend_7485001, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 3) << 24) | ((s_6985038[chckIndx(addInt(y_iend_7485001, 1), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63) << 18)) | ((s_6985038[chckIndx(addInt(y_iend_7485001, 2), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63) << 12)) | ((s_6985038[chckIndx(addInt(y_iend_7485001, 3), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63) << 6)) | (s_6985038[chckIndx(addInt(y_iend_7485001, 4), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
                y_iend_7485001 = addInt(y_iend_7485001, 5);
                }
                else {
                  p_rune_7485002 = 65533;
                  y_iend_7485001 = addInt(y_iend_7485001, 1);
                }
                
                }
                else {
                if ((((s_6985038[chckIndx(y_iend_7485001, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] >>> 0) >>> 1) == 126)) {
                if ((y_iend_7485001 <= subInt((s_6985038 != null ? s_6985038.length : 0), 6))) {
                p_rune_7485002 = chckRange((((((((s_6985038[chckIndx(y_iend_7485001, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 1) << 30) | ((s_6985038[chckIndx(addInt(y_iend_7485001, 1), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63) << 24)) | ((s_6985038[chckIndx(addInt(y_iend_7485001, 2), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63) << 18)) | ((s_6985038[chckIndx(addInt(y_iend_7485001, 3), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63) << 12)) | ((s_6985038[chckIndx(addInt(y_iend_7485001, 4), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63) << 6)) | (s_6985038[chckIndx(addInt(y_iend_7485001, 5), 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0] & 63)), -2147483648, 2147483647);
                y_iend_7485001 = addInt(y_iend_7485001, 6);
                }
                else {
                  p_rune_7485002 = 65533;
                  y_iend_7485001 = addInt(y_iend_7485001, 1);
                }
                
                }
                else {
                  p_rune_7485002 = chckRange(s_6985038[chckIndx(y_iend_7485001, 0, (s_6985038 != null ? s_6985038.length : 0)+0-1)-0], -2147483648, 2147483647);
                  y_iend_7485001 = addInt(y_iend_7485001, 1);
                }
                }}}}}
                if ((y_iend_7485001 < x_i_7230214)) {
                break L5;
                }
                
                i_7230213 = y_i_7480207;
                rune_7230215 = p_rune_7485002;
                y_i_7480207 = subInt(y_i_7480207, 1);
              }
          } while(false);
          if (!(contains_6695201(runes_6985042, rune_7230215))) {
          e_i_6985046 = subInt(x_i_7230214, 1);
          break L3;
          }
          
          i_7230213 = subInt(i_7230213, 1);
        }
    } while(false);
    }
    
    var new_len_7730225 = addInt(subInt(e_i_6985046, s_i_6985045), 1);
    result_6985043 = nimCopy(null, mnewString(0), NTI112);
    if ((0 < new_len_7730225)) {
    if (result_6985043 != null) { result_6985043 = (result_6985043).concat(HEX5BHEX5D_1795283(s_6985038, HEX2EHEX2E_1795220(s_i_6985045, e_i_6985046))); } else { result_6985043 = HEX5BHEX5D_1795283(s_6985038, HEX2EHEX2E_1795220(s_i_6985045, e_i_6985046)).slice(); };
    }
    

  return result_6985043;

}
function HEX21HEX24_10547279(h_10547281) {
  var result_10547282 = 0;

    var h_10547283 = (h_10547281 >>> 0);
    var res_10547291 = ((h_10547283 + (h_10547283 << 3)) >>> 0);
    res_10547291 = (res_10547291 ^ ((res_10547291 >>> 0) >>> 11));
    res_10547291 = ((res_10547291 + (res_10547291 << 15)) >>> 0);
    result_10547282 = (res_10547291|0);

  return result_10547282;

}
function hash_13701254(x_13701256) {
  var result_13701257 = 0;

    result_13701257 = HEX21HEX26_10547244(HEX21HEX26_10547244(HEX21HEX26_10547244(hash_10590214(nuctoLowerStr(nucStrip(x_13701256.name, true, true, [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288]))), hash_10590214(nuctoLowerStr(nucStrip(x_13701256.sector.postalCode, true, true, [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288])))), hash_10590214(nuctoLowerStr(nucStrip(x_13701256.sector.city, true, true, [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288])))), hash_10590214(nuctoLowerStr(nucStrip(x_13701256.sector.district, true, true, [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288]))));
    result_13701257 = HEX21HEX24_10547279(result_13701257);

  return result_13701257;

}
function init_tbl_tot_fam_by_street_13840838() {
              var Tmp8;
              var Tmp9;
              var Tmp10;
              var Tmp11;
              var Tmp12;
              var Tmp13;

  var result_13840862 = [{data: null, counter: 0}];

    nimCopy(result_13840862[0], init_table_13840865(64), NTI13840849);
    var streets_13860629 = nsuSplitCharSet(makeNimstrLit("Plz|DistrictUser|City|District|Street|TotalFamilies\x0A63628|Ahl|Bad Soden-Salm\xC3\xBCnster|Ahl|Am Hang|1\x0A63628|Ahl|Bad Soden-Salm\xC3\xBCnster|Ahl|Sch\xC3\xB6ne Aussicht|2\x0A63628|Ahl||||3\x0A63628|Alsberg|Bad Soden-Salm\xC3\xBCnster|Alsberg|Ringstra\xC3\x9Fe|1\x0A63628|Alsberg||||1\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany|Linsengericht|Altenha\xC3\x9Flau|Elf Morgen|1\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany|Linsengericht|Altenha\xC3\x9Flau|Fasanenweg|3\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany|Linsengericht|Altenha\xC3\x9Flau|Metzgerstra\xC3\x9Fe|1\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany|Linsengericht|Altenha\xC3\x9Flau|Rosenstra\xC3\x9Fe|1\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany|Linsengericht|Altenha\xC3\x9Flau|Strumpelburg|2\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany|Linsengericht|Altenha\xC3\x9Flau|Vor der Au|1\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany||||9\x0A63579|Altenmittlau|Freigericht|Altenmittlau|An der Freigerichthalle|1\x0A63579|Altenmittlau|Freigericht|Altenmittlau|Industriestra\xC3\x9Fe|2\x0A63579|Altenmittlau|Freigericht||Kalkbergstra\xC3\x9Fe|1\x0A63579|Altenmittlau|Freigericht|Altenmittlau|Kolpingstra\xC3\x9Fe|3\x0A63579|Altenmittlau|Freigericht|Altenmittlau|Somborner Stra\xC3\x9Fe|1\x0A63579|Altenmittlau||||8\x0A63674|Altenstadt|Altenstadt|Altenstadt|Alemannenstra\xC3\x9Fe|4\x0A63674|Altenstadt|Altenstadt|Altenstadt|An der Hollerstaude|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|An der Steinkaute|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|Auf der Mauer|2\x0A63674|Altenstadt|Altenstadt|Altenstadt|Borngasse|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|Frankfurter Stra\xC3\x9Fe|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|Goethestra\xC3\x9Fe|4\x0A63674|Altenstadt|Altenstadt|Altenstadt|Hadrianstra\xC3\x9Fe|4\x0A63674|Altenstadt|Altenstadt|Altenstadt|Hanauer Stra\xC3\x9Fe|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|Kirchgasse|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|R\xC3\xB6merbrunnen|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|Seilerstra\xC3\x9Fe|2\x0A63674|Altenstadt||||23\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|Bamberger Stra\xC3\x9Fe|2\x0A63607|Aufenau|W\xC3\xA4chtersbach||Frankfurter Stra\xC3\x9Fe|9\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|F\xC3\xBCrther Stra\xC3\x9Fe|2\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|Grimmstra\xC3\x9Fe|4\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|Hermann-L\xC3\xB6ns-Stra\xC3\x9Fe|1\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|Kantstra\xC3\x9Fe|1\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|Martin-Luther-Stra\xC3\x9Fe|1\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|M\xC3\xBCnchener Stra\xC3\x9Fe|2\x0A63607|Aufenau||||22\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Am Linsenhof|2\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster||An der Rolandquelle|2\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Auf der Hohl|2\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Bornweg|7\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Burgstra\xC3\x9Fe|4\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Feldstra\xC3\x9Fe|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Hegelstra\xC3\x9Fe|5\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Hochstra\xC3\x9Fe|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Hohm\xC3\xBChlenweg|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Honiggasse|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Kantstra\xC3\x9Fe|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Karl-Roth-Stra\xC3\x9Fe|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Pacificusstra\xC3\x9Fe|4\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster||Romsthaler Stra\xC3\x9Fe|11\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Rudolf-Berta-Stra\xC3\x9Fe|6\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Sprudelallee|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Stolzenthalstra\xC3\x9Fe|17\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Weilersweg|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Bad Sodener Stra\xC3\x9Fe|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Bahnhofstra\xC3\x9Fe|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Frankfurter Stra\xC3\x9Fe|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Fuldaer Stra\xC3\x9Fe|12\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Hanauer Landstra\xC3\x9Fe|13\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Joseph-M\xC3\xBCller-Stra\xC3\x9Fe|2\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Kettelerstra\xC3\x9Fe|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|M\xC3\xBCnsterbergstra\xC3\x9Fe|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Philipp-Reis-Stra\xC3\x9Fe|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|R\xC3\xBCckm\xC3\xBChlenweg|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Schillerstra\xC3\x9Fe|4\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Schwedenring|4\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Spessartstra\xC3\x9Fe|9\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Sudetenlandstra\xC3\x9Fe|7\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Winkelgasse|1\x0A63628|B.Soden-Salm\xC3\xBCns.||||141\x0A63619|Bad Orb|Bad Orb|Bad Orb|Altenbergstra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Am Schafstrieb|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Austra\xC3\x9Fe|5\x0A63619|Bad Orb|Bad Orb|Bad Orb|Berliner Stra\xC3\x9Fe|2\x0A63619|Bad Orb|Bad Orb|Bad Orb|Burgstra\xC3\x9Fe|4\x0A63619|Bad Orb|Bad Orb|Bad Orb|Eichendorffstra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Faulhaberstra\xC3\x9Fe|4\x0A63619|Bad Orb|Bad Orb|Bad Orb|F\xC3\xBCllweinstra\xC3\x9Fe|3\x0A63619|Bad Orb|Bad Orb|Bad Orb|Kinzigweg|2\x0A63619|Bad Orb|Bad Orb|Bad Orb|Lauzenstra\xC3\x9Fe|4\x0A63619|Bad Orb|Bad Orb|Bad Orb|Martin-Luther-Stra\xC3\x9Fe|5\x0A63619|Bad Orb|Bad Orb|Bad Orb|Mittelweg|6\x0A63619|Bad Orb|Bad Orb|Bad Orb|Taunusstra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Uferweg|2\x0A63619|Bad Orb|Bad Orb|Bad Orb|W\xC3\xA4chtersbacher Weg|4\x0A63619|Bad Orb|Bad Orb|Bad Orb|Wemmstra\xC3\x9Fe|2\x0A63619|Bad Orb|Bad Orb|Bad Orb|Bayernweg|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Bennweg|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Burgring|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Eduard-Gr\xC3\xA4f-Stra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Frankenweg|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Frankfurter Stra\xC3\x9Fe|2\x0A63619|Bad Orb|Bad Orb|Bad Orb|Friedrichstalstra\xC3\x9Fe|6\x0A63619|Bad Orb|Bad Orb|Bad Orb|Hubertusstra\xC3\x9Fe|6\x0A63619|Bad Orb|Bad Orb|Bad Orb|Johann-B\xC3\xBCttel-Stra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Kanalstra\xC3\x9Fe|2\x0A63619|Bad Orb|Bad Orb|Bad Orb|Kasselbergweg|11\x0A63619|Bad Orb|Bad Orb|Bad Orb|Leimbachstra\xC3\x9Fe|5\x0A63619|Bad Orb|Bad Orb|Bad Orb|Leopold-Koch-Stra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Lindenallee|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Marktbrunnenstra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Rh\xC3\xB6nstra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Sachsenh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Salzk\xC3\xA4rrnerweg|7\x0A63619|Bad Orb||||97\x0A63594|Bahnhofsiedlung|Hasselroth|Niedermittlau-Bahnhofssiedlung|Berliner Stra\xC3\x9Fe|2\x0A63594|Bahnhofsiedlung|Hasselroth|Niedermittlau-Bahnhofssiedlung|Fichtenstra\xC3\x9Fe|1\x0A63594|Bahnhofsiedlung|Hasselroth|Niedermittlau-Bahnhofssiedlung|Heinrich-Hofmann-Stra\xC3\x9Fe|3\x0A63594|Bahnhofsiedlung|Hasselroth|Niedermittlau-Bahnhofssiedlung|Lindenstra\xC3\x9Fe|1\x0A63594|Bahnhofsiedlung|Hasselroth|Niedermittlau-Bahnhofssiedlung|Waldstra\xC3\x9Fe|1\x0A63594|Bahnhofsiedlung||||8\x0A63579|Bernbach|Freigericht|Bernbach|Birkenhainer Stra\xC3\x9Fe|2\x0A63579|Bernbach|Freigericht|Bernbach|Brentanostra\xC3\x9Fe|1\x0A63579|Bernbach|Freigericht|Neuses|Vogelsbergstra\xC3\x9Fe|1\x0A63579|Bernbach||||4\x0A63599|Bieber|Biebergem\xC3\xBCnd|Bieber|Zimmerwiesenweg|1\x0A63599|Bieber||||1\x0A63633|Birstein|Birstein|Birstein|An der Riedwiese|2\x0A63633|Birstein|Birstein|Birstein|Bornwiesenweg|1\x0A63633|Birstein|Birstein|Birstein|B\xC3\xBCdinger Stra\xC3\x9Fe|1\x0A63633|Birstein|Birstein|Birstein|F\xC3\xBCnfkirchener Stra\xC3\x9Fe|3\x0A63633|Birstein|Birstein|Birstein|M\xC3\xBChlweg|1\x0A63633|Birstein|Birstein|Birstein|Rh\xC3\xB6nstra\xC3\x9Fe|1\x0A63633|Birstein|Birstein|Birstein|Spessartstra\xC3\x9Fe|3\x0A63633|Birstein|Birstein|Birstein|Steinweg|1\x0A63633|Birstein|Birstein|Birstein|Anton-Praetorius-Weg|2\x0A63633|Birstein|Birstein|Birstein|Bathwiesenweg|5\x0A63633|Birstein|Birstein|Birstein|Charlottenstra\xC3\x9Fe|15\x0A63633|Birstein|Birstein|Birstein|Julius-Hufnagel-Weg|3\x0A63633|Birstein|Birstein|Birstein|Katharinenstra\xC3\x9Fe|4\x0A63633|Birstein|Birstein|Birstein|Raiffeisenstra\xC3\x9Fe|5\x0A63633|Birstein|Birstein|Birstein|Sophienstra\xC3\x9Fe|6\x0A63633|Birstein|Birstein|Birstein|Zehntefeld|4\x0A63633|Birstein||||57\x0A63633|B\xC3\xB6sges\xC3\xA4\xC3\x9F|Birstein|B\xC3\xB6ssges\xC3\xA4\xC3\x9F|Grundweg|2\x0A63633|B\xC3\xB6sges\xC3\xA4\xC3\x9F||||2\x0A63599|Breitenborn|Gr\xC3\xBCndau|Breitenborn A.W.|Bergwiesenstra\xC3\x9Fe|1\x0A63599|Breitenborn|Gr\xC3\xBCndau|Breitenborn A.W.|Buchenweg|1\x0A63599|Breitenborn|Gr\xC3\xBCndau|Breitenborn A.W.|Hauptstra\xC3\x9Fe|1\x0A63599|Breitenborn|Biebergem\xC3\xBCnd|Breitenborn|Lanzinger Stra\xC3\x9Fe|1\x0A63599|Breitenborn||||4\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|August-Bebel-Stra\xC3\x9Fe|2\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Buchenweg|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Erich-Ollenhauer-Stra\xC3\x9Fe|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Ernst-Reuter-Stra\xC3\x9Fe|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Gleiwitzer Stra\xC3\x9Fe|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Hauptstra\xC3\x9Fe|2\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Im Niederried|3\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Kettelerstra\xC3\x9Fe|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Kirleweg|2\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|K\xC3\xB6nigsberger Stra\xC3\x9Fe|2\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Lindenallee|3\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Tilsiter Stra\xC3\x9Fe|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Udo-M\xC3\xBCller-Ring|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Varang\xC3\xA9viller Stra\xC3\x9Fe|2\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Walter-Rathenau-Stra\xC3\x9Fe|2\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Innerer Ring|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Kellereigasse|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Saalburgring|4\x0A63486|Bruchk\xC3\xB6bel||||31\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Nu\xC3\x9Fgraben|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Schlag|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Wildenstein|4\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Bismarckstra\xC3\x9Fe|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Friedrich-Fendt-Stra\xC3\x9Fe|8\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Gymnasiumstra\xC3\x9Fe|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Kastanienring|3\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Kellergasse|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|M\xC3\xBChltorstra\xC3\x9Fe|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Wilhelm-Dotter-Stra\xC3\x9Fe|3\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Alten Viadukt|12\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Klarengarten|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Im Flachsgrund|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|In den Weiherwiesen|12\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|An der Kleibscheibe|3\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Industriestra\xC3\x9Fe|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Salzbachaue|9\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Thiergartenstra\xC3\x9Fe|22\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Am Hofacker|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Auf dem Biehm|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen||Calbacher Stra\xC3\x9Fe|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Finkenweg|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Hauptstra\xC3\x9Fe|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Im Einzel|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Im Hinterfeld|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Im Hoffeld|10\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Otto-Beppler-Stra\xC3\x9Fe|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Schulstra\xC3\x9Fe|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Waldstra\xC3\x9Fe|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Wilhelm-Leuschner-Stra\xC3\x9Fe|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Zum Seemenbach|1\x0A63654|B\xC3\xBCdingen||||114\x0A63165|Dietesheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|B\xC3\xBCrgermeister-Hainz-Stra\xC3\x9Fe|8\x0A63165|Dietesheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Elisabethenstra\xC3\x9Fe|10\x0A63165|Dietesheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Thomas-Mann-Stra\xC3\x9Fe|3\x0A63165|Dietesheim||||21\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Am Bieberbach|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Am Steinberg|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|B\xC3\xB6llstra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Gallische Stra\xC3\x9Fe|3\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Georg-August-Zinn-Stra\xC3\x9Fe|2\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Gertrud-Kolmar-Weg|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Gustav-Heinemann-Ring|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Konrad-Adenauer-Allee|2\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Kurt-Schumacher-Allee|2\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Langg\xC3\xA4sserstra\xC3\x9Fe|2\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Neckarstra\xC3\x9Fe|3\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Nibelungenstra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Patersh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Pestalozzistra\xC3\x9Fe|3\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Rheinstra\xC3\x9Fe|11\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Ringelnatzstra\xC3\x9Fe|2\x0A63128|Dietzenbach|Dietzenbach|Steinberg|R\xC3\xB6merstra\xC3\x9Fe|2\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Schlegelstra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Siedlerstra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Staufenstra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Taunusstra\xC3\x9Fe|9\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Thomas-Mann-Ring|1\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Aschaffenburger Weg|4\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Babenh\xC3\xA4user Stra\xC3\x9Fe|2\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Glash\xC3\xBCttener Weg|4\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Konrad-Lang-Stra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Marktheidenfelder Weg|3\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Rodgaustra\xC3\x9Fe|5\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Rohrbrunner Weg|2\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Talstra\xC3\x9Fe|6\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Tulpenstra\xC3\x9Fe|2\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Wertheimer Weg|1\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Wiesenstra\xC3\x9Fe|3\x0A63128|Dietzenbach||||85\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Backesweg|1\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Beethovenstra\xC3\x9Fe|1\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Berliner Stra\xC3\x9Fe|1\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Bonhoefferstra\xC3\x9Fe|2\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Hermann-L\xC3\xB6ns-Stra\xC3\x9Fe|4\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|In der Mainaue|1\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|K\xC3\xA4the-Kollwitz-Stra\xC3\x9Fe|12\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|S\xC3\xBCdring|4\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Westendstra\xC3\x9Fe|4\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Wilhelmsbader Stra\xC3\x9Fe|1\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Wingertstra\xC3\x9Fe|1\x0A63477|D\xC3\xB6rnigheim||||32\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Am Alten S\xC3\xA4gewerk|2\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Am R\xC3\xBCckersgraben|8\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Dekan-Schuster-Stra\xC3\x9Fe|1\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Nieuwpoorter Stra\xC3\x9Fe|1\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Raiffeisenstra\xC3\x9Fe|1\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Saalburgring|2\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Spessartring|10\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Dr.-Weinholz-Stra\xC3\x9Fe|1\x0A63110|Dudenhofen||||26\x0A63628|Eckardroth|Bad Soden-Salm\xC3\xBCnster|Eckardroth-Wahlert|Bergstra\xC3\x9Fe|1\x0A63628|Eckardroth|Bad Soden-Salm\xC3\xBCnster|Eckardroth-Wahlert|Oberweg|2\x0A63628|Eckardroth|Bad Soden-Salm\xC3\xBCnster|Eckardroth-Wahlert|Stiftungsstra\xC3\x9Fe|4\x0A63628|Eckardroth||||7\x0A63654|Eckartshausen|B\xC3\xBCdingen|Eckartshausen|Lohrbergstra\xC3\x9Fe|1\x0A63654|Eckartshausen||||1\x0A61130|Eichen|Nidderau|Eichen|Kleine Gasse|3\x0A61130|Eichen||||3\x0A63589|Eidenges\xC3\xA4\xC3\x9F|Linsengericht|Eidenges\xC3\xA4\xC3\x9F|Dettersweg|2\x0A63589|Eidenges\xC3\xA4\xC3\x9F|Linsengericht|Eidenges\xC3\xA4\xC3\x9F|Im Bangertsfeld|1\x0A63589|Eidenges\xC3\xA4\xC3\x9F||||3\x0A61130|Erbstadt|Nidderau|Erbstadt|Bogenstra\xC3\x9Fe|2\x0A61130|Erbstadt|Nidderau|Erbstadt|Hauptstra\xC3\x9Fe|1\x0A61130|Erbstadt||||3\x0A63639 Sum|Fl\xC3\xB6rsbach|Fl\xC3\xB6rsbachtal|Fl\xC3\xB6rsbach|Gartenweg|1\x0A63639 Sum|Fl\xC3\xB6rsbach|Fl\xC3\xB6rsbachtal|Fl\xC3\xB6rsbach|Huntzelstra\xC3\x9Fe|3\x0A63639 Sum|Fl\xC3\xB6rsbach|Fl\xC3\xB6rsbachtal|Fl\xC3\xB6rsbach|Orber Stra\xC3\x9Fe|1\x0A63639 Sum|Fl\xC3\xB6rsbach||||5\x0A63500|Froschhausen|Seligenstadt|Froschhausen|Hanauer Landstra\xC3\x9Fe|2\x0A63500|Froschhausen|Seligenstadt|Froschhausen|Mittelstra\xC3\x9Fe|1\x0A63500|Froschhausen|Seligenstadt|Froschhausen|Seligenst\xC3\xA4dter Stra\xC3\x9Fe|1\x0A63500|Froschhausen||||4\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Barbarossastra\xC3\x9Fe|1\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Grimmelshausenstra\xC3\x9Fe|2\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Herzbachweg|15\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Im Setzling|3\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|In der Brug|1\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Kapellenweg|1\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Kuhgasse|3\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|M\xC3\xBChlbachweg|2\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Pappelweg|2\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Parkstra\xC3\x9Fe|1\x0A63571|Gelnhausen-Nord||||31\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Am Galgenfeld|3\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Clamecystra\xC3\x9Fe|16\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Dr.-Sondheimer-Stra\xC3\x9Fe|2\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Frankfurter Stra\xC3\x9Fe|1\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Franklinstra\xC3\x9Fe|1\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Graslitzer Stra\xC3\x9Fe|2\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Im Weiherfeld|5\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Lohm\xC3\xBChlenweg|18\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Rudolf-Diesel-Stra\xC3\x9Fe|1\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Uferweg|1\x0A63571|Gelnhausen-S\xC3\xBCd||||50\x0A63695|Glauberg, Glauburg, Deutschland|Glauburg|Glauberg|Ladestra\xC3\x9Fe|2\x0A63695|Glauberg, Glauburg, Deutschland|Glauburg|Glauberg|Wallgasse|1\x0A63695|Glauberg, Glauburg, Deutschland||||3\x0A63594|Gondsroth|Hasselroth|Gondsroth|Hauptstra\xC3\x9Fe|1\x0A63594|Gondsroth|Hasselroth|Gondsroth|Schulstra\xC3\x9Fe|2\x0A63594|Gondsroth||||3\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Brown-Boveri-Stra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Carl-Kronenberger-Stra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Hainbachstra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Karl-Kihn-Stra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Krotzenburger Stra\xC3\x9Fe|2\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Otto-Gr\xC3\xBCn-Stra\xC3\x9Fe|2\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Spitzenweg|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Zum Torfbruch|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Annette-Kolb-Weg|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Annette-von-Droste-H\xC3\xBClshoff-Weg|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|August-Gaul-Stra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Bahnhofstra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Bertolt-Brecht-Weg|4\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Franz-Kafka-Weg|3\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Goethestra\xC3\x9Fe|3\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Hauptstra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Ingeborg-Bachmann-Weg|3\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Lion-Feuchtwanger-Weg|5\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Rudolf-Hagelstange-Weg|3\x0A63457|Gro\xC3\x9Fauheim||||36\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Molkenborn|9\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Pfaffenwald|3\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|An der Schildwache|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Gr\xC3\xBCnwaldweg|2\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Pferdsbacher Weg|3\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen||Vogelsbergstra\xC3\x9Fe|3\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Zum Stadtgraben|2\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Kreischborn|2\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheimer Stra\xC3\x9Fe|3\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Eichelbergring|2\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Ostpreu\xC3\x9Fenstra\xC3\x9Fe|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Sudetenstra\xC3\x9Fe|7\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|\xC3\x9Cber den Roten Gr\xC3\xA4ben|4\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Bahnhofstra\xC3\x9Fe|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Berliner Stra\xC3\x9Fe|4\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Lorbacher Stra\xC3\x9Fe|8\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen||Orlesh\xC3\xA4user Stra\xC3\x9Fe|4\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen||\xC3\x9Cber der Seeme|3\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Im Lipperts|21\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Lorbacher Stra\xC3\x9Fe|7\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|An der Fahrbach|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Bahnhofstra\xC3\x9Fe|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Mackensenstra\xC3\x9Fe|8\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|M\xC3\xA4usfall|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Schillerstra\xC3\x9Fe|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Seemenbachstra\xC3\x9Fe|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen||Vogelsbergstra\xC3\x9Fe|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany||||104\x0A63589|Gro\xC3\x9Fenhausen|Linsengericht|Gro\xC3\x9Fenhausen|Kastanienstra\xC3\x9Fe|1\x0A63589|Gro\xC3\x9Fenhausen|Linsengericht|Gro\xC3\x9Fenhausen|Nordstra\xC3\x9Fe|1\x0A63589|Gro\xC3\x9Fenhausen||||2\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Albert-Einstein-Stra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Bahnhofstra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Danziger Stra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gutenbergallee|4\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Im Flachsgewann|2\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Max-Planck-Stra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Melmensee|3\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Oberwaldstra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Rh\xC3\xB6nstra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Robert-Koch-Weg|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Taunusstra\xC3\x9Fe|4\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Torsbyv\xC3\xA4gen|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Wahlersee|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Bahnhofstra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Beethovenstra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Wilhelmstra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg||||25\x0A63571|Hailer|Gelnhausen|Hailer|Am Fa\xC3\x9Fholzwerk|1\x0A63571|Hailer|Gelnhausen|Hailer|Bl\xC3\xBCmgesgrundstra\xC3\x9Fe|1\x0A63571|Hailer|Gelnhausen|Hailer|Dr.-Heinrich-Mohn-Stra\xC3\x9Fe|5\x0A63571|Hailer|Gelnhausen|Hailer|Eisenbahnstra\xC3\x9Fe|6\x0A63571|Hailer|Gelnhausen|Hailer|Gelnh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63571|Hailer|Gelnhausen|Hailer|Gr\xC3\xBCner Weg|5\x0A63571|Hailer|Gelnhausen|Hailer|Jahnstra\xC3\x9Fe|1\x0A63571|Hailer|Gelnhausen|Hailer|Reinhardstra\xC3\x9Fe|1\x0A63571|Hailer|Gelnhausen|Hailer|Sudetenstra\xC3\x9Fe|2\x0A63571|Hailer|Gelnhausen|Hailer|Vorm R\xC3\xB6hrig|5\x0A63571|Hailer||||28\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Burgstra\xC3\x9Fe|1\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Hainstra\xC3\x9Fe|2\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Hochstra\xC3\x9Fe|1\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Ortsberingweg|1\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Schmiedegasse|1\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Weidenstra\xC3\x9Fe|2\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Zur K\xC3\xB6nigseiche|2\x0A63584|Hain-Gr\xC3\xBCndau||||10\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Hainhausen|Br\xC3\xBCder-Grimm-Stra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Weiskirchen|Dietrich-Bonhoeffer-Stra\xC3\x9Fe|3\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Hainhausen|Eppsteiner Stra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Weiskirchen|Friedrich-Ebert-Stra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Weiskirchen|Hainh\xC3\xA4user Stra\xC3\x9Fe|2\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Weiskirchen|Hauptstra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Weiskirchen|Kolpingstra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Hainhausen|Rochusstra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Hainhausen|Rubensstra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Hainhausen|Wilhelm-Leuschner-Stra\xC3\x9Fe|5\x0A63110|Hainhausen,We\xC3\x9Fkirchen||||17\x0A63512|Hainstadt|Hainburg||Bachgasse|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Bahnhofstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Friedhofstra\xC3\x9Fe|2\x0A63512|Hainstadt|Hainburg|Hainstadt|Hainst\xC3\xA4dter Stra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Hauptstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Wilhelmstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Am Kiefernhain|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Dresdener Stra\xC3\x9Fe|2\x0A63512|Hainstadt|Hainburg|Hainstadt|Erfurter Stra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Fichtestra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Gablonzer Stra\xC3\x9Fe|2\x0A63512|Hainstadt|Hainburg|Hainstadt|Gartenstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Im L\xC3\xB6schem|1\x0A63512|Hainstadt|Hainburg|Hainstadt|K\xC3\xB6nigsberger Stra\xC3\x9Fe|4\x0A63512|Hainstadt|Hainburg|Hainstadt|Leipziger Stra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Offenbacher Landstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Reichenberger Ring|2\x0A63512|Hainstadt|Hainburg|Hainstadt|Schillerstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Uhlandstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Waldstra\xC3\x9Fe|1\x0A63512|Hainstadt||||27\x0A63571|Haitz|Gelnhausen|Haitz|Am Bocksborn|2\x0A63571|Haitz|Gelnhausen|Haitz|Am Kandelrain|1\x0A63571|Haitz|Gelnhausen|Haitz|Am Langen Steg|1\x0A63571|Haitz|Gelnhausen|Gelnhausen|Barbarossastra\xC3\x9Fe|4\x0A63571|Haitz|Gelnhausen|Haitz|Birsteiner Stra\xC3\x9Fe|2\x0A63571|Haitz|Gelnhausen|Haitz|Dorfstra\xC3\x9Fe|1\x0A63571|Haitz|Gelnhausen|Haitz|Dr.-Faust-Stra\xC3\x9Fe|2\x0A63571|Haitz|Gelnhausen|Gelnhausen|Fuldaweg|2\x0A63571|Haitz|Gelnhausen|Gelnhausen|Himmelauer M\xC3\xBChle|1\x0A63571|Haitz|Gelnhausen|Gelnhausen|Kinzigstra\xC3\x9Fe|13\x0A63571|Haitz|Gelnhausen||Kremp\'sche Spitze|4\x0A63571|Haitz|Gelnhausen|Gelnhausen|Mainstra\xC3\x9Fe|7\x0A63571|Haitz|Gelnhausen|Haitz|Neuer Weg|1\x0A63571|Haitz|Gelnhausen|Haitz|Sch\xC3\xB6ne Aussicht|1\x0A63571|Haitz|Gelnhausen|Meerholz|Spessartstra\xC3\x9Fe|2\x0A63571|Haitz|Gelnhausen|Haitz|Zum Taubengarten|8\x0A63571|Haitz||||52\x0A63450|Hanau|Hanau|Hanau|Altstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Am Frankfurter Tor|4\x0A63450|Hanau|Hanau|Hanau|Eugen-Kaiser-Stra\xC3\x9Fe|2\x0A63450|Hanau|Hanau|Hanau|Fischerh\xC3\xBCttenweg|1\x0A63450|Hanau|Hanau|Hanau|G\xC3\xA4rtnerstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Glockenstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|In den T\xC3\xBCrkischen G\xC3\xA4rten|2\x0A63450|Hanau|Hanau|Hanau|Johanneskirchplatz|1\x0A63450|Hanau|Hanau|Hanau|Karl-R\xC3\xB6ttelberg-Stra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Kinzigstra\xC3\x9Fe|2\x0A63450|Hanau|Hanau|Hanau|Kr\xC3\xA4merstra\xC3\x9Fe|2\x0A63450|Hanau|Hanau|Hanau|Lothringer Stra\xC3\x9Fe|3\x0A63450|Hanau|Hanau|Hanau|M\xC3\xBChlstra\xC3\x9Fe|11\x0A63450|Hanau|Hanau|Hanau|Nordstra\xC3\x9Fe|3\x0A63450|Hanau|Hanau|Hanau|Nu\xC3\x9Fallee|3\x0A63450|Hanau|Hanau|Hanau|Ramsaystra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|R\xC3\xB6merstra\xC3\x9Fe|5\x0A63450|Hanau|Hanau|Hanau|R\xC3\xBChlstra\xC3\x9Fe|4\x0A63450|Hanau|Hanau|Hanau|Sch\xC3\xBCtzenstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Steinheimer Stra\xC3\x9Fe|5\x0A63450|Hanau|Hanau|Hanau|Vor dem Kanaltor|2\x0A63450|Hanau|Hanau|Hanau|Akademiestra\xC3\x9Fe|2\x0A63450|Hanau|Hanau|Hanau|Am Hauptbahnhof|2\x0A63450|Hanau|Hanau|Hanau|Am Krawallgraben|1\x0A63450|Hanau|Hanau|Hanau|Barbarossastra\xC3\x9Fe|3\x0A63450|Hanau|Hanau|Hanau|B\xC3\xBCchnerstra\xC3\x9Fe|5\x0A63450|Hanau|Hanau|Hanau|Dettinger Stra\xC3\x9Fe|5\x0A63450|Hanau|Hanau|Hanau|Engelhardstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Freigerichtstra\xC3\x9Fe|5\x0A63450|Hanau|Hanau|Hanau|Friedrichstra\xC3\x9Fe|9\x0A63450|Hanau|Hanau|Hanau|Gallienstra\xC3\x9Fe|3\x0A63450|Hanau|Hanau|Hanau|Grimmelshausenstra\xC3\x9Fe|8\x0A63450|Hanau|Hanau|Hanau|Industrieweg|1\x0A63450|Hanau|Hanau|Hanau|Landwehr|2\x0A63450|Hanau|Hanau|Hanau|Matthias-Da\xC3\x9Fbach-Stra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Milseburgstra\xC3\x9Fe|5\x0A63450|Hanau|Hanau|Hanau|Ottostra\xC3\x9Fe|6\x0A63450|Hanau|Hanau|Hanau|Ronneburgstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Saalburgstra\xC3\x9Fe|2\x0A63450|Hanau|Hanau|Hanau|Auheimer Stra\xC3\x9Fe|4\x0A63450|Hanau|Hanau|Gro\xC3\x9Fauheim|Hanauer Landstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Mainstra\xC3\x9Fe|1\x0A63450|Hanau||||124\x0A63452|Hanau-Nord|Hanau|Hanau|Alter R\xC3\xBCckinger Weg|12\x0A63452|Hanau-Nord|Hanau|Hanau|B\xC3\xBCdinger Stra\xC3\x9Fe|52\x0A63452|Hanau-Nord|Hanau|Hanau|D\xC3\xB6rnigheimer Stra\xC3\x9Fe|6\x0A63452|Hanau-Nord|Hanau|Hanau|Vor der Kinzigbr\xC3\xBCcke|1\x0A63452|Hanau-Nord|Hanau|Hanau|Alter R\xC3\xBCckinger Weg|23\x0A63452|Hanau-Nord|Hanau|Hanau|Antoniterstra\xC3\x9Fe|21\x0A63452|Hanau-Nord|Hanau|Hanau|Friedberger Stra\xC3\x9Fe|7\x0A63452|Hanau-Nord|Hanau|Hanau|Im Venussee|1\x0A63452|Hanau-Nord|Hanau|Hanau|Reichenberger Stra\xC3\x9Fe|11\x0A63452|Hanau-Nord||||134\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Albert-Schweitzer-Stra\xC3\x9Fe|3\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Austra\xC3\x9Fe|8\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Bachstra\xC3\x9Fe|3\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Bauerbachstra\xC3\x9Fe|3\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Bernardstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Birkenwaldstra\xC3\x9Fe|24\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Dieburger Stra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Dreieichstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Egerl\xC3\xA4nder Platz|7\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Feldstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Forststra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Frankfurter Stra\xC3\x9Fe|8\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Gumbertseestra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Herrnstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Kapellenstra\xC3\x9Fe|2\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|L\xC3\xA4mmerspieler Stra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Laubenstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Maingaustra\xC3\x9Fe|8\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|M\xC3\xBChlstra\xC3\x9Fe|2\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Pater-Delp-Stra\xC3\x9Fe|2\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Platanenstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Richard-Wagner-Stra\xC3\x9Fe|11\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Robert-Koch-Stra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Sch\xC3\xB6nbornstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Schubertstra\xC3\x9Fe|6\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Seligenst\xC3\xA4dter Stra\xC3\x9Fe|23\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Sudetenstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Tempelhofer Stra\xC3\x9Fe|2\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Tulpenstra\xC3\x9Fe|3\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Von-Behring-Stra\xC3\x9Fe|3\x0A63179|Obertshausen Hausen||||131\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Aachener Stra\xC3\x9Fe|4\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|Ahornstra\xC3\x9Fe|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Bonner Stra\xC3\x9Fe|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Dresdener Stra\xC3\x9Fe|6\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|Fichtenstra\xC3\x9Fe|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|Ginsterweg|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Gustav-Kastropp-Stra\xC3\x9Fe|3\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Heinrich-Hofmann-Stra\xC3\x9Fe|8\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|Josef-Leistenschneider-Stra\xC3\x9Fe|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|K\xC3\xB6lner Stra\xC3\x9Fe|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|L\xC3\xA4rchenweg|2\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|Lavendelweg|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|M\xC3\xBCnchener Stra\xC3\x9Fe|8\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|Platanenstra\xC3\x9Fe|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Potsdamer Stra\xC3\x9Fe|4\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Weinstra\xC3\x9Fe|2\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|W\xC3\xBCrzburger Stra\xC3\x9Fe|2\x0A63628|Hausen||||47\x0A63674|Heegheim|Altenstadt|Heegheim|Fliederweg|1\x0A63674|Heegheim||||1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Albert-Schweitzer-Stra\xC3\x9Fe|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Am H\xC3\xBCpper|4\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Am Nidderfeld|4\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Am Pfarrgarten|2\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Am Steinweg|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|An der Landwehr|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Beethovenallee|2\x0A61130|Heldenbergen|Nidderau|Heldenbergen|B\xC3\xBCdinger Stra\xC3\x9Fe|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Castellring|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Emil-Nolde-Stra\xC3\x9Fe|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Gartenstra\xC3\x9Fe|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Jenny-Rothschild-Stra\xC3\x9Fe|2\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Saalburgstra\xC3\x9Fe|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Wagnerstra\xC3\x9Fe|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Wilhelm-Leibl-Stra\xC3\x9Fe|1\x0A61130|Heldenbergen||||24\x0A63636 Sum|Hellstein|Brachttal|Hellstein|Breulstra\xC3\x9Fe|1\x0A63636 Sum|Hellstein|Brachttal|Hellstein|Hochstra\xC3\x9Fe|3\x0A63636 Sum|Hellstein|Brachttal|Hellstein|Hochstra\xC3\x9Fe|1\x0A63636 Sum|Hellstein|Brachttal|Hellstein|Oberweg|2\x0A63636 Sum|Hellstein|Brachttal|Hellstein|Raiffeisenstra\xC3\x9Fe|1\x0A63636 Sum|Hellstein|Brachttal|Hellstein|Im Schafstall|6\x0A63636 Sum|Hellstein||||14\x0A63607|Hesseldorf|W\xC3\xA4chtersbach|Hesseldorf|Brachttalstra\xC3\x9Fe|1\x0A63607|Hesseldorf|W\xC3\xA4chtersbach|Hesseldorf|Im Alten Garten|1\x0A63607|Hesseldorf|W\xC3\xA4chtersbach|Hesseldorf|In der Aue|1\x0A63607|Hesseldorf|W\xC3\xA4chtersbach|Hesseldorf|Triebstra\xC3\x9Fe|2\x0A63607|Hesseldorf||||5\x0A63633|Hettersroth|Birstein|Hettersroth|Birkengasse|1\x0A63633|Hettersroth|Birstein|Hettersroth|Brunnenstra\xC3\x9Fe|2\x0A63633|Hettersroth|Birstein|Hettersroth|Haideacker|1\x0A63633|Hettersroth||||4\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Frankfurter Stra\xC3\x9Fe|3\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Friedenstra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Hans-Hemberger-Stra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Im Hohen Gewann|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Landgrebeweg|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Ostendstra\xC3\x9Fe|2\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Paulstra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Albert-Einstein-Stra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Am Frankfurter Weg|14\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Am Lindenbaum|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Berliner Stra\xC3\x9Fe|7\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Borsigstra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Dietrich-Bonhoeffer-Stra\xC3\x9Fe|2\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Feldbergstra\xC3\x9Fe|6\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Hegelstra\xC3\x9Fe|4\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Humboldtstra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Kolpingstra\xC3\x9Fe|4\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Konrad-Adenauer-Stra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Leipziger Ring|3\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Lerchenstra\xC3\x9Fe|10\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Schweitzerstra\xC3\x9Fe|2\x0A63150|Heusenstamm||||67\x0A63699|Hitzkirchen|Kefenrod||Am Lindenberg|7\x0A63699|Hitzkirchen|Kefenrod|Hitzkirchen|Hauptstra\xC3\x9Fe|1\x0A63699|Hitzkirchen||||8\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Am R\xC3\xBCckersberg|1\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Brunnenblick|1\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Hauptstra\xC3\x9Fe|1\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Kasseler Stra\xC3\x9Fe|2\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Ketteler Stra\xC3\x9Fe|1\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Kurzer Weg|1\x0A63674|H\xC3\xB6chst|Gelnhausen|Roth|Leipziger Stra\xC3\x9Fe|2\x0A63674|H\xC3\xB6chst|Gelnhausen||Panoramaweg|1\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Untere Sch\xC3\xB6nau|1\x0A63674|H\xC3\xB6chst|Altenstadt|H\xC3\xB6chst|Am Feldborn|1\x0A63674|H\xC3\xB6chst|Altenstadt|H\xC3\xB6chst|Burgweg|1\x0A63674|H\xC3\xB6chst|Altenstadt|H\xC3\xB6chst|G\xC3\xA4\xC3\x9Fchen|1\x0A63674|H\xC3\xB6chst|Altenstadt|H\xC3\xB6chst|Ringstra\xC3\x9Fe|3\x0A63674|H\xC3\xB6chst||||17\x0A63477|Hochstadt|Maintal|Hochstadt|Altk\xC3\xB6nigstra\xC3\x9Fe|2\x0A63477|Hochstadt|Maintal|Hochstadt|Am Weides|1\x0A63477|Hochstadt|Maintal|Hochstadt|Bernauer Stra\xC3\x9Fe|1\x0A63477|Hochstadt|Maintal|Hochstadt|Bischofsheimer Stra\xC3\x9Fe|1\x0A63477|Hochstadt|Maintal|Hochstadt|Maulbeerweg|4\x0A63477|Hochstadt|Maintal|Hochstadt|Ringstra\xC3\x9Fe S\xC3\xBCd|2\x0A63477|Hochstadt|Maintal|Hochstadt|Speierlingweg|1\x0A63477|Hochstadt|Maintal|Hochstadt|Wilhelm-Mankel-Stra\xC3\x9Fe|1\x0A63477|Hochstadt||||13\x0A63579|Horbach|Freigericht|Horbach|Am Sandberg|1\x0A63579|Horbach|Freigericht|Bernbach|Birkenhainer Stra\xC3\x9Fe|2\x0A63579|Horbach|Freigericht|Horbach|Kirchstra\xC3\x9Fe|1\x0A63579|Horbach|Freigericht|Horbach|M\xC3\xBChlstra\xC3\x9Fe|2\x0A63579|Horbach|Freigericht|Horbach|Wilhelm-Winter-Stra\xC3\x9Fe|1\x0A63579|Horbach||||7\x0A63584|H\xC3\xBChnerhof|Gr\xC3\xBCndau||H\xC3\xBChnerhof|2\x0A63584|H\xC3\xBChnerhof||||2\x0A63549 Sum|H\xC3\xBCttenges\xC3\xA4\xC3\x9F|Ronneburg|H\xC3\xBCttenges\xC3\xA4\xC3\x9F|Im Hartengrund|1\x0A63549 Sum|H\xC3\xBCttenges\xC3\xA4\xC3\x9F||||1\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Berliner Stra\xC3\x9Fe|3\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Carl-von-Ossietzky-Stra\xC3\x9Fe|1\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Dudenh\xC3\xB6fer Stra\xC3\x9Fe|5\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Eifelstra\xC3\x9Fe|4\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Eugen-Roth-Stra\xC3\x9Fe|1\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Friedlandstra\xC3\x9Fe|3\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Grenzstra\xC3\x9Fe|6\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Harzer Stra\xC3\x9Fe|4\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Heinrich-B\xC3\xB6ll-Stra\xC3\x9Fe|1\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Lange Stra\xC3\x9Fe|2\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Marburger Stra\xC3\x9Fe|12\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Paul-Gerhardt-Stra\xC3\x9Fe|5\x0A63110|J\xC3\xBCgesheim||||47\x0A63599|Kassel|Biebergem\xC3\xBCnd|Kassel|Am Burgwerksrain|1\x0A63599|Kassel|Biebergem\xC3\xBCnd|Kassel|Bornweg|1\x0A63599|Kassel|Biebergem\xC3\xBCnd|Kassel|Marienstra\xC3\x9Fe|1\x0A63599|Kassel|Biebergem\xC3\xBCnd|Kassel|Nepomukweg|4\x0A63599|Kassel|Biebergem\xC3\xBCnd|Kassel|Spessartstra\xC3\x9Fe|1\x0A63599|Kassel|Biebergem\xC3\xBCnd|Kassel|Wirtheimer Stra\xC3\x9Fe|3\x0A63599|Kassel||||11\x0A63699|Kefenrod|Kefenrod|Kefenrod|Am Hirtengarten|4\x0A63699|Kefenrod|Kefenrod||An der Hohl|1\x0A63699|Kefenrod|Kefenrod||Bindsachsener Stra\xC3\x9Fe|1\x0A63699|Kefenrod|Kefenrod|Bindsachsen|Gartenstra\xC3\x9Fe|1\x0A63699|Kefenrod|Kefenrod|Kefenrod|Hitzkirchener Stra\xC3\x9Fe|7\x0A63699|Kefenrod|Kefenrod|Kefenrod|Jahnstra\xC3\x9Fe|2\x0A63699|Kefenrod|Kefenrod|Kefenrod|Roseneck|5\x0A63699|Kefenrod|Kefenrod|Kefenrod|Schulstra\xC3\x9Fe|1\x0A63699|Kefenrod|Kefenrod|Kefenrod|Tr\xC3\xA4nkweg|1\x0A63699|Kefenrod||||23\x0A63628|Kerbersdorf|Bad Soden-Salm\xC3\xBCnster|Kerbersdorf|Ziegelh\xC3\xBCttenstra\xC3\x9Fe|2\x0A63628|Kerbersdorf||||2\x0A63454|Kesselstadt|Hanau|Kesselstadt|K\xC3\xB6nigsberger Stra\xC3\x9Fe|12\x0A63454|Kesselstadt|Hanau|Kesselstadt|Schweriner Stra\xC3\x9Fe|17\x0A63454|Kesselstadt|Hanau|Kesselstadt|Stettiner Stra\xC3\x9Fe|2\x0A63454|Kesselstadt|Hanau|Kesselstadt|Kopernikusstra\xC3\x9Fe|20\x0A63454|Kesselstadt|Hanau|Kesselstadt|Potsdamer Stra\xC3\x9Fe|2\x0A63454|Kesselstadt|Hanau|Kesselstadt|Stettiner Stra\xC3\x9Fe|4\x0A63454|Kesselstadt|Hanau|Kesselstadt|Dresdener Stra\xC3\x9Fe|39\x0A63454|Kesselstadt|Hanau|Kesselstadt|Herderweg|1\x0A63454|Kesselstadt|Hanau|Kesselstadt|K\xC3\xB6nigsberger Stra\xC3\x9Fe|19\x0A63454|Kesselstadt|Hanau|Kesselstadt|Kurt-Schumacher-Platz|7\x0A63454|Kesselstadt|Hanau|Kesselstadt|Tilsiter Stra\xC3\x9Fe|3\x0A63454|Kesselstadt|Hanau|Hanau|Burgallee|13\x0A63454|Kesselstadt|Hanau|Kesselstadt|Dresdener Stra\xC3\x9Fe|16\x0A63454|Kesselstadt|Hanau|Kesselstadt|Gerhart-Hauptmann-Stra\xC3\x9Fe|2\x0A63454|Kesselstadt|Hanau|Kesselstadt|Selma-Lagerl\xC3\xB6f-Stra\xC3\x9Fe|3\x0A63454|Kesselstadt|Hanau|Kesselstadt|Fraunhoferstra\xC3\x9Fe|1\x0A63454|Kesselstadt|Hanau|Kesselstadt|Kantstra\xC3\x9Fe|6\x0A63454|Kesselstadt|Hanau|Kesselstadt|Kirchhoffstra\xC3\x9Fe|17\x0A63454|Kesselstadt|Hanau|Kesselstadt|Liebigstra\xC3\x9Fe|1\x0A63454|Kesselstadt|Hanau|Kesselstadt|Philipp-Reis-Stra\xC3\x9Fe|11\x0A63454|Kesselstadt|Hanau|Kesselstadt|Karlsbader Stra\xC3\x9Fe|44\x0A63454|Kesselstadt|Hanau|Kesselstadt|R\xC3\xB6ntgenstra\xC3\x9Fe|13\x0A63454|Kesselstadt|Hanau|Kesselstadt|Am Tiefen Weg|1\x0A63454|Kesselstadt|Hanau|Kesselstadt|Hopfenstra\xC3\x9Fe|1\x0A63454|Kesselstadt|Hanau|Kesselstadt|Kastanienallee|2\x0A63454|Kesselstadt|Hanau|Kesselstadt|Salisweg|3\x0A63454|Kesselstadt||||260\x0A63633|Kirchbracht|Birstein|Kirchbracht|Kreisstra\xC3\x9Fe|1\x0A63633|Kirchbracht||||1\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Alzenauer Stra\xC3\x9Fe|2\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Am Pachtanger|4\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Am Wiesengrund|1\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Bornpfad|1\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Burggartsweidig|5\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Eisenbahnstra\xC3\x9Fe|8\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Feldstra\xC3\x9Fe|5\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|In den Krautg\xC3\xA4rten|1\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Karl-Arnold-Stra\xC3\x9Fe|2\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Kolpingstra\xC3\x9Fe|1\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Obergasse|1\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Seligenst\xC3\xA4dter Stra\xC3\x9Fe|1\x0A63456|Klein-Auheim||||32\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Adolph-Kolping-Stra\xC3\x9Fe|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Anne-Frank-Weg|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Erzbergerstra\xC3\x9Fe|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Fahrstra\xC3\x9Fe|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Geschwister-Scholl-Stra\xC3\x9Fe|9\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Goethestra\xC3\x9Fe|2\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Gutenbergstra\xC3\x9Fe|2\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Hessenstra\xC3\x9Fe|6\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Jahnstra\xC3\x9Fe|2\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Kapellenweg|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Kappesweg|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Kirchstra\xC3\x9Fe|3\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Konrad-Adenauer-Stra\xC3\x9Fe|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Liebigstra\xC3\x9Fe|5\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Ludwig-Erhard-Stra\xC3\x9Fe|2\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Schlesienstra\xC3\x9Fe|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Spessartstra\xC3\x9Fe|7\x0A63512|Klein-Krotzenbrg||||46\x0A63452|Lamboy|Hanau|Hanau|August-Sch\xC3\xA4rttner-Stra\xC3\x9Fe|1\x0A63452|Lamboy|Hanau|Hanau|Breitscheidstra\xC3\x9Fe|3\x0A63452|Lamboy|Hanau|Hanau|Dartforder Stra\xC3\x9Fe|4\x0A63452|Lamboy|Hanau|Hanau|Dr.-Elisabeth-Schmitz-Stra\xC3\x9Fe|8\x0A63452|Lamboy|Hanau|Hanau|Eibenweg|2\x0A63452|Lamboy|Hanau|Hanau|Friedrich-Engels-Stra\xC3\x9Fe|14\x0A63452|Lamboy|Hanau|Hanau|Gabelsbergerstra\xC3\x9Fe|3\x0A63452|Lamboy|Hanau|Hanau|Karl-Marx-Stra\xC3\x9Fe|10\x0A63452|Lamboy|Hanau|Hanau|Kleib\xC3\xB6merstra\xC3\x9Fe|2\x0A63452|Lamboy|Hanau|Hanau|Lenbachstra\xC3\x9Fe|2\x0A63452|Lamboy|Hanau|Hanau|Paul-Ehrlich-Stra\xC3\x9Fe|5\x0A63452|Lamboy|Hanau|Hanau|Plantagenstra\xC3\x9Fe|5\x0A63452|Lamboy|Hanau|Hanau|Richard-K\xC3\xBCch-Stra\xC3\x9Fe|7\x0A63452|Lamboy|Hanau|Hanau|Theodor-Groppe-Stra\xC3\x9Fe|2\x0A63452|Lamboy|Hanau|Hanau|Am T\xC3\xBCmpelgarten|12\x0A63452|Lamboy|Hanau|Hanau|August-Sch\xC3\xA4rttner-Stra\xC3\x9Fe|14\x0A63452|Lamboy|Hanau|Hanau|Kiefernweg|5\x0A63452|Lamboy|Hanau|Hanau|L\xC3\xA4rchenweg|4\x0A63452|Lamboy|Hanau|Hanau|Neuhofstra\xC3\x9Fe|6\x0A63452|Lamboy||||109\x0A63165|L\xC3\xA4mmerspiel|M\xC3\xBChlheim am Main|L\xC3\xA4mmerspiel|Bischof-Ketteler-Stra\xC3\x9Fe|1\x0A63165|L\xC3\xA4mmerspiel|M\xC3\xBChlheim am Main|L\xC3\xA4mmerspiel|Brentanostra\xC3\x9Fe|2\x0A63165|L\xC3\xA4mmerspiel|M\xC3\xBChlheim am Main|L\xC3\xA4mmerspiel|Obertsh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63165|L\xC3\xA4mmerspiel|M\xC3\xBChlheim am Main|L\xC3\xA4mmerspiel|Schumacherstra\xC3\x9Fe|3\x0A63165|L\xC3\xA4mmerspiel|M\xC3\xBChlheim am Main|L\xC3\xA4mmerspiel|Waldstra\xC3\x9Fe|2\x0A63165|L\xC3\xA4mmerspiel||||9\x0A63546 Sum|Langen-Bergheim|Hammersbach|Langen-Bergheim|Wechmarer Ring|1\x0A63546 Sum|Langen-Bergheim||||1\x0A63526|Langendiebach|Erlensee|R\xC3\xBCckingen|Am G\xC3\xA4nseweiher|1\x0A63526|Langendiebach|Erlensee|Langendiebach|Am Rathaus|2\x0A63526|Langendiebach|Erlensee|Langendiebach|August-Bebel-Stra\xC3\x9Fe|1\x0A63526|Langendiebach|Erlensee|Langendiebach|Biggleswadestra\xC3\x9Fe|19\x0A63526|Langendiebach|Erlensee|R\xC3\xBCckingen|Dammstra\xC3\x9Fe|2\x0A63526|Langendiebach|Erlensee|Langendiebach|Fallbachstra\xC3\x9Fe|4\x0A63526|Langendiebach|Erlensee|Langendiebach|Langenselbolder Weg|2\x0A63526|Langendiebach|Erlensee|R\xC3\xBCckingen|Langstra\xC3\x9Fe|2\x0A63526|Langendiebach|Erlensee|Langendiebach|Reu\xC3\x9Ferhofstra\xC3\x9Fe|1\x0A63526|Langendiebach|Erlensee|Langendiebach|Rosenstra\xC3\x9Fe|1\x0A63526|Langendiebach|Erlensee|Langendiebach|R\xC3\xBCdigheimer Weg|2\x0A63526|Langendiebach|Erlensee|Langendiebach|Theodor-Heuss-Stra\xC3\x9Fe|1\x0A63526|Langendiebach|Erlensee|Langendiebach|Vogelsbergstra\xC3\x9Fe|1\x0A63526|Langendiebach|Erlensee|Langendiebach|Wusterwitzer Stra\xC3\x9Fe|18\x0A63526|Langendiebach||||57\x0A63505|Langenselbold|Langenselbold|Langenselbold|Am Br\xC3\xBChl|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Am H\xC3\xA4usergraben|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Bahnstra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Birkenstra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Clara-Schumann-Stra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Clemens-Brentano-Stra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Elise-Meitner-Stra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Emmy-Noether-Stra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Im Stockborn|3\x0A63505|Langenselbold|Langenselbold|Langenselbold|Johann-Strau\xC3\x9F-Allee|2\x0A63505|Langenselbold|Langenselbold|Langenselbold|Kreuze|2\x0A63505|Langenselbold|Langenselbold|Langenselbold|Marie-Curie-Stra\xC3\x9Fe|4\x0A63505|Langenselbold|Langenselbold|Langenselbold|Niedertalstra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Philipp-Reis-Ring|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Robert-Koch-Stra\xC3\x9Fe|5\x0A63505|Langenselbold|Langenselbold|Langenselbold|R\xC3\xB6delbergstra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Schlo\xC3\x9Fstra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Am Pappelried|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Auf der Sieb|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Friedrichstra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Gelnh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Im Ellenb\xC3\xBCgel|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Spessartstra\xC3\x9Fe|1\x0A63505|Langenselbold||||34\x0A63599|Lanzingen|Biebergem\xC3\xBCnd|Lanzingen|Am Gassenacker|1\x0A63599|Lanzingen|Biebergem\xC3\xBCnd|Lanzingen|Breitenborner Stra\xC3\x9Fe|1\x0A63599|Lanzingen|Biebergem\xC3\xBCnd|Lanzingen|Quellenstra\xC3\x9Fe|1\x0A63599|Lanzingen||||3\x0A63607|Leisenwald|W\xC3\xA4chtersbach|Leisenwald|Wolferborner Stra\xC3\x9Fe|2\x0A63607|Leisenwald||||2\x0A63637 Sum|Letgenbrun|Jossgrund|Lettgenbrunn|S\xC3\xBCdm\xC3\xA4hrer Weg|1\x0A63637 Sum|Letgenbrun||||1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Alte Hofstra\xC3\x9Fe|8\x0A63584|Lieblos|Gr\xC3\xBCndau||Alte Leipziger Stra\xC3\x9Fe|2\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Am Dreschplatz|7\x0A63584|Lieblos|Gr\xC3\xBCndau||An der Eisenbahn|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|August-Imhof-Stra\xC3\x9Fe|15\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Breitwiese|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|B\xC3\xBCdinger Stra\xC3\x9Fe|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Dammweg|3\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Faltergartenstra\xC3\x9Fe|2\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Fr\xC3\xB6belstra\xC3\x9Fe|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Mittel-Gr\xC3\xBCndau|Gartenstra\xC3\x9Fe|2\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Herzbergstra\xC3\x9Fe|2\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Im Euler|2\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Langer Rain|2\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Leipziger Stra\xC3\x9Fe|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Meerholzer Landweg|3\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Neugersdorfer Stra\xC3\x9Fe|3\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Nordstra\xC3\x9Fe|3\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Oberfeldstra\xC3\x9Fe|7\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Oberlausitzer Stra\xC3\x9Fe|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|R\xC3\xB6testra\xC3\x9Fe|4\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Sudetenstra\xC3\x9Fe|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Th\xC3\xBCringer Stra\xC3\x9Fe|7\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Weinbergstra\xC3\x9Fe|1\x0A63584|Lieblos||||80\x0A63694|Limeshain|Hasselroth|Neuenha\xC3\x9Flau|Barbarossastra\xC3\x9Fe|1\x0A63694|Limeshain||||1\x0A63674|Lindheim|Altenstadt|Lindheim|Altenst\xC3\xA4dter Stra\xC3\x9Fe|1\x0A63674|Lindheim|Altenstadt|Lindheim|Heugasse|1\x0A63674|Lindheim|Altenstadt||Leimenkautenfeld|2\x0A63674|Lindheim|Altenstadt|Lindheim|Nikkisostra\xC3\x9Fe|1\x0A63674|Lindheim|Altenstadt|Lindheim|Siedlerstra\xC3\x9Fe|3\x0A63674|Lindheim||||8\x0A63639 Sum|Lohrhaupten|Fl\xC3\xB6rsbachtal|Lohrhaupten|Gartenstra\xC3\x9Fe|1\x0A63639 Sum|Lohrhaupten||||1\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|Am Flutgraben|1\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|Am Hellerberg|1\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|An den Drei B\xC3\xA4umen|1\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|Gartenweg|2\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|Hans-Merian-Ring|8\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|Hardecker Stra\xC3\x9Fe|2\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|Herrnhuter Stra\xC3\x9Fe|4\x0A63654|Lorbach||||19\x0A63533|Mainflingen|Mainhausen|Mainflingen|Eichenstra\xC3\x9Fe|1\x0A63533|Mainflingen|Mainhausen|Mainflingen|Hauptstra\xC3\x9Fe|2\x0A63533|Mainflingen|Mainhausen|Mainflingen|Kantstra\xC3\x9Fe|1\x0A63533|Mainflingen|Mainhausen|Mainflingen|Kettelerstra\xC3\x9Fe|2\x0A63533|Mainflingen|Mainhausen|Mainflingen|Martinstra\xC3\x9Fe|1\x0A63533|Mainflingen||||7\x0A63546 Sum|Mark\xC3\xB6bel|Hammersbach|Mark\xC3\xB6bel|Burgstra\xC3\x9Fe|2\x0A63546 Sum|Mark\xC3\xB6bel|Hammersbach|Mark\xC3\xB6bel|Limesstra\xC3\x9Fe|1\x0A63546 Sum|Mark\xC3\xB6bel|Hammersbach|Mark\xC3\xB6bel|R\xC3\xB6merstra\xC3\x9Fe|1\x0A63546 Sum|Mark\xC3\xB6bel||||4\x0A63571|Meerholz|Gelnhausen|Meerholz|Am Pfarrgarten|1\x0A63571|Meerholz|Gelnhausen|Meerholz|Am Schlo\xC3\x9Fgarten|1\x0A63571|Meerholz|Gelnhausen|Meerholz|Am Viadukt|4\x0A63571|Meerholz|Gelnhausen|Meerholz|Amselweg|1\x0A63571|Meerholz|Gelnhausen|Meerholz|Europastra\xC3\x9Fe|1\x0A63571|Meerholz|Gelnhausen|Meerholz|Graf-Gustav-Weg|2\x0A63571|Meerholz|Gelnhausen|Meerholz|Gr\xC3\xA4fin-Thekla-Weg|3\x0A63571|Meerholz|Gelnhausen|Meerholz|Im B\xC3\xB6rner|1\x0A63571|Meerholz|Gelnhausen|Meerholz|K\xC3\xB6nigsberger Stra\xC3\x9Fe|1\x0A63571|Meerholz|Gelnhausen|Meerholz|Mittlauer Weg|2\x0A63571|Meerholz|Gelnhausen|Hailer|Sudetenstra\xC3\x9Fe|1\x0A63571|Meerholz|Gelnhausen|Meerholz|Wiesenbornstra\xC3\x9Fe|3\x0A63571|Meerholz||||21\x0A63654|Michelau|B\xC3\xBCdingen|Michelau|Moosbergstra\xC3\x9Fe|3\x0A63654|Michelau|B\xC3\xBCdingen|Michelau|Wiebelsteinweg|1\x0A63654|Michelau||||4\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Am Haubenflug|1\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Am L\xC3\xBCtzelberg|2\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|An der Gro\xC3\x9Fen Wiese|3\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Auf den R\xC3\xB6merkastellen|1\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Habichtswaldstra\xC3\x9Fe|1\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Nauheimer Stra\xC3\x9Fe|1\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Ro\xC3\x9Fdorfer Stra\xC3\x9Fe|1\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Wachenbuchener Stra\xC3\x9Fe|2\x0A63454|Mittelbuchen||||12\x0A63584|Mittelgr\xC3\xBCndau|Gr\xC3\xBCndau|Mittel-Gr\xC3\xBCndau|Ahl|1\x0A63584|Mittelgr\xC3\xBCndau|Gr\xC3\xBCndau|Mittel-Gr\xC3\xBCndau|Am Hirschsprung|1\x0A63584|Mittelgr\xC3\xBCndau|Gr\xC3\xBCndau|Mittel-Gr\xC3\xBCndau|Gr\xC3\xBCner Weg|1\x0A63584|Mittelgr\xC3\xBCndau|Gr\xC3\xBCndau|Mittel-Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndauer Stra\xC3\x9Fe|1\x0A63584|Mittelgr\xC3\xBCndau|Gr\xC3\xBCndau|Mittel-Gr\xC3\xBCndau|Im Wagnersgrund|4\x0A63584|Mittelgr\xC3\xBCndau||||8\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Bahnhofstra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Dietesheimer Stra\xC3\x9Fe|4\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Holbeinstra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main||L\xC3\xA4mmerspieler Stra\xC3\x9Fe|2\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Ludwigstra\xC3\x9Fe|4\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Schillerstra\xC3\x9Fe|21\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Blumenstra\xC3\x9Fe|2\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Dresdener Stra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Friedensstra\xC3\x9Fe|7\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Hausener Weg|22\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|K\xC3\xA4the-Kollwitz-Stra\xC3\x9Fe|13\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main||L\xC3\xA4mmerspieler Stra\xC3\x9Fe|4\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|M\xC3\xBCllerweg|20\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Robert-Bosch-Weg|13\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Tiefenorter Ring|3\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Tilsiter Stra\xC3\x9Fe|2\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Tulpenweg|2\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Ulmenstra\xC3\x9Fe|7\x0A63165|M\xC3\xBChlheim||||129\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Am Dreispitz|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Angergasse|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Aussiger Stra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Austra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Ebertstra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Grenzstra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Hindemithstra\xC3\x9Fe|2\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Hoffmannstra\xC3\x9Fe|4\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Marktstra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Offenbacher Stra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Rote-Warte-Stra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|R\xC3\xBCckertstra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.||||16\x0A63607|Neudorf|W\xC3\xA4chtersbach|Neudorf|Am Rosengarten|1\x0A63607|Neudorf|W\xC3\xA4chtersbach|Neudorf|Aufenauer Stra\xC3\x9Fe|1\x0A63607|Neudorf|W\xC3\xA4chtersbach|Neudorf|Birkenstra\xC3\x9Fe|1\x0A63607|Neudorf||||3\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Bahnhofstra\xC3\x9Fe|1\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Erlenstra\xC3\x9Fe|2\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Im Rosengarten|1\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|In den St\xC3\xBCmpfen|1\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Kirchgasse|1\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Mainstra\xC3\x9Fe|2\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|M\xC3\xBChlbachstra\xC3\x9Fe|3\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Rheinstra\xC3\x9Fe|10\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Simmigstra\xC3\x9Fe|2\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Tannenstra\xC3\x9Fe|1\x0A63594|Neuenha\xC3\x9Flau||||24\x0A63636 Sum|Neuenschmidten, Brachttal, Germany|Brachttal|Schlierbach|Birsteiner Stra\xC3\x9Fe|2\x0A63636 Sum|Neuenschmidten, Brachttal, Germany||||2\x0A63579|Neuses|Freigericht|Neuses|Schulstra\xC3\x9Fe|1\x0A63579|Neuses|Freigericht|Somborn|Waldstra\xC3\x9Fe|2\x0A63579|Neuses||||3\x0A63549 Sum|Neuwiedermu\xC3\x9F|Ronneburg|Neuwiedermu\xC3\x9F|Am Eisick|2\x0A63549 Sum|Neuwiedermu\xC3\x9F|Ronneburg|Neuwiedermu\xC3\x9F|Odenwaldstra\xC3\x9Fe|1\x0A63549 Sum|Neuwiedermu\xC3\x9F||||3\x0A63599|Neuwirtheim|Biebergem\xC3\xBCnd|Neuwirtheim|Karlsbader Stra\xC3\x9Fe|2\x0A63599|Neuwirtheim|Biebergem\xC3\xBCnd|Neuwirtheim|Stettiner Stra\xC3\x9Fe|1\x0A63599|Neuwirtheim|Biebergem\xC3\xBCnd|Neuwirtheim|Tilsiter Stra\xC3\x9Fe|1\x0A63599|Neuwirtheim||||4\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|Altenburgring|1\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|An der Nachtweide|3\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|An der Ruhbank|1\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|Berliner Stra\xC3\x9Fe|2\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|Junkergasse|1\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|Oberdorfelder Stra\xC3\x9Fe|1\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|Saint-Sever-Stra\xC3\x9Fe|3\x0A61138 Sum|Niederdorfelden||||12\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Birkenweg|3\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Im Krebsengarten|3\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Laussonner Stra\xC3\x9Fe|3\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Lerchenweg|1\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Mittel-Gr\xC3\xBCndauer Stra\xC3\x9Fe|3\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Schieferbergstra\xC3\x9Fe|1\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Schwalbenrain|1\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Untergasse|2\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Weingartenstra\xC3\x9Fe|2\x0A63584|Niedergr\xC3\xBCndau||||19\x0A63486|Niederissigheim|Bruchk\xC3\xB6bel|Niederissigheim|Heinrich-B\xC3\xB6ll-Stra\xC3\x9Fe|2\x0A63486|Niederissigheim|Bruchk\xC3\xB6bel|Niederissigheim|Heinrich-Hoffmann-Stra\xC3\x9Fe|1\x0A63486|Niederissigheim||||3\x0A63594|Niedermittlau|Hasselroth|Niedermittlau|Alte Dorfstra\xC3\x9Fe|1\x0A63594|Niedermittlau|Hasselroth|Niedermittlau|Hopfengartenstra\xC3\x9Fe|1\x0A63594|Niedermittlau|Hasselroth|Niedermittlau|J\xC3\xA4gerbuschstra\xC3\x9Fe|1\x0A63594|Niedermittlau|Hasselroth|Niedermittlau|Vogelsbergstra\xC3\x9Fe|1\x0A63594|Niedermittlau||||4\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Adolf-Reichwein-Stra\xC3\x9Fe|1\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Alzenauer Stra\xC3\x9Fe|2\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Feldbergstra\xC3\x9Fe|3\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Hainbornstra\xC3\x9Fe|1\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Heinrich-Heine-Stra\xC3\x9Fe|2\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|In der Gartel|3\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Landwehrstra\xC3\x9Fe|1\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Nordring|1\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|S\xC3\xBCdring|1\x0A63517|Niederrodenbach||||15\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Am Buchrain|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Am Jubil\xC3\xA4umsstein|3\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Am Kappenwald|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Am Karnweg|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Am Wiesengrund|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Berliner Stra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Breidertring|19\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Drosselstra\xC3\x9Fe|2\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Eisenbahnstra\xC3\x9Fe|2\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Erzbergerstra\xC3\x9Fe|2\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Frankfurter Stra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Geranienstra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Hanauer Stra\xC3\x9Fe|4\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Heinrich-von-Kleist-Stra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Hermann-L\xC3\xB6ns-Stra\xC3\x9Fe|2\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|H\xC3\xBCgelstra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|J\xC3\xA4gerstra\xC3\x9Fe|2\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Lindenweg|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Ludwig-Uhland-Stra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark||Nieder-R\xC3\xB6der-Stra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Odenwaldstra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Riemenschneiderstra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Talstra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Wingertstra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Zum Steckengarten|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany||||53\x0A63674|Oberau|Altenstadt|Oberau|Am Pfahlgraben|1\x0A63674|Oberau|Altenstadt|Oberau|Kochgasse|1\x0A63674|Oberau|Altenstadt|Oberau|Lange Stra\xC3\x9Fe|1\x0A63674|Oberau||||3\x0A63637 Sum|Oberndorf|Jossgrund|Oberndorf|Lohrer Stra\xC3\x9Fe|1\x0A63637 Sum|Oberndorf|Jossgrund|Oberndorf|Schulstra\xC3\x9Fe|1\x0A63637 Sum|Oberndorf||||2\x0A63517|Oberrodenbach|Rodenbach||Barbarossastra\xC3\x9Fe|1\x0A63517|Oberrodenbach|Rodenbach|Oberrodenbach|Hanauer Stra\xC3\x9Fe|1\x0A63517|Oberrodenbach|Rodenbach|Oberrodenbach|Talstra\xC3\x9Fe|1\x0A63517|Oberrodenbach||||3\x0A63633|Obersotzbach|Birstein|Obersotzbach|Hellwaldblick|1\x0A63633|Obersotzbach|Birstein|Obersotzbach|Waldschulstra\xC3\x9Fe|1\x0A63633|Obersotzbach||||2\x0A63179|Obertshausen|Obertshausen|Obertshausen|August-Bebel-Stra\xC3\x9Fe|1\x0A63179|Obertshausen|Obertshausen|Obertshausen|B\xC3\xB6hmerwaldstra\xC3\x9Fe|4\x0A63179|Obertshausen|Obertshausen|Obertshausen|Danziger Stra\xC3\x9Fe|22\x0A63179|Obertshausen|Obertshausen|Obertshausen|Geleitstra\xC3\x9Fe|2\x0A63179|Obertshausen|Obertshausen|Obertshausen|Georg-Kerschensteiner-Stra\xC3\x9Fe|5\x0A63179|Obertshausen|Obertshausen|Obertshausen|Grenzstra\xC3\x9Fe|1\x0A63179|Obertshausen|Obertshausen|Obertshausen|Laakirchener Stra\xC3\x9Fe|9\x0A63179|Obertshausen|Obertshausen|Obertshausen|Leipziger Stra\xC3\x9Fe|11\x0A63179|Obertshausen|Obertshausen|Obertshausen|Theodor-Heuss-Stra\xC3\x9Fe|1\x0A63179|Obertshausen|Obertshausen|Obertshausen|Beethovenstra\xC3\x9Fe|3\x0A63179|Obertshausen|Obertshausen|Obertshausen|Berliner Stra\xC3\x9Fe|2\x0A63179|Obertshausen|Obertshausen|Obertshausen|Bieberer Stra\xC3\x9Fe|12\x0A63179|Obertshausen|Obertshausen|Obertshausen|Eichenweg|1\x0A63179|Obertshausen|Obertshausen|Obertshausen|Erzbergerstra\xC3\x9Fe|1\x0A63179|Obertshausen|Obertshausen|Obertshausen|Heusenstammer Stra\xC3\x9Fe|1\x0A63179|Obertshausen|Obertshausen|Obertshausen|Stra\xC3\x9Fe im Loh|3\x0A63179|Obertshausen|Obertshausen|Obertshausen|Vogelsbergstra\xC3\x9Fe|7\x0A63179|Obertshausen|Obertshausen|Obertshausen|Von-Stauffenberg-Stra\xC3\x9Fe|2\x0A63179|Obertshausen|Obertshausen|Obertshausen|Waldstra\xC3\x9Fe|1\x0A63179|Obertshausen||||89\x0A63654|Orleshausen|B\xC3\xBCdingen|Orleshausen|Am Herrenh\xC3\xB6fchen|3\x0A63654|Orleshausen|B\xC3\xBCdingen|Orleshausen|B\xC3\xBCcheser Stra\xC3\x9Fe|2\x0A63654|Orleshausen|B\xC3\xBCdingen|Orleshausen|Hardeckring|9\x0A63654|Orleshausen|B\xC3\xBCdingen|Orleshausen|Hungebergweg|3\x0A63654|Orleshausen|B\xC3\xBCdingen|Orleshausen|Orlesh\xC3\xA4user Hauptstra\xC3\x9Fe|8\x0A63654|Orleshausen||||25\x0A61130|Ostheim|Nidderau|Ostheim|Alte Ziegelei|1\x0A61130|Ostheim|Nidderau|Ostheim|Am Jungfernborn|2\x0A61130|Ostheim|Nidderau|Ostheim|Am Weinberg|1\x0A61130|Ostheim|Nidderau|Ostheim|Am Ziegelweiher|3\x0A61130|Ostheim|Nidderau|Ostheim|Eisenbahnstra\xC3\x9Fe|1\x0A61130|Ostheim|Nidderau|Ostheim|Fasanenweg|1\x0A61130|Ostheim|Nidderau|Ostheim|In der M\xC3\xBChlweide|1\x0A61130|Ostheim|Nidderau|Ostheim|Limesstra\xC3\x9Fe|1\x0A61130|Ostheim||||11\x0A63543|Ravolzhausen|Neuberg|Ravolzhausen|Darmst\xC3\xA4dter Stra\xC3\x9Fe|1\x0A63543|Ravolzhausen|Neuberg|Ravolzhausen|Oberissigheimer Stra\xC3\x9Fe|1\x0A63543|Ravolzhausen||||2\x0A63150|Rembr\xC3\xBCcken, Heusenstamm, Germany|Heusenstamm|Rembr\xC3\xBCcken|Im Vogelseen|2\x0A63150|Rembr\xC3\xBCcken, Heusenstamm, Germany||||2\x0A63654|Rinderb\xC3\xBCgen|B\xC3\xBCdingen|Rinderb\xC3\xBCgen|Am Eckelgarten|1\x0A63654|Rinderb\xC3\xBCgen|B\xC3\xBCdingen|Rinderb\xC3\xBCgen|Am Hohenrain|8\x0A63654|Rinderb\xC3\xBCgen|B\xC3\xBCdingen|Rinderb\xC3\xBCgen|Auf der Wann|1\x0A63654|Rinderb\xC3\xBCgen|B\xC3\xBCdingen|Rinderb\xC3\xBCgen|Haingarten|1\x0A63654|Rinderb\xC3\xBCgen|B\xC3\xBCdingen|Rinderb\xC3\xBCgen|M\xC3\xBChlgasse|1\x0A63654|Rinderb\xC3\xBCgen|B\xC3\xBCdingen|Rinderb\xC3\xBCgen|Parkstra\xC3\x9Fe|2\x0A63654|Rinderb\xC3\xBCgen||||14\x0A63674|Rodenbach|Altenstadt|Rodenbach|Ortenberger Stra\xC3\x9Fe|1\x0A63674|Rodenbach|Altenstadt|Rodenbach|Rh\xC3\xB6nstra\xC3\x9Fe|1\x0A63674|Rodenbach|Altenstadt|Rodenbach|Unterstra\xC3\x9Fe|8\x0A63674|Rodenbach||||10\x0A63322|R\xC3\xB6dermark-Messenhausen|R\xC3\xB6dermark||Urberacher Stra\xC3\x9Fe|1\x0A63322|R\xC3\xB6dermark-Messenhausen||||1\x0A63322|R\xC3\xB6dermark-Urberach|R\xC3\xB6dermark|Urberach|Bruchwiesenstra\xC3\x9Fe|3\x0A63322|R\xC3\xB6dermark-Urberach|R\xC3\xB6dermark|Urberach|Naheweg|1\x0A63322|R\xC3\xB6dermark-Urberach|R\xC3\xB6dermark|Urberach|Nikolaus-Schwarzkopf-Stra\xC3\x9Fe|9\x0A63322|R\xC3\xB6dermark-Urberach|R\xC3\xB6dermark|Urberach|Rodaustra\xC3\x9Fe|1\x0A63322|R\xC3\xB6dermark-Urberach|R\xC3\xB6dermark|Urberach|Schillerstra\xC3\x9Fe|8\x0A63322|R\xC3\xB6dermark-Urberach||||22\x0A63628|Romsthal|Bad Soden-Salm\xC3\xBCnster|Romsthal|Lange Wiese|5\x0A63628|Romsthal|Bad Soden-Salm\xC3\xBCnster|Romsthal|Luzerneweg|1\x0A63628|Romsthal|Bad Soden-Salm\xC3\xBCnster|Romsthal|Wahlerter Stra\xC3\x9Fe|1\x0A63628|Romsthal||||7\x0A63452|Rosenau|Hanau|Hanau|Ameliastra\xC3\x9Fe|1\x0A63452|Rosenau|Hanau|Hanau|Beethovenplatz|1\x0A63452|Rosenau|Hanau|Hanau|Brahmsweg|1\x0A63452|Rosenau|Hanau|Hanau|Brucknerstra\xC3\x9Fe|2\x0A63452|Rosenau|Hanau|Hanau|Gustav-Adolf-Stra\xC3\x9Fe|1\x0A63452|Rosenau|Hanau|Hanau|Kattenstra\xC3\x9Fe|1\x0A63452|Rosenau|Hanau|Gro\xC3\x9Fauheim|Carl-Kronenberger-Stra\xC3\x9Fe|1\x0A63452|Rosenau|Hanau|Hanau|Salisweg|1\x0A63452|Rosenau||||9\x0A63599|Ro\xC3\x9Fbach|Biebergem\xC3\xBCnd|Ro\xC3\x9Fbach|Brunnenstra\xC3\x9Fe|1\x0A63599|Ro\xC3\x9Fbach|Biebergem\xC3\xBCnd|Ro\xC3\x9Fbach|Zur Kaisereiche|1\x0A63599|Ro\xC3\x9Fbach||||2\x0A63486|Ro\xC3\x9Fdorf|Bruchk\xC3\xB6bel|Ro\xC3\x9Fdorf|Eichendorffanlage|4\x0A63486|Ro\xC3\x9Fdorf|Bruchk\xC3\xB6bel|Ro\xC3\x9Fdorf|Hanauer Stra\xC3\x9Fe|1\x0A63486|Ro\xC3\x9Fdorf|Bruchk\xC3\xB6bel|Ro\xC3\x9Fdorf|Thomas-Mann-Stra\xC3\x9Fe|1\x0A63486|Ro\xC3\x9Fdorf||||6\x0A63571|Roth|Gelnhausen|Roth|Altdorfstra\xC3\x9Fe|3\x0A63571|Roth|Gelnhausen|Roth|Am R\xC3\xB6ther H\xC3\xA4uschen|1\x0A63571|Roth|Gelnhausen|Roth|Gartenstra\xC3\x9Fe|2\x0A63571|Roth|Gelnhausen|Hailer|Gelnh\xC3\xA4user Stra\xC3\x9Fe|3\x0A63571|Roth|Gelnhausen|Roth|Herzbergstra\xC3\x9Fe|1\x0A63571|Roth|Gelnhausen|Roth|Hochstra\xC3\x9Fe|4\x0A63571|Roth|Gelnhausen|Roth|Im Goldberg|4\x0A63571|Roth|Gelnhausen|Roth|Junkenhofstra\xC3\x9Fe|3\x0A63571|Roth|Gelnhausen||Kinzigtalblick|1\x0A63571|Roth|Gelnhausen|Roth|Nordstra\xC3\x9Fe|2\x0A63571|Roth|Gelnhausen|Roth|Quellenstra\xC3\x9Fe|2\x0A63571|Roth|Gelnhausen|Roth|Rathausstra\xC3\x9Fe|2\x0A63571|Roth|Gelnhausen|Roth|R\xC3\xB6ther Wingertstra\xC3\x9Fe|1\x0A63571|Roth|Gelnhausen|Roth|Unterstra\xC3\x9Fe|1\x0A63571|Roth||||30\x0A63584|Rothenbergen|Gr\xC3\xBCndau||Alte Leipziger Stra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Heiligenstock|3\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Am Sportplatz|4\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|An der Nachtweide|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Auf der Messbach|7\x0A63584|Rothenbergen|Gr\xC3\xBCndau||Bahnhofstra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Berliner Stra\xC3\x9Fe|2\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Bogenstra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Br\xC3\xBCder-Grimm-Stra\xC3\x9Fe|2\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Brunnenstra\xC3\x9Fe|2\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Eichendorffstra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Feldstra\xC3\x9Fe|6\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Frankfurter Stra\xC3\x9Fe|3\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Fuldaer Stra\xC3\x9Fe|6\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|F\xC3\xBCnfkirchner Stra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Georg-B\xC3\xBCchner-Stra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Goethestra\xC3\x9Fe|3\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Hofackerheeg|12\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Im Kleinen Feldchen|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|In der Hochstadt|5\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Jahnstra\xC3\x9Fe|3\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|John-Wesley-Stra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Karlsbader Stra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Niedergr\xC3\xBCndauer Stra\xC3\x9Fe|3\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Philipp-Reis-Stra\xC3\x9Fe|5\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Rohrstra\xC3\x9Fe|2\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Wibaustra\xC3\x9Fe|2\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Wiesenstra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Wingertstra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Zingelweg|1\x0A63584|Rothenbergen||||83\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|An der Sandwiese|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|An der W\xC3\xBCstung|4\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Beethovenstra\xC3\x9Fe|10\x0A63526|R\xC3\xBCckingen|Erlensee||Br\xC3\xBCckenstra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Georg-B\xC3\xBCchner-Stra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Hainstra\xC3\x9Fe|2\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Hattergasse|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Kastellstra\xC3\x9Fe|7\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Leipziger Stra\xC3\x9Fe|13\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Lindenstra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Marienstra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Markwaldsiedlung|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Mozartstra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Rh\xC3\xB6nstra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Taunusstra\xC3\x9Fe|7\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Waldstra\xC3\x9Fe|2\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Wilhelmstra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen||||55\x0A63543|R\xC3\xBCdigheim|Neuberg|R\xC3\xBCdigheim|Am M\xC3\xB6llerborn|1\x0A63543|R\xC3\xBCdigheim|Neuberg|R\xC3\xBCdigheim|Hainstra\xC3\x9Fe|1\x0A63543|R\xC3\xBCdigheim|Neuberg|R\xC3\xBCdigheim|Hintergasse|1\x0A63543|R\xC3\xBCdigheim|Neuberg|R\xC3\xBCdigheim|M\xC3\xBChlstra\xC3\x9Fe|1\x0A63543|R\xC3\xBCdigheim||||4\x0A63636 Sum|Schlierbach|Brachttal||Brachtstra\xC3\x9Fe|1\x0A63636 Sum|Schlierbach|Brachttal|Schlierbach|Hegstra\xC3\x9Fe|1\x0A63636 Sum|Schlierbach|Brachttal|Schlierbach|Hippegasse|2\x0A63636 Sum|Schlierbach|Brachttal|Schlierbach|In der Aue|2\x0A63636 Sum|Schlierbach|Brachttal|Schlierbach|Neue Stra\xC3\x9Fe|2\x0A63636 Sum|Schlierbach|Brachttal|Schlierbach|Weihergasse|1\x0A63636 Sum|Schlierbach||||9\x0A61137|Sch\xC3\xB6neck-B\xC3\xBCdesheim|Sch\xC3\xB6neck|B\xC3\xBCdesheim|Am Na\xC3\x9Fling|1\x0A61137|Sch\xC3\xB6neck-B\xC3\xBCdesheim|Sch\xC3\xB6neck|B\xC3\xBCdesheim|Eulenring|1\x0A61137|Sch\xC3\xB6neck-B\xC3\xBCdesheim|Sch\xC3\xB6neck|B\xC3\xBCdesheim|Fasanenstra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-B\xC3\xBCdesheim|Sch\xC3\xB6neck|B\xC3\xBCdesheim|Froschbachstra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-B\xC3\xBCdesheim|Sch\xC3\xB6neck|B\xC3\xBCdesheim|Ringstra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-B\xC3\xBCdesheim||||5\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Am Neuberg|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Anne-Frank-Stra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck||Bleichstra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Johann-Sebastian-Bach-Stra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Sonnensteig|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Talstra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Untergasse|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Wachenbucher Stra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Waldstra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten||||9\x0A61137|Sch\xC3\xB6neck-Oberdorffelden|Sch\xC3\xB6neck|Oberdorfelden|Hessenstra\xC3\x9Fe|2\x0A61137|Sch\xC3\xB6neck-Oberdorffelden|Sch\xC3\xB6neck|Oberdorfelden|Lerchenweg|1\x0A61137|Sch\xC3\xB6neck-Oberdorffelden|Sch\xC3\xB6neck|Oberdorfelden|Nidderauer Stra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Oberdorffelden|Sch\xC3\xB6neck|Oberdorfelden|Odenwaldstra\xC3\x9Fe|2\x0A61137|Sch\xC3\xB6neck-Oberdorffelden||||6\x0A63500|Seligenstadt|Seligenstadt|Seligenstadt|Berliner Stra\xC3\x9Fe|17\x0A63500|Seligenstadt|Seligenstadt|Seligenstadt|Babenh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63500|Seligenstadt|Seligenstadt|Seligenstadt|Giselastra\xC3\x9Fe|1\x0A63500|Seligenstadt|Seligenstadt|Seligenstadt|Hauptstra\xC3\x9Fe|1\x0A63500|Seligenstadt|Seligenstadt|Seligenstadt|Querstra\xC3\x9Fe|3\x0A63500|Seligenstadt|Seligenstadt|Seligenstadt|Wolfstra\xC3\x9Fe|1\x0A63500|Seligenstadt||||24\x0A63579|Somborn|Freigericht|Somborn|Am Sportfeld|5\x0A63579|Somborn|Freigericht|Somborn|Aue|2\x0A63579|Somborn|Freigericht||Auf dem Weidenstrauch|1\x0A63579|Somborn|Freigericht|Somborn|Dangelweg|2\x0A63579|Somborn|Freigericht||Im Schwalbengrund|1\x0A63579|Somborn|Freigericht|Somborn|Karlstra\xC3\x9Fe|1\x0A63579|Somborn|Freigericht|Somborn|Nelkenweg|1\x0A63579|Somborn|Freigericht|Somborn|Raiffeisenstra\xC3\x9Fe|1\x0A63579|Somborn|Freigericht|Somborn|Rosenstra\xC3\x9Fe|2\x0A63579|Somborn|Freigericht|Somborn|Theodor-Heuss-Stra\xC3\x9Fe|1\x0A63579|Somborn|Freigericht|Somborn|Tulpenweg|2\x0A63579|Somborn|Freigericht|Somborn|Vogelsbergblick|1\x0A63579|Somborn||||20\x0A63636 Sum|Spielberg|Brachttal|Spielberg|Hainbuchenweg|1\x0A63636 Sum|Spielberg|Brachttal|Spielberg|Herrnschwender Stra\xC3\x9Fe|1\x0A63636 Sum|Spielberg|Brachttal||Kreutstra\xC3\x9Fe|1\x0A63636 Sum|Spielberg||||3\x0A63456|Steinheim|Hanau|Steinheim|Auf den Sickenrain|1\x0A63456|Steinheim|Hanau|Steinheim|Brandenburgstra\xC3\x9Fe|1\x0A63456|Steinheim|Hanau|Steinheim|Doorner Stra\xC3\x9Fe|1\x0A63456|Steinheim|Hanau|Steinheim|Hermann-Ehlers-Stra\xC3\x9Fe|5\x0A63456|Steinheim|Hanau|Steinheim|Johannes-Eppert-Weg|1\x0A63456|Steinheim|Hanau|Steinheim|Johannes-Machern-Stra\xC3\x9Fe|4\x0A63456|Steinheim|Hanau|Steinheim|Karl-Kirstein-Stra\xC3\x9Fe|9\x0A63456|Steinheim|Hanau|Steinheim|Karlstra\xC3\x9Fe|2\x0A63456|Steinheim|Hanau|Steinheim|Pfaffenbrunnenstra\xC3\x9Fe|2\x0A63456|Steinheim|Hanau|Steinheim|Albrecht-D\xC3\xBCrer-Stra\xC3\x9Fe|1\x0A63456|Steinheim|Hanau|Steinheim|Dietzenseestra\xC3\x9Fe|3\x0A63456|Steinheim|Hanau|Steinheim|Eppsteinstra\xC3\x9Fe|4\x0A63456|Steinheim|Hanau|Steinheim|Idastra\xC3\x9Fe|3\x0A63456|Steinheim|Hanau|Steinheim|Illweg|1\x0A63456|Steinheim|Hanau|Steinheim|Kreuzweg|3\x0A63456|Steinheim|Hanau||Offenbacher Landstra\xC3\x9Fe|2\x0A63456|Steinheim|Hanau|Steinheim|Otto-Hahn-Stra\xC3\x9Fe|1\x0A63456|Steinheim|Hanau|Steinheim|Wilhelm-Paul-Stra\xC3\x9Fe|1\x0A63456|Steinheim||||45\x0A63695|Stockheim, Glauburg, Deutschland|Glauburg|Stockheim|Am W\xC3\xA4ldchen|1\x0A63695|Stockheim, Glauburg, Deutschland|Glauburg|Stockheim|Bahnhofstra\xC3\x9Fe|1\x0A63695|Stockheim, Glauburg, Deutschland|Glauburg|Stockheim|Berliner Stra\xC3\x9Fe|1\x0A63695|Stockheim, Glauburg, Deutschland|Glauburg|Stockheim|Ringstra\xC3\x9Fe|1\x0A63695|Stockheim, Glauburg, Deutschland|Glauburg|Stockheim|Unter der Struth|1\x0A63695|Stockheim, Glauburg, Deutschland|Glauburg|Stockheim|Weinbergstra\xC3\x9Fe|1\x0A63695|Stockheim, Glauburg, Deutschland||||6\x0A63636 Sum|Udenhain|Brachttal|Udenhain|Schauerwaldweg|1\x0A63636 Sum|Udenhain|Brachttal|Udenhain|Schulstra\xC3\x9Fe|3\x0A63636 Sum|Udenhain||||4\x0A63633|Unterreichenbach|Birstein|Unterreichenbach|Am Kirchacker|1\x0A63633|Unterreichenbach|Birstein|Unterreichenbach|Am Nollfeld|1\x0A63633|Unterreichenbach||||2\x0A63654|Vonhausen|B\xC3\xBCdingen|Vonhausen|Am Herrngarten|1\x0A63654|Vonhausen|B\xC3\xBCdingen|Vonhausen|An den Kernb\xC3\xA4umen|2\x0A63654|Vonhausen|B\xC3\xBCdingen|Vonhausen|Blumenstra\xC3\x9Fe|1\x0A63654|Vonhausen|B\xC3\xBCdingen|Vonhausen|Im M\xC3\xBCnchhohlring|2\x0A63654|Vonhausen||||6\x0A63477|Wachenbuchen|Maintal|Wachenbuchen|Bleichstra\xC3\x9Fe|1\x0A63477|Wachenbuchen|Maintal|Wachenbuchen|Saalburgstra\xC3\x9Fe|1\x0A63477|Wachenbuchen|Maintal|Wachenbuchen|Taufsteinstra\xC3\x9Fe|1\x0A63477|Wachenbuchen||||3\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Am Roten Berg|2\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|An der Etzweide|5\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Breitenborner Stra\xC3\x9Fe|5\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Chatilloner Stra\xC3\x9Fe|7\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Gelnh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Haitzer Stra\xC3\x9Fe|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Ro\xC3\x9Flebener Stra\xC3\x9Fe|7\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Wirtheimer Stra\xC3\x9Fe|2\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Auweg|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Bahnhofstra\xC3\x9Fe|21\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Bleichgartenstra\xC3\x9Fe|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Br\xC3\xBCckenstra\xC3\x9Fe|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Heegstra\xC3\x9Fe|7\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Mittelweg|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Poststra\xC3\x9Fe|14\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Ysenburger Stra\xC3\x9Fe|3\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Adtring|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Alsfelder Stra\xC3\x9Fe|6\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Birsteiner Stra\xC3\x9Fe|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Wittgenborn|Baumgartenweg|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Hainhofweg|2\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Hesseldorfer Stra\xC3\x9Fe|7\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Im Ziegelgarten|5\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|In den R\xC3\xB6dern|4\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Lauterbacher Stra\xC3\x9Fe|14\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Schlierbacher Stra\xC3\x9Fe|3\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Spessartstra\xC3\x9Fe|3\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Vogelsbergstra\xC3\x9Fe|4\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Im Ziegelgarten|1\x0A63607|W\xC3\xA4chtersbach||||131\x0A63607|Waldensberg|Hanau|Gro\xC3\x9Fauheim|Von-Brentano-Stra\xC3\x9Fe|3\x0A63607|Waldensberg|W\xC3\xA4chtersbach|Waldensberg|Arnaudstra\xC3\x9Fe|1\x0A63607|Waldensberg|W\xC3\xA4chtersbach|Waldensberg|B\xC3\xBCdinger Weg|1\x0A63607|Waldensberg||||5\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Bruchwiesenweg|2\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Ernst-Reuter-Stra\xC3\x9Fe|1\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|F\xC3\xBCrstenbergstra\xC3\x9Fe|1\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Gr\xC3\xBCnaustra\xC3\x9Fe|1\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Hermelinweg|2\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|In den Heimerswiesen|1\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|John-F.-Kennedy-Stra\xC3\x9Fe|20\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Ollenhauerstra\xC3\x9Fe|6\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Ratiborstra\xC3\x9Fe|1\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Theodor-Heuss-Stra\xC3\x9Fe|3\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Vosswaldestra\xC3\x9Fe|2\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Am Eichwald|1\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Amselweg|1\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Bornflo\xC3\x9Fstra\xC3\x9Fe|5\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Eichbaumstra\xC3\x9Fe|3\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Fasanenweg|3\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Hainstra\xC3\x9Fe|2\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Herrnstra\xC3\x9Fe|17\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Philipp-Reis-Stra\xC3\x9Fe|7\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Waldstra\xC3\x9Fe|2\x0A63674|Waldsiedlung||||81\x0A63607|Weilers|W\xC3\xA4chtersbach|Weilers|Im Alten Weg|2\x0A63607|Weilers||||2\x0A63110|Weiskirchen|Rodgau|Weiskirchen|Schlesienstra\xC3\x9Fe|1\x0A63110|Weiskirchen||||1\x0A63633|Wettges|Birstein|Wettges|Triebstra\xC3\x9Fe|1\x0A63633|Wettges||||1\x0A61130|Windecken|Nidderau|Windecken|Lindenstra\xC3\x9Fe|1\x0A61130|Windecken|Nidderau|Windecken|Ostheimer Stra\xC3\x9Fe|1\x0A61130|Windecken||||2\x0A63599|Wirtheim|Biebergem\xC3\xBCnd|Wirtheim|Frankfurter Stra\xC3\x9Fe|3\x0A63599|Wirtheim|Biebergem\xC3\xBCnd|Wirtheim|Gro\xC3\x9Fer Garten|1\x0A63599|Wirtheim|Biebergem\xC3\xBCnd|Wirtheim|Marktplatz|1\x0A63599|Wirtheim|Biebergem\xC3\xBCnd|Wirtheim|Pfingstborn|1\x0A63599|Wirtheim|Biebergem\xC3\xBCnd|Wirtheim|Schinnsgraben|2\x0A63599|Wirtheim|Biebergem\xC3\xBCnd|Wirtheim|Taubenfang|1\x0A63599|Wirtheim||||9\x0A63607|Wittgenborn|W\xC3\xA4chtersbach|Wittgenborn|Langgasse|2\x0A63607|Wittgenborn|W\xC3\xA4chtersbach|Wittgenborn|Siedlungsstra\xC3\x9Fe|1\x0A63607|Wittgenborn|W\xC3\xA4chtersbach||Sophie-Knoth-Stra\xC3\x9Fe|4\x0A63607|Wittgenborn|W\xC3\xA4chtersbach|Wittgenborn|Waldensberger Stra\xC3\x9Fe|3\x0A63607|Wittgenborn||||10\x0A63654|Wolferborn|B\xC3\xBCdingen|Wolferborn|Am Alten Graben|3\x0A63654|Wolferborn|B\xC3\xBCdingen|Wolferborn|An den \xC3\x84ckerwiesen|1\x0A63654|Wolferborn|B\xC3\xBCdingen|Wolferborn|Wehrtbornstra\xC3\x9Fe|2\x0A63654|Wolferborn||||6\x0A63457|Wolfgang|Hanau|Wolfgang|August-Bebel-Stra\xC3\x9Fe|1\x0A63457|Wolfgang|Hanau||Blaumeisenweg|2\x0A63457|Wolfgang|Hanau|Wolfgang|Friedrich-Fr\xC3\xB6bel-Stra\xC3\x9Fe|2\x0A63457|Wolfgang|Hanau||Gr\xC3\xBCnspechtweg|1\x0A63457|Wolfgang|Hanau||Heidelerchenweg|1\x0A63457|Wolfgang|Hanau|Wolfgang|Lehrh\xC3\xB6fer Stra\xC3\x9Fe|1\x0A63457|Wolfgang|Hanau||Sandbienenweg|3\x0A63457|Wolfgang|Hanau|Wolfgang|Schanzenstra\xC3\x9Fe|1\x0A63457|Wolfgang|Hanau|Wolfgang|Vor der Pulverm\xC3\xBChle|1\x0A63457|Wolfgang|Hanau||Zitronenfalterweg|2\x0A63457|Wolfgang||||15\x0A63533|Zellhausen|Mainhausen|Zellhausen|Am Gellmannsr\xC3\xB6dchen|1\x0A63533|Zellhausen|Mainhausen||Am Zellerbruch|1\x0A63533|Zellhausen|Mainhausen|Zellhausen|Babenh\xC3\xA4user Stra\xC3\x9Fe|3\x0A63533|Zellhausen|Mainhausen|Zellhausen|Bahnhofstra\xC3\x9Fe|1\x0A63533|Zellhausen|Mainhausen|Zellhausen|Harresh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63533|Zellhausen|Mainhausen|Zellhausen|Obergasse|1\x0A63533|Zellhausen|Mainhausen|Zellhausen|Wingertspfad|1\x0A63533|Zellhausen||||9"), ConstSet2, -1);
    var header_seq_13860630 = nsuSplitString(streets_13860629[chckIndx(0, 0, (streets_13860629 != null ? streets_13860629.length : 0)+0-1)-0], makeNimstrLit("|"), -1);
    var header_tbl_13880614 = [init_table_13860633(64)];
    L1: do {
      var i_13890229 = 0;
      var h_13890230 = null;
      var i_14100788 = 0;
      var l_14100789 = (header_seq_13860630 != null ? header_seq_13860630.length : 0);
      L2: do {
          L3: while (true) {
          if (!(i_14100788 < l_14100789)) break L3;
            i_13890229 = i_14100788;
            h_13890230 = header_seq_13860630[chckIndx(i_14100788, 0, (header_seq_13860630 != null ? header_seq_13860630.length : 0)+0-1)-0];
            HEX5BHEX5DHEX3D_13890347(header_tbl_13880614[0], h_13890230, chckRange(i_13890229, 0, 2147483647));
            i_14100788 = addInt(i_14100788, 1);
            if (!(((header_seq_13860630 != null ? header_seq_13860630.length : 0) == l_14100789))) {
            failed_assert_impl_102680(makeNimstrLit("iterators.nim(122, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    L4: do {
      var i_13980693 = 0;
      var colontmp__14100795 = 0;
      colontmp__14100795 = (streets_13860629 != null ? (streets_13860629.length-1) : -1);
      var res_14100796 = 1;
      L5: do {
          L6: while (true) {
          if (!(res_14100796 <= colontmp__14100795)) break L6;
            i_13980693 = res_14100796;
            L7: do {
              var row_seq_13980694 = nsuSplitString(streets_13860629[chckIndx(i_13980693, 0, (streets_13860629 != null ? streets_13860629.length : 0)+0-1)-0], makeNimstrLit("|"), -1);
              var str_n_13980695 = null;
              var city_13980696 = null;
              var dstr_13980697 = null;
              var plz_13980698 = null;
              var total_fam_13980699 = null;
              var str_n_13980695 = nimCopy(null, row_seq_13980694[chckIndx((Tmp8 = HEX5BHEX5D_13985153(header_tbl_13880614[0], makeNimstrLit("Street")), Tmp8)[0][Tmp8[1]], 0, (row_seq_13980694 != null ? row_seq_13980694.length : 0)+0-1)-0], NTI112);
              if (eqStrings(str_n_13980695, [])) {
              break L7;
              }
              
              var city_13980696 = nimCopy(null, row_seq_13980694[chckIndx((Tmp9 = HEX5BHEX5D_13985153(header_tbl_13880614[0], makeNimstrLit("City")), Tmp9)[0][Tmp9[1]], 0, (row_seq_13980694 != null ? row_seq_13980694.length : 0)+0-1)-0], NTI112);
              var dstr_13980697 = nimCopy(null, row_seq_13980694[chckIndx((Tmp10 = HEX5BHEX5D_13985153(header_tbl_13880614[0], makeNimstrLit("District")), Tmp10)[0][Tmp10[1]], 0, (row_seq_13980694 != null ? row_seq_13980694.length : 0)+0-1)-0], NTI112);
              if (eqStrings(dstr_13980697, city_13980696)) {
              Tmp11 = [];
              }
              else {
              Tmp11 = dstr_13980697;
              }
              
              var district_14000168 = nimCopy(null, Tmp11, NTI112);
              var plz_13980698 = nimCopy(null, row_seq_13980694[chckIndx((Tmp12 = HEX5BHEX5D_13985153(header_tbl_13880614[0], makeNimstrLit("Plz")), Tmp12)[0][Tmp12[1]], 0, (row_seq_13980694 != null ? row_seq_13980694.length : 0)+0-1)-0], NTI112);
              var sector_14005166 = {postalCode: nimCopy(null, plz_13980698, NTI112), city: nimCopy(null, city_13980696, NTI112), district: nimCopy(null, district_14000168, NTI112), folkDistrict: null, pFix: 0, streets: {data: null, counter: 0, first: 0, last: 0}, shownOnMap: false, exclude: false};
              var street_14005167 = {name: nimCopy(null, str_n_13980695, NTI112), sector: sector_14005166, links: null, totalFamilies: 0};
              var total_fam_13980699 = nimCopy(null, row_seq_13980694[chckIndx((Tmp13 = HEX5BHEX5D_13985153(header_tbl_13880614[0], makeNimstrLit("TotalFamilies")), Tmp13)[0][Tmp13[1]], 0, (row_seq_13980694 != null ? row_seq_13980694.length : 0)+0-1)-0], NTI112);
              HEX5BHEX5DHEX3D_14010282(result_13840862[0], hash_13701254(street_14005167), chckRange(parseInt(toJSStr(total_fam_13980699), 10), 0, 2147483647));
            } while(false);
            res_14100796 = addInt(res_14100796, 1);
          }
      } while(false);
    } while(false);

  return result_13840862[0];

}
var tbl_total_fam_14100772 = [init_tbl_tot_fam_by_street_13840838()];
function nsuFindChar(s_9440216, sub_9440217, start_9440218, last_9440219) {
    var Tmp1;

  var result_9440221 = 0;

  BeforeRet: do {
    if ((last_9440219 == 0)) {
    Tmp1 = (s_9440216 != null ? (s_9440216.length-1) : -1);
    }
    else {
    Tmp1 = last_9440219;
    }
    
    var last_9440223 = Tmp1;
    L2: do {
      var i_9440606 = 0;
      var colontmp__15085336 = 0;
      colontmp__15085336 = start_9440218;
      var res_15085337 = colontmp__15085336;
      L3: do {
          L4: while (true) {
          if (!(res_15085337 <= last_9440223)) break L4;
            i_9440606 = res_15085337;
            if ((sub_9440217 == s_9440216[chckIndx(i_9440606, 0, (s_9440216 != null ? s_9440216.length : 0)+0-1)-0])) {
            result_9440221 = i_9440606;
            break BeforeRet;
            }
            
            res_15085337 = addInt(res_15085337, 1);
          }
      } while(false);
    } while(false);
    result_9440221 = -1;
    break BeforeRet;
  } while (false);

  return result_9440221;

}
function substr_341053(s_341055, first_341056) {
  var result_341058 = null;

    result_341058 = nimCopy(null, substr_341022(s_341055, first_341056, (s_341055 != null ? (s_341055.length-1) : -1)), NTI112);

  return result_341058;

}
function nsuInitSkipTable(a_9435081, sub_9435082) {
    var m_9435083 = (sub_9435082 != null ? sub_9435082.length : 0);
    var i_9435085 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_9435085 <= 248)) break L2;
          a_9435081[chckIndx(chckRange(addInt(i_9435085, 0), 0, 255), 0, (a_9435081 != null ? a_9435081.length : 0)+0-1)-0] = m_9435083;
          a_9435081[chckIndx(chckRange(addInt(i_9435085, 1), 0, 255), 0, (a_9435081 != null ? a_9435081.length : 0)+0-1)-0] = m_9435083;
          a_9435081[chckIndx(chckRange(addInt(i_9435085, 2), 0, 255), 0, (a_9435081 != null ? a_9435081.length : 0)+0-1)-0] = m_9435083;
          a_9435081[chckIndx(chckRange(addInt(i_9435085, 3), 0, 255), 0, (a_9435081 != null ? a_9435081.length : 0)+0-1)-0] = m_9435083;
          a_9435081[chckIndx(chckRange(addInt(i_9435085, 4), 0, 255), 0, (a_9435081 != null ? a_9435081.length : 0)+0-1)-0] = m_9435083;
          a_9435081[chckIndx(chckRange(addInt(i_9435085, 5), 0, 255), 0, (a_9435081 != null ? a_9435081.length : 0)+0-1)-0] = m_9435083;
          a_9435081[chckIndx(chckRange(addInt(i_9435085, 6), 0, 255), 0, (a_9435081 != null ? a_9435081.length : 0)+0-1)-0] = m_9435083;
          a_9435081[chckIndx(chckRange(addInt(i_9435085, 7), 0, 255), 0, (a_9435081 != null ? a_9435081.length : 0)+0-1)-0] = m_9435083;
          i_9435085 = addInt(i_9435085, 8);
        }
    } while(false);
    L3: do {
      var i_9435101 = 0;
      var colontmp__15085344 = 0;
      colontmp__15085344 = subInt(m_9435083, 1);
      var i_15085345 = 0;
      L4: do {
          L5: while (true) {
          if (!(i_15085345 < colontmp__15085344)) break L5;
            i_9435101 = i_15085345;
            a_9435081[chckIndx(sub_9435082[chckIndx(i_9435101, 0, (sub_9435082 != null ? sub_9435082.length : 0)+0-1)-0], 0, (a_9435081 != null ? a_9435081.length : 0)+0-1)-0] = subInt(subInt(m_9435083, 1), i_9435101);
            i_15085345 = addInt(i_15085345, 1);
          }
      } while(false);
    } while(false);

  
}
function nsuFindStrA(a_9435117, s_9435118, sub_9435119, start_9435120, last_9435121) {
    var Tmp1;

  var result_9435123 = 0;

  BeforeRet: do {
    if ((last_9435121 == 0)) {
    Tmp1 = (s_9435118 != null ? (s_9435118.length-1) : -1);
    }
    else {
    Tmp1 = last_9435121;
    }
    
    var last_9435125 = Tmp1;
    var sub_last_9435126 = subInt((sub_9435119 != null ? sub_9435119.length : 0), 1);
    if ((sub_last_9435126 == -1)) {
    result_9435123 = start_9435120;
    break BeforeRet;
    }
    
    var skip_9435127 = start_9435120;
    L2: do {
        L3: while (true) {
        if (!(sub_last_9435126 <= subInt(last_9435125, skip_9435127))) break L3;
          var i_9440001 = sub_last_9435126;
          L4: do {
              L5: while (true) {
              if (!(s_9435118[chckIndx(addInt(skip_9435127, i_9440001), 0, (s_9435118 != null ? s_9435118.length : 0)+0-1)-0] == sub_9435119[chckIndx(i_9440001, 0, (sub_9435119 != null ? sub_9435119.length : 0)+0-1)-0])) break L5;
                if ((i_9440001 == 0)) {
                result_9435123 = skip_9435127;
                break BeforeRet;
                }
                
                i_9440001 = subInt(i_9440001, 1);
              }
          } while(false);
          skip_9435127 = addInt(skip_9435127, a_9435117[chckIndx(s_9435118[chckIndx(addInt(skip_9435127, sub_last_9435126), 0, (s_9435118 != null ? s_9435118.length : 0)+0-1)-0], 0, (a_9435117 != null ? a_9435117.length : 0)+0-1)-0]);
        }
    } while(false);
    result_9435123 = -1;
    break BeforeRet;
  } while (false);

  return result_9435123;

}
function nsuReplaceStr(s_9510016, sub_9510017, by_9510018) {
  var result_9510019 = null;

    result_9510019 = nimCopy(null, [], NTI112);
    var sub_len_9510020 = (sub_9510017 != null ? sub_9510017.length : 0);
    if ((sub_len_9510020 == 0)) {
    result_9510019 = nimCopy(null, s_9510016, NTI112);
    }
    else {
    if ((sub_len_9510020 == 1)) {
    var c_9510021 = sub_9510017[chckIndx(0, 0, (sub_9510017 != null ? sub_9510017.length : 0)+0-1)-0];
    var last_9510023 = (s_9510016 != null ? (s_9510016.length-1) : -1);
    var i_9510025 = 0;
    L1: do {
        L2: while (true) {
        if (!true) break L2;
          var j_9510026 = nsuFindChar(s_9510016, c_9510021, chckRange(i_9510025, 0, 2147483647), last_9510023);
          if ((j_9510026 < 0)) {
          break L1;
          }
          
          if (result_9510019 != null) { result_9510019 = (result_9510019).concat(substr_341022(s_9510016, i_9510025, subInt(j_9510026, 1))); } else { result_9510019 = substr_341022(s_9510016, i_9510025, subInt(j_9510026, 1)).slice(); };
          if (result_9510019 != null) { result_9510019 = (result_9510019).concat(by_9510018); } else { result_9510019 = by_9510018.slice(); };
          i_9510025 = addInt(j_9510026, sub_len_9510020);
        }
    } while(false);
    if (result_9510019 != null) { result_9510019 = (result_9510019).concat(substr_341053(s_9510016, i_9510025)); } else { result_9510019 = substr_341053(s_9510016, i_9510025).slice(); };
    }
    else {
      var a_9510027 = [new Int32Array(256)];
      nsuInitSkipTable(a_9510027[0], sub_9510017);
      var last_9510030 = (s_9510016 != null ? (s_9510016.length-1) : -1);
      var i_9510032 = 0;
      L3: do {
          L4: while (true) {
          if (!true) break L4;
            var j_9510033 = nsuFindStrA(a_9510027[0], s_9510016, sub_9510017, chckRange(i_9510032, 0, 2147483647), last_9510030);
            if ((j_9510033 < 0)) {
            break L3;
            }
            
            if (result_9510019 != null) { result_9510019 = (result_9510019).concat(substr_341022(s_9510016, i_9510032, subInt(j_9510033, 1))); } else { result_9510019 = substr_341022(s_9510016, i_9510032, subInt(j_9510033, 1)).slice(); };
            if (result_9510019 != null) { result_9510019 = (result_9510019).concat(by_9510018); } else { result_9510019 = by_9510018.slice(); };
            i_9510032 = addInt(j_9510033, sub_len_9510020);
          }
      } while(false);
      if (result_9510019 != null) { result_9510019 = (result_9510019).concat(substr_341053(s_9510016, i_9510032)); } else { result_9510019 = substr_341053(s_9510016, i_9510032).slice(); };
    }
    }

  return result_9510019;

}
function new_seq_13285012(len_13285015) {
  var result_13285017 = null;

    result_13285017 = new Array(len_13285015); for (var i=0;i<len_13285015;++i) {result_13285017[i]={k: 0, parent: null, current: null, newNode: null, oldNode: null};}
  return result_13285017;

}
function new_seq_13285064(len_13285067) {
  var result_13285069 = null;

    result_13285069 = new Array(len_13285067); for (var i=0;i<len_13285067;++i) {result_13285069[i]={parent: null, newChild: null, pos: 0};}
  return result_13285069;

}
function valueHEX3D_12440143(n_12440145, v_12440146) {
    n_12440145.text = v_12440146;

  
}
function value_12440126(n_12440128) {
  var result_12440129 = null;

    result_12440129 = n_12440128.text;

  return result_12440129;

}
function add_event_shell_12727375(d_12727377, name_12727378, h_12727379) {
    d_12727377.addEventListener(name_12727378, h_12727379, false);
    if ((d_12727377.karaxEvents == null)) {
    d_12727377.karaxEvents = new Array(0);
    }
    
    d_12727377.karaxEvents.push({Field0: name_12727378, Field1: h_12727379});

  
}
function wrap_event_12730097(d_12730099, n_12730100, k_12730101, action_12730102) {
      function later_wrapper_12800042() {
          function HEX3Aanonymous_12800048(ev_12800050) {
              function wrapper_12800051() {
                  var v_12800053 = ev_12800050.target.value;
                  valueHEX3D_12440143(n_12800046, v_12800053);
                  if (!(!((action_12800045 == null)))) {
                  failed_assert_impl_102680(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
                  }
                  
                  action_12800045(ev_12800050, n_12800046);
                  if (!((value_12440126(n_12800046) == v_12800053))) {
                  ev_12800050.target.value = value_12440126(n_12800046);
                  }
                  

                
              }

              if (!((timer_12800047 == null))) {
              clearTimeout(timer_12800047);
              }
              
              timer_12800047 = setTimeout(wrapper_12800051, 400);

            
          }

        var result_12800044 = null;

          var action_12800045 = action_12730102;
          var n_12800046 = n_12730100;
          var timer_12800047 = null;
          result_12800044 = HEX3Aanonymous_12800048;

        return result_12800044;

      }
      function enter_wrapper_12765042() {
          function HEX3Aanonymous_12765047(ev_12765049) {
              if ((ev_12765049.keyCode == 13)) {
              var v_12765050 = ev_12765049.target.value;
              valueHEX3D_12440143(n_12765046, v_12765050);
              if (!(!((action_12765045 == null)))) {
              failed_assert_impl_102680(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
              }
              
              action_12765045(ev_12765049, n_12765046);
              if (!((value_12440126(n_12765046) == v_12765050))) {
              ev_12765049.target.value = value_12440126(n_12765046);
              }
              
              }
              

            
          }

        var result_12765044 = null;

          var action_12765045 = action_12730102;
          var n_12765046 = n_12730100;
          result_12765044 = HEX3Aanonymous_12765047;

        return result_12765044;

      }
      function std_wrapper_12730104() {
          function HEX3Aanonymous_12730109(ev_12730111) {
                var Tmp1;
                var Tmp2;

                if ((n_12730108.kind == 111)) Tmp2 = true; else {                  Tmp2 = (n_12730108.kind == 105);                }                if (Tmp2) Tmp1 = true; else {                  Tmp1 = (n_12730108.kind == 107);                }              if (Tmp1) {
              var v_12730130 = ev_12730111.target.value;
              valueHEX3D_12440143(n_12730108, v_12730130);
              if (!(!((action_12730107 == null)))) {
              failed_assert_impl_102680(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
              }
              
              action_12730107(ev_12730111, n_12730108);
              if (!((value_12440126(n_12730108) == v_12730130))) {
              ev_12730111.target.value = value_12440126(n_12730108);
              }
              
              }
              else {
              action_12730107(ev_12730111, n_12730108);
              }
              

            
          }

        var result_12730106 = null;

          var action_12730107 = action_12730102;
          var n_12730108 = n_12730100;
          result_12730106 = HEX3Aanonymous_12730109;

        return result_12730106;

      }

  var result_12730103 = null;

    switch (k_12730101) {
    case 30:
      result_12730103 = later_wrapper_12800042();
      add_event_shell_12727375(d_12730099, "keyup", result_12730103);
      break;
    case 29:
      result_12730103 = enter_wrapper_12765042();
      add_event_shell_12727375(d_12730099, "keyup", result_12730103);
      break;
    default: 
      result_12730103 = std_wrapper_12730104();
      add_event_shell_12727375(d_12730099, to_event_name_12440012[chckIndx(k_12730101, 0, (to_event_name_12440012 != null ? to_event_name_12440012.length : 0)+0-1)-0], result_12730103);
      break;
    }

  return result_12730103;

}
function apply_events_12840073(n_12840075) {
    var dest_12840076 = n_12840075.dom;
    L1: do {
      var i_12840089 = 0;
      var colontmp__15085378 = 0;
      colontmp__15085378 = (n_12840075.events != null ? n_12840075.events.length : 0);
      var i_15085379 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_15085379 < colontmp__15085378)) break L3;
            i_12840089 = i_15085379;
            n_12840075.events[chckIndx(i_12840089, 0, (n_12840075.events != null ? n_12840075.events.length : 0)+0-1)-0]["Field2"] = wrap_event_12730097(dest_12840076, n_12840075, n_12840075.events[chckIndx(i_12840089, 0, (n_12840075.events != null ? n_12840075.events.length : 0)+0-1)-0]["Field0"], n_12840075.events[chckIndx(i_12840089, 0, (n_12840075.events != null ? n_12840075.events.length : 0)+0-1)-0]["Field1"]);
            i_15085379 = addInt(i_15085379, 1);
          }
      } while(false);
    } while(false);

  
}
function apply_style_12430425(n_12430427, s_12430428) {
    n_12430427.style = {};
    L1: do {
      var i_12430461 = 0;
      var colontmp__15085389 = 0;
      colontmp__15085389 = subInt(s_12430428.length, 1);
      var res_15085390 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_15085390 <= colontmp__15085389)) break L3;
            i_12430461 = res_15085390;
            n_12430427.style[s_12430428[i_12430461]] = s_12430428[addInt(i_12430461, 1)];
            res_15085390 = addInt(res_15085390, 2);
          }
      } while(false);
    } while(false);

  
}
function to_dom_12840154(n_12840156, use_attached_node_12840157, kxi_12840158) {
      var Tmp9;
      var Tmp10;

  var result_12840159 = null;

  BeforeRet: do {
    if (use_attached_node_12840157) {
    if (!((n_12840156.dom == null))) {
    if (!((n_12840156.id == null))) {
    kxi_12840158.byId[n_12840156.id] = n_12840156;
    }
    
    result_12840159 = n_12840156.dom;
    break BeforeRet;
    }
    
    }
    
    if ((n_12840156.kind == 0)) {
    result_12840159 = document.createTextNode(n_12840156.text);
    n_12840156.dom = result_12840159;
    if (!((n_12840156.id == null))) {
    kxi_12727284[0].byId[n_12840156.id] = n_12840156;
    }
    
    }
    else {
    if ((n_12840156.kind == 6)) {
    result_12840159 = document.createElement("div");
    result_12840159.innerHTML = n_12840156.text;
    n_12840156.dom = result_12840159;
    if (!((n_12840156.id == null))) {
    kxi_12727284[0].byId[n_12840156.id] = n_12840156;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_12840156.kind == 3)) {
    var x_12875001 = vcomponents_12606239[0][n_12840156.text](n_12840156.kids);
    result_12840159 = to_dom_12840154(x_12875001, use_attached_node_12840157, kxi_12840158);
    n_12840156.dom = result_12840159;
    if (!((n_12840156.id == null))) {
    kxi_12727284[0].byId[n_12840156.id] = n_12840156;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_12840156.kind == 4)) {
    result_12840159 = n_12840156.dom;
    if (!(!((result_12840159 == null)))) {
    failed_assert_impl_102680(makeNimstrLit("karax.nim(176, 12) `result != nil` "));
    }
    
    n_12840156.dom = result_12840159;
    if (!((n_12840156.id == null))) {
    kxi_12727284[0].byId[n_12840156.id] = n_12840156;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_12840156.kind == 5)) {
    var x_12910022 = n_12840156;
    if (!((x_12910022.onAttachImpl == null))) {
    x_12910022.onAttachImpl(x_12910022);
    }
    
    if (!(!((x_12910022.renderImpl == null)))) {
    failed_assert_impl_102680(makeNimstrLit("karax.nim(183, 12) `x.renderImpl != nil` "));
    }
    
    if ((x_12910022.expanded == null)) {
    x_12910022.expanded = x_12910022.renderImpl(x_12910022);
    }
    
    if (!(!((x_12910022.expanded == null)))) {
    failed_assert_impl_102680(makeNimstrLit("karax.nim(187, 12) `x.expanded != nil` "));
    }
    
    result_12840159 = to_dom_12840154(x_12910022.expanded, use_attached_node_12840157, kxi_12840158);
    n_12840156.dom = result_12840159;
    if (!((n_12840156.id == null))) {
    kxi_12727284[0].byId[n_12840156.id] = n_12840156;
    }
    
    break BeforeRet;
    }
    else {
      result_12840159 = document.createElement(to_tag_12440006[chckIndx(n_12840156.kind, 0, (to_tag_12440006 != null ? to_tag_12440006.length : 0)+0-1)-0]);
      n_12840156.dom = result_12840159;
      if (!((n_12840156.id == null))) {
      kxi_12727284[0].byId[n_12840156.id] = n_12840156;
      }
      
      L1: do {
        var k_12965016 = null;
        L2: do {
          var i_15085358 = 0;
          var colontmp__15085359 = 0;
          colontmp__15085359 = (n_12840156.kids != null ? n_12840156.kids.length : 0);
          var i_15085360 = 0;
          L3: do {
              L4: while (true) {
              if (!(i_15085360 < colontmp__15085359)) break L4;
                i_15085358 = i_15085360;
                k_12965016 = n_12840156.kids[chckIndx(i_15085358, 0, (n_12840156.kids != null ? n_12840156.kids.length : 0)+0-1)-0];
                result_12840159.appendChild(to_dom_12840154(k_12965016, use_attached_node_12840157, kxi_12840158));
                i_15085360 = addInt(i_15085360, 1);
              }
          } while(false);
        } while(false);
      } while(false);
      if (!((n_12840156.text == null))) {
      result_12840159.value = n_12840156.text;
      }
      
    }
    }}}}
    if (!((n_12840156.id == null))) {
    result_12840159.id = n_12840156.id;
    }
    
    if (!((n_12840156.class == null))) {
    result_12840159.className = n_12840156.class;
    }
    
    L5: do {
      var k_12980001 = null;
      var v_12980002 = null;
      L6: do {
        var i_15085371 = 0;
        var colontmp__15085372 = 0;
        colontmp__15085372 = subInt((n_12840156.attrs != null ? n_12840156.attrs.length : 0), 2);
        var res_15085373 = 0;
        L7: do {
            L8: while (true) {
            if (!(res_15085373 <= colontmp__15085372)) break L8;
              i_15085371 = res_15085373;
              k_12980001 = n_12840156.attrs[chckIndx(i_15085371, 0, (n_12840156.attrs != null ? n_12840156.attrs.length : 0)+0-1)-0];
              v_12980002 = n_12840156.attrs[chckIndx(addInt(i_15085371, 1), 0, (n_12840156.attrs != null ? n_12840156.attrs.length : 0)+0-1)-0];
              if (!((v_12980002 == null))) {
              result_12840159.setAttribute(k_12980001, v_12980002);
              }
              
              res_15085373 = addInt(res_15085373, 2);
            }
        } while(false);
      } while(false);
    } while(false);
    apply_events_12840073(n_12840156);
      if (!!((kxi_12840158 == null))) Tmp10 = false; else {        Tmp10 = (n_12840156 == kxi_12840158.toFocusV);      }      if (!Tmp10) Tmp9 = false; else {        Tmp9 = (kxi_12840158.toFocus == null);      }    if (Tmp9) {
    kxi_12840158.toFocus = result_12840159;
    }
    
    if (!((n_12840156.style == null))) {
    apply_style_12430425(result_12840159, n_12840156.style);
    }
    
  } while (false);

  return result_12840159;

}
function replace_by_id_13005059(id_13005061, new_tree_13005062) {
    var x_13005063 = document.getElementById(id_13005061);
    x_13005063.parentNode.replaceChild(new_tree_13005062, x_13005063);
    new_tree_13005062.id = id_13005061;

  
}
function len_12525014(x_12525016) {
  var result_12525017 = 0;

    result_12525017 = (x_12525016.kids != null ? x_12525016.kids.length : 0);

  return result_12525017;

}
function HEX5BHEX5D_12525036(x_12525038, idx_12525039) {
  var result_12525040 = null;

    result_12525040 = x_12525038.kids[chckIndx(idx_12525039, 0, (x_12525038.kids != null ? x_12525038.kids.length : 0)+0-1)-0];

  return result_12525040;

}
function same_12990072(n_12990074, e_12990075, nesting_12990076) {
      var Tmp1;
      var Tmp2;

  var result_12990078 = false;

  BeforeRet: do {
    if (kxi_12727284[0].orphans.hasOwnProperty(n_12990074.id)) {
    result_12990078 = true;
    break BeforeRet;
    }
    
    if ((n_12990074.kind == 5)) {
    result_12990078 = same_12990072(n_12990074.expanded, e_12990075, addInt(nesting_12990076, 1));
    }
    else {
    if ((n_12990074.kind == 6)) {
    result_12990078 = true;
    }
    else {
      if ((n_12990074.kind == 3)) Tmp1 = true; else {        Tmp1 = (n_12990074.kind == 4);      }    if (Tmp1) {
    result_12990078 = true;
    }
    else {
    if ((to_tag_12440006[chckIndx(n_12990074.kind, 0, (to_tag_12440006 != null ? to_tag_12440006.length : 0)+0-1)-0] == e_12990075.nodeName)) {
    result_12990078 = true;
    if (!((n_12990074.kind == 0))) {
      if (!!((e_12990075.childNodes.length == len_12525014(n_12990074)))) Tmp2 = false; else {        Tmp2 = !((n_12990074.kind == 111));      }    if (Tmp2) {
    rawEcho(makeNimstrLit("expected "), cstrToNimstr((len_12525014(n_12990074))+""), makeNimstrLit(" real "), cstrToNimstr((e_12990075.childNodes.length)+""), makeNimstrLit(" "), cstrToNimstr(to_tag_12440006[chckIndx(n_12990074.kind, 0, (to_tag_12440006 != null ? to_tag_12440006.length : 0)+0-1)-0]), makeNimstrLit(" nesting "), cstrToNimstr((nesting_12990076)+""));
    result_12990078 = false;
    break BeforeRet;
    }
    
    L3: do {
      var i_13005024 = 0;
      var colontmp__15085396 = 0;
      colontmp__15085396 = len_12525014(n_12990074);
      var i_15085397 = 0;
      L4: do {
          L5: while (true) {
          if (!(i_15085397 < colontmp__15085396)) break L5;
            i_13005024 = i_15085397;
            if (!(same_12990072(HEX5BHEX5D_12525036(n_12990074, i_13005024), e_12990075.childNodes[i_13005024], addInt(nesting_12990076, 1)))) {
            result_12990078 = false;
            break BeforeRet;
            }
            
            i_15085397 = addInt(i_15085397, 1);
          }
      } while(false);
    } while(false);
    }
    
    }
    else {
    rawEcho(makeNimstrLit("VDOM: "), cstrToNimstr(to_tag_12440006[chckIndx(n_12990074.kind, 0, (to_tag_12440006 != null ? to_tag_12440006.length : 0)+0-1)-0]), makeNimstrLit(" DOM: "), cstrToNimstr(e_12990075.nodeName));
    }
    }}}
  } while (false);

  return result_12990078;

}
function eq_12395229(a_12395231, b_12395232) {
  var result_12395233 = false;

  BeforeRet: do {
    if ((a_12395231 == null)) {
    if ((b_12395232 == null)) {
    result_12395233 = true;
    break BeforeRet;
    }
    else {
      result_12395233 = false;
      break BeforeRet;
    }
    
    }
    else {
    if ((b_12395232 == null)) {
    result_12395233 = false;
    break BeforeRet;
    }
    }
    if (!((a_12395231.length == b_12395232.length))) {
    result_12395233 = false;
    break BeforeRet;
    }
    
    L1: do {
      var i_12400083 = 0;
      var colontmp__15085436 = 0;
      colontmp__15085436 = a_12395231.length;
      var i_15085437 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_15085437 < colontmp__15085436)) break L3;
            i_12400083 = i_15085437;
            if (!((a_12395231[i_12400083] == b_12395232[i_12400083]))) {
            result_12395233 = false;
            break BeforeRet;
            }
            
            i_15085437 = addInt(i_15085437, 1);
          }
      } while(false);
    } while(false);
    result_12395233 = true;
    break BeforeRet;
  } while (false);

  return result_12395233;

}
function same_attrs_12535879(a_12535881, b_12535882) {
  var result_12535883 = false;

  BeforeRet: do {
    if (((a_12535881.attrs != null ? a_12535881.attrs.length : 0) == (b_12535882.attrs != null ? b_12535882.attrs.length : 0))) {
    result_12535883 = true;
    L1: do {
      var i_12535906 = 0;
      var colontmp__15085440 = 0;
      colontmp__15085440 = (a_12535881.attrs != null ? a_12535881.attrs.length : 0);
      var i_15085441 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_15085441 < colontmp__15085440)) break L3;
            i_12535906 = i_15085441;
            if (!((a_12535881.attrs[chckIndx(i_12535906, 0, (a_12535881.attrs != null ? a_12535881.attrs.length : 0)+0-1)-0] == b_12535882.attrs[chckIndx(i_12535906, 0, (b_12535882.attrs != null ? b_12535882.attrs.length : 0)+0-1)-0]))) {
            result_12535883 = false;
            break BeforeRet;
            }
            
            i_15085441 = addInt(i_15085441, 1);
          }
      } while(false);
    } while(false);
    }
    
  } while (false);

  return result_12535883;

}
function eq_13005214(a_13005216, b_13005217, recursive_13005218) {
      var Tmp4;
      var Tmp5;

  var result_13005219 = 0;

  BeforeRet: do {
    if (!((a_13005216.kind == b_13005217.kind))) {
    result_13005219 = 1;
    break BeforeRet;
    }
    
    if (!((a_13005216.id == b_13005217.id))) {
    result_13005219 = 1;
    break BeforeRet;
    }
    
    result_13005219 = 3;
    if (!((a_13005216.index == b_13005217.index))) {
    result_13005219 = 1;
    break BeforeRet;
    }
    
    if ((a_13005216.kind == 0)) {
    if (!((a_13005216.text == b_13005217.text))) {
    result_13005219 = 1;
    break BeforeRet;
    }
    
    }
    else {
    if ((a_13005216.kind == 3)) {
    if (!((a_13005216.text == b_13005217.text))) {
    result_13005219 = 1;
    break BeforeRet;
    }
    
    if (!((len_12525014(a_13005216) == len_12525014(b_13005217)))) {
    result_13005219 = 1;
    break BeforeRet;
    }
    
    L1: do {
      var i_13035008 = 0;
      var colontmp__15085428 = 0;
      colontmp__15085428 = len_12525014(a_13005216);
      var i_15085429 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_15085429 < colontmp__15085428)) break L3;
            i_13035008 = i_15085429;
            if ((eq_13005214(HEX5BHEX5D_12525036(a_13005216, i_13035008), HEX5BHEX5D_12525036(b_13005217, i_13035008), recursive_13005218) == 1)) {
            result_13005219 = 1;
            break BeforeRet;
            }
            
            i_15085429 = addInt(i_15085429, 1);
          }
      } while(false);
    } while(false);
    }
    else {
    if ((a_13005216.kind == 4)) {
    if ((a_13005216.dom == b_13005217.dom)) {
    result_13005219 = 3;
    break BeforeRet;
    }
    else {
      result_13005219 = 1;
      break BeforeRet;
    }
    
    }
    else {
    if ((a_13005216.kind == 6)) {
    if (!((a_13005216.text == b_13005217.text))) {
    result_13005219 = 1;
    break BeforeRet;
    }
    
    }
    else {
    if ((b_13005217.kind == 5)) {
    if (!((a_13005216.text == b_13005217.text))) {
    result_13005219 = 1;
    break BeforeRet;
    }
    
    if (!((a_13005216.key == b_13005217.key))) {
    result_13005219 = 1;
    break BeforeRet;
    }
    
    result_13005219 = 0;
    break BeforeRet;
    }
    }}}}
      if (!((a_13005216.class == b_13005217.class))) Tmp5 = true; else {        Tmp5 = !(eq_12395229(a_13005216.style, b_13005217.style));      }      if (Tmp5) Tmp4 = true; else {        Tmp4 = !(same_attrs_12535879(a_13005216, b_13005217));      }    if (Tmp4) {
    result_13005219 = 2;
    break BeforeRet;
    }
    
    if (recursive_13005218) {
    if (!((len_12525014(a_13005216) == len_12525014(b_13005217)))) {
    result_13005219 = 1;
    break BeforeRet;
    }
    
    L6: do {
      var i_13060008 = 0;
      var colontmp__15085432 = 0;
      colontmp__15085432 = len_12525014(a_13005216);
      var i_15085433 = 0;
      L7: do {
          L8: while (true) {
          if (!(i_15085433 < colontmp__15085432)) break L8;
            i_13060008 = i_15085433;
            if (!((eq_13005214(HEX5BHEX5D_12525036(a_13005216, i_13060008), HEX5BHEX5D_12525036(b_13005217, i_13060008), true) == 3))) {
            result_13005219 = 1;
            break BeforeRet;
            }
            
            i_15085433 = addInt(i_15085433, 1);
          }
      } while(false);
    } while(false);
    }
    
    break BeforeRet;
  } while (false);

  return result_13005219;

}
function update_styles_13065034(new_node_13065036, old_node_13065037) {
    if (!((old_node_13065037.dom == null))) {
    if (!((new_node_13065036.style == null))) {
    apply_style_12430425(old_node_13065037.dom, new_node_13065036.style);
    }
    else {
      old_node_13065037.dom.style = {m_type: NTI10866289, background: null, backgroundAttachment: null, backgroundColor: null, backgroundImage: null, backgroundPosition: null, backgroundRepeat: null, backgroundSize: null, border: null, borderBottom: null, borderBottomColor: null, borderBottomStyle: null, borderBottomWidth: null, borderColor: null, borderLeft: null, borderLeftColor: null, borderLeftStyle: null, borderLeftWidth: null, borderRadius: null, borderRight: null, borderRightColor: null, borderRightStyle: null, borderRightWidth: null, borderStyle: null, borderTop: null, borderTopColor: null, borderTopStyle: null, borderTopWidth: null, borderWidth: null, bottom: null, boxSizing: null, boxShadow: null, captionSide: null, clear: null, clip: null, color: null, cursor: null, direction: null, display: null, emptyCells: null, cssFloat: null, font: null, fontFamily: null, fontSize: null, fontStretch: null, fontStyle: null, fontVariant: null, fontWeight: null, height: null, left: null, letterSpacing: null, lineHeight: null, listStyle: null, listStyleImage: null, listStylePosition: null, listStyleType: null, margin: null, marginBottom: null, marginLeft: null, marginRight: null, marginTop: null, maxHeight: null, maxWidth: null, minHeight: null, minWidth: null, opacity: null, outline: null, overflow: null, overflowX: null, overflowY: null, padding: null, paddingBottom: null, paddingLeft: null, paddingRight: null, paddingTop: null, pageBreakAfter: null, pageBreakBefore: null, pointerEvents: null, position: null, resize: null, right: null, scrollbar3dLightColor: null, scrollbarArrowColor: null, scrollbarBaseColor: null, scrollbarDarkshadowColor: null, scrollbarFaceColor: null, scrollbarHighlightColor: null, scrollbarShadowColor: null, scrollbarTrackColor: null, tableLayout: null, textAlign: null, textDecoration: null, textIndent: null, textTransform: null, transform: null, top: null, verticalAlign: null, visibility: null, width: null, wordSpacing: null, zIndex: 0};
    }
    
    old_node_13065037.dom.className = new_node_13065036.class;
    }
    
    old_node_13065037.style = new_node_13065036.style;
    old_node_13065037.class = new_node_13065036.class;

  
}
function take_over_attr_12475212(new_node_12475214, old_node_12475215) {
    old_node_12475215.attrs = new_node_12475214.attrs;

  
}
function update_attributes_13075052(new_node_13075054, old_node_13075055) {
    if (!((old_node_13075055.dom == null))) {
    L1: do {
      var k_13080009 = null;
      var __13080010 = null;
      L2: do {
        var i_15085446 = 0;
        var colontmp__15085447 = 0;
        colontmp__15085447 = subInt((old_node_13075055.attrs != null ? old_node_13075055.attrs.length : 0), 2);
        var res_15085448 = 0;
        L3: do {
            L4: while (true) {
            if (!(res_15085448 <= colontmp__15085447)) break L4;
              i_15085446 = res_15085448;
              k_13080009 = old_node_13075055.attrs[chckIndx(i_15085446, 0, (old_node_13075055.attrs != null ? old_node_13075055.attrs.length : 0)+0-1)-0];
              __13080010 = old_node_13075055.attrs[chckIndx(addInt(i_15085446, 1), 0, (old_node_13075055.attrs != null ? old_node_13075055.attrs.length : 0)+0-1)-0];
              old_node_13075055.dom.removeAttribute(k_13080009);
              res_15085448 = addInt(res_15085448, 2);
            }
        } while(false);
      } while(false);
    } while(false);
    L5: do {
      var k_13080011 = null;
      var v_13080012 = null;
      L6: do {
        var i_15085454 = 0;
        var colontmp__15085455 = 0;
        colontmp__15085455 = subInt((new_node_13075054.attrs != null ? new_node_13075054.attrs.length : 0), 2);
        var res_15085456 = 0;
        L7: do {
            L8: while (true) {
            if (!(res_15085456 <= colontmp__15085455)) break L8;
              i_15085454 = res_15085456;
              k_13080011 = new_node_13075054.attrs[chckIndx(i_15085454, 0, (new_node_13075054.attrs != null ? new_node_13075054.attrs.length : 0)+0-1)-0];
              v_13080012 = new_node_13075054.attrs[chckIndx(addInt(i_15085454, 1), 0, (new_node_13075054.attrs != null ? new_node_13075054.attrs.length : 0)+0-1)-0];
              if (!((v_13080012 == null))) {
              old_node_13075055.dom.setAttribute(k_13080011, v_13080012);
              }
              
              res_15085456 = addInt(res_15085456, 2);
            }
        } while(false);
      } while(false);
    } while(false);
    }
    
    take_over_attr_12475212(new_node_13075054, old_node_13075055);

  
}
function remove_all_event_handlers_12727436(d_12727438) {
    if (!((d_12727438.karaxEvents == null))) {
    L1: do {
      var i_12730041 = 0;
      var colontmp__15085461 = 0;
      colontmp__15085461 = d_12727438.karaxEvents.length;
      var i_15085462 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_15085462 < colontmp__15085461)) break L3;
            i_12730041 = i_15085462;
            d_12727438.removeEventListener(d_12727438.karaxEvents[i_12730041]["Field0"], d_12727438.karaxEvents[i_12730041]["Field1"]);
            i_15085462 = addInt(i_15085462, 1);
          }
      } while(false);
    } while(false);
    }
    

  
}
function merge_events_13085014(new_node_13085016, old_node_13085017, kxi_13085018) {
    var d_13085019 = old_node_13085017.dom;
    if (!((d_13085019 == null))) {
    remove_all_event_handlers_12727436(d_13085019);
    }
    
    old_node_13085017.events = new_node_13085016.events;
    apply_events_12840073(old_node_13085017);

  
}
function add_patch_13090414(kxi_13090416, ka_13090417, parenta_13090418, currenta_13090419, na_13090420, old_node_13090421) {
    var l_13090422 = kxi_13090416.patchLen;
    if (((kxi_13090416.patches != null ? kxi_13090416.patches.length : 0) <= l_13090422)) {
    if (kxi_13090416.patches != null) { kxi_13090416.patches.push({k: ka_13090417, parent: parenta_13090418, current: currenta_13090419, newNode: na_13090420, oldNode: old_node_13090421}); } else { kxi_13090416.patches = [{k: ka_13090417, parent: parenta_13090418, current: currenta_13090419, newNode: na_13090420, oldNode: old_node_13090421}]; };
    }
    else {
      kxi_13090416.patches[chckIndx(l_13090422, 0, (kxi_13090416.patches != null ? kxi_13090416.patches.length : 0)+0-1)-0].k = ka_13090417;
      kxi_13090416.patches[chckIndx(l_13090422, 0, (kxi_13090416.patches != null ? kxi_13090416.patches.length : 0)+0-1)-0].parent = parenta_13090418;
      kxi_13090416.patches[chckIndx(l_13090422, 0, (kxi_13090416.patches != null ? kxi_13090416.patches.length : 0)+0-1)-0].current = currenta_13090419;
      kxi_13090416.patches[chckIndx(l_13090422, 0, (kxi_13090416.patches != null ? kxi_13090416.patches.length : 0)+0-1)-0].newNode = na_13090420;
      kxi_13090416.patches[chckIndx(l_13090422, 0, (kxi_13090416.patches != null ? kxi_13090416.patches.length : 0)+0-1)-0].oldNode = old_node_13090421;
    }
    
    kxi_13090416.patchLen = addInt(kxi_13090416.patchLen, 1);

  
}
function diff_13140215(new_node_13140217, old_node_13140218, parent_13140219, current_13140220, kxi_13140221) {
        var Tmp1;
            var Tmp6;

  BeforeRet: do {
    var result_13140401 = eq_13005214(new_node_13140217, old_node_13140218, false);
    switch (result_13140401) {
    case 0:
      if (kxi_13140221.components != null) { kxi_13140221.components.push({oldNode: old_node_13140218, newNode: new_node_13140217, parent: parent_13140219, current: current_13140220}); } else { kxi_13140221.components = [{oldNode: old_node_13140218, newNode: new_node_13140217, parent: parent_13140219, current: current_13140220}]; };
      break;
    case 3:
    case 2:
      new_node_13140217.dom = old_node_13140218.dom;
      if ((result_13140401 == 2)) {
      update_styles_13065034(new_node_13140217, old_node_13140218);
      update_attributes_13075052(new_node_13140217, old_node_13140218);
      if ((old_node_13140218.kind == 0)) {
      old_node_13140218.text = new_node_13140217.text;
      old_node_13140218.dom.nodeValue = new_node_13140217.text;
      }
      
      }
      
        if (!(((new_node_13140217.events != null ? new_node_13140217.events.length : 0) == 0))) Tmp1 = true; else {          Tmp1 = !(((old_node_13140218.events != null ? old_node_13140218.events.length : 0) == 0));        }      if (Tmp1) {
      merge_events_13085014(new_node_13140217, old_node_13140218, kxi_13140221);
      }
      
      var new_length_13150006 = len_12525014(new_node_13140217);
      var old_length_13150007 = len_12525014(old_node_13140218);
      if (((new_length_13150006 == 0) && (old_length_13150007 == 0))) {
      break BeforeRet;
      }
      
      var min_length_13150008 = nimMin(new_length_13150006, old_length_13150007);
      if (!((old_node_13140218.kind == new_node_13140217.kind))) {
      failed_assert_impl_102680(makeNimstrLit("karax.nim(487, 12) `oldNode.kind == newNode.kind` "));
      }
      
      var common_prefix_13160202 = 0;
      L2: do {
          L3: while (true) {
          if (!(common_prefix_13160202 < min_length_13150008)) break L3;
            if ((eq_13005214(HEX5BHEX5D_12525036(new_node_13140217, common_prefix_13160202), HEX5BHEX5D_12525036(old_node_13140218, common_prefix_13160202), true) == 3)) {
            add_patch_13090414(kxi_13140221, 5, null, null, HEX5BHEX5D_12525036(new_node_13140217, common_prefix_13160202), HEX5BHEX5D_12525036(old_node_13140218, common_prefix_13160202));
            common_prefix_13160202 = addInt(common_prefix_13160202, 1);
            }
            else {
              break L2;
            }
            
          }
      } while(false);
      var old_pos_13160214 = subInt(old_length_13150007, 1);
      var new_pos_13160215 = subInt(new_length_13150006, 1);
      L4: do {
          L5: while (true) {
            if (!(common_prefix_13160202 <= old_pos_13160214)) Tmp6 = false; else {              Tmp6 = (common_prefix_13160202 <= new_pos_13160215);            }          if (!Tmp6) break L5;
            if ((eq_13005214(HEX5BHEX5D_12525036(new_node_13140217, new_pos_13160215), HEX5BHEX5D_12525036(old_node_13140218, old_pos_13160214), true) == 3)) {
            add_patch_13090414(kxi_13140221, 5, null, null, HEX5BHEX5D_12525036(new_node_13140217, new_pos_13160215), HEX5BHEX5D_12525036(old_node_13140218, old_pos_13160214));
            old_pos_13160214 = subInt(old_pos_13160214, 1);
            new_pos_13160215 = subInt(new_pos_13160215, 1);
            }
            else {
              break L4;
            }
            
          }
      } while(false);
      var pos_13170018 = addInt(nimMin(old_pos_13160214, new_pos_13160215), 1);
      L7: do {
        var i_13170024 = 0;
        var colontmp__15085403 = 0;
        colontmp__15085403 = subInt(pos_13170018, 1);
        var res_15085404 = common_prefix_13160202;
        L8: do {
            L9: while (true) {
            if (!(res_15085404 <= colontmp__15085403)) break L9;
              i_13170024 = res_15085404;
              diff_13140215(HEX5BHEX5D_12525036(new_node_13140217, i_13170024), HEX5BHEX5D_12525036(old_node_13140218, i_13170024), current_13140220, current_13140220.childNodes[chckIndx(i_13170024, 0, (current_13140220.childNodes != null ? current_13140220.childNodes.length : 0)+0-1)-0], kxi_13140221);
              res_15085404 = addInt(res_15085404, 1);
            }
        } while(false);
      } while(false);
      if ((addInt(old_pos_13160214, 1) == old_length_13150007)) {
      L10: do {
        var i_13170030 = 0;
        var res_15085410 = pos_13170018;
        L11: do {
            L12: while (true) {
            if (!(res_15085410 <= new_pos_13160215)) break L12;
              i_13170030 = res_15085410;
              add_patch_13090414(kxi_13140221, 2, current_13140220, null, HEX5BHEX5D_12525036(new_node_13140217, i_13170030), null);
              res_15085410 = addInt(res_15085410, 1);
            }
        } while(false);
      } while(false);
      }
      else {
        var before_13170031 = current_13140220.childNodes[chckIndx(addInt(old_pos_13160214, 1), 0, (current_13140220.childNodes != null ? current_13140220.childNodes.length : 0)+0-1)-0];
        L13: do {
          var i_13170037 = 0;
          var res_15085416 = pos_13170018;
          L14: do {
              L15: while (true) {
              if (!(res_15085416 <= new_pos_13160215)) break L15;
                i_13170037 = res_15085416;
                add_patch_13090414(kxi_13140221, 3, current_13140220, before_13170031, HEX5BHEX5D_12525036(new_node_13140217, i_13170037), null);
                res_15085416 = addInt(res_15085416, 1);
              }
          } while(false);
        } while(false);
      }
      
      L16: do {
        var i_13170043 = 0;
        var res_15085422 = pos_13170018;
        L17: do {
            L18: while (true) {
            if (!(res_15085422 <= old_pos_13160214)) break L18;
              i_13170043 = res_15085422;
              add_patch_13090414(kxi_12727284[0], 4, null, null, null, HEX5BHEX5D_12525036(old_node_13140218, i_13170043));
              add_patch_13090414(kxi_13140221, 1, current_13140220, current_13140220.childNodes[chckIndx(i_13170043, 0, (current_13140220.childNodes != null ? current_13140220.childNodes.length : 0)+0-1)-0], null, null);
              res_15085422 = addInt(res_15085422, 1);
            }
        } while(false);
      } while(false);
      break;
    case 1:
      add_patch_13090414(kxi_12727284[0], 4, null, null, null, old_node_13140218);
      add_patch_13090414(kxi_13140221, 0, parent_13140219, current_13140220, new_node_13140217, null);
      break;
    case 4:
      if (true) {
      failed_assert_impl_102680(makeNimstrLit("karax.nim(529, 26) `false` eq returned usenewNode"));
      }
      
      break;
    }
  } while (false);

  
}
function apply_components_13190429(kxi_13190431) {
            var Tmp3;

    var i_13190433 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_13190433 < (kxi_13190431.components != null ? kxi_13190431.components.length : 0))) break L2;
          var x_13190439 = kxi_13190431.components[chckIndx(i_13190433, 0, (kxi_13190431.components != null ? kxi_13190431.components.length : 0)+0-1)-0].oldNode;
          var new_node_13190440 = kxi_13190431.components[chckIndx(i_13190433, 0, (kxi_13190431.components != null ? kxi_13190431.components.length : 0)+0-1)-0].newNode;
            if (!!((x_13190439.changedImpl == null))) Tmp3 = false; else {              Tmp3 = x_13190439.changedImpl(x_13190439, new_node_13190440);            }          if (Tmp3) {
          var current_13195201 = kxi_13190431.components[chckIndx(i_13190433, 0, (kxi_13190431.components != null ? kxi_13190431.components.length : 0)+0-1)-0].current;
          var parent_13195202 = kxi_13190431.components[chckIndx(i_13190433, 0, (kxi_13190431.components != null ? kxi_13190431.components.length : 0)+0-1)-0].parent;
          x_13190439.updatedImpl(x_13190439, new_node_13190440);
          var old_expanded_13195203 = x_13190439.expanded;
          x_13190439.expanded = x_13190439.renderImpl(x_13190439);
          x_13190439.renderedVersion = x_13190439.version;
          if ((old_expanded_13195203 == null)) {
          add_patch_13090414(kxi_12727284[0], 4, null, null, null, x_13190439);
          add_patch_13090414(kxi_13190431, 0, parent_13195202, current_13195201, x_13190439.expanded, null);
          }
          else {
            diff_13140215(x_13190439.expanded, old_expanded_13195203, parent_13195202, current_13195201, kxi_13190431);
          }
          
          }
          
          i_13190433 = addInt(i_13190433, 1);
        }
    } while(false);
    if (kxi_13190431.components === null) kxi_13190431.components = [];
               if (kxi_13190431.components.length < 0) { for (var i=kxi_13190431.components.length;i<0;++i) kxi_13190431.components.push({oldNode: null, newNode: null, parent: null, current: null}); }
               else { kxi_13190431.components.length = 0; };

  
}
function move_dom_13100047(dest_13100049, src_13100050) {
    dest_13100049.dom = src_13100050.dom;
    src_13100050.dom = null;
    if (!((dest_13100049.id == null))) {
    kxi_12727284[0].byId[dest_13100049.id] = dest_13100049;
    }
    
    if (!((len_12525014(dest_13100049) == len_12525014(src_13100050)))) {
    failed_assert_impl_102680(makeNimstrLit("karax.nim(390, 10) `dest.len == src.len` "));
    }
    
    L1: do {
      var i_13115208 = 0;
      var colontmp__15085473 = 0;
      colontmp__15085473 = len_12525014(dest_13100049);
      var i_15085474 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_15085474 < colontmp__15085473)) break L3;
            i_13115208 = i_15085474;
            move_dom_13100047(HEX5BHEX5D_12525036(dest_13100049, i_13115208), HEX5BHEX5D_12525036(src_13100050, i_13115208));
            i_15085474 = addInt(i_15085474, 1);
          }
      } while(false);
    } while(false);

  
}
function HEX5BHEX5DHEX3D_12525054(x_12525056, idx_12525057, y_12525058) {
    x_12525056.kids[chckIndx(idx_12525057, 0, (x_12525056.kids != null ? x_12525056.kids.length : 0)+0-1)-0] = y_12525058;

  
}
function apply_patch_13115222(kxi_13115224) {
    L1: do {
      var i_13115232 = 0;
      var i_15085467 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_15085467 < kxi_13115224.patchLen)) break L3;
            i_13115232 = i_15085467;
            var p_13115233 = nimCopy(null, kxi_13115224.patches[chckIndx(i_13115232, 0, (kxi_13115224.patches != null ? kxi_13115224.patches.length : 0)+0-1)-0], NTI12727209);
            switch (p_13115233.k) {
            case 0:
              var nn_13115234 = to_dom_12840154(p_13115233.newNode, true, kxi_13115224);
              if ((p_13115233.parent == null)) {
              replace_by_id_13005059(kxi_13115224.rootId, nn_13115234);
              }
              else {
                if ((p_13115233.current.parentNode == p_13115233.parent)) {
                p_13115233.parent.replaceChild(nn_13115234, p_13115233.current);
                }
                else {
                p_13115233.parent.appendChild(nn_13115234);
                }
                
              }
              
              break;
            case 5:
              move_dom_13100047(p_13115233.newNode, p_13115233.oldNode);
              break;
            case 1:
              p_13115233.parent.removeChild(p_13115233.current);
              break;
            case 2:
              var nn_13115250 = to_dom_12840154(p_13115233.newNode, true, kxi_13115224);
              p_13115233.parent.appendChild(nn_13115250);
              break;
            case 3:
              var nn_13115251 = to_dom_12840154(p_13115233.newNode, true, kxi_13115224);
              p_13115233.parent.insertBefore(nn_13115251, p_13115233.current);
              break;
            case 4:
              var n_13115252 = p_13115233.oldNode;
              if (!((n_13115252.id == null))) {
              delete kxi_13115224.byId[n_13115252.id];
              }
              
              if ((n_13115252.kind == 5)) {
              var x_13120018 = n_13115252;
              if (!((x_13120018.onDetachImpl == null))) {
              x_13120018.onDetachImpl(x_13120018);
              }
              
              }
              
              if (!(kxi_13115224.surpressRedraws)) {
              n_13115252.dom = null;
              }
              
              break;
            }
            i_15085467 = addInt(i_15085467, 1);
          }
      } while(false);
    } while(false);
    kxi_13115224.patchLen = 0;
    L4: do {
      var i_13125013 = 0;
      var i_15085470 = 0;
      L5: do {
          L6: while (true) {
          if (!(i_15085470 < kxi_13115224.patchLenV)) break L6;
            i_13125013 = i_15085470;
            var p_13125014 = nimCopy(null, kxi_13115224.patchesV[chckIndx(i_13125013, 0, (kxi_13115224.patchesV != null ? kxi_13115224.patchesV.length : 0)+0-1)-0], NTI12727211);
            HEX5BHEX5DHEX3D_12525054(p_13125014.parent, p_13125014.pos, p_13125014.newChild);
            if (!(!((p_13125014.newChild.dom == null)))) {
            failed_assert_impl_102680(makeNimstrLit("karax.nim(429, 12) `p.newChild.dom != nil` "));
            }
            
            i_15085470 = addInt(i_15085470, 1);
          }
      } while(false);
    } while(false);
    kxi_13115224.patchLenV = 0;

  
}
function dodraw_13255262(kxi_13255264) {
  BeforeRet: do {
    if ((kxi_13255264.renderer == null)) {
    break BeforeRet;
    }
    
    var rdata_13255269 = {hashPart: window.location.hash};
    var newtree_13255270 = kxi_13255264.renderer(rdata_13255269);
    kxi_13255264.runCount = addInt(kxi_13255264.runCount, 1);
    newtree_13255270.id = kxi_13255264.rootId;
    kxi_13255264.toFocus = null;
    if ((kxi_13255264.currentTree == null)) {
    var asdom_13255285 = to_dom_12840154(newtree_13255270, true, kxi_13255264);
    replace_by_id_13005059(kxi_13255264.rootId, asdom_13255285);
    }
    else {
      if (!(same_12990072(kxi_13255264.currentTree, document.getElementById(kxi_13255264.rootId), 0))) {
      failed_assert_impl_102680(makeNimstrLit("karax.nim(644, 14) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
      }
      
      var olddom_13265201 = document.getElementById(kxi_13255264.rootId);
      diff_13140215(newtree_13255270, kxi_13255264.currentTree, null, olddom_13265201, kxi_13255264);
    }
    
    apply_components_13190429(kxi_13255264);
    apply_patch_13115222(kxi_13255264);
    kxi_13255264.currentTree = newtree_13255270;
    if (!(same_12990072(kxi_13255264.currentTree, document.getElementById(kxi_13255264.rootId), 0))) {
    failed_assert_impl_102680(makeNimstrLit("karax.nim(657, 12) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
    }
    
    if (!((kxi_13255264.postRenderCallback == null))) {
    kxi_13255264.postRenderCallback(rdata_13255269);
    }
    
    if (!((kxi_13255264.toFocus == null))) {
    kxi_13255264.toFocus.focus();
    }
    
    kxi_13255264.renderId = 0;
  } while (false);

  
}
function init_13280646(ev_13280648) {
    function HEX3Aanonymous_13280649() {
        dodraw_13255262(kxi_12727284[0]);

      
    }

    kxi_12727284[0].renderId = window.requestAnimationFrame(HEX3Aanonymous_13280649);

  
}
function redraw_13280414(kxi_13280416) {
    function HEX3Aanonymous_13280601() {
        dodraw_13255262(kxi_13280416);

      
    }

    if ((kxi_13280416.renderId == 0)) {
    kxi_13280416.renderId = window.requestAnimationFrame(HEX3Aanonymous_13280601);
    }
    

  
}
function set_renderer_13280678(renderer_13280683, root_13280684, client_post_render_callback_13280688) {
    function HEX3Aanonymous_13285135() {
        redraw_13280414(kxi_12727284[0]);

      
    }

  var result_13280689 = null;

    if ((document.getElementById(root_13280684) == null)) {
    var msg_13280695 = (("Could not find a <div> with id=" + root_13280684) + ". Karax needs it as its rendering target.");
    raiseException({message: cstrToNimstr(msg_13280695), parent: null, m_type: NTI6217, name: null, trace: null, up: null}, "Exception");
    }
    
    result_13280689 = {rootId: root_13280684, renderer: renderer_13280683, postRenderCallback: client_post_render_callback_13280688, patches: new_seq_13285012(60), patchesV: new_seq_13285064(30), components: [], surpressRedraws: false, byId: {}, orphans: {}, currentTree: null, toFocus: null, toFocusV: null, renderId: 0, patchLen: 0, patchLenV: 0, runCount: 0};
    kxi_12727284[0] = result_13280689;
    window.onload = init_13280646;
    window.onhashchange = HEX3Aanonymous_13285135;

  return result_13280689;

}
function set_renderer_13285238(renderer_13285242, root_13285243, client_post_render_callback_13285246) {
    function wrap_renderer_13285248(data_13285250) {
      var result_13285251 = null;

        result_13285251 = renderer_13285242();

      return result_13285251;

    }
    function wrap_post_render_13285265(data_13285267) {
        if (!((client_post_render_callback_13285246 == null))) {
        client_post_render_callback_13285246();
        }
        

      
    }

  var result_13285247 = null;

    result_13285247 = set_renderer_13280678(wrap_renderer_13285248, root_13285243, wrap_post_render_13285265);

  return result_13285247;

}
function new_vnode_12535428(kind_12535430) {
  var result_12535431 = null;

    result_12535431 = {kind: kind_12535430, index: -1, m_type: NTI12440031, id: null, class: null, text: null, kids: null, attrs: null, events: null, style: null, dom: null};

  return result_12535431;

}
function add_12525072(parent_12525074, kid_12525075) {
    if (parent_12525074.kids != null) { parent_12525074.kids.push(kid_12525075); } else { parent_12525074.kids = [kid_12525075]; };

  
}
function tree_12535445(kind_12535447, kids_12535449) {
  var result_12535450 = null;

    result_12535450 = new_vnode_12535428(kind_12535447);
    L1: do {
      var k_12535481 = null;
      var i_15085552 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_15085552 < (kids_12535449 != null ? kids_12535449.length : 0))) break L3;
            k_12535481 = kids_12535449[chckIndx(i_15085552, 0, (kids_12535449 != null ? kids_12535449.length : 0)+0-1)-0];
            add_12525072(result_12535450, k_12535481);
            i_15085552 = addInt(i_15085552, 1);
          }
      } while(false);
    } while(false);

  return result_12535450;

}
function add_event_listener_12540014(n_12540016, event_12540017, handler_12540018) {
    if (n_12540016.events != null) { n_12540016.events.push({Field0: event_12540017, Field1: handler_12540018, Field2: null}); } else { n_12540016.events = [{Field0: event_12540017, Field1: handler_12540018, Field2: null}]; };

  
}
function add_event_handler_13290118(n_13290120, k_13290121, action_13290122, kxi_13290123) {
    function wrapper_13290124(ev_13290126, n_13290127) {
        action_13290122(ev_13290126, n_13290127);
        if (!(kxi_13290123.surpressRedraws)) {
        redraw_13280414(kxi_13290123);
        }
        

      
    }

    add_event_listener_12540014(n_13290120, k_13290121, wrapper_13290124);

  
}
function chckd_check_14640267(ev_14640270, n_14640271) {
    L1: do {
      var inp_chck_14650214 = null;
      var colontmp__15085556 = null;
      colontmp__15085556 = document.querySelectorAll(".show-sector");
      var i_15085558 = 0;
      var l_15085559 = (colontmp__15085556 != null ? colontmp__15085556.length : 0);
      L2: do {
          L3: while (true) {
          if (!(i_15085558 < l_15085559)) break L3;
            inp_chck_14650214 = colontmp__15085556[chckIndx(i_15085558, 0, (colontmp__15085556 != null ? colontmp__15085556.length : 0)+0-1)-0];
            if ((inp_chck_14650214.getAttribute("checkd") == "true")) {
            inp_chck_14650214.setAttribute("checked", "true");
            }
            else {
            inp_chck_14650214.removeAttribute("checked");
            }
            
            i_15085558 = addInt(i_15085558, 1);
            if (!(((colontmp__15085556 != null ? colontmp__15085556.length : 0) == l_15085559))) {
            failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);

  
}
function len_14120198(t_14120203) {
  var result_14120204 = 0;

    result_14120204 = t_14120203.counter;

  return result_14120204;

}
function text_12535548(s_12535550) {
  var result_12535551 = null;

    result_12535551 = {kind: 0, text: toJSStr(s_12535550), index: -1, m_type: NTI12440031, id: null, class: null, kids: null, attrs: null, events: null, style: null, dom: null};

  return result_12535551;

}
function init_ordered_table_14526445(initial_size_14526449) {
  var result_14526451 = {data: null, counter: 0, first: 0, last: 0};

    if (!(is_power_of_two_8715029(initial_size_14526449))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(initialSize)` "));
    }
    
    result_14526451.counter = 0;
    result_14526451.data = new Array(chckRange(initial_size_14526449, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_14526449, 0, 2147483647);++i) {result_14526451.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    result_14526451.first = -1;
    result_14526451.last = -1;

  return result_14526451;

}
function raw_get_14570621(t_14570626, key_14570627, hc_14570628, hc_14570628_Idx) {
            var Tmp3;

  var result_14570629 = 0;

  BeforeRet: do {
    hc_14570628[hc_14570628_Idx] = hash_10590214(key_14570627);
    if ((hc_14570628[hc_14570628_Idx] == 0)) {
    hc_14570628[hc_14570628_Idx] = 314159265;
    }
    
    if (((t_14570626.data != null ? t_14570626.data.length : 0) == 0)) {
    result_14570629 = -1;
    break BeforeRet;
    }
    
    var h_14580138 = (hc_14570628[hc_14570628_Idx] & (t_14570626.data != null ? (t_14570626.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_10612018(t_14570626.data[chckIndx(h_14580138, 0, (t_14570626.data != null ? t_14570626.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_14570626.data[chckIndx(h_14580138, 0, (t_14570626.data != null ? t_14570626.data.length : 0)+0-1)-0].Field0 == hc_14570628[hc_14570628_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_14570626.data[chckIndx(h_14580138, 0, (t_14570626.data != null ? t_14570626.data.length : 0)+0-1)-0].Field2, key_14570627);            }          if (Tmp3) {
          result_14570629 = h_14580138;
          break BeforeRet;
          }
          
          h_14580138 = next_try_10615014(h_14580138, (t_14570626.data != null ? (t_14570626.data.length-1) : -1));
        }
    } while(false);
    result_14570629 = subInt(-1, h_14580138);
  } while (false);

  return result_14570629;

}
function must_rehash_14605601(t_14605604) {
  var result_14605605 = false;

    if (!((t_14605604.counter < (t_14605604.data != null ? t_14605604.data.length : 0)))) {
    failed_assert_impl_102680(makeNimstrLit("hashcommon.nim(33, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_14605605 = ((mulInt((t_14605604.data != null ? t_14605604.data.length : 0), 2) < mulInt(t_14605604.counter, 3)) || (subInt((t_14605604.data != null ? t_14605604.data.length : 0), t_14605604.counter) < 4));

  return result_14605605;

}
function raw_insert_14631359(t_14631365, data_14631368, data_14631368_Idx, key_14631369, val_14631370, hc_14631371, h_14631372) {
    data_14631368[data_14631368_Idx][chckIndx(h_14631372, 0, (data_14631368[data_14631368_Idx] != null ? data_14631368[data_14631368_Idx].length : 0)+0-1)-0].Field2 = nimCopy(null, key_14631369, NTI112);
    data_14631368[data_14631368_Idx][chckIndx(h_14631372, 0, (data_14631368[data_14631368_Idx] != null ? data_14631368[data_14631368_Idx].length : 0)+0-1)-0].Field3 = val_14631370;
    data_14631368[data_14631368_Idx][chckIndx(h_14631372, 0, (data_14631368[data_14631368_Idx] != null ? data_14631368[data_14631368_Idx].length : 0)+0-1)-0].Field0 = hc_14631371;
    data_14631368[data_14631368_Idx][chckIndx(h_14631372, 0, (data_14631368[data_14631368_Idx] != null ? data_14631368[data_14631368_Idx].length : 0)+0-1)-0].Field1 = -1;
    if ((t_14631365.first < 0)) {
    t_14631365.first = h_14631372;
    }
    
    if ((0 <= t_14631365.last)) {
    data_14631368[data_14631368_Idx][chckIndx(t_14631365.last, 0, (data_14631368[data_14631368_Idx] != null ? data_14631368[data_14631368_Idx].length : 0)+0-1)-0].Field1 = h_14631372;
    }
    
    t_14631365.last = h_14631372;

  
}
function enlarge_14630180(t_14630186) {
          var Tmp6;
          var Tmp7;

    var n_14630194 = null;
    n_14630194 = new Array(chckRange(mulInt((t_14630186.data != null ? t_14630186.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_14630186.data != null ? t_14630186.data.length : 0), 2), 0, 2147483647);++i) {n_14630194[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    var h_14630333 = t_14630186.first;
    t_14630186.first = -1;
    t_14630186.last = -1;
    var Tmp1 = t_14630186.data; t_14630186.data = n_14630194; n_14630194 = Tmp1;    L2: do {
        L3: while (true) {
        if (!(0 <= h_14630333)) break L3;
          var nxt_14630496 = n_14630194[chckIndx(h_14630333, 0, (n_14630194 != null ? n_14630194.length : 0)+0-1)-0].Field1;
          var eh_14630652 = n_14630194[chckIndx(h_14630333, 0, (n_14630194 != null ? n_14630194.length : 0)+0-1)-0].Field0;
          if (is_filled_10612018(eh_14630652)) {
          var j_14630659 = (eh_14630652 & (t_14630186.data != null ? (t_14630186.data.length-1) : -1));
          L4: do {
              L5: while (true) {
              if (!is_filled_10612018(t_14630186.data[chckIndx(j_14630659, 0, (t_14630186.data != null ? t_14630186.data.length : 0)+0-1)-0].Field0)) break L5;
                j_14630659 = next_try_10615014(j_14630659, (t_14630186.data != null ? (t_14630186.data.length-1) : -1));
              }
          } while(false);
          Tmp6 = n_14630194[chckIndx(h_14630333, 0, (n_14630194 != null ? n_14630194.length : 0)+0-1)-0].Field2;
          n_14630194[chckIndx(h_14630333, 0, (n_14630194 != null ? n_14630194.length : 0)+0-1)-0].Field2 = genericReset(n_14630194[chckIndx(h_14630333, 0, (n_14630194 != null ? n_14630194.length : 0)+0-1)-0].Field2, NTI112);
          Tmp7 = n_14630194[chckIndx(h_14630333, 0, (n_14630194 != null ? n_14630194.length : 0)+0-1)-0].Field3;
          n_14630194[chckIndx(h_14630333, 0, (n_14630194 != null ? n_14630194.length : 0)+0-1)-0].Field3 = genericReset(n_14630194[chckIndx(h_14630333, 0, (n_14630194 != null ? n_14630194.length : 0)+0-1)-0].Field3, NTI13701026);
          raw_insert_14631359(t_14630186, t_14630186, "data", Tmp6, Tmp7, n_14630194[chckIndx(h_14630333, 0, (n_14630194 != null ? n_14630194.length : 0)+0-1)-0].Field0, j_14630659);
          }
          
          h_14630333 = nxt_14630496;
        }
    } while(false);

  
}
function raw_get_known_hc_14632194(t_14632199, key_14632200, hc_14632201) {
  var result_14632202 = 0;

  BeforeRet: do {
    if (((t_14632199.data != null ? t_14632199.data.length : 0) == 0)) {
    result_14632202 = -1;
    break BeforeRet;
    }
    
    var h_14635138 = (hc_14632201 & (t_14632199.data != null ? (t_14632199.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_10612018(t_14632199.data[chckIndx(h_14635138, 0, (t_14632199.data != null ? t_14632199.data.length : 0)+0-1)-0].Field0)) break L2;
          if (((t_14632199.data[chckIndx(h_14635138, 0, (t_14632199.data != null ? t_14632199.data.length : 0)+0-1)-0].Field0 == hc_14632201) && eqStrings(t_14632199.data[chckIndx(h_14635138, 0, (t_14632199.data != null ? t_14632199.data.length : 0)+0-1)-0].Field2, key_14632200))) {
          result_14632202 = h_14635138;
          break BeforeRet;
          }
          
          h_14635138 = next_try_10615014(h_14635138, (t_14632199.data != null ? (t_14632199.data.length-1) : -1));
        }
    } while(false);
    result_14632202 = subInt(-1, h_14635138);
  } while (false);

  return result_14632202;

}
function HEX5BHEX5DHEX3D_14545730(t_14545736, key_14545737, val_14545738) {
    if (((t_14545736.data != null ? t_14545736.data.length : 0) == 0)) {
    if (!(is_power_of_two_8715029(64))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    t_14545736.counter = 0;
    t_14545736.data = new Array(64); for (var i=0;i<64;++i) {t_14545736.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    t_14545736.first = -1;
    t_14545736.last = -1;
    }
    
    var hc_14570601 = [0];
    var index_14580626 = raw_get_14570621(t_14545736, key_14545737, hc_14570601, 0);
    if ((0 <= index_14580626)) {
    t_14545736.data[chckIndx(index_14580626, 0, (t_14545736.data != null ? t_14545736.data.length : 0)+0-1)-0].Field3 = val_14545738;
    }
    else {
      if (((t_14545736.data != null ? t_14545736.data.length : 0) == 0)) {
      if (!(is_power_of_two_8715029(64))) {
      failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
      }
      
      t_14545736.counter = 0;
      t_14545736.data = new Array(64); for (var i=0;i<64;++i) {t_14545736.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}      t_14545736.first = -1;
      t_14545736.last = -1;
      }
      
      if (must_rehash_14605601(t_14545736)) {
      enlarge_14630180(t_14545736);
      index_14580626 = raw_get_known_hc_14632194(t_14545736, key_14545737, hc_14570601[0]);
      }
      
      index_14580626 = subInt(-1, index_14580626);
      raw_insert_14631359(t_14545736, t_14545736, "data", key_14545737, val_14545738, hc_14570601[0], index_14580626);
      t_14545736.counter = addInt(t_14545736.counter, 1);
    }
    

  
}
function nsuIntToStr(x_9120392, minchars_9120393) {
  var result_9120394 = null;

    result_9120394 = nimCopy(null, cstrToNimstr((absInt(x_9120392))+""), NTI112);
    L1: do {
      var i_9120403 = 0;
      var colontmp__15085584 = 0;
      colontmp__15085584 = subInt(minchars_9120393, (result_9120394 != null ? result_9120394.length : 0));
      var res_15085585 = 1;
      L2: do {
          L3: while (true) {
          if (!(res_15085585 <= colontmp__15085584)) break L3;
            i_9120403 = res_15085585;
            result_9120394 = nimCopy(null, [48].concat(result_9120394 || []), NTI112);
            res_15085585 = addInt(res_15085585, 1);
          }
      } while(false);
    } while(false);
    if ((x_9120392 < 0)) {
    result_9120394 = nimCopy(null, [45].concat(result_9120394 || []), NTI112);
    }
    

  return result_9120394;

}
function HEX2D_9748091(a_9748093, b_9748094) {
  var result_9748095 = 0;

    result_9748095 = (a_9748093 - b_9748094);

  return result_9748095;

}
function HEX2A_9748001(a_9748003, b_9748004) {
  var result_9748005 = 0;

    result_9748005 = (a_9748003 * b_9748004);

  return result_9748005;

}
function convert_9835226(unit_from_9835229, unit_to_9835230, quantity_9835231) {
    var Tmp1;

  var result_9835232 = 0;

    if ((unit_from_9835229 < unit_to_9835230)) {
    Tmp1 = chckRange(divInt(quantity_9835231, divInt(unit_weights_9748762[chckIndx(unit_to_9835230, 0, (unit_weights_9748762 != null ? unit_weights_9748762.length : 0)+0-1)-0], unit_weights_9748762[chckIndx(unit_from_9835229, 0, (unit_weights_9748762 != null ? unit_weights_9748762.length : 0)+0-1)-0])), 0, 999999999);
    }
    else {
    Tmp1 = chckRange(HEX2A_9748001(divInt(unit_weights_9748762[chckIndx(unit_from_9835229, 0, (unit_weights_9748762 != null ? unit_weights_9748762.length : 0)+0-1)-0], unit_weights_9748762[chckIndx(unit_to_9835230, 0, (unit_weights_9748762 != null ? unit_weights_9748762.length : 0)+0-1)-0]), quantity_9835231), 0, 999999999);
    }
    
    result_9835232 = Tmp1;

  return result_9835232;

}
function HEX2B_9748055(a_9748057, b_9748058) {
  var result_9748059 = 0;

    result_9748059 = (a_9748057 + b_9748058);

  return result_9748059;

}
function HEX3DHEX3D_9980022(zone1_9980024, zone2_9980025) {
  var result_9980026 = false;

  BeforeRet: do {
    if ((zone1_9980024 == zone2_9980025)) {
    result_9980026 = true;
    break BeforeRet;
    }
    
    if (((zone1_9980024 == null) || (zone2_9980025 == null))) {
    result_9980026 = false;
    break BeforeRet;
    }
    
    result_9980026 = eqStrings(zone1_9980024.name, zone2_9980025.name);
  } while (false);

  return result_9980026;

}
function format_pattern_10110053(dt_10110055, pattern_10110056, result_10110058, result_10110058_Idx, loc_10110059) {
      var Tmp1;
      var Tmp2;
      var Tmp3;
      var Tmp4;
      var Tmp5;
      var Tmp6;
      var Tmp7;
      var Tmp8;
      var Tmp9;
        var Tmp10;
        var Tmp11;
      var Tmp12;

    switch (pattern_10110056) {
    case 0:
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(cstrToNimstr((dt_10110055.monthday)+"")); } else { result_10110058[result_10110058_Idx] = cstrToNimstr((dt_10110055.monthday)+"").slice(); };
      break;
    case 1:
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(nsuIntToStr(dt_10110055.monthday, 2)); } else { result_10110058[result_10110058_Idx] = nsuIntToStr(dt_10110055.monthday, 2).slice(); };
      break;
    case 2:
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(loc_10110059.ddd[chckIndx(dt_10110055.weekday, 0, (loc_10110059.ddd != null ? loc_10110059.ddd.length : 0)+0-1)-0]); } else { result_10110058[result_10110058_Idx] = loc_10110059.ddd[chckIndx(dt_10110055.weekday, 0, (loc_10110059.ddd != null ? loc_10110059.ddd.length : 0)+0-1)-0].slice(); };
      break;
    case 3:
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(loc_10110059.dddd[chckIndx(dt_10110055.weekday, 0, (loc_10110059.dddd != null ? loc_10110059.dddd.length : 0)+0-1)-0]); } else { result_10110058[result_10110058_Idx] = loc_10110059.dddd[chckIndx(dt_10110055.weekday, 0, (loc_10110059.dddd != null ? loc_10110059.dddd.length : 0)+0-1)-0].slice(); };
      break;
    case 4:
      if ((dt_10110055.hour == 0)) {
      Tmp1 = makeNimstrLit("12");
      }
      else {
      if ((12 < dt_10110055.hour)) {
      Tmp1 = cstrToNimstr((HEX2D_9748091(dt_10110055.hour, 12))+"");
      }
      else {
      Tmp1 = cstrToNimstr((dt_10110055.hour)+"");
      }
      }
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(Tmp1); } else { result_10110058[result_10110058_Idx] = Tmp1.slice(); };
      break;
    case 5:
      if ((dt_10110055.hour == 0)) {
      Tmp2 = makeNimstrLit("12");
      }
      else {
      if ((12 < dt_10110055.hour)) {
      Tmp2 = nsuIntToStr(HEX2D_9748091(dt_10110055.hour, 12), 2);
      }
      else {
      Tmp2 = nsuIntToStr(dt_10110055.hour, 2);
      }
      }
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(Tmp2); } else { result_10110058[result_10110058_Idx] = Tmp2.slice(); };
      break;
    case 6:
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(cstrToNimstr((dt_10110055.hour)+"")); } else { result_10110058[result_10110058_Idx] = cstrToNimstr((dt_10110055.hour)+"").slice(); };
      break;
    case 7:
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(nsuIntToStr(dt_10110055.hour, 2)); } else { result_10110058[result_10110058_Idx] = nsuIntToStr(dt_10110055.hour, 2).slice(); };
      break;
    case 8:
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(cstrToNimstr((dt_10110055.minute)+"")); } else { result_10110058[result_10110058_Idx] = cstrToNimstr((dt_10110055.minute)+"").slice(); };
      break;
    case 9:
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(nsuIntToStr(dt_10110055.minute, 2)); } else { result_10110058[result_10110058_Idx] = nsuIntToStr(dt_10110055.minute, 2).slice(); };
      break;
    case 10:
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(cstrToNimstr((dt_10110055.month)+"")); } else { result_10110058[result_10110058_Idx] = cstrToNimstr((dt_10110055.month)+"").slice(); };
      break;
    case 11:
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(nsuIntToStr(dt_10110055.month, 2)); } else { result_10110058[result_10110058_Idx] = nsuIntToStr(dt_10110055.month, 2).slice(); };
      break;
    case 12:
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(loc_10110059.MMM[chckIndx(dt_10110055.month, 1, (loc_10110059.MMM != null ? loc_10110059.MMM.length : 0)+1-1)-1]); } else { result_10110058[result_10110058_Idx] = loc_10110059.MMM[chckIndx(dt_10110055.month, 1, (loc_10110059.MMM != null ? loc_10110059.MMM.length : 0)+1-1)-1].slice(); };
      break;
    case 13:
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(loc_10110059.MMMM[chckIndx(dt_10110055.month, 1, (loc_10110059.MMMM != null ? loc_10110059.MMMM.length : 0)+1-1)-1]); } else { result_10110058[result_10110058_Idx] = loc_10110059.MMMM[chckIndx(dt_10110055.month, 1, (loc_10110059.MMMM != null ? loc_10110059.MMMM.length : 0)+1-1)-1].slice(); };
      break;
    case 14:
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(cstrToNimstr((dt_10110055.second)+"")); } else { result_10110058[result_10110058_Idx] = cstrToNimstr((dt_10110055.second)+"").slice(); };
      break;
    case 15:
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(nsuIntToStr(dt_10110055.second, 2)); } else { result_10110058[result_10110058_Idx] = nsuIntToStr(dt_10110055.second, 2).slice(); };
      break;
    case 16:
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(nsuIntToStr(convert_9835226(0, 2, dt_10110055.nanosecond), 3)); } else { result_10110058[result_10110058_Idx] = nsuIntToStr(convert_9835226(0, 2, dt_10110055.nanosecond), 3).slice(); };
      break;
    case 17:
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(nsuIntToStr(convert_9835226(0, 1, dt_10110055.nanosecond), 6)); } else { result_10110058[result_10110058_Idx] = nsuIntToStr(convert_9835226(0, 1, dt_10110055.nanosecond), 6).slice(); };
      break;
    case 18:
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(nsuIntToStr(dt_10110055.nanosecond, 9)); } else { result_10110058[result_10110058_Idx] = nsuIntToStr(dt_10110055.nanosecond, 9).slice(); };
      break;
    case 19:
      if ((12 <= dt_10110055.hour)) {
      Tmp3 = makeNimstrLit("P");
      }
      else {
      Tmp3 = makeNimstrLit("A");
      }
      
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(Tmp3); } else { result_10110058[result_10110058_Idx] = Tmp3.slice(); };
      break;
    case 20:
      if ((12 <= dt_10110055.hour)) {
      Tmp4 = makeNimstrLit("PM");
      }
      else {
      Tmp4 = makeNimstrLit("AM");
      }
      
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(Tmp4); } else { result_10110058[result_10110058_Idx] = Tmp4.slice(); };
      break;
    case 21:
      if ((dt_10110055.year <= 0)) {
      Tmp5 = HEX2B_9748055(absInt(dt_10110055.year), 1);
      }
      else {
      Tmp5 = dt_10110055.year;
      }
      
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(cstrToNimstr((modInt(Tmp5, 10))+"")); } else { result_10110058[result_10110058_Idx] = cstrToNimstr((modInt(Tmp5, 10))+"").slice(); };
      break;
    case 22:
      if ((dt_10110055.year <= 0)) {
      Tmp6 = HEX2B_9748055(absInt(dt_10110055.year), 1);
      }
      else {
      Tmp6 = dt_10110055.year;
      }
      
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(nsuIntToStr(modInt(Tmp6, 100), 2)); } else { result_10110058[result_10110058_Idx] = nsuIntToStr(modInt(Tmp6, 100), 2).slice(); };
      break;
    case 23:
      if ((dt_10110055.year <= 0)) {
      Tmp7 = HEX2B_9748055(absInt(dt_10110055.year), 1);
      }
      else {
      Tmp7 = dt_10110055.year;
      }
      
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(nsuIntToStr(modInt(Tmp7, 1000), 3)); } else { result_10110058[result_10110058_Idx] = nsuIntToStr(modInt(Tmp7, 1000), 3).slice(); };
      break;
    case 24:
      if ((dt_10110055.year <= 0)) {
      Tmp8 = HEX2B_9748055(absInt(dt_10110055.year), 1);
      }
      else {
      Tmp8 = dt_10110055.year;
      }
      
      var year_10150001 = Tmp8;
      if ((year_10150001 < 10000)) {
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(nsuIntToStr(year_10150001, 4)); } else { result_10110058[result_10110058_Idx] = nsuIntToStr(year_10150001, 4).slice(); };
      }
      else {
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat([43].concat(cstrToNimstr((year_10150001)+"") || [])); } else { result_10110058[result_10110058_Idx] = [43].concat(cstrToNimstr((year_10150001)+"") || []).slice(); };
      }
      
      break;
    case 25:
      if ((dt_10110055.year <= 0)) {
      Tmp9 = HEX2B_9748055(absInt(dt_10110055.year), 1);
      }
      else {
      Tmp9 = dt_10110055.year;
      }
      
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(nsuIntToStr(modInt(Tmp9, 100000), 5)); } else { result_10110058[result_10110058_Idx] = nsuIntToStr(modInt(Tmp9, 100000), 5).slice(); };
      break;
    case 26:
      if ((dt_10110055.year < 1)) {
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(cstrToNimstr((HEX2B_9748055(absInt(dt_10110055.year), 1))+"")); } else { result_10110058[result_10110058_Idx] = cstrToNimstr((HEX2B_9748055(absInt(dt_10110055.year), 1))+"").slice(); };
      }
      else {
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(cstrToNimstr((dt_10110055.year)+"")); } else { result_10110058[result_10110058_Idx] = cstrToNimstr((dt_10110055.year)+"").slice(); };
      }
      
      break;
    case 27:
      var year_10155002 = dt_10110055.year;
      if (((year_10155002 < 10000) || (year_10155002 < 0))) {
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(nsuIntToStr(year_10155002, 4)); } else { result_10110058[result_10110058_Idx] = nsuIntToStr(year_10155002, 4).slice(); };
      }
      else {
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat([43].concat(cstrToNimstr((year_10155002)+"") || [])); } else { result_10110058[result_10110058_Idx] = [43].concat(cstrToNimstr((year_10155002)+"") || []).slice(); };
      }
      
      break;
    case 28:
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(cstrToNimstr((dt_10110055.year)+"")); } else { result_10110058[result_10110058_Idx] = cstrToNimstr((dt_10110055.year)+"").slice(); };
      break;
    case 29:
    case 30:
    case 31:
    case 32:
        if (!!(HEX3DHEX3D_9980022(dt_10110055.timezone, null))) Tmp10 = false; else {          Tmp10 = eqStrings(dt_10110055.timezone.name, makeNimstrLit("Etc/UTC"));        }      if (Tmp10) {
      if (result_10110058[result_10110058_Idx] != null) { addChar(result_10110058[result_10110058_Idx], 90); } else { result_10110058[result_10110058_Idx] = [90]; };
      }
      else {
        if ((0 <= negInt(dt_10110055.utcOffset))) {
        Tmp11 = 43;
        }
        else {
        Tmp11 = 45;
        }
        
        if (result_10110058[result_10110058_Idx] != null) { addChar(result_10110058[result_10110058_Idx], Tmp11); } else { result_10110058[result_10110058_Idx] = [Tmp11]; };
        var abs_offset_10165001 = absInt(dt_10110055.utcOffset);
        switch (pattern_10110056) {
        case 29:
          if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(cstrToNimstr((divInt(abs_offset_10165001, 3600))+"")); } else { result_10110058[result_10110058_Idx] = cstrToNimstr((divInt(abs_offset_10165001, 3600))+"").slice(); };
          break;
        case 30:
          if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(nsuIntToStr(divInt(abs_offset_10165001, 3600), 2)); } else { result_10110058[result_10110058_Idx] = nsuIntToStr(divInt(abs_offset_10165001, 3600), 2).slice(); };
          break;
        case 31:
          var h_10165005 = nsuIntToStr(divInt(abs_offset_10165001, 3600), 2);
          var m_10165006 = nsuIntToStr(modInt(divInt(abs_offset_10165001, 60), 60), 2);
          if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat((h_10165005 || []).concat(makeNimstrLit(":") || [],m_10165006 || [])); } else { result_10110058[result_10110058_Idx] = (h_10165005 || []).concat(makeNimstrLit(":") || [],m_10165006 || []).slice(); };
          break;
        case 32:
          var abs_offset_10165007 = absInt(dt_10110055.utcOffset);
          var h_10165009 = nsuIntToStr(divInt(abs_offset_10165007, 3600), 2);
          var m_10165010 = nsuIntToStr(modInt(divInt(abs_offset_10165007, 60), 60), 2);
          var s_10165011 = nsuIntToStr(modInt(abs_offset_10165007, 60), 2);
          if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat((h_10165009 || []).concat(makeNimstrLit(":") || [],m_10165010 || [],makeNimstrLit(":") || [],s_10165011 || [])); } else { result_10110058[result_10110058_Idx] = (h_10165009 || []).concat(makeNimstrLit(":") || [],m_10165010 || [],makeNimstrLit(":") || [],s_10165011 || []).slice(); };
          break;
        default: 
          if (true) {
          failed_assert_impl_102680(makeNimstrLit("times.nim(2069, 20) `false` "));
          }
          
          break;
        }
      }
      
      break;
    case 33:
      if ((dt_10110055.year < 1)) {
      Tmp12 = makeNimstrLit("BC");
      }
      else {
      Tmp12 = makeNimstrLit("AD");
      }
      
      if (result_10110058[result_10110058_Idx] != null) { result_10110058[result_10110058_Idx] = (result_10110058[result_10110058_Idx]).concat(Tmp12); } else { result_10110058[result_10110058_Idx] = Tmp12.slice(); };
      break;
    case 34:
      if (true) {
      failed_assert_impl_102680(makeNimstrLit("times.nim(2072, 18) `false` "));
      }
      
      break;
    }

  
}
function format_10505058(dt_10505060, f_10505061, loc_10505062) {
  var result_10505063 = [null];

    var idx_10505065 = 0;
    L1: do {
        L2: while (true) {
        if (!(idx_10505065 <= (f_10505061.patterns != null ? (f_10505061.patterns.length-1) : -1))) break L2;
          switch (chckRange(f_10505061.patterns[chckIndx(idx_10505065, 0, (f_10505061.patterns != null ? f_10505061.patterns.length : 0)+0-1)-0], 0, 34)) {
          case 34:
            idx_10505065 = addInt(idx_10505065, 1);
            var len_10505078 = f_10505061.patterns[chckIndx(idx_10505065, 0, (f_10505061.patterns != null ? f_10505061.patterns.length : 0)+0-1)-0];
            L3: do {
              var i_10505221 = 0;
              var res_15085579 = 1;
              L4: do {
                  L5: while (true) {
                  if (!(res_15085579 <= ((len_10505078)|0))) break L5;
                    i_10505221 = res_15085579;
                    idx_10505065 = addInt(idx_10505065, 1);
                    if (result_10505063[0] != null) { addChar(result_10505063[0], f_10505061.patterns[chckIndx(idx_10505065, 0, (f_10505061.patterns != null ? f_10505061.patterns.length : 0)+0-1)-0]); } else { result_10505063[0] = [f_10505061.patterns[chckIndx(idx_10505065, 0, (f_10505061.patterns != null ? f_10505061.patterns.length : 0)+0-1)-0]]; };
                    res_15085579 = addInt(res_15085579, 1);
                  }
              } while(false);
            } while(false);
            idx_10505065 = addInt(idx_10505065, 1);
            break;
          default: 
            format_pattern_10110053(dt_10505060, chckRange(f_10505061.patterns[chckIndx(idx_10505065, 0, (f_10505061.patterns != null ? f_10505061.patterns.length : 0)+0-1)-0], 0, 34), result_10505063, 0, loc_10505062);
            idx_10505065 = addInt(idx_10505065, 1);
            break;
          }
        }
    } while(false);

  return result_10505063[0];

}
function format_10510130(dt_10510133) {
  var result_10510135 = null;

    result_10510135 = nimCopy(null, format_10505058(dt_10510133, {patterns: [24, 34, 1, 45, 11, 34, 1, 45, 1, 34, 1, 84, 7, 34, 1, 58, 9, 34, 1, 58, 15, 31], formatStr: makeNimstrLit("yyyy-MM-dd\'T\'HH:mm:sszzz")}, {MMM: [makeNimstrLit("Jan"), makeNimstrLit("Feb"), makeNimstrLit("Mar"), makeNimstrLit("Apr"), makeNimstrLit("May"), makeNimstrLit("Jun"), makeNimstrLit("Jul"), makeNimstrLit("Aug"), makeNimstrLit("Sep"), makeNimstrLit("Oct"), makeNimstrLit("Nov"), makeNimstrLit("Dec")], MMMM: [makeNimstrLit("January"), makeNimstrLit("February"), makeNimstrLit("March"), makeNimstrLit("April"), makeNimstrLit("May"), makeNimstrLit("June"), makeNimstrLit("July"), makeNimstrLit("August"), makeNimstrLit("September"), makeNimstrLit("October"), makeNimstrLit("November"), makeNimstrLit("December")], ddd: [makeNimstrLit("Mon"), makeNimstrLit("Tue"), makeNimstrLit("Wed"), makeNimstrLit("Thu"), makeNimstrLit("Fri"), makeNimstrLit("Sat"), makeNimstrLit("Sun")], dddd: [makeNimstrLit("Monday"), makeNimstrLit("Tuesday"), makeNimstrLit("Wednesday"), makeNimstrLit("Thursday"), makeNimstrLit("Friday"), makeNimstrLit("Saturday"), makeNimstrLit("Sunday")]}), NTI112);

  return result_10510135;

}
function HEX24_10510125(dt_10510127) {
  var result_10510128 = null;

    result_10510128 = nimCopy(null, format_10510130(dt_10510127), NTI112);

  return result_10510128;

}
function HEX2B_9748037(a_9748039, b_9748040) {
  var result_9748041 = 0;

    result_9748041 = (a_9748039 + b_9748040);

  return result_9748041;

}
function convert_9748933(unit_from_9748936, unit_to_9748937, quantity_9748938) {
    var Tmp1;

  var result_9748939 = 0;

    if ((unit_from_9748936 < unit_to_9748937)) {
    Tmp1 = divInt(quantity_9748938, divInt(unit_weights_9748762[chckIndx(unit_to_9748937, 0, (unit_weights_9748762 != null ? unit_weights_9748762.length : 0)+0-1)-0], unit_weights_9748762[chckIndx(unit_from_9748936, 0, (unit_weights_9748762 != null ? unit_weights_9748762.length : 0)+0-1)-0]));
    }
    else {
    Tmp1 = HEX2A_9748001(divInt(unit_weights_9748762[chckIndx(unit_from_9748936, 0, (unit_weights_9748762 != null ? unit_weights_9748762.length : 0)+0-1)-0], unit_weights_9748762[chckIndx(unit_to_9748937, 0, (unit_weights_9748762 != null ? unit_weights_9748762.length : 0)+0-1)-0]), quantity_9748938);
    }
    
    result_9748939 = Tmp1;

  return result_9748939;

}
function convert_9749049(unit_from_9749052, unit_to_9749053, quantity_9749054) {
    var Tmp1;

  var result_9749055 = 0;

    if ((unit_from_9749052 < unit_to_9749053)) {
    Tmp1 = chckRange(divInt(quantity_9749054, divInt(unit_weights_9748762[chckIndx(unit_to_9749053, 0, (unit_weights_9748762 != null ? unit_weights_9748762.length : 0)+0-1)-0], unit_weights_9748762[chckIndx(unit_from_9749052, 0, (unit_weights_9748762 != null ? unit_weights_9748762.length : 0)+0-1)-0])), -2147483648, 2147483647);
    }
    else {
    Tmp1 = chckRange(HEX2A_9748001(divInt(unit_weights_9748762[chckIndx(unit_from_9749052, 0, (unit_weights_9748762 != null ? unit_weights_9748762.length : 0)+0-1)-0], unit_weights_9748762[chckIndx(unit_to_9749053, 0, (unit_weights_9748762 != null ? unit_weights_9748762.length : 0)+0-1)-0]), quantity_9749054), -2147483648, 2147483647);
    }
    
    result_9749055 = Tmp1;

  return result_9749055;

}
function normalize_9955002(seconds_9955005, nanoseconds_9955006) {
  var result_9955007 = {seconds: 0, nanosecond: 0};

    result_9955007.seconds = HEX2B_9748037(seconds_9955005, convert_9748933(0, 3, nanoseconds_9955006));
    var nanosecond_9955021 = modInt(nanoseconds_9955006, convert_9749049(3, 0, 1));
    if ((nanosecond_9955021 < 0)) {
    nanosecond_9955021 = addInt(nanosecond_9955021, convert_9749049(3, 0, 1));
    result_9955007.seconds = subInt(result_9955007.seconds, 1);
    }
    
    result_9955007.nanosecond = chckRange(chckRange(nanosecond_9955021, -2147483648, 2147483647), 0, 999999999);

  return result_9955007;

}
function HEX2D_9748073(a_9748075, b_9748076) {
  var result_9748077 = 0;

    result_9748077 = (a_9748075 - b_9748076);

  return result_9748077;

}
function ntSubTime(a_9955069, b_9955070) {
  var result_9955071 = {seconds: 0, nanosecond: 0};

    nimCopy(result_9955071, normalize_9955002(HEX2D_9748073(a_9955069.seconds, b_9955070.seconds), HEX2D_9748091(a_9955069.nanosecond, b_9955070.nanosecond)), NTI9748614);

  return result_9955071;

}
function normalize_9749036(seconds_9749039, nanoseconds_9749040) {
  var result_9749041 = {seconds: 0, nanosecond: 0};

    result_9749041.seconds = HEX2B_9748037(seconds_9749039, convert_9748933(0, 3, nanoseconds_9749040));
    var nanosecond_9749090 = modInt(nanoseconds_9749040, convert_9749049(3, 0, 1));
    if ((nanosecond_9749090 < 0)) {
    nanosecond_9749090 = addInt(nanosecond_9749090, convert_9749049(3, 0, 1));
    result_9749041.seconds = subInt(result_9749041.seconds, 1);
    }
    
    result_9749041.nanosecond = chckRange(chckRange(nanosecond_9749090, -2147483648, 2147483647), 0, 999999999);

  return result_9749041;

}
function init_duration_9748922(nanoseconds_9748924, microseconds_9748925, milliseconds_9748926, seconds_9748927, minutes_9748928, hours_9748929, days_9748930, weeks_9748931) {
  var result_9748932 = {seconds: 0, nanosecond: 0};

    var seconds_9749016 = HEX2B_9748037(HEX2B_9748037(HEX2B_9748037(HEX2B_9748037(HEX2B_9748037(HEX2B_9748037(HEX2B_9748037(convert_9748933(7, 3, weeks_9748931), convert_9748933(6, 3, days_9748930)), convert_9748933(4, 3, minutes_9748928)), convert_9748933(5, 3, hours_9748929)), convert_9748933(3, 3, seconds_9748927)), convert_9748933(2, 3, milliseconds_9748926)), convert_9748933(1, 3, microseconds_9748925)), convert_9748933(0, 3, nanoseconds_9748924));
    var nanoseconds_9749032 = chckRange(HEX2B_9748037(HEX2B_9748037(convert_9748933(2, 0, modInt(milliseconds_9748926, 1000)), convert_9748933(1, 0, modInt(microseconds_9748925, 1000000))), modInt(nanoseconds_9748924, 1000000000)), -2147483648, 2147483647);
    nimCopy(result_9748932, normalize_9749036(seconds_9749016, nanoseconds_9749032), NTI9748618);

  return result_9748932;

}
function floor_div_9865254(x_9865257, y_9865258) {
      var Tmp1;
      var Tmp2;
        var Tmp3;

  var result_9865259 = 0;

    result_9865259 = Math.trunc(x_9865257 / y_9865258);
    var r_9865260 = Math.trunc(x_9865257 % y_9865258);
      if (!(0 < r_9865260)) Tmp2 = false; else {        Tmp2 = (y_9865258 < 0);      }      if (Tmp2) Tmp1 = true; else {        if (!(r_9865260 < 0)) Tmp3 = false; else {          Tmp3 = (0 < y_9865258);        }        Tmp1 = Tmp3;      }    if (Tmp1) {
    result_9865259 -= 1;
    }
    

  return result_9865259;

}
function inc_9748133(a_9748136, a_9748136_Idx, b_9748137) {
    a_9748136[a_9748136_Idx] += b_9748137;

  
}
function from_epoch_day_9900036(epochday_9900038) {
    var Tmp1;
    var Tmp2;

  var result_9900043 = {Field0: 0, Field1: 0, Field2: 0};

  BeforeRet: do {
    var z_9900044 = [epochday_9900038];
    inc_9748133(z_9900044, 0, 719468);
    if ((0 <= z_9900044[0])) {
    Tmp1 = z_9900044[0];
    }
    else {
    Tmp1 = HEX2D_9748073(z_9900044[0], 146096);
    }
    
    var era_9905003 = divInt(Tmp1, 146097);
    var doe_9905005 = HEX2D_9748073(z_9900044[0], HEX2A_9748001(era_9905003, 146097));
    var yoe_9905010 = divInt(HEX2D_9748073(HEX2B_9748037(HEX2D_9748073(doe_9905005, divInt(doe_9905005, 1460)), divInt(doe_9905005, 36524)), divInt(doe_9905005, 146096)), 365);
    var y_9905012 = HEX2B_9748037(yoe_9905010, HEX2A_9748001(era_9905003, 400));
    var doy_9905015 = HEX2D_9748073(doe_9905005, HEX2D_9748073(HEX2B_9748037(HEX2A_9748001(365, yoe_9905010), divInt(yoe_9905010, 4)), divInt(yoe_9905010, 100)));
    var mp_9905017 = divInt(HEX2B_9748037(HEX2A_9748001(5, doy_9905015), 2), 153);
    var d_9905019 = HEX2B_9748037(HEX2D_9748073(doy_9905015, divInt(HEX2B_9748037(HEX2A_9748001(153, mp_9905017), 2), 5)), 1);
    if ((mp_9905017 < 10)) {
    Tmp2 = 3;
    }
    else {
    Tmp2 = -9;
    }
    
    var m_9905021 = HEX2B_9748037(mp_9905017, Tmp2);
    var colontmp__15085592 = chckRange(d_9905019, 1, 31);
    var colontmp__15085593 = chckRange(m_9905021, 1, 12);
    var colontmp__15085594 = chckRange(HEX2B_9748037(y_9905012, ((m_9905021 <= 2) ? 1:0)), -2147483648, 2147483647);
    nimCopy(result_9900043, {Field0: nimCopy(null, colontmp__15085592, NTI9748602), Field1: colontmp__15085593, Field2: colontmp__15085594}, NTI9900039);
    break BeforeRet;
  } while (false);

  return result_9900043;

}
function is_leap_year_9865312(year_9865314) {
    var Tmp1;
      var Tmp2;

  var result_9865315 = false;

    if (!(modInt(year_9865314, 4) == 0)) Tmp1 = false; else {      if (!((modInt(year_9865314, 100) == 0))) Tmp2 = true; else {        Tmp2 = (modInt(year_9865314, 400) == 0);      }      Tmp1 = Tmp2;    }    result_9865315 = Tmp1;

  return result_9865315;

}
function get_days_in_month_9880214(month_9880216, year_9880217) {
      var Tmp1;

  var result_9880218 = 0;

    switch (month_9880216) {
    case 2:
      if (is_leap_year_9865312(year_9880217)) {
      Tmp1 = 29;
      }
      else {
      Tmp1 = 28;
      }
      
      result_9880218 = Tmp1;
      break;
    case 4:
    case 6:
    case 9:
    case 11:
      result_9880218 = 30;
      break;
    default: 
      result_9880218 = 31;
      break;
    }

  return result_9880218;

}
function assert_valid_date_9880250(monthday_9880252, month_9880253, year_9880254) {
    if (!((monthday_9880252 <= get_days_in_month_9880214(month_9880253, year_9880254)))) {
    failed_assert_impl_102680((makeNimstrLit("times.nim(673, 10) `monthday <= getDaysInMonth(month, year)` ") || []).concat(cstrToNimstr((year_9880254)+"") || [],makeNimstrLit("-") || [],nsuIntToStr(month_9880253, 2) || [],makeNimstrLit("-") || [],cstrToNimstr((monthday_9880252)+"") || [],makeNimstrLit(" is not a valid date") || []));
    }
    

  
}
function HEX2A_9748019(a_9748021, b_9748022) {
  var result_9748023 = 0;

    result_9748023 = (a_9748021 * b_9748022);

  return result_9748023;

}
function to_epoch_day_9890214(monthday_9890216, month_9890217, year_9890218) {
    var Tmp1;
    var Tmp2;

  var result_9890219 = 0;

  BeforeRet: do {
    assert_valid_date_9880250(monthday_9890216, month_9890217, year_9890218);
    var colontmp__15085596 = {Field0: year_9890218, Field1: month_9890217, Field2: monthday_9890216};
    var y_9890225 = colontmp__15085596["Field0"];
    var m_9890226 = colontmp__15085596["Field1"];
    var d_9890227 = colontmp__15085596["Field2"];
    if ((m_9890226 <= 2)) {
    y_9890225 = subInt(y_9890225, 1);
    }
    
    if ((0 <= y_9890225)) {
    Tmp1 = y_9890225;
    }
    else {
    Tmp1 = HEX2D_9748091(y_9890225, 399);
    }
    
    var era_9895003 = divInt(Tmp1, 400);
    var yoe_9895005 = HEX2D_9748091(y_9890225, HEX2A_9748019(era_9895003, 400));
    if ((2 < m_9890226)) {
    Tmp2 = -3;
    }
    else {
    Tmp2 = 9;
    }
    
    var doy_9900002 = HEX2D_9748091(HEX2B_9748055(divInt(HEX2B_9748055(HEX2A_9748019(153, HEX2B_9748055(m_9890226, Tmp2)), 2), 5), d_9890227), 1);
    var doe_9900005 = HEX2B_9748055(HEX2D_9748091(HEX2B_9748055(HEX2A_9748019(yoe_9895005, 365), divInt(yoe_9895005, 4)), divInt(yoe_9895005, 100)), doy_9900002);
    result_9890219 = HEX2D_9748091(HEX2B_9748055(HEX2A_9748019(era_9895003, 146097), doe_9900005), 719468);
    break BeforeRet;
  } while (false);

  return result_9890219;

}
function get_day_of_week_9905151(monthday_9905153, month_9905154, year_9905155) {
    var Tmp1;

  var result_9905156 = 0;

    assert_valid_date_9880250(monthday_9905153, month_9905154, year_9905155);
    var days_9905157 = HEX2D_9748073(to_epoch_day_9890214(monthday_9905153, month_9905154, year_9905155), 3);
    var weeks_9905163 = floor_div_9865254(days_9905157, 7);
    var wd_9905164 = HEX2D_9748073(days_9905157, HEX2A_9748001(weeks_9905163, 7));
    if ((wd_9905164 == 0)) {
    Tmp1 = 6;
    }
    else {
    Tmp1 = chckRange(HEX2D_9748073(wd_9905164, 1), 0, 6);
    }
    
    result_9905156 = Tmp1;

  return result_9905156;

}
function get_day_of_year_9905070(monthday_9905072, month_9905073, year_9905074) {
  var result_9905075 = 0;

    assert_valid_date_9880250(monthday_9905072, month_9905073, year_9905074);
    if (is_leap_year_9865312(year_9905074)) {
    result_9905075 = chckRange(HEX2D_9748091(HEX2B_9748055(days_until_month_leap_9905107[chckIndx(month_9905073, 1, (days_until_month_leap_9905107 != null ? days_until_month_leap_9905107.length : 0)+1-1)-1], monthday_9905072), 1), 0, 365);
    }
    else {
      result_9905075 = chckRange(HEX2D_9748091(HEX2B_9748055(days_until_month_9905091[chckIndx(month_9905073, 1, (days_until_month_9905091 != null ? days_until_month_9905091.length : 0)+1-1)-1], monthday_9905072), 1), 0, 365);
    }
    

  return result_9905075;

}
function init_date_time_9975139(zt_9975141, zone_9975142) {
  var result_9975143 = {m_type: NTI9748616, nanosecond: 0, second: 0, minute: 0, hour: 0, monthday: 0, month: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0};

    var adj_time_9975144 = ntSubTime(zt_9975141.time, init_duration_9748922(0, 0, 0, zt_9975141.utcOffset, 0, 0, 0, 0));
    var s_9975145 = adj_time_9975144.seconds;
    var epochday_9975151 = floor_div_9865254(s_9975145, 86400);
    var rem_9975152 = HEX2D_9748073(s_9975145, HEX2A_9748001(epochday_9975151, 86400));
    var hour_9975153 = divInt(rem_9975152, 3600);
    rem_9975152 = HEX2D_9748073(rem_9975152, HEX2A_9748001(hour_9975153, 3600));
    var minute_9975154 = divInt(rem_9975152, 60);
    rem_9975152 = HEX2D_9748073(rem_9975152, HEX2A_9748001(minute_9975154, 60));
    var second_9975155 = rem_9975152;
    var colontmp__15085591 = from_epoch_day_9900036(epochday_9975151);
    var d_9975156 = colontmp__15085591["Field0"];
    var m_9975157 = colontmp__15085591["Field1"];
    var y_9975158 = colontmp__15085591["Field2"];
    nimCopy(result_9975143, {year: y_9975158, month: m_9975157, monthday: nimCopy(null, d_9975156, NTI9748602), hour: nimCopy(null, chckRange(hour_9975153, 0, 23), NTI9748604), minute: nimCopy(null, chckRange(minute_9975154, 0, 59), NTI9748606), second: nimCopy(null, chckRange(second_9975155, 0, 60), NTI9748608), nanosecond: nimCopy(null, zt_9975141.time.nanosecond, NTI9748612), weekday: get_day_of_week_9905151(d_9975156, m_9975157, y_9975158), yearday: get_day_of_year_9905070(d_9975156, m_9975157, y_9975158), isDst: zt_9975141.isDst, timezone: zone_9975142, utcOffset: zt_9975141.utcOffset, m_type: NTI9748616}, NTI9748616);

  return result_9975143;

}
function zoned_time_from_time_9975275(zone_9975277, time_9975278) {
  var result_9975279 = {time: {seconds: 0, nanosecond: 0}, utcOffset: 0, isDst: false};

    nimCopy(result_9975279, zone_9975277.zonedTimeFromTimeImpl(time_9975278), NTI9748628);

  return result_9975279;

}
function in_zone_9980059(time_9980061, zone_9980062) {
  var result_9980063 = {m_type: NTI9748616, nanosecond: 0, second: 0, minute: 0, hour: 0, monthday: 0, month: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0};

    nimCopy(result_9980063, init_date_time_9975139(zoned_time_from_time_9975275(zone_9980062, time_9980061), zone_9980062), NTI9748616);

  return result_9980063;

}
function new_timezone_9975202(name_9975204, zoned_time_from_time_impl_9975208, zoned_time_from_adj_time_impl_9975212) {
  var result_9975214 = null;

    result_9975214 = {name: nimCopy(null, name_9975204, NTI112), zonedTimeFromTimeImpl: zoned_time_from_time_impl_9975208, zonedTimeFromAdjTimeImpl: zoned_time_from_adj_time_impl_9975212};

  return result_9975214;

}
function local_zoned_time_from_time_9748880(time_9748882) {
  var result_9980120 = {time: {seconds: 0, nanosecond: 0}, utcOffset: 0, isDst: false};

    var js_date_9980126 = new Date(HEX2A_9748001(time_9748882.seconds, 1000));
    var offset_9980127 = HEX2A_9748019(js_date_9980126.getTimezoneOffset(), 60);
    nimCopy(result_9980120.time, time_9748882, NTI9748614);
    result_9980120.utcOffset = offset_9980127;
    result_9980120.isDst = false;

  return result_9980120;

}
function contains_9985021(s_9985027, value_9985028) {
  var result_9985029 = false;

    result_9985029 = ((s_9985027.a <= value_9985028) && (value_9985028 <= s_9985027.b));

  return result_9985029;

}
function ntAddTime(a_9950022, b_9950023) {
  var result_9950024 = {seconds: 0, nanosecond: 0};

    nimCopy(result_9950024, normalize_9955002(HEX2B_9748037(a_9950022.seconds, b_9950023.seconds), HEX2B_9748055(a_9950022.nanosecond, b_9950023.nanosecond)), NTI9748614);

  return result_9950024;

}
function local_zoned_time_from_adj_time_9748883(adj_time_9748885) {
  var result_9980159 = {time: {seconds: 0, nanosecond: 0}, utcOffset: 0, isDst: false};

    var utc_date_9980165 = new Date(HEX2A_9748001(adj_time_9748885.seconds, 1000));
    var local_date_9980166 = new Date(utc_date_9980165.getUTCFullYear(),utc_date_9980165.getUTCMonth(),utc_date_9980165.getUTCDate(),utc_date_9980165.getUTCHours(),utc_date_9980165.getUTCMinutes(),utc_date_9980165.getUTCSeconds(),0);
    if (contains_9985021(HEX2EHEX2E_1795220(0, 99), utc_date_9980165.getUTCFullYear())) {
    local_date_9980166.setFullYear(utc_date_9980165.getUTCFullYear());
    }
    
    result_9980159.utcOffset = HEX2A_9748019(local_date_9980166.getTimezoneOffset(), 60);
    nimCopy(result_9980159.time, ntAddTime(adj_time_9748885, init_duration_9748922(0, 0, 0, result_9980159.utcOffset, 0, 0, 0, 0)), NTI9748614);
    result_9980159.isDst = false;

  return result_9980159;

}
function local_9985282() {
  var result_9985284 = null;

    if ((local_instance_9985232[0] == null)) {
    local_instance_9985232[0] = new_timezone_9975202(makeNimstrLit("LOCAL"), local_zoned_time_from_time_9748880, local_zoned_time_from_adj_time_9748883);
    }
    
    result_9985284 = local_instance_9985232[0];

  return result_9985284;

}
function local_9985354(t_9985356) {
  var result_9985357 = {m_type: NTI9748616, nanosecond: 0, second: 0, minute: 0, hour: 0, monthday: 0, month: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0};

    nimCopy(result_9985357, in_zone_9980059(t_9985356, local_9985282()), NTI9748616);

  return result_9985357;

}
function init_time_9748886(unix_9748888, nanosecond_9748889) {
  var result_9945095 = {seconds: 0, nanosecond: 0};

    result_9945095.seconds = unix_9748888;
    result_9945095.nanosecond = nanosecond_9748889;

  return result_9945095;

}
function get_time_9985371() {
  var result_9985373 = {seconds: 0, nanosecond: 0};

    var millis_9985401 = new Date().getTime();
    var seconds_9985408 = convert_9749049(2, 3, millis_9985401);
    var nanos_9985422 = convert_9749049(2, 0, modInt(millis_9985401, convert_9749049(3, 2, 1)));
    nimCopy(result_9985373, init_time_9748886(seconds_9985408, chckRange(nanos_9985422, 0, 999999999)), NTI9748614);

  return result_9985373;

}
function now_9985436() {
  var result_9985438 = {m_type: NTI9748616, nanosecond: 0, second: 0, minute: 0, hour: 0, monthday: 0, month: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0};

    nimCopy(result_9985438, local_9985354(get_time_9985371()), NTI9748616);

  return result_9985438;

}
function save_func_14305031(j_str_14305033, fname_14305034) {
    function inner_14305050() {
      var result_14310002 = null;

      BeforeRet: do {
        var a_14310003 = null;
        a_14310003 = {};
        a_14310003.type = makeNimstrLit("application/json");
        result_14310002 = a_14310003;
        break BeforeRet;
      } while (false);

      return result_14310002;

    }

    var blb_14315022 = function(o,opt){return new Blob([o], opt);}(j_str_14305033, inner_14305050());
    var b_url_14315023 = function(b){return URL.createObjectURL(b);}(blb_14315022);
    var el_a_14315024 = document.createElement("a");
    el_a_14315024.setAttribute("href", b_url_14315023);
    el_a_14315024.setAttribute("download", toJSStr(fname_14305034));
    document.body.appendChild(el_a_14315024);
    el_a_14315024.click();
    document.body.removeChild(el_a_14315024);
    (function(uk){return URL.revokeObjectURL(uk);})(b_url_14315023);

  
}
function init_ordered_table_11596240(initial_size_11596244) {
  var result_11596246 = {data: null, counter: 0, first: 0, last: 0};

    if (!(is_power_of_two_8715029(initial_size_11596244))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(initialSize)` "));
    }
    
    result_11596246.counter = 0;
    result_11596246.data = new Array(chckRange(initial_size_11596244, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_11596244, 0, 2147483647);++i) {result_11596246.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    result_11596246.first = -1;
    result_11596246.last = -1;

  return result_11596246;

}
function new_jobject_11596235() {
  var result_11596237 = null;

    result_11596237 = {kind: 5, fields: init_ordered_table_11596240(4), str: null, num: 0, fnum: 0.0, bval: false, elems: null};

  return result_11596237;

}
function raw_get_11690621(t_11690626, key_11690627, hc_11690628, hc_11690628_Idx) {
            var Tmp3;

  var result_11690629 = 0;

  BeforeRet: do {
    hc_11690628[hc_11690628_Idx] = hash_10590214(key_11690627);
    if ((hc_11690628[hc_11690628_Idx] == 0)) {
    hc_11690628[hc_11690628_Idx] = 314159265;
    }
    
    if (((t_11690626.data != null ? t_11690626.data.length : 0) == 0)) {
    result_11690629 = -1;
    break BeforeRet;
    }
    
    var h_11700138 = (hc_11690628[hc_11690628_Idx] & (t_11690626.data != null ? (t_11690626.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_10612018(t_11690626.data[chckIndx(h_11700138, 0, (t_11690626.data != null ? t_11690626.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_11690626.data[chckIndx(h_11700138, 0, (t_11690626.data != null ? t_11690626.data.length : 0)+0-1)-0].Field0 == hc_11690628[hc_11690628_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_11690626.data[chckIndx(h_11700138, 0, (t_11690626.data != null ? t_11690626.data.length : 0)+0-1)-0].Field2, key_11690627);            }          if (Tmp3) {
          result_11690629 = h_11700138;
          break BeforeRet;
          }
          
          h_11700138 = next_try_10615014(h_11700138, (t_11690626.data != null ? (t_11690626.data.length-1) : -1));
        }
    } while(false);
    result_11690629 = subInt(-1, h_11700138);
  } while (false);

  return result_11690629;

}
function must_rehash_11725601(t_11725604) {
  var result_11725605 = false;

    if (!((t_11725604.counter < (t_11725604.data != null ? t_11725604.data.length : 0)))) {
    failed_assert_impl_102680(makeNimstrLit("hashcommon.nim(33, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_11725605 = ((mulInt((t_11725604.data != null ? t_11725604.data.length : 0), 2) < mulInt(t_11725604.counter, 3)) || (subInt((t_11725604.data != null ? t_11725604.data.length : 0), t_11725604.counter) < 4));

  return result_11725605;

}
function raw_insert_11751349(t_11751355, data_11751358, data_11751358_Idx, key_11751359, val_11751360, hc_11751361, h_11751362) {
    data_11751358[data_11751358_Idx][chckIndx(h_11751362, 0, (data_11751358[data_11751358_Idx] != null ? data_11751358[data_11751358_Idx].length : 0)+0-1)-0].Field2 = nimCopy(null, key_11751359, NTI112);
    data_11751358[data_11751358_Idx][chckIndx(h_11751362, 0, (data_11751358[data_11751358_Idx] != null ? data_11751358[data_11751358_Idx].length : 0)+0-1)-0].Field3 = val_11751360;
    data_11751358[data_11751358_Idx][chckIndx(h_11751362, 0, (data_11751358[data_11751358_Idx] != null ? data_11751358[data_11751358_Idx].length : 0)+0-1)-0].Field0 = hc_11751361;
    data_11751358[data_11751358_Idx][chckIndx(h_11751362, 0, (data_11751358[data_11751358_Idx] != null ? data_11751358[data_11751358_Idx].length : 0)+0-1)-0].Field1 = -1;
    if ((t_11751355.first < 0)) {
    t_11751355.first = h_11751362;
    }
    
    if ((0 <= t_11751355.last)) {
    data_11751358[data_11751358_Idx][chckIndx(t_11751355.last, 0, (data_11751358[data_11751358_Idx] != null ? data_11751358[data_11751358_Idx].length : 0)+0-1)-0].Field1 = h_11751362;
    }
    
    t_11751355.last = h_11751362;

  
}
function enlarge_11750180(t_11750186) {
          var Tmp6;
          var Tmp7;

    var n_11750194 = null;
    n_11750194 = new Array(chckRange(mulInt((t_11750186.data != null ? t_11750186.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_11750186.data != null ? t_11750186.data.length : 0), 2), 0, 2147483647);++i) {n_11750194[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    var h_11750333 = t_11750186.first;
    t_11750186.first = -1;
    t_11750186.last = -1;
    var Tmp1 = t_11750186.data; t_11750186.data = n_11750194; n_11750194 = Tmp1;    L2: do {
        L3: while (true) {
        if (!(0 <= h_11750333)) break L3;
          var nxt_11750489 = n_11750194[chckIndx(h_11750333, 0, (n_11750194 != null ? n_11750194.length : 0)+0-1)-0].Field1;
          var eh_11750638 = n_11750194[chckIndx(h_11750333, 0, (n_11750194 != null ? n_11750194.length : 0)+0-1)-0].Field0;
          if (is_filled_10612018(eh_11750638)) {
          var j_11750645 = (eh_11750638 & (t_11750186.data != null ? (t_11750186.data.length-1) : -1));
          L4: do {
              L5: while (true) {
              if (!is_filled_10612018(t_11750186.data[chckIndx(j_11750645, 0, (t_11750186.data != null ? t_11750186.data.length : 0)+0-1)-0].Field0)) break L5;
                j_11750645 = next_try_10615014(j_11750645, (t_11750186.data != null ? (t_11750186.data.length-1) : -1));
              }
          } while(false);
          Tmp6 = n_11750194[chckIndx(h_11750333, 0, (n_11750194 != null ? n_11750194.length : 0)+0-1)-0].Field2;
          n_11750194[chckIndx(h_11750333, 0, (n_11750194 != null ? n_11750194.length : 0)+0-1)-0].Field2 = genericReset(n_11750194[chckIndx(h_11750333, 0, (n_11750194 != null ? n_11750194.length : 0)+0-1)-0].Field2, NTI112);
          Tmp7 = n_11750194[chckIndx(h_11750333, 0, (n_11750194 != null ? n_11750194.length : 0)+0-1)-0].Field3;
          n_11750194[chckIndx(h_11750333, 0, (n_11750194 != null ? n_11750194.length : 0)+0-1)-0].Field3 = genericReset(n_11750194[chckIndx(h_11750333, 0, (n_11750194 != null ? n_11750194.length : 0)+0-1)-0].Field3, NTI11596043);
          raw_insert_11751349(t_11750186, t_11750186, "data", Tmp6, Tmp7, n_11750194[chckIndx(h_11750333, 0, (n_11750194 != null ? n_11750194.length : 0)+0-1)-0].Field0, j_11750645);
          }
          
          h_11750333 = nxt_11750489;
        }
    } while(false);

  
}
function raw_get_known_hc_11752149(t_11752154, key_11752155, hc_11752156) {
  var result_11752157 = 0;

  BeforeRet: do {
    if (((t_11752154.data != null ? t_11752154.data.length : 0) == 0)) {
    result_11752157 = -1;
    break BeforeRet;
    }
    
    var h_11755138 = (hc_11752156 & (t_11752154.data != null ? (t_11752154.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_10612018(t_11752154.data[chckIndx(h_11755138, 0, (t_11752154.data != null ? t_11752154.data.length : 0)+0-1)-0].Field0)) break L2;
          if (((t_11752154.data[chckIndx(h_11755138, 0, (t_11752154.data != null ? t_11752154.data.length : 0)+0-1)-0].Field0 == hc_11752156) && eqStrings(t_11752154.data[chckIndx(h_11755138, 0, (t_11752154.data != null ? t_11752154.data.length : 0)+0-1)-0].Field2, key_11752155))) {
          result_11752157 = h_11755138;
          break BeforeRet;
          }
          
          h_11755138 = next_try_10615014(h_11755138, (t_11752154.data != null ? (t_11752154.data.length-1) : -1));
        }
    } while(false);
    result_11752157 = subInt(-1, h_11755138);
  } while (false);

  return result_11752157;

}
function HEX5BHEX5DHEX3D_11665311(t_11665317, key_11665318, val_11665319) {
    if (((t_11665317.data != null ? t_11665317.data.length : 0) == 0)) {
    if (!(is_power_of_two_8715029(64))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    t_11665317.counter = 0;
    t_11665317.data = new Array(64); for (var i=0;i<64;++i) {t_11665317.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    t_11665317.first = -1;
    t_11665317.last = -1;
    }
    
    var hc_11690601 = [0];
    var index_11700620 = raw_get_11690621(t_11665317, key_11665318, hc_11690601, 0);
    if ((0 <= index_11700620)) {
    t_11665317.data[chckIndx(index_11700620, 0, (t_11665317.data != null ? t_11665317.data.length : 0)+0-1)-0].Field3 = val_11665319;
    }
    else {
      if (((t_11665317.data != null ? t_11665317.data.length : 0) == 0)) {
      if (!(is_power_of_two_8715029(64))) {
      failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
      }
      
      t_11665317.counter = 0;
      t_11665317.data = new Array(64); for (var i=0;i<64;++i) {t_11665317.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}      t_11665317.first = -1;
      t_11665317.last = -1;
      }
      
      if (must_rehash_11725601(t_11665317)) {
      enlarge_11750180(t_11665317);
      index_11700620 = raw_get_known_hc_11752149(t_11665317, key_11665318, hc_11690601[0]);
      }
      
      index_11700620 = subInt(-1, index_11700620);
      raw_insert_11751349(t_11665317, t_11665317, "data", key_11665318, val_11665319, hc_11690601[0], index_11700620);
      t_11665317.counter = addInt(t_11665317.counter, 1);
    }
    

  
}
function add_11655222(obj_11655224, key_11655225, val_11655226) {
    var Tmp1;

    if (!((obj_11655224.kind == 5))) {
    failed_assert_impl_102680(makeNimstrLit("json.nim(277, 10) `obj.kind == JObject` "));
    }
    
    var Tmp1 = obj_11655224;
    if (ConstSet3[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
    HEX5BHEX5DHEX3D_11665311(Tmp1.fields, key_11655225, val_11655226);

  
}
function new_jstring_11596086(s_11596088) {
  var result_11596089 = null;

    result_11596089 = {kind: 4, str: nimCopy(null, s_11596088, NTI112), num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};

  return result_11596089;

}
function new_jarray_11615657() {
  var result_11615659 = null;

    result_11615659 = {kind: 6, elems: [], str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}};

  return result_11615659;

}
function add_11645020(father_11645022, child_11645023) {
    var Tmp1;
    var Tmp2;

    if (!((father_11645022.kind == 6))) {
    failed_assert_impl_102680(makeNimstrLit("json.nim(272, 10) `father.kind == JArray` "));
    }
    
    var Tmp1 = father_11645022;
    if (ConstSet4[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'elems\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
    if ((Tmp2 = Tmp1.elems, Tmp2) != null) { Tmp2.push(child_11645023); } else { Tmp2 = [child_11645023]; };

  
}
function len_14465548(t_14465553) {
  var result_14465554 = 0;

    result_14465554 = t_14465553.counter;

  return result_14465554;

}
function new_seq_14475256(len_14475259) {
  var result_14475261 = null;

    result_14475261 = new Array(len_14475259); for (var i=0;i<len_14475259;++i) {result_14475261[i]=null;}
  return result_14475261;

}
function new_seq_610232(len_610235) {
  var result_610237 = null;

    result_610237 = new Array(len_610235); for (var i=0;i<len_610235;++i) {result_610237[i]=null;}
  return result_610237;

}
function parse_saturated_natural_8595017(s_8595019, b_8595021, b_8595021_Idx, start_8595022) {
      var Tmp1;
          var Tmp4;

  var result_8595024 = 0;

    var i_8595025 = start_8595022;
    if (((i_8595025 < (s_8595019 != null ? s_8595019.length : 0)) && (s_8595019[chckIndx(i_8595025, 0, (s_8595019 != null ? s_8595019.length : 0)+0-1)-0] == 43))) {
    i_8595025 = addInt(i_8595025, 1);
    }
    
      if (!(i_8595025 < (s_8595019 != null ? s_8595019.length : 0))) Tmp1 = false; else {        Tmp1 = (ConstSet9[s_8595019[chckIndx(i_8595025, 0, (s_8595019 != null ? s_8595019.length : 0)+0-1)-0]] != undefined);      }    if (Tmp1) {
    b_8595021[b_8595021_Idx] = 0;
    L2: do {
        L3: while (true) {
          if (!(i_8595025 < (s_8595019 != null ? s_8595019.length : 0))) Tmp4 = false; else {            Tmp4 = (ConstSet10[s_8595019[chckIndx(i_8595025, 0, (s_8595019 != null ? s_8595019.length : 0)+0-1)-0]] != undefined);          }        if (!Tmp4) break L3;
          var c_8605016 = subInt(s_8595019[chckIndx(i_8595025, 0, (s_8595019 != null ? s_8595019.length : 0)+0-1)-0], 48);
          if ((b_8595021[b_8595021_Idx] <= divInt(subInt(2147483647, c_8605016), 10))) {
          b_8595021[b_8595021_Idx] = addInt(mulInt(b_8595021[b_8595021_Idx], 10), c_8605016);
          }
          else {
            b_8595021[b_8595021_Idx] = 2147483647;
          }
          
          i_8595025 = addInt(i_8595025, 1);
          L5: do {
              L6: while (true) {
              if (!((i_8595025 < (s_8595019 != null ? s_8595019.length : 0)) && (s_8595019[chckIndx(i_8595025, 0, (s_8595019 != null ? s_8595019.length : 0)+0-1)-0] == 95))) break L6;
                i_8595025 = addInt(i_8595025, 1);
              }
          } while(false);
        }
    } while(false);
    result_8595024 = subInt(i_8595025, start_8595022);
    }
    

  return result_8595024;

}
function HEX5BHEX5D_4245068(s_4245072, x_4245074) {
  var result_4245075 = null;

    var a_4245201 = x_4245074.a;
    var l_4245401 = addInt(subInt(subInt((s_4245072 != null ? s_4245072.length : 0), x_4245074.b), a_4245201), 1);
    result_4245075 = nimCopy(null, mnewString(chckRange(l_4245401, 0, 2147483647)), NTI112);
    L1: do {
      var i_4245409 = 0;
      var i_15085644 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_15085644 < l_4245401)) break L3;
            i_4245409 = i_15085644;
            result_4245075[chckIndx(i_4245409, 0, (result_4245075 != null ? result_4245075.length : 0)+0-1)-0] = s_4245072[chckIndx(addInt(i_4245409, a_4245201), 0, (s_4245072 != null ? s_4245072.length : 0)+0-1)-0];
            i_15085644 = addInt(i_15085644, 1);
          }
      } while(false);
    } while(false);

  return result_4245075;

}
function HEX2EHEX2E_4245001(a_4245006, b_4245008) {
  var result_4245014 = {a: 0, b: 0};

    nimCopy(result_4245014, {a: a_4245006, b: b_4245008}, NTI4245011);

  return result_4245014;

}
function parse_standard_format_specifier_12185322(s_12185324, start_12185325, ignore_unknown_suffix_12185327) {
      var Tmp1;
      var Tmp2;
      var Tmp3;

  var result_12185328 = {fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0};

    result_12185328.fill = 32;
    result_12185328.align = 0;
    result_12185328.sign = 45;
    var i_12185331 = start_12185325;
    if (((addInt(i_12185331, 1) < (s_12185324 != null ? s_12185324.length : 0)) && (ConstSet5[s_12185324[chckIndx(addInt(i_12185331, 1), 0, (s_12185324 != null ? s_12185324.length : 0)+0-1)-0]] != undefined))) {
    result_12185328.fill = s_12185324[chckIndx(i_12185331, 0, (s_12185324 != null ? s_12185324.length : 0)+0-1)-0];
    result_12185328.align = s_12185324[chckIndx(addInt(i_12185331, 1), 0, (s_12185324 != null ? s_12185324.length : 0)+0-1)-0];
    i_12185331 = addInt(i_12185331, 2);
    }
    else {
    if (((i_12185331 < (s_12185324 != null ? s_12185324.length : 0)) && (ConstSet6[s_12185324[chckIndx(i_12185331, 0, (s_12185324 != null ? s_12185324.length : 0)+0-1)-0]] != undefined))) {
    result_12185328.align = s_12185324[chckIndx(i_12185331, 0, (s_12185324 != null ? s_12185324.length : 0)+0-1)-0];
    i_12185331 = addInt(i_12185331, 1);
    }
    }
    if (((i_12185331 < (s_12185324 != null ? s_12185324.length : 0)) && (ConstSet7[s_12185324[chckIndx(i_12185331, 0, (s_12185324 != null ? s_12185324.length : 0)+0-1)-0]] != undefined))) {
    result_12185328.sign = s_12185324[chckIndx(i_12185331, 0, (s_12185324 != null ? s_12185324.length : 0)+0-1)-0];
    i_12185331 = addInt(i_12185331, 1);
    }
    
    if (((i_12185331 < (s_12185324 != null ? s_12185324.length : 0)) && (s_12185324[chckIndx(i_12185331, 0, (s_12185324 != null ? s_12185324.length : 0)+0-1)-0] == 35))) {
    result_12185328.alternateForm = true;
    i_12185331 = addInt(i_12185331, 1);
    }
    
      if (!((addInt(i_12185331, 1) < (s_12185324 != null ? s_12185324.length : 0)) && (s_12185324[chckIndx(i_12185331, 0, (s_12185324 != null ? s_12185324.length : 0)+0-1)-0] == 48))) Tmp1 = false; else {        Tmp1 = (ConstSet8[s_12185324[chckIndx(addInt(i_12185331, 1), 0, (s_12185324 != null ? s_12185324.length : 0)+0-1)-0]] != undefined);      }    if (Tmp1) {
    result_12185328.padWithZero = true;
    i_12185331 = addInt(i_12185331, 1);
    }
    
    var parsed_length_12205015 = parse_saturated_natural_8595017(s_12185324, result_12185328, "minimumWidth", i_12185331);
    i_12185331 = addInt(i_12185331, parsed_length_12205015);
    if (((i_12185331 < (s_12185324 != null ? s_12185324.length : 0)) && (s_12185324[chckIndx(i_12185331, 0, (s_12185324 != null ? s_12185324.length : 0)+0-1)-0] == 46))) {
    i_12185331 = addInt(i_12185331, 1);
    var parsed_length_b_12205029 = parse_saturated_natural_8595017(s_12185324, result_12185328, "precision", i_12185331);
    i_12185331 = addInt(i_12185331, parsed_length_b_12205029);
    }
    else {
      result_12185328.precision = -1;
    }
    
      if (!(i_12185331 < (s_12185324 != null ? s_12185324.length : 0))) Tmp2 = false; else {        Tmp2 = (ConstSet11[s_12185324[chckIndx(i_12185331, 0, (s_12185324 != null ? s_12185324.length : 0)+0-1)-0]] != undefined);      }    if (Tmp2) {
    result_12185328.typ = s_12185324[chckIndx(i_12185331, 0, (s_12185324 != null ? s_12185324.length : 0)+0-1)-0];
    i_12185331 = addInt(i_12185331, 1);
    }
    
    result_12185328.endPosition = i_12185331;
      if (!!((i_12185331 == (s_12185324 != null ? s_12185324.length : 0)))) Tmp3 = false; else {        Tmp3 = !(ignore_unknown_suffix_12185327);      }    if (Tmp3) {
    raiseException({message: (makeNimstrLit("invalid format string, cannot parse: ") || []).concat(HEX5BHEX5D_4245068(s_12185324, HEX2EHEX2E_4245001(i_12185331, 1)) || []), parent: null, m_type: NTI6243, name: null, trace: null, up: null}, "ValueError");
    }
    

  return result_12185328;

}
function nsuformatBiggestFloat(f_9580221, format_9580222, precision_9580227, decimal_sep_9580228) {
  var result_9580229 = null;

    var precision_9580401 = precision_9580227;
    if ((precision_9580401 == -1)) {
    precision_9580401 = 6;
    }
    
    var res_9580402 = null;
    switch (format_9580222) {
    case 0:
      res_9580402 = f_9580221.toString();
      break;
    case 1:
      res_9580402 = f_9580221.toFixed(precision_9580401);
      break;
    case 2:
      res_9580402 = f_9580221.toExponential(precision_9580401);
      break;
    }
    result_9580229 = nimCopy(null, cstrToNimstr(res_9580402), NTI112);
    if (((1.0000000000000000e+000 / f_9580221) == -Infinity)) {
    result_9580229 = nimCopy(null, (makeNimstrLit("-") || []).concat(cstrToNimstr(res_9580402) || []), NTI112);
    }
    
    L1: do {
      var i_9580410 = 0;
      var colontmp__15085649 = 0;
      colontmp__15085649 = (result_9580229 != null ? result_9580229.length : 0);
      var i_15085650 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_15085650 < colontmp__15085649)) break L3;
            i_9580410 = i_15085650;
            if ((ConstSet12[result_9580229[chckIndx(i_9580410, 0, (result_9580229 != null ? result_9580229.length : 0)+0-1)-0]] != undefined)) {
            result_9580229[chckIndx(i_9580410, 0, (result_9580229 != null ? result_9580229.length : 0)+0-1)-0] = decimal_sep_9580228;
            }
            
            i_15085650 = addInt(i_15085650, 1);
          }
      } while(false);
    } while(false);

  return result_9580229;

}
function insert_335401(x_335404, x_335404_Idx, item_335405, i_335406) {
    var xl_335407 = (x_335404[x_335404_Idx] != null ? x_335404[x_335404_Idx].length : 0);
    (x_335404[x_335404_Idx] == null ? x_335404[x_335404_Idx] = mnewString(chckRange(addInt(xl_335407, (item_335405 != null ? item_335405.length : 0)), 0, 2147483647)) : x_335404[x_335404_Idx].length = chckRange(addInt(xl_335407, (item_335405 != null ? item_335405.length : 0)), 0, 2147483647));
    var j_335408 = subInt(xl_335407, 1);
    L1: do {
        L2: while (true) {
        if (!(i_335406 <= j_335408)) break L2;
          x_335404[x_335404_Idx][chckIndx(addInt(j_335408, (item_335405 != null ? item_335405.length : 0)), 0, (x_335404[x_335404_Idx] != null ? x_335404[x_335404_Idx].length : 0)+0-1)-0] = x_335404[x_335404_Idx][chckIndx(j_335408, 0, (x_335404[x_335404_Idx] != null ? x_335404[x_335404_Idx].length : 0)+0-1)-0];
          j_335408 = subInt(j_335408, 1);
        }
    } while(false);
    j_335408 = 0;
    L3: do {
        L4: while (true) {
        if (!(j_335408 < (item_335405 != null ? item_335405.length : 0))) break L4;
          x_335404[x_335404_Idx][chckIndx(addInt(j_335408, i_335406), 0, (x_335404[x_335404_Idx] != null ? x_335404[x_335404_Idx].length : 0)+0-1)-0] = item_335405[chckIndx(j_335408, 0, (item_335405 != null ? item_335405.length : 0)+0-1)-0];
          j_335408 = addInt(j_335408, 1);
        }
    } while(false);

  
}
function nsuRepeatChar(c_9295048, count_9295049) {
  var result_9295050 = null;

    result_9295050 = nimCopy(null, mnewString(count_9295049), NTI112);
    L1: do {
      var i_9295059 = 0;
      var colontmp__15085655 = 0;
      colontmp__15085655 = subInt(count_9295049, 1);
      var res_15085656 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_15085656 <= colontmp__15085655)) break L3;
            i_9295059 = res_15085656;
            result_9295050[chckIndx(i_9295059, 0, (result_9295050 != null ? result_9295050.length : 0)+0-1)-0] = c_9295048;
            res_15085656 = addInt(res_15085656, 1);
          }
      } while(false);
    } while(false);

  return result_9295050;

}
function validate_utf8_1160229(s_1160231) {
            var Tmp3;
            var Tmp4;
            var Tmp5;
            var Tmp6;
            var Tmp7;
            var Tmp8;

  var result_1160232 = 0;

  BeforeRet: do {
    var i_1160234 = 0;
    var l_1160235 = (s_1160231 != null ? s_1160231.length : 0);
    L1: do {
        L2: while (true) {
        if (!(i_1160234 < l_1160235)) break L2;
          if ((s_1160231[chckIndx(i_1160234, 0, (s_1160231 != null ? s_1160231.length : 0)+0-1)-0] <= 127)) {
          i_1160234 = addInt(i_1160234, 1);
          }
          else {
          if ((((s_1160231[chckIndx(i_1160234, 0, (s_1160231 != null ? s_1160231.length : 0)+0-1)-0] >>> 0) >>> 5) == 6)) {
          if ((s_1160231[chckIndx(i_1160234, 0, (s_1160231 != null ? s_1160231.length : 0)+0-1)-0] < 194)) {
          result_1160232 = i_1160234;
          break BeforeRet;
          }
          
            if (!(addInt(i_1160234, 1) < l_1160235)) Tmp3 = false; else {              Tmp3 = (((s_1160231[chckIndx(addInt(i_1160234, 1), 0, (s_1160231 != null ? s_1160231.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);            }          if (Tmp3) {
          i_1160234 = addInt(i_1160234, 2);
          }
          else {
            result_1160232 = i_1160234;
            break BeforeRet;
          }
          
          }
          else {
          if ((((s_1160231[chckIndx(i_1160234, 0, (s_1160231 != null ? s_1160231.length : 0)+0-1)-0] >>> 0) >>> 4) == 14)) {
            if (!(addInt(i_1160234, 2) < l_1160235)) Tmp5 = false; else {              Tmp5 = (((s_1160231[chckIndx(addInt(i_1160234, 1), 0, (s_1160231 != null ? s_1160231.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);            }            if (!Tmp5) Tmp4 = false; else {              Tmp4 = (((s_1160231[chckIndx(addInt(i_1160234, 2), 0, (s_1160231 != null ? s_1160231.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);            }          if (Tmp4) {
          i_1160234 = addInt(i_1160234, 3);
          }
          else {
            result_1160232 = i_1160234;
            break BeforeRet;
          }
          
          }
          else {
          if ((((s_1160231[chckIndx(i_1160234, 0, (s_1160231 != null ? s_1160231.length : 0)+0-1)-0] >>> 0) >>> 3) == 30)) {
            if (!(addInt(i_1160234, 3) < l_1160235)) Tmp8 = false; else {              Tmp8 = (((s_1160231[chckIndx(addInt(i_1160234, 1), 0, (s_1160231 != null ? s_1160231.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);            }            if (!Tmp8) Tmp7 = false; else {              Tmp7 = (((s_1160231[chckIndx(addInt(i_1160234, 2), 0, (s_1160231 != null ? s_1160231.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);            }            if (!Tmp7) Tmp6 = false; else {              Tmp6 = (((s_1160231[chckIndx(addInt(i_1160234, 3), 0, (s_1160231 != null ? s_1160231.length : 0)+0-1)-0] >>> 0) >>> 6) == 2);            }          if (Tmp6) {
          i_1160234 = addInt(i_1160234, 4);
          }
          else {
            result_1160232 = i_1160234;
            break BeforeRet;
          }
          
          }
          else {
            result_1160232 = i_1160234;
            break BeforeRet;
          }
          }}}
        }
    } while(false);
    result_1160232 = -1;
    break BeforeRet;
  } while (false);

  return result_1160232;

}
function nucruneLen(s_918829) {
  var result_918830 = 0;

    var i_918832 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_918832 < (s_918829 != null ? s_918829.length : 0))) break L2;
          if ((s_918829[chckIndx(i_918832, 0, (s_918829 != null ? s_918829.length : 0)+0-1)-0] <= 127)) {
          i_918832 = addInt(i_918832, 1);
          }
          else {
          if ((((s_918829[chckIndx(i_918832, 0, (s_918829 != null ? s_918829.length : 0)+0-1)-0] >>> 0) >>> 5) == 6)) {
          i_918832 = addInt(i_918832, 2);
          }
          else {
          if ((((s_918829[chckIndx(i_918832, 0, (s_918829 != null ? s_918829.length : 0)+0-1)-0] >>> 0) >>> 4) == 14)) {
          i_918832 = addInt(i_918832, 3);
          }
          else {
          if ((((s_918829[chckIndx(i_918832, 0, (s_918829 != null ? s_918829.length : 0)+0-1)-0] >>> 0) >>> 3) == 30)) {
          i_918832 = addInt(i_918832, 4);
          }
          else {
          if ((((s_918829[chckIndx(i_918832, 0, (s_918829 != null ? s_918829.length : 0)+0-1)-0] >>> 0) >>> 2) == 62)) {
          i_918832 = addInt(i_918832, 5);
          }
          else {
          if ((((s_918829[chckIndx(i_918832, 0, (s_918829 != null ? s_918829.length : 0)+0-1)-0] >>> 0) >>> 1) == 126)) {
          i_918832 = addInt(i_918832, 6);
          }
          else {
          i_918832 = addInt(i_918832, 1);
          }
          }}}}}
          result_918830 = addInt(result_918830, 1);
        }
    } while(false);

  return result_918830;

}
function align_string_12185222(s_12185224, minimum_width_12185225, align_12185226, fill_12185227) {
      var Tmp1;

  var result_12185228 = null;

    if ((minimum_width_12185225 == 0)) {
    result_12185228 = nimCopy(null, s_12185224, NTI112);
    }
    else {
      if ((validate_utf8_1160229(s_12185224) == -1)) {
      Tmp1 = nucruneLen(s_12185224);
      }
      else {
      Tmp1 = (s_12185224 != null ? s_12185224.length : 0);
      }
      
      var s_rune_len_12185229 = Tmp1;
      var to_fill_12185230 = subInt(minimum_width_12185225, s_rune_len_12185229);
      if ((to_fill_12185230 <= 0)) {
      result_12185228 = nimCopy(null, s_12185224, NTI112);
      }
      else {
      if (((align_12185226 == 60) || (align_12185226 == 0))) {
      result_12185228 = nimCopy(null, (s_12185224 || []).concat(nsuRepeatChar(fill_12185227, chckRange(to_fill_12185230, 0, 2147483647)) || []), NTI112);
      }
      else {
      if ((align_12185226 == 94)) {
      var half_12185231 = divInt(to_fill_12185230, 2);
      result_12185228 = nimCopy(null, (nsuRepeatChar(fill_12185227, chckRange(half_12185231, 0, 2147483647)) || []).concat(s_12185224 || [],nsuRepeatChar(fill_12185227, chckRange(subInt(to_fill_12185230, half_12185231), 0, 2147483647)) || []), NTI112);
      }
      else {
        result_12185228 = nimCopy(null, (nsuRepeatChar(fill_12185227, chckRange(to_fill_12185230, 0, 2147483647)) || []).concat(s_12185224 || []), NTI112);
      }
      }}
    }
    

  return result_12185228;

}
function nsuToUpperAsciiChar(c_8810016) {
  var result_8810017 = 0;

    if ((ConstSet14[c_8810016] != undefined)) {
    result_8810017 = chckRange(subInt(c_8810016, 32), 0, 255);
    }
    else {
      result_8810017 = c_8810016;
    }
    

  return result_8810017;

}
function nsuToUpperAsciiStr(s_8815037) {
  var result_8815038 = null;

    result_8815038 = nimCopy(null, mnewString(chckRange((s_8815037 != null ? s_8815037.length : 0), 0, 2147483647)), NTI112);
    L1: do {
      var i_8815039 = 0;
      var colontmp__12437686 = 0;
      colontmp__12437686 = subInt((s_8815037 != null ? s_8815037.length : 0), 1);
      var res_12437687 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12437687 <= colontmp__12437686)) break L3;
            i_8815039 = res_12437687;
            result_8815038[chckIndx(i_8815039, 0, (result_8815038 != null ? result_8815038.length : 0)+0-1)-0] = nsuToUpperAsciiChar(s_8815037[chckIndx(i_8815039, 0, (s_8815037 != null ? s_8815037.length : 0)+0-1)-0]);
            res_12437687 = addInt(res_12437687, 1);
          }
      } while(false);
    } while(false);

  return result_8815038;

}
function format_value_14500001(result_14500004, result_14500004_Idx, value_14500005, specifier_14500006) {
    var Tmp1;

  BeforeRet: do {
    if (((specifier_14500006 != null ? specifier_14500006.length : 0) == 0)) {
    if (result_14500004[result_14500004_Idx] != null) { result_14500004[result_14500004_Idx] = (result_14500004[result_14500004_Idx]).concat(cstrToNimstr((value_14500005)+"")); } else { result_14500004[result_14500004_Idx] = cstrToNimstr((value_14500005)+"").slice(); };
    break BeforeRet;
    }
    
    var spec_14500007 = parse_standard_format_specifier_12185322(specifier_14500006, 0, false);
    var fmode_14500008 = 0;
    switch (spec_14500007.typ) {
    case 101:
    case 69:
      fmode_14500008 = 2;
      break;
    case 102:
    case 70:
      fmode_14500008 = 1;
      break;
    case 103:
    case 71:
      fmode_14500008 = 0;
      break;
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'e\', \'E\', \'f\', \'F\', \'g\', \'G\' but got: ") || []).concat([spec_14500007.typ]), parent: null, m_type: NTI6243, name: null, trace: null, up: null}, "ValueError");
      break;
    }
    var f_14505002 = [nsuformatBiggestFloat(value_14500005, fmode_14500008, chckRange(spec_14500007.precision, -1, 32), 46)];
    var sign_14505003 = false;
    if ((0.0 <= value_14500005)) {
    if (!((spec_14500007.sign == 45))) {
    sign_14505003 = true;
    if ((value_14500005 == 0.0)) {
    if (((1.0000000000000000e+000 / value_14500005) == Infinity)) {
    insert_335401(f_14505002, 0, nimCharToStr(spec_14500007.sign), 0);
    }
    
    }
    else {
    insert_335401(f_14505002, 0, nimCharToStr(spec_14500007.sign), 0);
    }
    
    }
    
    }
    else {
      sign_14505003 = true;
    }
    
    if (spec_14500007.padWithZero) {
    var sign_str_14505006 = [];
    if (sign_14505003) {
    sign_str_14505006 = nimCopy(null, nimCharToStr(f_14505002[0][chckIndx(0, 0, (f_14505002[0] != null ? f_14505002[0].length : 0)+0-1)-0]), NTI112);
    f_14505002[0] = nimCopy(null, HEX5BHEX5D_4245068(f_14505002[0], HEX2EHEX2E_4245001(1, 1)), NTI112);
    }
    
    var to_fill_14515040 = subInt(subInt(spec_14500007.minimumWidth, (f_14505002[0] != null ? f_14505002[0].length : 0)), (sign_14505003 ? 1:0));
    if ((0 < to_fill_14515040)) {
    f_14505002[0] = nimCopy(null, (nsuRepeatChar(48, chckRange(to_fill_14515040, 0, 2147483647)) || []).concat(f_14505002[0] || []), NTI112);
    }
    
    if (sign_14505003) {
    f_14505002[0] = nimCopy(null, (sign_str_14505006 || []).concat(f_14505002[0] || []), NTI112);
    }
    
    }
    
    if ((spec_14500007.align == 0)) {
    Tmp1 = 62;
    }
    else {
    Tmp1 = spec_14500007.align;
    }
    
    var align_14515041 = Tmp1;
    var res_14515042 = align_string_12185222(f_14505002[0], spec_14500007.minimumWidth, align_14515041, spec_14500007.fill);
    if ((ConstSet13[spec_14500007.typ] != undefined)) {
    if (result_14500004[result_14500004_Idx] != null) { result_14500004[result_14500004_Idx] = (result_14500004[result_14500004_Idx]).concat(nsuToUpperAsciiStr(res_14515042)); } else { result_14500004[result_14500004_Idx] = nsuToUpperAsciiStr(res_14515042).slice(); };
    }
    else {
    if (result_14500004[result_14500004_Idx] != null) { result_14500004[result_14500004_Idx] = (result_14500004[result_14500004_Idx]).concat(res_14515042); } else { result_14500004[result_14500004_Idx] = res_14515042.slice(); };
    }
    
  } while (false);

  
}
function nsuJoinSep(a_9430018, sep_9430019) {
  var result_9430020 = null;

    if ((0 < (a_9430018 != null ? a_9430018.length : 0))) {
    var l_9435009 = mulInt((sep_9430019 != null ? sep_9430019.length : 0), subInt((a_9430018 != null ? a_9430018.length : 0), 1));
    L1: do {
      var i_9435023 = 0;
      var colontmp__15085681 = 0;
      colontmp__15085681 = (a_9430018 != null ? (a_9430018.length-1) : -1);
      var res_15085682 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_15085682 <= colontmp__15085681)) break L3;
            i_9435023 = res_15085682;
            l_9435009 = addInt(l_9435009, (a_9430018[chckIndx(i_9435023, 0, (a_9430018 != null ? a_9430018.length : 0)+0-1)-0] != null ? a_9430018[chckIndx(i_9435023, 0, (a_9430018 != null ? a_9430018.length : 0)+0-1)-0].length : 0));
            res_15085682 = addInt(res_15085682, 1);
          }
      } while(false);
    } while(false);
    result_9430020 = nimCopy(null, mnewString(0), NTI112);
    if (result_9430020 != null) { result_9430020 = (result_9430020).concat(a_9430018[chckIndx(0, 0, (a_9430018 != null ? a_9430018.length : 0)+0-1)-0]); } else { result_9430020 = a_9430018[chckIndx(0, 0, (a_9430018 != null ? a_9430018.length : 0)+0-1)-0].slice(); };
    L4: do {
      var i_9435043 = 0;
      var colontmp__15085688 = 0;
      colontmp__15085688 = (a_9430018 != null ? (a_9430018.length-1) : -1);
      var res_15085689 = 1;
      L5: do {
          L6: while (true) {
          if (!(res_15085689 <= colontmp__15085688)) break L6;
            i_9435043 = res_15085689;
            if (result_9430020 != null) { result_9430020 = (result_9430020).concat(sep_9430019); } else { result_9430020 = sep_9430019.slice(); };
            if (result_9430020 != null) { result_9430020 = (result_9430020).concat(a_9430018[chckIndx(i_9435043, 0, (a_9430018 != null ? a_9430018.length : 0)+0-1)-0]); } else { result_9430020 = a_9430018[chckIndx(i_9435043, 0, (a_9430018 != null ? a_9430018.length : 0)+0-1)-0].slice(); };
            res_15085689 = addInt(res_15085689, 1);
          }
      } while(false);
    } while(false);
    }
    else {
      result_9430020 = nimCopy(null, [], NTI112);
    }
    

  return result_9430020;

}
function sectors2json_14445614(x_14445623) {
  var result_14445624 = null;

    var cnt_14445626 = 0;
    var len_obj_14445759 = len_14120198(x_14445623);
    result_14445624 = {};
    L1: do {
      var k_14445767 = null;
      var v_14445768 = null;
      var l_15085626 = len_14120198(x_14445623);
      if ((0 < x_14445623.counter)) {
      var h_15085627 = x_14445623.first;
      L2: do {
          L3: while (true) {
          if (!(0 <= h_15085627)) break L3;
            var nxt_15085629 = x_14445623.data[chckIndx(h_15085627, 0, (x_14445623.data != null ? x_14445623.data.length : 0)+0-1)-0].Field1;
            if (is_filled_10612018(x_14445623.data[chckIndx(h_15085627, 0, (x_14445623.data != null ? x_14445623.data.length : 0)+0-1)-0].Field0)) {
            k_14445767 = x_14445623.data[chckIndx(h_15085627, 0, (x_14445623.data != null ? x_14445623.data.length : 0)+0-1)-0].Field2;
            v_14445768 = x_14445623.data[chckIndx(h_15085627, 0, (x_14445623.data != null ? x_14445623.data.length : 0)+0-1)-0].Field3;
            var o_s_14445769 = {};
            o_s_14445769["postalCode"] = (toJSStr(v_14445768.postalCode));
            o_s_14445769["district"] = (toJSStr(v_14445768.district));
            o_s_14445769["folkDistrict"] = (toJSStr(v_14445768.folkDistrict));
            o_s_14445769["city"] = (toJSStr(v_14445768.city));
            o_s_14445769["pFix"] = (v_14445768.pFix);
            o_s_14445769["streets"] = {};
            L4: do {
              var k_str_14475244 = null;
              var v_str_14475245 = null;
              var l_15085622 = len_14465548(v_14445768.streets);
              if ((0 < v_14445768.streets.counter)) {
              var h_15085623 = v_14445768.streets.first;
              L5: do {
                  L6: while (true) {
                  if (!(0 <= h_15085623)) break L6;
                    var nxt_15085625 = v_14445768.streets.data[chckIndx(h_15085623, 0, (v_14445768.streets.data != null ? v_14445768.streets.data.length : 0)+0-1)-0].Field1;
                    if (is_filled_10612018(v_14445768.streets.data[chckIndx(h_15085623, 0, (v_14445768.streets.data != null ? v_14445768.streets.data.length : 0)+0-1)-0].Field0)) {
                    k_str_14475244 = v_14445768.streets.data[chckIndx(h_15085623, 0, (v_14445768.streets.data != null ? v_14445768.streets.data.length : 0)+0-1)-0].Field2;
                    v_str_14475245 = v_14445768.streets.data[chckIndx(h_15085623, 0, (v_14445768.streets.data != null ? v_14445768.streets.data.length : 0)+0-1)-0].Field3;
                    var seq_lnk_14475298 = new_seq_14475256(0);
                    L7: do {
                      var str_lnk_14485214 = null;
                      var i_15085619 = 0;
                      var l_15085620 = (v_str_14475245 != null ? v_str_14475245.length : 0);
                      L8: do {
                          L9: while (true) {
                          if (!(i_15085619 < l_15085620)) break L9;
                            str_lnk_14485214 = v_str_14475245[chckIndx(i_15085619, 0, (v_str_14475245 != null ? v_str_14475245.length : 0)+0-1)-0];
                            var lnk_o_14485215 = {};
                            lnk_o_14485215["linkId"] = (str_lnk_14485214.linkId);
                            lnk_o_14485215["name"] = (toJSStr(str_lnk_14485214.name));
                            lnk_o_14485215["cityId"] = (str_lnk_14485214.cityId);
                            lnk_o_14485215["districtId"] = (str_lnk_14485214.districtId);
                            lnk_o_14485215["postalCode"] = (toJSStr(str_lnk_14485214.postalCode));
                            lnk_o_14485215["neighborLinks"] = (str_lnk_14485214.neighborLinks);
                            var gms_14495427 = new_seq_610232(0);
                            L10: do {
                              var g_14495434 = null;
                              var i_15085615 = 0;
                              var l_15085616 = (str_lnk_14485214.geometry != null ? str_lnk_14485214.geometry.length : 0);
                              L11: do {
                                  L12: while (true) {
                                  if (!(i_15085615 < l_15085616)) break L12;
                                    g_14495434 = str_lnk_14485214.geometry[chckIndx(i_15085615, 0, (str_lnk_14485214.geometry != null ? str_lnk_14485214.geometry.length : 0)+0-1)-0];
                                    var lat_14495435 = g_14495434.lat;
                                    var lng_14495436 = g_14495434.lng;
                                    var fmt_res_14495440 = [mnewString(0)];
                                    format_value_14500001(fmt_res_14495440, 0, lat_14495435, makeNimstrLit("0.5f"));
                                    var Tmp13 = nimCopy(null, fmt_res_14495440[0], NTI112);
                                    if (gms_14495427 != null) { gms_14495427.push(Tmp13); } else { gms_14495427 = [Tmp13]; };
                                    var fmt_res_14515086 = [mnewString(0)];
                                    format_value_14500001(fmt_res_14515086, 0, lng_14495436, makeNimstrLit("0.5f"));
                                    var Tmp14 = nimCopy(null, fmt_res_14515086[0], NTI112);
                                    if (gms_14495427 != null) { gms_14495427.push(Tmp14); } else { gms_14495427 = [Tmp14]; };
                                    i_15085615 = addInt(i_15085615, 1);
                                    if (!(((str_lnk_14485214.geometry != null ? str_lnk_14485214.geometry.length : 0) == l_15085616))) {
                                    failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                    }
                                    
                                  }
                              } while(false);
                            } while(false);
                            lnk_o_14485215["geometry"] = (toJSStr(nsuJoinSep(gms_14495427, makeNimstrLit(","))));
                            lnk_o_14485215["readOnly"] = (str_lnk_14485214.readOnly);
                            lnk_o_14485215["addedToMap"] = (str_lnk_14485214.addedToMap);
                            lnk_o_14485215["addedToSector"] = (str_lnk_14485214.addedToSector);
                            if (seq_lnk_14475298 != null) { seq_lnk_14475298.push(lnk_o_14485215); } else { seq_lnk_14475298 = [lnk_o_14485215]; };
                            i_15085619 = addInt(i_15085619, 1);
                            if (!(((v_str_14475245 != null ? v_str_14475245.length : 0) == l_15085620))) {
                            failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                            }
                            
                          }
                      } while(false);
                    } while(false);
                    o_s_14445769["streets"][toJSStr(k_str_14475244)] = seq_lnk_14475298;
                    if (!((len_14465548(v_14445768.streets) == l_15085622))) {
                    failed_assert_impl_102680(makeNimstrLit("tables.nim(1675, 11) `len(t) == L` the length of the table changed while iterating over it"));
                    }
                    
                    }
                    
                    h_15085623 = nxt_15085625;
                  }
              } while(false);
              }
              
            } while(false);
            o_s_14445769["shownOnMap"] = (v_14445768.shownOnMap);
            o_s_14445769["exclude"] = (v_14445768.exclude);
            result_14445624[toJSStr(k_14445767)] = o_s_14445769;
            if (!((len_14120198(x_14445623) == l_15085626))) {
            failed_assert_impl_102680(makeNimstrLit("tables.nim(1675, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_15085627 = nxt_15085629;
          }
      } while(false);
      }
      
    } while(false);

  return result_14445624;

}
function save_14526436() {
    if ((ministry_area_13820631[0] == null)) {
    ministry_area_13820631[0] = {name: nimCopy(null, name_area_13820632[0], NTI112), cities: init_ordered_table_14526445(64)};
    }
    
    HEX5BHEX5DHEX3D_14545730(ministry_area_13820631[0].cities, addr_city_13840633[0], {allLinks: nimCopy(null, all_links_13740629[0], NTI13701128), allStreets: nimCopy(null, all_streets_13760629[0], NTI13701151), cachedTiles: nimCopy(null, cached_tiles_13780629[0], NTI13701177), allSectors: nimCopy(null, all_sectors_13800629[0], NTI13701200), lastPostfix: nimCopy(null, last_postfix_13820629[0], NTI13701226)});
    var ser_14635695 = JSON.stringify(ministry_area_13820631[0]);
    var fname_14635696 = (addr_city_13840633[0] || []).concat(makeNimstrLit("_") || [],HEX24_10510125(now_9985436()) || [],makeNimstrLit(".json") || []);
    save_func_14305031(ser_14635695, fname_14635696);
    var cities_exp_14635697 = new_jobject_11596235();
    var ministry_area_exp_14635698 = new_jobject_11596235();
    add_11655222(ministry_area_exp_14635698, makeNimstrLit("name"), new_jstring_11596086(name_area_13820632[0]));
    var all_sectors_exp_14635700 = new_jarray_11615657();
    L1: do {
      var k_14635708 = null;
      var v_14635709 = null;
      var l_15085565 = len_14120198(all_sectors_13800629[0]);
      if ((0 < all_sectors_13800629[0].counter)) {
      var h_15085566 = all_sectors_13800629[0].first;
      L2: do {
          L3: while (true) {
          if (!(0 <= h_15085566)) break L3;
            var nxt_15085568 = all_sectors_13800629[0].data[chckIndx(h_15085566, 0, (all_sectors_13800629[0].data != null ? all_sectors_13800629[0].data.length : 0)+0-1)-0].Field1;
            if (is_filled_10612018(all_sectors_13800629[0].data[chckIndx(h_15085566, 0, (all_sectors_13800629[0].data != null ? all_sectors_13800629[0].data.length : 0)+0-1)-0].Field0)) {
            k_14635708 = all_sectors_13800629[0].data[chckIndx(h_15085566, 0, (all_sectors_13800629[0].data != null ? all_sectors_13800629[0].data.length : 0)+0-1)-0].Field2;
            v_14635709 = all_sectors_13800629[0].data[chckIndx(h_15085566, 0, (all_sectors_13800629[0].data != null ? all_sectors_13800629[0].data.length : 0)+0-1)-0].Field3;
            var s_14635710 = new_jobject_11596235();
            add_11655222(s_14635710, makeNimstrLit("city"), new_jstring_11596086(v_14635709.city));
            add_11645020(all_sectors_exp_14635700, s_14635710);
            if (!((len_14120198(all_sectors_13800629[0]) == l_15085565))) {
            failed_assert_impl_102680(makeNimstrLit("tables.nim(1675, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_15085566 = nxt_15085568;
          }
      } while(false);
      }
      
    } while(false);
    var fname_exp_14635713 = (addr_city_13840633[0] || []).concat(makeNimstrLit("_Exp_") || [],HEX24_10510125(now_9985436()) || [],makeNimstrLit(".json") || []);
    var str_r_14635714 = sectors2json_14445614(all_sectors_13800629[0]);
    save_func_14305031(JSON.stringify(str_r_14635714), fname_exp_14635713);

  
}
function set_attr_12475105(n_12475107, key_12475108, val_12475109) {
  BeforeRet: do {
    if (((n_12475107.attrs != null ? n_12475107.attrs.length : 0) == 0)) {
    n_12475107.attrs = nimCopy(null, [key_12475108, val_12475109], NTI12475125);
    }
    else {
      L1: do {
        var i_12475138 = 0;
        var colontmp__15085695 = 0;
        colontmp__15085695 = subInt((n_12475107.attrs != null ? n_12475107.attrs.length : 0), 2);
        var res_15085696 = 0;
        L2: do {
            L3: while (true) {
            if (!(res_15085696 <= colontmp__15085695)) break L3;
              i_12475138 = res_15085696;
              if ((n_12475107.attrs[chckIndx(i_12475138, 0, (n_12475107.attrs != null ? n_12475107.attrs.length : 0)+0-1)-0] == key_12475108)) {
              n_12475107.attrs[chckIndx(addInt(i_12475138, 1), 0, (n_12475107.attrs != null ? n_12475107.attrs.length : 0)+0-1)-0] = val_12475109;
              break BeforeRet;
              }
              
              res_15085696 = addInt(res_15085696, 2);
            }
        } while(false);
      } while(false);
      if (n_12475107.attrs != null) { n_12475107.attrs.push(key_12475108); } else { n_12475107.attrs = [key_12475108]; };
      if (n_12475107.attrs != null) { n_12475107.attrs.push(val_12475109); } else { n_12475107.attrs = [val_12475109]; };
    }
    
  } while (false);

  
}
function raw_get_14145231(t_14145235, key_14145236, hc_14145237, hc_14145237_Idx) {
            var Tmp3;

  var result_14145238 = 0;

  BeforeRet: do {
    hc_14145237[hc_14145237_Idx] = hash_10590214(key_14145236);
    if ((hc_14145237[hc_14145237_Idx] == 0)) {
    hc_14145237[hc_14145237_Idx] = 314159265;
    }
    
    if (((t_14145235.data != null ? t_14145235.data.length : 0) == 0)) {
    result_14145238 = -1;
    break BeforeRet;
    }
    
    var h_14155138 = (hc_14145237[hc_14145237_Idx] & (t_14145235.data != null ? (t_14145235.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_10612018(t_14145235.data[chckIndx(h_14155138, 0, (t_14145235.data != null ? t_14145235.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_14145235.data[chckIndx(h_14155138, 0, (t_14145235.data != null ? t_14145235.data.length : 0)+0-1)-0].Field0 == hc_14145237[hc_14145237_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_14145235.data[chckIndx(h_14155138, 0, (t_14145235.data != null ? t_14145235.data.length : 0)+0-1)-0].Field2, key_14145236);            }          if (Tmp3) {
          result_14145238 = h_14155138;
          break BeforeRet;
          }
          
          h_14155138 = next_try_10615014(h_14155138, (t_14145235.data != null ? (t_14145235.data.length-1) : -1));
        }
    } while(false);
    result_14145238 = subInt(-1, h_14155138);
  } while (false);

  return result_14145238;

}
function HEX5BHEX5D_14145219(t_14145225, key_14145226) {
  var result_14145228 = null;
  var result_14145228_Idx = 0;

    var hc_14145229 = [0];
    var index_14145230 = raw_get_14145231(t_14145225, key_14145226, hc_14145229, 0);
    if ((0 <= index_14145230)) {
    result_14145228 = t_14145225.data[chckIndx(index_14145230, 0, (t_14145225.data != null ? t_14145225.data.length : 0)+0-1)-0]; result_14145228_Idx = "Field3";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_14145226 || []), parent: null, m_type: NTI6245, name: null, trace: null, up: null}, "KeyError");
    }
    

  return [result_14145228, result_14145228_Idx];

}
function raw_get_14195621(t_14195626, key_14195627, hc_14195628, hc_14195628_Idx) {
            var Tmp3;

  var result_14195629 = 0;

  BeforeRet: do {
    hc_14195628[hc_14195628_Idx] = hash_10590214(key_14195627);
    if ((hc_14195628[hc_14195628_Idx] == 0)) {
    hc_14195628[hc_14195628_Idx] = 314159265;
    }
    
    if (((t_14195626.data != null ? t_14195626.data.length : 0) == 0)) {
    result_14195629 = -1;
    break BeforeRet;
    }
    
    var h_14205138 = (hc_14195628[hc_14195628_Idx] & (t_14195626.data != null ? (t_14195626.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_10612018(t_14195626.data[chckIndx(h_14205138, 0, (t_14195626.data != null ? t_14195626.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_14195626.data[chckIndx(h_14205138, 0, (t_14195626.data != null ? t_14195626.data.length : 0)+0-1)-0].Field0 == hc_14195628[hc_14195628_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_14195626.data[chckIndx(h_14205138, 0, (t_14195626.data != null ? t_14195626.data.length : 0)+0-1)-0].Field2, key_14195627);            }          if (Tmp3) {
          result_14195629 = h_14205138;
          break BeforeRet;
          }
          
          h_14205138 = next_try_10615014(h_14205138, (t_14195626.data != null ? (t_14195626.data.length-1) : -1));
        }
    } while(false);
    result_14195629 = subInt(-1, h_14205138);
  } while (false);

  return result_14195629;

}
function must_rehash_14230601(t_14230604) {
  var result_14230605 = false;

    if (!((t_14230604.counter < (t_14230604.data != null ? t_14230604.data.length : 0)))) {
    failed_assert_impl_102680(makeNimstrLit("hashcommon.nim(33, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_14230605 = ((mulInt((t_14230604.data != null ? t_14230604.data.length : 0), 2) < mulInt(t_14230604.counter, 3)) || (subInt((t_14230604.data != null ? t_14230604.data.length : 0), t_14230604.counter) < 4));

  return result_14230605;

}
function raw_insert_14256359(t_14256365, data_14256368, data_14256368_Idx, key_14256369, val_14256370, hc_14256371, h_14256372) {
    data_14256368[data_14256368_Idx][chckIndx(h_14256372, 0, (data_14256368[data_14256368_Idx] != null ? data_14256368[data_14256368_Idx].length : 0)+0-1)-0].Field2 = nimCopy(null, key_14256369, NTI112);
    data_14256368[data_14256368_Idx][chckIndx(h_14256372, 0, (data_14256368[data_14256368_Idx] != null ? data_14256368[data_14256368_Idx].length : 0)+0-1)-0].Field3 = val_14256370;
    data_14256368[data_14256368_Idx][chckIndx(h_14256372, 0, (data_14256368[data_14256368_Idx] != null ? data_14256368[data_14256368_Idx].length : 0)+0-1)-0].Field0 = hc_14256371;
    data_14256368[data_14256368_Idx][chckIndx(h_14256372, 0, (data_14256368[data_14256368_Idx] != null ? data_14256368[data_14256368_Idx].length : 0)+0-1)-0].Field1 = -1;
    if ((t_14256365.first < 0)) {
    t_14256365.first = h_14256372;
    }
    
    if ((0 <= t_14256365.last)) {
    data_14256368[data_14256368_Idx][chckIndx(t_14256365.last, 0, (data_14256368[data_14256368_Idx] != null ? data_14256368[data_14256368_Idx].length : 0)+0-1)-0].Field1 = h_14256372;
    }
    
    t_14256365.last = h_14256372;

  
}
function enlarge_14255180(t_14255186) {
          var Tmp6;
          var Tmp7;

    var n_14255194 = null;
    n_14255194 = new Array(chckRange(mulInt((t_14255186.data != null ? t_14255186.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_14255186.data != null ? t_14255186.data.length : 0), 2), 0, 2147483647);++i) {n_14255194[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    var h_14255333 = t_14255186.first;
    t_14255186.first = -1;
    t_14255186.last = -1;
    var Tmp1 = t_14255186.data; t_14255186.data = n_14255194; n_14255194 = Tmp1;    L2: do {
        L3: while (true) {
        if (!(0 <= h_14255333)) break L3;
          var nxt_14255496 = n_14255194[chckIndx(h_14255333, 0, (n_14255194 != null ? n_14255194.length : 0)+0-1)-0].Field1;
          var eh_14255652 = n_14255194[chckIndx(h_14255333, 0, (n_14255194 != null ? n_14255194.length : 0)+0-1)-0].Field0;
          if (is_filled_10612018(eh_14255652)) {
          var j_14255659 = (eh_14255652 & (t_14255186.data != null ? (t_14255186.data.length-1) : -1));
          L4: do {
              L5: while (true) {
              if (!is_filled_10612018(t_14255186.data[chckIndx(j_14255659, 0, (t_14255186.data != null ? t_14255186.data.length : 0)+0-1)-0].Field0)) break L5;
                j_14255659 = next_try_10615014(j_14255659, (t_14255186.data != null ? (t_14255186.data.length-1) : -1));
              }
          } while(false);
          Tmp6 = n_14255194[chckIndx(h_14255333, 0, (n_14255194 != null ? n_14255194.length : 0)+0-1)-0].Field2;
          n_14255194[chckIndx(h_14255333, 0, (n_14255194 != null ? n_14255194.length : 0)+0-1)-0].Field2 = genericReset(n_14255194[chckIndx(h_14255333, 0, (n_14255194 != null ? n_14255194.length : 0)+0-1)-0].Field2, NTI112);
          Tmp7 = n_14255194[chckIndx(h_14255333, 0, (n_14255194 != null ? n_14255194.length : 0)+0-1)-0].Field3;
          n_14255194[chckIndx(h_14255333, 0, (n_14255194 != null ? n_14255194.length : 0)+0-1)-0].Field3 = genericReset(n_14255194[chckIndx(h_14255333, 0, (n_14255194 != null ? n_14255194.length : 0)+0-1)-0].Field3, NTI13701022);
          raw_insert_14256359(t_14255186, t_14255186, "data", Tmp6, Tmp7, n_14255194[chckIndx(h_14255333, 0, (n_14255194 != null ? n_14255194.length : 0)+0-1)-0].Field0, j_14255659);
          }
          
          h_14255333 = nxt_14255496;
        }
    } while(false);

  
}
function raw_get_known_hc_14257194(t_14257199, key_14257200, hc_14257201) {
  var result_14257202 = 0;

  BeforeRet: do {
    if (((t_14257199.data != null ? t_14257199.data.length : 0) == 0)) {
    result_14257202 = -1;
    break BeforeRet;
    }
    
    var h_14260138 = (hc_14257201 & (t_14257199.data != null ? (t_14257199.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_10612018(t_14257199.data[chckIndx(h_14260138, 0, (t_14257199.data != null ? t_14257199.data.length : 0)+0-1)-0].Field0)) break L2;
          if (((t_14257199.data[chckIndx(h_14260138, 0, (t_14257199.data != null ? t_14257199.data.length : 0)+0-1)-0].Field0 == hc_14257201) && eqStrings(t_14257199.data[chckIndx(h_14260138, 0, (t_14257199.data != null ? t_14257199.data.length : 0)+0-1)-0].Field2, key_14257200))) {
          result_14257202 = h_14260138;
          break BeforeRet;
          }
          
          h_14260138 = next_try_10615014(h_14260138, (t_14257199.data != null ? (t_14257199.data.length-1) : -1));
        }
    } while(false);
    result_14257202 = subInt(-1, h_14260138);
  } while (false);

  return result_14257202;

}
function HEX5BHEX5DHEX3D_14170347(t_14170353, key_14170354, val_14170355) {
    if (((t_14170353.data != null ? t_14170353.data.length : 0) == 0)) {
    if (!(is_power_of_two_8715029(64))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    t_14170353.counter = 0;
    t_14170353.data = new Array(64); for (var i=0;i<64;++i) {t_14170353.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    t_14170353.first = -1;
    t_14170353.last = -1;
    }
    
    var hc_14195601 = [0];
    var index_14205641 = raw_get_14195621(t_14170353, key_14170354, hc_14195601, 0);
    if ((0 <= index_14205641)) {
    t_14170353.data[chckIndx(index_14205641, 0, (t_14170353.data != null ? t_14170353.data.length : 0)+0-1)-0].Field3 = val_14170355;
    }
    else {
      if (((t_14170353.data != null ? t_14170353.data.length : 0) == 0)) {
      if (!(is_power_of_two_8715029(64))) {
      failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
      }
      
      t_14170353.counter = 0;
      t_14170353.data = new Array(64); for (var i=0;i<64;++i) {t_14170353.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}      t_14170353.first = -1;
      t_14170353.last = -1;
      }
      
      if (must_rehash_14230601(t_14170353)) {
      enlarge_14255180(t_14170353);
      index_14205641 = raw_get_known_hc_14257194(t_14170353, key_14170354, hc_14195601[0]);
      }
      
      index_14205641 = subInt(-1, index_14205641);
      raw_insert_14256359(t_14170353, t_14170353, "data", key_14170354, val_14170355, hc_14195601[0], index_14205641);
      t_14170353.counter = addInt(t_14170353.counter, 1);
    }
    

  
}
function raw_get_14260854(t_14260858, key_14260859, hc_14260860, hc_14260860_Idx) {
            var Tmp3;

  var result_14260861 = 0;

  BeforeRet: do {
    hc_14260860[hc_14260860_Idx] = hash_10590214(key_14260859);
    if ((hc_14260860[hc_14260860_Idx] == 0)) {
    hc_14260860[hc_14260860_Idx] = 314159265;
    }
    
    if (((t_14260858.data != null ? t_14260858.data.length : 0) == 0)) {
    result_14260861 = -1;
    break BeforeRet;
    }
    
    var h_14270138 = (hc_14260860[hc_14260860_Idx] & (t_14260858.data != null ? (t_14260858.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_10612018(t_14260858.data[chckIndx(h_14270138, 0, (t_14260858.data != null ? t_14260858.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_14260858.data[chckIndx(h_14270138, 0, (t_14260858.data != null ? t_14260858.data.length : 0)+0-1)-0].Field0 == hc_14260860[hc_14260860_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_14260858.data[chckIndx(h_14270138, 0, (t_14260858.data != null ? t_14260858.data.length : 0)+0-1)-0].Field2, key_14260859);            }          if (Tmp3) {
          result_14260861 = h_14270138;
          break BeforeRet;
          }
          
          h_14270138 = next_try_10615014(h_14270138, (t_14260858.data != null ? (t_14260858.data.length-1) : -1));
        }
    } while(false);
    result_14260861 = subInt(-1, h_14270138);
  } while (false);

  return result_14260861;

}
function HEX5BHEX5D_14260842(t_14260848, key_14260849) {
  var result_14260851 = null;
  var result_14260851_Idx = 0;

    var hc_14260852 = [0];
    var index_14260853 = raw_get_14260854(t_14260848, key_14260849, hc_14260852, 0);
    if ((0 <= index_14260853)) {
    result_14260851 = t_14260848.data[chckIndx(index_14260853, 0, (t_14260848.data != null ? t_14260848.data.length : 0)+0-1)-0]; result_14260851_Idx = "Field3";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_14260849 || []), parent: null, m_type: NTI6245, name: null, trace: null, up: null}, "KeyError");
    }
    

  return [result_14260851, result_14260851_Idx];

}
function id_14105026(s_14105028) {
  var result_14105029 = null;

    result_14105029 = nimCopy(null, (s_14105028.postalCode || []).concat(makeNimstrLit("-") || [],cstrToNimstr((s_14105028.pFix)+"") || []), NTI112);

  return result_14105029;

}
function name_14101053(s_14101055) {
    var Tmp1;

  var result_14101056 = null;

    if (!(eqStrings(s_14101055.folkDistrict, []))) {
    Tmp1 = s_14101055.folkDistrict;
    }
    else {
    Tmp1 = s_14101055.district;
    }
    
    result_14101056 = nimCopy(null, nucStrip(nsuJoinSep([(s_14101055.postalCode || []).concat(makeNimstrLit("-") || [],cstrToNimstr((s_14101055.pFix)+"") || []), nimCopy(null, s_14101055.city, NTI112), nimCopy(null, Tmp1, NTI112)], makeNimstrLit(" ")), true, true, [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288]), NTI112);

  return result_14101056;

}
function hash_14120041(x_14120043) {
  var result_14120044 = 0;

    result_14120044 = HEX21HEX26_10547244(hash_10590214(id_14105026(x_14120043)), hash_10590214(name_14101053(x_14120043)));
    result_14120044 = HEX21HEX24_10547279(result_14120044);

  return result_14120044;

}
function raw_get_14130379(t_14130383, key_14130384, hc_14130385, hc_14130385_Idx) {
            var Tmp3;

  var result_14130386 = 0;

  BeforeRet: do {
    hc_14130385[hc_14130385_Idx] = hash_14120041(key_14130384);
    if ((hc_14130385[hc_14130385_Idx] == 0)) {
    hc_14130385[hc_14130385_Idx] = 314159265;
    }
    
    if (((t_14130383.data != null ? t_14130383.data.length : 0) == 0)) {
    result_14130386 = -1;
    break BeforeRet;
    }
    
    var h_14140138 = (hc_14130385[hc_14130385_Idx] & (t_14130383.data != null ? (t_14130383.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_10612018(t_14130383.data[chckIndx(h_14140138, 0, (t_14130383.data != null ? t_14130383.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_14130383.data[chckIndx(h_14140138, 0, (t_14130383.data != null ? t_14130383.data.length : 0)+0-1)-0].Field0 == hc_14130385[hc_14130385_Idx])) Tmp3 = false; else {              Tmp3 = (t_14130383.data[chckIndx(h_14140138, 0, (t_14130383.data != null ? t_14130383.data.length : 0)+0-1)-0].Field1 == key_14130384);            }          if (Tmp3) {
          result_14130386 = h_14140138;
          break BeforeRet;
          }
          
          h_14140138 = next_try_10615014(h_14140138, (t_14130383.data != null ? (t_14130383.data.length-1) : -1));
        }
    } while(false);
    result_14130386 = subInt(-1, h_14140138);
  } while (false);

  return result_14130386;

}
function HEX5BHEX5D_14130367(t_14130373, key_14130374) {
  var result_14130376 = null;
  var result_14130376_Idx = 0;

    var hc_14130377 = [0];
    var index_14130378 = raw_get_14130379(t_14130373, key_14130374, hc_14130377, 0);
    if ((0 <= index_14130378)) {
    result_14130376 = t_14130373.data[chckIndx(index_14130378, 0, (t_14130373.data != null ? t_14130373.data.length : 0)+0-1)-0]; result_14130376_Idx = "Field2";
    }
    else {
      raiseException({message: makeNimstrLit("key not found"), parent: null, m_type: NTI6245, name: null, trace: null, up: null}, "KeyError");
    }
    

  return [result_14130376, result_14130376_Idx];

}
function remove_all_sector_from_map_14120062() {
            var Tmp5;
            var Tmp6;

    L1: do {
      var s_14130215 = null;
      var s_14130215_Idx = 0;
      var l_15085720 = len_14120198(all_sectors_13800629[0]);
      if ((0 < all_sectors_13800629[0].counter)) {
      var h_15085721 = all_sectors_13800629[0].first;
      L2: do {
          L3: while (true) {
          if (!(0 <= h_15085721)) break L3;
            var nxt_15085723 = all_sectors_13800629[0].data[chckIndx(h_15085721, 0, (all_sectors_13800629[0].data != null ? all_sectors_13800629[0].data.length : 0)+0-1)-0].Field1;
            if (is_filled_10612018(all_sectors_13800629[0].data[chckIndx(h_15085721, 0, (all_sectors_13800629[0].data != null ? all_sectors_13800629[0].data.length : 0)+0-1)-0].Field0)) {
            s_14130215 = all_sectors_13800629[0].data[chckIndx(h_15085721, 0, (all_sectors_13800629[0].data != null ? all_sectors_13800629[0].data.length : 0)+0-1)-0]; s_14130215_Idx = "Field3";
            s_14130215[s_14130215_Idx].shownOnMap = false;
++excHandler;
            Tmp5 = framePtr;
            try {
            (Tmp6 = HEX5BHEX5D_14130367(sector_grp_13840629[0], s_14130215[s_14130215_Idx]), Tmp6)[0][Tmp6[1]].removeAll();
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp5;
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp5;
            }
            if (!((len_14120198(all_sectors_13800629[0]) == l_15085720))) {
            failed_assert_impl_102680(makeNimstrLit("tables.nim(1761, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_15085721 = nxt_15085723;
          }
      } while(false);
      }
      
    } while(false);
    redraw_13280414(kxi_12727284[0]);

  
}
function load_14145065(d_14145067) {
    var Tmp2;
    var Tmp3;
            var Tmp8;
            var Tmp9;
            var Tmp10;

++excHandler;
    Tmp2 = framePtr;
    try {
    var city_14160028 = (Tmp3 = HEX5BHEX5D_14145219(d_14145067.cities, addr_city_13840633[0]), Tmp3)[0][Tmp3[1]];
    nimCopy(all_links_13740629[0], city_14160028.allLinks, NTI13701128);
    nimCopy(all_streets_13760629[0], city_14160028.allStreets, NTI13701151);
    nimCopy(cached_tiles_13780629[0], city_14160028.cachedTiles, NTI13701177);
    L4: do {
      var k_14170229 = null;
      var v_14170230 = null;
      var l_15085706 = len_14120198(city_14160028.allSectors);
      if ((0 < city_14160028.allSectors.counter)) {
      var h_15085707 = city_14160028.allSectors.first;
      L5: do {
          L6: while (true) {
          if (!(0 <= h_15085707)) break L6;
            var nxt_15085709 = city_14160028.allSectors.data[chckIndx(h_15085707, 0, (city_14160028.allSectors.data != null ? city_14160028.allSectors.data.length : 0)+0-1)-0].Field1;
            if (is_filled_10612018(city_14160028.allSectors.data[chckIndx(h_15085707, 0, (city_14160028.allSectors.data != null ? city_14160028.allSectors.data.length : 0)+0-1)-0].Field0)) {
            k_14170229 = city_14160028.allSectors.data[chckIndx(h_15085707, 0, (city_14160028.allSectors.data != null ? city_14160028.allSectors.data.length : 0)+0-1)-0].Field2;
            v_14170230 = city_14160028.allSectors.data[chckIndx(h_15085707, 0, (city_14160028.allSectors.data != null ? city_14160028.allSectors.data.length : 0)+0-1)-0].Field3;
            HEX5BHEX5DHEX3D_14170347(all_sectors_13800629[0], k_14170229, v_14170230);
++excHandler;
            Tmp8 = framePtr;
            try {
            (Tmp9 = HEX5BHEX5D_14260842(all_sectors_13800629[0], k_14170229), Tmp9)[0][Tmp9[1]].folkDistrict = nimCopy(null, v_14170230.folkDistrict, NTI112);
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp8;
            (Tmp10 = HEX5BHEX5D_14260842(all_sectors_13800629[0], k_14170229), Tmp10)[0][Tmp10[1]].folkDistrict = nimCopy(null, [], NTI112);
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp8;
            }
            if (!((len_14120198(city_14160028.allSectors) == l_15085706))) {
            failed_assert_impl_102680(makeNimstrLit("tables.nim(1675, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_15085707 = nxt_15085709;
          }
      } while(false);
      }
      
    } while(false);
    nimCopy(last_postfix_13820629[0], city_14160028.lastPostfix, NTI13701226);
    redraw_13280414(kxi_12727284[0]);
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
    framePtr = Tmp2;
    window.alert(("Сначала кликнуть по городу на карте\n с каким надо работать."));
    lastJSError = prevJSError;
    } finally {
    framePtr = Tmp2;
    }
    remove_all_sector_from_map_14120062();

  
}
function has_key_14875237(t_14875242, key_14875243) {
  var result_14875244 = false;

    var hc_14875245 = [0];
    result_14875244 = (0 <= raw_get_14035602(t_14875242, key_14875243, hc_14875245, 0));

  return result_14875244;

}
function HEX5BHEX5D_14875418(t_14875424, key_14875425) {
  var result_14875427 = null;
  var result_14875427_Idx = 0;

    var hc_14875428 = [0];
    var index_14875429 = raw_get_14035602(t_14875424, key_14875425, hc_14875428, 0);
    if ((0 <= index_14875429)) {
    result_14875427 = t_14875424.data[chckIndx(index_14875429, 0, (t_14875424.data != null ? t_14875424.data.length : 0)+0-1)-0]; result_14875427_Idx = "Field2";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(cstrToNimstr((key_14875425)+"") || []), parent: null, m_type: NTI6245, name: null, trace: null, up: null}, "KeyError");
    }
    

  return [result_14875427, result_14875427_Idx];

}
function raw_get_14715621(t_14715626, key_14715627, hc_14715628, hc_14715628_Idx) {
            var Tmp3;

  var result_14715629 = 0;

  BeforeRet: do {
    hc_14715628[hc_14715628_Idx] = hash_10590214(key_14715627);
    if ((hc_14715628[hc_14715628_Idx] == 0)) {
    hc_14715628[hc_14715628_Idx] = 314159265;
    }
    
    if (((t_14715626.data != null ? t_14715626.data.length : 0) == 0)) {
    result_14715629 = -1;
    break BeforeRet;
    }
    
    var h_14725138 = (hc_14715628[hc_14715628_Idx] & (t_14715626.data != null ? (t_14715626.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_10612018(t_14715626.data[chckIndx(h_14725138, 0, (t_14715626.data != null ? t_14715626.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_14715626.data[chckIndx(h_14725138, 0, (t_14715626.data != null ? t_14715626.data.length : 0)+0-1)-0].Field0 == hc_14715628[hc_14715628_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_14715626.data[chckIndx(h_14725138, 0, (t_14715626.data != null ? t_14715626.data.length : 0)+0-1)-0].Field2, key_14715627);            }          if (Tmp3) {
          result_14715629 = h_14725138;
          break BeforeRet;
          }
          
          h_14725138 = next_try_10615014(h_14725138, (t_14715626.data != null ? (t_14715626.data.length-1) : -1));
        }
    } while(false);
    result_14715629 = subInt(-1, h_14725138);
  } while (false);

  return result_14715629;

}
function must_rehash_14750601(t_14750604) {
  var result_14750605 = false;

    if (!((t_14750604.counter < (t_14750604.data != null ? t_14750604.data.length : 0)))) {
    failed_assert_impl_102680(makeNimstrLit("hashcommon.nim(33, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_14750605 = ((mulInt((t_14750604.data != null ? t_14750604.data.length : 0), 2) < mulInt(t_14750604.counter, 3)) || (subInt((t_14750604.data != null ? t_14750604.data.length : 0), t_14750604.counter) < 4));

  return result_14750605;

}
function raw_insert_14776359(t_14776365, data_14776368, data_14776368_Idx, key_14776369, val_14776370, hc_14776371, h_14776372) {
    data_14776368[data_14776368_Idx][chckIndx(h_14776372, 0, (data_14776368[data_14776368_Idx] != null ? data_14776368[data_14776368_Idx].length : 0)+0-1)-0].Field2 = nimCopy(null, key_14776369, NTI112);
    data_14776368[data_14776368_Idx][chckIndx(h_14776372, 0, (data_14776368[data_14776368_Idx] != null ? data_14776368[data_14776368_Idx].length : 0)+0-1)-0].Field3 = nimCopy(null, val_14776370, NTI13701061);
    data_14776368[data_14776368_Idx][chckIndx(h_14776372, 0, (data_14776368[data_14776368_Idx] != null ? data_14776368[data_14776368_Idx].length : 0)+0-1)-0].Field0 = hc_14776371;
    data_14776368[data_14776368_Idx][chckIndx(h_14776372, 0, (data_14776368[data_14776368_Idx] != null ? data_14776368[data_14776368_Idx].length : 0)+0-1)-0].Field1 = -1;
    if ((t_14776365.first < 0)) {
    t_14776365.first = h_14776372;
    }
    
    if ((0 <= t_14776365.last)) {
    data_14776368[data_14776368_Idx][chckIndx(t_14776365.last, 0, (data_14776368[data_14776368_Idx] != null ? data_14776368[data_14776368_Idx].length : 0)+0-1)-0].Field1 = h_14776372;
    }
    
    t_14776365.last = h_14776372;

  
}
function enlarge_14775180(t_14775186) {
          var Tmp6;
          var Tmp7;

    var n_14775194 = null;
    n_14775194 = new Array(chckRange(mulInt((t_14775186.data != null ? t_14775186.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_14775186.data != null ? t_14775186.data.length : 0), 2), 0, 2147483647);++i) {n_14775194[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    var h_14775333 = t_14775186.first;
    t_14775186.first = -1;
    t_14775186.last = -1;
    var Tmp1 = t_14775186.data; t_14775186.data = n_14775194; n_14775194 = Tmp1;    L2: do {
        L3: while (true) {
        if (!(0 <= h_14775333)) break L3;
          var nxt_14775496 = n_14775194[chckIndx(h_14775333, 0, (n_14775194 != null ? n_14775194.length : 0)+0-1)-0].Field1;
          var eh_14775652 = n_14775194[chckIndx(h_14775333, 0, (n_14775194 != null ? n_14775194.length : 0)+0-1)-0].Field0;
          if (is_filled_10612018(eh_14775652)) {
          var j_14775659 = (eh_14775652 & (t_14775186.data != null ? (t_14775186.data.length-1) : -1));
          L4: do {
              L5: while (true) {
              if (!is_filled_10612018(t_14775186.data[chckIndx(j_14775659, 0, (t_14775186.data != null ? t_14775186.data.length : 0)+0-1)-0].Field0)) break L5;
                j_14775659 = next_try_10615014(j_14775659, (t_14775186.data != null ? (t_14775186.data.length-1) : -1));
              }
          } while(false);
          Tmp6 = n_14775194[chckIndx(h_14775333, 0, (n_14775194 != null ? n_14775194.length : 0)+0-1)-0].Field2;
          n_14775194[chckIndx(h_14775333, 0, (n_14775194 != null ? n_14775194.length : 0)+0-1)-0].Field2 = genericReset(n_14775194[chckIndx(h_14775333, 0, (n_14775194 != null ? n_14775194.length : 0)+0-1)-0].Field2, NTI112);
          Tmp7 = n_14775194[chckIndx(h_14775333, 0, (n_14775194 != null ? n_14775194.length : 0)+0-1)-0].Field3;
          n_14775194[chckIndx(h_14775333, 0, (n_14775194 != null ? n_14775194.length : 0)+0-1)-0].Field3 = genericReset(n_14775194[chckIndx(h_14775333, 0, (n_14775194 != null ? n_14775194.length : 0)+0-1)-0].Field3, NTI13701061);
          raw_insert_14776359(t_14775186, t_14775186, "data", Tmp6, Tmp7, n_14775194[chckIndx(h_14775333, 0, (n_14775194 != null ? n_14775194.length : 0)+0-1)-0].Field0, j_14775659);
          }
          
          h_14775333 = nxt_14775496;
        }
    } while(false);

  
}
function raw_get_known_hc_14777194(t_14777199, key_14777200, hc_14777201) {
  var result_14777202 = 0;

  BeforeRet: do {
    if (((t_14777199.data != null ? t_14777199.data.length : 0) == 0)) {
    result_14777202 = -1;
    break BeforeRet;
    }
    
    var h_14780138 = (hc_14777201 & (t_14777199.data != null ? (t_14777199.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_10612018(t_14777199.data[chckIndx(h_14780138, 0, (t_14777199.data != null ? t_14777199.data.length : 0)+0-1)-0].Field0)) break L2;
          if (((t_14777199.data[chckIndx(h_14780138, 0, (t_14777199.data != null ? t_14777199.data.length : 0)+0-1)-0].Field0 == hc_14777201) && eqStrings(t_14777199.data[chckIndx(h_14780138, 0, (t_14777199.data != null ? t_14777199.data.length : 0)+0-1)-0].Field2, key_14777200))) {
          result_14777202 = h_14780138;
          break BeforeRet;
          }
          
          h_14780138 = next_try_10615014(h_14780138, (t_14777199.data != null ? (t_14777199.data.length-1) : -1));
        }
    } while(false);
    result_14777202 = subInt(-1, h_14780138);
  } while (false);

  return result_14777202;

}
function has_key_or_put_14690085(t_14690091, key_14690092, val_14690093) {
  var result_14690094 = false;

    if (((t_14690091.data != null ? t_14690091.data.length : 0) == 0)) {
    if (!(is_power_of_two_8715029(64))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    t_14690091.counter = 0;
    t_14690091.data = new Array(64); for (var i=0;i<64;++i) {t_14690091.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    t_14690091.first = -1;
    t_14690091.last = -1;
    }
    
    var hc_14715601 = [0];
    var index_14725656 = raw_get_14715621(t_14690091, key_14690092, hc_14715601, 0);
    if ((index_14725656 < 0)) {
    result_14690094 = false;
    if (((t_14690091.data != null ? t_14690091.data.length : 0) == 0)) {
    if (!(is_power_of_two_8715029(64))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    t_14690091.counter = 0;
    t_14690091.data = new Array(64); for (var i=0;i<64;++i) {t_14690091.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    t_14690091.first = -1;
    t_14690091.last = -1;
    }
    
    if (must_rehash_14750601(t_14690091)) {
    enlarge_14775180(t_14690091);
    index_14725656 = raw_get_known_hc_14777194(t_14690091, key_14690092, hc_14715601[0]);
    }
    
    index_14725656 = subInt(-1, index_14725656);
    raw_insert_14776359(t_14690091, t_14690091, "data", key_14690092, val_14690093, hc_14715601[0], index_14725656);
    t_14690091.counter = addInt(t_14690091.counter, 1);
    }
    else {
      result_14690094 = true;
    }
    

  return result_14690094;

}
function raw_get_14676323(t_14676327, key_14676328, hc_14676329, hc_14676329_Idx) {
            var Tmp3;

  var result_14676330 = 0;

  BeforeRet: do {
    hc_14676329[hc_14676329_Idx] = hash_10590214(key_14676328);
    if ((hc_14676329[hc_14676329_Idx] == 0)) {
    hc_14676329[hc_14676329_Idx] = 314159265;
    }
    
    if (((t_14676327.data != null ? t_14676327.data.length : 0) == 0)) {
    result_14676330 = -1;
    break BeforeRet;
    }
    
    var h_14685138 = (hc_14676329[hc_14676329_Idx] & (t_14676327.data != null ? (t_14676327.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_10612018(t_14676327.data[chckIndx(h_14685138, 0, (t_14676327.data != null ? t_14676327.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_14676327.data[chckIndx(h_14685138, 0, (t_14676327.data != null ? t_14676327.data.length : 0)+0-1)-0].Field0 == hc_14676329[hc_14676329_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_14676327.data[chckIndx(h_14685138, 0, (t_14676327.data != null ? t_14676327.data.length : 0)+0-1)-0].Field2, key_14676328);            }          if (Tmp3) {
          result_14676330 = h_14685138;
          break BeforeRet;
          }
          
          h_14685138 = next_try_10615014(h_14685138, (t_14676327.data != null ? (t_14676327.data.length-1) : -1));
        }
    } while(false);
    result_14676330 = subInt(-1, h_14685138);
  } while (false);

  return result_14676330;

}
function HEX5BHEX5D_14676311(t_14676317, key_14676318) {
  var result_14676320 = null;
  var result_14676320_Idx = 0;

    var hc_14676321 = [0];
    var index_14676322 = raw_get_14676323(t_14676317, key_14676318, hc_14676321, 0);
    if ((0 <= index_14676322)) {
    result_14676320 = t_14676317.data[chckIndx(index_14676322, 0, (t_14676317.data != null ? t_14676317.data.length : 0)+0-1)-0]; result_14676320_Idx = "Field3";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_14676318 || []), parent: null, m_type: NTI6245, name: null, trace: null, up: null}, "KeyError");
    }
    

  return [result_14676320, result_14676320_Idx];

}
function del_14925324(t_14925330, key_14925331) {
            var Tmp4;
            var Tmp5;

  BeforeRet: do {
    if ((t_14925330.counter == 0)) {
    break BeforeRet;
    }
    
    var n_14925339 = null;
    n_14925339 = new Array(chckRange((t_14925330.data != null ? t_14925330.data.length : 0), 0, 2147483647)); for (var i=0;i<chckRange((t_14925330.data != null ? t_14925330.data.length : 0), 0, 2147483647);++i) {n_14925339[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    var h_14925478 = t_14925330.first;
    t_14925330.first = -1;
    t_14925330.last = -1;
    var Tmp1 = t_14925330.data; t_14925330.data = n_14925339; n_14925339 = Tmp1;    var res_14925486 = 0;
    res_14925486 = hash_10590214(key_14925331);
    if ((res_14925486 == 0)) {
    res_14925486 = 314159265;
    }
    
    var hc_14935004 = res_14925486;
    L2: do {
        L3: while (true) {
        if (!(0 <= h_14925478)) break L3;
          var nxt_14935160 = n_14925339[chckIndx(h_14925478, 0, (n_14925339 != null ? n_14925339.length : 0)+0-1)-0].Field1;
          if (is_filled_10612018(n_14925339[chckIndx(h_14925478, 0, (n_14925339 != null ? n_14925339.length : 0)+0-1)-0].Field0)) {
          if (((n_14925339[chckIndx(h_14925478, 0, (n_14925339 != null ? n_14925339.length : 0)+0-1)-0].Field0 == hc_14935004) && eqStrings(n_14925339[chckIndx(h_14925478, 0, (n_14925339 != null ? n_14925339.length : 0)+0-1)-0].Field2, key_14925331))) {
          t_14925330.counter = subInt(t_14925330.counter, 1);
          }
          else {
            var j_14935971 = subInt(-1, raw_get_known_hc_14777194(t_14925330, n_14925339[chckIndx(h_14925478, 0, (n_14925339 != null ? n_14925339.length : 0)+0-1)-0].Field2, n_14925339[chckIndx(h_14925478, 0, (n_14925339 != null ? n_14925339.length : 0)+0-1)-0].Field0));
            Tmp4 = n_14925339[chckIndx(h_14925478, 0, (n_14925339 != null ? n_14925339.length : 0)+0-1)-0].Field2;
            n_14925339[chckIndx(h_14925478, 0, (n_14925339 != null ? n_14925339.length : 0)+0-1)-0].Field2 = genericReset(n_14925339[chckIndx(h_14925478, 0, (n_14925339 != null ? n_14925339.length : 0)+0-1)-0].Field2, NTI112);
            Tmp5 = n_14925339[chckIndx(h_14925478, 0, (n_14925339 != null ? n_14925339.length : 0)+0-1)-0].Field3;
            n_14925339[chckIndx(h_14925478, 0, (n_14925339 != null ? n_14925339.length : 0)+0-1)-0].Field3 = genericReset(n_14925339[chckIndx(h_14925478, 0, (n_14925339 != null ? n_14925339.length : 0)+0-1)-0].Field3, NTI13701061);
            raw_insert_14776359(t_14925330, t_14925330, "data", Tmp4, Tmp5, n_14925339[chckIndx(h_14925478, 0, (n_14925339 != null ? n_14925339.length : 0)+0-1)-0].Field0, j_14935971);
          }
          
          }
          
          h_14925478 = nxt_14935160;
        }
    } while(false);
  } while (false);

  
}
function raw_get_14105210(t_14105214, key_14105215, hc_14105216, hc_14105216_Idx) {
            var Tmp3;

  var result_14105217 = 0;

  BeforeRet: do {
    hc_14105216[hc_14105216_Idx] = hash_10590214(key_14105215);
    if ((hc_14105216[hc_14105216_Idx] == 0)) {
    hc_14105216[hc_14105216_Idx] = 314159265;
    }
    
    if (((t_14105214.data != null ? t_14105214.data.length : 0) == 0)) {
    result_14105217 = -1;
    break BeforeRet;
    }
    
    var h_14115138 = (hc_14105216[hc_14105216_Idx] & (t_14105214.data != null ? (t_14105214.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_10612018(t_14105214.data[chckIndx(h_14115138, 0, (t_14105214.data != null ? t_14105214.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_14105214.data[chckIndx(h_14115138, 0, (t_14105214.data != null ? t_14105214.data.length : 0)+0-1)-0].Field0 == hc_14105216[hc_14105216_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_14105214.data[chckIndx(h_14115138, 0, (t_14105214.data != null ? t_14105214.data.length : 0)+0-1)-0].Field1, key_14105215);            }          if (Tmp3) {
          result_14105217 = h_14115138;
          break BeforeRet;
          }
          
          h_14115138 = next_try_10615014(h_14115138, (t_14105214.data != null ? (t_14105214.data.length-1) : -1));
        }
    } while(false);
    result_14105217 = subInt(-1, h_14115138);
  } while (false);

  return result_14105217;

}
function HEX5BHEX5D_14105198(t_14105204, key_14105205) {
  var result_14105207 = null;
  var result_14105207_Idx = 0;

    var hc_14105208 = [0];
    var index_14105209 = raw_get_14105210(t_14105204, key_14105205, hc_14105208, 0);
    if ((0 <= index_14105209)) {
    result_14105207 = t_14105204.data[chckIndx(index_14105209, 0, (t_14105204.data != null ? t_14105204.data.length : 0)+0-1)-0]; result_14105207_Idx = "Field2";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_14105205 || []), parent: null, m_type: NTI6245, name: null, trace: null, up: null}, "KeyError");
    }
    

  return [result_14105207, result_14105207_Idx];

}
function del_14781122(t_14781128, key_14781129) {
            var Tmp4;
            var Tmp5;

  BeforeRet: do {
    if ((t_14781128.counter == 0)) {
    break BeforeRet;
    }
    
    var n_14781137 = null;
    n_14781137 = new Array(chckRange((t_14781128.data != null ? t_14781128.data.length : 0), 0, 2147483647)); for (var i=0;i<chckRange((t_14781128.data != null ? t_14781128.data.length : 0), 0, 2147483647);++i) {n_14781137[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    var h_14781276 = t_14781128.first;
    t_14781128.first = -1;
    t_14781128.last = -1;
    var Tmp1 = t_14781128.data; t_14781128.data = n_14781137; n_14781137 = Tmp1;    var res_14781284 = 0;
    res_14781284 = hash_10590214(key_14781129);
    if ((res_14781284 == 0)) {
    res_14781284 = 314159265;
    }
    
    var hc_14790004 = res_14781284;
    L2: do {
        L3: while (true) {
        if (!(0 <= h_14781276)) break L3;
          var nxt_14790160 = n_14781137[chckIndx(h_14781276, 0, (n_14781137 != null ? n_14781137.length : 0)+0-1)-0].Field1;
          if (is_filled_10612018(n_14781137[chckIndx(h_14781276, 0, (n_14781137 != null ? n_14781137.length : 0)+0-1)-0].Field0)) {
          if (((n_14781137[chckIndx(h_14781276, 0, (n_14781137 != null ? n_14781137.length : 0)+0-1)-0].Field0 == hc_14790004) && eqStrings(n_14781137[chckIndx(h_14781276, 0, (n_14781137 != null ? n_14781137.length : 0)+0-1)-0].Field2, key_14781129))) {
          t_14781128.counter = subInt(t_14781128.counter, 1);
          }
          else {
            var j_14790971 = subInt(-1, raw_get_known_hc_14257194(t_14781128, n_14781137[chckIndx(h_14781276, 0, (n_14781137 != null ? n_14781137.length : 0)+0-1)-0].Field2, n_14781137[chckIndx(h_14781276, 0, (n_14781137 != null ? n_14781137.length : 0)+0-1)-0].Field0));
            Tmp4 = n_14781137[chckIndx(h_14781276, 0, (n_14781137 != null ? n_14781137.length : 0)+0-1)-0].Field2;
            n_14781137[chckIndx(h_14781276, 0, (n_14781137 != null ? n_14781137.length : 0)+0-1)-0].Field2 = genericReset(n_14781137[chckIndx(h_14781276, 0, (n_14781137 != null ? n_14781137.length : 0)+0-1)-0].Field2, NTI112);
            Tmp5 = n_14781137[chckIndx(h_14781276, 0, (n_14781137 != null ? n_14781137.length : 0)+0-1)-0].Field3;
            n_14781137[chckIndx(h_14781276, 0, (n_14781137 != null ? n_14781137.length : 0)+0-1)-0].Field3 = genericReset(n_14781137[chckIndx(h_14781276, 0, (n_14781137 != null ? n_14781137.length : 0)+0-1)-0].Field3, NTI13701022);
            raw_insert_14256359(t_14781128, t_14781128, "data", Tmp4, Tmp5, n_14781137[chckIndx(h_14781276, 0, (n_14781137 != null ? n_14781137.length : 0)+0-1)-0].Field0, j_14790971);
          }
          
          }
          
          h_14781276 = nxt_14790160;
        }
    } while(false);
  } while (false);

  
}
function len_14655152(t_14655157) {
  var result_14655158 = 0;

    result_14655158 = t_14655157.counter;

  return result_14655158;

}
function has_key_14670110(t_14670115, key_14670116) {
  var result_14670117 = false;

    var hc_14670118 = [0];
    result_14670117 = (0 <= raw_get_14195621(t_14670115, key_14670116, hc_14670118, 0));

  return result_14670117;

}
function reindex_sect_14655014() {
                              var Tmp10;
                            var Tmp11;
                            var Tmp12;
                            var Tmp13;
                              var Tmp15;
                                    var Tmp18;
                                    var Tmp19;
                                    var Tmp20;
                                    var Tmp21;

    var moved_14655016 = true;
    L1: do {
        L2: while (true) {
        if (!moved_14655016) break L2;
          moved_14655016 = false;
          L3: do {
            var k_14665245 = null;
            var val_14665246 = null;
            var val_14665246_Idx = 0;
            var l_15085779 = len_14655152(last_postfix_13820629[0]);
            L4: do {
              var h_15085781 = 0;
              var colontmp__15085782 = 0;
              colontmp__15085782 = (last_postfix_13820629[0].data != null ? (last_postfix_13820629[0].data.length-1) : -1);
              var res_15085783 = 0;
              L5: do {
                  L6: while (true) {
                  if (!(res_15085783 <= colontmp__15085782)) break L6;
                    h_15085781 = res_15085783;
                    if (is_filled_10612018(last_postfix_13820629[0].data[chckIndx(h_15085781, 0, (last_postfix_13820629[0].data != null ? last_postfix_13820629[0].data.length : 0)+0-1)-0].Field0)) {
                    k_14665245 = last_postfix_13820629[0].data[chckIndx(h_15085781, 0, (last_postfix_13820629[0].data != null ? last_postfix_13820629[0].data.length : 0)+0-1)-0].Field1;
                    val_14665246 = last_postfix_13820629[0].data[chckIndx(h_15085781, 0, (last_postfix_13820629[0].data != null ? last_postfix_13820629[0].data.length : 0)+0-1)-0]; val_14665246_Idx = "Field2";
                    L7: do {
                      var v_14665253 = 0;
                      var res_15085767 = val_14665246[val_14665246_Idx];
                      L8: do {
                          L9: while (true) {
                          if (!(1 <= res_15085767)) break L9;
                            v_14665253 = res_15085767;
                            var from_sect_14665254 = (k_14665245 || []).concat(makeNimstrLit("-") || [],cstrToNimstr((v_14665253)+"") || []);
                            var prev_v_14665255 = subInt(v_14665253, 1);
                            var to_sect_14665256 = (k_14665245 || []).concat(makeNimstrLit("-") || [],cstrToNimstr((prev_v_14665255)+"") || []);
                              if (!!((prev_v_14665255 == 0))) Tmp10 = false; else {                                Tmp10 = !(has_key_14670110(all_sectors_13800629[0], to_sect_14665256));                              }                            if (Tmp10) {
                            moved_14655016 = true;
                            HEX5BHEX5DHEX3D_14170347(all_sectors_13800629[0], to_sect_14665256, {postalCode: null, district: null, folkDistrict: null, city: null, pFix: 0, streets: {data: null, counter: 0, first: 0, last: 0}, shownOnMap: false, exclude: false});
                            (Tmp11 = HEX5BHEX5D_14260842(all_sectors_13800629[0], to_sect_14665256), Tmp11)[0][Tmp11[1]] = (Tmp12 = HEX5BHEX5D_14260842(all_sectors_13800629[0], from_sect_14665254), Tmp12)[0][Tmp12[1]];
                            (Tmp13 = HEX5BHEX5D_14260842(all_sectors_13800629[0], to_sect_14665256), Tmp13)[0][Tmp13[1]].pFix = prev_v_14665255;
                            L14: do {
                              var name_14675978 = null;
                              var m_v_14675979 = null;
                              var colontmp__15085758 = {data: null, counter: 0, first: 0, last: 0};
                              nimCopy(colontmp__15085758, (Tmp15 = HEX5BHEX5D_14260842(all_sectors_13800629[0], from_sect_14665254), Tmp15)[0][Tmp15[1]].streets, NTI13701069);
                              var l_15085759 = len_14465548(colontmp__15085758);
                              if ((0 < colontmp__15085758.counter)) {
                              var h_15085760 = colontmp__15085758.first;
                              L16: do {
                                  L17: while (true) {
                                  if (!(0 <= h_15085760)) break L17;
                                    var nxt_15085762 = colontmp__15085758.data[chckIndx(h_15085760, 0, (colontmp__15085758.data != null ? colontmp__15085758.data.length : 0)+0-1)-0].Field1;
                                    if (is_filled_10612018(colontmp__15085758.data[chckIndx(h_15085760, 0, (colontmp__15085758.data != null ? colontmp__15085758.data.length : 0)+0-1)-0].Field0)) {
                                    name_14675978 = colontmp__15085758.data[chckIndx(h_15085760, 0, (colontmp__15085758.data != null ? colontmp__15085758.data.length : 0)+0-1)-0].Field2;
                                    m_v_14675979 = colontmp__15085758.data[chckIndx(h_15085760, 0, (colontmp__15085758.data != null ? colontmp__15085758.data.length : 0)+0-1)-0].Field3;
                                    has_key_or_put_14690085((Tmp18 = HEX5BHEX5D_14260842(all_sectors_13800629[0], to_sect_14665256), Tmp18)[0][Tmp18[1]].streets, name_14675978, (Tmp19 = HEX5BHEX5D_14676311(all_streets_13760629[0], name_14675978), Tmp19)[0][Tmp19[1]].links);
                                    (Tmp20 = HEX5BHEX5D_14676311(all_streets_13760629[0], name_14675978), Tmp20)[0][Tmp20[1]].sector = (Tmp21 = HEX5BHEX5D_14260842(all_sectors_13800629[0], to_sect_14665256), Tmp21)[0][Tmp21[1]];
                                    if (!((len_14465548(colontmp__15085758) == l_15085759))) {
                                    failed_assert_impl_102680(makeNimstrLit("tables.nim(1675, 11) `len(t) == L` the length of the table changed while iterating over it"));
                                    }
                                    
                                    }
                                    
                                    h_15085760 = nxt_15085762;
                                  }
                              } while(false);
                              }
                              
                            } while(false);
                            del_14781122(all_sectors_13800629[0], from_sect_14665254);
                            if ((v_14665253 == val_14665246[val_14665246_Idx])) {
                            val_14665246[val_14665246_Idx] = subInt(val_14665246[val_14665246_Idx], 1);
                            }
                            
                            }
                            
                            res_15085767 = subInt(res_15085767, 1);
                          }
                      } while(false);
                    } while(false);
                    if (!((len_14655152(last_postfix_13820629[0]) == l_15085779))) {
                    failed_assert_impl_102680(makeNimstrLit("tables.nim(686, 13) `len(t) == L` the length of the table changed while iterating over it"));
                    }
                    
                    }
                    
                    res_15085783 = addInt(res_15085783, 1);
                  }
              } while(false);
            } while(false);
          } while(false);
        }
    } while(false);

  
}
function init_ordered_table_14940013(initial_size_14940017) {
  var result_14940019 = {data: null, counter: 0, first: 0, last: 0};

    if (!(is_power_of_two_8715029(initial_size_14940017))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(initialSize)` "));
    }
    
    result_14940019.counter = 0;
    result_14940019.data = new Array(chckRange(initial_size_14940017, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_14940017, 0, 2147483647);++i) {result_14940019.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    result_14940019.first = -1;
    result_14940019.last = -1;

  return result_14940019;

}
function contains_15000166(s_15000172, value_15000173) {
  var result_15000174 = false;

    result_15000174 = ((cmpStrings(s_15000172.a, value_15000173) <= 0) && (cmpStrings(value_15000173, s_15000172.b) <= 0));

  return result_15000174;

}
function HEX2EHEX2E_15000001(a_15000006, b_15000008) {
  var result_15000014 = {a: null, b: null};

    nimCopy(result_15000014, {a: nimCopy(null, a_15000006, NTI112), b: nimCopy(null, b_15000008, NTI112)}, NTI15000011);

  return result_15000014;

}
function len_15010368(t_15010373) {
  var result_15010374 = 0;

    result_15010374 = t_15010373.counter;

  return result_15010374;

}
function create_dom_14791538() {
    function HEX3Aanonymous_14805138(ev_14805141, n_14805142) {
        save_14526436();

      
    }
    function HEX3Aanonymous_14805161(ev_14805164, n_14805165) {
        function HEX3Aanonymous_14805168(e_14805171) {
            var data_14815002 = e_14805171.target.result;
            var a_14815007 = JSON.parse(data_14815002);
            var x_14815008 = a_14815007;
            load_14145065(x_14815008);

          
        }

        var f_reader_14805166 = function(){return new FileReader();}();
        f_reader_14805166.addEventListener("load", HEX3Aanonymous_14805168, false);
        var inp_file_14820214 = ev_14805164.target;
        f_reader_14805166.readAsText(inp_file_14820214.files[0]);

      
    }
    function HEX3Aanonymous_14825040(ev_14825043, n_14825044) {
        function HEX3Aanonymous_14835010(r_14835012) {
            var c_14865002 = r_14835012.response.view[0].result[0].location.displayPosition;
            map.setCenter({lat: nimCopy(null, chckRange((c_14865002.latitude), -9.0000000000000000e+001, 9.0000000000000000e+001), NTI10891016), lng: nimCopy(null, chckRange((c_14865002.longitude), -1.8000000000000000e+002, 1.8000000000000000e+002), NTI10891018), m_type: NTI10891036}, false);
            map.setZoom(14, false);

          
        }
        function HEX3Aanonymous_14875021(e_14875023) {
          
        }

        var address_14825045 = ev_14825043.target.value;
        var geocoder_14825046 = platform_13720017[0].getGeocodingService();
        var geocoding_parameters_14825047 = {};
        geocoding_parameters_14825047.searchText = address_14825045;
        geocoding_parameters_14825047.jsonattributes = 1;
        geocoder_14825046.geocode(geocoding_parameters_14825047, HEX3Aanonymous_14835010, HEX3Aanonymous_14875021);

      
    }
                    var Tmp7;
                    var Tmp8;
                    function clck_on_str_14791541(ev_14791544, n_14791545) {
                        var trgt_14791546 = ev_14791544.target;
                        map.setZoom(20, false);
                        map.setCenter({lat: nimCopy(null, chckRange(parseFloat(trgt_14791546.getAttribute("data-lat")), -9.0000000000000000e+001, 9.0000000000000000e+001), NTI10891016), lng: nimCopy(null, chckRange(parseFloat(trgt_14791546.getAttribute("data-lng")), -1.8000000000000000e+002, 1.8000000000000000e+002), NTI10891018), m_type: NTI10891036}, false);

                      
                    }
            function HEX3Aanonymous_14880174(ev_14880177, n_14880178) {
                var ev_clck_14880179 = ev_14880177;
                var t_14885002 = ev_clck_14880179.target;
                var chckd_14890008 = (t_14885002.checked);
                var s_n_14895008 = (t_14885002.value);
                t_14885002.checkd = nimBoolToStr((t_14885002.checked));
                if (chckd_14890008) {
                display_sector_14640263(cstrToNimstr(s_n_14895008), true);
                }
                else {
                display_sector_14640263(cstrToNimstr(s_n_14895008), false);
                }
                

              
            }
            function HEX3Aanonymous_14910246(ev_14910249, n_14910250) {
                var Tmp1;
                        var Tmp5;
                        var Tmp6;
                        var Tmp7;
                        var Tmp8;
                  var Tmp13;
                var Tmp14;

                remove_all_sector_from_map_14120062();
                var id_14910251 = cstrToNimstr(ev_14910249.target.id);
                var from_sect_14910252 = nsuReplaceStr(id_14910251, makeNimstrLit("_"), makeNimstrLit(" "));
                var el_sel_14910253 = document.querySelectorAll(toJSStr((makeNimstrLit("select[id=\'") || []).concat(id_14910251 || [],makeNimstrLit("\']") || [])));
                var to_sect_14910254 = cstrToNimstr(el_sel_14910253[chckIndx(0, 0, (el_sel_14910253 != null ? el_sel_14910253.length : 0)+0-1)-0].value);
                var from_sector_14910416 = (Tmp1 = HEX5BHEX5D_14260842(all_sectors_13800629[0], from_sect_14910252), Tmp1)[0][Tmp1[1]];
                var names_for_del_14910433 = new_seq_610232(0);
                L2: do {
                  var name_14910441 = null;
                  var m_v_14910442 = null;
                  var l_15085734 = len_14465548(from_sector_14910416.streets);
                  if ((0 < from_sector_14910416.streets.counter)) {
                  var h_15085735 = from_sector_14910416.streets.first;
                  L3: do {
                      L4: while (true) {
                      if (!(0 <= h_15085735)) break L4;
                        var nxt_15085737 = from_sector_14910416.streets.data[chckIndx(h_15085735, 0, (from_sector_14910416.streets.data != null ? from_sector_14910416.streets.data.length : 0)+0-1)-0].Field1;
                        if (is_filled_10612018(from_sector_14910416.streets.data[chckIndx(h_15085735, 0, (from_sector_14910416.streets.data != null ? from_sector_14910416.streets.data.length : 0)+0-1)-0].Field0)) {
                        name_14910441 = from_sector_14910416.streets.data[chckIndx(h_15085735, 0, (from_sector_14910416.streets.data != null ? from_sector_14910416.streets.data.length : 0)+0-1)-0].Field2;
                        m_v_14910442 = from_sector_14910416.streets.data[chckIndx(h_15085735, 0, (from_sector_14910416.streets.data != null ? from_sector_14910416.streets.data.length : 0)+0-1)-0].Field3;
                        has_key_or_put_14690085((Tmp5 = HEX5BHEX5D_14260842(all_sectors_13800629[0], to_sect_14910254), Tmp5)[0][Tmp5[1]].streets, name_14910441, (Tmp6 = HEX5BHEX5D_14676311(all_streets_13760629[0], name_14910441), Tmp6)[0][Tmp6[1]].links);
                        (Tmp7 = HEX5BHEX5D_14676311(all_streets_13760629[0], name_14910441), Tmp7)[0][Tmp7[1]].sector = (Tmp8 = HEX5BHEX5D_14260842(all_sectors_13800629[0], to_sect_14910254), Tmp8)[0][Tmp8[1]];
                        var Tmp9 = nimCopy(null, name_14910441, NTI112);
                        if (names_for_del_14910433 != null) { names_for_del_14910433.push(Tmp9); } else { names_for_del_14910433 = [Tmp9]; };
                        if (!((len_14465548(from_sector_14910416.streets) == l_15085734))) {
                        failed_assert_impl_102680(makeNimstrLit("tables.nim(1675, 11) `len(t) == L` the length of the table changed while iterating over it"));
                        }
                        
                        }
                        
                        h_15085735 = nxt_15085737;
                      }
                  } while(false);
                  }
                  
                } while(false);
                L10: do {
                  var n_14925214 = null;
                  var i_15085740 = 0;
                  var l_15085741 = (names_for_del_14910433 != null ? names_for_del_14910433.length : 0);
                  L11: do {
                      L12: while (true) {
                      if (!(i_15085740 < l_15085741)) break L12;
                        n_14925214 = names_for_del_14910433[chckIndx(i_15085740, 0, (names_for_del_14910433 != null ? names_for_del_14910433.length : 0)+0-1)-0];
                        del_14925324(from_sector_14910416.streets, n_14925214);
                        i_15085740 = addInt(i_15085740, 1);
                        if (!(((names_for_del_14910433 != null ? names_for_del_14910433.length : 0) == l_15085741))) {
                        failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  } while(false);
                } while(false);
                if (!(from_sector_14910416.exclude)) {
                if ((from_sector_14910416.pFix == (Tmp13 = HEX5BHEX5D_14105198(last_postfix_13820629[0], from_sector_14910416.postalCode), Tmp13)[0][Tmp13[1]])) {
                (Tmp14 = HEX5BHEX5D_14105198(last_postfix_13820629[0], from_sector_14910416.postalCode), Tmp14)[0][Tmp14[1]] = subInt(Tmp14[0][Tmp14[1]], 1);
                }
                
                del_14781122(all_sectors_13800629[0], from_sect_14910252);
                }
                
                reindex_sect_14655014();

              
            }
            function HEX3Aanonymous_14936971(ev_14936974, n_14936975) {
                var Tmp1;
                          var Tmp6;
                                  var Tmp10;
                          var Tmp11;
                            var Tmp12;
                            var Tmp13;
                                    var Tmp17;
                            var Tmp18;

                var id_14936976 = cstrToNimstr(ev_14936974.target.id);
                var from_sect_14936977 = nsuReplaceStr(id_14936976, makeNimstrLit("_"), makeNimstrLit(" "));
                var from_sector_14937139 = (Tmp1 = HEX5BHEX5D_14260842(all_sectors_13800629[0], from_sect_14936977), Tmp1)[0][Tmp1[1]];
                var all_sectors_tmp_14937148 = [init_ordered_table_13780632(64)];
                var addk_14937150 = 0;
                var newv_14937151 = null;
                L2: do {
                  var k_14937159 = null;
                  var v_14937160 = null;
                  var l_15085801 = len_14120198(all_sectors_13800629[0]);
                  if ((0 < all_sectors_13800629[0].counter)) {
                  var h_15085802 = all_sectors_13800629[0].first;
                  L3: do {
                      L4: while (true) {
                      if (!(0 <= h_15085802)) break L4;
                        var nxt_15085804 = all_sectors_13800629[0].data[chckIndx(h_15085802, 0, (all_sectors_13800629[0].data != null ? all_sectors_13800629[0].data.length : 0)+0-1)-0].Field1;
                        if (is_filled_10612018(all_sectors_13800629[0].data[chckIndx(h_15085802, 0, (all_sectors_13800629[0].data != null ? all_sectors_13800629[0].data.length : 0)+0-1)-0].Field0)) {
                        k_14937159 = all_sectors_13800629[0].data[chckIndx(h_15085802, 0, (all_sectors_13800629[0].data != null ? all_sectors_13800629[0].data.length : 0)+0-1)-0].Field2;
                        v_14937160 = all_sectors_13800629[0].data[chckIndx(h_15085802, 0, (all_sectors_13800629[0].data != null ? all_sectors_13800629[0].data.length : 0)+0-1)-0].Field3;
                        L5: do {
                          if (v_14937160.exclude) {
                          break L5;
                          }
                          
                          if ((addk_14937150 == 1)) {
                          newv_14937151 = JSON.parse(JSON.stringify(v_14937160));
                          if (false) {
                          nimCopy(newv_14937151.streets, init_ordered_table_14940013(64), NTI13701069);
                          }
                          
                          newv_14937151.pFix = addInt(newv_14937151.pFix, 1);
                          L7: do {
                            var nst_14937161 = null;
                            var st_14937162 = null;
                            var l_15085791 = len_14465548(newv_14937151.streets);
                            if ((0 < newv_14937151.streets.counter)) {
                            var h_15085792 = newv_14937151.streets.first;
                            L8: do {
                                L9: while (true) {
                                if (!(0 <= h_15085792)) break L9;
                                  var nxt_15085794 = newv_14937151.streets.data[chckIndx(h_15085792, 0, (newv_14937151.streets.data != null ? newv_14937151.streets.data.length : 0)+0-1)-0].Field1;
                                  if (is_filled_10612018(newv_14937151.streets.data[chckIndx(h_15085792, 0, (newv_14937151.streets.data != null ? newv_14937151.streets.data.length : 0)+0-1)-0].Field0)) {
                                  nst_14937161 = newv_14937151.streets.data[chckIndx(h_15085792, 0, (newv_14937151.streets.data != null ? newv_14937151.streets.data.length : 0)+0-1)-0].Field2;
                                  st_14937162 = newv_14937151.streets.data[chckIndx(h_15085792, 0, (newv_14937151.streets.data != null ? newv_14937151.streets.data.length : 0)+0-1)-0].Field3;
                                  (Tmp10 = HEX5BHEX5D_14676311(all_streets_13760629[0], nst_14937161), Tmp10)[0][Tmp10[1]].sector = newv_14937151;
                                  if (!((len_14465548(newv_14937151.streets) == l_15085791))) {
                                  failed_assert_impl_102680(makeNimstrLit("tables.nim(1675, 11) `len(t) == L` the length of the table changed while iterating over it"));
                                  }
                                  
                                  }
                                  
                                  h_15085792 = nxt_15085794;
                                }
                            } while(false);
                            }
                            
                          } while(false);
                          Tmp6 = nsuJoinSep([nimCopy(null, (Tmp11 = nsuSplitString(k_14937159, makeNimstrLit("-"), -1), Tmp11)[chckIndx(0, 0, (Tmp11 != null ? Tmp11.length : 0)+0-1)-0], NTI112), cstrToNimstr((newv_14937151.pFix)+"")], makeNimstrLit("-"));
                          }
                          else {
                            if (eqStrings(k_14937159, from_sect_14936977)) {
                            addk_14937150 = 1;
                            (Tmp13 = HEX5BHEX5D_14105198(last_postfix_13820629[0], from_sector_14937139.postalCode), Tmp13)[0][Tmp13[1]] = addInt(Tmp13[0][Tmp13[1]], 1);
                            HEX5BHEX5DHEX3D_14170347(all_sectors_tmp_14937148[0], k_14937159, v_14937160);
                            newv_14937151 = JSON.parse(JSON.stringify(v_14937160));
                            if (true) {
                            nimCopy(newv_14937151.streets, init_ordered_table_14940013(64), NTI13701069);
                            }
                            
                            newv_14937151.pFix = addInt(newv_14937151.pFix, 1);
                            L14: do {
                              var nst_14970327 = null;
                              var st_14970328 = null;
                              var l_15085797 = len_14465548(newv_14937151.streets);
                              if ((0 < newv_14937151.streets.counter)) {
                              var h_15085798 = newv_14937151.streets.first;
                              L15: do {
                                  L16: while (true) {
                                  if (!(0 <= h_15085798)) break L16;
                                    var nxt_15085800 = newv_14937151.streets.data[chckIndx(h_15085798, 0, (newv_14937151.streets.data != null ? newv_14937151.streets.data.length : 0)+0-1)-0].Field1;
                                    if (is_filled_10612018(newv_14937151.streets.data[chckIndx(h_15085798, 0, (newv_14937151.streets.data != null ? newv_14937151.streets.data.length : 0)+0-1)-0].Field0)) {
                                    nst_14970327 = newv_14937151.streets.data[chckIndx(h_15085798, 0, (newv_14937151.streets.data != null ? newv_14937151.streets.data.length : 0)+0-1)-0].Field2;
                                    st_14970328 = newv_14937151.streets.data[chckIndx(h_15085798, 0, (newv_14937151.streets.data != null ? newv_14937151.streets.data.length : 0)+0-1)-0].Field3;
                                    (Tmp17 = HEX5BHEX5D_14676311(all_streets_13760629[0], nst_14970327), Tmp17)[0][Tmp17[1]].sector = newv_14937151;
                                    if (!((len_14465548(newv_14937151.streets) == l_15085797))) {
                                    failed_assert_impl_102680(makeNimstrLit("tables.nim(1675, 11) `len(t) == L` the length of the table changed while iterating over it"));
                                    }
                                    
                                    }
                                    
                                    h_15085798 = nxt_15085800;
                                  }
                              } while(false);
                              }
                              
                            } while(false);
                            Tmp12 = nsuJoinSep([nimCopy(null, (Tmp18 = nsuSplitString(k_14937159, makeNimstrLit("-"), -1), Tmp18)[chckIndx(0, 0, (Tmp18 != null ? Tmp18.length : 0)+0-1)-0], NTI112), cstrToNimstr((newv_14937151.pFix)+"")], makeNimstrLit("-"));
                            }
                            else {
                              newv_14937151 = v_14937160;
                            Tmp12 = k_14937159;
                            }
                            
                          Tmp6 = Tmp12;
                          }
                          
                          var newk_14980207 = nimCopy(null, Tmp6, NTI112);
                          HEX5BHEX5DHEX3D_14170347(all_sectors_tmp_14937148[0], newk_14980207, newv_14937151);
                        } while(false);
                        if (!((len_14120198(all_sectors_13800629[0]) == l_15085801))) {
                        failed_assert_impl_102680(makeNimstrLit("tables.nim(1675, 11) `len(t) == L` the length of the table changed while iterating over it"));
                        }
                        
                        }
                        
                        h_15085802 = nxt_15085804;
                      }
                  } while(false);
                  }
                  
                } while(false);
                nimCopy(all_sectors_13800629[0], JSON.parse(JSON.stringify(all_sectors_tmp_14937148[0])), NTI13701200);

              
            }
    function HEX3Aanonymous_14985170(ev_14985173, n_14985174) {
        var el_selects_14985175 = document.querySelectorAll("div.chg-sect-name input");
        var new_district_name_14985176 = null;
        var from_nsect_14985177 = null;
        var to_nsect_14985178 = null;
        L1: do {
          var el_14985185 = null;
          var i_15085807 = 0;
          var l_15085808 = (el_selects_14985175 != null ? el_selects_14985175.length : 0);
          L2: do {
              L3: while (true) {
              if (!(i_15085807 < l_15085808)) break L3;
                el_14985185 = el_selects_14985175[chckIndx(i_15085807, 0, (el_selects_14985175 != null ? el_selects_14985175.length : 0)+0-1)-0];
                switch (toJSStr(cstrToNimstr(el_14985185.name))) {
                case "newDistrictName":
                  new_district_name_14985176 = nimCopy(null, cstrToNimstr(el_14985185.value.trim()), NTI112);
                  break;
                case "fromNSect":
                  from_nsect_14985177 = nimCopy(null, cstrToNimstr(el_14985185.value.trim()), NTI112);
                  break;
                case "toNSect":
                  to_nsect_14985178 = nimCopy(null, cstrToNimstr(el_14985185.value.trim()), NTI112);
                  break;
                default: 
                  break;
                }
                i_15085807 = addInt(i_15085807, 1);
                if (!(((el_selects_14985175 != null ? el_selects_14985175.length : 0) == l_15085808))) {
                failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);
        L4: do {
          var k_14995245 = null;
          var v_14995246 = null;
          var v_14995246_Idx = 0;
          var l_15085812 = len_14120198(all_sectors_13800629[0]);
          if ((0 < all_sectors_13800629[0].counter)) {
          var h_15085813 = all_sectors_13800629[0].first;
          L5: do {
              L6: while (true) {
              if (!(0 <= h_15085813)) break L6;
                var nxt_15085815 = all_sectors_13800629[0].data[chckIndx(h_15085813, 0, (all_sectors_13800629[0].data != null ? all_sectors_13800629[0].data.length : 0)+0-1)-0].Field1;
                if (is_filled_10612018(all_sectors_13800629[0].data[chckIndx(h_15085813, 0, (all_sectors_13800629[0].data != null ? all_sectors_13800629[0].data.length : 0)+0-1)-0].Field0)) {
                k_14995245 = all_sectors_13800629[0].data[chckIndx(h_15085813, 0, (all_sectors_13800629[0].data != null ? all_sectors_13800629[0].data.length : 0)+0-1)-0].Field2;
                v_14995246 = all_sectors_13800629[0].data[chckIndx(h_15085813, 0, (all_sectors_13800629[0].data != null ? all_sectors_13800629[0].data.length : 0)+0-1)-0]; v_14995246_Idx = "Field3";
                if (contains_15000166(HEX2EHEX2E_15000001(from_nsect_14985177, to_nsect_14985178), nucStrip(k_14995245, true, true, [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288]))) {
                v_14995246[v_14995246_Idx].folkDistrict = nimCopy(null, new_district_name_14985176, NTI112);
                }
                
                if (!((len_14120198(all_sectors_13800629[0]) == l_15085812))) {
                failed_assert_impl_102680(makeNimstrLit("tables.nim(1697, 11) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                h_15085813 = nxt_15085815;
              }
          } while(false);
          }
          
        } while(false);

      
    }

  var result_14791540 = null;

    var tmp_14795276 = tree_12535445(43, []);
    tmp_14795276.class = "main-root";
    add_event_handler_13290118(tmp_14795276, 11, chckd_check_14640267, kxi_12727284[0]);
    var tmp_14795282 = tree_12535445(43, []);
    if (!((len_14120198(all_sectors_13800629[0]) == 0))) {
    var tmp_14795283 = tree_12535445(106, []);
    add_12525072(tmp_14795283, text_12535548(makeNimstrLit("\xD0\xA1\xD0\xBE\xD1\x85\xD1\x80\xD0\xB0\xD0\xBD\xD0\xB8\xD1\x82\xD1\x8C")));
    add_event_handler_13290118(tmp_14795283, 0, HEX3Aanonymous_14805138, kxi_12727284[0]);
    add_12525072(tmp_14795282, tmp_14795283);
    }
    
    var tmp_14795284 = tree_12535445(105, []);
    set_attr_12475105(tmp_14795284, "type", "file");
    set_attr_12475105(tmp_14795284, "name", "fileArea");
    add_event_handler_13290118(tmp_14795284, 8, HEX3Aanonymous_14805161, kxi_12727284[0]);
    add_12525072(tmp_14795282, tmp_14795284);
    var tmp_14795285 = tree_12535445(43, []);
    var tmp_14795286 = tree_12535445(105, []);
    set_attr_12475105(tmp_14795286, "type", "text");
    set_attr_12475105(tmp_14795286, "placeholder", "найти адрес на карте");
    add_event_handler_13290118(tmp_14795286, 8, HEX3Aanonymous_14825040, kxi_12727284[0]);
    add_12525072(tmp_14795285, tmp_14795286);
    add_12525072(tmp_14795282, tmp_14795285);
    L1: do {
      var k_14875103 = null;
      var v_14875104 = null;
      var l_15085511 = len_14120198(all_sectors_13800629[0]);
      if ((0 < all_sectors_13800629[0].counter)) {
      var h_15085512 = all_sectors_13800629[0].first;
      L2: do {
          L3: while (true) {
          if (!(0 <= h_15085512)) break L3;
            var nxt_15085514 = all_sectors_13800629[0].data[chckIndx(h_15085512, 0, (all_sectors_13800629[0].data != null ? all_sectors_13800629[0].data.length : 0)+0-1)-0].Field1;
            if (is_filled_10612018(all_sectors_13800629[0].data[chckIndx(h_15085512, 0, (all_sectors_13800629[0].data != null ? all_sectors_13800629[0].data.length : 0)+0-1)-0].Field0)) {
            k_14875103 = all_sectors_13800629[0].data[chckIndx(h_15085512, 0, (all_sectors_13800629[0].data != null ? all_sectors_13800629[0].data.length : 0)+0-1)-0].Field2;
            v_14875104 = all_sectors_13800629[0].data[chckIndx(h_15085512, 0, (all_sectors_13800629[0].data != null ? all_sectors_13800629[0].data.length : 0)+0-1)-0].Field3;
            var id4move_14875105 = nsuReplaceStr(k_14875103, makeNimstrLit(" "), makeNimstrLit("_"));
            var tmp_14795287 = tree_12535445(43, []);
            tmp_14795287.class = "sector";
            var tmp_14795288 = tree_12535445(70, []);
            tmp_14795288.class = "sect-name";
            add_12525072(tmp_14795288, text_12535548(name_14101053(v_14875104)));
            add_12525072(tmp_14795287, tmp_14795288);
            var tmp_14795289 = tree_12535445(43, []);
            tmp_14795289.class = "streets";
            L4: do {
              var n_street_14875125 = null;
              var links_14875126 = null;
              var l_15085491 = len_14465548(v_14875104.streets);
              if ((0 < v_14875104.streets.counter)) {
              var h_15085492 = v_14875104.streets.first;
              L5: do {
                  L6: while (true) {
                  if (!(0 <= h_15085492)) break L6;
                    var nxt_15085494 = v_14875104.streets.data[chckIndx(h_15085492, 0, (v_14875104.streets.data != null ? v_14875104.streets.data.length : 0)+0-1)-0].Field1;
                    if (is_filled_10612018(v_14875104.streets.data[chckIndx(h_15085492, 0, (v_14875104.streets.data != null ? v_14875104.streets.data.length : 0)+0-1)-0].Field0)) {
                    n_street_14875125 = v_14875104.streets.data[chckIndx(h_15085492, 0, (v_14875104.streets.data != null ? v_14875104.streets.data.length : 0)+0-1)-0].Field2;
                    links_14875126 = v_14875104.streets.data[chckIndx(h_15085492, 0, (v_14875104.streets.data != null ? v_14875104.streets.data.length : 0)+0-1)-0].Field3;
                    var street_obj_14875127 = {name: nimCopy(null, n_street_14875125, NTI112), sector: v_14875104, links: null, totalFamilies: 0};
                    if (has_key_14875237(tbl_total_fam_14100772[0], hash_13701254(street_obj_14875127))) {
                    Tmp7 = (Tmp8 = HEX5BHEX5D_14875418(tbl_total_fam_14100772[0], hash_13701254(street_obj_14875127)), Tmp8)[0][Tmp8[1]];
                    }
                    else {
                    Tmp7 = 0;
                    }
                    
                    var total_fam_14880016 = Tmp7;
                    var coord_14880017 = links_14875126[chckIndx(0, 0, (links_14875126 != null ? links_14875126.length : 0)+0-1)-0].geometry[chckIndx(0, 0, (links_14875126[chckIndx(0, 0, (links_14875126 != null ? links_14875126.length : 0)+0-1)-0].geometry != null ? links_14875126[chckIndx(0, 0, (links_14875126 != null ? links_14875126.length : 0)+0-1)-0].geometry.length : 0)+0-1)-0];
                    var tmp_14795290 = tree_12535445(43, []);
                    tmp_14795290.class = "street";
                    var tmp_14795291 = tree_12535445(70, []);
                    set_attr_12475105(tmp_14795291, "data-lat", toJSStr(cstrToNimstr((coord_14880017.lat)+"")));
                    set_attr_12475105(tmp_14795291, "data-lng", toJSStr(cstrToNimstr((coord_14880017.lng)+"")));
                    add_event_handler_13290118(tmp_14795291, 0, clck_on_str_14791541, kxi_12727284[0]);
                    add_12525072(tmp_14795291, text_12535548(nsuJoinSep([nimCopy(null, n_street_14875125, NTI112), makeNimstrLit(" ("), cstrToNimstr((total_fam_14880016)+""), makeNimstrLit(")")], [])));
                    add_12525072(tmp_14795290, tmp_14795291);
                    add_12525072(tmp_14795289, tmp_14795290);
                    if (!((len_14465548(v_14875104.streets) == l_15085491))) {
                    failed_assert_impl_102680(makeNimstrLit("tables.nim(1675, 11) `len(t) == L` the length of the table changed while iterating over it"));
                    }
                    
                    }
                    
                    h_15085492 = nxt_15085494;
                  }
              } while(false);
              }
              
            } while(false);
            add_12525072(tmp_14795287, tmp_14795289);
            var tmp_14795292 = tree_12535445(43, []);
            tmp_14795292.class = "show-sector-box";
            var tmp_14795293 = tree_12535445(104, []);
            set_attr_12475105(tmp_14795293, "for", toJSStr(k_14875103));
            add_12525072(tmp_14795293, text_12535548((makeNimstrLit("\xD0\x9F\xD0\xBE\xD0\xBA\xD0\xB0\xD0\xB7. \xD0\xBD\xD0\xB0 \xD0\xBA\xD0\xB0\xD1\x80\xD1\x82\xD0\xB5 (") || []).concat(cstrToNimstr((len_14465548(v_14875104.streets))+"") || [],makeNimstrLit(")") || [])));
            add_12525072(tmp_14795292, tmp_14795293);
            var tmp_14795294 = tree_12535445(105, []);
            set_attr_12475105(tmp_14795294, "type", "checkbox");
            set_attr_12475105(tmp_14795294, "name", "showSector");
            tmp_14795294.class = "show-sector";
            valueHEX3D_12440143(tmp_14795294, toJSStr(k_14875103));
            set_attr_12475105(tmp_14795294, "value", toJSStr(k_14875103));
            tmp_14795294.id = toJSStr(k_14875103);
            set_attr_12475105(tmp_14795294, "checkd", toJSStr(nimBoolToStr(v_14875104.shownOnMap)));
            add_event_handler_13290118(tmp_14795294, 0, HEX3Aanonymous_14880174, kxi_12727284[0]);
            add_12525072(tmp_14795292, tmp_14795294);
            add_12525072(tmp_14795287, tmp_14795292);
            var tmp_14795295 = tree_12535445(43, []);
            tmp_14795295.class = "for-select";
            var tmp_14795296 = tree_12535445(107, []);
            tmp_14795296.id = toJSStr(id4move_14875105);
            var tmp_14795297 = tree_12535445(110, []);
            valueHEX3D_12440143(tmp_14795297, "");
            set_attr_12475105(tmp_14795297, "value", "");
            add_12525072(tmp_14795297, text_12535548(makeNimstrLit("\xD0\x94\xD0\xB2\xD0\xB8\xD0\xBD\xD1\x83\xD1\x82\xD1\x8C \xD0\xB2\xD1\x81\xD0\xB5 \xD1\x83\xD0\xBB\xD0\xB8\xD1\x86\xD1\x8B \xD0\xB2")));
            add_12525072(tmp_14795296, tmp_14795297);
            L9: do {
              var k_opt_14910233 = null;
              var v_opt_14910234 = null;
              var l_15085505 = len_14120198(all_sectors_13800629[0]);
              if ((0 < all_sectors_13800629[0].counter)) {
              var h_15085506 = all_sectors_13800629[0].first;
              L10: do {
                  L11: while (true) {
                  if (!(0 <= h_15085506)) break L11;
                    var nxt_15085508 = all_sectors_13800629[0].data[chckIndx(h_15085506, 0, (all_sectors_13800629[0].data != null ? all_sectors_13800629[0].data.length : 0)+0-1)-0].Field1;
                    if (is_filled_10612018(all_sectors_13800629[0].data[chckIndx(h_15085506, 0, (all_sectors_13800629[0].data != null ? all_sectors_13800629[0].data.length : 0)+0-1)-0].Field0)) {
                    k_opt_14910233 = all_sectors_13800629[0].data[chckIndx(h_15085506, 0, (all_sectors_13800629[0].data != null ? all_sectors_13800629[0].data.length : 0)+0-1)-0].Field2;
                    v_opt_14910234 = all_sectors_13800629[0].data[chckIndx(h_15085506, 0, (all_sectors_13800629[0].data != null ? all_sectors_13800629[0].data.length : 0)+0-1)-0].Field3;
                    L12: do {
                      if (eqStrings(k_opt_14910233, id_14105026(v_14875104))) {
                      break L12;
                      }
                      
                      var tmp_14795298 = tree_12535445(110, []);
                      valueHEX3D_12440143(tmp_14795298, toJSStr(k_opt_14910233));
                      set_attr_12475105(tmp_14795298, "value", toJSStr(k_opt_14910233));
                      add_12525072(tmp_14795298, text_12535548(k_opt_14910233));
                      add_12525072(tmp_14795296, tmp_14795298);
                    } while(false);
                    if (!((len_14120198(all_sectors_13800629[0]) == l_15085505))) {
                    failed_assert_impl_102680(makeNimstrLit("tables.nim(1675, 11) `len(t) == L` the length of the table changed while iterating over it"));
                    }
                    
                    }
                    
                    h_15085506 = nxt_15085508;
                  }
              } while(false);
              }
              
            } while(false);
            add_12525072(tmp_14795295, tmp_14795296);
            var tmp_14795299 = tree_12535445(106, []);
            tmp_14795299.id = toJSStr(id4move_14875105);
            add_12525072(tmp_14795299, text_12535548(makeNimstrLit("\xD0\x9E\xD0\xBA !")));
            add_event_handler_13290118(tmp_14795299, 0, HEX3Aanonymous_14910246, kxi_12727284[0]);
            add_12525072(tmp_14795295, tmp_14795299);
            add_12525072(tmp_14795287, tmp_14795295);
            var tmp_14795300 = tree_12535445(106, []);
            tmp_14795300.id = toJSStr(id4move_14875105);
            add_12525072(tmp_14795300, text_12535548(makeNimstrLit("\xD0\xB2\xD1\x81\xD1\x82\xD0\xB0\xD0\xB2\xD0\xB8\xD1\x82\xD1\x8C \xD0\xBD\xD0\xBE\xD0\xB2\xD1\x8B\xD0\xB9 \xD1\x83\xD1\x87\xD0\xB0\xD1\x81\xD1\x82\xD0\xBE\xD0\xBA")));
            add_event_handler_13290118(tmp_14795300, 0, HEX3Aanonymous_14936971, kxi_12727284[0]);
            add_12525072(tmp_14795287, tmp_14795300);
            add_12525072(tmp_14795282, tmp_14795287);
            if (!((len_14120198(all_sectors_13800629[0]) == l_15085511))) {
            failed_assert_impl_102680(makeNimstrLit("tables.nim(1675, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_15085512 = nxt_15085514;
          }
      } while(false);
      }
      
    } while(false);
    if (!((len_14120198(all_sectors_13800629[0]) == 0))) {
    var tmp_14795301 = tree_12535445(43, []);
    tmp_14795301.class = "chg-sect-name";
    var tmp_14795302 = tree_12535445(104, []);
    add_12525072(tmp_14795302, text_12535548(makeNimstrLit("\xD1\x83\xD1\x81\xD1\x82\xD0\xB0\xD0\xBD\xD0\xBE\xD0\xB2\xD0\xB8\xD1\x82\xD1\x8C \xD0\xBD\xD0\xBE\xD0\xB2\xD0\xBE\xD0\xB5 \xD0\xB8\xD0\xBC\xD1\x8F \xD1\x80\xD0\xB0\xD0\xB9\xD0\xBE\xD0\xBD\xD0\xB0: ")));
    add_12525072(tmp_14795301, tmp_14795302);
    var tmp_14795303 = tree_12535445(105, []);
    set_attr_12475105(tmp_14795303, "type", "text");
    set_attr_12475105(tmp_14795303, "placeholder", "новое имя района");
    set_attr_12475105(tmp_14795303, "name", "newDistrictName");
    add_12525072(tmp_14795301, tmp_14795303);
    var tmp_14795304 = tree_12535445(31, []);
    var tmp_14795305 = tree_12535445(104, []);
    add_12525072(tmp_14795305, text_12535548(makeNimstrLit("\xD1\x81: ")));
    add_12525072(tmp_14795304, tmp_14795305);
    var tmp_14795306 = tree_12535445(105, []);
    set_attr_12475105(tmp_14795306, "type", "text");
    set_attr_12475105(tmp_14795306, "placeholder", "с номера участка");
    set_attr_12475105(tmp_14795306, "name", "fromNSect");
    add_12525072(tmp_14795304, tmp_14795306);
    var tmp_14795307 = tree_12535445(104, []);
    add_12525072(tmp_14795307, text_12535548(makeNimstrLit("\xD0\xBF\xD0\xBE: ")));
    add_12525072(tmp_14795304, tmp_14795307);
    var tmp_14795308 = tree_12535445(105, []);
    set_attr_12475105(tmp_14795308, "type", "text");
    set_attr_12475105(tmp_14795308, "placeholder", "по номер участка");
    set_attr_12475105(tmp_14795308, "name", "toNSect");
    add_12525072(tmp_14795304, tmp_14795308);
    add_12525072(tmp_14795301, tmp_14795304);
    var tmp_14795309 = tree_12535445(106, []);
    add_12525072(tmp_14795309, text_12535548(makeNimstrLit("\xD1\x83\xD1\x81\xD1\x82\xD0\xB0\xD0\xBD\xD0\xBE\xD0\xB2\xD0\xB8\xD1\x82\xD1\x8C!")));
    add_event_handler_13290118(tmp_14795309, 0, HEX3Aanonymous_14985170, kxi_12727284[0]);
    add_12525072(tmp_14795301, tmp_14795309);
    add_12525072(tmp_14795282, tmp_14795301);
    }
    
    L13: do {
      var k_15010229 = null;
      var v_15010230 = 0;
      var l_15085533 = len_14655152(last_postfix_13820629[0]);
      L14: do {
        var h_15085535 = 0;
        var colontmp__15085536 = 0;
        colontmp__15085536 = (last_postfix_13820629[0].data != null ? (last_postfix_13820629[0].data.length-1) : -1);
        var res_15085537 = 0;
        L15: do {
            L16: while (true) {
            if (!(res_15085537 <= colontmp__15085536)) break L16;
              h_15085535 = res_15085537;
              if (is_filled_10612018(last_postfix_13820629[0].data[chckIndx(h_15085535, 0, (last_postfix_13820629[0].data != null ? last_postfix_13820629[0].data.length : 0)+0-1)-0].Field0)) {
              k_15010229 = last_postfix_13820629[0].data[chckIndx(h_15085535, 0, (last_postfix_13820629[0].data != null ? last_postfix_13820629[0].data.length : 0)+0-1)-0].Field1;
              v_15010230 = last_postfix_13820629[0].data[chckIndx(h_15085535, 0, (last_postfix_13820629[0].data != null ? last_postfix_13820629[0].data.length : 0)+0-1)-0].Field2;
              var tmp_14795310 = tree_12535445(43, []);
              add_12525072(tmp_14795310, text_12535548((k_15010229 || []).concat(makeNimstrLit(" : ") || [],cstrToNimstr((v_15010230)+"") || [])));
              add_12525072(tmp_14795282, tmp_14795310);
              if (!((len_14655152(last_postfix_13820629[0]) == l_15085533))) {
              failed_assert_impl_102680(makeNimstrLit("tables.nim(664, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_15085537 = addInt(res_15085537, 1);
            }
        } while(false);
      } while(false);
    } while(false);
    L17: do {
      var k_15020229 = null;
      var v_15020230 = null;
      var l_15085546 = len_15010368(all_streets_13760629[0]);
      if ((0 < all_streets_13760629[0].counter)) {
      var h_15085547 = all_streets_13760629[0].first;
      L18: do {
          L19: while (true) {
          if (!(0 <= h_15085547)) break L19;
            var nxt_15085549 = all_streets_13760629[0].data[chckIndx(h_15085547, 0, (all_streets_13760629[0].data != null ? all_streets_13760629[0].data.length : 0)+0-1)-0].Field1;
            if (is_filled_10612018(all_streets_13760629[0].data[chckIndx(h_15085547, 0, (all_streets_13760629[0].data != null ? all_streets_13760629[0].data.length : 0)+0-1)-0].Field0)) {
            k_15020229 = all_streets_13760629[0].data[chckIndx(h_15085547, 0, (all_streets_13760629[0].data != null ? all_streets_13760629[0].data.length : 0)+0-1)-0].Field2;
            v_15020230 = all_streets_13760629[0].data[chckIndx(h_15085547, 0, (all_streets_13760629[0].data != null ? all_streets_13760629[0].data.length : 0)+0-1)-0].Field3;
            L20: do {
              if (!((v_15020230.sector == null))) {
              break L20;
              }
              
              var coord_15025009 = v_15020230.links[chckIndx(0, 0, (v_15020230.links != null ? v_15020230.links.length : 0)+0-1)-0].geometry[chckIndx(0, 0, (v_15020230.links[chckIndx(0, 0, (v_15020230.links != null ? v_15020230.links.length : 0)+0-1)-0].geometry != null ? v_15020230.links[chckIndx(0, 0, (v_15020230.links != null ? v_15020230.links.length : 0)+0-1)-0].geometry.length : 0)+0-1)-0];
              var tmp_14795311 = tree_12535445(43, []);
              tmp_14795311.class = "street";
              var tmp_14795312 = tree_12535445(70, []);
              set_attr_12475105(tmp_14795312, "data-lat", toJSStr(cstrToNimstr((coord_15025009.lat)+"")));
              set_attr_12475105(tmp_14795312, "data-lng", toJSStr(cstrToNimstr((coord_15025009.lng)+"")));
              add_event_handler_13290118(tmp_14795312, 0, clck_on_str_14791541, kxi_12727284[0]);
              add_12525072(tmp_14795312, text_12535548(k_15020229));
              add_12525072(tmp_14795311, tmp_14795312);
              add_12525072(tmp_14795282, tmp_14795311);
            } while(false);
            if (!((len_15010368(all_streets_13760629[0]) == l_15085546))) {
            failed_assert_impl_102680(makeNimstrLit("tables.nim(1675, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_15085547 = nxt_15085549;
          }
      } while(false);
      }
      
    } while(false);
    add_12525072(tmp_14795276, tmp_14795282);
    result_14791540 = tmp_14795276;

  return result_14791540;

}
var Tmp3;
var loc_search_15035008 = [cstrToNimstr((window.location.search))];
loc_search_15035008[0] = nimCopy(null, nsuReplaceStr(loc_search_15035008[0], makeNimstrLit("?"), []), NTI112);
var arr_ls_15035009 = nsuSplitString(loc_search_15035008[0], makeNimstrLit("&"), -1);
var apikey_15035010 = nimCopy(null, (Tmp3 = nsuSplitString(arr_ls_15035009[0], makeNimstrLit("="), -1), Tmp3)[1], NTI112);
var opts_15035012 = {apikey: toJSStr(apikey_15035010), useHTTPS: true, m_type: NTI13367030, app_id: null, app_code: null, useCIT: false};
var pixel_ratio_15040008 = (window.devicePixelRatio);
var hidpi_15045001 = (1.0000000000000000e+000 < pixel_ratio_15040008);
var layer_opts_15045002 = [{m_type: NTI13435014, tileSize: 0, ppi: 0, lg: null, lg2: null, style: null, pois: false, crossOrigin: null}];
if (hidpi_15045001) {
layer_opts_15045002[0].ppi = 320;
}

platform_13720017[0] = function(o){return new H.service.Platform(o)}(opts_15035012);
var def_layers_15045004 = platform_13720017[0].createDefaultLayers();
var map_opts_15045007 = [{pixelRatio: pixel_ratio_15040008, m_type: NTI13587035, noWrap: false}];
map = function(element, baseLayer, opt_options){return new H.Map(element, baseLayer, opt_options)}(document.getElementById("map"), def_layers_15045004.vector.normal.map, map_opts_15045007[0]);
var map_evts_15055002 = function(map){return new H.mapevents.MapEvents(map)}(map);
var behavior = function(mapE){return new H.mapevents.Behavior(mapE)}(map_evts_15055002);
var ui_def_15085004 = [H.ui.UI.createDefault((map), (def_layers_15045004))];
set_renderer_13285238(create_dom_14791538, "main-control-container", null);
map.setCenter({lat: 5.0151851800000003e+001, lng: 8.9302924000000008e+000, m_type: NTI10891036}, false);
map.setZoom(9, false);
var main_group_15085006 = [function(){return new H.map.Group()}()];
var main_sector_group_15085007 = [function(){return new H.map.Group()}()];
main_group_15085006[0].setZIndex(99);
map.addObject(main_group_15085006[0]);
map.addObject(main_sector_group_15085007[0]);
var mrk_15085020 = function(position){return new H.map.Marker(position)}({lat: 5.2000000000000000e+001, lng: 8.0000000000000000e+000, m_type: NTI10891036});
var p_15085022 = {lat: 3.4000000000000000e+001, lng: 1.2300000000000000e+002, m_type: NTI10891036};
var scr_point_15085023 = function(x,y){return new H.math.Point(x, y)}(1, 1);
var check_15085026 = isPointInPolygon(scr_point_15085023, [function(x,y){return new H.math.Point(x, y)}(0, 0), function(x,y){return new H.math.Point(x, y)}(0, 3), function(x,y){return new H.math.Point(x, y)}(3, 3)]);
rawEcho(makeNimstrLit("check: "), nimBoolToStr(check_15085026));
var cle_15085031 = platform_13720017[0].getCustomLocationService();
var geocoder_15085032 = platform_13720017[0].getGeocodingService();
var pde_service_15085033 = [platform_13720017[0].getPlatformDataService()];
map.addObject(mv_street_grp_13820630[0]);
var str_ggeo_point_16430280 = [new_seq_610232(0)];
function len_14325430(t_14325435) {
  var result_14325436 = 0;

    result_14325436 = t_14325435.counter;

  return result_14325436;

}
function len_15940144(t_15940149) {
  var result_15940150 = 0;

    result_15940150 = t_15940149.counter;

  return result_15940150;

}
function raw_get_15232019(t_15232023, key_15232024, hc_15232025, hc_15232025_Idx) {
            var Tmp3;

  var result_15232026 = 0;

  BeforeRet: do {
    hc_15232025[hc_15232025_Idx] = hash_10550440(key_15232024);
    if ((hc_15232025[hc_15232025_Idx] == 0)) {
    hc_15232025[hc_15232025_Idx] = 314159265;
    }
    
    if (((t_15232023.data != null ? t_15232023.data.length : 0) == 0)) {
    result_15232026 = -1;
    break BeforeRet;
    }
    
    var h_15240138 = (hc_15232025[hc_15232025_Idx] & (t_15232023.data != null ? (t_15232023.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_10612018(t_15232023.data[chckIndx(h_15240138, 0, (t_15232023.data != null ? t_15232023.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_15232023.data[chckIndx(h_15240138, 0, (t_15232023.data != null ? t_15232023.data.length : 0)+0-1)-0].Field0 == hc_15232025[hc_15232025_Idx])) Tmp3 = false; else {              Tmp3 = (t_15232023.data[chckIndx(h_15240138, 0, (t_15232023.data != null ? t_15232023.data.length : 0)+0-1)-0].Field1 == key_15232024);            }          if (Tmp3) {
          result_15232026 = h_15240138;
          break BeforeRet;
          }
          
          h_15240138 = next_try_10615014(h_15240138, (t_15232023.data != null ? (t_15232023.data.length-1) : -1));
        }
    } while(false);
    result_15232026 = subInt(-1, h_15240138);
  } while (false);

  return result_15232026;

}
function must_rehash_15530601(t_15530604) {
  var result_15530605 = false;

    if (!((t_15530604.counter < (t_15530604.data != null ? t_15530604.data.length : 0)))) {
    failed_assert_impl_102680(makeNimstrLit("hashcommon.nim(33, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_15530605 = ((mulInt((t_15530604.data != null ? t_15530604.data.length : 0), 2) < mulInt(t_15530604.counter, 3)) || (subInt((t_15530604.data != null ? t_15530604.data.length : 0), t_15530604.counter) < 4));

  return result_15530605;

}
function raw_insert_15556122(t_15556128, data_15556131, data_15556131_Idx, key_15556132, val_15556133, hc_15556134, h_15556135) {
    data_15556131[data_15556131_Idx][chckIndx(h_15556135, 0, (data_15556131[data_15556131_Idx] != null ? data_15556131[data_15556131_Idx].length : 0)+0-1)-0].Field1 = key_15556132;
    data_15556131[data_15556131_Idx][chckIndx(h_15556135, 0, (data_15556131[data_15556131_Idx] != null ? data_15556131[data_15556131_Idx].length : 0)+0-1)-0].Field2 = val_15556133;
    data_15556131[data_15556131_Idx][chckIndx(h_15556135, 0, (data_15556131[data_15556131_Idx] != null ? data_15556131[data_15556131_Idx].length : 0)+0-1)-0].Field0 = hc_15556134;

  
}
function enlarge_15555161(t_15555167) {
    var n_15555175 = null;
    n_15555175 = new Array(chckRange(mulInt((t_15555167.data != null ? t_15555167.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_15555167.data != null ? t_15555167.data.length : 0), 2), 0, 2147483647);++i) {n_15555175[i]={Field0: 0, Field1: 0, Field2: null};}    var Tmp1 = t_15555167.data; t_15555167.data = n_15555175; n_15555175 = Tmp1;    L2: do {
      var i_15555334 = 0;
      var colontmp__16465387 = 0;
      colontmp__16465387 = (n_15555175 != null ? (n_15555175.length-1) : -1);
      var res_16465388 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_16465388 <= colontmp__16465387)) break L4;
            i_15555334 = res_16465388;
            var eh_15555490 = n_15555175[chckIndx(i_15555334, 0, (n_15555175 != null ? n_15555175.length : 0)+0-1)-0].Field0;
            if (is_filled_10612018(eh_15555490)) {
            var j_15555497 = (eh_15555490 & (t_15555167.data != null ? (t_15555167.data.length-1) : -1));
            L5: do {
                L6: while (true) {
                if (!is_filled_10612018(t_15555167.data[chckIndx(j_15555497, 0, (t_15555167.data != null ? t_15555167.data.length : 0)+0-1)-0].Field0)) break L6;
                  j_15555497 = next_try_10615014(j_15555497, (t_15555167.data != null ? (t_15555167.data.length-1) : -1));
                }
            } while(false);
            raw_insert_15556122(t_15555167, t_15555167, "data", n_15555175[chckIndx(i_15555334, 0, (n_15555175 != null ? n_15555175.length : 0)+0-1)-0].Field1, n_15555175[chckIndx(i_15555334, 0, (n_15555175 != null ? n_15555175.length : 0)+0-1)-0].Field2, eh_15555490, j_15555497);
            }
            
            res_16465388 = addInt(res_16465388, 1);
          }
      } while(false);
    } while(false);

  
}
function raw_get_known_hc_15556628(t_15556632, key_15556633, hc_15556634) {
  var result_15556635 = 0;

  BeforeRet: do {
    if (((t_15556632.data != null ? t_15556632.data.length : 0) == 0)) {
    result_15556635 = -1;
    break BeforeRet;
    }
    
    var h_15560138 = (hc_15556634 & (t_15556632.data != null ? (t_15556632.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_10612018(t_15556632.data[chckIndx(h_15560138, 0, (t_15556632.data != null ? t_15556632.data.length : 0)+0-1)-0].Field0)) break L2;
          if (((t_15556632.data[chckIndx(h_15560138, 0, (t_15556632.data != null ? t_15556632.data.length : 0)+0-1)-0].Field0 == hc_15556634) && (t_15556632.data[chckIndx(h_15560138, 0, (t_15556632.data != null ? t_15556632.data.length : 0)+0-1)-0].Field1 == key_15556633))) {
          result_15556635 = h_15560138;
          break BeforeRet;
          }
          
          h_15560138 = next_try_10615014(h_15560138, (t_15556632.data != null ? (t_15556632.data.length-1) : -1));
        }
    } while(false);
    result_15556635 = subInt(-1, h_15560138);
  } while (false);

  return result_15556635;

}
function has_key_or_put_15480085(t_15480091, key_15480092, val_15480093) {
  var result_15480094 = false;

    if (((t_15480091.data != null ? t_15480091.data.length : 0) == 0)) {
    if (!(is_power_of_two_8715029(64))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    t_15480091.counter = 0;
    t_15480091.data = new Array(64); for (var i=0;i<64;++i) {t_15480091.data[i]={Field0: 0, Field1: 0, Field2: null};}    }
    
    var hc_15505601 = [0];
    var index_15505610 = raw_get_15232019(t_15480091, key_15480092, hc_15505601, 0);
    if ((index_15505610 < 0)) {
    result_15480094 = false;
    if (((t_15480091.data != null ? t_15480091.data.length : 0) == 0)) {
    if (!(is_power_of_two_8715029(64))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    t_15480091.counter = 0;
    t_15480091.data = new Array(64); for (var i=0;i<64;++i) {t_15480091.data[i]={Field0: 0, Field1: 0, Field2: null};}    }
    
    if (must_rehash_15530601(t_15480091)) {
    enlarge_15555161(t_15480091);
    index_15505610 = raw_get_known_hc_15556628(t_15480091, key_15480092, hc_15505601[0]);
    }
    
    index_15505610 = subInt(-1, index_15505610);
    raw_insert_15556122(t_15480091, t_15480091, "data", key_15480092, val_15480093, hc_15505601[0], index_15505610);
    t_15480091.counter = addInt(t_15480091.counter, 1);
    }
    else {
      result_15480094 = true;
    }
    

  return result_15480094;

}
function HEX5BHEX5D_15240788(t_15240794, key_15240795) {
  var result_15240797 = null;
  var result_15240797_Idx = 0;

    var hc_15240798 = [0];
    var index_15240799 = raw_get_15232019(t_15240794, key_15240795, hc_15240798, 0);
    if ((0 <= index_15240799)) {
    result_15240797 = t_15240794.data[chckIndx(index_15240799, 0, (t_15240794.data != null ? t_15240794.data.length : 0)+0-1)-0]; result_15240797_Idx = "Field2";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(cstrToNimstr((key_15240795)+"") || []), parent: null, m_type: NTI6245, name: null, trace: null, up: null}, "KeyError");
    }
    

  return [result_15240797, result_15240797_Idx];

}
function new_seq_15605179(len_15605182) {
  var result_15605184 = null;

    result_15605184 = new Array(len_15605182); for (var i=0;i<len_15605182;++i) {result_15605184[i]=null;}
  return result_15605184;

}
function map_15660221(s_15660226, op_15660229) {
  var result_15660231 = null;

    result_15660231 = new Array(chckRange((s_15660226 != null ? s_15660226.length : 0), 0, 2147483647)); for (var i=0;i<chckRange((s_15660226 != null ? s_15660226.length : 0), 0, 2147483647);++i) {result_15660231[i]=0;}    L1: do {
      var i_15660254 = 0;
      var colontmp__16465396 = 0;
      colontmp__16465396 = (s_15660226 != null ? s_15660226.length : 0);
      var i_16465397 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_16465397 < colontmp__16465396)) break L3;
            i_15660254 = i_16465397;
            result_15660231[chckIndx(i_15660254, 0, (result_15660231 != null ? result_15660231.length : 0)+0-1)-0] = op_15660229(s_15660226[chckIndx(i_15660254, 0, (s_15660226 != null ? s_15660226.length : 0)+0-1)-0]);
            i_16465397 = addInt(i_16465397, 1);
          }
      } while(false);
    } while(false);

  return result_15660231;

}
function new_seq_15660283(len_15660286) {
  var result_15660288 = null;

    result_15660288 = new Array(len_15660286); for (var i=0;i<len_15660286;++i) {result_15660288[i]=0;}
  return result_15660288;

}
function concat_15660510(seqs_15660515) {
  var result_15660517 = null;

    var l_15660519 = 0;
    L1: do {
      var seqitm_15660550 = null;
      var i_16465401 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_16465401 < (seqs_15660515 != null ? seqs_15660515.length : 0))) break L3;
            seqitm_15660550 = seqs_15660515[chckIndx(i_16465401, 0, (seqs_15660515 != null ? seqs_15660515.length : 0)+0-1)-0];
            l_15660519 = addInt(l_15660519, (seqitm_15660550 != null ? seqitm_15660550.length : 0));
            i_16465401 = addInt(i_16465401, 1);
          }
      } while(false);
    } while(false);
    result_15660517 = new Array(chckRange(l_15660519, 0, 2147483647)); for (var i=0;i<chckRange(l_15660519, 0, 2147483647);++i) {result_15660517[i]=0;}    var i_15660570 = 0;
    L4: do {
      var s_15660576 = null;
      var i_16465409 = 0;
      L5: do {
          L6: while (true) {
          if (!(i_16465409 < (seqs_15660515 != null ? seqs_15660515.length : 0))) break L6;
            s_15660576 = seqs_15660515[chckIndx(i_16465409, 0, (seqs_15660515 != null ? seqs_15660515.length : 0)+0-1)-0];
            L7: do {
              var itm_15660583 = 0;
              var i_16465406 = 0;
              var l_16465407 = (s_15660576 != null ? s_15660576.length : 0);
              L8: do {
                  L9: while (true) {
                  if (!(i_16465406 < l_16465407)) break L9;
                    itm_15660583 = s_15660576[chckIndx(i_16465406, 0, (s_15660576 != null ? s_15660576.length : 0)+0-1)-0];
                    result_15660517[chckIndx(i_15660570, 0, (result_15660517 != null ? result_15660517.length : 0)+0-1)-0] = itm_15660583;
                    i_15660570 = addInt(i_15660570, 1);
                    i_16465406 = addInt(i_16465406, 1);
                    if (!(((s_15660576 != null ? s_15660576.length : 0) == l_16465407))) {
                    failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while(false);
            } while(false);
            i_16465409 = addInt(i_16465409, 1);
          }
      } while(false);
    } while(false);

  return result_15660517;

}
function raw_get_15165338(t_15165343, key_15165344, hc_15165345, hc_15165345_Idx) {
            var Tmp3;

  var result_15165346 = 0;

  BeforeRet: do {
    hc_15165345[hc_15165345_Idx] = hash_10590214(key_15165344);
    if ((hc_15165345[hc_15165345_Idx] == 0)) {
    hc_15165345[hc_15165345_Idx] = 314159265;
    }
    
    if (((t_15165343.data != null ? t_15165343.data.length : 0) == 0)) {
    result_15165346 = -1;
    break BeforeRet;
    }
    
    var h_15175138 = (hc_15165345[hc_15165345_Idx] & (t_15165343.data != null ? (t_15165343.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_10612018(t_15165343.data[chckIndx(h_15175138, 0, (t_15165343.data != null ? t_15165343.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_15165343.data[chckIndx(h_15175138, 0, (t_15165343.data != null ? t_15165343.data.length : 0)+0-1)-0].Field0 == hc_15165345[hc_15165345_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_15165343.data[chckIndx(h_15175138, 0, (t_15165343.data != null ? t_15165343.data.length : 0)+0-1)-0].Field2, key_15165344);            }          if (Tmp3) {
          result_15165346 = h_15175138;
          break BeforeRet;
          }
          
          h_15175138 = next_try_10615014(h_15175138, (t_15165343.data != null ? (t_15165343.data.length-1) : -1));
        }
    } while(false);
    result_15165346 = subInt(-1, h_15175138);
  } while (false);

  return result_15165346;

}
function must_rehash_15715601(t_15715604) {
  var result_15715605 = false;

    if (!((t_15715604.counter < (t_15715604.data != null ? t_15715604.data.length : 0)))) {
    failed_assert_impl_102680(makeNimstrLit("hashcommon.nim(33, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_15715605 = ((mulInt((t_15715604.data != null ? t_15715604.data.length : 0), 2) < mulInt(t_15715604.counter, 3)) || (subInt((t_15715604.data != null ? t_15715604.data.length : 0), t_15715604.counter) < 4));

  return result_15715605;

}
function raw_insert_15741359(t_15741365, data_15741368, data_15741368_Idx, key_15741369, val_15741370, hc_15741371, h_15741372) {
    data_15741368[data_15741368_Idx][chckIndx(h_15741372, 0, (data_15741368[data_15741368_Idx] != null ? data_15741368[data_15741368_Idx].length : 0)+0-1)-0].Field2 = nimCopy(null, key_15741369, NTI112);
    data_15741368[data_15741368_Idx][chckIndx(h_15741372, 0, (data_15741368[data_15741368_Idx] != null ? data_15741368[data_15741368_Idx].length : 0)+0-1)-0].Field3 = val_15741370;
    data_15741368[data_15741368_Idx][chckIndx(h_15741372, 0, (data_15741368[data_15741368_Idx] != null ? data_15741368[data_15741368_Idx].length : 0)+0-1)-0].Field0 = hc_15741371;
    data_15741368[data_15741368_Idx][chckIndx(h_15741372, 0, (data_15741368[data_15741368_Idx] != null ? data_15741368[data_15741368_Idx].length : 0)+0-1)-0].Field1 = -1;
    if ((t_15741365.first < 0)) {
    t_15741365.first = h_15741372;
    }
    
    if ((0 <= t_15741365.last)) {
    data_15741368[data_15741368_Idx][chckIndx(t_15741365.last, 0, (data_15741368[data_15741368_Idx] != null ? data_15741368[data_15741368_Idx].length : 0)+0-1)-0].Field1 = h_15741372;
    }
    
    t_15741365.last = h_15741372;

  
}
function enlarge_15740180(t_15740186) {
          var Tmp6;
          var Tmp7;

    var n_15740194 = null;
    n_15740194 = new Array(chckRange(mulInt((t_15740186.data != null ? t_15740186.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_15740186.data != null ? t_15740186.data.length : 0), 2), 0, 2147483647);++i) {n_15740194[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    var h_15740333 = t_15740186.first;
    t_15740186.first = -1;
    t_15740186.last = -1;
    var Tmp1 = t_15740186.data; t_15740186.data = n_15740194; n_15740194 = Tmp1;    L2: do {
        L3: while (true) {
        if (!(0 <= h_15740333)) break L3;
          var nxt_15740496 = n_15740194[chckIndx(h_15740333, 0, (n_15740194 != null ? n_15740194.length : 0)+0-1)-0].Field1;
          var eh_15740652 = n_15740194[chckIndx(h_15740333, 0, (n_15740194 != null ? n_15740194.length : 0)+0-1)-0].Field0;
          if (is_filled_10612018(eh_15740652)) {
          var j_15740659 = (eh_15740652 & (t_15740186.data != null ? (t_15740186.data.length-1) : -1));
          L4: do {
              L5: while (true) {
              if (!is_filled_10612018(t_15740186.data[chckIndx(j_15740659, 0, (t_15740186.data != null ? t_15740186.data.length : 0)+0-1)-0].Field0)) break L5;
                j_15740659 = next_try_10615014(j_15740659, (t_15740186.data != null ? (t_15740186.data.length-1) : -1));
              }
          } while(false);
          Tmp6 = n_15740194[chckIndx(h_15740333, 0, (n_15740194 != null ? n_15740194.length : 0)+0-1)-0].Field2;
          n_15740194[chckIndx(h_15740333, 0, (n_15740194 != null ? n_15740194.length : 0)+0-1)-0].Field2 = genericReset(n_15740194[chckIndx(h_15740333, 0, (n_15740194 != null ? n_15740194.length : 0)+0-1)-0].Field2, NTI112);
          Tmp7 = n_15740194[chckIndx(h_15740333, 0, (n_15740194 != null ? n_15740194.length : 0)+0-1)-0].Field3;
          n_15740194[chckIndx(h_15740333, 0, (n_15740194 != null ? n_15740194.length : 0)+0-1)-0].Field3 = genericReset(n_15740194[chckIndx(h_15740333, 0, (n_15740194 != null ? n_15740194.length : 0)+0-1)-0].Field3, NTI13701020);
          raw_insert_15741359(t_15740186, t_15740186, "data", Tmp6, Tmp7, n_15740194[chckIndx(h_15740333, 0, (n_15740194 != null ? n_15740194.length : 0)+0-1)-0].Field0, j_15740659);
          }
          
          h_15740333 = nxt_15740496;
        }
    } while(false);

  
}
function raw_get_known_hc_15742194(t_15742199, key_15742200, hc_15742201) {
  var result_15742202 = 0;

  BeforeRet: do {
    if (((t_15742199.data != null ? t_15742199.data.length : 0) == 0)) {
    result_15742202 = -1;
    break BeforeRet;
    }
    
    var h_15745138 = (hc_15742201 & (t_15742199.data != null ? (t_15742199.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_10612018(t_15742199.data[chckIndx(h_15745138, 0, (t_15742199.data != null ? t_15742199.data.length : 0)+0-1)-0].Field0)) break L2;
          if (((t_15742199.data[chckIndx(h_15745138, 0, (t_15742199.data != null ? t_15742199.data.length : 0)+0-1)-0].Field0 == hc_15742201) && eqStrings(t_15742199.data[chckIndx(h_15745138, 0, (t_15742199.data != null ? t_15742199.data.length : 0)+0-1)-0].Field2, key_15742200))) {
          result_15742202 = h_15745138;
          break BeforeRet;
          }
          
          h_15745138 = next_try_10615014(h_15745138, (t_15742199.data != null ? (t_15742199.data.length-1) : -1));
        }
    } while(false);
    result_15742202 = subInt(-1, h_15745138);
  } while (false);

  return result_15742202;

}
function has_key_or_put_15665277(t_15665283, key_15665284, val_15665285) {
  var result_15665286 = false;

    if (((t_15665283.data != null ? t_15665283.data.length : 0) == 0)) {
    if (!(is_power_of_two_8715029(64))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    t_15665283.counter = 0;
    t_15665283.data = new Array(64); for (var i=0;i<64;++i) {t_15665283.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    t_15665283.first = -1;
    t_15665283.last = -1;
    }
    
    var hc_15690601 = [0];
    var index_15690630 = raw_get_15165338(t_15665283, key_15665284, hc_15690601, 0);
    if ((index_15690630 < 0)) {
    result_15665286 = false;
    if (((t_15665283.data != null ? t_15665283.data.length : 0) == 0)) {
    if (!(is_power_of_two_8715029(64))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    t_15665283.counter = 0;
    t_15665283.data = new Array(64); for (var i=0;i<64;++i) {t_15665283.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    t_15665283.first = -1;
    t_15665283.last = -1;
    }
    
    if (must_rehash_15715601(t_15665283)) {
    enlarge_15740180(t_15665283);
    index_15690630 = raw_get_known_hc_15742194(t_15665283, key_15665284, hc_15690601[0]);
    }
    
    index_15690630 = subInt(-1, index_15690630);
    raw_insert_15741359(t_15665283, t_15665283, "data", key_15665284, val_15665285, hc_15690601[0], index_15690630);
    t_15665283.counter = addInt(t_15665283.counter, 1);
    }
    else {
      result_15665286 = true;
    }
    

  return result_15665286;

}
function new_seq_15665193(len_15665196) {
  var result_15665198 = null;

    result_15665198 = new Array(len_15665196); for (var i=0;i<len_15665196;++i) {result_15665198[i]=null;}
  return result_15665198;

}
function raw_get_15770602(t_15770606, key_15770607, hc_15770608, hc_15770608_Idx) {
            var Tmp3;

  var result_15770609 = 0;

  BeforeRet: do {
    hc_15770608[hc_15770608_Idx] = hash_10590214(key_15770607);
    if ((hc_15770608[hc_15770608_Idx] == 0)) {
    hc_15770608[hc_15770608_Idx] = 314159265;
    }
    
    if (((t_15770606.data != null ? t_15770606.data.length : 0) == 0)) {
    result_15770609 = -1;
    break BeforeRet;
    }
    
    var h_15780138 = (hc_15770608[hc_15770608_Idx] & (t_15770606.data != null ? (t_15770606.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_10612018(t_15770606.data[chckIndx(h_15780138, 0, (t_15770606.data != null ? t_15770606.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_15770606.data[chckIndx(h_15780138, 0, (t_15770606.data != null ? t_15770606.data.length : 0)+0-1)-0].Field0 == hc_15770608[hc_15770608_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_15770606.data[chckIndx(h_15780138, 0, (t_15770606.data != null ? t_15770606.data.length : 0)+0-1)-0].Field1, key_15770607);            }          if (Tmp3) {
          result_15770609 = h_15780138;
          break BeforeRet;
          }
          
          h_15780138 = next_try_10615014(h_15780138, (t_15770606.data != null ? (t_15770606.data.length-1) : -1));
        }
    } while(false);
    result_15770609 = subInt(-1, h_15780138);
  } while (false);

  return result_15770609;

}
function must_rehash_15805601(t_15805604) {
  var result_15805605 = false;

    if (!((t_15805604.counter < (t_15805604.data != null ? t_15805604.data.length : 0)))) {
    failed_assert_impl_102680(makeNimstrLit("hashcommon.nim(33, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_15805605 = ((mulInt((t_15805604.data != null ? t_15805604.data.length : 0), 2) < mulInt(t_15805604.counter, 3)) || (subInt((t_15805604.data != null ? t_15805604.data.length : 0), t_15805604.counter) < 4));

  return result_15805605;

}
function raw_insert_15831122(t_15831128, data_15831131, data_15831131_Idx, key_15831132, val_15831133, hc_15831134, h_15831135) {
    data_15831131[data_15831131_Idx][chckIndx(h_15831135, 0, (data_15831131[data_15831131_Idx] != null ? data_15831131[data_15831131_Idx].length : 0)+0-1)-0].Field1 = nimCopy(null, key_15831132, NTI112);
    data_15831131[data_15831131_Idx][chckIndx(h_15831135, 0, (data_15831131[data_15831131_Idx] != null ? data_15831131[data_15831131_Idx].length : 0)+0-1)-0].Field2 = val_15831133;
    data_15831131[data_15831131_Idx][chckIndx(h_15831135, 0, (data_15831131[data_15831131_Idx] != null ? data_15831131[data_15831131_Idx].length : 0)+0-1)-0].Field0 = hc_15831134;

  
}
function enlarge_15830161(t_15830167) {
    var n_15830175 = null;
    n_15830175 = new Array(chckRange(mulInt((t_15830167.data != null ? t_15830167.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_15830167.data != null ? t_15830167.data.length : 0), 2), 0, 2147483647);++i) {n_15830175[i]={Field0: 0, Field1: null, Field2: null};}    var Tmp1 = t_15830167.data; t_15830167.data = n_15830175; n_15830175 = Tmp1;    L2: do {
      var i_15830334 = 0;
      var colontmp__16465418 = 0;
      colontmp__16465418 = (n_15830175 != null ? (n_15830175.length-1) : -1);
      var res_16465419 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_16465419 <= colontmp__16465418)) break L4;
            i_15830334 = res_16465419;
            var eh_15830490 = n_15830175[chckIndx(i_15830334, 0, (n_15830175 != null ? n_15830175.length : 0)+0-1)-0].Field0;
            if (is_filled_10612018(eh_15830490)) {
            var j_15830497 = (eh_15830490 & (t_15830167.data != null ? (t_15830167.data.length-1) : -1));
            L5: do {
                L6: while (true) {
                if (!is_filled_10612018(t_15830167.data[chckIndx(j_15830497, 0, (t_15830167.data != null ? t_15830167.data.length : 0)+0-1)-0].Field0)) break L6;
                  j_15830497 = next_try_10615014(j_15830497, (t_15830167.data != null ? (t_15830167.data.length-1) : -1));
                }
            } while(false);
            raw_insert_15831122(t_15830167, t_15830167, "data", n_15830175[chckIndx(i_15830334, 0, (n_15830175 != null ? n_15830175.length : 0)+0-1)-0].Field1, n_15830175[chckIndx(i_15830334, 0, (n_15830175 != null ? n_15830175.length : 0)+0-1)-0].Field2, eh_15830490, j_15830497);
            }
            
            res_16465419 = addInt(res_16465419, 1);
          }
      } while(false);
    } while(false);

  
}
function raw_get_known_hc_15831628(t_15831632, key_15831633, hc_15831634) {
  var result_15831635 = 0;

  BeforeRet: do {
    if (((t_15831632.data != null ? t_15831632.data.length : 0) == 0)) {
    result_15831635 = -1;
    break BeforeRet;
    }
    
    var h_15835138 = (hc_15831634 & (t_15831632.data != null ? (t_15831632.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_10612018(t_15831632.data[chckIndx(h_15835138, 0, (t_15831632.data != null ? t_15831632.data.length : 0)+0-1)-0].Field0)) break L2;
          if (((t_15831632.data[chckIndx(h_15835138, 0, (t_15831632.data != null ? t_15831632.data.length : 0)+0-1)-0].Field0 == hc_15831634) && eqStrings(t_15831632.data[chckIndx(h_15835138, 0, (t_15831632.data != null ? t_15831632.data.length : 0)+0-1)-0].Field1, key_15831633))) {
          result_15831635 = h_15835138;
          break BeforeRet;
          }
          
          h_15835138 = next_try_10615014(h_15835138, (t_15831632.data != null ? (t_15831632.data.length-1) : -1));
        }
    } while(false);
    result_15831635 = subInt(-1, h_15835138);
  } while (false);

  return result_15831635;

}
function has_key_or_put_15746096(t_15746102, key_15746103, val_15746104) {
  var result_15746105 = false;

    if (((t_15746102.data != null ? t_15746102.data.length : 0) == 0)) {
    if (!(is_power_of_two_8715029(64))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    t_15746102.counter = 0;
    t_15746102.data = new Array(64); for (var i=0;i<64;++i) {t_15746102.data[i]={Field0: 0, Field1: null, Field2: null};}    }
    
    var hc_15770601 = [0];
    var index_15780641 = raw_get_15770602(t_15746102, key_15746103, hc_15770601, 0);
    if ((index_15780641 < 0)) {
    result_15746105 = false;
    if (((t_15746102.data != null ? t_15746102.data.length : 0) == 0)) {
    if (!(is_power_of_two_8715029(64))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    t_15746102.counter = 0;
    t_15746102.data = new Array(64); for (var i=0;i<64;++i) {t_15746102.data[i]={Field0: 0, Field1: null, Field2: null};}    }
    
    if (must_rehash_15805601(t_15746102)) {
    enlarge_15830161(t_15746102);
    index_15780641 = raw_get_known_hc_15831628(t_15746102, key_15746103, hc_15770601[0]);
    }
    
    index_15780641 = subInt(-1, index_15780641);
    raw_insert_15831122(t_15746102, t_15746102, "data", key_15746103, val_15746104, hc_15770601[0], index_15780641);
    t_15746102.counter = addInt(t_15746102.counter, 1);
    }
    else {
      result_15746105 = true;
    }
    

  return result_15746105;

}
function HEX2A_916019(x_916021, order_916022) {
  var result_916023 = 0;

    var y_916028 = subInt(order_916022, 1);
    result_916023 = subInt((x_916021 ^ y_916028), y_916028);

  return result_916023;

}
function sort_15845080(t_15845086, cmp_15845096, order_15845097) {
                      var Tmp9;
                        var Tmp10;

  BeforeRet: do {
    var list_15845098 = t_15845086.first;
    var p_15845099 = 0;
    var q_15845100 = 0;
    var e_15845101 = 0;
    var tail_15845102 = 0;
    var oldhead_15845103 = 0;
    var nmerges_15845104 = 0;
    var psize_15845105 = 0;
    var qsize_15845106 = 0;
    var i_15845107 = 0;
    if ((t_15845086.counter == 0)) {
    break BeforeRet;
    }
    
    var insize_15845109 = 1;
    L1: do {
        L2: while (true) {
        if (!true) break L2;
          p_15845099 = list_15845098;
          oldhead_15845103 = list_15845098;
          list_15845098 = -1;
          tail_15845102 = -1;
          nmerges_15845104 = 0;
          L3: do {
              L4: while (true) {
              if (!(0 <= p_15845099)) break L4;
                nmerges_15845104 = addInt(nmerges_15845104, 1);
                q_15845100 = p_15845099;
                psize_15845105 = 0;
                i_15845107 = 0;
                L5: do {
                    L6: while (true) {
                    if (!(i_15845107 < insize_15845109)) break L6;
                      psize_15845105 = addInt(psize_15845105, 1);
                      q_15845100 = t_15845086.data[chckIndx(q_15845100, 0, (t_15845086.data != null ? t_15845086.data.length : 0)+0-1)-0].Field1;
                      if ((q_15845100 < 0)) {
                      break L5;
                      }
                      
                      i_15845107 = addInt(i_15845107, 1);
                    }
                } while(false);
                qsize_15845106 = insize_15845109;
                L7: do {
                    L8: while (true) {
                      if ((0 < psize_15845105)) Tmp9 = true; else {                        if (!(0 < qsize_15845106)) Tmp10 = false; else {                          Tmp10 = (0 <= q_15845100);                        }                        Tmp9 = Tmp10;                      }                    if (!Tmp9) break L8;
                      if ((psize_15845105 == 0)) {
                      e_15845101 = q_15845100;
                      q_15845100 = t_15845086.data[chckIndx(q_15845100, 0, (t_15845086.data != null ? t_15845086.data.length : 0)+0-1)-0].Field1;
                      qsize_15845106 = subInt(qsize_15845106, 1);
                      }
                      else {
                      if (((qsize_15845106 == 0) || (q_15845100 < 0))) {
                      e_15845101 = p_15845099;
                      p_15845099 = t_15845086.data[chckIndx(p_15845099, 0, (t_15845086.data != null ? t_15845086.data.length : 0)+0-1)-0].Field1;
                      psize_15845105 = subInt(psize_15845105, 1);
                      }
                      else {
                      if ((HEX2A_916019(cmp_15845096({Field0: nimCopy(null, t_15845086.data[chckIndx(p_15845099, 0, (t_15845086.data != null ? t_15845086.data.length : 0)+0-1)-0].Field2, NTI112), Field1: t_15845086.data[chckIndx(p_15845099, 0, (t_15845086.data != null ? t_15845086.data.length : 0)+0-1)-0].Field3}, {Field0: nimCopy(null, t_15845086.data[chckIndx(q_15845100, 0, (t_15845086.data != null ? t_15845086.data.length : 0)+0-1)-0].Field2, NTI112), Field1: t_15845086.data[chckIndx(q_15845100, 0, (t_15845086.data != null ? t_15845086.data.length : 0)+0-1)-0].Field3}), order_15845097) <= 0)) {
                      e_15845101 = p_15845099;
                      p_15845099 = t_15845086.data[chckIndx(p_15845099, 0, (t_15845086.data != null ? t_15845086.data.length : 0)+0-1)-0].Field1;
                      psize_15845105 = subInt(psize_15845105, 1);
                      }
                      else {
                        e_15845101 = q_15845100;
                        q_15845100 = t_15845086.data[chckIndx(q_15845100, 0, (t_15845086.data != null ? t_15845086.data.length : 0)+0-1)-0].Field1;
                        qsize_15845106 = subInt(qsize_15845106, 1);
                      }
                      }}
                      if ((0 <= tail_15845102)) {
                      t_15845086.data[chckIndx(tail_15845102, 0, (t_15845086.data != null ? t_15845086.data.length : 0)+0-1)-0].Field1 = e_15845101;
                      }
                      else {
                        list_15845098 = e_15845101;
                      }
                      
                      tail_15845102 = e_15845101;
                    }
                } while(false);
                p_15845099 = q_15845100;
              }
          } while(false);
          t_15845086.data[chckIndx(tail_15845102, 0, (t_15845086.data != null ? t_15845086.data.length : 0)+0-1)-0].Field1 = -1;
          if ((nmerges_15845104 <= 1)) {
          break L1;
          }
          
          insize_15845109 = mulInt(insize_15845109, 2);
        }
    } while(false);
    t_15845086.first = list_15845098;
    t_15845086.last = tail_15845102;
  } while (false);

  
}
function sort_street_tbl_15840222(x_15840227, y_15840229) {
    var Tmp1;
      var Tmp2;

  var result_15840230 = 0;

    var k_x_15840231 = nimCopy(null, x_15840227["Field0"], NTI112);
    var k_y_15840232 = nimCopy(null, y_15840229["Field0"], NTI112);
      if ((cmpStrings(k_y_15840232, k_x_15840231) < 0)) Tmp2 = true; else {        Tmp2 = eqStrings(k_x_15840231, k_y_15840232);      }    if (Tmp2) {
    Tmp1 = 1;
    }
    else {
    Tmp1 = -1;
    }
    
    result_15840230 = Tmp1;

  return result_15840230;

}
function has_key_15165310(t_15165315, key_15165316) {
  var result_15165317 = false;

    var hc_15165318 = [0];
    result_15165317 = (0 <= raw_get_15165338(t_15165315, key_15165316, hc_15165318, 0));

  return result_15165317;

}
function has_key_or_put_15180618(t_15180624, key_15180625, val_15180626) {
  var result_15180627 = false;

    if (((t_15180624.data != null ? t_15180624.data.length : 0) == 0)) {
    if (!(is_power_of_two_8715029(64))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    t_15180624.counter = 0;
    t_15180624.data = new Array(64); for (var i=0;i<64;++i) {t_15180624.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    t_15180624.first = -1;
    t_15180624.last = -1;
    }
    
    var hc_15205601 = [0];
    var index_15205630 = raw_get_14195621(t_15180624, key_15180625, hc_15205601, 0);
    if ((index_15205630 < 0)) {
    result_15180627 = false;
    if (((t_15180624.data != null ? t_15180624.data.length : 0) == 0)) {
    if (!(is_power_of_two_8715029(64))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    t_15180624.counter = 0;
    t_15180624.data = new Array(64); for (var i=0;i<64;++i) {t_15180624.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    t_15180624.first = -1;
    t_15180624.last = -1;
    }
    
    if (must_rehash_14230601(t_15180624)) {
    enlarge_14255180(t_15180624);
    index_15205630 = raw_get_known_hc_14257194(t_15180624, key_15180625, hc_15205601[0]);
    }
    
    index_15205630 = subInt(-1, index_15205630);
    raw_insert_14256359(t_15180624, t_15180624, "data", key_15180625, val_15180626, hc_15205601[0], index_15205630);
    t_15180624.counter = addInt(t_15180624.counter, 1);
    }
    else {
      result_15180627 = true;
    }
    

  return result_15180627;

}
function next_id_14105043(s_14105045) {
    var Tmp1;
      var Tmp2;

  var result_14105046 = null;

    if (s_14105045.exclude) {
    Tmp1 = [];
    }
    else {
    Tmp1 = (s_14105045.postalCode || []).concat(makeNimstrLit("-") || [],cstrToNimstr((addInt((Tmp2 = HEX5BHEX5D_14105198(last_postfix_13820629[0], s_14105045.postalCode), Tmp2)[0][Tmp2[1]], 1))+"") || []);
    }
    
    result_14105046 = nimCopy(null, Tmp1, NTI112);

  return result_14105046;

}
function HEX5BHEX5DHEX3D_15091056(t_15091062, key_15091063, val_15091064) {
    if (((t_15091062.data != null ? t_15091062.data.length : 0) == 0)) {
    if (!(is_power_of_two_8715029(64))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    t_15091062.counter = 0;
    t_15091062.data = new Array(64); for (var i=0;i<64;++i) {t_15091062.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}    t_15091062.first = -1;
    t_15091062.last = -1;
    }
    
    var hc_15115601 = [0];
    var index_15115630 = raw_get_14715621(t_15091062, key_15091063, hc_15115601, 0);
    if ((0 <= index_15115630)) {
    t_15091062.data[chckIndx(index_15115630, 0, (t_15091062.data != null ? t_15091062.data.length : 0)+0-1)-0].Field3 = nimCopy(null, val_15091064, NTI13701061);
    }
    else {
      if (((t_15091062.data != null ? t_15091062.data.length : 0) == 0)) {
      if (!(is_power_of_two_8715029(64))) {
      failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
      }
      
      t_15091062.counter = 0;
      t_15091062.data = new Array(64); for (var i=0;i<64;++i) {t_15091062.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}      t_15091062.first = -1;
      t_15091062.last = -1;
      }
      
      if (must_rehash_14750601(t_15091062)) {
      enlarge_14775180(t_15091062);
      index_15115630 = raw_get_known_hc_14777194(t_15091062, key_15091063, hc_15115601[0]);
      }
      
      index_15115630 = subInt(-1, index_15115630);
      raw_insert_14776359(t_15091062, t_15091062, "data", key_15091063, val_15091064, hc_15115601[0], index_15115630);
      t_15091062.counter = addInt(t_15091062.counter, 1);
    }
    

  
}
function on_grp_street_15085818(e_15085820) {
    function HEX3Aanonymous_15090029(e_15090032) {
        var Tmp1;
        var Tmp2;
        var Tmp3;
        var Tmp4;
        var Tmp5;
        var Tmp6;
        var Tmp7;
          var Tmp8;
            var Tmp9;
          var Tmp10;
        var Tmp11;

        mv_street_grp_13820630[0].removeAll();
        remove_all_sector_from_map_14120062();
        var trgt_btn_15090033 = e_15090032.target;
        var to_sect_id_15090035 = cstrToNimstr((Tmp1 = trgt_btn_15090033.parentNode.getElementsByTagName("select"), Tmp1)[chckIndx(0, 0, (Tmp1 != null ? Tmp1.length : 0)+0-1)-0].value);
        var sect_from_id_15090036 = id_14105026(street_15090007.sector);
        var post_code_15090037 = nimCopy(null, street_15090007.sector.postalCode, NTI112);
        if (!(has_key_14670110(all_sectors_13800629[0], to_sect_id_15090035))) {
        (Tmp2 = HEX5BHEX5D_14105198(last_postfix_13820629[0], post_code_15090037), Tmp2)[0][Tmp2[1]] = addInt(Tmp2[0][Tmp2[1]], 1);
        HEX5BHEX5DHEX3D_14170347(all_sectors_13800629[0], to_sect_id_15090035, {city: nimCopy(null, addr_city_13840633[0], NTI112), postalCode: nimCopy(null, post_code_15090037, NTI112), district: nimCopy(null, street_15090007.sector.district, NTI112), pFix: (Tmp3 = HEX5BHEX5D_14105198(last_postfix_13820629[0], post_code_15090037), Tmp3)[0][Tmp3[1]], streets: init_ordered_table_14940013(64), shownOnMap: false, folkDistrict: null, exclude: false});
        }
        
        street_15090007.sector = (Tmp4 = HEX5BHEX5D_14260842(all_sectors_13800629[0], to_sect_id_15090035), Tmp4)[0][Tmp4[1]];
        HEX5BHEX5DHEX3D_15091056((Tmp5 = HEX5BHEX5D_14260842(all_sectors_13800629[0], to_sect_id_15090035), Tmp5)[0][Tmp5[1]].streets, street_15090007.name, street_15090007.links);
        del_14925324((Tmp6 = HEX5BHEX5D_14260842(all_sectors_13800629[0], sect_from_id_15090036), Tmp6)[0][Tmp6[1]].streets, street_15090007.name);
        var from_sector_15141180 = (Tmp7 = HEX5BHEX5D_14260842(all_sectors_13800629[0], sect_from_id_15090036), Tmp7)[0][Tmp7[1]];
          if (!!(from_sector_15141180.exclude)) Tmp8 = false; else {            Tmp8 = (len_14465548((Tmp9 = HEX5BHEX5D_14260842(all_sectors_13800629[0], sect_from_id_15090036), Tmp9)[0][Tmp9[1]].streets) == 0);          }        if (Tmp8) {
        if ((from_sector_15141180.pFix == (Tmp10 = HEX5BHEX5D_14105198(last_postfix_13820629[0], from_sector_15141180.postalCode), Tmp10)[0][Tmp10[1]])) {
        (Tmp11 = HEX5BHEX5D_14105198(last_postfix_13820629[0], from_sector_15141180.postalCode), Tmp11)[0][Tmp11[1]] = subInt(Tmp11[0][Tmp11[1]], 1);
        }
        
        del_14781122(all_sectors_13800629[0], sect_from_id_15090036);
        }
        
        reindex_sect_14655014();
        redraw_13280414(kxi_12727284[0]);

      
    }
    function HEX3Aanonymous_15150216(el_15150219, di_15150220, dm_15150221) {
        var Tmp1;
        var Tmp2;
        function HEX3Aanonymous_15150226(e_15150229) {
            mv_street_grp_13820630[0].removeAll();

          
        }
        function HEX3Aanonymous_15150245(e_15150248) {
            map.removeEventListener("tap", load_links_14101049);

          
        }

        var btn_15150223 = (Tmp1 = el_15150219.getElementsByClassName("ok-str-mv"), Tmp1)[chckIndx(0, 0, (Tmp1 != null ? Tmp1.length : 0)+0-1)-0];
        var btn_close_15150225 = (Tmp2 = el_15150219.getElementsByClassName("close-str-mv"), Tmp2)[chckIndx(0, 0, (Tmp2 != null ? Tmp2.length : 0)+0-1)-0];
        btn_15150223.addEventListener("click", mv_btn_hndl_15150214, false);
        btn_close_15150225.addEventListener("click", HEX3Aanonymous_15150226, false);
        var el_evt_15150244 = el_15150219;
        el_evt_15150244.addEventListener("mouseenter", HEX3Aanonymous_15150245, false);

      
    }
    function HEX3Aanonymous_15150293(el_15150296, di_15150297, dm_15150298) {
        var Tmp1;

        var btn_15150300 = (Tmp1 = el_15150296.getElementsByClassName("ok-str-mv"), Tmp1)[chckIndx(0, 0, (Tmp1 != null ? Tmp1.length : 0)+0-1)-0];
        btn_15150300.removeEventListener("click", mv_btn_hndl_15150214);
        map.addEventListener("tap", load_links_14101049, false);

      
    }

    mv_street_grp_13820630[0].removeAll();
    var trgt_grp_15090002 = e_15085820.currentTarget;
    var street_15090007 = trgt_grp_15090002.getData();
    var sect_id_15090008 = id_14105026(street_15090007.sector);
    var sect_next_id_15090009 = next_id_14105043(street_15090007.sector);
    var sect_exclude_15090010 = street_15090007.sector.exclude;
    var el_move_street_15090011 = document.createElement("div");
    el_move_street_15090011.className = "move-str-marker";
    el_move_street_15090011.appendChild(document.createElement("span"));
    var el_txt_15090012 = document.createTextNode(toJSStr(street_15090007.name));
    el_move_street_15090011.childNodes[0].appendChild(el_txt_15090012);
    el_move_street_15090011.appendChild(document.createElement("div"));
    var sel_el_15090013 = document.createElement("select");
    var mv_opt_15090014 = document.createElement("option");
    mv_opt_15090014.appendChild(document.createTextNode("Двинуть в"));
    sel_el_15090013.appendChild(mv_opt_15090014);
    if (!(sect_exclude_15090010)) {
    var mv_opt_new_15090015 = document.createElement("option");
    mv_opt_new_15090015.appendChild(document.createTextNode(toJSStr((sect_next_id_15090009 || []).concat(makeNimstrLit("(\xD0\xBD\xD0\xBE\xD0\xB2\xD1\x8B\xD0\xB9)") || []))));
    mv_opt_new_15090015.value = toJSStr(sect_next_id_15090009);
    mv_opt_new_15090015.setAttribute("data-new", "1");
    sel_el_15090013.appendChild(mv_opt_new_15090015);
    }
    
    L1: do {
      var k_opt_15090023 = null;
      var v_opt_15090024 = null;
      var l_16465452 = len_14120198(all_sectors_13800629[0]);
      if ((0 < all_sectors_13800629[0].counter)) {
      var h_16465453 = all_sectors_13800629[0].first;
      L2: do {
          L3: while (true) {
          if (!(0 <= h_16465453)) break L3;
            var nxt_16465455 = all_sectors_13800629[0].data[chckIndx(h_16465453, 0, (all_sectors_13800629[0].data != null ? all_sectors_13800629[0].data.length : 0)+0-1)-0].Field1;
            if (is_filled_10612018(all_sectors_13800629[0].data[chckIndx(h_16465453, 0, (all_sectors_13800629[0].data != null ? all_sectors_13800629[0].data.length : 0)+0-1)-0].Field0)) {
            k_opt_15090023 = all_sectors_13800629[0].data[chckIndx(h_16465453, 0, (all_sectors_13800629[0].data != null ? all_sectors_13800629[0].data.length : 0)+0-1)-0].Field2;
            v_opt_15090024 = all_sectors_13800629[0].data[chckIndx(h_16465453, 0, (all_sectors_13800629[0].data != null ? all_sectors_13800629[0].data.length : 0)+0-1)-0].Field3;
            L4: do {
              if (eqStrings(k_opt_15090023, sect_id_15090008)) {
              break L4;
              }
              
              var mv_opt_15090027 = document.createElement("option");
              mv_opt_15090027.appendChild(document.createTextNode(toJSStr(k_opt_15090023)));
              mv_opt_15090027.value = toJSStr(k_opt_15090023);
              sel_el_15090013.appendChild(mv_opt_15090027);
            } while(false);
            if (!((len_14120198(all_sectors_13800629[0]) == l_16465452))) {
            failed_assert_impl_102680(makeNimstrLit("tables.nim(1675, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_16465453 = nxt_16465455;
          }
      } while(false);
      }
      
    } while(false);
    el_move_street_15090011.childNodes[1].appendChild(sel_el_15090013);
    var btn_ok_15090028 = document.createElement("button");
    btn_ok_15090028.appendChild(document.createTextNode("Ok !"));
    btn_ok_15090028.className = "ok-str-mv";
    var mv_btn_hndl_15150214 = HEX3Aanonymous_15090029;
    var btn_close_15150215 = document.createElement("button");
    btn_close_15150215.appendChild(document.createTextNode("закрыть"));
    btn_close_15150215.className = "close-str-mv";
    el_move_street_15090011.childNodes[1].appendChild(btn_ok_15090028);
    el_move_street_15090011.childNodes[1].appendChild(btn_close_15150215);
    var di_opt_15155215 = {onAttach: HEX3Aanonymous_15150216, onDetach: HEX3Aanonymous_15150293, m_type: NTI10986089};
    var icon_move_street_15155217 = function(element, opt){return new H.map.DomIcon(element, opt)}(el_move_street_15090011, di_opt_15155215);
    var geo_point_15155218 = map.screenToGeo(e_15085820.currentPointer.viewportX, e_15085820.currentPointer.viewportY);
    var mv_street_marker_15155219 = function(position){return new H.map.DomMarker(position)}(geo_point_15155218);
    mv_street_marker_15155219.setIcon(icon_move_street_15155217);
    mv_street_grp_13820630[0].addObject(mv_street_marker_15155219);
    rawEcho(makeNimstrLit("mvStreet: "));

  
}
function has_key_15232010(t_15232015, key_15232016) {
  var result_15232017 = false;

    var hc_15232018 = [0];
    result_15232017 = (0 <= raw_get_15232019(t_15232015, key_15232016, hc_15232018, 0));

  return result_15232017;

}
function display_street_15160323(name_15160325, tree_15160326) {
      var Tmp1;
    var Tmp2;
    var Tmp3;
    var Tmp4;
    var Tmp5;
    var Tmp6;
      var Tmp8;
            var Tmp11;
            function HEX3Aanonymous_15231806(e_15231808) {
                map.removeEventListener("tap", load_links_14101049);

              
            }
            function HEX3Aanonymous_15231839(e_15231841) {
                map.addEventListener("tap", load_links_14101049, false);

              
            }
              var Tmp15;
                var Tmp16;
            var Tmp17;
                    var Tmp21;
                    var Tmp22;

  BeforeRet: do {
    if (!(has_key_15165310(all_streets_13760629[0], name_15160325))) {
    break BeforeRet;
    }
    
    if (((Tmp1 = HEX5BHEX5D_14676311(all_streets_13760629[0], name_15160325), Tmp1)[0][Tmp1[1]].sector == null)) {
    var p_fix_15180531 = (Tmp2 = HEX5BHEX5D_14105198(last_postfix_13820629[0], postal_code_13840635[0]), Tmp2)[0][Tmp2[1]];
    has_key_or_put_15180618(all_sectors_13800629[0], sect_name_13840636[0], {city: nimCopy(null, addr_city_13840633[0], NTI112), postalCode: nimCopy(null, postal_code_13840635[0], NTI112), district: nimCopy(null, addr_distr_13840632[0], NTI112), pFix: p_fix_15180531, streets: init_ordered_table_14940013(64), shownOnMap: false, folkDistrict: null, exclude: false});
    has_key_or_put_14690085((Tmp3 = HEX5BHEX5D_14260842(all_sectors_13800629[0], sect_name_13840636[0]), Tmp3)[0][Tmp3[1]].streets, name_15160325, (Tmp4 = HEX5BHEX5D_14676311(all_streets_13760629[0], name_15160325), Tmp4)[0][Tmp4[1]].links);
    (Tmp5 = HEX5BHEX5D_14676311(all_streets_13760629[0], name_15160325), Tmp5)[0][Tmp5[1]].sector = (Tmp6 = HEX5BHEX5D_14260842(all_sectors_13800629[0], sect_name_13840636[0]), Tmp6)[0][Tmp6[1]];
    }
    
    L7: do {
      var link_15231637 = null;
      var colontmp__16465443 = null;
      colontmp__16465443 = (Tmp8 = HEX5BHEX5D_14676311(all_streets_13760629[0], name_15160325), Tmp8)[0][Tmp8[1]].links;
      var i_16465444 = 0;
      var l_16465445 = (colontmp__16465443 != null ? colontmp__16465443.length : 0);
      L9: do {
          L10: while (true) {
          if (!(i_16465444 < l_16465445)) break L10;
            link_15231637 = colontmp__16465443[chckIndx(i_16465444, 0, (colontmp__16465443 != null ? colontmp__16465443.length : 0)+0-1)-0];
            var grp_street_15231638 = function(){return new H.map.Group()}();
            grp_street_15231638.setZIndex(99);
            grp_street_15231638.setData((Tmp11 = HEX5BHEX5D_14676311(all_streets_13760629[0], name_15160325), Tmp11)[0][Tmp11[1]]);
            grp_street_15231638.addEventListener("pointerenter", HEX3Aanonymous_15231806, true, null);
            grp_street_15231638.addEventListener("pointerleave", HEX3Aanonymous_15231839, true, null);
            grp_street_15231638.addEventListener("tap", on_grp_street_15085818, true, null);
            main_group_15085006[0].addObject(grp_street_15231638);
            var ln_str_15231893 = function(){return new H.geo.LineString();}();
            L12: do {
              var c_15231900 = null;
              var i_16465434 = 0;
              var l_16465435 = (link_15231637.geometry != null ? link_15231637.geometry.length : 0);
              L13: do {
                  L14: while (true) {
                  if (!(i_16465434 < l_16465435)) break L14;
                    c_15231900 = link_15231637.geometry[chckIndx(i_16465434, 0, (link_15231637.geometry != null ? link_15231637.geometry.length : 0)+0-1)-0];
                    ln_str_15231893.pushLatLngAlt(c_15231900.lat, c_15231900.lng, 1.0000000000000000e+000);
                    i_16465434 = addInt(i_16465434, 1);
                    if (!(((link_15231637.geometry != null ? link_15231637.geometry.length : 0) == l_16465435))) {
                    failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while(false);
            } while(false);
              if (!has_key_15232010(all_links_13740629[0], link_15231637.linkId)) Tmp15 = false; else {                Tmp15 = !((Tmp16 = HEX5BHEX5D_15240788(all_links_13740629[0], link_15231637.linkId), Tmp16)[0][Tmp16[1]].addedToMap);              }            if (Tmp15) {
            var p_opt_15245029 = {style: {strokeColor: "rgba(0, 0, 255, 0.3)", fillColor: "rgba(255, 0, 0, 0.4)", lineWidth: 10, m_type: NTI10986076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, zIndex: 99, m_type: NTI10986081};
            var pl_15245030 = function(ls, options){return new H.map.Polyline(ls, options)}(ln_str_15231893, p_opt_15245029);
            grp_street_15231638.addObject(pl_15245030);
            (Tmp17 = HEX5BHEX5D_15240788(all_links_13740629[0], link_15231637.linkId), Tmp17)[0][Tmp17[1]].addedToMap = true;
            }
            
            if (tree_15160326) {
            L18: do {
              var n_link_15250207 = 0;
              var i_16465440 = 0;
              var l_16465441 = (link_15231637.neighborLinks != null ? link_15231637.neighborLinks.length : 0);
              L19: do {
                  L20: while (true) {
                  if (!(i_16465440 < l_16465441)) break L20;
                    n_link_15250207 = link_15231637.neighborLinks[chckIndx(i_16465440, 0, (link_15231637.neighborLinks != null ? link_15231637.neighborLinks.length : 0)+0-1)-0];
                    if ((0 < n_link_15250207)) {
                    Tmp21 = n_link_15250207;
                    }
                    else {
                    Tmp21 = mulInt(n_link_15250207, -1);
                    }
                    
                    var n_lnk_15255001 = Tmp21;
                    if (has_key_15232010(all_links_13740629[0], n_lnk_15255001)) {
                    display_street_15160323((Tmp22 = HEX5BHEX5D_15240788(all_links_13740629[0], n_lnk_15255001), Tmp22)[0][Tmp22[1]].name, false);
                    }
                    else {
                    }
                    
                    i_16465440 = addInt(i_16465440, 1);
                    if (!(((link_15231637.neighborLinks != null ? link_15231637.neighborLinks.length : 0) == l_16465441))) {
                    failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while(false);
            } while(false);
            }
            
            i_16465444 = addInt(i_16465444, 1);
            if (!(((colontmp__16465443 != null ? colontmp__16465443.length : 0) == l_16465445))) {
            failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
  } while (false);

  
}
function must_rehash_15895601(t_15895604) {
  var result_15895605 = false;

    if (!((t_15895604.counter < (t_15895604.data != null ? t_15895604.data.length : 0)))) {
    failed_assert_impl_102680(makeNimstrLit("hashcommon.nim(33, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_15895605 = ((mulInt((t_15895604.data != null ? t_15895604.data.length : 0), 2) < mulInt(t_15895604.counter, 3)) || (subInt((t_15895604.data != null ? t_15895604.data.length : 0), t_15895604.counter) < 4));

  return result_15895605;

}
function raw_insert_15921122(t_15921128, data_15921131, data_15921131_Idx, key_15921132, val_15921133, hc_15921134, h_15921135) {
    data_15921131[data_15921131_Idx][chckIndx(h_15921135, 0, (data_15921131[data_15921131_Idx] != null ? data_15921131[data_15921131_Idx].length : 0)+0-1)-0].Field1 = nimCopy(null, key_15921132, NTI112);
    data_15921131[data_15921131_Idx][chckIndx(h_15921135, 0, (data_15921131[data_15921131_Idx] != null ? data_15921131[data_15921131_Idx].length : 0)+0-1)-0].Field2 = val_15921133;
    data_15921131[data_15921131_Idx][chckIndx(h_15921135, 0, (data_15921131[data_15921131_Idx] != null ? data_15921131[data_15921131_Idx].length : 0)+0-1)-0].Field0 = hc_15921134;

  
}
function enlarge_15920161(t_15920167) {
    var n_15920175 = null;
    n_15920175 = new Array(chckRange(mulInt((t_15920167.data != null ? t_15920167.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_15920167.data != null ? t_15920167.data.length : 0), 2), 0, 2147483647);++i) {n_15920175[i]={Field0: 0, Field1: null, Field2: 0};}    var Tmp1 = t_15920167.data; t_15920167.data = n_15920175; n_15920175 = Tmp1;    L2: do {
      var i_15920334 = 0;
      var colontmp__16465460 = 0;
      colontmp__16465460 = (n_15920175 != null ? (n_15920175.length-1) : -1);
      var res_16465461 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_16465461 <= colontmp__16465460)) break L4;
            i_15920334 = res_16465461;
            var eh_15920490 = n_15920175[chckIndx(i_15920334, 0, (n_15920175 != null ? n_15920175.length : 0)+0-1)-0].Field0;
            if (is_filled_10612018(eh_15920490)) {
            var j_15920497 = (eh_15920490 & (t_15920167.data != null ? (t_15920167.data.length-1) : -1));
            L5: do {
                L6: while (true) {
                if (!is_filled_10612018(t_15920167.data[chckIndx(j_15920497, 0, (t_15920167.data != null ? t_15920167.data.length : 0)+0-1)-0].Field0)) break L6;
                  j_15920497 = next_try_10615014(j_15920497, (t_15920167.data != null ? (t_15920167.data.length-1) : -1));
                }
            } while(false);
            raw_insert_15921122(t_15920167, t_15920167, "data", n_15920175[chckIndx(i_15920334, 0, (n_15920175 != null ? n_15920175.length : 0)+0-1)-0].Field1, n_15920175[chckIndx(i_15920334, 0, (n_15920175 != null ? n_15920175.length : 0)+0-1)-0].Field2, eh_15920490, j_15920497);
            }
            
            res_16465461 = addInt(res_16465461, 1);
          }
      } while(false);
    } while(false);

  
}
function raw_get_known_hc_15921628(t_15921632, key_15921633, hc_15921634) {
  var result_15921635 = 0;

  BeforeRet: do {
    if (((t_15921632.data != null ? t_15921632.data.length : 0) == 0)) {
    result_15921635 = -1;
    break BeforeRet;
    }
    
    var h_15925138 = (hc_15921634 & (t_15921632.data != null ? (t_15921632.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_10612018(t_15921632.data[chckIndx(h_15925138, 0, (t_15921632.data != null ? t_15921632.data.length : 0)+0-1)-0].Field0)) break L2;
          if (((t_15921632.data[chckIndx(h_15925138, 0, (t_15921632.data != null ? t_15921632.data.length : 0)+0-1)-0].Field0 == hc_15921634) && eqStrings(t_15921632.data[chckIndx(h_15925138, 0, (t_15921632.data != null ? t_15921632.data.length : 0)+0-1)-0].Field1, key_15921633))) {
          result_15921635 = h_15925138;
          break BeforeRet;
          }
          
          h_15925138 = next_try_10615014(h_15925138, (t_15921632.data != null ? (t_15921632.data.length-1) : -1));
        }
    } while(false);
    result_15921635 = subInt(-1, h_15925138);
  } while (false);

  return result_15921635;

}
function HEX5BHEX5DHEX3D_15847427(t_15847433, key_15847434, val_15847435) {
    if (((t_15847433.data != null ? t_15847433.data.length : 0) == 0)) {
    if (!(is_power_of_two_8715029(64))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    t_15847433.counter = 0;
    t_15847433.data = new Array(64); for (var i=0;i<64;++i) {t_15847433.data[i]={Field0: 0, Field1: null, Field2: 0};}    }
    
    var hc_15870601 = [0];
    var index_15870610 = raw_get_14105210(t_15847433, key_15847434, hc_15870601, 0);
    if ((0 <= index_15870610)) {
    t_15847433.data[chckIndx(index_15870610, 0, (t_15847433.data != null ? t_15847433.data.length : 0)+0-1)-0].Field2 = val_15847435;
    }
    else {
      if (((t_15847433.data != null ? t_15847433.data.length : 0) == 0)) {
      if (!(is_power_of_two_8715029(64))) {
      failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
      }
      
      t_15847433.counter = 0;
      t_15847433.data = new Array(64); for (var i=0;i<64;++i) {t_15847433.data[i]={Field0: 0, Field1: null, Field2: 0};}      }
      
      if (must_rehash_15895601(t_15847433)) {
      enlarge_15920161(t_15847433);
      index_15870610 = raw_get_known_hc_15921628(t_15847433, key_15847434, hc_15870601[0]);
      }
      
      index_15870610 = subInt(-1, index_15870610);
      raw_insert_15921122(t_15847433, t_15847433, "data", key_15847434, val_15847435, hc_15870601[0], index_15870610);
      t_15847433.counter = addInt(t_15847433.counter, 1);
    }
    

  
}
function sort_15930080(t_15930086, cmp_15930096, order_15930097) {
                      var Tmp9;
                        var Tmp10;

  BeforeRet: do {
    var list_15930098 = t_15930086.first;
    var p_15930099 = 0;
    var q_15930100 = 0;
    var e_15930101 = 0;
    var tail_15930102 = 0;
    var oldhead_15930103 = 0;
    var nmerges_15930104 = 0;
    var psize_15930105 = 0;
    var qsize_15930106 = 0;
    var i_15930107 = 0;
    if ((t_15930086.counter == 0)) {
    break BeforeRet;
    }
    
    var insize_15930109 = 1;
    L1: do {
        L2: while (true) {
        if (!true) break L2;
          p_15930099 = list_15930098;
          oldhead_15930103 = list_15930098;
          list_15930098 = -1;
          tail_15930102 = -1;
          nmerges_15930104 = 0;
          L3: do {
              L4: while (true) {
              if (!(0 <= p_15930099)) break L4;
                nmerges_15930104 = addInt(nmerges_15930104, 1);
                q_15930100 = p_15930099;
                psize_15930105 = 0;
                i_15930107 = 0;
                L5: do {
                    L6: while (true) {
                    if (!(i_15930107 < insize_15930109)) break L6;
                      psize_15930105 = addInt(psize_15930105, 1);
                      q_15930100 = t_15930086.data[chckIndx(q_15930100, 0, (t_15930086.data != null ? t_15930086.data.length : 0)+0-1)-0].Field1;
                      if ((q_15930100 < 0)) {
                      break L5;
                      }
                      
                      i_15930107 = addInt(i_15930107, 1);
                    }
                } while(false);
                qsize_15930106 = insize_15930109;
                L7: do {
                    L8: while (true) {
                      if ((0 < psize_15930105)) Tmp9 = true; else {                        if (!(0 < qsize_15930106)) Tmp10 = false; else {                          Tmp10 = (0 <= q_15930100);                        }                        Tmp9 = Tmp10;                      }                    if (!Tmp9) break L8;
                      if ((psize_15930105 == 0)) {
                      e_15930101 = q_15930100;
                      q_15930100 = t_15930086.data[chckIndx(q_15930100, 0, (t_15930086.data != null ? t_15930086.data.length : 0)+0-1)-0].Field1;
                      qsize_15930106 = subInt(qsize_15930106, 1);
                      }
                      else {
                      if (((qsize_15930106 == 0) || (q_15930100 < 0))) {
                      e_15930101 = p_15930099;
                      p_15930099 = t_15930086.data[chckIndx(p_15930099, 0, (t_15930086.data != null ? t_15930086.data.length : 0)+0-1)-0].Field1;
                      psize_15930105 = subInt(psize_15930105, 1);
                      }
                      else {
                      if ((HEX2A_916019(cmp_15930096({Field0: nimCopy(null, t_15930086.data[chckIndx(p_15930099, 0, (t_15930086.data != null ? t_15930086.data.length : 0)+0-1)-0].Field2, NTI112), Field1: t_15930086.data[chckIndx(p_15930099, 0, (t_15930086.data != null ? t_15930086.data.length : 0)+0-1)-0].Field3}, {Field0: nimCopy(null, t_15930086.data[chckIndx(q_15930100, 0, (t_15930086.data != null ? t_15930086.data.length : 0)+0-1)-0].Field2, NTI112), Field1: t_15930086.data[chckIndx(q_15930100, 0, (t_15930086.data != null ? t_15930086.data.length : 0)+0-1)-0].Field3}), order_15930097) <= 0)) {
                      e_15930101 = p_15930099;
                      p_15930099 = t_15930086.data[chckIndx(p_15930099, 0, (t_15930086.data != null ? t_15930086.data.length : 0)+0-1)-0].Field1;
                      psize_15930105 = subInt(psize_15930105, 1);
                      }
                      else {
                        e_15930101 = q_15930100;
                        q_15930100 = t_15930086.data[chckIndx(q_15930100, 0, (t_15930086.data != null ? t_15930086.data.length : 0)+0-1)-0].Field1;
                        qsize_15930106 = subInt(qsize_15930106, 1);
                      }
                      }}
                      if ((0 <= tail_15930102)) {
                      t_15930086.data[chckIndx(tail_15930102, 0, (t_15930086.data != null ? t_15930086.data.length : 0)+0-1)-0].Field1 = e_15930101;
                      }
                      else {
                        list_15930098 = e_15930101;
                      }
                      
                      tail_15930102 = e_15930101;
                    }
                } while(false);
                p_15930099 = q_15930100;
              }
          } while(false);
          t_15930086.data[chckIndx(tail_15930102, 0, (t_15930086.data != null ? t_15930086.data.length : 0)+0-1)-0].Field1 = -1;
          if ((nmerges_15930104 <= 1)) {
          break L1;
          }
          
          insize_15930109 = mulInt(insize_15930109, 2);
        }
    } while(false);
    t_15930086.first = list_15930098;
    t_15930086.last = tail_15930102;
  } while (false);

  
}
function nsuRepeatStr(s_9295075, n_9295076) {
  var result_9295077 = null;

    result_9295077 = nimCopy(null, mnewString(0), NTI112);
    L1: do {
      var i_9295086 = 0;
      var colontmp__16465472 = 0;
      colontmp__16465472 = n_9295076;
      var res_16465473 = 1;
      L2: do {
          L3: while (true) {
          if (!(res_16465473 <= colontmp__16465472)) break L3;
            i_9295086 = res_16465473;
            if (result_9295077 != null) { result_9295077 = (result_9295077).concat(s_9295075); } else { result_9295077 = s_9295075.slice(); };
            res_16465473 = addInt(res_16465473, 1);
          }
      } while(false);
    } while(false);

  return result_9295077;

}
function sort_sector_tbl_15925692(x_15925697, y_15925699) {
    var Tmp1;
    var Tmp2;
    var Tmp3;
      var Tmp4;

  var result_15925700 = 0;

    var ak_x_15925701 = nsuSplitString(x_15925697["Field0"], makeNimstrLit("-"), -1);
    var ak_y_15925702 = nsuSplitString(y_15925699["Field0"], makeNimstrLit("-"), -1);
    var k_x_15925727 = (ak_x_15925701[chckIndx(0, 0, (ak_x_15925701 != null ? ak_x_15925701.length : 0)+0-1)-0] || []).concat(makeNimstrLit("-") || [],nsuRepeatStr(makeNimstrLit("0"), chckRange(subInt(4, ((Tmp1 = ak_x_15925701[chckIndx((ak_x_15925701 != null ? (ak_x_15925701.length-1) : -1), 0, (ak_x_15925701 != null ? ak_x_15925701.length : 0)+0-1)-0], Tmp1) != null ? Tmp1.length : 0)), 0, 2147483647)) || [],ak_x_15925701[chckIndx((ak_x_15925701 != null ? (ak_x_15925701.length-1) : -1), 0, (ak_x_15925701 != null ? ak_x_15925701.length : 0)+0-1)-0] || []);
    var k_y_15925752 = (ak_y_15925702[chckIndx(0, 0, (ak_y_15925702 != null ? ak_y_15925702.length : 0)+0-1)-0] || []).concat(makeNimstrLit("-") || [],nsuRepeatStr(makeNimstrLit("0"), chckRange(subInt(4, ((Tmp2 = ak_y_15925702[chckIndx((ak_y_15925702 != null ? (ak_y_15925702.length-1) : -1), 0, (ak_y_15925702 != null ? ak_y_15925702.length : 0)+0-1)-0], Tmp2) != null ? Tmp2.length : 0)), 0, 2147483647)) || [],ak_y_15925702[chckIndx((ak_y_15925702 != null ? (ak_y_15925702.length-1) : -1), 0, (ak_y_15925702 != null ? ak_y_15925702.length : 0)+0-1)-0] || []);
      if ((cmpStrings(k_y_15925752, k_x_15925727) < 0)) Tmp4 = true; else {        Tmp4 = eqStrings(k_x_15925727, k_y_15925752);      }    if (Tmp4) {
    Tmp3 = 1;
    }
    else {
    Tmp3 = -1;
    }
    
    result_15925700 = Tmp3;

  return result_15925700;

}
function new_seq_15970022(len_15970025) {
  var result_15970027 = null;

    result_15970027 = new Array(len_15970025); for (var i=0;i<len_15970025;++i) {result_15970027[i]={Field0: 0.0, Field1: 0.0};}
  return result_15970027;

}
function init_table_15970070(initial_size_15970074) {
  var result_15970090 = {data: null, counter: 0};

    if (!(is_power_of_two_8715029(initial_size_15970074))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(initialSize)` "));
    }
    
    result_15970090.counter = 0;
    result_15970090.data = new Array(chckRange(initial_size_15970074, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_15970074, 0, 2147483647);++i) {result_15970090.data[i]={Field0: 0, Field1: null, Field2: {Field0: 0, Field1: 0, Field2: 0}};}
  return result_15970090;

}
function HEX2AHEX3D_10340013(x_10340017, x_10340017_Idx, y_10340018) {
    x_10340017[x_10340017_Idx] = HEX2A_9748019(x_10340017[x_10340017_Idx], y_10340018);

  
}
function HEX5E_10340004(x_10340007, y_10340008) {
  var result_10340009 = [0];

    switch (y_10340008) {
    case 0:
      result_10340009[0] = 1;
      break;
    case 1:
      result_10340009[0] = x_10340007;
      break;
    case 2:
      result_10340009[0] = HEX2A_9748019(x_10340007, x_10340007);
      break;
    case 3:
      result_10340009[0] = HEX2A_9748019(HEX2A_9748019(x_10340007, x_10340007), x_10340007);
      break;
    default: 
      var colontmp__16465481 = {Field0: x_10340007, Field1: nimCopy(null, y_10340008, NTI6004)};
      var x_10340011 = [colontmp__16465481["Field0"]];
      var y_10340012 = colontmp__16465481["Field1"];
      result_10340009[0] = 1;
      L1: do {
          L2: while (true) {
          if (!true) break L2;
            if (!(((y_10340012 & 1) == 0))) {
            HEX2AHEX3D_10340013(result_10340009, 0, x_10340011[0]);
            }
            
            y_10340012 = chckRange((y_10340012 >> 1), 0, 2147483647);
            if ((y_10340012 == 0)) {
            break L1;
            }
            
            HEX2AHEX3D_10340013(x_10340011, 0, x_10340011[0]);
          }
      } while(false);
      break;
    }

  return result_10340009[0];

}
function get_coord_11186015(level_11186017, tile_x_11186018, tile_y_11186019) {
  var result_11186021 = {Field0: 0.0, Field1: 0.0};

    var tile_size_11186029 = HEX2F_325648(180, HEX5E_10340004(2, chckRange(level_11186017, 0, 2147483647)));
    nimCopy(result_11186021, {Field0: ((tile_y_11186019 * tile_size_11186029) - 9.0000000000000000e+001), Field1: ((tile_x_11186018 * tile_size_11186029) - 1.8000000000000000e+002)}, NTI11186020);

  return result_11186021;

}
function raw_get_16025602(t_16025606, key_16025607, hc_16025608, hc_16025608_Idx) {
            var Tmp3;

  var result_16025609 = 0;

  BeforeRet: do {
    hc_16025608[hc_16025608_Idx] = hash_10590214(key_16025607);
    if ((hc_16025608[hc_16025608_Idx] == 0)) {
    hc_16025608[hc_16025608_Idx] = 314159265;
    }
    
    if (((t_16025606.data != null ? t_16025606.data.length : 0) == 0)) {
    result_16025609 = -1;
    break BeforeRet;
    }
    
    var h_16035138 = (hc_16025608[hc_16025608_Idx] & (t_16025606.data != null ? (t_16025606.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_10612018(t_16025606.data[chckIndx(h_16035138, 0, (t_16025606.data != null ? t_16025606.data.length : 0)+0-1)-0].Field0)) break L2;
            if (!(t_16025606.data[chckIndx(h_16035138, 0, (t_16025606.data != null ? t_16025606.data.length : 0)+0-1)-0].Field0 == hc_16025608[hc_16025608_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_16025606.data[chckIndx(h_16035138, 0, (t_16025606.data != null ? t_16025606.data.length : 0)+0-1)-0].Field1, key_16025607);            }          if (Tmp3) {
          result_16025609 = h_16035138;
          break BeforeRet;
          }
          
          h_16035138 = next_try_10615014(h_16035138, (t_16025606.data != null ? (t_16025606.data.length-1) : -1));
        }
    } while(false);
    result_16025609 = subInt(-1, h_16035138);
  } while (false);

  return result_16025609;

}
function must_rehash_16060601(t_16060604) {
  var result_16060605 = false;

    if (!((t_16060604.counter < (t_16060604.data != null ? t_16060604.data.length : 0)))) {
    failed_assert_impl_102680(makeNimstrLit("hashcommon.nim(33, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_16060605 = ((mulInt((t_16060604.data != null ? t_16060604.data.length : 0), 2) < mulInt(t_16060604.counter, 3)) || (subInt((t_16060604.data != null ? t_16060604.data.length : 0), t_16060604.counter) < 4));

  return result_16060605;

}
function raw_insert_16086122(t_16086128, data_16086131, data_16086131_Idx, key_16086132, val_16086133, hc_16086134, h_16086135) {
    data_16086131[data_16086131_Idx][chckIndx(h_16086135, 0, (data_16086131[data_16086131_Idx] != null ? data_16086131[data_16086131_Idx].length : 0)+0-1)-0].Field1 = nimCopy(null, key_16086132, NTI112);
    nimCopy(data_16086131[data_16086131_Idx][chckIndx(h_16086135, 0, (data_16086131[data_16086131_Idx] != null ? data_16086131[data_16086131_Idx].length : 0)+0-1)-0].Field2, val_16086133, NTI15970065);
    data_16086131[data_16086131_Idx][chckIndx(h_16086135, 0, (data_16086131[data_16086131_Idx] != null ? data_16086131[data_16086131_Idx].length : 0)+0-1)-0].Field0 = hc_16086134;

  
}
function enlarge_16085161(t_16085167) {
    var n_16085175 = null;
    n_16085175 = new Array(chckRange(mulInt((t_16085167.data != null ? t_16085167.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_16085167.data != null ? t_16085167.data.length : 0), 2), 0, 2147483647);++i) {n_16085175[i]={Field0: 0, Field1: null, Field2: {Field0: 0, Field1: 0, Field2: 0}};}    var Tmp1 = t_16085167.data; t_16085167.data = n_16085175; n_16085175 = Tmp1;    L2: do {
      var i_16085334 = 0;
      var colontmp__16465485 = 0;
      colontmp__16465485 = (n_16085175 != null ? (n_16085175.length-1) : -1);
      var res_16465486 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_16465486 <= colontmp__16465485)) break L4;
            i_16085334 = res_16465486;
            var eh_16085490 = n_16085175[chckIndx(i_16085334, 0, (n_16085175 != null ? n_16085175.length : 0)+0-1)-0].Field0;
            if (is_filled_10612018(eh_16085490)) {
            var j_16085497 = (eh_16085490 & (t_16085167.data != null ? (t_16085167.data.length-1) : -1));
            L5: do {
                L6: while (true) {
                if (!is_filled_10612018(t_16085167.data[chckIndx(j_16085497, 0, (t_16085167.data != null ? t_16085167.data.length : 0)+0-1)-0].Field0)) break L6;
                  j_16085497 = next_try_10615014(j_16085497, (t_16085167.data != null ? (t_16085167.data.length-1) : -1));
                }
            } while(false);
            raw_insert_16086122(t_16085167, t_16085167, "data", n_16085175[chckIndx(i_16085334, 0, (n_16085175 != null ? n_16085175.length : 0)+0-1)-0].Field1, n_16085175[chckIndx(i_16085334, 0, (n_16085175 != null ? n_16085175.length : 0)+0-1)-0].Field2, eh_16085490, j_16085497);
            }
            
            res_16465486 = addInt(res_16465486, 1);
          }
      } while(false);
    } while(false);

  
}
function raw_get_known_hc_16086628(t_16086632, key_16086633, hc_16086634) {
  var result_16086635 = 0;

  BeforeRet: do {
    if (((t_16086632.data != null ? t_16086632.data.length : 0) == 0)) {
    result_16086635 = -1;
    break BeforeRet;
    }
    
    var h_16090138 = (hc_16086634 & (t_16086632.data != null ? (t_16086632.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_10612018(t_16086632.data[chckIndx(h_16090138, 0, (t_16086632.data != null ? t_16086632.data.length : 0)+0-1)-0].Field0)) break L2;
          if (((t_16086632.data[chckIndx(h_16090138, 0, (t_16086632.data != null ? t_16086632.data.length : 0)+0-1)-0].Field0 == hc_16086634) && eqStrings(t_16086632.data[chckIndx(h_16090138, 0, (t_16086632.data != null ? t_16086632.data.length : 0)+0-1)-0].Field1, key_16086633))) {
          result_16086635 = h_16090138;
          break BeforeRet;
          }
          
          h_16090138 = next_try_10615014(h_16090138, (t_16086632.data != null ? (t_16086632.data.length-1) : -1));
        }
    } while(false);
    result_16086635 = subInt(-1, h_16090138);
  } while (false);

  return result_16086635;

}
function HEX5BHEX5DHEX3D_16000141(t_16000147, key_16000148, val_16000149) {
    if (((t_16000147.data != null ? t_16000147.data.length : 0) == 0)) {
    if (!(is_power_of_two_8715029(64))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    t_16000147.counter = 0;
    t_16000147.data = new Array(64); for (var i=0;i<64;++i) {t_16000147.data[i]={Field0: 0, Field1: null, Field2: {Field0: 0, Field1: 0, Field2: 0}};}    }
    
    var hc_16025601 = [0];
    var index_16035641 = raw_get_16025602(t_16000147, key_16000148, hc_16025601, 0);
    if ((0 <= index_16035641)) {
    nimCopy(t_16000147.data[chckIndx(index_16035641, 0, (t_16000147.data != null ? t_16000147.data.length : 0)+0-1)-0].Field2, val_16000149, NTI15970065);
    }
    else {
      if (((t_16000147.data != null ? t_16000147.data.length : 0) == 0)) {
      if (!(is_power_of_two_8715029(64))) {
      failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
      }
      
      t_16000147.counter = 0;
      t_16000147.data = new Array(64); for (var i=0;i<64;++i) {t_16000147.data[i]={Field0: 0, Field1: null, Field2: {Field0: 0, Field1: 0, Field2: 0}};}      }
      
      if (must_rehash_16060601(t_16000147)) {
      enlarge_16085161(t_16000147);
      index_16035641 = raw_get_known_hc_16086628(t_16000147, key_16000148, hc_16025601[0]);
      }
      
      index_16035641 = subInt(-1, index_16035641);
      raw_insert_16086122(t_16000147, t_16000147, "data", key_16000148, val_16000149, hc_16025601[0], index_16035641);
      t_16000147.counter = addInt(t_16000147.counter, 1);
    }
    

  
}
function get_tile_xy_11186061(level_11186063, lat_11186064, lng_11186065) {
  var result_11186067 = {Field0: 0, Field1: 0};

    var tile_size_11186075 = HEX2F_325648(180, HEX5E_10340004(2, chckRange(level_11186063, 0, 2147483647)));
    nimCopy(result_11186067, {Field0: ((Math.trunc(((lng_11186065 + 1.8000000000000000e+002) / tile_size_11186075)))|0), Field1: ((Math.trunc(((lat_11186064 + 9.0000000000000000e+001) / tile_size_11186075)))|0)}, NTI11186066);

  return result_11186067;

}
function has_key_or_put_16110281(t_16110287, key_16110288, val_16110289) {
  var result_16110290 = false;

    if (((t_16110287.data != null ? t_16110287.data.length : 0) == 0)) {
    if (!(is_power_of_two_8715029(64))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    t_16110287.counter = 0;
    t_16110287.data = new Array(64); for (var i=0;i<64;++i) {t_16110287.data[i]={Field0: 0, Field1: null, Field2: {Field0: 0, Field1: 0, Field2: 0}};}    }
    
    var hc_16135601 = [0];
    var index_16135610 = raw_get_16025602(t_16110287, key_16110288, hc_16135601, 0);
    if ((index_16135610 < 0)) {
    result_16110290 = false;
    if (((t_16110287.data != null ? t_16110287.data.length : 0) == 0)) {
    if (!(is_power_of_two_8715029(64))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    t_16110287.counter = 0;
    t_16110287.data = new Array(64); for (var i=0;i<64;++i) {t_16110287.data[i]={Field0: 0, Field1: null, Field2: {Field0: 0, Field1: 0, Field2: 0}};}    }
    
    if (must_rehash_16060601(t_16110287)) {
    enlarge_16085161(t_16110287);
    index_16135610 = raw_get_known_hc_16086628(t_16110287, key_16110288, hc_16135601[0]);
    }
    
    index_16135610 = subInt(-1, index_16135610);
    raw_insert_16086122(t_16110287, t_16110287, "data", key_16110288, val_16110289, hc_16135601[0], index_16135610);
    t_16110287.counter = addInt(t_16110287.counter, 1);
    }
    else {
      result_16110290 = true;
    }
    

  return result_16110290;

}
function len_16160820(t_16160825) {
  var result_16160826 = 0;

    result_16160826 = t_16160825.counter;

  return result_16160826;

}
function has_key_16170339(t_16170344, key_16170345) {
  var result_16170346 = false;

    var hc_16170347 = [0];
    result_16170346 = (0 <= raw_get_15770602(t_16170344, key_16170345, hc_16170347, 0));

  return result_16170346;

}
function has_key_or_put_16355084(t_16355090, key_16355091, val_16355092) {
  var result_16355093 = false;

    if (((t_16355090.data != null ? t_16355090.data.length : 0) == 0)) {
    if (!(is_power_of_two_8715029(64))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    t_16355090.counter = 0;
    t_16355090.data = new Array(64); for (var i=0;i<64;++i) {t_16355090.data[i]={Field0: 0, Field1: null, Field2: 0};}    }
    
    var hc_16380601 = [0];
    var index_16380610 = raw_get_14105210(t_16355090, key_16355091, hc_16380601, 0);
    if ((index_16380610 < 0)) {
    result_16355093 = false;
    if (((t_16355090.data != null ? t_16355090.data.length : 0) == 0)) {
    if (!(is_power_of_two_8715029(64))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    t_16355090.counter = 0;
    t_16355090.data = new Array(64); for (var i=0;i<64;++i) {t_16355090.data[i]={Field0: 0, Field1: null, Field2: 0};}    }
    
    if (must_rehash_15895601(t_16355090)) {
    enlarge_15920161(t_16355090);
    index_16380610 = raw_get_known_hc_15921628(t_16355090, key_16355091, hc_16380601[0]);
    }
    
    index_16380610 = subInt(-1, index_16380610);
    raw_insert_15921122(t_16355090, t_16355090, "data", key_16355091, val_16355092, hc_16380601[0], index_16380610);
    t_16355090.counter = addInt(t_16355090.counter, 1);
    }
    else {
      result_16355093 = true;
    }
    

  return result_16355093;

}
function load_links_14101049(e_14101052) {
function parse_tiles_15430250(tiles_15430253) {
                        var Tmp8;
                          var Tmp9;
                        var Tmp10;
                              var Tmp16;
                                var Tmp17;
                              var Tmp18;
                              var Tmp19;
                              var Tmp20;
                              var Tmp21;
                              var Tmp22;
                      var Tmp28;
                              var Tmp32;
                              var Tmp33;
                              var Tmp34;
                              var Tmp35;
                      var Tmp36;
                      var Tmp37;
                      var Tmp38;
                      var Tmp39;
                      var Tmp40;
                        var Tmp41;
                      var Tmp42;
                      var Tmp43;
                      var Tmp44;
                      var Tmp45;
                      function HEX3Aanonymous_15660201(x_15660203) {
                        var result_15660204 = 0;

                          result_15660204 = parseInt(toJSStr(x_15660203), 10);

                        return result_15660204;

                      }
                      var Tmp46;
                        function HEX3Aanonymous_15660310(x_15660312) {
                          var result_15660313 = 0;

                            result_15660313 = parseInt(toJSStr(x_15660312), 10);

                          return result_15660313;

                        }
                      var Tmp47;
                      var Tmp48;
                        var Tmp49;
                          var Tmp50;
                      var Tmp51;
                      var Tmp52;
                      var Tmp53;
    var Tmp58;
    var Tmp59;

    L1: do {
      var t_15440214 = null;
      var i_16465372 = 0;
      var l_16465373 = (tiles_15430253 != null ? tiles_15430253.length : 0);
      L2: do {
          L3: while (true) {
          if (!(i_16465372 < l_16465373)) break L3;
            t_15440214 = tiles_15430253[chckIndx(i_16465372, 0, (tiles_15430253 != null ? tiles_15430253.length : 0)+0-1)-0];
            var rows_15445010 = (t_15440214.Rows);
            var meta_15450008 = (t_15440214.Meta);
            var tile_id_15470018 = nsuJoinSep([cstrToNimstr((meta_15450008.tileX)), cstrToNimstr((meta_15450008.tileY)), cstrToNimstr((meta_15450008.level)), cstrToNimstr((meta_15450008.layerName))], makeNimstrLit("_"));
            L4: do {
              var r_15475207 = null;
              var i_16465369 = 0;
              var l_16465370 = (rows_15445010 != null ? rows_15445010.length : 0);
              L5: do {
                  L6: while (true) {
                  if (!(i_16465369 < l_16465370)) break L6;
                    r_15475207 = rows_15445010[chckIndx(i_16465369, 0, (rows_15445010 != null ? rows_15445010.length : 0)+0-1)-0];
                    L7: do {
                      var link_id_15480008 = parseInt(toJSStr(cstrToNimstr((r_15475207.LINK_ID))), 10);
                        if (!has_key_or_put_15480085(all_links_13740629[0], link_id_15480008, {linkId: link_id_15480008, name: null, cityId: 0, districtId: 0, postalCode: null, neighborLinks: null, geometry: null, readOnly: false, addedToMap: false, addedToSector: false})) Tmp8 = false; else {                          Tmp8 = (Tmp9 = HEX5BHEX5D_15240788(all_links_13740629[0], link_id_15480008), Tmp9)[0][Tmp9[1]].readOnly;                        }                      if (Tmp8) {
                      break L7;
                      }
                      
                        if (!(r_15475207.NAMES)) Tmp10 = false; else {                          Tmp10 = !((r_15475207.NAME));                        }                      if (Tmp10) {
                      var str_name_15580008 = cstrToNimstr((r_15475207.NAMES));
                      L11: do {
                        var seq_names_15580009 = null;
                        var last_16465343 = 0;
                        var splits_16465344 = -1;
                        L12: do {
                            L13: while (true) {
                            if (!(last_16465343 <= (str_name_15580008 != null ? str_name_15580008.length : 0))) break L13;
                              var first_16465346 = last_16465343;
                              L14: do {
                                  L15: while (true) {
                                  if (!((last_16465343 < (str_name_15580008 != null ? str_name_15580008.length : 0)) && !(substr_eq_8870026(str_name_15580008, last_16465343, makeNimstrLit("\x1D"))))) break L15;
                                    last_16465343 = addInt(last_16465343, 1);
                                  }
                              } while(false);
                              if ((splits_16465344 == 0)) {
                              last_16465343 = (str_name_15580008 != null ? str_name_15580008.length : 0);
                              }
                              
                              seq_names_15580009 = substr_341022(str_name_15580008, first_16465346, subInt(last_16465343, 1));
                              var txt_15585201 = nsuReplaceStr((Tmp16 = nsuSplitString(seq_names_15580009, makeNimstrLit("\x1E"), -1), Tmp16)[chckIndx(0, 0, (Tmp16 != null ? Tmp16.length : 0)+0-1)-0], makeNimstrLit("GERBN"), []);
                                if (!!((ConstSet15[txt_15585201[chckIndx(0, 0, (txt_15585201 != null ? txt_15585201.length : 0)+0-1)-0]] != undefined))) Tmp17 = false; else {                                  Tmp17 = !((ConstSet16[txt_15585201[chckIndx(1, 0, (txt_15585201 != null ? txt_15585201.length : 0)+0-1)-0]] != undefined));                                }                              if (Tmp17) {
                              (Tmp18 = HEX5BHEX5D_15240788(all_links_13740629[0], link_id_15480008), Tmp18)[0][Tmp18[1]].name = nimCopy(null, ((Tmp19 = HEX5BHEX5D_15240788(all_links_13740629[0], link_id_15480008), Tmp19)[0][Tmp19[1]].name || []).concat(makeNimstrLit(" ") || [],nsuReplaceStr((Tmp20 = nsuSplitString(seq_names_15580009, makeNimstrLit("\x1E"), -1), Tmp20)[chckIndx(0, 0, (Tmp20 != null ? Tmp20.length : 0)+0-1)-0], makeNimstrLit("GERBN"), []) || []), NTI112);
                              (Tmp21 = HEX5BHEX5D_15240788(all_links_13740629[0], link_id_15480008), Tmp21)[0][Tmp21[1]].name = nimCopy(null, nucStrip((Tmp22 = HEX5BHEX5D_15240788(all_links_13740629[0], link_id_15480008), Tmp22)[0][Tmp22[1]].name, true, true, [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288]), NTI112);
                              break L11;
                              }
                              
                              L23: do {
                                var seq_text_15595651 = null;
                                var last_16465338 = 0;
                                var splits_16465339 = -1;
                                L24: do {
                                    L25: while (true) {
                                    if (!(last_16465338 <= (seq_names_15580009 != null ? seq_names_15580009.length : 0))) break L25;
                                      var first_16465341 = last_16465338;
                                      L26: do {
                                          L27: while (true) {
                                          if (!((last_16465338 < (seq_names_15580009 != null ? seq_names_15580009.length : 0)) && !(substr_eq_8870026(seq_names_15580009, last_16465338, makeNimstrLit("\x1E"))))) break L27;
                                            last_16465338 = addInt(last_16465338, 1);
                                          }
                                      } while(false);
                                      if ((splits_16465339 == 0)) {
                                      last_16465338 = (seq_names_15580009 != null ? seq_names_15580009.length : 0);
                                      }
                                      
                                      seq_text_15595651 = substr_341022(seq_names_15580009, first_16465341, subInt(last_16465338, 1));
                                      if ((splits_16465339 == 0)) {
                                      break L24;
                                      }
                                      
                                      splits_16465339 = subInt(splits_16465339, 1);
                                      last_16465338 = addInt(last_16465338, 1);
                                    }
                                } while(false);
                              } while(false);
                              if ((splits_16465344 == 0)) {
                              break L12;
                              }
                              
                              splits_16465344 = subInt(splits_16465344, 1);
                              last_16465343 = addInt(last_16465343, 1);
                            }
                        } while(false);
                      } while(false);
                      }
                      else {
                      if ((r_15475207.NAME)) {
                      (Tmp28 = HEX5BHEX5D_15240788(all_links_13740629[0], link_id_15480008), Tmp28)[0][Tmp28[1]].geometry = nimCopy(null, new_seq_15605179(0), NTI15605183);
                      var lats_15610008 = nsuSplitString(cstrToNimstr((r_15475207.LAT)), makeNimstrLit(","), -1);
                      var lngs_15615008 = nsuSplitString(cstrToNimstr((r_15475207.LON)), makeNimstrLit(","), -1);
                      var lat0_15615009 = 0.0;
                      var lng0_15615010 = 0.0;
                      L29: do {
                        var i_15615025 = 0;
                        var colontmp__16465355 = 0;
                        colontmp__16465355 = (lats_15610008 != null ? (lats_15610008.length-1) : -1);
                        var res_16465356 = 0;
                        L30: do {
                            L31: while (true) {
                            if (!(res_16465356 <= colontmp__16465355)) break L31;
                              i_15615025 = res_16465356;
                              if (eqStrings(nucStrip(lats_15610008[chckIndx(i_15615025, 0, (lats_15610008 != null ? lats_15610008.length : 0)+0-1)-0], true, true, [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288]), [])) {
                              Tmp32 = lat0_15615009;
                              }
                              else {
                              Tmp32 = (lat0_15615009 + parseFloat(toJSStr(nucStrip(lats_15610008[chckIndx(i_15615025, 0, (lats_15610008 != null ? lats_15610008.length : 0)+0-1)-0], true, true, [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288]))));
                              }
                              
                              var str_lat_15615028 = Tmp32;
                              if (eqStrings(nucStrip(lngs_15615008[chckIndx(i_15615025, 0, (lngs_15615008 != null ? lngs_15615008.length : 0)+0-1)-0], true, true, [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288]), [])) {
                              Tmp33 = lng0_15615010;
                              }
                              else {
                              Tmp33 = (lng0_15615010 + parseFloat(toJSStr(nucStrip(lngs_15615008[chckIndx(i_15615025, 0, (lngs_15615008 != null ? lngs_15615008.length : 0)+0-1)-0], true, true, [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288]))));
                              }
                              
                              var str_lng_15615031 = Tmp33;
                              if ((Tmp35 = (Tmp34 = HEX5BHEX5D_15240788(all_links_13740629[0], link_id_15480008), Tmp34)[0][Tmp34[1]].geometry, Tmp35) != null) { Tmp35.push({lat: nimCopy(null, (str_lat_15615028 / 1.0000000000000000e+005), NTI10891016), lng: nimCopy(null, (str_lng_15615031 / 1.0000000000000000e+005), NTI10891018)}); } else { Tmp35 = [{lat: nimCopy(null, (str_lat_15615028 / 1.0000000000000000e+005), NTI10891016), lng: nimCopy(null, (str_lng_15615031 / 1.0000000000000000e+005), NTI10891018)}]; };
                              lat0_15615009 = str_lat_15615028;
                              lng0_15615010 = str_lng_15615031;
                              res_16465356 = addInt(res_16465356, 1);
                            }
                        } while(false);
                      } while(false);
                      }
                      else {
                      if ((r_15475207.POSTAL_CODES)) {
                      (Tmp36 = HEX5BHEX5D_15240788(all_links_13740629[0], link_id_15480008), Tmp36)[0][Tmp36[1]].cityId = parseInt(toJSStr((Tmp38 = nsuSplitString((Tmp37 = nsuSplitString(cstrToNimstr((r_15475207.ADMIN_PLACE_IDS)), makeNimstrLit(","), -1), Tmp37)[chckIndx(3, 0, (Tmp37 != null ? Tmp37.length : 0)+0-1)-0], makeNimstrLit(";"), -1), Tmp38)[chckIndx(0, 0, (Tmp38 != null ? Tmp38.length : 0)+0-1)-0]), 10);
                      var distr_prt_15630008 = nimCopy(null, (Tmp39 = nsuSplitString(cstrToNimstr((r_15475207.ADMIN_PLACE_IDS)), makeNimstrLit(","), -1), Tmp39)[chckIndx(4, 0, (Tmp39 != null ? Tmp39.length : 0)+0-1)-0], NTI112);
                      if ((eqStrings(distr_prt_15630008, []) || (distr_prt_15630008[chckIndx(0, 0, (distr_prt_15630008 != null ? distr_prt_15630008.length : 0)+0-1)-0] == 59))) {
                      Tmp40 = 0;
                      }
                      else {
                      Tmp40 = parseInt(toJSStr((Tmp41 = nsuSplitString(distr_prt_15630008, makeNimstrLit(";"), -1), Tmp41)[chckIndx(0, 0, (Tmp41 != null ? Tmp41.length : 0)+0-1)-0]), 10);
                      }
                      
                      var district_id_15635204 = Tmp40;
                      (Tmp42 = HEX5BHEX5D_15240788(all_links_13740629[0], link_id_15480008), Tmp42)[0][Tmp42[1]].districtId = addInt(district_id_15635204, (Tmp43 = HEX5BHEX5D_15240788(all_links_13740629[0], link_id_15480008), Tmp43)[0][Tmp43[1]].cityId);
                      (Tmp44 = HEX5BHEX5D_15240788(all_links_13740629[0], link_id_15480008), Tmp44)[0][Tmp44[1]].postalCode = nimCopy(null, (Tmp45 = nsuSplitString(cstrToNimstr((r_15475207.POSTAL_CODES)), makeNimstrLit(";"), -1), Tmp45)[chckIndx(0, 0, (Tmp45 != null ? Tmp45.length : 0)+0-1)-0], NTI112);
                      }
                      else {
                      if ((r_15475207.REF_NODE_NEIGHBOR_LINKS)) {
                      var r_links_15650008 = cstrToNimstr((r_15475207.REF_NODE_NEIGHBOR_LINKS));
                      var non_rlinks_15655008 = cstrToNimstr((r_15475207.NONREF_NODE_NEIGHBOR_LINKS));
                      var ref_links_15655009 = nsuSplitString(r_links_15650008, makeNimstrLit(","), -1);
                      var non_ref_links_15655010 = nsuSplitString(non_rlinks_15655008, makeNimstrLit(","), -1);
                      var ref_links_int_15660270 = map_15660221(ref_links_15655009, HEX3Aanonymous_15660201);
                      if (eqStrings(non_rlinks_15655008, [])) {
                      Tmp46 = new_seq_15660283(0);
                      }
                      else {
                      Tmp46 = map_15660221(non_ref_links_15655010, HEX3Aanonymous_15660310);
                      }
                      
                      var non_ref_links_int_15660340 = nimCopy(null, Tmp46, NTI15660287);
                      (Tmp47 = HEX5BHEX5D_15240788(all_links_13740629[0], link_id_15480008), Tmp47)[0][Tmp47[1]].neighborLinks = nimCopy(null, concat_15660510([nimCopy(null, ref_links_int_15660270, NTI15660502), nimCopy(null, non_ref_links_int_15660340, NTI15660507)]), NTI15660516);
                      }
                      }}}
                      var street_15660766 = nimCopy(null, (Tmp48 = HEX5BHEX5D_15240788(all_links_13740629[0], link_id_15480008), Tmp48)[0][Tmp48[1]].name, NTI112);
                        if (!!(eqStrings(street_15660766, []))) Tmp49 = false; else {                          Tmp49 = ((Tmp50 = HEX5BHEX5D_15240788(all_links_13740629[0], link_id_15480008), Tmp50)[0][Tmp50[1]].cityId == city_id_13840630[0]);                        }                      if (Tmp49) {
                      if (!(has_key_or_put_15665277(all_streets_13760629[0], street_15660766, {name: nimCopy(null, street_15660766, NTI112), links: new_seq_15665193(0), sector: null, totalFamilies: 0}))) {
                      }
                      
                      if ((Tmp53 = (Tmp51 = HEX5BHEX5D_14676311(all_streets_13760629[0], street_15660766), Tmp51)[0][Tmp51[1]].links, Tmp53) != null) { Tmp53.push((Tmp52 = HEX5BHEX5D_15240788(all_links_13740629[0], link_id_15480008), Tmp52)[0][Tmp52[1]]); } else { Tmp53 = [(Tmp52 = HEX5BHEX5D_15240788(all_links_13740629[0], link_id_15480008), Tmp52)[0][Tmp52[1]]]; };
                      }
                      
                      has_key_or_put_15746096(cached_tiles_13780629[0], tile_id_15470018, t_15440214);
                    } while(false);
                    i_16465369 = addInt(i_16465369, 1);
                    if (!(((rows_15445010 != null ? rows_15445010.length : 0) == l_16465370))) {
                    failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while(false);
            } while(false);
            i_16465372 = addInt(i_16465372, 1);
            if (!(((tiles_15430253 != null ? tiles_15430253.length : 0) == l_16465373))) {
            failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    L54: do {
      var k_15835681 = 0;
      var v_15835682 = null;
      var v_15835682_Idx = 0;
      var l_16465376 = len_14325430(all_links_13740629[0]);
      L55: do {
        var h_16465378 = 0;
        var colontmp__16465379 = 0;
        colontmp__16465379 = (all_links_13740629[0].data != null ? (all_links_13740629[0].data.length-1) : -1);
        var res_16465380 = 0;
        L56: do {
            L57: while (true) {
            if (!(res_16465380 <= colontmp__16465379)) break L57;
              h_16465378 = res_16465380;
              if (is_filled_10612018(all_links_13740629[0].data[chckIndx(h_16465378, 0, (all_links_13740629[0].data != null ? all_links_13740629[0].data.length : 0)+0-1)-0].Field0)) {
              k_15835681 = all_links_13740629[0].data[chckIndx(h_16465378, 0, (all_links_13740629[0].data != null ? all_links_13740629[0].data.length : 0)+0-1)-0].Field1;
              v_15835682 = all_links_13740629[0].data[chckIndx(h_16465378, 0, (all_links_13740629[0].data != null ? all_links_13740629[0].data.length : 0)+0-1)-0]; v_15835682_Idx = "Field2";
              v_15835682[v_15835682_Idx].readOnly = true;
              if (eqStrings(v_15835682[v_15835682_Idx].name, [])) {
              v_15835682[v_15835682_Idx].name = nimCopy(null, makeNimstrLit("uknown!!!"), NTI112);
              }
              
              if (!((len_14325430(all_links_13740629[0]) == l_16465376))) {
              failed_assert_impl_102680(makeNimstrLit("tables.nim(686, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_16465380 = addInt(res_16465380, 1);
            }
        } while(false);
      } while(false);
    } while(false);
    sort_15845080(all_streets_13760629[0], sort_street_tbl_15840222, 1);
    display_street_15160323((Tmp58 = HEX5BHEX5D_15240788(all_links_13740629[0], clck_link_id_13840634[0]), Tmp58)[0][Tmp58[1]].name, true);
    if (!(has_key_14670110(all_sectors_13800629[0], sect_name_13840636[0]))) {
    HEX5BHEX5DHEX3D_15847427(last_postfix_13820629[0], postal_code_13840635[0], subInt((Tmp59 = HEX5BHEX5D_14105198(last_postfix_13820629[0], postal_code_13840635[0]), Tmp59)[0][Tmp59[1]], 1));
    }
    
    sort_15930080(all_sectors_13800629[0], sort_sector_tbl_15925692, 1);
    redraw_13280414(kxi_12727284[0]);

  
}
    function HEX3Aanonymous_15932048(res_15932050) {
        var tiles_15940010 = (res_15932050.Tiles);
        L1: do {
          var k_15950229 = null;
          var v_15950230 = null;
          var l_16465314 = len_15940144(cached_tiles_13780629[0]);
          L2: do {
            var h_16465316 = 0;
            var colontmp__16465317 = 0;
            colontmp__16465317 = (cached_tiles_13780629[0].data != null ? (cached_tiles_13780629[0].data.length-1) : -1);
            var res_16465318 = 0;
            L3: do {
                L4: while (true) {
                if (!(res_16465318 <= colontmp__16465317)) break L4;
                  h_16465316 = res_16465318;
                  if (is_filled_10612018(cached_tiles_13780629[0].data[chckIndx(h_16465316, 0, (cached_tiles_13780629[0].data != null ? cached_tiles_13780629[0].data.length : 0)+0-1)-0].Field0)) {
                  k_15950229 = cached_tiles_13780629[0].data[chckIndx(h_16465316, 0, (cached_tiles_13780629[0].data != null ? cached_tiles_13780629[0].data.length : 0)+0-1)-0].Field1;
                  v_15950230 = cached_tiles_13780629[0].data[chckIndx(h_16465316, 0, (cached_tiles_13780629[0].data != null ? cached_tiles_13780629[0].data.length : 0)+0-1)-0].Field2;
                  if (tiles_15940010 != null) { tiles_15940010.push(v_15950230); } else { tiles_15940010 = [v_15950230]; };
                  if (!((len_15940144(cached_tiles_13780629[0]) == l_16465314))) {
                  failed_assert_impl_102680(makeNimstrLit("tables.nim(664, 13) `len(t) == L` the length of the table changed while iterating over it"));
                  }
                  
                  }
                  
                  res_16465318 = addInt(res_16465318, 1);
                }
            } while(false);
          } while(false);
        } while(false);
        parse_tiles_15430250(tiles_15940010);

      
    }
    function HEX3Aanonymous_15950252(e_15950254) {
      
    }
    function HEX3Aanonymous_15950269(res_15950271) {
      BeforeRet: do {
        var layer_obj_15955002 = res_15950271.Layers[0];
        var e_pnt_15955003 = function(){return H.service.extension.platformData.Service.EntryPoint}();
        var e_pnt_type_15955004 = function(){return H.service.extension.platformData.Service.EntryPointType}();
        var prms_pde_15960201 = {};
        var t_xys_15960218 = new_seq_610232(0);
        var layers_15960230 = [makeNimstrLit("ROAD_ADMIN_FC"), makeNimstrLit("ROAD_GEOM_FC"), makeNimstrLit("ROAD_NAME_FC"), makeNimstrLit("LINK_FC")];
        var r_layers_15960247 = new_seq_610232(0);
        var levels_15960264 = new_seq_610232(0);
        var tile_xys_15965010 = (layer_obj_15955002.tileXYs);
        var level_15970008 = (layer_obj_15955002.level);
        var all_crds_15970063 = new_seq_15970022(0);
        var prev_txys_15990629 = [init_table_15970070(64)];
        L1: do {
          var xy_15990636 = null;
          var i_16465239 = 0;
          var l_16465240 = (tile_xys_15965010 != null ? tile_xys_15965010.length : 0);
          L2: do {
              L3: while (true) {
              if (!(i_16465239 < l_16465240)) break L3;
                xy_15990636 = tile_xys_15965010[chckIndx(i_16465239, 0, (tile_xys_15965010 != null ? tile_xys_15965010.length : 0)+0-1)-0];
                var tx_15995008 = (xy_15990636.x);
                var ty_16000008 = (xy_15990636.y);
                var latlng_16000009 = get_coord_11186015(level_15970008, tx_15995008, ty_16000008);
                HEX5BHEX5DHEX3D_16000141(prev_txys_15990629[0], nsuJoinSep([cstrToNimstr((level_15970008)+""), cstrToNimstr((tx_15995008)+""), cstrToNimstr((ty_16000008)+"")], makeNimstrLit("_")), {Field0: level_15970008, Field1: tx_15995008, Field2: ty_16000008});
                if (all_crds_15970063 != null) { all_crds_15970063.push({Field0: latlng_16000009["Field0"], Field1: latlng_16000009["Field1"]}); } else { all_crds_15970063 = [{Field0: latlng_16000009["Field0"], Field1: latlng_16000009["Field1"]}]; };
                i_16465239 = addInt(i_16465239, 1);
                if (!(((tile_xys_15965010 != null ? tile_xys_15965010.length : 0) == l_16465240))) {
                failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);
        L4: do {
          var lvl_16095210 = 0;
          var res_16465248 = 10;
          L5: do {
              L6: while (true) {
              if (!(res_16465248 <= 13)) break L6;
                lvl_16095210 = res_16465248;
                L7: do {
                  var crd_16105214 = {Field0: 0.0, Field1: 0.0};
                  var i_16465245 = 0;
                  var l_16465246 = (all_crds_15970063 != null ? all_crds_15970063.length : 0);
                  L8: do {
                      L9: while (true) {
                      if (!(i_16465245 < l_16465246)) break L9;
                        nimCopy(crd_16105214, all_crds_15970063[chckIndx(i_16465245, 0, (all_crds_15970063 != null ? all_crds_15970063.length : 0)+0-1)-0], NTI15970011);
                        var txy_16105215 = get_tile_xy_11186061(lvl_16095210, crd_16105214["Field0"], crd_16105214["Field1"]);
                        var k_16105227 = nsuJoinSep([cstrToNimstr((lvl_16095210)+""), cstrToNimstr((txy_16105215["Field0"])+""), cstrToNimstr((txy_16105215["Field1"])+"")], makeNimstrLit("_"));
                        has_key_or_put_16110281(prev_txys_15990629[0], k_16105227, {Field0: lvl_16095210, Field1: txy_16105215["Field0"], Field2: txy_16105215["Field1"]});
                        i_16465245 = addInt(i_16465245, 1);
                        if (!(((all_crds_15970063 != null ? all_crds_15970063.length : 0) == l_16465246))) {
                        failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  } while(false);
                } while(false);
                res_16465248 = addInt(res_16465248, 1);
              }
          } while(false);
        } while(false);
        L10: do {
          var lr_16160687 = null;
          var i_16465271 = 0;
          var l_16465272 = (layers_15960230 != null ? layers_15960230.length : 0);
          L11: do {
              L12: while (true) {
              if (!(i_16465271 < l_16465272)) break L12;
                lr_16160687 = layers_15960230[chckIndx(i_16465271, 0, (layers_15960230 != null ? layers_15960230.length : 0)+0-1)-0];
                L13: do {
                  var lvl_tx_ty_16170214 = {Field0: 0, Field1: 0, Field2: 0};
                  var l_16465263 = len_16160820(prev_txys_15990629[0]);
                  L14: do {
                    var h_16465265 = 0;
                    var colontmp__16465266 = 0;
                    colontmp__16465266 = (prev_txys_15990629[0].data != null ? (prev_txys_15990629[0].data.length-1) : -1);
                    var res_16465267 = 0;
                    L15: do {
                        L16: while (true) {
                        if (!(res_16465267 <= colontmp__16465266)) break L16;
                          h_16465265 = res_16465267;
                          if (is_filled_10612018(prev_txys_15990629[0].data[chckIndx(h_16465265, 0, (prev_txys_15990629[0].data != null ? prev_txys_15990629[0].data.length : 0)+0-1)-0].Field0)) {
                          nimCopy(lvl_tx_ty_16170214, prev_txys_15990629[0].data[chckIndx(h_16465265, 0, (prev_txys_15990629[0].data != null ? prev_txys_15990629[0].data.length : 0)+0-1)-0].Field2, NTI15970065);
                          L17: do {
                            var x_str_16170215 = cstrToNimstr((lvl_tx_ty_16170214.Field1)+"");
                            var y_str_16170216 = cstrToNimstr((lvl_tx_ty_16170214.Field2)+"");
                            var level_16170217 = lvl_tx_ty_16170214.Field0;
                            var layer_name_16170218 = (lr_16160687 || []).concat(cstrToNimstr((subInt(level_16170217, 8))+"") || []);
                            if (has_key_16170339(cached_tiles_13780629[0], nsuJoinSep([nimCopy(null, x_str_16170215, NTI112), nimCopy(null, y_str_16170216, NTI112), cstrToNimstr((level_16170217)+""), nimCopy(null, layer_name_16170218, NTI112)], makeNimstrLit("_")))) {
                            break L17;
                            }
                            
                            if (t_xys_15960218 != null) { t_xys_15960218.push((x_str_16170215 || []).concat(makeNimstrLit(",") || [],y_str_16170216 || [])); } else { t_xys_15960218 = [(x_str_16170215 || []).concat(makeNimstrLit(",") || [],y_str_16170216 || [])]; };
                            if (levels_15960264 != null) { levels_15960264.push(cstrToNimstr((level_16170217)+"")); } else { levels_15960264 = [cstrToNimstr((level_16170217)+"")]; };
                            var Tmp18 = nimCopy(null, layer_name_16170218, NTI112);
                            if (r_layers_15960247 != null) { r_layers_15960247.push(Tmp18); } else { r_layers_15960247 = [Tmp18]; };
                          } while(false);
                          if (!((len_16160820(prev_txys_15990629[0]) == l_16465263))) {
                          failed_assert_impl_102680(makeNimstrLit("tables.nim(728, 13) `len(t) == L` the length of the table changed while iterating over it"));
                          }
                          
                          }
                          
                          res_16465267 = addInt(res_16465267, 1);
                        }
                    } while(false);
                  } while(false);
                } while(false);
                i_16465271 = addInt(i_16465271, 1);
                if (!(((layers_15960230 != null ? layers_15960230.length : 0) == l_16465272))) {
                failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);
        if (((r_layers_15960247 != null ? r_layers_15960247.length : 0) == 0)) {
        var tiles_16170411 = new_seq_14475256(0);
        L19: do {
          var k_16170419 = null;
          var v_16170420 = null;
          var l_16465282 = len_15940144(cached_tiles_13780629[0]);
          L20: do {
            var h_16465284 = 0;
            var colontmp__16465285 = 0;
            colontmp__16465285 = (cached_tiles_13780629[0].data != null ? (cached_tiles_13780629[0].data.length-1) : -1);
            var res_16465286 = 0;
            L21: do {
                L22: while (true) {
                if (!(res_16465286 <= colontmp__16465285)) break L22;
                  h_16465284 = res_16465286;
                  if (is_filled_10612018(cached_tiles_13780629[0].data[chckIndx(h_16465284, 0, (cached_tiles_13780629[0].data != null ? cached_tiles_13780629[0].data.length : 0)+0-1)-0].Field0)) {
                  k_16170419 = cached_tiles_13780629[0].data[chckIndx(h_16465284, 0, (cached_tiles_13780629[0].data != null ? cached_tiles_13780629[0].data.length : 0)+0-1)-0].Field1;
                  v_16170420 = cached_tiles_13780629[0].data[chckIndx(h_16465284, 0, (cached_tiles_13780629[0].data != null ? cached_tiles_13780629[0].data.length : 0)+0-1)-0].Field2;
                  if (tiles_16170411 != null) { tiles_16170411.push(v_16170420); } else { tiles_16170411 = [v_16170420]; };
                  if (!((len_15940144(cached_tiles_13780629[0]) == l_16465282))) {
                  failed_assert_impl_102680(makeNimstrLit("tables.nim(664, 13) `len(t) == L` the length of the table changed while iterating over it"));
                  }
                  
                  }
                  
                  res_16465286 = addInt(res_16465286, 1);
                }
            } while(false);
          } while(false);
        } while(false);
        parse_tiles_15430250(tiles_16170411);
        break BeforeRet;
        }
        
        prms_pde_15960201.layers = toJSStr(nsuJoinSep(r_layers_15960247, makeNimstrLit(",")));
        prms_pde_15960201.levels = toJSStr(nsuJoinSep(levels_15960264, makeNimstrLit(",")));
        prms_pde_15960201.tilexy = toJSStr(nsuJoinSep(t_xys_15960218, makeNimstrLit(",")));
        prms_pde_15960201.meta = 1;
        pde_service_15085033[0].request(e_pnt_15955003.TILES, e_pnt_type_15955004.JSON, prms_pde_15960201, on_res_road_geom_15950251, on_err_road_geom_15950268);
      } while (false);

      
    }
    function HEX3Aanonymous_16195275(e_16195277) {
      
    }
    function HEX3Aanonymous_16195292(r_16195294) {
        var Tmp1;
          var Tmp5;
        var Tmp6;
        var Tmp7;
          var Tmp8;
        var Tmp9;
        var Tmp10;

      BeforeRet: do {
        var res_16195295 = r_16195294;
        var map_reference_16220002 = res_16195295.response.view[0].result[0].location.mapReference;
        var city_shape_16250008 = (res_16195295.response.view[0].result[0].location.shape.value);
        var city_geo_16250009 = function(wkt){return new H.util.wkt.toGeometry(wkt)}(city_shape_16250008);
        var address_16275002 = res_16195295.response.view[0].result[0].location.address;
        var link_id_16280002 = map_reference_16220002.referenceId;
        clck_link_id_13840634[0] = (link_id_16280002);
        if ((city_geo_16250009.getExterior === undefined)) {
        Tmp1 = city_geo_16250009.getGeometries();
        }
        else {
        Tmp1 = [city_geo_16250009];
        }
        
        var geoms_16285017 = nimCopy(null, Tmp1, NTI10975004);
        L2: do {
          var g_16300214 = null;
          var i_16465300 = 0;
          var l_16465301 = (geoms_16285017 != null ? geoms_16285017.length : 0);
          L3: do {
              L4: while (true) {
              if (!(i_16465300 < l_16465301)) break L4;
                g_16300214 = geoms_16285017[chckIndx(i_16465300, 0, (geoms_16285017 != null ? geoms_16285017.length : 0)+0-1)-0];
                var ln_str_16300219 = g_16300214.getExterior();
                var p_opt_16305201 = {style: {strokeColor: "rgba(0, 255, 255, 1)", fillColor: "rgba(0, 255, 255, 1)", lineWidth: 10, m_type: NTI10986076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, m_type: NTI10986081, zIndex: 0};
                var pl_16305202 = function(ls, options){return new H.map.Polyline(ls, options)}(ln_str_16300219, p_opt_16305201);
                if ((city_id_13840630[0] == 0)) {
                map.addObject(pl_16305202);
                }
                
                i_16465300 = addInt(i_16465300, 1);
                if (!(((geoms_16285017 != null ? geoms_16285017.length : 0) == l_16465301))) {
                failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);
        var rev_city_id_16310008 = parseInt(toJSStr(cstrToNimstr((map_reference_16220002.cityId))), 10);
        var rev_postal_code_16315008 = cstrToNimstr((address_16275002.postalCode));
          if (!!((city_id_13840630[0] == 0))) Tmp5 = false; else {            Tmp5 = !((rev_city_id_16310008 == city_id_13840630[0]));          }        if (Tmp5) {
        break BeforeRet;
        }
        
        city_id_13840630[0] = rev_city_id_16310008;
        postal_code_13840635[0] = nimCopy(null, rev_postal_code_16315008, NTI112);
        if ((map_reference_16220002.districtId)) {
        Tmp6 = parseInt(toJSStr(cstrToNimstr((map_reference_16220002.districtId))), 10);
        }
        else {
        Tmp6 = 0;
        }
        
        district_id_13840631[0] = Tmp6;
        addr_city_13840633[0] = nimCopy(null, cstrToNimstr((address_16275002.city)), NTI112);
          if ((address_16275002.district === undefined)) Tmp8 = true; else {            Tmp8 = eqStrings(cstrToNimstr((address_16275002.district)), addr_city_13840633[0]);          }        if (Tmp8) {
        Tmp7 = [];
        }
        else {
        Tmp7 = cstrToNimstr((address_16275002.district));
        }
        
        addr_distr_13840632[0] = nimCopy(null, Tmp7, NTI112);
        has_key_or_put_16355084(last_postfix_13820629[0], postal_code_13840635[0], 0);
        HEX5BHEX5DHEX3D_15847427(last_postfix_13820629[0], postal_code_13840635[0], addInt((Tmp9 = HEX5BHEX5D_14105198(last_postfix_13820629[0], postal_code_13840635[0]), Tmp9)[0][Tmp9[1]], 1));
        var p_fix_16406129 = (Tmp10 = HEX5BHEX5D_14105198(last_postfix_13820629[0], postal_code_13840635[0]), Tmp10)[0][Tmp10[1]];
        var seq_sect_name_16406146 = new_seq_610232(0);
        if (seq_sect_name_16406146 != null) { seq_sect_name_16406146.push((postal_code_13840635[0] || []).concat(makeNimstrLit("-") || [],cstrToNimstr((p_fix_16406129)+"") || [])); } else { seq_sect_name_16406146 = [(postal_code_13840635[0] || []).concat(makeNimstrLit("-") || [],cstrToNimstr((p_fix_16406129)+"") || [])]; };
        sect_name_13840636[0] = nimCopy(null, nsuJoinSep(seq_sect_name_16406146, makeNimstrLit(" ")), NTI112);
        var e_pnt_16410201 = function(){return H.service.extension.platformData.Service.EntryPoint}();
        var e_pnt_type_16410202 = function(){return H.service.extension.platformData.Service.EntryPointType}();
        var prms_pde_16410203 = {};
        prms_pde_16410203.layer = "ROAD_GEOM_FCn";
        prms_pde_16410203.attributes = "LINK_ID";
        prms_pde_16410203.values = (link_id_16280002);
        var z_key_16425009 = (makeNimstrLit("z") || []).concat(addr_city_13840633[0] || [],makeNimstrLit("-1") || []);
        if (!(has_key_14670110(all_sectors_13800629[0], z_key_16425009))) {
        HEX5BHEX5DHEX3D_14170347(all_sectors_13800629[0], z_key_16425009, {exclude: true, pFix: 1, city: [], postalCode: (makeNimstrLit("z") || []).concat(addr_city_13840633[0] || []), district: [], folkDistrict: null, streets: {data: null, counter: 0, first: 0, last: 0}, shownOnMap: false});
        }
        
        pde_service_15085033[0].request(e_pnt_16410201.INDEX, e_pnt_type_16410202.JSON, prms_pde_16410203, on_res_index_road_geom_16195274, on_err_index_road_geom_16195291);
      } while (false);

      
    }
    function HEX3Aanonymous_16425460(e_16425462) {
      
    }

    var p_e_15415125 = e_14101052;
    main_group_15085006[0].removeAll();
    L1: do {
      var k_15430245 = 0;
      var v_15430246 = null;
      var v_15430246_Idx = 0;
      var l_16465223 = len_14325430(all_links_13740629[0]);
      L2: do {
        var h_16465225 = 0;
        var colontmp__16465226 = 0;
        colontmp__16465226 = (all_links_13740629[0].data != null ? (all_links_13740629[0].data.length-1) : -1);
        var res_16465227 = 0;
        L3: do {
            L4: while (true) {
            if (!(res_16465227 <= colontmp__16465226)) break L4;
              h_16465225 = res_16465227;
              if (is_filled_10612018(all_links_13740629[0].data[chckIndx(h_16465225, 0, (all_links_13740629[0].data != null ? all_links_13740629[0].data.length : 0)+0-1)-0].Field0)) {
              k_15430245 = all_links_13740629[0].data[chckIndx(h_16465225, 0, (all_links_13740629[0].data != null ? all_links_13740629[0].data.length : 0)+0-1)-0].Field1;
              v_15430246 = all_links_13740629[0].data[chckIndx(h_16465225, 0, (all_links_13740629[0].data != null ? all_links_13740629[0].data.length : 0)+0-1)-0]; v_15430246_Idx = "Field2";
              v_15430246[v_15430246_Idx].addedToMap = false;
              if (!((len_14325430(all_links_13740629[0]) == l_16465223))) {
              failed_assert_impl_102680(makeNimstrLit("tables.nim(686, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_16465227 = addInt(res_16465227, 1);
            }
        } while(false);
      } while(false);
    } while(false);
    var geo_point_15430247 = map.screenToGeo(p_e_15415125.currentPointer.viewportX, p_e_15415125.currentPointer.viewportY);
    var reverse_geocoding_parameters_15430248 = {m_type: NTI13435047, jsonattributes: 0, mode: null, prox: null, maxResults: 0, additionaldata: null, locationattributes: null};
    reverse_geocoding_parameters_15430248.jsonattributes = 1;
    reverse_geocoding_parameters_15430248.prox = toJSStr((cstrToNimstr((geo_point_15430247.lat)+"") || []).concat(makeNimstrLit(",") || [],cstrToNimstr((geo_point_15430247.lng)+"") || [],makeNimstrLit(",1") || []));
    reverse_geocoding_parameters_15430248.mode = "retrieveAddresses";
    reverse_geocoding_parameters_15430248.maxResults = 1;
    reverse_geocoding_parameters_15430248.additionaldata = "SuppressStreetType,Unnamed";
    reverse_geocoding_parameters_15430248.locationattributes = "linkInfo";
    reverse_geocoding_parameters_15430248.additionaldata = "IncludeShapeLevel,city";
    var rgcp_15430249 = reverse_geocoding_parameters_15430248;
    var on_res_road_geom_15950251 = HEX3Aanonymous_15932048;
    var on_err_road_geom_15950268 = HEX3Aanonymous_15950252;
    var on_res_index_road_geom_16195274 = HEX3Aanonymous_15950269;
    var on_err_index_road_geom_16195291 = HEX3Aanonymous_16195275;
    var on_res_rev_geo_16425459 = HEX3Aanonymous_16195292;
    var on_err_rev_geo_16425476 = HEX3Aanonymous_16425460;
    geocoder_15085032.reverseGeocode(reverse_geocoding_parameters_15430248, on_res_rev_geo_16425459, on_err_rev_geo_16425476);

  
}
function map_15350409(s_15350414, op_15350417) {
  var result_15350419 = null;

    result_15350419 = new Array(chckRange((s_15350414 != null ? s_15350414.length : 0), 0, 2147483647)); for (var i=0;i<chckRange((s_15350414 != null ? s_15350414.length : 0), 0, 2147483647);++i) {result_15350419[i]=null;}    L1: do {
      var i_15350442 = 0;
      var colontmp__16465506 = 0;
      colontmp__16465506 = (s_15350414 != null ? s_15350414.length : 0);
      var i_16465507 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_16465507 < colontmp__16465506)) break L3;
            i_15350442 = i_16465507;
            result_15350419[chckIndx(i_15350442, 0, (result_15350419 != null ? result_15350419.length : 0)+0-1)-0] = nimCopy(null, op_15350417(s_15350414[chckIndx(i_15350442, 0, (s_15350414 != null ? s_15350414.length : 0)+0-1)-0]), NTI112);
            i_16465507 = addInt(i_16465507, 1);
          }
      } while(false);
    } while(false);

  return result_15350419;

}
function show_border_15350380(hr_coord_15350382, s_col_15350383, latlon_15350384) {
    function HEX3Aanonymous_15350385(item_15350387) {
        function HEX3Aanonymous_15350389(item_15350391) {
          var result_15350392 = null;

            result_15350392 = nimCopy(null, nucStrip(item_15350391, true, true, [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288]), NTI112);

          return result_15350392;

        }

      var result_15350388 = null;

        result_15350388 = nimCopy(null, nsuJoinSep(map_15350409(nsuSplitString(item_15350387, makeNimstrLit(","), -1), HEX3Aanonymous_15350389), makeNimstrLit(",")), NTI112);

      return result_15350388;

    }

    var hr_arr_area_15350514 = nsuSplitString(nsuJoinSep(map_15350409(nsuSplitString(hr_coord_15350382, makeNimstrLit(" "), -1), HEX3Aanonymous_15350385), makeNimstrLit(",")), makeNimstrLit(","), -1);
    var hr_ln_str_15350515 = function(){return new H.geo.LineString();}();
    var i_lat_15350517 = 0;
    var i_lng_15350519 = 1;
    if (latlon_15350384) {
    i_lat_15350517 = 1;
    i_lng_15350519 = 0;
    }
    
    L1: do {
      var i_15350533 = 0;
      var colontmp__16465496 = 0;
      colontmp__16465496 = subInt((hr_arr_area_15350514 != null ? (hr_arr_area_15350514.length-1) : -1), 3);
      var res_16465497 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_16465497 <= colontmp__16465496)) break L3;
            i_15350533 = res_16465497;
            hr_ln_str_15350515.pushLatLngAlt(chckRange(parseFloat(toJSStr(hr_arr_area_15350514[chckIndx(addInt(i_15350533, i_lng_15350519), 0, (hr_arr_area_15350514 != null ? hr_arr_area_15350514.length : 0)+0-1)-0])), -9.0000000000000000e+001, 9.0000000000000000e+001), chckRange(parseFloat(toJSStr(hr_arr_area_15350514[chckIndx(addInt(i_15350533, i_lat_15350517), 0, (hr_arr_area_15350514 != null ? hr_arr_area_15350514.length : 0)+0-1)-0])), -1.8000000000000000e+002, 1.8000000000000000e+002), parseFloat(toJSStr(hr_arr_area_15350514[chckIndx(addInt(i_15350533, 3), 0, (hr_arr_area_15350514 != null ? hr_arr_area_15350514.length : 0)+0-1)-0])));
            res_16465497 = addInt(res_16465497, 3);
          }
      } while(false);
    } while(false);
    hr_ln_str_15350515.pushLatLngAlt(chckRange(parseFloat(toJSStr(hr_arr_area_15350514[chckIndx(i_lng_15350519, 0, (hr_arr_area_15350514 != null ? hr_arr_area_15350514.length : 0)+0-1)-0])), -9.0000000000000000e+001, 9.0000000000000000e+001), chckRange(parseFloat(toJSStr(hr_arr_area_15350514[chckIndx(i_lat_15350517, 0, (hr_arr_area_15350514 != null ? hr_arr_area_15350514.length : 0)+0-1)-0])), -1.8000000000000000e+002, 1.8000000000000000e+002), parseFloat(toJSStr(hr_arr_area_15350514[chckIndx(2, 0, (hr_arr_area_15350514 != null ? hr_arr_area_15350514.length : 0)+0-1)-0])));
    var p_opt_15350534 = {style: {strokeColor: toJSStr(s_col_15350383), fillColor: toJSStr(s_col_15350383), lineWidth: 10, m_type: NTI10986076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, m_type: NTI10986081, zIndex: 0};
    var pl_15350535 = function(ls, options){return new H.map.Polyline(ls, options)}(hr_ln_str_15350515, p_opt_15350534);
    map.addObject(pl_15350535);

  
}
function geo_area_15350554() {
    function show_border_district_15350558(border_data_15350560, stroke_color_15350561, fill_color_15350562) {
        function HEX3Aanonymous_15355201(item_15355203) {
            function HEX3Aanonymous_15355205(item_15355207) {
              var result_15355208 = null;

                result_15355208 = nimCopy(null, nucStrip(item_15355207, true, true, [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288]), NTI112);

              return result_15355208;

            }

          var result_15355204 = null;

            result_15355204 = nimCopy(null, nsuJoinSep(map_15350409(nsuSplitString(item_15355203, makeNimstrLit(","), -1), HEX3Aanonymous_15355205), makeNimstrLit(",")), NTI112);

          return result_15355204;

        }
        function HEX3Aanonymous_15360201(e_15360203) {
          
        }
        stroke_color_15350561 = nimCopy(null, stroke_color_15350561, NTI112);
        fill_color_15350562 = nimCopy(null, fill_color_15350562, NTI112);
        function HEX3Aanonymous_15360218(r_15360220) {
            var res_15375002 = r_15360220.Response.View[0].Result[0];
            var loc_15375003 = res_15375002["Location"];
            var shp_15385008 = cstrToNimstr((loc_15375003.Shape.Value));
            var p_opt_15385011 = {style: {strokeColor: toJSStr(stroke_color_15350561), fillColor: toJSStr(fill_color_15350562), lineWidth: 1, m_type: NTI10986076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, zIndex: -999, m_type: NTI10986085};
            var pl_15385017 = function(ls, opt){return new H.map.Polygon(ls, opt)}(function(wkt){return new H.util.wkt.toGeometry(wkt)}(toJSStr(shp_15385008)), p_opt_15385011);
            map.addObject(pl_15385017);

          
        }
                function HEX3Aanonymous_15390001() {
                    function HEX3Aanonymous_15390004(r_15390006) {
                        var Tmp1;

                        var res_15405002 = r_15390006.Response.View[0].Result[0];
                        var match_lvl_15410008 = cstrToNimstr((res_15405002.MatchLevel));
                        var loc_15410009 = res_15405002["Location"];
                        if ((loc_15410009.Shape === undefined)) {
                        Tmp1 = makeNimstrLit("city");
                        }
                        else {
                        Tmp1 = makeNimstrLit("district");
                        }
                        
                        var type_shp_15415006 = nimCopy(null, Tmp1, NTI112);
                        geocoding_parameters_15350563.searchtext = toJSStr(c_15390003);
                        geocoding_parameters_15350563.additionaldata = toJSStr((makeNimstrLit("IncludeShapeLevel,") || []).concat(type_shp_15415006 || []));
                        geocoder_15085032.geocode(geocoding_parameters_15350563, on_res_geo_for_map_15385081, on_err_geo_15360217);

                      
                    }

                    var c_15390003 = nimCopy(null, city_15385088, NTI112);
                    var on_res_geo_15415050 = HEX3Aanonymous_15390004;
                    geocoding_parameters_15350563.searchtext = toJSStr(city_15385088);
                    geocoder_15085032.geocode(geocoding_parameters_15350563, on_res_geo_15415050, on_err_geo_15360217);

                  
                }

        var geocoding_parameters_15350563 = {m_type: NTI13435055, searchtext: null, country: null, state: null, additionaldata: null};
        geocoding_parameters_15350563.searchtext = "";
        geocoding_parameters_15350563.country = "DEU";
        geocoding_parameters_15350563.state = "Hessen";
        geocoding_parameters_15350563.additionaldata = "IncludeShapeLevel,district";
        var borders_str_15350564 = nimCopy(null, border_data_15350560, NTI112);
        var arr_area_15355261 = nsuSplitString(nsuJoinSep(map_15350409(nsuSplitCharSet(borders_str_15350564, ConstSet17, -1), HEX3Aanonymous_15355201), makeNimstrLit(",")), makeNimstrLit(","), -1);
        var on_err_geo_15360217 = HEX3Aanonymous_15360201;
        var on_res_geo_for_map_15385081 = HEX3Aanonymous_15360218;
        L1: do {
          var city_15385088 = null;
          var i_16465515 = 0;
          var l_16465516 = (arr_area_15355261 != null ? arr_area_15355261.length : 0);
          L2: do {
              L3: while (true) {
              if (!(i_16465515 < l_16465516)) break L3;
                city_15385088 = arr_area_15355261[chckIndx(i_16465515, 0, (arr_area_15355261 != null ? arr_area_15355261.length : 0)+0-1)-0];
                HEX3Aanonymous_15390001();
                i_16465515 = addInt(i_16465515, 1);
                if (!(((arr_area_15355261 != null ? arr_area_15355261.length : 0) == l_16465516))) {
                failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);

      
    }

    var hr_coord_real_15350556 = makeNimstrLit("49.95904181908018,8.850935273809228,0 49.95837229749924,8.849427872342858,0 49.95778559567659,8.849229388875756,0 49.95578385330093,8.847823911351952,0 49.95545252239804,8.847308927221093,0 49.954496481908954,8.843854242009911,0 49.954254880224994,8.841982060117516,0 49.95423417145281,8.841568999929223,0 49.95381654264659,8.839605622930321,0 49.95375096424056,8.83937495295504,0 49.95231857151512,8.835775428457055,0 49.951210595147934,8.833259516401085,0 49.95064796810658,8.831430249852929,0 49.9500128474752,8.827310376806054,0 49.949519242504806,8.823447995824523,0 49.94900837329215,8.818169408483215,0 49.94863557341978,8.816560083074279,0 49.9475861953235,8.814328485173888,0 49.946453945946494,8.812075429601379,0 49.94641252168413,8.811710649175353,0 49.95301233813149,8.805423551244445,0 49.95310898144414,8.800981813115783,0 49.95339891021844,8.80079942290277,0 49.95450683623976,8.798015289945312,0 49.954717373816415,8.79680829588861,0 49.95474843665964,8.795612030667968,0 49.954675956660964,8.794501596135802,0 49.95419275388177,8.792087608022399,0 49.95494171612277,8.791873031301208,0 49.95532482133721,8.792146616620727,0 49.956194562401365,8.791889124555297,0 49.95683995533862,8.790891342801757,0 49.95712641039451,8.790006213826842,0 49.957581973961105,8.789019160909362,0 49.958323475233655,8.786170910766941,0 49.95926218423155,8.781128357818943,0 49.95906892211046,8.780591916015965,0 49.95902750869786,8.778295945099217,0 49.95592140123064,8.773296307495457,0 49.95258038643044,8.769584130218817,0 49.95042655153455,8.763575982025458,0 49.94810692930535,8.756666611603094,0 49.94816215970436,8.755937050751044,0 49.957771284920895,8.741517495086981,0 49.95895848626439,8.741345833710028,0 49.96064260539336,8.751388024261786,0 49.95898609524966,8.756108712127997,0 49.95887565921357,8.757095765045477,0 49.959400228128835,8.75851197140534,0 49.95981435744582,8.759799431732489,0 49.96809619574408,8.75825447933994,0 49.97030444532241,8.759198616913181,0 49.9741686382908,8.757911156586033,0 49.97444464020134,8.758597802093846,0 49.97975736843787,8.759777974060398,0 49.98189609340527,8.759327362945896,0 49.98254459122235,8.760035466125828,0 49.98285946959106,8.7597368483313,0 49.98316991554748,8.75999434039673,0 49.98323890326572,8.760605884052126,0 49.98381839619305,8.760444951511232,0 49.98431509886027,8.761035037494509,0 49.98506014324478,8.761185241199342,0 49.98577758248639,8.760906291461794,0 49.98654329910248,8.760917020297853,0 49.98666746821594,8.760380578494875,0 49.98661228198287,8.75975830600342,0 49.98697788959725,8.757891488529054,0 49.988012613066005,8.756196332431642,0 49.98793673410131,8.755863738513796,0 49.993292092207646,8.755792570698787,0 49.998285496266995,8.757595015156795,0 49.99980272626717,8.757165861714412,0 50.0003820196365,8.757595015156795,0 50.002423283493556,8.756779623616268,0 50.00512644547626,8.756607962239315,0 50.00725025182523,8.755363417256405,0 50.00942912444818,8.754805517781307,0 50.01091842358343,8.755449247944881,0 50.049182301224214,8.743452323492022,0 50.05913894304469,8.777145528148395,0 50.06668746128062,8.784355305980426,0 50.06800467465507,8.819138192485724,0 50.06770166316004,8.82396616871253,0 50.06807770132477,8.82432798439217,0 50.068325618019315,8.825003901063923,0 50.06891097179635,8.825347223817829,0 50.06917265705641,8.825411596834186,0 50.070136748325304,8.825518885194782,0 50.0701505209173,8.827010193407062,0 50.06959272777753,8.827267685472492,0 50.07065321781843,8.83553961807442,0 50.071210998623734,8.835346499025349,0 50.07140416774087,8.836743216574092,0 50.073936232779715,8.83771648934595,0 50.07602945551526,8.838660626919193,0 50.07900387800023,8.839862256557865,0 50.08056722240694,8.840680069125881,0 50.083100761542376,8.84145254532217,0 50.08334860057205,8.841774410403957,0 50.08492741254222,8.842509335674038,0 50.08513049521381,8.842664903796901,0 50.08607868631057,8.83959953110758,0 50.08691164399132,8.834460418635047,0 50.08779343421183,8.828789005798626,0 50.08878468558929,8.824754963440228,0 50.09024399058544,8.821364651245432,0 50.090525363498216,8.821492078590751,0 50.09095213047077,8.822393300819755,0 50.09100719690007,8.822682979393363,0 50.09640882095173,8.818963018502956,0 50.096604972478865,8.819665757264858,0 50.096993831904285,8.820271936502223,0 50.11217681163167,8.798985301906214,0 50.113938125422486,8.800358592921839,0 50.11521942843101,8.803628713545748,0 50.11964982839633,8.806804449019381,0 50.12096843847371,8.80766614841852,0 50.121986518947494,8.808266963237855,0 50.1228670035181,8.80989774631891,0 50.1232797250855,8.812558497661684,0 50.12289451839999,8.814618434185121,0 50.12292203326604,8.816463793987367,0 50.123197181056725,8.817236270183656,0 50.12322469574879,8.818223323101137,0 50.12641629270504,8.817665423626039,0 50.12669142040987,8.818223323101137,0 50.12928849190947,8.817365016216428,0 50.134212743072176,8.809511508220908,0 50.134377792993135,8.801529254192587,0 50.13646837604697,8.790542926067587,0 50.137513633319706,8.785135592693564,0 50.13723856783036,8.779814090008017,0 50.13839383225836,8.780071582073447,0 50.13932902588707,8.784792269939658,0 50.14054001453705,8.784496040670803,0 50.14114511476699,8.783466072409084,0 50.142630328335684,8.78230735811465,0 50.1535754800216,8.782779426901271,0 50.15550024768244,8.78256485018008,0 50.15583020007308,8.78406688722842,0 50.1584422427989,8.783337326376369,0 50.15885465755254,8.78604099306338,0 50.15951451375825,8.787199707357814,0 50.158827163346295,8.789474220602443,0 50.15899212834644,8.789860458700588,0 50.15888215174293,8.790632934896877,0 50.15987193206685,8.790461273519924,0 50.16113662154801,8.790976257650783,0 50.1614940277288,8.789431305258205,0 50.16363840869707,8.790590019552639,0 50.17122544585152,8.800460548727443,0 50.172627266527776,8.795739860861147,0 50.17573311485688,8.790246696798647,0 50.179855610511744,8.789774628012026,0 50.183812871672245,8.792821617452944,0 50.18774524967272,8.792723002999992,0 50.188514615702445,8.79203635749218,0 50.197196601646944,8.790062251657105,0 50.20631648134646,8.821390452950965,0 50.20840021167392,8.828061857775708,0 50.21032277151685,8.85475520189192,0 50.224217829202246,8.860248365954448,0 50.236736390725085,8.844627180651713,0 50.24628781880627,8.843082228259135,0 50.25144698945728,8.883594313220073,0 50.275917996066944,8.925308027819682,0 50.281403043384294,8.948997297839213,0 50.29609985378827,8.975433149889994,0 50.30081503249643,8.987449446276713,0 50.31320385569571,9.030193129138041,0 50.34043430149288,9.030360868259919,0 50.369033493137515,9.032398305674747,0 50.375274158062865,9.035831533213809,0 50.37538363608576,9.05986412598736,0 50.38764357598806,9.091964803477595,0 50.4163107018737,9.11805733277447,0 50.428560061063166,9.089389882823298,0 50.438401000429685,9.10054787232525,0 50.444607937260805,9.145445894340781,0 50.424270408049146,9.243292879204063,0 50.41674475532919,9.307751726249961,0 50.41783856689898,9.339680742363242,0 50.41499460428282,9.353756975273399,0 50.379321195694146,9.354443620781211,0 50.23504141054232,9.466023515800686,0 50.23020990271532,9.496579240898342,0 50.20978039216624,9.523015092949123,0 50.17999915339515,9.509968828300686,0 50.155118411100375,9.518613909561964,0 50.14576873912996,9.509859179337354,0 50.106861454912746,9.524186609521053,0 50.09915408998494,9.512170313134334,0 50.095850553954655,9.505990503564021,0 50.09761246818392,9.496377466454646,0 50.095850553954655,9.481271265282771,0 50.0910049557353,9.452775476708553,0 50.08439653211338,9.43286275698199,0 50.083955938140406,9.414666651024959,0 50.12601438979774,9.376214502587459,0 50.13085644703369,9.376901148095271,0 50.13195684626589,9.34771871401324,0 50.14097916552506,9.327462671532771,0 50.13371743240557,9.310296533837459,0 50.14185930070402,9.280084131493709,0 50.13899880216461,9.261888025536678,0 50.14911979805772,9.22137594057574,0 50.14273941968956,9.211419580712459,0 50.13767851437947,9.183610437646053,0 50.128655572656974,9.192193506493709,0 50.124033407001285,9.186700342431209,0 50.118750385375044,9.175370691552303,0 50.11786982508587,9.154084680810115,0 50.11346678069959,9.143441675439021,0 50.125574178483916,9.122155664696834,0 50.125574178483916,9.102242944970271,0 50.11698924860077,9.089196680321834,0 50.11632880560831,9.078210352196834,0 50.11831010725494,9.071343897118709,0 50.11632880560831,9.052117822899959,0 50.112586123233655,9.029801843896053,0 50.11170544957124,9.020188806786678,0 50.09320756112447,8.998216150536678,0 50.07949469607378,8.99941778017535,0 50.078503252565355,8.998301981225154,0 50.069799701897765,8.999503610863826,0 50.069083516630094,8.99864530397906,0 50.068808057910076,8.99641370607867,0 50.065502429864196,8.99040555788531,0 50.056649591833974,8.982507682601181,0 50.05157958417609,8.976842857161728,0 50.04573738943162,8.9780444868004,0 50.041878946410264,8.987142539778915,0 50.0454066778966,9.006711936751572,0 50.045627152506455,9.012720084944931,0 50.04441452962,9.01872823313829,0 50.04287114709482,9.026109672347275,0 50.038902221309996,9.031431175032822,0 50.03603557084246,9.032289481917587,0 50.03239688338311,9.031774497786728,0 50.02699347514931,9.030401206771103,0 50.021037994565475,9.030916190901962,0 50.015853919721614,9.033834434310165,0 50.0107796027006,9.038297630110947,0 50.007580301366,9.042932487288681,0 50.00327745688426,9.053060508528915,0 50.00007765616361,9.058210349837509,0 49.99389812790324,9.063531852523056,0 49.98970442426975,9.052030540267197,0 49.98683483738531,9.046022392073837,0 49.98871112510759,9.025938010970322,0 49.98683483738531,8.960363364974228,0 49.969591302596605,8.908376108388524,0 49.94639928497898,8.891553293447117,0 49.94585146164708,8.891355032112727,0 49.95904181908018,8.850935273809228,0");
    var hr_coord_15350557 = makeNimstrLit("8.74344999062572,50.04918999904961,0 8.751160000623477,50.0240599912103,0 8.754709994364463,50.01274999536513,0 8.757490069155791,50.00470163525198,0 8.762733428456755,50.00328437886608,0 8.764625619546589,50.00285518138227,0 8.770820082372893,50.00139911723744,0 8.772673791350965,50.00094266817716,0 8.77914111075552,49.99943225272401,0 8.799229992240086,49.99467000542582,0 8.806542356164457,49.99340340620989,0 8.809790356707138,49.99206374565822,0 8.826786125387034,49.98576635583486,0 8.828778769472731,49.98395187720181,0 8.831507689809753,49.98097186169272,0 8.830959149889964,49.97966245881608,0 8.829928960125969,49.9778595543125,0 8.830465197667758,49.9768960693446,0 8.830997048231009,49.97595153004782,0 8.83394675737425,49.97397788936575,0 8.836460977629683,49.97217362668664,0 8.83910802473485,49.96908500881526,0 8.840122212590229,49.96799437118023,0 8.841363208739749,49.9668289258026,0 8.842263170839054,49.96603842183582,0 8.843115976927399,49.96501359037988,0 8.846351833332184,49.9627537294549,0 8.849460013049532,49.95986999442856,0 8.850210000098501,49.95926998619805,0 8.850310012566743,49.95926999267505,0 8.865430008710506,49.95390999382382,0 8.891260000848778,49.94599000213314,0 8.908000004981322,49.96970998840088,0 8.960089986326672,49.98685999774121,0 9.028550004173386,49.98896999905399,0 9.051090005623092,49.98967000446294,0 9.063509599805697,49.99349370576994,0 9.058420003685276,50.00014000125238,0 9.053349983587822,50.00350000123728,0 9.043370001095513,50.00774999264858,0 9.039590003958708,50.01043999620001,0 9.037680002386232,50.0117099996073,0 9.035770000347792,50.01386000058577,0 9.035669991374673,50.01396999599814,0 9.033520003630585,50.01612999279517,0 9.03276999394412,50.01722999549925,0 9.031890007343058,50.01854999140686,0 9.031080010354554,50.02017000106182,0 9.030590017083911,50.02186000123651,0 9.030160003507783,50.02427999548287,0 9.030019994132037,50.02558000112721,0 9.03012998938997,50.02655999787962,0 9.030250000259972,50.02768999624666,0 9.03161000235999,50.03279999301565,0 9.032170004807355,50.0358999942769,0 9.032050012345229,50.03739999588439,0 9.031490007969513,50.03882000226924,0 9.030510014244126,50.04000000228209,0 9.029080001550227,50.04103999783368,0 9.029060008563725,50.04106000232493,0 9.028230008798136,50.04156999577097,0 9.026240009262718,50.04279999711334,0 9.024160016072742,50.04365000084064,0 9.023260013005588,50.04386000537015,0 9.019740018159242,50.04436999886058,0 9.017760016210493,50.04465999781608,0 9.013460007365307,50.04553999270155,0 9.011000004708681,50.04575999839583,0 9.00992999888183,50.04561998877342,0 9.008480008624115,50.04557998927629,0 9.005680013424682,50.04550000056366,0 8.986750005661659,50.04149000275402,0 8.978420013141989,50.04530999078934,0 8.976519982950132,50.0514200003693,0 8.982709988738773,50.05690999839843,0 8.986820008613575,50.06226000595279,0 8.987800012679832,50.06321000762544,0 8.989760009887313,50.06513000580236,0 8.990918897321578,50.0669106073983,0 8.9955775301496,50.06892022836311,0 8.998568988963262,50.06893433107653,0 8.999404770882135,50.06967750682338,0 8.99907863971808,50.070980702649,0 8.998540008233778,50.07845000669163,0 8.999480727122569,50.07942879191786,0 8.998936147196799,50.08570047236539,0 8.997979981825159,50.09309999923527,0 9.009470009726822,50.10552999340482,0 9.014060011409995,50.1093099951841,0 9.018390009198136,50.11148999968705,0 9.022280002796611,50.11211998982098,0 9.030180002730933,50.11276999957308,0 9.036709983650752,50.11439000225139,0 9.03690999604585,50.11440999933917,0 9.03949998805237,50.11470999733926,0 9.041409993836245,50.11494000056713,0 9.043569987178085,50.11518999631258,0 9.047210001617215,50.1158499945509,0 9.05294999694393,50.11569999345475,0 9.055779984887241,50.11657998906307,0 9.062110001201511,50.11675000135271,0 9.065399990762362,50.11700000561905,0 9.071007549127517,50.11922371673292,0 9.076630005563471,50.1161700007584,0 9.077190003068765,50.115860002529,0 9.090149996865359,50.11705999751791,0 9.097210008411061,50.12491999822693,0 9.097229998645521,50.12493000896303,0 9.097450000598039,50.12500001156322,0 9.100480005609697,50.12522999907779,0 9.101720017827175,50.12503999964554,0 9.104050013666759,50.12524999543405,0 9.106250000414615,50.1255599977141,0 9.106320013833074,50.12556999995883,0 9.11103000773252,50.12645000491829,0 9.112480002104718,50.12650000158009,0 9.118190018941625,50.12683999405951,0 9.11824001589531,50.12684999758118,0 9.119370021092625,50.12667000066124,0 9.120230000806123,50.12640000226687,0 9.121240007930481,50.12608999931724,0 9.122669997795143,50.1251799912294,0 9.125470008557192,50.12341000006478,0 9.129070017631035,50.12185001116103,0 9.134449996804847,50.11918999923478,0 9.134810008978569,50.11920999602372,0 9.134890001642818,50.11917000907523,0 9.138790008249355,50.11738000700088,0 9.143799995794254,50.11436000115628,0 9.153480013609004,50.1177800012857,0 9.174246170565004,50.11909431140469,0 9.178573419936008,50.12093255348469,0 9.187279993149794,50.12424999394975,0 9.190869996641968,50.12840999555607,0 9.190140006470225,50.12852999126118,0 9.189239992099489,50.12886999244492,0 9.18859001078415,50.13008000182714,0 9.188529991233642,50.13068000290921,0 9.188270001636816,50.13122999393559,0 9.187689999246999,50.13169000225765,0 9.186230008527531,50.13220000137167,0 9.184630011698792,50.13358999951587,0 9.184889997736651,50.13418000049787,0 9.184539995171448,50.13461999983619,0 9.183930004443509,50.13530000248941,0 9.183950002803973,50.135519998149,0 9.183550012978392,50.13613999783406,0 9.183569996231322,50.13690999406499,0 9.18340000738119,50.13743999921365,0 9.183380014260379,50.13787000106181,0 9.190900001716518,50.139159993859,0 9.193700011750751,50.13930999759451,0 9.19464001127551,50.13981000038044,0 9.195470000586393,50.14028998889953,0 9.196120007766066,50.14010998828039,0 9.196500004917223,50.14001998961674,0 9.197040001756861,50.14030999242293,0 9.199190010294648,50.14073999922731,0 9.200440003999781,50.14084998669727,0 9.201030013515277,50.14057999207999,0 9.203099982949214,50.14095000662204,0 9.205299986371029,50.14180000860304,0 9.206359985346644,50.142070008102,0 9.207580000543322,50.14207999782826,0 9.209859987405412,50.14242999853374,0 9.210280003353484,50.1423899976447,0 9.210799991009644,50.14220999766564,0 9.21077998816282,50.1435000057295,0 9.211479992867652,50.14477000460019,0 9.214099996581536,50.14445000468506,0 9.218959999344854,50.14661000455769,0 9.221479995862085,50.14939999389495,0 9.225630001631478,50.14855000094843,0 9.23032000616189,50.14765999014259,0 9.232970002625747,50.14675999789494,0 9.233769992622126,50.14662999691726,0 9.235819988502438,50.14626998818617,0 9.240770008871321,50.14369999990418,0 9.250599997697448,50.14088999946022,0 9.253009998704444,50.13936000061953,0 9.257409988922282,50.13877999779094,0 9.258539987369192,50.13882999185971,0 9.261029985191303,50.13894999352718,0 9.26667000168456,50.13956998800712,0 9.270219998473655,50.14184999133448,0 9.271399995864714,50.14201999982645,0 9.276349996686779,50.14272000476213,0 9.281169993334959,50.14154000700376,0 9.281790004285499,50.14151999702619,0 9.28505000417664,50.14177000501881,0 9.294040000079619,50.13933999639883,0 9.298069993519123,50.13708999386204,0 9.304220003766982,50.13527001045085,0 9.307460002912588,50.13401000172517,0 9.3099899963248,50.13394000197258,0 9.313210010638157,50.13483999891268,0 9.317820007007097,50.13657000315733,0 9.32087000656426,50.13792000208673,0 9.327880001083775,50.14102000396739,0 9.332359997806428,50.13920999562789,0 9.335839993928891,50.13698998995007,0 9.336390008811645,50.13671999110127,0 9.339360000403303,50.13273000018819,0 9.341829993133189,50.1314900069315,0 9.349580011888042,50.13060000490764,0 9.357900000002719,50.1309800011009,0 9.364500003588615,50.1308599976779,0 9.373790012600809,50.13085001035299,0 9.374940014378062,50.13078000272372,0 9.376428136780461,50.13060459037479,0 9.375980001360301,50.12583000875451,0 9.380379996288745,50.12133000326065,0 9.382299998223088,50.11936999839725,0 9.384039990002806,50.11687999723922,0 9.386960003003646,50.1104799943284,0 9.392690004434337,50.10208999192354,0 9.39389999043634,50.09908999048587,0 9.39441999471242,50.09769998717655,0 9.395280005887983,50.09654000569314,0 9.398049991407143,50.09346000849757,0 9.399579989575344,50.09215000204925,0 9.401979985879303,50.08986000850655,0 9.404899991283124,50.08774999576386,0 9.408080014793335,50.08628000072305,0 9.410360008182412,50.08474000191088,0 9.412109999917282,50.08400999347561,0 9.414540018844249,50.08372999722369,0 9.416490008385686,50.08366999838898,0 9.419320007524787,50.08447000100686,0 9.421189997530622,50.08477000057801,0 9.421729983690359,50.0848199989533,0 9.422609992020972,50.0848999888351,0 9.424210000439418,50.08487999332674,0 9.426209991743331,50.08466000872539,0 9.426650001161059,50.08445000438933,0 9.427099982830001,50.08406000313204,0 9.427139990696315,50.08406000087415,0 9.427652721408091,50.08399998652941,0 9.433353179705726,50.08402470953537,0 9.435354143826626,50.08505389047933,0 9.436088619491672,50.08522879361796,0 9.438430526576967,50.08697187563428,0 9.440104382080714,50.08699613917442,0 9.445369991346254,50.08990999762638,0 9.447630008726817,50.08999999740072,0 9.450919994621692,50.09031000114513,0 9.452070007349786,50.0907899928403,0 9.454410007723135,50.09108999360934,0 9.460950000938215,50.09060999515631,0 9.462300008199286,50.0910400032701,0 9.463400013428359,50.09106000139991,0 9.464200003484436,50.09124000726924,0 9.465530012619313,50.09153000694008,0 9.468800008351925,50.09136999634158,0 9.470470017914517,50.09143000256835,0 9.472329999587991,50.09161000390467,0 9.473620019051696,50.09215000133324,0 9.474920003056653,50.09292999912699,0 9.476870017014669,50.09377000009614,0 9.478919993936698,50.09430999575569,0 9.481419984146658,50.0947799948108,0 9.483559984403359,50.09436999910113,0 9.485509981915525,50.09412999558609,0 9.48570999585527,50.09412000396971,0 9.487359987494594,50.09400999892856,0 9.490429987404328,50.09412999491645,0 9.493209983692267,50.09459999267533,0 9.495159986345893,50.09531999217066,0 9.496829992324216,50.09657999894574,0 9.498319988002368,50.09723999301944,0 9.49989998994757,50.09718000287389,0 9.501569988519432,50.09664000069188,0 9.502680008048856,50.09603999797577,0 9.504629999438921,50.09574000956214,0 9.506760006872188,50.09622000084823,0 9.507140003812562,50.09742000406875,0 9.507229996886643,50.09819000714014,0 9.50669001130621,50.09907000222062,0 9.507150006893196,50.09931999902311,0 9.50923999463094,50.09956000551333,0 9.512149998788429,50.09941000120356,0 9.512820008669731,50.0990800014653,0 9.513100009864747,50.09966999606637,0 9.518980005320945,50.10612000219624,0 9.523749987770032,50.10609999798064,0 9.509789996972424,50.14568999412518,0 9.510159999038692,50.17993000361417,0 9.523900010995279,50.20862999333181,0 9.497610010511844,50.23025999464183,0 9.465759992135864,50.23500999995167,0 9.427309998664841,50.28948999496187,0 9.39269000551494,50.33608999941583,0 9.354189991318192,50.3790699957637,0 9.352780014398681,50.43896001016936,0 9.340660001490294,50.4547299998002,0 9.312470000603268,50.45978998838441,0 9.299499989859983,50.45929999898711,0 9.289360011907432,50.45382000673616,0 9.262010012800003,50.40678999774384,0 9.261579990204883,50.37911000208434,0 9.163230003564165,50.3586100105654,0 9.131989998719183,50.34574999621018,0 9.062800000324119,50.32285000000135,0 9.054520002404079,50.31968000467632,0 9.043719996102452,50.32165000058219,0 9.029761680801087,50.32841918451295,0 9.031495109187416,50.31272183455483,0 8.995839452582921,50.30250677011594,0 8.987631336027818,50.30006956026648,0 8.975659492935346,50.29547621167906,0 8.958677331367527,50.28630458701393,0 8.94929415829554,50.28125262914848,0 8.925608601416379,50.27595619488345,0 8.912707196248872,50.26838770369456,0 8.900321281931532,50.26109642163877,0 8.883946027953995,50.2514976812132,0 8.857519269942278,50.24799938088881,0 8.843243933535447,50.24615324039392,0 8.843337919829239,50.24519622029486,0 8.844352709690199,50.23641778130721,0 8.848844132593994,50.23205190395576,0 8.859845616898108,50.22335260208263,0 8.858916319673716,50.22092275483271,0 8.854913957622637,50.21029795607451,0 8.828012506624319,50.20845601508016,0 8.792170003634453,50.19689999140842,0 8.792079997664727,50.19360999114326,0 8.792090007857588,50.19360999589294,0 8.792080005707826,50.1933399969401,0 8.792139995449546,50.18931998969914,0 8.792109992014069,50.18893999697589,0 8.792080000426376,50.18849999434099,0 8.792679986357536,50.18761999891223,0 8.792780002183326,50.18624999797653,0 8.792809992943038,50.1838499994514,0 8.78973001669163,50.17977998885446,0 8.789990009297167,50.17618999887759,0 8.790029994197257,50.17608999350487,0 8.790400013363707,50.1756399975125,0 8.795660002988884,50.17271001146669,0 8.800430009638776,50.17120000991109,0 8.800030003318794,50.17109000869478,0 8.80016999786298,50.17019999937831,0 8.800160007579409,50.16933000575472,0 8.798210009160762,50.16943000004811,0 8.798119992086578,50.16853000305719,0 8.797839987310598,50.16741000349072,0 8.795570001629894,50.16727000126137,0 8.794420002285929,50.16686998641285,0 8.794869986905674,50.16460000764227,0 8.794839990093175,50.16445000317964,0 8.795069987661732,50.1639400006493,0 8.794959989515347,50.16379001174276,0 8.794649984336918,50.1638499933831,0 8.793969990776221,50.1630399881526,0 8.791709999964247,50.16336999710949,0 8.790470002191894,50.16343999740508,0 8.790340002022822,50.16295999319533,0 8.789559999991919,50.16145999765807,0 8.790999987988663,50.16111999166834,0 8.790610009406777,50.15989999880812,0 8.790650015217244,50.1588999906634,0 8.789859999743616,50.15894999130114,0 8.789490009437273,50.1588699891094,0 8.787180014898484,50.1593899986436,0 8.786940002233044,50.15923998964287,0 8.786050003904881,50.15883999909401,0 8.785669999219367,50.15878999189965,0 8.785020015562498,50.15871999044146,0 8.783420004936072,50.15842000281186,0 8.783420004789116,50.15770999268128,0 8.783470016746801,50.15722999454914,0 8.783580009619461,50.15699999220811,0 8.784100012663544,50.15583999017743,0 8.782219996826949,50.15551999603872,0 8.782360012243217,50.15504999142234,0 8.782400002741433,50.15412000308445,0 8.782440000873432,50.1538799934948,0 8.782640002335953,50.15348999380655,0 8.782690004419679,50.15288999409114,0 8.782599997613589,50.15168999527978,0 8.782499994394218,50.15002000083744,0 8.782429997799444,50.14841999909195,0 8.782339993684557,50.14642999456324,0 8.782259999824177,50.14484999042134,0 8.782299991382095,50.14447000212288,0 8.782329990151951,50.14413999428914,0 8.782350006299202,50.14389999847396,0 8.782369988407282,50.14374000265145,0 8.78239000173469,50.14349999358076,0 8.782439996314656,50.14299999406526,0 8.782439988694478,50.1429199972104,0 8.782470000856153,50.14267999368212,0 8.782480003228939,50.14251999070935,0 8.782579988275536,50.14241999306769,0 8.783599991220438,50.14111999489931,0 8.784448782893042,50.1405347806952,0 8.784710985537078,50.14005921419489,0 8.784836043163592,50.13976715250182,0 8.784909988556111,50.13939000291317,0 8.784920000629107,50.13928999326227,0 8.784719982911794,50.13919999095377,0 8.77993000857648,50.13822000388137,0 8.779900001379451,50.13804999861398,0 8.779870002850776,50.13781999822846,0 8.779780007883684,50.13723999143221,0 8.781680019517596,50.13739999790258,0 8.785470012109293,50.13728999853527,0 8.790470012031696,50.13658999710204,0 8.795220001648541,50.13552000122132,0 8.796740008487991,50.13528000323189,0 8.79849000489105,50.13476000552564,0 8.801570014121655,50.13428000627525,0 8.809370015405136,50.13413999475548,0 8.806000008358936,50.12600000470178,0 8.800339551601194,50.11398120331311,0 8.798730684364719,50.11222326889193,0 8.803275711144671,50.10682728967874,0 8.806256200740775,50.10212970751106,0 8.809628959422538,50.09681686079544,0 8.812426567410549,50.0923736430835,0 8.814529068369041,50.08870301933311,0 8.815564740819466,50.08674190292712,0 8.816983190135087,50.08430003950284,0 8.816736771584527,50.08396773922301,0 8.819257293064814,50.08161630263398,0 8.825500005361317,50.07011000106249,0 8.825430011347251,50.06916000981824,0 8.825340007617122,50.06887000547547,0 8.825010007651045,50.06831000400231,0 8.824340007935508,50.06807000324666,0 8.824190003312365,50.0678600107172,0 8.823980000479738,50.06767000416784,0 8.823560009647329,50.06769000265334,0 8.819140000891526,50.06794999086822,0 8.784360013267232,50.06681998757962,0 8.778350008752462,50.05852000117123,0 8.769430002590275,50.05571000525481,0 8.74344999062572,50.04918999904961,0");
    show_border_15350380(hr_coord_15350557, makeNimstrLit("rgba(0, 0, 255, 1)"), false);
    show_border_15350380(hr_coord_real_15350556, makeNimstrLit("rgba(255, 0, 0, 1)"), true);
    show_border_district_15350558(makeNimstrLit("63110 Rodgau Rollwald,63322 R\xC3\xB6dermark Waldacker,63128 Dietzenbach ,63150 Heusenstamm ,63179 Obertshausen ,63073 Offenbach am Main Bieber,63075 Offenbach am Main Waldheim,63075 Offenbach am Main Biebernsee,63477 Maintal Bischofsheim,61138 Niederdorfelden ,61137 Sch\xC3\xB6neck Oberdorfelden,61137 Sch\xC3\xB6neck Kilianst\xC3\xA4dten,61130 Nidderau Heldenbergen,61130 Nidderau Eichen,63674 Altenstadt H\xC3\xB6chst,63674 Altenstadt Oberau,63674 Altenstadt Waldsiedlung,63674 Altenstadt Lindheim,63674 Altenstadt Enzheim,63654 B\xC3\xBCdingen D\xC3\xBCdelsheim,63654 B\xC3\xBCdingen Rohrbach,63654 B\xC3\xBCdingen Aulendiebach,63654 B\xC3\xBCdingen Dudenrod,63699 Kefenrod Bindsachsen,63699 Kefenrod ,63699 Kefenrod Burgbracht,63633 Birstein B\xC3\xB6ssges\xC3\xA4\xC3\x9F,63633 Birstein Illnhausen,63633 Birstein Kirchbracht,63633 Birstein V\xC3\xB6lzberg,63633 Birstein Lichenroth,63633 Birstein Wettges,63628 Bad Soden-Salm\xC3\xBCnster Sch\xC3\xB6nhof,63628 Bad Soden-Salm\xC3\xBCnster Kerbersdorf,63628 Bad Soden-Salm\xC3\xBCnster Ahl,63628 Bad Soden-Salm\xC3\xBCnster Alsberg,63637 Jossgrund Burgjo\xC3\x9F,63637 Jossgrund Oberndorf,63637 Jossgrund Pfaffenhausen,63639 Fl\xC3\xB6rsbachtal Lohrhaupten,63639 Fl\xC3\xB6rsbachtal Kempfenbrunn,63639 Fl\xC3\xB6rsbachtal Mosborn,63639 Fl\xC3\xB6rsbachtal Fl\xC3\xB6rsbach,63599 Biebergem\xC3\xBCnd Ro\xC3\x9Fbach,63599 Biebergem\xC3\xBCnd L\xC3\xBCtzel,63589 Linsengericht Waldrode,63579 Freigericht Horbach,63579 Freigericht Neuses,63579 Freigericht Somborn,63538 Gro\xC3\x9Fkrotzenburg ,63512 Hainburg Klein-Krotzenburg,63500 Seligenstadt ,63533 Mainhausen Mainflingen,63533 Mainhausen Zellhausen,63110 Rodgau Nieder-Roden,63517 Rodenbach Oberrodenbach,63599 Biebergem\xC3\xBCnd Bieber"), makeNimstrLit("rgba(0, 0, 255, 1)"), makeNimstrLit("rgba(0, 0, 255, 0.1)"));
    show_border_district_15350558(makeNimstrLit("63688 Gedern Ober-Seemen, Hirzenhain, Merkenfritz, Eckartsborn, Bobenhausen, Wippenbach, Selters (Ortenberg), Bleichenbach, 63654 Rohrbach, Enzheim, Lindheim, Oberau, 63674 H\xC3\xB6chst, Eichen, Nidderau Heldenbergen, Windecken, Sch\xC3\xB6neck Kilianst\xC3\xA4dten, Niederdorfelden, Wettges, Sch\xC3\xB6nhof, Alsberg, Burgioss, Jossgrund, Lohrhaupten, Kempfenbrunn, Mosborn, L\xC3\xBCtzel, Waldrode, Horbach, Neuses, Rodenbach, Gro\xC3\x9Fkrotzenburg, Froschhausen, Mainhausen, Zellhausen, R\xC3\xB6dermark, Waldacker, Dietzenbach, Heusenstamm, Obertshausen, Waldheim, M\xC3\xBChlheim, 63477 Bischofsheim, Niederdorfelden"), makeNimstrLit("rgba(255, 0, 0, 1)"), makeNimstrLit("rgba(255, 0, 0, 0.1)"));

  
}
function HEX3Aanonymous_16435246(e_16435249) {
    map.getViewPort().resize();

  
}
map.addEventListener("tap", load_links_14101049, false);
geo_area_15350554();
window.addEventListener("resize", HEX3Aanonymous_16435246, false);
function must_rehash_15310601(t_15310604) {
  var result_15310605 = false;

    if (!((t_15310604.counter < (t_15310604.data != null ? t_15310604.data.length : 0)))) {
    failed_assert_impl_102680(makeNimstrLit("hashcommon.nim(33, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_15310605 = ((mulInt((t_15310604.data != null ? t_15310604.data.length : 0), 2) < mulInt(t_15310604.counter, 3)) || (subInt((t_15310604.data != null ? t_15310604.data.length : 0), t_15310604.counter) < 4));

  return result_15310605;

}
function raw_insert_15336122(t_15336128, data_15336131, data_15336131_Idx, key_15336132, val_15336133, hc_15336134, h_15336135) {
    data_15336131[data_15336131_Idx][chckIndx(h_15336135, 0, (data_15336131[data_15336131_Idx] != null ? data_15336131[data_15336131_Idx].length : 0)+0-1)-0].Field1 = key_15336132;
    data_15336131[data_15336131_Idx][chckIndx(h_15336135, 0, (data_15336131[data_15336131_Idx] != null ? data_15336131[data_15336131_Idx].length : 0)+0-1)-0].Field2 = val_15336133;
    data_15336131[data_15336131_Idx][chckIndx(h_15336135, 0, (data_15336131[data_15336131_Idx] != null ? data_15336131[data_15336131_Idx].length : 0)+0-1)-0].Field0 = hc_15336134;

  
}
function enlarge_15335161(t_15335167) {
    var n_15335175 = null;
    n_15335175 = new Array(chckRange(mulInt((t_15335167.data != null ? t_15335167.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_15335167.data != null ? t_15335167.data.length : 0), 2), 0, 2147483647);++i) {n_15335175[i]={Field0: 0, Field1: null, Field2: null};}    var Tmp1 = t_15335167.data; t_15335167.data = n_15335175; n_15335175 = Tmp1;    L2: do {
      var i_15335334 = 0;
      var colontmp__16465550 = 0;
      colontmp__16465550 = (n_15335175 != null ? (n_15335175.length-1) : -1);
      var res_16465551 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_16465551 <= colontmp__16465550)) break L4;
            i_15335334 = res_16465551;
            var eh_15335490 = n_15335175[chckIndx(i_15335334, 0, (n_15335175 != null ? n_15335175.length : 0)+0-1)-0].Field0;
            if (is_filled_10612018(eh_15335490)) {
            var j_15335497 = (eh_15335490 & (t_15335167.data != null ? (t_15335167.data.length-1) : -1));
            L5: do {
                L6: while (true) {
                if (!is_filled_10612018(t_15335167.data[chckIndx(j_15335497, 0, (t_15335167.data != null ? t_15335167.data.length : 0)+0-1)-0].Field0)) break L6;
                  j_15335497 = next_try_10615014(j_15335497, (t_15335167.data != null ? (t_15335167.data.length-1) : -1));
                }
            } while(false);
            raw_insert_15336122(t_15335167, t_15335167, "data", n_15335175[chckIndx(i_15335334, 0, (n_15335175 != null ? n_15335175.length : 0)+0-1)-0].Field1, n_15335175[chckIndx(i_15335334, 0, (n_15335175 != null ? n_15335175.length : 0)+0-1)-0].Field2, eh_15335490, j_15335497);
            }
            
            res_16465551 = addInt(res_16465551, 1);
          }
      } while(false);
    } while(false);

  
}
function raw_get_known_hc_15336628(t_15336632, key_15336633, hc_15336634) {
  var result_15336635 = 0;

  BeforeRet: do {
    if (((t_15336632.data != null ? t_15336632.data.length : 0) == 0)) {
    result_15336635 = -1;
    break BeforeRet;
    }
    
    var h_15340138 = (hc_15336634 & (t_15336632.data != null ? (t_15336632.data.length-1) : -1));
    L1: do {
        L2: while (true) {
        if (!is_filled_10612018(t_15336632.data[chckIndx(h_15340138, 0, (t_15336632.data != null ? t_15336632.data.length : 0)+0-1)-0].Field0)) break L2;
          if (((t_15336632.data[chckIndx(h_15340138, 0, (t_15336632.data != null ? t_15336632.data.length : 0)+0-1)-0].Field0 == hc_15336634) && (t_15336632.data[chckIndx(h_15340138, 0, (t_15336632.data != null ? t_15336632.data.length : 0)+0-1)-0].Field1 == key_15336633))) {
          result_15336635 = h_15340138;
          break BeforeRet;
          }
          
          h_15340138 = next_try_10615014(h_15340138, (t_15336632.data != null ? (t_15336632.data.length-1) : -1));
        }
    } while(false);
    result_15336635 = subInt(-1, h_15340138);
  } while (false);

  return result_15336635;

}
function HEX5BHEX5DHEX3D_15260975(t_15260981, key_15260982, val_15260983) {
    if (((t_15260981.data != null ? t_15260981.data.length : 0) == 0)) {
    if (!(is_power_of_two_8715029(64))) {
    failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
    }
    
    t_15260981.counter = 0;
    t_15260981.data = new Array(64); for (var i=0;i<64;++i) {t_15260981.data[i]={Field0: 0, Field1: null, Field2: null};}    }
    
    var hc_15285601 = [0];
    var index_15285610 = raw_get_14130379(t_15260981, key_15260982, hc_15285601, 0);
    if ((0 <= index_15285610)) {
    t_15260981.data[chckIndx(index_15285610, 0, (t_15260981.data != null ? t_15260981.data.length : 0)+0-1)-0].Field2 = val_15260983;
    }
    else {
      if (((t_15260981.data != null ? t_15260981.data.length : 0) == 0)) {
      if (!(is_power_of_two_8715029(64))) {
      failed_assert_impl_102680(makeNimstrLit("tableimpl.nim(127, 12) `isPowerOfTwo(defaultInitialSize)` "));
      }
      
      t_15260981.counter = 0;
      t_15260981.data = new Array(64); for (var i=0;i<64;++i) {t_15260981.data[i]={Field0: 0, Field1: null, Field2: null};}      }
      
      if (must_rehash_15310601(t_15260981)) {
      enlarge_15335161(t_15260981);
      index_15285610 = raw_get_known_hc_15336628(t_15260981, key_15260982, hc_15285601[0]);
      }
      
      index_15285610 = subInt(-1, index_15285610);
      raw_insert_15336122(t_15260981, t_15260981, "data", key_15260982, val_15260983, hc_15285601[0], index_15285610);
      t_15260981.counter = addInt(t_15260981.counter, 1);
    }
    

  
}
function display_sector_14640263(sect_name_14640265, show_14640266) {
    var Tmp1;
    var Tmp2;
    var Tmp3;
    var Tmp4;
                    var Tmp14;
    var Tmp15;

  BeforeRet: do {
    var sector_15260531 = (Tmp1 = HEX5BHEX5D_14260842(all_sectors_13800629[0], sect_name_14640265), Tmp1)[0][Tmp1[1]];
    if (!(show_14640266)) {
    main_sector_group_15085007[0].removeObject((Tmp2 = HEX5BHEX5D_14130367(sector_grp_13840629[0], sector_15260531), Tmp2)[0][Tmp2[1]]);
    (Tmp3 = HEX5BHEX5D_14130367(sector_grp_13840629[0], sector_15260531), Tmp3)[0][Tmp3[1]].removeAll();
    sector_15260531.shownOnMap = false;
    break BeforeRet;
    }
    
    HEX5BHEX5DHEX3D_15260975(sector_grp_13840629[0], sector_15260531, function(){return new H.map.Group()}());
    (Tmp4 = HEX5BHEX5D_14130367(sector_grp_13840629[0], sector_15260531), Tmp4)[0][Tmp4[1]].setZIndex(-99);
    sector_15260531.shownOnMap = true;
    L5: do {
      var n_15340846 = null;
      var links_15340847 = null;
      var l_16465544 = len_14465548(sector_15260531.streets);
      if ((0 < sector_15260531.streets.counter)) {
      var h_16465545 = sector_15260531.streets.first;
      L6: do {
          L7: while (true) {
          if (!(0 <= h_16465545)) break L7;
            var nxt_16465547 = sector_15260531.streets.data[chckIndx(h_16465545, 0, (sector_15260531.streets.data != null ? sector_15260531.streets.data.length : 0)+0-1)-0].Field1;
            if (is_filled_10612018(sector_15260531.streets.data[chckIndx(h_16465545, 0, (sector_15260531.streets.data != null ? sector_15260531.streets.data.length : 0)+0-1)-0].Field0)) {
            n_15340846 = sector_15260531.streets.data[chckIndx(h_16465545, 0, (sector_15260531.streets.data != null ? sector_15260531.streets.data.length : 0)+0-1)-0].Field2;
            links_15340847 = sector_15260531.streets.data[chckIndx(h_16465545, 0, (sector_15260531.streets.data != null ? sector_15260531.streets.data.length : 0)+0-1)-0].Field3;
            L8: do {
              var link_15340854 = null;
              var i_16465541 = 0;
              var l_16465542 = (links_15340847 != null ? links_15340847.length : 0);
              L9: do {
                  L10: while (true) {
                  if (!(i_16465541 < l_16465542)) break L10;
                    link_15340854 = links_15340847[chckIndx(i_16465541, 0, (links_15340847 != null ? links_15340847.length : 0)+0-1)-0];
                    var ln_str_15340855 = function(){return new H.geo.LineString();}();
                    L11: do {
                      var c_15340862 = null;
                      var i_16465536 = 0;
                      var l_16465537 = (link_15340854.geometry != null ? link_15340854.geometry.length : 0);
                      L12: do {
                          L13: while (true) {
                          if (!(i_16465536 < l_16465537)) break L13;
                            c_15340862 = link_15340854.geometry[chckIndx(i_16465536, 0, (link_15340854.geometry != null ? link_15340854.geometry.length : 0)+0-1)-0];
                            ln_str_15340855.pushLatLngAlt(c_15340862.lat, c_15340862.lng, 1.0000000000000000e+000);
                            i_16465536 = addInt(i_16465536, 1);
                            if (!(((link_15340854.geometry != null ? link_15340854.geometry.length : 0) == l_16465537))) {
                            failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                            }
                            
                          }
                      } while(false);
                    } while(false);
                    var p_opt_15340865 = {style: {strokeColor: "rgba(255, 0, 0, 0.2)", fillColor: "rgba(255, 0, 0, 0.4)", lineWidth: 10, m_type: NTI10986076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, zIndex: -99, m_type: NTI10986081};
                    var pl_15340866 = function(ls, options){return new H.map.Polyline(ls, options)}(ln_str_15340855, p_opt_15340865);
                    (Tmp14 = HEX5BHEX5D_14130367(sector_grp_13840629[0], sector_15260531), Tmp14)[0][Tmp14[1]].addObject(pl_15340866);
                    i_16465541 = addInt(i_16465541, 1);
                    if (!(((links_15340847 != null ? links_15340847.length : 0) == l_16465542))) {
                    failed_assert_impl_102680(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while(false);
            } while(false);
            if (!((len_14465548(sector_15260531.streets) == l_16465544))) {
            failed_assert_impl_102680(makeNimstrLit("tables.nim(1675, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_16465545 = nxt_16465547;
          }
      } while(false);
      }
      
    } while(false);
    main_sector_group_15085007[0].addObject((Tmp15 = HEX5BHEX5D_14130367(sector_grp_13840629[0], sector_15260531), Tmp15)[0][Tmp15[1]]);
  } while (false);

  
}
function sys_fatal_235018(message_235022) {
    raiseException({message: nimCopy(null, message_235022, NTI112), m_type: NTI6277, parent: null, name: null, trace: null, up: null}, "NilAccessError");

  
}
function chckNilDisp(p_235016, p_235016_Idx) {
    if ((p_235016 == null && p_235016_Idx == 0)) {
    sys_fatal_235018(makeNimstrLit("cannot dispatch; dispatcher is nil"));
    }
    

  
}
function nsuToLowerAsciiChar(c_8790023) {
  var result_8790024 = 0;

    if ((ConstSet19[c_8790023] != undefined)) {
    result_8790024 = chckRange(addInt(c_8790023, 32), 0, 255);
    }
    else {
      result_8790024 = c_8790023;
    }
    

  return result_8790024;

}
function ntgetDateStr(dt_9985548) {
  var result_9985549 = null;

    result_9985549 = nimCopy(null, (cstrToNimstr((dt_9985548.year)+"") || []).concat([45],nsuIntToStr(dt_9985548.month, 2) || [],[45],nsuIntToStr(dt_9985548.monthday, 2) || []), NTI112);

  return result_9985549;

}
function ntgetClockStr(dt_9985569) {
  var result_9985570 = null;

    result_9985570 = nimCopy(null, (nsuIntToStr(dt_9985569.hour, 2) || []).concat([58],nsuIntToStr(dt_9985569.minute, 2) || [],[58],nsuIntToStr(dt_9985569.second, 2) || []), NTI112);

  return result_9985570;

}
function substitute_log_10512462(frmt_10512464, level_10512465, args_10512467) {
  var result_10512468 = null;

    var msg_len_10512470 = 0;
    L1: do {
      var arg_10512476 = null;
      var i_16465560 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_16465560 < (args_10512467 != null ? args_10512467.length : 0))) break L3;
            arg_10512476 = args_10512467[chckIndx(i_16465560, 0, (args_10512467 != null ? args_10512467.length : 0)+0-1)-0];
            msg_len_10512470 = addInt(msg_len_10512470, (arg_10512476 != null ? arg_10512476.length : 0));
            i_16465560 = addInt(i_16465560, 1);
          }
      } while(false);
    } while(false);
    result_10512468 = nimCopy(null, mnewString(0), NTI112);
    var i_10512484 = 0;
    L4: do {
        L5: while (true) {
        if (!(i_10512484 < (frmt_10512464 != null ? frmt_10512464.length : 0))) break L5;
          if (!((frmt_10512464[chckIndx(i_10512484, 0, (frmt_10512464 != null ? frmt_10512464.length : 0)+0-1)-0] == 36))) {
          if (result_10512468 != null) { addChar(result_10512468, frmt_10512464[chckIndx(i_10512484, 0, (frmt_10512464 != null ? frmt_10512464.length : 0)+0-1)-0]); } else { result_10512468 = [frmt_10512464[chckIndx(i_10512484, 0, (frmt_10512464 != null ? frmt_10512464.length : 0)+0-1)-0]]; };
          i_10512484 = addInt(i_10512484, 1);
          }
          else {
            i_10512484 = addInt(i_10512484, 1);
            var v_10515013 = [];
            var app_10515201 = [];
            L6: do {
                L7: while (true) {
                if (!(ConstSet18[frmt_10512464[chckIndx(i_10512484, 0, (frmt_10512464 != null ? frmt_10512464.length : 0)+0-1)-0]] != undefined)) break L7;
                  if (v_10515013 != null) { addChar(v_10515013, nsuToLowerAsciiChar(frmt_10512464[chckIndx(i_10512484, 0, (frmt_10512464 != null ? frmt_10512464.length : 0)+0-1)-0])); } else { v_10515013 = [nsuToLowerAsciiChar(frmt_10512464[chckIndx(i_10512484, 0, (frmt_10512464 != null ? frmt_10512464.length : 0)+0-1)-0])]; };
                  i_10512484 = addInt(i_10512484, 1);
                }
            } while(false);
            switch (toJSStr(v_10515013)) {
            case "date":
              if (result_10512468 != null) { result_10512468 = (result_10512468).concat(ntgetDateStr(now_9985436())); } else { result_10512468 = ntgetDateStr(now_9985436()).slice(); };
              break;
            case "time":
              if (result_10512468 != null) { result_10512468 = (result_10512468).concat(ntgetClockStr(now_9985436())); } else { result_10512468 = ntgetClockStr(now_9985436()).slice(); };
              break;
            case "datetime":
              if (result_10512468 != null) { result_10512468 = (result_10512468).concat((ntgetDateStr(now_9985436()) || []).concat(makeNimstrLit("T") || [],ntgetClockStr(now_9985436()) || [])); } else { result_10512468 = (ntgetDateStr(now_9985436()) || []).concat(makeNimstrLit("T") || [],ntgetClockStr(now_9985436()) || []).slice(); };
              break;
            case "app":
              if (result_10512468 != null) { result_10512468 = (result_10512468).concat(app_10515201); } else { result_10512468 = app_10515201.slice(); };
              break;
            case "appdir":
              break;
            case "appname":
              break;
            case "levelid":
              if (result_10512468 != null) { addChar(result_10512468, level_names_10512216[chckIndx(level_10512465, 0, (level_names_10512216 != null ? level_names_10512216.length : 0)+0-1)-0][chckIndx(0, 0, (level_names_10512216[chckIndx(level_10512465, 0, (level_names_10512216 != null ? level_names_10512216.length : 0)+0-1)-0] != null ? level_names_10512216[chckIndx(level_10512465, 0, (level_names_10512216 != null ? level_names_10512216.length : 0)+0-1)-0].length : 0)+0-1)-0]); } else { result_10512468 = [level_names_10512216[chckIndx(level_10512465, 0, (level_names_10512216 != null ? level_names_10512216.length : 0)+0-1)-0][chckIndx(0, 0, (level_names_10512216[chckIndx(level_10512465, 0, (level_names_10512216 != null ? level_names_10512216.length : 0)+0-1)-0] != null ? level_names_10512216[chckIndx(level_10512465, 0, (level_names_10512216 != null ? level_names_10512216.length : 0)+0-1)-0].length : 0)+0-1)-0]]; };
              break;
            case "levelname":
              if (result_10512468 != null) { result_10512468 = (result_10512468).concat(level_names_10512216[chckIndx(level_10512465, 0, (level_names_10512216 != null ? level_names_10512216.length : 0)+0-1)-0]); } else { result_10512468 = level_names_10512216[chckIndx(level_10512465, 0, (level_names_10512216 != null ? level_names_10512216.length : 0)+0-1)-0].slice(); };
              break;
            default: 
              break;
            }
          }
          
        }
    } while(false);
    L8: do {
      var arg_10520406 = null;
      var i_16465565 = 0;
      L9: do {
          L10: while (true) {
          if (!(i_16465565 < (args_10512467 != null ? args_10512467.length : 0))) break L10;
            arg_10520406 = args_10512467[chckIndx(i_16465565, 0, (args_10512467 != null ? args_10512467.length : 0)+0-1)-0];
            if (result_10512468 != null) { result_10512468 = (result_10512468).concat(arg_10520406); } else { result_10512468 = arg_10520406.slice(); };
            i_16465565 = addInt(i_16465565, 1);
          }
      } while(false);
    } while(false);

  return result_10512468;

}
function log_10520441(logger_10520443, level_10520444, args_10520446) {
      var Tmp1;

      if (!(level_10512401[0] <= level_10520444)) Tmp1 = false; else {        Tmp1 = (logger_10520443.levelThreshold <= level_10520444);      }    if (Tmp1) {
    var ln_10530006 = substitute_log_10512462(logger_10520443.fmtStr, level_10520444, args_10520446);
    var cln_10530201 = toJSStr(ln_10530006);
    console.log(cln_10530201);
    }
    

  
}
function log_10520420(logger_10520422, level_10520423, args_10520425) {
  
}
function log_10520439(logger_10520422, level_10520423, args_10520425) {
    chckNilDisp(logger_10520422);
    if (isObj(logger_10520422.m_type, NTI10512227)) {
    log_10520441(logger_10520422, level_10520423, args_10520425);
    }
    else {
    if (isObj(logger_10520422.m_type, NTI10512223)) {
    log_10520420(logger_10520422, level_10520423, args_10520425);
    }
    }

  
}
