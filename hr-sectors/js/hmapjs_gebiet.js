/* Generated by the Nim Compiler v1.4.2 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI9691085 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI13415055 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI9596040 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI9596024 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI9680004 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI9891118 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI15650067 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI9891020 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI9691048 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI9691081 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI9232299 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI9581098 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI9691056 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI9691076 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI9691096 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9691090 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9691089 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI15400516 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI15400507 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI15400502 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI15400287 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI15345185 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13415045 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI13415047 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI14785011 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI9596036 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI12480125 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI4020232 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI4275011 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI6851 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI10491098 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10491087 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI10491084 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI10491081 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI180 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI10491054 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI10491058 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI10491056 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI11048253 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11048202 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI11070039 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11048259 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI11048227 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI11048243 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI152 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI11048239 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11048320 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11048316 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11048315 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11048251 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI11048272 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI11048235 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI11048204 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI11048262 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI11048229 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI11048265 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI11048231 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI11048268 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI11048233 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI11048276 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI11048237 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI11048241 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI13686232 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13686229 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13686226 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13686206 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13686203 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13686200 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI6954 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI9475097 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI9475085 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI13686183 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13686180 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13686177 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13686061 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13686075 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13686072 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13686069 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13686052 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13686022 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI13686047 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13686045 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13686020 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI13686157 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13686154 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13686151 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI9596018 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI9596016 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI13686027 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13686016 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI13686039 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13686037 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13686031 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13686018 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI13686134 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13686131 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13686128 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13686118 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13686026 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI12702211 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12398323 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12398324 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI12445076 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12445074 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI12442152 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12445030 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12445018 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12445039 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12445037 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12442028 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12445031 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI12445022 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI9232476 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9232472 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9232468 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9232464 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9232460 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9232456 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9232452 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9232448 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9232444 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9232440 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9232436 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9232432 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9232428 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9232424 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9232420 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9232416 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9232412 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9232408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9232404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9232400 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9232396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9232392 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9232388 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9232205 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI9232291 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI9233628 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9233619 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI9233618 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI9232385 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI9233626 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI9232387 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI9232269 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI9232267 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI9232661 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI9232273 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI9232271 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI9232659 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI9232657 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI9232289 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI9232287 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI9232655 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI9232653 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI9232277 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI9232275 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI9232651 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI9232675 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI9232281 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI9232279 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI9232673 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI9232767 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI9232285 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI9232283 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI9232231 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI9232229 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI9232245 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI9232243 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI9232241 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI9232239 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI9232233 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI9232614 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI9232612 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI9232610 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI9232237 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI9232235 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI12702207 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12702209 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI9232293 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI105 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI13572035 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI13415014 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI9231055 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI164 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI13347030 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI946734 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI6821 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6843 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6845 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI8520015 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI6841 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI8500015 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI144 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI6618 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI6604 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI9282269 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI13765854 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13765851 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13765848 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI6853 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6835 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6833 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6837 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6608 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6928 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI115 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI6923 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI6817 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6819 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI6849 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI113 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NNI6849 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6849.node = NNI6849;
var NNI6819 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6819.node = NNI6819;
NTI6923.base = NTI6817;
NTI6928.base = NTI6817;
var NNI6817 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI6923, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI115, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI113, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI113, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI6928, name: "up", sons: null}]};
NTI6817.node = NNI6817;
var NNI6608 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6608.node = NNI6608;
NTI6817.base = NTI6608;
NTI6819.base = NTI6817;
NTI6849.base = NTI6819;
var NNI6837 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6837.node = NNI6837;
var NNI6833 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6833.node = NNI6833;
NTI6833.base = NTI6819;
NTI6837.base = NTI6833;
var NNI6835 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6835.node = NNI6835;
NTI6835.base = NTI6833;
var NNI6853 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6853.node = NNI6853;
NTI6853.base = NTI6819;
NTI6604.base = NTI6618;
var NNI13765854 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI9282269, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI9282269, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI6604, name: "Field2", sons: null}]};
NTI13765854.node = NNI13765854;
NTI13765851.base = NTI13765854;
var NNI13765848 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI13765851, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI144, name: "counter", sons: null}]};
NTI13765848.node = NNI13765848;
NTI8500015.base = NTI113;
var NNI6841 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6841.node = NNI6841;
NTI6841.base = NTI6819;
NTI8520015.base = NTI113;
var NNI6845 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6845.node = NNI6845;
var NNI6843 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6843.node = NNI6843;
var NNI6821 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6821.node = NNI6821;
NTI6821.base = NTI6817;
NTI6843.base = NTI6821;
NTI6845.base = NTI6843;
var NNI946734 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI144, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI144, name: "b", sons: null}]};
NTI946734.node = NNI946734;
var NNI13347030 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "apikey", len: 0, typ: NTI115, name: "apikey", sons: null}, 
{kind: 1, offset: "app_id", len: 0, typ: NTI115, name: "app_id", sons: null}, 
{kind: 1, offset: "app_code", len: 0, typ: NTI115, name: "app_code", sons: null}, 
{kind: 1, offset: "useHTTPS", len: 0, typ: NTI164, name: "useHTTPS", sons: null}, 
{kind: 1, offset: "useCIT", len: 0, typ: NTI164, name: "useCIT", sons: null}]};
NTI13347030.node = NNI13347030;
var NNI9231055 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI9231055.node = NNI9231055;
NTI9231055.base = NTI6608;
NTI13347030.base = NTI9231055;
var NNI13415014 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "tileSize", len: 0, typ: NTI144, name: "tileSize", sons: null}, 
{kind: 1, offset: "ppi", len: 0, typ: NTI144, name: "ppi", sons: null}, 
{kind: 1, offset: "lg", len: 0, typ: NTI115, name: "lg", sons: null}, 
{kind: 1, offset: "lg2", len: 0, typ: NTI115, name: "lg2", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI115, name: "style", sons: null}, 
{kind: 1, offset: "pois", len: 0, typ: NTI164, name: "pois", sons: null}, 
{kind: 1, offset: "crossOrigin", len: 0, typ: NTI113, name: "crossOrigin", sons: null}]};
NTI13415014.node = NNI13415014;
NTI13415014.base = NTI9231055;
var NNI13572035 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "pixelRatio", len: 0, typ: NTI105, name: "pixelRatio", sons: null}, 
{kind: 1, offset: "noWrap", len: 0, typ: NTI164, name: "noWrap", sons: null}]};
NTI13572035.node = NNI13572035;
NTI13572035.base = NTI9231055;
var NNI9232293 = {kind: 2, len: 368, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "alignContent", len: 0, typ: NTI115, name: "alignContent", sons: null}, 
{kind: 1, offset: "alignItems", len: 0, typ: NTI115, name: "alignItems", sons: null}, 
{kind: 1, offset: "alignSelf", len: 0, typ: NTI115, name: "alignSelf", sons: null}, 
{kind: 1, offset: "all", len: 0, typ: NTI115, name: "all", sons: null}, 
{kind: 1, offset: "animation", len: 0, typ: NTI115, name: "animation", sons: null}, 
{kind: 1, offset: "animationDelay", len: 0, typ: NTI115, name: "animationDelay", sons: null}, 
{kind: 1, offset: "animationDirection", len: 0, typ: NTI115, name: "animationDirection", sons: null}, 
{kind: 1, offset: "animationDuration", len: 0, typ: NTI115, name: "animationDuration", sons: null}, 
{kind: 1, offset: "animationFillMode", len: 0, typ: NTI115, name: "animationFillMode", sons: null}, 
{kind: 1, offset: "animationIterationCount", len: 0, typ: NTI115, name: "animationIterationCount", sons: null}, 
{kind: 1, offset: "animationName", len: 0, typ: NTI115, name: "animationName", sons: null}, 
{kind: 1, offset: "animationPlayState", len: 0, typ: NTI115, name: "animationPlayState", sons: null}, 
{kind: 1, offset: "animationTimingFunction", len: 0, typ: NTI115, name: "animationTimingFunction", sons: null}, 
{kind: 1, offset: "backdropFilter", len: 0, typ: NTI115, name: "backdropFilter", sons: null}, 
{kind: 1, offset: "backfaceVisibility", len: 0, typ: NTI115, name: "backfaceVisibility", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI115, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI115, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundBlendMode", len: 0, typ: NTI115, name: "backgroundBlendMode", sons: null}, 
{kind: 1, offset: "backgroundClip", len: 0, typ: NTI115, name: "backgroundClip", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI115, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI115, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundOrigin", len: 0, typ: NTI115, name: "backgroundOrigin", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI115, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI115, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "backgroundSize", len: 0, typ: NTI115, name: "backgroundSize", sons: null}, 
{kind: 1, offset: "blockSize", len: 0, typ: NTI115, name: "blockSize", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI115, name: "border", sons: null}, 
{kind: 1, offset: "borderBlock", len: 0, typ: NTI115, name: "borderBlock", sons: null}, 
{kind: 1, offset: "borderBlockColor", len: 0, typ: NTI115, name: "borderBlockColor", sons: null}, 
{kind: 1, offset: "borderBlockEnd", len: 0, typ: NTI115, name: "borderBlockEnd", sons: null}, 
{kind: 1, offset: "borderBlockEndColor", len: 0, typ: NTI115, name: "borderBlockEndColor", sons: null}, 
{kind: 1, offset: "borderBlockEndStyle", len: 0, typ: NTI115, name: "borderBlockEndStyle", sons: null}, 
{kind: 1, offset: "borderBlockEndWidth", len: 0, typ: NTI115, name: "borderBlockEndWidth", sons: null}, 
{kind: 1, offset: "borderBlockStart", len: 0, typ: NTI115, name: "borderBlockStart", sons: null}, 
{kind: 1, offset: "borderBlockStartColor", len: 0, typ: NTI115, name: "borderBlockStartColor", sons: null}, 
{kind: 1, offset: "borderBlockStartStyle", len: 0, typ: NTI115, name: "borderBlockStartStyle", sons: null}, 
{kind: 1, offset: "borderBlockStartWidth", len: 0, typ: NTI115, name: "borderBlockStartWidth", sons: null}, 
{kind: 1, offset: "borderBlockStyle", len: 0, typ: NTI115, name: "borderBlockStyle", sons: null}, 
{kind: 1, offset: "borderBlockWidth", len: 0, typ: NTI115, name: "borderBlockWidth", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI115, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI115, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomLeftRadius", len: 0, typ: NTI115, name: "borderBottomLeftRadius", sons: null}, 
{kind: 1, offset: "borderBottomRightRadius", len: 0, typ: NTI115, name: "borderBottomRightRadius", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI115, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI115, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderCollapse", len: 0, typ: NTI115, name: "borderCollapse", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI115, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderEndEndRadius", len: 0, typ: NTI115, name: "borderEndEndRadius", sons: null}, 
{kind: 1, offset: "borderEndStartRadius", len: 0, typ: NTI115, name: "borderEndStartRadius", sons: null}, 
{kind: 1, offset: "borderImage", len: 0, typ: NTI115, name: "borderImage", sons: null}, 
{kind: 1, offset: "borderImageOutset", len: 0, typ: NTI115, name: "borderImageOutset", sons: null}, 
{kind: 1, offset: "borderImageRepeat", len: 0, typ: NTI115, name: "borderImageRepeat", sons: null}, 
{kind: 1, offset: "borderImageSlice", len: 0, typ: NTI115, name: "borderImageSlice", sons: null}, 
{kind: 1, offset: "borderImageSource", len: 0, typ: NTI115, name: "borderImageSource", sons: null}, 
{kind: 1, offset: "borderImageWidth", len: 0, typ: NTI115, name: "borderImageWidth", sons: null}, 
{kind: 1, offset: "borderInline", len: 0, typ: NTI115, name: "borderInline", sons: null}, 
{kind: 1, offset: "borderInlineColor", len: 0, typ: NTI115, name: "borderInlineColor", sons: null}, 
{kind: 1, offset: "borderInlineEnd", len: 0, typ: NTI115, name: "borderInlineEnd", sons: null}, 
{kind: 1, offset: "borderInlineEndColor", len: 0, typ: NTI115, name: "borderInlineEndColor", sons: null}, 
{kind: 1, offset: "borderInlineEndStyle", len: 0, typ: NTI115, name: "borderInlineEndStyle", sons: null}, 
{kind: 1, offset: "borderInlineEndWidth", len: 0, typ: NTI115, name: "borderInlineEndWidth", sons: null}, 
{kind: 1, offset: "borderInlineStart", len: 0, typ: NTI115, name: "borderInlineStart", sons: null}, 
{kind: 1, offset: "borderInlineStartColor", len: 0, typ: NTI115, name: "borderInlineStartColor", sons: null}, 
{kind: 1, offset: "borderInlineStartStyle", len: 0, typ: NTI115, name: "borderInlineStartStyle", sons: null}, 
{kind: 1, offset: "borderInlineStartWidth", len: 0, typ: NTI115, name: "borderInlineStartWidth", sons: null}, 
{kind: 1, offset: "borderInlineStyle", len: 0, typ: NTI115, name: "borderInlineStyle", sons: null}, 
{kind: 1, offset: "borderInlineWidth", len: 0, typ: NTI115, name: "borderInlineWidth", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI115, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI115, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI115, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI115, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRadius", len: 0, typ: NTI115, name: "borderRadius", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI115, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI115, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI115, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI115, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderSpacing", len: 0, typ: NTI115, name: "borderSpacing", sons: null}, 
{kind: 1, offset: "borderStartEndRadius", len: 0, typ: NTI115, name: "borderStartEndRadius", sons: null}, 
{kind: 1, offset: "borderStartStartRadius", len: 0, typ: NTI115, name: "borderStartStartRadius", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI115, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI115, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI115, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopLeftRadius", len: 0, typ: NTI115, name: "borderTopLeftRadius", sons: null}, 
{kind: 1, offset: "borderTopRightRadius", len: 0, typ: NTI115, name: "borderTopRightRadius", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI115, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI115, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI115, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI115, name: "bottom", sons: null}, 
{kind: 1, offset: "boxDecorationBreak", len: 0, typ: NTI115, name: "boxDecorationBreak", sons: null}, 
{kind: 1, offset: "boxShadow", len: 0, typ: NTI115, name: "boxShadow", sons: null}, 
{kind: 1, offset: "boxSizing", len: 0, typ: NTI115, name: "boxSizing", sons: null}, 
{kind: 1, offset: "breakAfter", len: 0, typ: NTI115, name: "breakAfter", sons: null}, 
{kind: 1, offset: "breakBefore", len: 0, typ: NTI115, name: "breakBefore", sons: null}, 
{kind: 1, offset: "breakInside", len: 0, typ: NTI115, name: "breakInside", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI115, name: "captionSide", sons: null}, 
{kind: 1, offset: "caretColor", len: 0, typ: NTI115, name: "caretColor", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI115, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI115, name: "clip", sons: null}, 
{kind: 1, offset: "clipPath", len: 0, typ: NTI115, name: "clipPath", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI115, name: "color", sons: null}, 
{kind: 1, offset: "colorAdjust", len: 0, typ: NTI115, name: "colorAdjust", sons: null}, 
{kind: 1, offset: "columnCount", len: 0, typ: NTI115, name: "columnCount", sons: null}, 
{kind: 1, offset: "columnFill", len: 0, typ: NTI115, name: "columnFill", sons: null}, 
{kind: 1, offset: "columnGap", len: 0, typ: NTI115, name: "columnGap", sons: null}, 
{kind: 1, offset: "columnRule", len: 0, typ: NTI115, name: "columnRule", sons: null}, 
{kind: 1, offset: "columnRuleColor", len: 0, typ: NTI115, name: "columnRuleColor", sons: null}, 
{kind: 1, offset: "columnRuleStyle", len: 0, typ: NTI115, name: "columnRuleStyle", sons: null}, 
{kind: 1, offset: "columnRuleWidth", len: 0, typ: NTI115, name: "columnRuleWidth", sons: null}, 
{kind: 1, offset: "columnSpan", len: 0, typ: NTI115, name: "columnSpan", sons: null}, 
{kind: 1, offset: "columnWidth", len: 0, typ: NTI115, name: "columnWidth", sons: null}, 
{kind: 1, offset: "columns", len: 0, typ: NTI115, name: "columns", sons: null}, 
{kind: 1, offset: "contain", len: 0, typ: NTI115, name: "contain", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI115, name: "content", sons: null}, 
{kind: 1, offset: "counterIncrement", len: 0, typ: NTI115, name: "counterIncrement", sons: null}, 
{kind: 1, offset: "counterReset", len: 0, typ: NTI115, name: "counterReset", sons: null}, 
{kind: 1, offset: "counterSet", len: 0, typ: NTI115, name: "counterSet", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI115, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI115, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI115, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI115, name: "emptyCells", sons: null}, 
{kind: 1, offset: "filter", len: 0, typ: NTI115, name: "filter", sons: null}, 
{kind: 1, offset: "flex", len: 0, typ: NTI115, name: "flex", sons: null}, 
{kind: 1, offset: "flexBasis", len: 0, typ: NTI115, name: "flexBasis", sons: null}, 
{kind: 1, offset: "flexDirection", len: 0, typ: NTI115, name: "flexDirection", sons: null}, 
{kind: 1, offset: "flexFlow", len: 0, typ: NTI115, name: "flexFlow", sons: null}, 
{kind: 1, offset: "flexGrow", len: 0, typ: NTI115, name: "flexGrow", sons: null}, 
{kind: 1, offset: "flexShrink", len: 0, typ: NTI115, name: "flexShrink", sons: null}, 
{kind: 1, offset: "flexWrap", len: 0, typ: NTI115, name: "flexWrap", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI115, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI115, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI115, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontFeatureSettings", len: 0, typ: NTI115, name: "fontFeatureSettings", sons: null}, 
{kind: 1, offset: "fontKerning", len: 0, typ: NTI115, name: "fontKerning", sons: null}, 
{kind: 1, offset: "fontLanguageOverride", len: 0, typ: NTI115, name: "fontLanguageOverride", sons: null}, 
{kind: 1, offset: "fontOpticalSizing", len: 0, typ: NTI115, name: "fontOpticalSizing", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI115, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontSizeAdjust", len: 0, typ: NTI115, name: "fontSizeAdjust", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI115, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI115, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontSynthesis", len: 0, typ: NTI115, name: "fontSynthesis", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI115, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontVariantAlternates", len: 0, typ: NTI115, name: "fontVariantAlternates", sons: null}, 
{kind: 1, offset: "fontVariantCaps", len: 0, typ: NTI115, name: "fontVariantCaps", sons: null}, 
{kind: 1, offset: "fontVariantEastAsian", len: 0, typ: NTI115, name: "fontVariantEastAsian", sons: null}, 
{kind: 1, offset: "fontVariantLigatures", len: 0, typ: NTI115, name: "fontVariantLigatures", sons: null}, 
{kind: 1, offset: "fontVariantNumeric", len: 0, typ: NTI115, name: "fontVariantNumeric", sons: null}, 
{kind: 1, offset: "fontVariantPosition", len: 0, typ: NTI115, name: "fontVariantPosition", sons: null}, 
{kind: 1, offset: "fontVariationSettings", len: 0, typ: NTI115, name: "fontVariationSettings", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI115, name: "fontWeight", sons: null}, 
{kind: 1, offset: "gap", len: 0, typ: NTI115, name: "gap", sons: null}, 
{kind: 1, offset: "grid", len: 0, typ: NTI115, name: "grid", sons: null}, 
{kind: 1, offset: "gridArea", len: 0, typ: NTI115, name: "gridArea", sons: null}, 
{kind: 1, offset: "gridAutoColumns", len: 0, typ: NTI115, name: "gridAutoColumns", sons: null}, 
{kind: 1, offset: "gridAutoFlow", len: 0, typ: NTI115, name: "gridAutoFlow", sons: null}, 
{kind: 1, offset: "gridAutoRows", len: 0, typ: NTI115, name: "gridAutoRows", sons: null}, 
{kind: 1, offset: "gridColumn", len: 0, typ: NTI115, name: "gridColumn", sons: null}, 
{kind: 1, offset: "gridColumnEnd", len: 0, typ: NTI115, name: "gridColumnEnd", sons: null}, 
{kind: 1, offset: "gridColumnStart", len: 0, typ: NTI115, name: "gridColumnStart", sons: null}, 
{kind: 1, offset: "gridRow", len: 0, typ: NTI115, name: "gridRow", sons: null}, 
{kind: 1, offset: "gridRowEnd", len: 0, typ: NTI115, name: "gridRowEnd", sons: null}, 
{kind: 1, offset: "gridRowStart", len: 0, typ: NTI115, name: "gridRowStart", sons: null}, 
{kind: 1, offset: "gridTemplate", len: 0, typ: NTI115, name: "gridTemplate", sons: null}, 
{kind: 1, offset: "gridTemplateAreas", len: 0, typ: NTI115, name: "gridTemplateAreas", sons: null}, 
{kind: 1, offset: "gridTemplateColumns", len: 0, typ: NTI115, name: "gridTemplateColumns", sons: null}, 
{kind: 1, offset: "gridTemplateRows", len: 0, typ: NTI115, name: "gridTemplateRows", sons: null}, 
{kind: 1, offset: "hangingPunctuation", len: 0, typ: NTI115, name: "hangingPunctuation", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI115, name: "height", sons: null}, 
{kind: 1, offset: "hyphens", len: 0, typ: NTI115, name: "hyphens", sons: null}, 
{kind: 1, offset: "imageOrientation", len: 0, typ: NTI115, name: "imageOrientation", sons: null}, 
{kind: 1, offset: "imageRendering", len: 0, typ: NTI115, name: "imageRendering", sons: null}, 
{kind: 1, offset: "inlineSize", len: 0, typ: NTI115, name: "inlineSize", sons: null}, 
{kind: 1, offset: "inset", len: 0, typ: NTI115, name: "inset", sons: null}, 
{kind: 1, offset: "insetBlock", len: 0, typ: NTI115, name: "insetBlock", sons: null}, 
{kind: 1, offset: "insetBlockEnd", len: 0, typ: NTI115, name: "insetBlockEnd", sons: null}, 
{kind: 1, offset: "insetBlockStart", len: 0, typ: NTI115, name: "insetBlockStart", sons: null}, 
{kind: 1, offset: "insetInline", len: 0, typ: NTI115, name: "insetInline", sons: null}, 
{kind: 1, offset: "insetInlineEnd", len: 0, typ: NTI115, name: "insetInlineEnd", sons: null}, 
{kind: 1, offset: "insetInlineStart", len: 0, typ: NTI115, name: "insetInlineStart", sons: null}, 
{kind: 1, offset: "isolation", len: 0, typ: NTI115, name: "isolation", sons: null}, 
{kind: 1, offset: "justifyContent", len: 0, typ: NTI115, name: "justifyContent", sons: null}, 
{kind: 1, offset: "justifyItems", len: 0, typ: NTI115, name: "justifyItems", sons: null}, 
{kind: 1, offset: "justifySelf", len: 0, typ: NTI115, name: "justifySelf", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI115, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI115, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineBreak", len: 0, typ: NTI115, name: "lineBreak", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI115, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI115, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI115, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI115, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI115, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI115, name: "margin", sons: null}, 
{kind: 1, offset: "marginBlock", len: 0, typ: NTI115, name: "marginBlock", sons: null}, 
{kind: 1, offset: "marginBlockEnd", len: 0, typ: NTI115, name: "marginBlockEnd", sons: null}, 
{kind: 1, offset: "marginBlockStart", len: 0, typ: NTI115, name: "marginBlockStart", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI115, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginInline", len: 0, typ: NTI115, name: "marginInline", sons: null}, 
{kind: 1, offset: "marginInlineEnd", len: 0, typ: NTI115, name: "marginInlineEnd", sons: null}, 
{kind: 1, offset: "marginInlineStart", len: 0, typ: NTI115, name: "marginInlineStart", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI115, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI115, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI115, name: "marginTop", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI115, name: "mask", sons: null}, 
{kind: 1, offset: "maskBorder", len: 0, typ: NTI115, name: "maskBorder", sons: null}, 
{kind: 1, offset: "maskBorderMode", len: 0, typ: NTI115, name: "maskBorderMode", sons: null}, 
{kind: 1, offset: "maskBorderOutset", len: 0, typ: NTI115, name: "maskBorderOutset", sons: null}, 
{kind: 1, offset: "maskBorderRepeat", len: 0, typ: NTI115, name: "maskBorderRepeat", sons: null}, 
{kind: 1, offset: "maskBorderSlice", len: 0, typ: NTI115, name: "maskBorderSlice", sons: null}, 
{kind: 1, offset: "maskBorderSource", len: 0, typ: NTI115, name: "maskBorderSource", sons: null}, 
{kind: 1, offset: "maskBorderWidth", len: 0, typ: NTI115, name: "maskBorderWidth", sons: null}, 
{kind: 1, offset: "maskClip", len: 0, typ: NTI115, name: "maskClip", sons: null}, 
{kind: 1, offset: "maskComposite", len: 0, typ: NTI115, name: "maskComposite", sons: null}, 
{kind: 1, offset: "maskImage", len: 0, typ: NTI115, name: "maskImage", sons: null}, 
{kind: 1, offset: "maskMode", len: 0, typ: NTI115, name: "maskMode", sons: null}, 
{kind: 1, offset: "maskOrigin", len: 0, typ: NTI115, name: "maskOrigin", sons: null}, 
{kind: 1, offset: "maskPosition", len: 0, typ: NTI115, name: "maskPosition", sons: null}, 
{kind: 1, offset: "maskRepeat", len: 0, typ: NTI115, name: "maskRepeat", sons: null}, 
{kind: 1, offset: "maskSize", len: 0, typ: NTI115, name: "maskSize", sons: null}, 
{kind: 1, offset: "maskType", len: 0, typ: NTI115, name: "maskType", sons: null}, 
{kind: 1, offset: "maxBlockSize", len: 0, typ: NTI115, name: "maxBlockSize", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI115, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxInlineSize", len: 0, typ: NTI115, name: "maxInlineSize", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI115, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minBlockSize", len: 0, typ: NTI115, name: "minBlockSize", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI115, name: "minHeight", sons: null}, 
{kind: 1, offset: "minInlineSize", len: 0, typ: NTI115, name: "minInlineSize", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI115, name: "minWidth", sons: null}, 
{kind: 1, offset: "mixBlendMode", len: 0, typ: NTI115, name: "mixBlendMode", sons: null}, 
{kind: 1, offset: "objectFit", len: 0, typ: NTI115, name: "objectFit", sons: null}, 
{kind: 1, offset: "objectPosition", len: 0, typ: NTI115, name: "objectPosition", sons: null}, 
{kind: 1, offset: "offset", len: 0, typ: NTI115, name: "offset", sons: null}, 
{kind: 1, offset: "offsetAnchor", len: 0, typ: NTI115, name: "offsetAnchor", sons: null}, 
{kind: 1, offset: "offsetDistance", len: 0, typ: NTI115, name: "offsetDistance", sons: null}, 
{kind: 1, offset: "offsetPath", len: 0, typ: NTI115, name: "offsetPath", sons: null}, 
{kind: 1, offset: "offsetRotate", len: 0, typ: NTI115, name: "offsetRotate", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI115, name: "opacity", sons: null}, 
{kind: 1, offset: "order", len: 0, typ: NTI115, name: "order", sons: null}, 
{kind: 1, offset: "orphans", len: 0, typ: NTI115, name: "orphans", sons: null}, 
{kind: 1, offset: "outline", len: 0, typ: NTI115, name: "outline", sons: null}, 
{kind: 1, offset: "outlineColor", len: 0, typ: NTI115, name: "outlineColor", sons: null}, 
{kind: 1, offset: "outlineOffset", len: 0, typ: NTI115, name: "outlineOffset", sons: null}, 
{kind: 1, offset: "outlineStyle", len: 0, typ: NTI115, name: "outlineStyle", sons: null}, 
{kind: 1, offset: "outlineWidth", len: 0, typ: NTI115, name: "outlineWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI115, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowAnchor", len: 0, typ: NTI115, name: "overflowAnchor", sons: null}, 
{kind: 1, offset: "overflowBlock", len: 0, typ: NTI115, name: "overflowBlock", sons: null}, 
{kind: 1, offset: "overflowInline", len: 0, typ: NTI115, name: "overflowInline", sons: null}, 
{kind: 1, offset: "overflowWrap", len: 0, typ: NTI115, name: "overflowWrap", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI115, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI115, name: "overflowY", sons: null}, 
{kind: 1, offset: "overscrollBehavior", len: 0, typ: NTI115, name: "overscrollBehavior", sons: null}, 
{kind: 1, offset: "overscrollBehaviorBlock", len: 0, typ: NTI115, name: "overscrollBehaviorBlock", sons: null}, 
{kind: 1, offset: "overscrollBehaviorInline", len: 0, typ: NTI115, name: "overscrollBehaviorInline", sons: null}, 
{kind: 1, offset: "overscrollBehaviorX", len: 0, typ: NTI115, name: "overscrollBehaviorX", sons: null}, 
{kind: 1, offset: "overscrollBehaviorY", len: 0, typ: NTI115, name: "overscrollBehaviorY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI115, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBlock", len: 0, typ: NTI115, name: "paddingBlock", sons: null}, 
{kind: 1, offset: "paddingBlockEnd", len: 0, typ: NTI115, name: "paddingBlockEnd", sons: null}, 
{kind: 1, offset: "paddingBlockStart", len: 0, typ: NTI115, name: "paddingBlockStart", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI115, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingInline", len: 0, typ: NTI115, name: "paddingInline", sons: null}, 
{kind: 1, offset: "paddingInlineEnd", len: 0, typ: NTI115, name: "paddingInlineEnd", sons: null}, 
{kind: 1, offset: "paddingInlineStart", len: 0, typ: NTI115, name: "paddingInlineStart", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI115, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI115, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI115, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI115, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI115, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pageBreakInside", len: 0, typ: NTI115, name: "pageBreakInside", sons: null}, 
{kind: 1, offset: "paintOrder", len: 0, typ: NTI115, name: "paintOrder", sons: null}, 
{kind: 1, offset: "perspective", len: 0, typ: NTI115, name: "perspective", sons: null}, 
{kind: 1, offset: "perspectiveOrigin", len: 0, typ: NTI115, name: "perspectiveOrigin", sons: null}, 
{kind: 1, offset: "placeContent", len: 0, typ: NTI115, name: "placeContent", sons: null}, 
{kind: 1, offset: "placeItems", len: 0, typ: NTI115, name: "placeItems", sons: null}, 
{kind: 1, offset: "placeSelf", len: 0, typ: NTI115, name: "placeSelf", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI115, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI115, name: "position", sons: null}, 
{kind: 1, offset: "quotes", len: 0, typ: NTI115, name: "quotes", sons: null}, 
{kind: 1, offset: "resize", len: 0, typ: NTI115, name: "resize", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI115, name: "right", sons: null}, 
{kind: 1, offset: "rotate", len: 0, typ: NTI115, name: "rotate", sons: null}, 
{kind: 1, offset: "rowGap", len: 0, typ: NTI115, name: "rowGap", sons: null}, 
{kind: 1, offset: "scale", len: 0, typ: NTI115, name: "scale", sons: null}, 
{kind: 1, offset: "scrollBehavior", len: 0, typ: NTI115, name: "scrollBehavior", sons: null}, 
{kind: 1, offset: "scrollMargin", len: 0, typ: NTI115, name: "scrollMargin", sons: null}, 
{kind: 1, offset: "scrollMarginBlock", len: 0, typ: NTI115, name: "scrollMarginBlock", sons: null}, 
{kind: 1, offset: "scrollMarginBlockEnd", len: 0, typ: NTI115, name: "scrollMarginBlockEnd", sons: null}, 
{kind: 1, offset: "scrollMarginBlockStart", len: 0, typ: NTI115, name: "scrollMarginBlockStart", sons: null}, 
{kind: 1, offset: "scrollMarginBottom", len: 0, typ: NTI115, name: "scrollMarginBottom", sons: null}, 
{kind: 1, offset: "scrollMarginInline", len: 0, typ: NTI115, name: "scrollMarginInline", sons: null}, 
{kind: 1, offset: "scrollMarginInlineEnd", len: 0, typ: NTI115, name: "scrollMarginInlineEnd", sons: null}, 
{kind: 1, offset: "scrollMarginInlineStart", len: 0, typ: NTI115, name: "scrollMarginInlineStart", sons: null}, 
{kind: 1, offset: "scrollMarginLeft", len: 0, typ: NTI115, name: "scrollMarginLeft", sons: null}, 
{kind: 1, offset: "scrollMarginRight", len: 0, typ: NTI115, name: "scrollMarginRight", sons: null}, 
{kind: 1, offset: "scrollMarginTop", len: 0, typ: NTI115, name: "scrollMarginTop", sons: null}, 
{kind: 1, offset: "scrollPadding", len: 0, typ: NTI115, name: "scrollPadding", sons: null}, 
{kind: 1, offset: "scrollPaddingBlock", len: 0, typ: NTI115, name: "scrollPaddingBlock", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockEnd", len: 0, typ: NTI115, name: "scrollPaddingBlockEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockStart", len: 0, typ: NTI115, name: "scrollPaddingBlockStart", sons: null}, 
{kind: 1, offset: "scrollPaddingBottom", len: 0, typ: NTI115, name: "scrollPaddingBottom", sons: null}, 
{kind: 1, offset: "scrollPaddingInline", len: 0, typ: NTI115, name: "scrollPaddingInline", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineEnd", len: 0, typ: NTI115, name: "scrollPaddingInlineEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineStart", len: 0, typ: NTI115, name: "scrollPaddingInlineStart", sons: null}, 
{kind: 1, offset: "scrollPaddingLeft", len: 0, typ: NTI115, name: "scrollPaddingLeft", sons: null}, 
{kind: 1, offset: "scrollPaddingRight", len: 0, typ: NTI115, name: "scrollPaddingRight", sons: null}, 
{kind: 1, offset: "scrollPaddingTop", len: 0, typ: NTI115, name: "scrollPaddingTop", sons: null}, 
{kind: 1, offset: "scrollSnapAlign", len: 0, typ: NTI115, name: "scrollSnapAlign", sons: null}, 
{kind: 1, offset: "scrollSnapStop", len: 0, typ: NTI115, name: "scrollSnapStop", sons: null}, 
{kind: 1, offset: "scrollSnapType", len: 0, typ: NTI115, name: "scrollSnapType", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI115, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI115, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI115, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarColor", len: 0, typ: NTI115, name: "scrollbarColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI115, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI115, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI115, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI115, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI115, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "scrollbarWidth", len: 0, typ: NTI115, name: "scrollbarWidth", sons: null}, 
{kind: 1, offset: "shapeImageThreshold", len: 0, typ: NTI115, name: "shapeImageThreshold", sons: null}, 
{kind: 1, offset: "shapeMargin", len: 0, typ: NTI115, name: "shapeMargin", sons: null}, 
{kind: 1, offset: "shapeOutside", len: 0, typ: NTI115, name: "shapeOutside", sons: null}, 
{kind: 1, offset: "tabSize", len: 0, typ: NTI115, name: "tabSize", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI115, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI115, name: "textAlign", sons: null}, 
{kind: 1, offset: "textAlignLast", len: 0, typ: NTI115, name: "textAlignLast", sons: null}, 
{kind: 1, offset: "textCombineUpright", len: 0, typ: NTI115, name: "textCombineUpright", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI115, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textDecorationColor", len: 0, typ: NTI115, name: "textDecorationColor", sons: null}, 
{kind: 1, offset: "textDecorationLine", len: 0, typ: NTI115, name: "textDecorationLine", sons: null}, 
{kind: 1, offset: "textDecorationSkipInk", len: 0, typ: NTI115, name: "textDecorationSkipInk", sons: null}, 
{kind: 1, offset: "textDecorationStyle", len: 0, typ: NTI115, name: "textDecorationStyle", sons: null}, 
{kind: 1, offset: "textDecorationThickness", len: 0, typ: NTI115, name: "textDecorationThickness", sons: null}, 
{kind: 1, offset: "textEmphasis", len: 0, typ: NTI115, name: "textEmphasis", sons: null}, 
{kind: 1, offset: "textEmphasisColor", len: 0, typ: NTI115, name: "textEmphasisColor", sons: null}, 
{kind: 1, offset: "textEmphasisPosition", len: 0, typ: NTI115, name: "textEmphasisPosition", sons: null}, 
{kind: 1, offset: "textEmphasisStyle", len: 0, typ: NTI115, name: "textEmphasisStyle", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI115, name: "textIndent", sons: null}, 
{kind: 1, offset: "textJustify", len: 0, typ: NTI115, name: "textJustify", sons: null}, 
{kind: 1, offset: "textOrientation", len: 0, typ: NTI115, name: "textOrientation", sons: null}, 
{kind: 1, offset: "textOverflow", len: 0, typ: NTI115, name: "textOverflow", sons: null}, 
{kind: 1, offset: "textRendering", len: 0, typ: NTI115, name: "textRendering", sons: null}, 
{kind: 1, offset: "textShadow", len: 0, typ: NTI115, name: "textShadow", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI115, name: "textTransform", sons: null}, 
{kind: 1, offset: "textUnderlineOffset", len: 0, typ: NTI115, name: "textUnderlineOffset", sons: null}, 
{kind: 1, offset: "textUnderlinePosition", len: 0, typ: NTI115, name: "textUnderlinePosition", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI115, name: "top", sons: null}, 
{kind: 1, offset: "touchAction", len: 0, typ: NTI115, name: "touchAction", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI115, name: "transform", sons: null}, 
{kind: 1, offset: "transformBox", len: 0, typ: NTI115, name: "transformBox", sons: null}, 
{kind: 1, offset: "transformOrigin", len: 0, typ: NTI115, name: "transformOrigin", sons: null}, 
{kind: 1, offset: "transformStyle", len: 0, typ: NTI115, name: "transformStyle", sons: null}, 
{kind: 1, offset: "transition", len: 0, typ: NTI115, name: "transition", sons: null}, 
{kind: 1, offset: "transitionDelay", len: 0, typ: NTI115, name: "transitionDelay", sons: null}, 
{kind: 1, offset: "transitionDuration", len: 0, typ: NTI115, name: "transitionDuration", sons: null}, 
{kind: 1, offset: "transitionProperty", len: 0, typ: NTI115, name: "transitionProperty", sons: null}, 
{kind: 1, offset: "transitionTimingFunction", len: 0, typ: NTI115, name: "transitionTimingFunction", sons: null}, 
{kind: 1, offset: "translate", len: 0, typ: NTI115, name: "translate", sons: null}, 
{kind: 1, offset: "unicodeBidi", len: 0, typ: NTI115, name: "unicodeBidi", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI115, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI115, name: "visibility", sons: null}, 
{kind: 1, offset: "whiteSpace", len: 0, typ: NTI115, name: "whiteSpace", sons: null}, 
{kind: 1, offset: "widows", len: 0, typ: NTI115, name: "widows", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI115, name: "width", sons: null}, 
{kind: 1, offset: "willChange", len: 0, typ: NTI115, name: "willChange", sons: null}, 
{kind: 1, offset: "wordBreak", len: 0, typ: NTI115, name: "wordBreak", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI115, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "writingMode", len: 0, typ: NTI115, name: "writingMode", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI115, name: "zIndex", sons: null}]};
NTI9232293.node = NNI9232293;
NTI9232293.base = NTI6608;
var NNI12702207 = {kind: 2, offset: 0, typ: null, name: null, len: 6, sons: {"0": {kind: 1, offset: 0, typ: NTI12702207, name: "pkReplace", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12702207, name: "pkRemove", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI12702207, name: "pkAppend", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI12702207, name: "pkInsertBefore", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI12702207, name: "pkDetach", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI12702207, name: "pkSame", len: 0, sons: null}}};
NTI12702207.node = NNI12702207;
NTI9232610.base = NTI9232235;
NTI9232612.base = NTI9232235;
NTI9232614.base = NTI9232235;
var NNI9232233 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI9232233, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI9232233, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI9232233, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI9232233, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI9232233, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI9232233, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI9232233, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI9232233, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI9232233, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI9232233, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI9232233, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI9232233, name: "NotationNode", len: 0, sons: null}}};
NTI9232233.node = NNI9232233;
var NNI9232231 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI9232231.node = NNI9232231;
NTI9232231.base = NTI6608;
NTI9232229.base = NTI9232231;
NTI9232767.base = NTI9232243;
var NNI9232285 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "acceptCharset", len: 0, typ: NTI115, name: "acceptCharset", sons: null}, 
{kind: 1, offset: "action", len: 0, typ: NTI115, name: "action", sons: null}, 
{kind: 1, offset: "autocomplete", len: 0, typ: NTI115, name: "autocomplete", sons: null}, 
{kind: 1, offset: "elements", len: 0, typ: NTI9232767, name: "elements", sons: null}, 
{kind: 1, offset: "encoding", len: 0, typ: NTI115, name: "encoding", sons: null}, 
{kind: 1, offset: "enctype", len: 0, typ: NTI115, name: "enctype", sons: null}, 
{kind: 1, offset: "length", len: 0, typ: NTI144, name: "length", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI115, name: "method", sons: null}, 
{kind: 1, offset: "noValidate", len: 0, typ: NTI164, name: "noValidate", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI115, name: "target", sons: null}]};
NTI9232285.node = NNI9232285;
NTI9232285.base = NTI9232245;
NTI9232283.base = NTI9232285;
var NNI9232281 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defaultSelected", len: 0, typ: NTI164, name: "defaultSelected", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI164, name: "selected", sons: null}, 
{kind: 1, offset: "selectedIndex", len: 0, typ: NTI144, name: "selectedIndex", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI115, name: "text", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI115, name: "value", sons: null}]};
NTI9232281.node = NNI9232281;
NTI9232281.base = NTI9232245;
NTI9232279.base = NTI9232281;
NTI9232673.base = NTI9232279;
NTI9232675.base = NTI9232279;
var NNI9232245 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "className", len: 0, typ: NTI115, name: "className", sons: null}, 
{kind: 1, offset: "classList", len: 0, typ: NTI9232229, name: "classList", sons: null}, 
{kind: 1, offset: "checked", len: 0, typ: NTI164, name: "checked", sons: null}, 
{kind: 1, offset: "defaultChecked", len: 0, typ: NTI164, name: "defaultChecked", sons: null}, 
{kind: 1, offset: "defaultValue", len: 0, typ: NTI115, name: "defaultValue", sons: null}, 
{kind: 1, offset: "disabled", len: 0, typ: NTI164, name: "disabled", sons: null}, 
{kind: 1, offset: "form", len: 0, typ: NTI9232283, name: "form", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI115, name: "name", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI164, name: "readOnly", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI9232673, name: "options", sons: null}, 
{kind: 1, offset: "selectedOptions", len: 0, typ: NTI9232675, name: "selectedOptions", sons: null}, 
{kind: 1, offset: "clientWidth", len: 0, typ: NTI144, name: "clientWidth", sons: null}, 
{kind: 1, offset: "clientHeight", len: 0, typ: NTI144, name: "clientHeight", sons: null}, 
{kind: 1, offset: "contentEditable", len: 0, typ: NTI115, name: "contentEditable", sons: null}, 
{kind: 1, offset: "isContentEditable", len: 0, typ: NTI164, name: "isContentEditable", sons: null}, 
{kind: 1, offset: "dir", len: 0, typ: NTI115, name: "dir", sons: null}, 
{kind: 1, offset: "offsetHeight", len: 0, typ: NTI144, name: "offsetHeight", sons: null}, 
{kind: 1, offset: "offsetWidth", len: 0, typ: NTI144, name: "offsetWidth", sons: null}, 
{kind: 1, offset: "offsetLeft", len: 0, typ: NTI144, name: "offsetLeft", sons: null}, 
{kind: 1, offset: "offsetTop", len: 0, typ: NTI144, name: "offsetTop", sons: null}]};
NTI9232245.node = NNI9232245;
NTI9232245.base = NTI9232237;
NTI9232243.base = NTI9232245;
var NNI9232277 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI115, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI144, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI144, name: "y", sons: null}]};
NTI9232277.node = NNI9232277;
NTI9232277.base = NTI9232245;
NTI9232275.base = NTI9232277;
NTI9232651.base = NTI9232275;
NTI9232653.base = NTI9232283;
var NNI9232289 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "border", len: 0, typ: NTI144, name: "border", sons: null}, 
{kind: 1, offset: "complete", len: 0, typ: NTI164, name: "complete", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI144, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI144, name: "hspace", sons: null}, 
{kind: 1, offset: "lowsrc", len: 0, typ: NTI115, name: "lowsrc", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI115, name: "src", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI144, name: "vspace", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI144, name: "width", sons: null}]};
NTI9232289.node = NNI9232289;
NTI9232289.base = NTI9232245;
NTI9232287.base = NTI9232289;
NTI9232655.base = NTI9232287;
NTI9232657.base = NTI9232243;
var NNI9232273 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "height", len: 0, typ: NTI144, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI144, name: "hspace", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI115, name: "src", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI144, name: "width", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI115, name: "type", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI144, name: "vspace", sons: null}]};
NTI9232273.node = NNI9232273;
NTI9232273.base = NTI9232245;
NTI9232271.base = NTI9232273;
NTI9232659.base = NTI9232271;
var NNI9232269 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "target", len: 0, typ: NTI115, name: "target", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI115, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI144, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI144, name: "y", sons: null}]};
NTI9232269.node = NNI9232269;
NTI9232269.base = NTI9232245;
NTI9232267.base = NTI9232269;
NTI9232661.base = NTI9232267;
var NNI9233618 = {kind: 1, offset: "then", len: 0, typ: NTI9233619, name: "then", sons: null};
NTI9233618.node = NNI9233618;
NTI9232385.base = NTI9233618;
var NNI9233626 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ready", len: 0, typ: NTI9232385, name: "ready", sons: null}, 
{kind: 1, offset: "onloadingdone", len: 0, typ: NTI9233628, name: "onloadingdone", sons: null}]};
NTI9233626.node = NNI9233626;
NTI9232387.base = NTI9233626;
var NNI9232241 = {kind: 2, len: 23, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "activeElement", len: 0, typ: NTI9232243, name: "activeElement", sons: null}, 
{kind: 1, offset: "documentElement", len: 0, typ: NTI9232243, name: "documentElement", sons: null}, 
{kind: 1, offset: "alinkColor", len: 0, typ: NTI115, name: "alinkColor", sons: null}, 
{kind: 1, offset: "bgColor", len: 0, typ: NTI115, name: "bgColor", sons: null}, 
{kind: 1, offset: "body", len: 0, typ: NTI9232243, name: "body", sons: null}, 
{kind: 1, offset: "charset", len: 0, typ: NTI115, name: "charset", sons: null}, 
{kind: 1, offset: "cookie", len: 0, typ: NTI115, name: "cookie", sons: null}, 
{kind: 1, offset: "defaultCharset", len: 0, typ: NTI115, name: "defaultCharset", sons: null}, 
{kind: 1, offset: "fgColor", len: 0, typ: NTI115, name: "fgColor", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI9232243, name: "head", sons: null}, 
{kind: 1, offset: "lastModified", len: 0, typ: NTI115, name: "lastModified", sons: null}, 
{kind: 1, offset: "linkColor", len: 0, typ: NTI115, name: "linkColor", sons: null}, 
{kind: 1, offset: "referrer", len: 0, typ: NTI115, name: "referrer", sons: null}, 
{kind: 1, offset: "title", len: 0, typ: NTI115, name: "title", sons: null}, 
{kind: 1, offset: "URL", len: 0, typ: NTI115, name: "URL", sons: null}, 
{kind: 1, offset: "vlinkColor", len: 0, typ: NTI115, name: "vlinkColor", sons: null}, 
{kind: 1, offset: "anchors", len: 0, typ: NTI9232651, name: "anchors", sons: null}, 
{kind: 1, offset: "forms", len: 0, typ: NTI9232653, name: "forms", sons: null}, 
{kind: 1, offset: "images", len: 0, typ: NTI9232655, name: "images", sons: null}, 
{kind: 1, offset: "applets", len: 0, typ: NTI9232657, name: "applets", sons: null}, 
{kind: 1, offset: "embeds", len: 0, typ: NTI9232659, name: "embeds", sons: null}, 
{kind: 1, offset: "links", len: 0, typ: NTI9232661, name: "links", sons: null}, 
{kind: 1, offset: "fonts", len: 0, typ: NTI9232387, name: "fonts", sons: null}]};
NTI9232241.node = NNI9232241;
NTI9232241.base = NTI9232237;
NTI9232239.base = NTI9232241;
NTI9232291.base = NTI9232293;
var NNI9232237 = {kind: 2, len: 22, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI9232610, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI9232612, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI9232614, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI115, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI9232235, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI9232235, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI9232235, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI115, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI9232233, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI115, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI9232235, name: "parentNode", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI9232235, name: "content", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI9232235, name: "previousSibling", sons: null}, 
{kind: 1, offset: "ownerDocument", len: 0, typ: NTI9232239, name: "ownerDocument", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI115, name: "innerHTML", sons: null}, 
{kind: 1, offset: "outerHTML", len: 0, typ: NTI115, name: "outerHTML", sons: null}, 
{kind: 1, offset: "innerText", len: 0, typ: NTI115, name: "innerText", sons: null}, 
{kind: 1, offset: "textContent", len: 0, typ: NTI115, name: "textContent", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI9232291, name: "style", sons: null}, 
{kind: 1, offset: "baseURI", len: 0, typ: NTI115, name: "baseURI", sons: null}, 
{kind: 1, offset: "parentElement", len: 0, typ: NTI9232243, name: "parentElement", sons: null}, 
{kind: 1, offset: "isConnected", len: 0, typ: NTI164, name: "isConnected", sons: null}]};
NTI9232237.node = NNI9232237;
var NNI9232205 = {kind: 2, len: 23, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI9232388, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI9232392, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI9232396, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI9232400, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI9232404, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI9232408, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI9232412, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI9232416, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI9232420, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI9232424, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI9232428, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI9232432, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI9232436, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI9232440, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI9232444, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI9232448, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI9232452, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI9232456, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI9232460, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI9232464, name: "onunload", sons: null}, 
{kind: 1, offset: "onloadstart", len: 0, typ: NTI9232468, name: "onloadstart", sons: null}, 
{kind: 1, offset: "onprogress", len: 0, typ: NTI9232472, name: "onprogress", sons: null}, 
{kind: 1, offset: "onloadend", len: 0, typ: NTI9232476, name: "onloadend", sons: null}]};
NTI9232205.node = NNI9232205;
NTI9232205.base = NTI6608;
NTI9232237.base = NTI9232205;
NTI9232235.base = NTI9232237;
var NNI12442028 = {kind: 2, offset: 0, typ: null, name: null, len: 120, sons: {"0": {kind: 1, offset: 0, typ: NTI12442028, name: "#text", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12442028, name: "#int", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI12442028, name: "#bool", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI12442028, name: "#vthunk", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI12442028, name: "#dthunk", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI12442028, name: "#component", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI12442028, name: "#verbatim", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI12442028, name: "html", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI12442028, name: "head", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI12442028, name: "title", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI12442028, name: "base", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI12442028, name: "link", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI12442028, name: "meta", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI12442028, name: "style", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI12442028, name: "script", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI12442028, name: "noscript", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI12442028, name: "body", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI12442028, name: "section", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI12442028, name: "nav", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI12442028, name: "article", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI12442028, name: "aside", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI12442028, name: "h1", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI12442028, name: "h2", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI12442028, name: "h3", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI12442028, name: "h4", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI12442028, name: "h5", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI12442028, name: "h6", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI12442028, name: "header", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI12442028, name: "footer", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI12442028, name: "address", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI12442028, name: "main", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI12442028, name: "p", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI12442028, name: "hr", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI12442028, name: "pre", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI12442028, name: "blockquote", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI12442028, name: "ol", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI12442028, name: "ul", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI12442028, name: "li", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI12442028, name: "dl", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI12442028, name: "dt", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI12442028, name: "dd", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI12442028, name: "figure", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI12442028, name: "figcaption", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI12442028, name: "div", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI12442028, name: "a", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI12442028, name: "em", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI12442028, name: "strong", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI12442028, name: "small", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI12442028, name: "s", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI12442028, name: "cite", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI12442028, name: "quote", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI12442028, name: "dfn", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI12442028, name: "abbr", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI12442028, name: "data", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI12442028, name: "time", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI12442028, name: "code", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI12442028, name: "var", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI12442028, name: "samp", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI12442028, name: "kdb", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI12442028, name: "sub", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI12442028, name: "sup", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI12442028, name: "i", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI12442028, name: "b", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI12442028, name: "u", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI12442028, name: "mark", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI12442028, name: "ruby", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI12442028, name: "rt", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI12442028, name: "rp", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI12442028, name: "bdi", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI12442028, name: "dbo", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI12442028, name: "span", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI12442028, name: "br", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI12442028, name: "wbr", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI12442028, name: "ins", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI12442028, name: "del", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI12442028, name: "img", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI12442028, name: "iframe", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI12442028, name: "embed", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI12442028, name: "object", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI12442028, name: "param", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI12442028, name: "video", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI12442028, name: "audio", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI12442028, name: "source", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI12442028, name: "track", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI12442028, name: "canvas", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI12442028, name: "map", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI12442028, name: "area", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI12442028, name: "svg", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI12442028, name: "math", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI12442028, name: "path", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI12442028, name: "circle", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI12442028, name: "table", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI12442028, name: "caption", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI12442028, name: "colgroup", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI12442028, name: "col", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI12442028, name: "tbody", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI12442028, name: "thead", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI12442028, name: "tfoot", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI12442028, name: "tr", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI12442028, name: "td", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI12442028, name: "th", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI12442028, name: "form", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI12442028, name: "fieldset", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI12442028, name: "legend", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI12442028, name: "label", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI12442028, name: "input", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI12442028, name: "button", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI12442028, name: "select", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI12442028, name: "datalist", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI12442028, name: "optgroup", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI12442028, name: "option", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI12442028, name: "textarea", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI12442028, name: "keygen", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI12442028, name: "output", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI12442028, name: "progress", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI12442028, name: "meter", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI12442028, name: "details", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI12442028, name: "summary", len: 0, sons: null}, 
"118": {kind: 1, offset: 118, typ: NTI12442028, name: "command", len: 0, sons: null}, 
"119": {kind: 1, offset: 119, typ: NTI12442028, name: "menu", len: 0, sons: null}}};
NTI12442028.node = NNI12442028;
NTI12445037.base = NTI12445022;
NTI12445039.base = NTI115;
var NNI12442152 = {kind: 2, offset: 0, typ: null, name: null, len: 37, sons: {"0": {kind: 1, offset: 0, typ: NTI12442152, name: "onclick", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12442152, name: "oncontextmenu", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI12442152, name: "ondblclick", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI12442152, name: "onkeyup", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI12442152, name: "onkeydown", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI12442152, name: "onkeypressed", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI12442152, name: "onfocus", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI12442152, name: "onblur", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI12442152, name: "onchange", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI12442152, name: "onscroll", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI12442152, name: "onmousedown", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI12442152, name: "onmouseenter", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI12442152, name: "onmouseleave", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI12442152, name: "onmousemove", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI12442152, name: "onmouseout", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI12442152, name: "onmouseover", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI12442152, name: "onmouseup", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI12442152, name: "ondrag", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI12442152, name: "ondragend", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI12442152, name: "ondragenter", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI12442152, name: "ondragleave", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI12442152, name: "ondragover", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI12442152, name: "ondragstart", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI12442152, name: "ondrop", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI12442152, name: "onsubmit", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI12442152, name: "oninput", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI12442152, name: "onanimationstart", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI12442152, name: "onanimationend", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI12442152, name: "onanimationiteration", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI12442152, name: "onkeyupenter", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI12442152, name: "onkeyuplater", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI12442152, name: "onload", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI12442152, name: "ontransitioncancel", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI12442152, name: "ontransitionend", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI12442152, name: "ontransitionrun", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI12442152, name: "ontransitionstart", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI12442152, name: "onwheel", len: 0, sons: null}}};
NTI12442152.node = NNI12442152;
var NNI12445030 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI12442152, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI12445074, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI12445076, name: "Field2", sons: null}]};
NTI12445030.node = NNI12445030;
NTI12445018.base = NTI12445030;
var NNI12398323 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI12398323.node = NNI12398323;
NTI12398324.base = NTI12398323;
var NNI12445031 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI12442028, name: "kind", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI144, name: "index", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI115, name: "id", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI115, name: "class", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI115, name: "text", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI12445037, name: "kids", sons: null}, 
{kind: 1, offset: "attrs", len: 0, typ: NTI12445039, name: "attrs", sons: null}, 
{kind: 1, offset: "events", len: 0, typ: NTI12445018, name: "events", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI12398324, name: "style", sons: null}, 
{kind: 1, offset: "dom", len: 0, typ: NTI9232235, name: "dom", sons: null}]};
NTI12445031.node = NNI12445031;
NTI12445031.base = NTI6608;
NTI12445022.base = NTI12445031;
var NNI12702209 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "k", len: 0, typ: NTI12702207, name: "k", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI9232235, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI9232235, name: "current", sons: null}, 
{kind: 1, offset: "newNode", len: 0, typ: NTI12445022, name: "newNode", sons: null}, 
{kind: 1, offset: "oldNode", len: 0, typ: NTI12445022, name: "oldNode", sons: null}]};
NTI12702209.node = NNI12702209;
var NNI12702211 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI12445022, name: "parent", sons: null}, 
{kind: 1, offset: "newChild", len: 0, typ: NTI12445022, name: "newChild", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI144, name: "pos", sons: null}]};
NTI12702211.node = NNI12702211;
NTI13686037.base = NTI144;
NTI9596016.base = NTI105;
NTI9596018.base = NTI105;
var NNI13686027 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "lat", len: 0, typ: NTI9596016, name: "lat", sons: null}, 
{kind: 1, offset: "lng", len: 0, typ: NTI9596018, name: "lng", sons: null}]};
NTI13686027.node = NNI13686027;
NTI13686016.base = NTI13686027;
NTI13686039.base = NTI13686016;
var NNI13686031 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "linkId", len: 0, typ: NTI144, name: "linkId", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI113, name: "name", sons: null}, 
{kind: 1, offset: "cityId", len: 0, typ: NTI144, name: "cityId", sons: null}, 
{kind: 1, offset: "districtId", len: 0, typ: NTI144, name: "districtId", sons: null}, 
{kind: 1, offset: "postalCode", len: 0, typ: NTI113, name: "postalCode", sons: null}, 
{kind: 1, offset: "neighborLinks", len: 0, typ: NTI13686037, name: "neighborLinks", sons: null}, 
{kind: 1, offset: "geometry", len: 0, typ: NTI13686039, name: "geometry", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI164, name: "readOnly", sons: null}, 
{kind: 1, offset: "addedToMap", len: 0, typ: NTI164, name: "addedToMap", sons: null}, 
{kind: 1, offset: "addedToSector", len: 0, typ: NTI164, name: "addedToSector", sons: null}]};
NTI13686031.node = NNI13686031;
NTI13686018.base = NTI13686031;
var NNI13686134 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI9282269, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI144, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI13686018, name: "Field2", sons: null}]};
NTI13686134.node = NNI13686134;
NTI13686131.base = NTI13686134;
var NNI13686128 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI13686131, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI144, name: "counter", sons: null}]};
NTI13686128.node = NNI13686128;
NTI13686047.base = NTI13686018;
NTI13686061.base = NTI13686018;
var NNI13686075 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI9282269, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI144, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI113, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI13686061, name: "Field3", sons: null}]};
NTI13686075.node = NNI13686075;
NTI13686072.base = NTI13686075;
var NNI13686069 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI13686072, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI144, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI144, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI144, name: "last", sons: null}]};
NTI13686069.node = NNI13686069;
var NNI13686052 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "postalCode", len: 0, typ: NTI113, name: "postalCode", sons: null}, 
{kind: 1, offset: "district", len: 0, typ: NTI113, name: "district", sons: null}, 
{kind: 1, offset: "folkDistrict", len: 0, typ: NTI113, name: "folkDistrict", sons: null}, 
{kind: 1, offset: "city", len: 0, typ: NTI113, name: "city", sons: null}, 
{kind: 1, offset: "pFix", len: 0, typ: NTI144, name: "pFix", sons: null}, 
{kind: 1, offset: "streets", len: 0, typ: NTI13686069, name: "streets", sons: null}, 
{kind: 1, offset: "shownOnMap", len: 0, typ: NTI164, name: "shownOnMap", sons: null}, 
{kind: 1, offset: "exclude", len: 0, typ: NTI164, name: "exclude", sons: null}]};
NTI13686052.node = NNI13686052;
NTI13686022.base = NTI13686052;
var NNI13686045 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI113, name: "name", sons: null}, 
{kind: 1, offset: "links", len: 0, typ: NTI13686047, name: "links", sons: null}, 
{kind: 1, offset: "sector", len: 0, typ: NTI13686022, name: "sector", sons: null}, 
{kind: 1, offset: "totalFamilies", len: 0, typ: NTI6604, name: "totalFamilies", sons: null}]};
NTI13686045.node = NNI13686045;
NTI13686020.base = NTI13686045;
var NNI13686157 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI9282269, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI144, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI113, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI13686020, name: "Field3", sons: null}]};
NTI13686157.node = NNI13686157;
NTI13686154.base = NTI13686157;
var NNI13686151 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI13686154, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI144, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI144, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI144, name: "last", sons: null}]};
NTI13686151.node = NNI13686151;
var NNI9475097 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI9475097.node = NNI9475097;
var NNI6954 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6954.node = NNI6954;
NTI6954.base = NTI6608;
NTI9475097.base = NTI6954;
NTI9475085.base = NTI9475097;
var NNI13686183 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI9282269, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI113, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI9475085, name: "Field2", sons: null}]};
NTI13686183.node = NNI13686183;
NTI13686180.base = NTI13686183;
var NNI13686177 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI13686180, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI144, name: "counter", sons: null}]};
NTI13686177.node = NNI13686177;
var NNI13686206 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI9282269, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI144, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI113, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI13686022, name: "Field3", sons: null}]};
NTI13686206.node = NNI13686206;
NTI13686203.base = NTI13686206;
var NNI13686200 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI13686203, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI144, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI144, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI144, name: "last", sons: null}]};
NTI13686200.node = NNI13686200;
var NNI13686232 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI9282269, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI113, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI144, name: "Field2", sons: null}]};
NTI13686232.node = NNI13686232;
NTI13686229.base = NTI13686232;
var NNI13686226 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI13686229, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI144, name: "counter", sons: null}]};
NTI13686226.node = NNI13686226;
var NNI13686118 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "allLinks", len: 0, typ: NTI13686128, name: "allLinks", sons: null}, 
{kind: 1, offset: "allStreets", len: 0, typ: NTI13686151, name: "allStreets", sons: null}, 
{kind: 1, offset: "cachedTiles", len: 0, typ: NTI13686177, name: "cachedTiles", sons: null}, 
{kind: 1, offset: "allSectors", len: 0, typ: NTI13686200, name: "allSectors", sons: null}, 
{kind: 1, offset: "lastPostfix", len: 0, typ: NTI13686226, name: "lastPostfix", sons: null}]};
NTI13686118.node = NNI13686118;
NTI13686026.base = NTI13686118;
NTI11048237.base = NTI11048276;
NTI11048233.base = NTI11048268;
NTI11048231.base = NTI11048265;
NTI11048229.base = NTI11048262;
var NNI11048204 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI11048204, name: "Monday", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI11048204, name: "Tuesday", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI11048204, name: "Wednesday", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI11048204, name: "Thursday", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI11048204, name: "Friday", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI11048204, name: "Saturday", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI11048204, name: "Sunday", len: 0, sons: null}}};
NTI11048204.node = NNI11048204;
NTI11048235.base = NTI11048272;
var NNI11048315 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "zonedTimeFromTimeImpl", len: 0, typ: NTI11048316, name: "zonedTimeFromTimeImpl", sons: null}, 
{kind: 1, offset: "zonedTimeFromAdjTimeImpl", len: 0, typ: NTI11048320, name: "zonedTimeFromAdjTimeImpl", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI113, name: "name", sons: null}]};
NTI11048315.node = NNI11048315;
NTI11048251.base = NTI11048315;
var NNI11048241 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nanosecond", len: 0, typ: NTI11048237, name: "nanosecond", sons: null}, 
{kind: 1, offset: "second", len: 0, typ: NTI11048233, name: "second", sons: null}, 
{kind: 1, offset: "minute", len: 0, typ: NTI11048231, name: "minute", sons: null}, 
{kind: 1, offset: "hour", len: 0, typ: NTI11048229, name: "hour", sons: null}, 
{kind: 1, offset: "monthdayZero", len: 0, typ: NTI144, name: "monthdayZero", sons: null}, 
{kind: 1, offset: "monthZero", len: 0, typ: NTI144, name: "monthZero", sons: null}, 
{kind: 1, offset: "year", len: 0, typ: NTI144, name: "year", sons: null}, 
{kind: 1, offset: "weekday", len: 0, typ: NTI11048204, name: "weekday", sons: null}, 
{kind: 1, offset: "yearday", len: 0, typ: NTI11048235, name: "yearday", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI164, name: "isDst", sons: null}, 
{kind: 1, offset: "timezone", len: 0, typ: NTI11048251, name: "timezone", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI144, name: "utcOffset", sons: null}]};
NTI11048241.node = NNI11048241;
NTI11048241.base = NTI6608;
var NNI11048239 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI152, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI11048237, name: "nanosecond", sons: null}]};
NTI11048239.node = NNI11048239;
var NNI11048243 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI152, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI11048237, name: "nanosecond", sons: null}]};
NTI11048243.node = NNI11048243;
NTI11048227.base = NTI11048259;
var NNI11048202 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI11048202, name: "January", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI11048202, name: "February", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI11048202, name: "March", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI11048202, name: "April", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI11048202, name: "May", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI11048202, name: "June", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI11048202, name: "July", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI11048202, name: "August", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI11048202, name: "September", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI11048202, name: "October", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI11048202, name: "November", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI11048202, name: "December", len: 0, sons: null}}};
NTI11048202.node = NNI11048202;
var NNI11070039 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI11048227, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI11048202, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI144, name: "Field2", sons: null}]};
NTI11070039.node = NNI11070039;
var NNI11048253 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "time", len: 0, typ: NTI11048239, name: "time", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI144, name: "utcOffset", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI164, name: "isDst", sons: null}]};
NTI11048253.node = NNI11048253;
var NNI10491054 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI10491054, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI10491054, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI10491054, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI10491054, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI10491054, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI10491054, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI10491054, name: "JArray", len: 0, sons: null}}};
NTI10491054.node = NNI10491054;
var NNI10491087 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI9282269, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI144, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI113, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI10491056, name: "Field3", sons: null}]};
NTI10491087.node = NNI10491087;
NTI10491084.base = NTI10491087;
var NNI10491081 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI10491084, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI144, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI144, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI144, name: "last", sons: null}]};
NTI10491081.node = NNI10491081;
NTI10491098.base = NTI10491056;
var NNI10491058 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "isUnquoted", len: 0, typ: NTI164, name: "isUnquoted", sons: null}, 
{kind: 3, offset: "kind", len: 7, typ: NTI10491054, name: "kind", sons: [[setConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI113, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI180, name: "num", sons: null}], 
[setConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI105, name: "fnum", sons: null}], 
[setConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI164, name: "bval", sons: null}], 
[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI10491081, name: "fields", sons: null}], 
[setConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI10491098, name: "elems", sons: null}]]}]};
NTI10491058.node = NNI10491058;
NTI10491056.base = NTI10491058;
var NNI6851 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI6851.node = NNI6851;
NTI6851.base = NTI6819;
var NNI4275011 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI4020232, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI144, name: "b", sons: null}]};
NTI4275011.node = NNI4275011;
NTI12480125.base = NTI115;
var NNI9596036 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "lat", len: 0, typ: NTI9596016, name: "lat", sons: null}, 
{kind: 1, offset: "lng", len: 0, typ: NTI9596018, name: "lng", sons: null}]};
NTI9596036.node = NNI9596036;
NTI9596036.base = NTI9231055;
var NNI14785011 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI113, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI113, name: "b", sons: null}]};
NTI14785011.node = NNI14785011;
var NNI13415047 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "jsonattributes", len: 0, typ: NTI144, name: "jsonattributes", sons: null}, 
{kind: 1, offset: "mode", len: 0, typ: NTI115, name: "mode", sons: null}, 
{kind: 1, offset: "prox", len: 0, typ: NTI115, name: "prox", sons: null}, 
{kind: 1, offset: "maxResults", len: 0, typ: NTI144, name: "maxResults", sons: null}, 
{kind: 1, offset: "additionaldata", len: 0, typ: NTI115, name: "additionaldata", sons: null}, 
{kind: 1, offset: "locationattributes", len: 0, typ: NTI115, name: "locationattributes", sons: null}]};
NTI13415047.node = NNI13415047;
var NNI13415045 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI13415045.node = NNI13415045;
NTI13415045.base = NTI9231055;
NTI13415047.base = NTI13415045;
NTI15345185.base = NTI13686016;
NTI15400287.base = NTI144;
NTI15400502.base = NTI144;
NTI15400507.base = NTI144;
NTI15400516.base = NTI144;
var NNI9691089 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onAttach", len: 0, typ: NTI9691090, name: "onAttach", sons: null}, 
{kind: 1, offset: "onDetach", len: 0, typ: NTI9691096, name: "onDetach", sons: null}]};
NTI9691089.node = NNI9691089;
NTI9691089.base = NTI9231055;
var NNI9691076 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "strokeColor", len: 0, typ: NTI115, name: "strokeColor", sons: null}, 
{kind: 1, offset: "fillColor", len: 0, typ: NTI115, name: "fillColor", sons: null}, 
{kind: 1, offset: "lineWidth", len: 0, typ: NTI144, name: "lineWidth", sons: null}]};
NTI9691076.node = NNI9691076;
var NNI9691056 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI9691056.node = NNI9691056;
var NNI9581098 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI9581098.node = NNI9581098;
var NNI9232299 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "bubbles", len: 0, typ: NTI164, name: "bubbles", sons: null}, 
{kind: 1, offset: "cancelBubble", len: 0, typ: NTI164, name: "cancelBubble", sons: null}, 
{kind: 1, offset: "cancelable", len: 0, typ: NTI164, name: "cancelable", sons: null}, 
{kind: 1, offset: "composed", len: 0, typ: NTI164, name: "composed", sons: null}, 
{kind: 1, offset: "currentTarget", len: 0, typ: NTI9232235, name: "currentTarget", sons: null}, 
{kind: 1, offset: "defaultPrevented", len: 0, typ: NTI164, name: "defaultPrevented", sons: null}, 
{kind: 1, offset: "eventPhase", len: 0, typ: NTI144, name: "eventPhase", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI9232235, name: "target", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI115, name: "type", sons: null}, 
{kind: 1, offset: "isTrusted", len: 0, typ: NTI164, name: "isTrusted", sons: null}]};
NTI9232299.node = NNI9232299;
NTI9232299.base = NTI6608;
NTI9581098.base = NTI9232299;
NTI9691056.base = NTI9581098;
NTI9691076.base = NTI9691056;
NTI9691048.base = NTI9691076;
var NNI9691081 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "style", len: 0, typ: NTI9691048, name: "style", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI144, name: "zIndex", sons: null}]};
NTI9691081.node = NNI9691081;
NTI9691081.base = NTI9231055;
var NNI9891020 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI105, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI105, name: "Field1", sons: null}]};
NTI9891020.node = NNI9891020;
var NNI15650067 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI144, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI144, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI144, name: "Field2", sons: null}]};
NTI15650067.node = NNI15650067;
var NNI9891118 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI144, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI144, name: "Field1", sons: null}]};
NTI9891118.node = NNI9891118;
var NNI9596040 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI9596040.node = NNI9596040;
NTI9596040.base = NTI9231055;
NTI9596024.base = NTI9596040;
NTI9680004.base = NTI9596024;
var NNI13415055 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "searchtext", len: 0, typ: NTI115, name: "searchtext", sons: null}, 
{kind: 1, offset: "jsonattributes", len: 0, typ: NTI144, name: "jsonattributes", sons: null}, 
{kind: 1, offset: "country", len: 0, typ: NTI115, name: "country", sons: null}, 
{kind: 1, offset: "state", len: 0, typ: NTI115, name: "state", sons: null}, 
{kind: 1, offset: "additionaldata", len: 0, typ: NTI115, name: "additionaldata", sons: null}]};
NTI13415055.node = NNI13415055;
NTI13415055.base = NTI13415045;
var NNI9691085 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "style", len: 0, typ: NTI9691048, name: "style", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI144, name: "zIndex", sons: null}]};
NTI9691085.node = NNI9691085;
NTI9691085.base = NTI9231055;
function makeNimstrLit(c_265062) {
      var ln = c_265062.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_265062.charCodeAt(i);
  }
  return result;
  

  
}
function cstrToNimstr(c_265079) {
      var ln = c_265079.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_265079.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_265079.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);
function nimCopy(dest_280023, src_280024, ti_280025) {
  var result_285219 = null;

    switch (ti_280025.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_275401(ti_280025))) {
      result_285219 = src_280024;
      }
      else {
        result_285219 = [src_280024[0], src_280024[1]];
      }
      
      break;
    case 19:
            if (dest_280023 === null || dest_280023 === undefined) {
        dest_280023 = {};
      }
      else {
        for (var key in dest_280023) { delete dest_280023[key]; }
      }
      for (var key in src_280024) { dest_280023[key] = src_280024[key]; }
      result_285219 = dest_280023;
    
      break;
    case 18:
    case 17:
      if (!((ti_280025.base == null))) {
      result_285219 = nimCopy(dest_280023, src_280024, ti_280025.base);
      }
      else {
      if ((ti_280025.kind == 17)) {
      result_285219 = (dest_280023 === null || dest_280023 === undefined) ? {m_type: ti_280025} : dest_280023;
      }
      else {
        result_285219 = (dest_280023 === null || dest_280023 === undefined) ? {} : dest_280023;
      }
      }
      nimCopyAux(result_285219, src_280024, ti_280025.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_280024 === null) {
        result_285219 = null;
      }
      else {
        if (dest_280023 === null || dest_280023 === undefined) {
          dest_280023 = new Array(src_280024.length);
        }
        else {
          dest_280023.length = src_280024.length;
        }
        result_285219 = dest_280023;
        for (var i = 0; i < src_280024.length; ++i) {
          result_285219[i] = nimCopy(result_285219[i], src_280024[i], ti_280025.base);
        }
      }
    
      break;
    case 28:
            if (src_280024 !== null) {
        result_285219 = src_280024.slice(0);
      }
    
      break;
    default: 
      result_285219 = src_280024;
      break;
    }

  return result_285219;

}
function toJSStr(s_265096) {
                    var Tmp5;
            var Tmp7;

  var result_265097 = null;

    var res_265170 = newSeq_265128((s_265096).length);
    var i_265172 = 0;
    var j_265174 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_265172 < (s_265096).length)) break L2;
          var c_265175 = s_265096[i_265172];
          if ((c_265175 < 128)) {
          res_265170[j_265174] = String.fromCharCode(c_265175);
          i_265172 += 1;
          }
          else {
            var helper_265198 = newSeq_265128(0);
            L3: do {
                L4: while (true) {
                if (!true) break L4;
                  var code_265199 = c_265175.toString(16);
                  if (((code_265199).length == 1)) {
                  helper_265198.push("%0");;
                  }
                  else {
                  helper_265198.push("%");;
                  }
                  
                  helper_265198.push(code_265199);;
                  i_265172 += 1;
                    if (((s_265096).length <= i_265172)) Tmp5 = true; else {                      Tmp5 = (s_265096[i_265172] < 128);                    }                  if (Tmp5) {
                  break L3;
                  }
                  
                  c_265175 = s_265096[i_265172];
                }
            } while(false);
++excHandler;
            Tmp7 = framePtr;
            try {
            res_265170[j_265174] = decodeURIComponent(helper_265198.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp7;
            res_265170[j_265174] = helper_265198.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp7;
            }
          }
          
          j_265174 += 1;
        }
    } while(false);
    if (res_265170.length < j_265174) { for (var i=res_265170.length;i<j_265174;++i) res_265170.push(null); }
               else { res_265170.length = j_265174; };
    result_265097 = res_265170.join("");

  return result_265097;

}
function raiseException(e_230218, ename_230219) {
    e_230218.name = ename_230219;
    if ((excHandler == 0)) {
    unhandledException(e_230218);
    }
    
    throw e_230218;

  
}
function chckIndx(i_290086, a_290087, b_290088) {
      var Tmp1;

  var result_290089 = 0;

  BeforeRet: do {
      if (!(a_290087 <= i_290086)) Tmp1 = false; else {        Tmp1 = (i_290086 <= b_290088);      }    if (Tmp1) {
    result_290089 = i_290086;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_290086, a_290087, b_290088);
    }
    
  } while (false);

  return result_290089;

}
function subInt(a_270437, b_270438) {
        var result = a_270437 - b_270438;
    checkOverflowInt(result);
    return result;
  

  
}
function addInt(a_270419, b_270420) {
        var result = a_270419 + b_270420;
    checkOverflowInt(result);
    return result;
  

  
}
function divInt(a_270473, b_270474) {
        if (b_270474 == 0) raiseDivByZero();
    if (b_270474 == -1 && a_270473 == 2147483647) raiseOverflow();
    return Math.trunc(a_270473 / b_270474);
  

  
}
function mulInt(a_270455, b_270456) {
        var result = a_270455 * b_270456;
    checkOverflowInt(result);
    return result;
  

  
}
function chckRange(i_295016, a_295017, b_295018) {
      var Tmp1;

  var result_295019 = 0;

  BeforeRet: do {
      if (!(a_295017 <= i_295016)) Tmp1 = false; else {        Tmp1 = (i_295016 <= b_295018);      }    if (Tmp1) {
    result_295019 = i_295016;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_295019;

}
function nimMax(a_270821, b_270822) {
    var Tmp1;

  var result_270823 = 0;

  BeforeRet: do {
    if ((b_270822 <= a_270821)) {
    Tmp1 = a_270821;
    }
    else {
    Tmp1 = b_270822;
    }
    
    result_270823 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_270823;

}
function nimMin(a_270803, b_270804) {
    var Tmp1;

  var result_270805 = 0;

  BeforeRet: do {
    if ((a_270803 <= b_270804)) {
    Tmp1 = a_270803;
    }
    else {
    Tmp1 = b_270804;
    }
    
    result_270805 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_270805;

}
function mnewString(len_270044) {
        return new Array(len_270044);
  

  
}
var ConstSet2 = setConstr(13, 10);
function modInt(a_270491, b_270492) {
        if (b_270492 == 0) raiseDivByZero();
    if (b_270492 == -1 && a_270491 == 2147483647) raiseOverflow();
    return Math.trunc(a_270491 % b_270492);
  

  
}
function eqStrings(a_270222, b_270223) {
        if (a_270222 == b_270223) return true;
    if (a_270222 === null && b_270223.length == 0) return true;
    if (b_270223 === null && a_270222.length == 0) return true;
    if ((!a_270222) || (!b_270223)) return false;
    var alen = a_270222.length;
    if (alen != b_270223.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_270222[i] != b_270223[i]) return false;
    return true;
  

  
}
    var toLowerRanges_1840223 = [65, 90, 532, 192, 214, 532, 216, 222, 532, 393, 394, 705, 433, 434, 717, 904, 906, 537, 910, 911, 563, 913, 929, 532, 931, 939, 532, 1021, 1023, 370, 1024, 1039, 580, 1040, 1071, 532, 1329, 1366, 548, 4256, 4293, 7764, 5024, 5103, 39364, 5104, 5109, 508, 7312, 7354, -2508, 7357, 7359, -2508, 7944, 7951, 492, 7960, 7965, 492, 7976, 7983, 492, 7992, 7999, 492, 8008, 8013, 492, 8040, 8047, 492, 8072, 8079, 492, 8088, 8095, 492, 8104, 8111, 492, 8120, 8121, 492, 8122, 8123, 426, 8136, 8139, 414, 8152, 8153, 492, 8154, 8155, 400, 8168, 8169, 492, 8170, 8171, 388, 8184, 8185, 372, 8186, 8187, 374, 11264, 11310, 548, 11390, 11391, -10315, 65313, 65338, 532, 66560, 66599, 540, 66736, 66771, 540, 68736, 68786, 564, 71840, 71871, 532, 93760, 93791, 532, 125184, 125217, 534];
    var toLowerSinglets_1841470 = [256, 501, 258, 501, 260, 501, 262, 501, 264, 501, 266, 501, 268, 501, 270, 501, 272, 501, 274, 501, 276, 501, 278, 501, 280, 501, 282, 501, 284, 501, 286, 501, 288, 501, 290, 501, 292, 501, 294, 501, 296, 501, 298, 501, 300, 501, 302, 501, 304, 301, 306, 501, 308, 501, 310, 501, 313, 501, 315, 501, 317, 501, 319, 501, 321, 501, 323, 501, 325, 501, 327, 501, 330, 501, 332, 501, 334, 501, 336, 501, 338, 501, 340, 501, 342, 501, 344, 501, 346, 501, 348, 501, 350, 501, 352, 501, 354, 501, 356, 501, 358, 501, 360, 501, 362, 501, 364, 501, 366, 501, 368, 501, 370, 501, 372, 501, 374, 501, 376, 379, 377, 501, 379, 501, 381, 501, 385, 710, 386, 501, 388, 501, 390, 706, 391, 501, 395, 501, 398, 579, 399, 702, 400, 703, 401, 501, 403, 705, 404, 707, 406, 711, 407, 709, 408, 501, 412, 711, 413, 713, 415, 714, 416, 501, 418, 501, 420, 501, 422, 718, 423, 501, 425, 718, 428, 501, 430, 718, 431, 501, 435, 501, 437, 501, 439, 719, 440, 501, 444, 501, 452, 502, 453, 501, 455, 502, 456, 501, 458, 502, 459, 501, 461, 501, 463, 501, 465, 501, 467, 501, 469, 501, 471, 501, 473, 501, 475, 501, 478, 501, 480, 501, 482, 501, 484, 501, 486, 501, 488, 501, 490, 501, 492, 501, 494, 501, 497, 502, 498, 501, 500, 501, 502, 403, 503, 444, 504, 501, 506, 501, 508, 501, 510, 501, 512, 501, 514, 501, 516, 501, 518, 501, 520, 501, 522, 501, 524, 501, 526, 501, 528, 501, 530, 501, 532, 501, 534, 501, 536, 501, 538, 501, 540, 501, 542, 501, 544, 370, 546, 501, 548, 501, 550, 501, 552, 501, 554, 501, 556, 501, 558, 501, 560, 501, 562, 501, 570, 11295, 571, 501, 573, 337, 574, 11292, 577, 501, 579, 305, 580, 569, 581, 571, 582, 501, 584, 501, 586, 501, 588, 501, 590, 501, 880, 501, 882, 501, 886, 501, 895, 616, 902, 538, 908, 564, 975, 508, 984, 501, 986, 501, 988, 501, 990, 501, 992, 501, 994, 501, 996, 501, 998, 501, 1000, 501, 1002, 501, 1004, 501, 1006, 501, 1012, 440, 1015, 501, 1017, 493, 1018, 501, 1120, 501, 1122, 501, 1124, 501, 1126, 501, 1128, 501, 1130, 501, 1132, 501, 1134, 501, 1136, 501, 1138, 501, 1140, 501, 1142, 501, 1144, 501, 1146, 501, 1148, 501, 1150, 501, 1152, 501, 1162, 501, 1164, 501, 1166, 501, 1168, 501, 1170, 501, 1172, 501, 1174, 501, 1176, 501, 1178, 501, 1180, 501, 1182, 501, 1184, 501, 1186, 501, 1188, 501, 1190, 501, 1192, 501, 1194, 501, 1196, 501, 1198, 501, 1200, 501, 1202, 501, 1204, 501, 1206, 501, 1208, 501, 1210, 501, 1212, 501, 1214, 501, 1216, 515, 1217, 501, 1219, 501, 1221, 501, 1223, 501, 1225, 501, 1227, 501, 1229, 501, 1232, 501, 1234, 501, 1236, 501, 1238, 501, 1240, 501, 1242, 501, 1244, 501, 1246, 501, 1248, 501, 1250, 501, 1252, 501, 1254, 501, 1256, 501, 1258, 501, 1260, 501, 1262, 501, 1264, 501, 1266, 501, 1268, 501, 1270, 501, 1272, 501, 1274, 501, 1276, 501, 1278, 501, 1280, 501, 1282, 501, 1284, 501, 1286, 501, 1288, 501, 1290, 501, 1292, 501, 1294, 501, 1296, 501, 1298, 501, 1300, 501, 1302, 501, 1304, 501, 1306, 501, 1308, 501, 1310, 501, 1312, 501, 1314, 501, 1316, 501, 1318, 501, 1320, 501, 1322, 501, 1324, 501, 1326, 501, 4295, 7764, 4301, 7764, 7680, 501, 7682, 501, 7684, 501, 7686, 501, 7688, 501, 7690, 501, 7692, 501, 7694, 501, 7696, 501, 7698, 501, 7700, 501, 7702, 501, 7704, 501, 7706, 501, 7708, 501, 7710, 501, 7712, 501, 7714, 501, 7716, 501, 7718, 501, 7720, 501, 7722, 501, 7724, 501, 7726, 501, 7728, 501, 7730, 501, 7732, 501, 7734, 501, 7736, 501, 7738, 501, 7740, 501, 7742, 501, 7744, 501, 7746, 501, 7748, 501, 7750, 501, 7752, 501, 7754, 501, 7756, 501, 7758, 501, 7760, 501, 7762, 501, 7764, 501, 7766, 501, 7768, 501, 7770, 501, 7772, 501, 7774, 501, 7776, 501, 7778, 501, 7780, 501, 7782, 501, 7784, 501, 7786, 501, 7788, 501, 7790, 501, 7792, 501, 7794, 501, 7796, 501, 7798, 501, 7800, 501, 7802, 501, 7804, 501, 7806, 501, 7808, 501, 7810, 501, 7812, 501, 7814, 501, 7816, 501, 7818, 501, 7820, 501, 7822, 501, 7824, 501, 7826, 501, 7828, 501, 7838, -7115, 7840, 501, 7842, 501, 7844, 501, 7846, 501, 7848, 501, 7850, 501, 7852, 501, 7854, 501, 7856, 501, 7858, 501, 7860, 501, 7862, 501, 7864, 501, 7866, 501, 7868, 501, 7870, 501, 7872, 501, 7874, 501, 7876, 501, 7878, 501, 7880, 501, 7882, 501, 7884, 501, 7886, 501, 7888, 501, 7890, 501, 7892, 501, 7894, 501, 7896, 501, 7898, 501, 7900, 501, 7902, 501, 7904, 501, 7906, 501, 7908, 501, 7910, 501, 7912, 501, 7914, 501, 7916, 501, 7918, 501, 7920, 501, 7922, 501, 7924, 501, 7926, 501, 7928, 501, 7930, 501, 7932, 501, 7934, 501, 8025, 492, 8027, 492, 8029, 492, 8031, 492, 8124, 491, 8140, 491, 8172, 493, 8188, 491, 8486, -7017, 8490, -7883, 8491, -7762, 8498, 528, 8579, 501, 11360, 501, 11362, -10243, 11363, -3314, 11364, -10227, 11367, 501, 11369, 501, 11371, 501, 11373, -10280, 11374, -10249, 11375, -10283, 11376, -10282, 11378, 501, 11381, 501, 11392, 501, 11394, 501, 11396, 501, 11398, 501, 11400, 501, 11402, 501, 11404, 501, 11406, 501, 11408, 501, 11410, 501, 11412, 501, 11414, 501, 11416, 501, 11418, 501, 11420, 501, 11422, 501, 11424, 501, 11426, 501, 11428, 501, 11430, 501, 11432, 501, 11434, 501, 11436, 501, 11438, 501, 11440, 501, 11442, 501, 11444, 501, 11446, 501, 11448, 501, 11450, 501, 11452, 501, 11454, 501, 11456, 501, 11458, 501, 11460, 501, 11462, 501, 11464, 501, 11466, 501, 11468, 501, 11470, 501, 11472, 501, 11474, 501, 11476, 501, 11478, 501, 11480, 501, 11482, 501, 11484, 501, 11486, 501, 11488, 501, 11490, 501, 11499, 501, 11501, 501, 11506, 501, 42560, 501, 42562, 501, 42564, 501, 42566, 501, 42568, 501, 42570, 501, 42572, 501, 42574, 501, 42576, 501, 42578, 501, 42580, 501, 42582, 501, 42584, 501, 42586, 501, 42588, 501, 42590, 501, 42592, 501, 42594, 501, 42596, 501, 42598, 501, 42600, 501, 42602, 501, 42604, 501, 42624, 501, 42626, 501, 42628, 501, 42630, 501, 42632, 501, 42634, 501, 42636, 501, 42638, 501, 42640, 501, 42642, 501, 42644, 501, 42646, 501, 42648, 501, 42650, 501, 42786, 501, 42788, 501, 42790, 501, 42792, 501, 42794, 501, 42796, 501, 42798, 501, 42802, 501, 42804, 501, 42806, 501, 42808, 501, 42810, 501, 42812, 501, 42814, 501, 42816, 501, 42818, 501, 42820, 501, 42822, 501, 42824, 501, 42826, 501, 42828, 501, 42830, 501, 42832, 501, 42834, 501, 42836, 501, 42838, 501, 42840, 501, 42842, 501, 42844, 501, 42846, 501, 42848, 501, 42850, 501, 42852, 501, 42854, 501, 42856, 501, 42858, 501, 42860, 501, 42862, 501, 42873, 501, 42875, 501, 42877, -34832, 42878, 501, 42880, 501, 42882, 501, 42884, 501, 42886, 501, 42891, 501, 42893, -41780, 42896, 501, 42898, 501, 42902, 501, 42904, 501, 42906, 501, 42908, 501, 42910, 501, 42912, 501, 42914, 501, 42916, 501, 42918, 501, 42920, 501, 42922, -41808, 42923, -41819, 42924, -41815, 42925, -41805, 42926, -41808, 42928, -41758, 42929, -41782, 42930, -41761, 42931, 1428, 42932, 501, 42934, 501, 42936, 501, 42938, 501, 42940, 501, 42942, 501, 42946, 501, 42948, 452, 42949, -41807, 42950, -34884];
    var unicodeSpaces_1844041 = [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288];
      var toTag_12445006 = ["#text", "#int", "#bool", "#vthunk", "#dthunk", "#component", "#verbatim", "HTML", "HEAD", "TITLE", "BASE", "LINK", "META", "STYLE", "SCRIPT", "NOSCRIPT", "BODY", "SECTION", "NAV", "ARTICLE", "ASIDE", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "FOOTER", "ADDRESS", "MAIN", "P", "HR", "PRE", "BLOCKQUOTE", "OL", "UL", "LI", "DL", "DT", "DD", "FIGURE", "FIGCAPTION", "DIV", "A", "EM", "STRONG", "SMALL", "S", "CITE", "QUOTE", "DFN", "ABBR", "DATA", "TIME", "CODE", "VAR", "SAMP", "KDB", "SUB", "SUP", "I", "B", "U", "MARK", "RUBY", "RT", "RP", "BDI", "DBO", "SPAN", "BR", "WBR", "INS", "DEL", "IMG", "IFRAME", "EMBED", "OBJECT", "PARAM", "VIDEO", "AUDIO", "SOURCE", "TRACK", "CANVAS", "MAP", "AREA", "SVG", "MATH", "PATH", "CIRCLE", "TABLE", "CAPTION", "COLGROUP", "COL", "TBODY", "THEAD", "TFOOT", "TR", "TD", "TH", "FORM", "FIELDSET", "LEGEND", "LABEL", "INPUT", "BUTTON", "SELECT", "DATALIST", "OPTGROUP", "OPTION", "TEXTAREA", "KEYGEN", "OUTPUT", "PROGRESS", "METER", "DETAILS", "SUMMARY", "COMMAND", "MENU"];
      var toEventName_12445012 = ["click", "contextmenu", "dblclick", "keyup", "keydown", "keypressed", "focus", "blur", "change", "scroll", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseout", "mouseover", "mouseup", "drag", "dragend", "dragenter", "dragleave", "dragover", "dragstart", "drop", "submit", "input", "animationstart", "animationend", "animationiteration", "keyupenter", "keyuplater", "load", "transitioncancel", "transitionend", "transitionrun", "transitionstart", "wheel"];
function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
function genericReset(x_290044, ti_290045) {
  var result_290046 = null;

    result_290046 = null;
    switch (ti_290045.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (isFatPointer_275401(ti_290045)) {
              result_290046 = [null, 0];
      
      }
      
      break;
    case 19:
            result_290046 = {};
    
      break;
    case 18:
    case 17:
      if ((ti_290045.kind == 17)) {
      result_290046 = {m_type: ti_290045};
      }
      else {
        result_290046 = {};
      }
      
      break;
    case 24:
    case 27:
            result_290046 = [];
    
      break;
    case 4:
    case 16:
            result_290046 = new Array(x_290044.length);
      for (var i = 0; i < x_290044.length; ++i) {
        result_290046[i] = genericReset(x_290044[i], ti_290045.base);
      }
    
      break;
    default: 
      break;
    }

  return result_290046;

}
function addChar(x_315031, c_315032) {
    x_315031.push(c_315032);

  
}
function absInt(a_270666) {
    var Tmp1;

  var result_270667 = 0;

    if ((a_270666 < 0)) {
    Tmp1 = (a_270666 * -1);
    }
    else {
    Tmp1 = a_270666;
    }
    
    result_270667 = Tmp1;

  return result_270667;

}
    var unitWeights_11048382 = [1, 1000, 1000000, 1000000000, 60000000000, 3600000000000, 86400000000000, 604800000000000];
function negInt(a_270615) {
  var result_270616 = 0;

    result_270616 = (a_270615 * -1);

  return result_270616;

}
    var f2_12125174 = {patterns: [22, 31, 1, 45, 11, 31, 1, 45, 1, 31, 1, 84, 7, 31, 1, 58, 9, 31, 1, 58, 15, 28], formatStr: makeNimstrLit("yyyy-MM-dd\'T\'HH:mm:sszzz")};
    var DefaultLocale_11640709 = {MMM: [makeNimstrLit("Jan"), makeNimstrLit("Feb"), makeNimstrLit("Mar"), makeNimstrLit("Apr"), makeNimstrLit("May"), makeNimstrLit("Jun"), makeNimstrLit("Jul"), makeNimstrLit("Aug"), makeNimstrLit("Sep"), makeNimstrLit("Oct"), makeNimstrLit("Nov"), makeNimstrLit("Dec")], MMMM: [makeNimstrLit("January"), makeNimstrLit("February"), makeNimstrLit("March"), makeNimstrLit("April"), makeNimstrLit("May"), makeNimstrLit("June"), makeNimstrLit("July"), makeNimstrLit("August"), makeNimstrLit("September"), makeNimstrLit("October"), makeNimstrLit("November"), makeNimstrLit("December")], ddd: [makeNimstrLit("Mon"), makeNimstrLit("Tue"), makeNimstrLit("Wed"), makeNimstrLit("Thu"), makeNimstrLit("Fri"), makeNimstrLit("Sat"), makeNimstrLit("Sun")], dddd: [makeNimstrLit("Monday"), makeNimstrLit("Tuesday"), makeNimstrLit("Wednesday"), makeNimstrLit("Thursday"), makeNimstrLit("Friday"), makeNimstrLit("Saturday"), makeNimstrLit("Sunday")]};
    var daysUntilMonthLeap_11075107 = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];
      var daysUntilMonth_11075091 = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];
var ConstSet3 = setConstr(5);
function raiseFieldError(f_260047) {
    raiseException({message: nimCopy(null, f_260047, NTI113), parent: null, m_type: NTI6851, name: null, trace: [], up: null}, "FieldDefect");

  
}
var ConstSet4 = setConstr(6);
function nimFloatToString(a_270649) {
  var result_270650 = null;

        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_270649)) result_270650 =  a_270649+".0"
    else {
      result_270650 = a_270649+""
      if(nimOnlyDigitsOrMinus(result_270650)){
        result_270650 = a_270649+".0"
      }
    }
  

  return result_270650;

}
var ConstSet5 = setConstr(60, 62, 94);
var ConstSet6 = setConstr(60, 62, 94);
var ConstSet7 = setConstr(45, 43, 32);
var ConstSet8 = setConstr([48, 57]);
var ConstSet9 = setConstr([48, 57]);
var ConstSet10 = setConstr([48, 57]);
var ConstSet11 = setConstr([65, 90], [97, 122]);
var ConstSet12 = setConstr(46, 44);
function nimCharToStr(x_185674) {
  var result_185675 = [];

    result_185675 = nimCopy(null, mnewString(1), NTI113);
    result_185675[0] = x_185674;

  return result_185675;

}
var ConstSet13 = setConstr([65, 90]);
var ConstSet14 = setConstr([97, 122]);
function nimBoolToStr(x_185657) {
  var result_185658 = [];

    if (x_185657) {
    result_185658 = nimCopy(null, makeNimstrLit("true"), NTI113);
    }
    else {
      result_185658 = nimCopy(null, makeNimstrLit("false"), NTI113);
    }
    

  return result_185658;

}
function cmpStrings(a_270186, b_270187) {
        if (a_270186 == b_270187) return 0;
    if (!a_270186) return -1;
    if (!b_270187) return 1;
    for (var i = 0; i < a_270186.length && i < b_270187.length; i++) {
      var result = a_270186[i] - b_270187[i];
      if (result != 0) return result;
    }
    return a_270186.length - b_270187.length;
  

  
}
var ConstSet15 = setConstr([48, 57]);
var ConstSet16 = setConstr([48, 57]);
var ConstSet17 = setConstr(13, 10);
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var objectID_9285031 = [0];
if (globalThis.utcInstance_11600231 === undefined) {
  utcInstance_11600231 = [null];
}
if (globalThis.localInstance_11600232 === undefined) {
  localInstance_11600232 = [null];
}
var gid_12480032 = [0];
var vcomponents_12611239 = [{}];
var kxi_12702284 = [null];
function isFatPointer_275401(ti_275403) {
  var result_275404 = false;

  BeforeRet: do {
    result_275404 = !((ConstSet1[ti_275403.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_275404;

}
function nimCopyAux(dest_280028, src_280029, n_280031) {
    switch (n_280031.kind) {
    case 0:
      break;
    case 1:
            dest_280028[n_280031.offset] = nimCopy(dest_280028[n_280031.offset], src_280029[n_280031.offset], n_280031.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_280031.sons.length; i++) {
      nimCopyAux(dest_280028, src_280029, n_280031.sons[i]);
    }
    
      break;
    case 3:
            dest_280028[n_280031.offset] = nimCopy(dest_280028[n_280031.offset], src_280029[n_280031.offset], n_280031.typ);
      for (var i = 0; i < n_280031.sons.length; ++i) {
        nimCopyAux(dest_280028, src_280029, n_280031.sons[i][1]);
      }
    
      break;
    }

  
}
function add_167211(x_167214, x_167214_Idx, y_167215) {
          if (x_167214[x_167214_Idx] === null) { x_167214[x_167214_Idx] = []; }
      var off = x_167214[x_167214_Idx].length;
      x_167214[x_167214_Idx].length += y_167215.length;
      for (var i = 0; i < y_167215.length; ++i) {
        x_167214[x_167214_Idx][off+i] = y_167215.charCodeAt(i);
      }
    

  
}
function newSeq_265128(len_265131) {
  var result_265133 = [];

    result_265133 = new Array(len_265131); for (var i=0;i<len_265131;++i) {result_265133[i]=null;}
  return result_265133;

}
function unhandledException(e_225059) {
    var buf_225060 = [[]];
    if (!(((e_225059.message).length == 0))) {
    buf_225060[0].push.apply(buf_225060[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_225060[0].push.apply(buf_225060[0], e_225059.message);;
    }
    else {
    buf_225060[0].push.apply(buf_225060[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_225060[0].push.apply(buf_225060[0], makeNimstrLit(" ["));;
    add_167211(buf_225060, 0, e_225059.name);
    buf_225060[0].push.apply(buf_225060[0], makeNimstrLit("]\x0A"));;
    var cbuf_230201 = toJSStr(buf_225060[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_230201);
  }
  else {
    throw cbuf_230201;
  }
  

  
}
function raiseIndexError(i_250047, a_250048, b_250049) {
    var Tmp1;

    if ((b_250049 < a_250048)) {
    Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_250047)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_250048)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_250049)+"") || []);
    }
    
    raiseException({message: nimCopy(null, Tmp1, NTI113), parent: null, m_type: NTI6849, name: null, trace: [], up: null}, "IndexDefect");

  
}
function toFloat_26659(i_26661) {
  var result_26662 = 0.0;

    result_26662 = i_26661;

  return result_26662;

}
function HEX2F_365648(x_365650, y_365651) {
  var result_365652 = 0.0;

    result_365652 = (toFloat_26659(x_365650) / toFloat_26659(y_365651));

  return result_365652;

}
function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI6837, name: null, trace: [], up: null}, "OverflowDefect");

  
}
function checkOverflowInt(a_270403) {
        if (a_270403 > 2147483647 || a_270403 < -2147483648) raiseOverflow();
  

  
}
function isPointInPolygon(testPoint_13470007, polygPoints_13470009) {
              var Tmp4;
              var Tmp5;
                var Tmp6;

  var result_13470010 = false;

    result_13470010 = false;
    var j_13470016 = ((polygPoints_13470009).length-1);
    L1: do {
      var i_13470081 = 0;
      var p_13470082 = null;
      var i_13480019 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_13480019 < (polygPoints_13470009).length)) break L3;
            i_13470081 = i_13480019;
            p_13470082 = polygPoints_13470009[chckIndx(i_13480019, 0, (polygPoints_13470009).length-1)];
            var lP_13470083 = polygPoints_13470009[chckIndx(j_13470016, 0, (polygPoints_13470009).length-1)];
              if (!(p_13470082.y < testPoint_13470007.y)) Tmp5 = false; else {                Tmp5 = (testPoint_13470007.y <= lP_13470083.y);              }              if (Tmp5) Tmp4 = true; else {                if (!(lP_13470083.y < testPoint_13470007.y)) Tmp6 = false; else {                  Tmp6 = (testPoint_13470007.y <= p_13470082.y);                }                Tmp4 = Tmp6;              }            if (Tmp4) {
            if (((p_13470082.x + (HEX2F_365648(subInt(testPoint_13470007.y, p_13470082.y), subInt(lP_13470083.y, p_13470082.y)) * subInt(lP_13470083.x, p_13470082.x))) < testPoint_13470007.x)) {
            result_13470010 = !(result_13470010);
            }
            
            }
            
            j_13470016 = i_13470081;
            i_13480019 = addInt(i_13480019, 1);
          }
      } while(false);
    } while(false);

  return result_13470010;

}
function nextPowerOfTwo_8165014(x_8165016) {
  var result_8165017 = 0;

    result_8165017 = (x_8165016 - 1);
    result_8165017 = (result_8165017 | (result_8165017 >> 16));
    result_8165017 = (result_8165017 | (result_8165017 >> 8));
    result_8165017 = (result_8165017 | (result_8165017 >> 4));
    result_8165017 = (result_8165017 | (result_8165017 >> 2));
    result_8165017 = (result_8165017 | (result_8165017 >> 1));
    result_8165017 += (1 + ((x_8165016 <= 0) ? 1:0));

  return result_8165017;

}
function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI6835, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}
function slotsNeeded_9360048(count_9360050) {
  var result_9360051 = 0;

    result_9360051 = nextPowerOfTwo_8165014(addInt(divInt(mulInt(count_9360050, 3), 2), 4));

  return result_9360051;

}
function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI6853, name: null, trace: [], up: null}, "RangeDefect");

  
}
function initTable_13705020(initialSize_13705024) {
  var result_13705026 = ({data: [], counter: 0});

    var correctSizeHEX60gensym4_13710001 = slotsNeeded_9360048(chckRange(initialSize_13705024, 0, 2147483647));
    result_13705026.counter = 0;
    result_13705026.data = new Array(chckRange(correctSizeHEX60gensym4_13710001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym4_13710001, 0, 2147483647);++i) {result_13705026.data[i]={Field0: 0, Field1: 0, Field2: null};}
  return result_13705026;

}
function initOrderedTable_13715632(initialSize_13715636) {
  var result_13715638 = ({data: [], counter: 0, first: 0, last: 0});

    var correctSizeHEX60gensym6_13720001 = slotsNeeded_9360048(chckRange(initialSize_13715636, 0, 2147483647));
    result_13715638.counter = 0;
    result_13715638.data = new Array(chckRange(correctSizeHEX60gensym6_13720001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym6_13720001, 0, 2147483647);++i) {result_13715638.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    result_13715638.first = -1;
    result_13715638.last = -1;

  return result_13715638;

}
function initTable_13725632(initialSize_13725636) {
  var result_13725638 = ({data: [], counter: 0});

    var correctSizeHEX60gensym8_13730001 = slotsNeeded_9360048(chckRange(initialSize_13725636, 0, 2147483647));
    result_13725638.counter = 0;
    result_13725638.data = new Array(chckRange(correctSizeHEX60gensym8_13730001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym8_13730001, 0, 2147483647);++i) {result_13725638.data[i]={Field0: 0, Field1: [], Field2: null};}
  return result_13725638;

}
function initOrderedTable_13735632(initialSize_13735636) {
  var result_13735638 = ({data: [], counter: 0, first: 0, last: 0});

    var correctSizeHEX60gensym10_13740001 = slotsNeeded_9360048(chckRange(initialSize_13735636, 0, 2147483647));
    result_13735638.counter = 0;
    result_13735638.data = new Array(chckRange(correctSizeHEX60gensym10_13740001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym10_13740001, 0, 2147483647);++i) {result_13735638.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    result_13735638.first = -1;
    result_13735638.last = -1;

  return result_13735638;

}
function initTable_13745632(initialSize_13745636) {
  var result_13745638 = ({data: [], counter: 0});

    var correctSizeHEX60gensym12_13750001 = slotsNeeded_9360048(chckRange(initialSize_13745636, 0, 2147483647));
    result_13745638.counter = 0;
    result_13745638.data = new Array(chckRange(correctSizeHEX60gensym12_13750001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym12_13750001, 0, 2147483647);++i) {result_13745638.data[i]={Field0: 0, Field1: [], Field2: 0};}
  return result_13745638;

}
function initTable_13755635(initialSize_13755639) {
  var result_13755655 = ({data: [], counter: 0});

    var correctSizeHEX60gensym14_13760001 = slotsNeeded_9360048(chckRange(initialSize_13755639, 0, 2147483647));
    result_13755655.counter = 0;
    result_13755655.data = new Array(chckRange(correctSizeHEX60gensym14_13760001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym14_13760001, 0, 2147483647);++i) {result_13755655.data[i]={Field0: 0, Field1: null, Field2: null};}
  return result_13755655;

}
var platform_13705017 = [null];
var allLinks_13715629 = [initTable_13705020(8)];
var allStreets_13725629 = [initOrderedTable_13715632(8)];
var cachedTiles_13735629 = [initTable_13725632(8)];
var allSectors_13745629 = [initOrderedTable_13735632(8)];
var lastPostfix_13755629 = [initTable_13745632(8)];
var mvStreetGrp_13755630 = [function(){return new H.map.Group()}()];
var ministryArea_13755631 = [null];
var nameArea_13755632 = [makeNimstrLit("Hanau-Russisch")];
var sectorGrp_13765629 = [initTable_13755635(8)];
var cityId_13765630 = [0];
var districtId_13765631 = [0];
var addrDistr_13765632 = [[]];
var addrCity_13765633 = [[]];
var clckLinkId_13765634 = [0];
var postalCode_13765635 = [[]];
var sectName_13765636 = [[]];
var borderDistr_13765638 = [[]];
var map = null;
function initTable_13765864(initialSize_13765868) {
  var result_13765870 = ({data: [], counter: 0});

    var correctSizeHEX60gensym16_13770001 = slotsNeeded_9360048(chckRange(initialSize_13765868, 0, 2147483647));
    result_13765870.counter = 0;
    result_13765870.data = new Array(chckRange(correctSizeHEX60gensym16_13770001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym16_13770001, 0, 2147483647);++i) {result_13765870.data[i]={Field0: 0, Field1: 0, Field2: 0};}
  return result_13765870;

}
function substr_381022(s_381024, first_381025, last_381026) {
  var result_381027 = [];

    var first_381028 = nimMax(first_381025, 0);
    var L_381030 = nimMax(addInt(subInt(nimMin(last_381026, ((s_381024).length-1)), first_381028), 1), 0);
    result_381027 = nimCopy(null, mnewString(chckRange(L_381030, 0, 2147483647)), NTI113);
    L1: do {
      var i_381039 = 0;
      var colontmp__12442693 = 0;
      colontmp__12442693 = subInt(L_381030, 1);
      var res_12442694 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12442694 <= colontmp__12442693)) break L3;
            i_381039 = res_12442694;
            result_381027[chckIndx(i_381039, 0, (result_381027).length-1)] = s_381024[chckIndx(addInt(i_381039, first_381028), 0, (s_381024).length-1)];
            res_12442694 = addInt(res_12442694, 1);
          }
      } while(false);
    } while(false);

  return result_381027;

}
function nsuSplitCharSet(s_8495040, seps_8495042, maxsplit_8495043) {
  var result_8495045 = [];

    result_8495045 = nimCopy(null, [], NTI8500015);
    L1: do {
      var xHEX60gensym60_8500016 = [];
      var lastHEX60gensym29_13965805 = 0;
      var splitsHEX60gensym29_13965806 = maxsplit_8495043;
      L2: do {
          L3: while (true) {
          if (!(lastHEX60gensym29_13965805 <= (s_8495040).length)) break L3;
            var firstHEX60gensym29_13965808 = lastHEX60gensym29_13965805;
            L4: do {
                L5: while (true) {
                if (!((lastHEX60gensym29_13965805 < (s_8495040).length) && !((seps_8495042[s_8495040[chckIndx(lastHEX60gensym29_13965805, 0, (s_8495040).length-1)]] != undefined)))) break L5;
                  lastHEX60gensym29_13965805 = addInt(lastHEX60gensym29_13965805, 1);
                }
            } while(false);
            if ((splitsHEX60gensym29_13965806 == 0)) {
            lastHEX60gensym29_13965805 = (s_8495040).length;
            }
            
            xHEX60gensym60_8500016 = substr_381022(s_8495040, firstHEX60gensym29_13965808, subInt(lastHEX60gensym29_13965805, 1));
            var Tmp6 = nimCopy(null, xHEX60gensym60_8500016, NTI113);
            result_8495045.push(Tmp6);;
            if ((splitsHEX60gensym29_13965806 == 0)) {
            break L2;
            }
            
            splitsHEX60gensym29_13965806 = subInt(splitsHEX60gensym29_13965806, 1);
            lastHEX60gensym29_13965805 = addInt(lastHEX60gensym29_13965805, 1);
          }
      } while(false);
    } while(false);

  return result_8495045;

}
function sysFatal_115418(message_115422) {
    raiseException({message: nimCopy(null, message_115422, NTI113), m_type: NTI6841, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}
function raiseAssert_115414(msg_115416) {
    sysFatal_115418(msg_115416);

  
}
function failedAssertImpl_115480(msg_115482) {
    raiseAssert_115414(msg_115482);

  
}
function substrEq_8325026(s_8325028, pos_8325029, substr_8325030) {
  var result_8325031 = false;

  BeforeRet: do {
    var i_8325033 = 0;
    var length_8325034 = (substr_8325030).length;
    L1: do {
        L2: while (true) {
        if (!(((i_8325033 < length_8325034) && (addInt(pos_8325029, i_8325033) < (s_8325028).length)) && (s_8325028[chckIndx(addInt(pos_8325029, i_8325033), 0, (s_8325028).length-1)] == substr_8325030[chckIndx(i_8325033, 0, (substr_8325030).length-1)]))) break L2;
          i_8325033 = addInt(i_8325033, 1);
        }
    } while(false);
    result_8325031 = (i_8325033 == length_8325034);
    break BeforeRet;
  } while (false);

  return result_8325031;

}
function nsuSplitString(s_8500040, sep_8500041, maxsplit_8500042) {
  var result_8500044 = [];

    if (!((0 < (sep_8500041).length))) {
    failedAssertImpl_115480(makeNimstrLit("strutils.nim(779, 11) `sep.len > 0` "));
    }
    
    result_8500044 = nimCopy(null, [], NTI8520015);
    L1: do {
      var xHEX60gensym64_8520016 = [];
      var lastHEX60gensym33_13965813 = 0;
      var splitsHEX60gensym33_13965814 = maxsplit_8500042;
      L2: do {
          L3: while (true) {
          if (!(lastHEX60gensym33_13965813 <= (s_8500040).length)) break L3;
            var firstHEX60gensym33_13965816 = lastHEX60gensym33_13965813;
            L4: do {
                L5: while (true) {
                if (!((lastHEX60gensym33_13965813 < (s_8500040).length) && !(substrEq_8325026(s_8500040, lastHEX60gensym33_13965813, sep_8500041)))) break L5;
                  lastHEX60gensym33_13965813 = addInt(lastHEX60gensym33_13965813, 1);
                }
            } while(false);
            if ((splitsHEX60gensym33_13965814 == 0)) {
            lastHEX60gensym33_13965813 = (s_8500040).length;
            }
            
            xHEX60gensym64_8520016 = substr_381022(s_8500040, firstHEX60gensym33_13965816, subInt(lastHEX60gensym33_13965813, 1));
            var Tmp6 = nimCopy(null, xHEX60gensym64_8520016, NTI113);
            result_8500044.push(Tmp6);;
            if ((splitsHEX60gensym33_13965814 == 0)) {
            break L2;
            }
            
            splitsHEX60gensym33_13965814 = subInt(splitsHEX60gensym33_13965814, 1);
            lastHEX60gensym33_13965813 = addInt(lastHEX60gensym33_13965813, (sep_8500041).length);
          }
      } while(false);
    } while(false);

  return result_8500044;

}
function initTable_13775633(initialSize_13775637) {
  var result_13775653 = ({data: [], counter: 0});

    var correctSizeHEX60gensym18_13780001 = slotsNeeded_9360048(chckRange(initialSize_13775637, 0, 2147483647));
    result_13775653.counter = 0;
    result_13775653.data = new Array(chckRange(correctSizeHEX60gensym18_13780001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym18_13780001, 0, 2147483647);++i) {result_13775653.data[i]={Field0: 0, Field1: [], Field2: 0};}
  return result_13775653;

}
function imul_9296082(a_9296084, b_9296085) {
  var result_9296086 = 0;

    var mask_9296087 = 65535;
    var aHi_9296096 = (((a_9296084 >>> 0) >>> 16) & mask_9296087);
    var aLo_9296097 = (a_9296084 & mask_9296087);
    var bHi_9296106 = (((b_9296085 >>> 0) >>> 16) & mask_9296087);
    var bLo_9296107 = (b_9296085 & mask_9296087);
    result_9296086 = ((((aLo_9296097 * bLo_9296107) >>> 0) + (((((aHi_9296096 * bLo_9296107) >>> 0) + ((aLo_9296097 * bHi_9296106) >>> 0)) >>> 0) << 16)) >>> 0);

  return result_9296086;

}
function rotl32_9296201(x_9296203, r_9296204) {
  var result_9296205 = 0;

    result_9296205 = ((x_9296203 << r_9296204) | ((x_9296203 >>> 0) >>> subInt(32, r_9296204)));

  return result_9296205;

}
function murmurHash_9296229(x_9296232) {
  var result_9296233 = 0;

  BeforeRet: do {
    var size_9296243 = (x_9296232).length;
    var stepSize_9296245 = 4;
    var n_9296246 = divInt(size_9296243, stepSize_9296245);
    var h1_9296247 = 0;
    var i_9296249 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_9296249 < mulInt(n_9296246, stepSize_9296245))) break L2;
          var k1_9296250 = 0;
          var j_9296251 = stepSize_9296245;
          L3: do {
              L4: while (true) {
              if (!(0 < j_9296251)) break L4;
                j_9296251 = subInt(j_9296251, 1);
                k1_9296250 = ((k1_9296250 << 8) | x_9296232[chckIndx(addInt(i_9296249, j_9296251), 0, (x_9296232).length-1)]);
              }
          } while(false);
          i_9296249 = addInt(i_9296249, stepSize_9296245);
          k1_9296250 = imul_9296082(k1_9296250, 3432918353);
          k1_9296250 = rotl32_9296201(k1_9296250, 15);
          k1_9296250 = imul_9296082(k1_9296250, 461845907);
          h1_9296247 = (h1_9296247 ^ k1_9296250);
          h1_9296247 = rotl32_9296201(h1_9296247, 13);
          h1_9296247 = ((((h1_9296247 * 5) >>> 0) + 3864292196) >>> 0);
        }
    } while(false);
    var k1_9300207 = 0;
    var rem_9300208 = modInt(size_9296243, stepSize_9296245);
    L5: do {
        L6: while (true) {
        if (!(0 < rem_9300208)) break L6;
          rem_9300208 = subInt(rem_9300208, 1);
          k1_9300207 = ((k1_9300207 << 8) | x_9296232[chckIndx(addInt(i_9296249, rem_9300208), 0, (x_9296232).length-1)]);
        }
    } while(false);
    k1_9300207 = imul_9296082(k1_9300207, 3432918353);
    k1_9300207 = rotl32_9296201(k1_9300207, 15);
    k1_9300207 = imul_9296082(k1_9300207, 461845907);
    h1_9296247 = (h1_9296247 ^ k1_9300207);
    h1_9296247 = (h1_9296247 ^ size_9296243);
    h1_9296247 = (h1_9296247 ^ ((h1_9296247 >>> 0) >>> 16));
    h1_9296247 = imul_9296082(h1_9296247, 2246822507);
    h1_9296247 = (h1_9296247 ^ ((h1_9296247 >>> 0) >>> 13));
    h1_9296247 = imul_9296082(h1_9296247, 3266489909);
    h1_9296247 = (h1_9296247 ^ ((h1_9296247 >>> 0) >>> 16));
    result_9296233 = (h1_9296247|0);
    break BeforeRet;
  } while (false);

  return result_9296233;

}
function hash_9335214(x_9335216) {
  var result_9335217 = 0;

    result_9335217 = murmurHash_9296229((x_9335216.slice(0, ((x_9335216).length-1)+1)));

  return result_9335217;

}
function isFilled_9356218(hcode_9356220) {
  var result_9356221 = false;

    result_9356221 = !((hcode_9356220 == 0));

  return result_9356221;

}
function nextTry_9360014(h_9360016, maxHash_9360017) {
  var result_9360018 = 0;

    result_9360018 = (addInt(h_9360016, 1) & maxHash_9360017);

  return result_9360018;

}
function rawGet_13810602(t_13810606, key_13810607, hc_13810608, hc_13810608_Idx) {
            var Tmp3;

  var result_13810609 = 0;

  BeforeRet: do {
    hc_13810608[hc_13810608_Idx] = hash_9335214(key_13810607);
    if ((hc_13810608[hc_13810608_Idx] == 0)) {
    hc_13810608[hc_13810608_Idx] = 314159265;
    }
    
    if (((t_13810606.data).length == 0)) {
    result_13810609 = -1;
    break BeforeRet;
    }
    
    var h_13820138 = (hc_13810608[hc_13810608_Idx] & ((t_13810606.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_9356218(t_13810606.data[chckIndx(h_13820138, 0, (t_13810606.data).length-1)].Field0)) break L2;
            if (!(t_13810606.data[chckIndx(h_13820138, 0, (t_13810606.data).length-1)].Field0 == hc_13810608[hc_13810608_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_13810606.data[chckIndx(h_13820138, 0, (t_13810606.data).length-1)].Field1, key_13810607);            }          if (Tmp3) {
          result_13810609 = h_13820138;
          break BeforeRet;
          }
          
          h_13820138 = nextTry_9360014(h_13820138, ((t_13810606.data).length-1));
        }
    } while(false);
    result_13810609 = subInt(-1, h_13820138);
  } while (false);

  return result_13810609;

}
function mustRehash_13835601(t_13835604) {
  var result_13835605 = false;

    if (!((t_13835604.counter < (t_13835604.data).length))) {
    failedAssertImpl_115480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_13835605 = ((mulInt((t_13835604.data).length, 2) < mulInt(t_13835604.counter, 3)) || (subInt((t_13835604.data).length, t_13835604.counter) < 4));

  return result_13835605;

}
function rawInsert_13861122(t_13861128, data_13861131, data_13861131_Idx, key_13861132, val_13861134, hc_13861135, h_13861136) {
    data_13861131[data_13861131_Idx][chckIndx(h_13861136, 0, (data_13861131[data_13861131_Idx]).length-1)].Field1 = nimCopy(null, key_13861132, NTI113);
    data_13861131[data_13861131_Idx][chckIndx(h_13861136, 0, (data_13861131[data_13861131_Idx]).length-1)].Field2 = val_13861134;
    data_13861131[data_13861131_Idx][chckIndx(h_13861136, 0, (data_13861131[data_13861131_Idx]).length-1)].Field0 = hc_13861135;

  
}
function enlarge_13860161(t_13860167) {
    var n_13860175 = [];
    n_13860175 = new Array(chckRange(mulInt((t_13860167.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_13860167.data).length, 2), 0, 2147483647);++i) {n_13860175[i]={Field0: 0, Field1: [], Field2: 0};}    var Tmp1 = t_13860167.data; t_13860167.data = n_13860175; n_13860175 = Tmp1;    L2: do {
      var i_13860334 = 0;
      var colontmp__13965828 = 0;
      colontmp__13965828 = ((n_13860175).length-1);
      var res_13965829 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_13965829 <= colontmp__13965828)) break L4;
            i_13860334 = res_13965829;
            var eh_13860490 = n_13860175[chckIndx(i_13860334, 0, (n_13860175).length-1)].Field0;
            if (isFilled_9356218(eh_13860490)) {
            var j_13860497 = (eh_13860490 & ((t_13860167.data).length-1));
            L5: do {
                L6: while (true) {
                if (!isFilled_9356218(t_13860167.data[chckIndx(j_13860497, 0, (t_13860167.data).length-1)].Field0)) break L6;
                  j_13860497 = nextTry_9360014(j_13860497, ((t_13860167.data).length-1));
                }
            } while(false);
            rawInsert_13861122(t_13860167, t_13860167, "data", n_13860175[chckIndx(i_13860334, 0, (n_13860175).length-1)].Field1, n_13860175[chckIndx(i_13860334, 0, (n_13860175).length-1)].Field2, eh_13860490, j_13860497);
            }
            
            res_13965829 = addInt(res_13965829, 1);
          }
      } while(false);
    } while(false);

  
}
function rawGetKnownHC_13861629(t_13861633, key_13861634, hc_13861635) {
  var result_13861636 = 0;

  BeforeRet: do {
    if (((t_13861633.data).length == 0)) {
    result_13861636 = -1;
    break BeforeRet;
    }
    
    var h_13865138 = (hc_13861635 & ((t_13861633.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_9356218(t_13861633.data[chckIndx(h_13865138, 0, (t_13861633.data).length-1)].Field0)) break L2;
          if (((t_13861633.data[chckIndx(h_13865138, 0, (t_13861633.data).length-1)].Field0 == hc_13861635) && eqStrings(t_13861633.data[chckIndx(h_13865138, 0, (t_13861633.data).length-1)].Field1, key_13861634))) {
          result_13861636 = h_13865138;
          break BeforeRet;
          }
          
          h_13865138 = nextTry_9360014(h_13865138, ((t_13861633.data).length-1));
        }
    } while(false);
    result_13861636 = subInt(-1, h_13865138);
  } while (false);

  return result_13861636;

}
function HEX5BHEX5DHEX3D_13795348(t_13795354, key_13795355, val_13795357) {
    if (((t_13795354.data).length == 0)) {
    var correctSizeHEX60gensym23_13805001 = slotsNeeded_9360048(32);
    t_13795354.counter = 0;
    t_13795354.data = new Array(chckRange(correctSizeHEX60gensym23_13805001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym23_13805001, 0, 2147483647);++i) {t_13795354.data[i]={Field0: 0, Field1: [], Field2: 0};}    }
    
    var hc_13810601 = [0];
    var index_13820641 = rawGet_13810602(t_13795354, key_13795355, hc_13810601, 0);
    if ((0 <= index_13820641)) {
    t_13795354.data[chckIndx(index_13820641, 0, (t_13795354.data).length-1)].Field2 = val_13795357;
    }
    else {
      if (((t_13795354.data).length == 0)) {
      var correctSizeHEX60gensym28_13830001 = slotsNeeded_9360048(32);
      t_13795354.counter = 0;
      t_13795354.data = new Array(chckRange(correctSizeHEX60gensym28_13830001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym28_13830001, 0, 2147483647);++i) {t_13795354.data[i]={Field0: 0, Field1: [], Field2: 0};}      }
      
      if (mustRehash_13835601(t_13795354)) {
      enlarge_13860161(t_13795354);
      index_13820641 = rawGetKnownHC_13861629(t_13795354, key_13795355, hc_13810601[0]);
      }
      
      index_13820641 = subInt(-1, index_13820641);
      rawInsert_13861122(t_13795354, t_13795354, "data", key_13795355, val_13795357, hc_13810601[0], index_13820641);
      t_13795354.counter = addInt(t_13795354.counter, 1);
    }
    

  
}
function HEX5BHEX5D_13870153(t_13870159, key_13870160) {
  var result_13870162 = null;
  var result_13870162_Idx = 0;

    var hcHEX60gensym22_13870163 = [0];
    var indexHEX60gensym22_13870172 = rawGet_13810602(t_13870159, key_13870160, hcHEX60gensym22_13870163, 0);
    if ((0 <= indexHEX60gensym22_13870172)) {
    result_13870162 = t_13870159.data[chckIndx(indexHEX60gensym22_13870172, 0, (t_13870159.data).length-1)]; result_13870162_Idx = "Field2";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_13870160 || []), parent: null, m_type: NTI6845, name: null, trace: [], up: null}, "KeyError");
    }
    

  return [result_13870162, result_13870162_Idx];

}
function hashWangYi1_9295417(x_9295420) {
  var result_9295421 = 0;

            if (typeof BigInt == 'undefined') {
          result_9295421 = x_9295420; // For Node < 10.4, etc. we do the old identity hash
        } else {          // Otherwise we match the low 32-bits of C/C++ hash
          function hi_xor_lo_js(a, b) {
            const prod = BigInt(a) * BigInt(b);
            const mask = (BigInt(1) << BigInt(64)) - BigInt(1);
            return (prod >> BigInt(64)) ^ (prod & mask);
          }
          const P0  = BigInt(0xa0761d64)<<BigInt(32)|BigInt(0x78bd642f);
          const P1  = BigInt(0xe7037ed1)<<BigInt(32)|BigInt(0xa0b428db);
          const P58 = BigInt(0xeb44acca)<<BigInt(32)|BigInt(0xb455d165)^BigInt(8);
          var res   = hi_xor_lo_js(hi_xor_lo_js(P0, BigInt(x_9295420) ^ P1), P58);
          result_9295421  = Number(res & ((BigInt(1) << BigInt(53)) - BigInt(1)));
        }

  return result_9295421;

}
function hash_9295408(x_9295411) {
  var result_9295412 = 0;

    result_9295412 = hashWangYi1_9295417(x_9295411);

  return result_9295412;

}
function rawGet_13910602(t_13910606, key_13910607, hc_13910608, hc_13910608_Idx) {
            var Tmp3;

  var result_13910609 = 0;

  BeforeRet: do {
    hc_13910608[hc_13910608_Idx] = hash_9295408(key_13910607);
    if ((hc_13910608[hc_13910608_Idx] == 0)) {
    hc_13910608[hc_13910608_Idx] = 314159265;
    }
    
    if (((t_13910606.data).length == 0)) {
    result_13910609 = -1;
    break BeforeRet;
    }
    
    var h_13920138 = (hc_13910608[hc_13910608_Idx] & ((t_13910606.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_9356218(t_13910606.data[chckIndx(h_13920138, 0, (t_13910606.data).length-1)].Field0)) break L2;
            if (!(t_13910606.data[chckIndx(h_13920138, 0, (t_13910606.data).length-1)].Field0 == hc_13910608[hc_13910608_Idx])) Tmp3 = false; else {              Tmp3 = (t_13910606.data[chckIndx(h_13920138, 0, (t_13910606.data).length-1)].Field1 == key_13910607);            }          if (Tmp3) {
          result_13910609 = h_13920138;
          break BeforeRet;
          }
          
          h_13920138 = nextTry_9360014(h_13920138, ((t_13910606.data).length-1));
        }
    } while(false);
    result_13910609 = subInt(-1, h_13920138);
  } while (false);

  return result_13910609;

}
function mustRehash_13935601(t_13935604) {
  var result_13935605 = false;

    if (!((t_13935604.counter < (t_13935604.data).length))) {
    failedAssertImpl_115480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_13935605 = ((mulInt((t_13935604.data).length, 2) < mulInt(t_13935604.counter, 3)) || (subInt((t_13935604.data).length, t_13935604.counter) < 4));

  return result_13935605;

}
function rawInsert_13961122(t_13961128, data_13961131, data_13961131_Idx, key_13961132, val_13961134, hc_13961135, h_13961136) {
    data_13961131[data_13961131_Idx][chckIndx(h_13961136, 0, (data_13961131[data_13961131_Idx]).length-1)].Field1 = key_13961132;
    data_13961131[data_13961131_Idx][chckIndx(h_13961136, 0, (data_13961131[data_13961131_Idx]).length-1)].Field2 = val_13961134;
    data_13961131[data_13961131_Idx][chckIndx(h_13961136, 0, (data_13961131[data_13961131_Idx]).length-1)].Field0 = hc_13961135;

  
}
function enlarge_13960161(t_13960167) {
    var n_13960175 = [];
    n_13960175 = new Array(chckRange(mulInt((t_13960167.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_13960167.data).length, 2), 0, 2147483647);++i) {n_13960175[i]={Field0: 0, Field1: 0, Field2: 0};}    var Tmp1 = t_13960167.data; t_13960167.data = n_13960175; n_13960175 = Tmp1;    L2: do {
      var i_13960334 = 0;
      var colontmp__13965842 = 0;
      colontmp__13965842 = ((n_13960175).length-1);
      var res_13965843 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_13965843 <= colontmp__13965842)) break L4;
            i_13960334 = res_13965843;
            var eh_13960490 = n_13960175[chckIndx(i_13960334, 0, (n_13960175).length-1)].Field0;
            if (isFilled_9356218(eh_13960490)) {
            var j_13960497 = (eh_13960490 & ((t_13960167.data).length-1));
            L5: do {
                L6: while (true) {
                if (!isFilled_9356218(t_13960167.data[chckIndx(j_13960497, 0, (t_13960167.data).length-1)].Field0)) break L6;
                  j_13960497 = nextTry_9360014(j_13960497, ((t_13960167.data).length-1));
                }
            } while(false);
            rawInsert_13961122(t_13960167, t_13960167, "data", n_13960175[chckIndx(i_13960334, 0, (n_13960175).length-1)].Field1, n_13960175[chckIndx(i_13960334, 0, (n_13960175).length-1)].Field2, eh_13960490, j_13960497);
            }
            
            res_13965843 = addInt(res_13965843, 1);
          }
      } while(false);
    } while(false);

  
}
function rawGetKnownHC_13961629(t_13961633, key_13961634, hc_13961635) {
  var result_13961636 = 0;

  BeforeRet: do {
    if (((t_13961633.data).length == 0)) {
    result_13961636 = -1;
    break BeforeRet;
    }
    
    var h_13965138 = (hc_13961635 & ((t_13961633.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_9356218(t_13961633.data[chckIndx(h_13965138, 0, (t_13961633.data).length-1)].Field0)) break L2;
          if (((t_13961633.data[chckIndx(h_13965138, 0, (t_13961633.data).length-1)].Field0 == hc_13961635) && (t_13961633.data[chckIndx(h_13965138, 0, (t_13961633.data).length-1)].Field1 == key_13961634))) {
          result_13961636 = h_13965138;
          break BeforeRet;
          }
          
          h_13965138 = nextTry_9360014(h_13965138, ((t_13961633.data).length-1));
        }
    } while(false);
    result_13961636 = subInt(-1, h_13965138);
  } while (false);

  return result_13961636;

}
function HEX5BHEX5DHEX3D_13895283(t_13895289, key_13895290, val_13895292) {
    if (((t_13895289.data).length == 0)) {
    var correctSizeHEX60gensym43_13905001 = slotsNeeded_9360048(32);
    t_13895289.counter = 0;
    t_13895289.data = new Array(chckRange(correctSizeHEX60gensym43_13905001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym43_13905001, 0, 2147483647);++i) {t_13895289.data[i]={Field0: 0, Field1: 0, Field2: 0};}    }
    
    var hc_13910601 = [0];
    var index_13920639 = rawGet_13910602(t_13895289, key_13895290, hc_13910601, 0);
    if ((0 <= index_13920639)) {
    t_13895289.data[chckIndx(index_13920639, 0, (t_13895289.data).length-1)].Field2 = val_13895292;
    }
    else {
      if (((t_13895289.data).length == 0)) {
      var correctSizeHEX60gensym48_13930001 = slotsNeeded_9360048(32);
      t_13895289.counter = 0;
      t_13895289.data = new Array(chckRange(correctSizeHEX60gensym48_13930001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym48_13930001, 0, 2147483647);++i) {t_13895289.data[i]={Field0: 0, Field1: 0, Field2: 0};}      }
      
      if (mustRehash_13935601(t_13895289)) {
      enlarge_13960161(t_13895289);
      index_13920639 = rawGetKnownHC_13961629(t_13895289, key_13895290, hc_13910601[0]);
      }
      
      index_13920639 = subInt(-1, index_13920639);
      rawInsert_13961122(t_13895289, t_13895289, "data", key_13895290, val_13895292, hc_13910601[0], index_13920639);
      t_13895289.counter = addInt(t_13895289.counter, 1);
    }
    

  
}
function HEX21HEX26_9282270(h_9282272, val_9282273) {
  var result_9282274 = 0;

    var h_9282275 = (h_9282272 >>> 0);
    var val_9282276 = (val_9282273 >>> 0);
    var res_9282277 = ((h_9282275 + val_9282276) >>> 0);
    res_9282277 = ((res_9282277 + (res_9282277 << 10)) >>> 0);
    res_9282277 = (res_9282277 ^ ((res_9282277 >>> 0) >>> 6));
    result_9282274 = (res_9282277|0);

  return result_9282274;

}
function binarySearch_1844190(c_1844192, tab_1844194, len_1844195, stride_1844196) {
      var Tmp3;

  var result_1844197 = 0;

  BeforeRet: do {
    var n_1844198 = len_1844195;
    var t_1844200 = 0;
    L1: do {
        L2: while (true) {
        if (!(1 < n_1844198)) break L2;
          var m_1845001 = divInt(n_1844198, 2);
          var p_1845002 = addInt(t_1844200, mulInt(m_1845001, stride_1844196));
          if ((tab_1844194[chckIndx(p_1845002, 0, (tab_1844194).length-1)] <= ((c_1844192)|0))) {
          t_1844200 = p_1845002;
          n_1844198 = subInt(n_1844198, m_1845001);
          }
          else {
            n_1844198 = m_1845001;
          }
          
        }
    } while(false);
      if (!!((n_1844198 == 0))) Tmp3 = false; else {        Tmp3 = (tab_1844194[chckIndx(t_1844200, 0, (tab_1844194).length-1)] <= ((c_1844192)|0));      }    if (Tmp3) {
    result_1844197 = t_1844200;
    break BeforeRet;
    }
    
    result_1844197 = -1;
    break BeforeRet;
  } while (false);

  return result_1844197;

}
function nuctoLower(c_1860016) {
      var Tmp1;
      var Tmp2;
      var Tmp3;

  var result_1860017 = 0;

  BeforeRet: do {
    var c_1860018 = c_1860016;
    var p_1860042 = binarySearch_1844190(c_1860018, toLowerRanges_1840223, 45, 3);
      if (!(0 <= p_1860042)) Tmp2 = false; else {        Tmp2 = (toLowerRanges_1840223[chckIndx(p_1860042, 0, (toLowerRanges_1840223).length-1)] <= ((c_1860018)|0));      }      if (!Tmp2) Tmp1 = false; else {        Tmp1 = (((c_1860018)|0) <= toLowerRanges_1840223[chckIndx(addInt(p_1860042, 1), 0, (toLowerRanges_1840223).length-1)]);      }    if (Tmp1) {
    result_1860017 = ((subInt(addInt(((c_1860018)|0), toLowerRanges_1840223[chckIndx(addInt(p_1860042, 2), 0, (toLowerRanges_1840223).length-1)]), 500))|0);
    break BeforeRet;
    }
    
    p_1860042 = binarySearch_1844190(c_1860018, toLowerSinglets_1841470, 610, 2);
      if (!(0 <= p_1860042)) Tmp3 = false; else {        Tmp3 = (((c_1860018)|0) == toLowerSinglets_1841470[chckIndx(p_1860042, 0, (toLowerSinglets_1841470).length-1)]);      }    if (Tmp3) {
    result_1860017 = ((subInt(addInt(((c_1860018)|0), toLowerSinglets_1841470[chckIndx(addInt(p_1860042, 1), 0, (toLowerSinglets_1841470).length-1)]), 500))|0);
    break BeforeRet;
    }
    
    result_1860017 = c_1860018;
    break BeforeRet;
  } while (false);

  return result_1860017;

}
function HEX3CHEX3DHEX25_4674(x_4676, y_4677) {
  var result_4678 = false;

    result_4678 = ((x_4676 >>> 0) <= (y_4677 >>> 0));

  return result_4678;

}
function nuctoLowerStr(s_2910216) {
  var result_2910217 = [];

    result_2910217 = nimCopy(null, mnewString(chckRange((s_2910216).length, 0, 2147483647)), NTI113);
    var iHEX60gensym393_2915002 = 0;
    var resultIndexHEX60gensym393_2915004 = 0;
    var runeHEX60gensym393_2915005 = 0;
    L1: do {
        L2: while (true) {
        if (!(iHEX60gensym393_2915002 < (s_2910216).length)) break L2;
          if ((s_2910216[chckIndx(iHEX60gensym393_2915002, 0, (s_2910216).length-1)] <= 127)) {
          runeHEX60gensym393_2915005 = chckRange(s_2910216[chckIndx(iHEX60gensym393_2915002, 0, (s_2910216).length-1)], -2147483648, 2147483647);
          iHEX60gensym393_2915002 = addInt(iHEX60gensym393_2915002, 1);
          }
          else {
          if ((((s_2910216[chckIndx(iHEX60gensym393_2915002, 0, (s_2910216).length-1)] >>> 0) >>> 5) == 6)) {
          if ((iHEX60gensym393_2915002 <= subInt((s_2910216).length, 2))) {
          runeHEX60gensym393_2915005 = chckRange((((s_2910216[chckIndx(iHEX60gensym393_2915002, 0, (s_2910216).length-1)] & 31) << 6) | (s_2910216[chckIndx(addInt(iHEX60gensym393_2915002, 1), 0, (s_2910216).length-1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym393_2915002 = addInt(iHEX60gensym393_2915002, 2);
          }
          else {
            runeHEX60gensym393_2915005 = 65533;
            iHEX60gensym393_2915002 = addInt(iHEX60gensym393_2915002, 1);
          }
          
          }
          else {
          if ((((s_2910216[chckIndx(iHEX60gensym393_2915002, 0, (s_2910216).length-1)] >>> 0) >>> 4) == 14)) {
          if ((iHEX60gensym393_2915002 <= subInt((s_2910216).length, 3))) {
          runeHEX60gensym393_2915005 = chckRange(((((s_2910216[chckIndx(iHEX60gensym393_2915002, 0, (s_2910216).length-1)] & 15) << 12) | ((s_2910216[chckIndx(addInt(iHEX60gensym393_2915002, 1), 0, (s_2910216).length-1)] & 63) << 6)) | (s_2910216[chckIndx(addInt(iHEX60gensym393_2915002, 2), 0, (s_2910216).length-1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym393_2915002 = addInt(iHEX60gensym393_2915002, 3);
          }
          else {
            runeHEX60gensym393_2915005 = 65533;
            iHEX60gensym393_2915002 = addInt(iHEX60gensym393_2915002, 1);
          }
          
          }
          else {
          if ((((s_2910216[chckIndx(iHEX60gensym393_2915002, 0, (s_2910216).length-1)] >>> 0) >>> 3) == 30)) {
          if ((iHEX60gensym393_2915002 <= subInt((s_2910216).length, 4))) {
          runeHEX60gensym393_2915005 = chckRange((((((s_2910216[chckIndx(iHEX60gensym393_2915002, 0, (s_2910216).length-1)] & 7) << 18) | ((s_2910216[chckIndx(addInt(iHEX60gensym393_2915002, 1), 0, (s_2910216).length-1)] & 63) << 12)) | ((s_2910216[chckIndx(addInt(iHEX60gensym393_2915002, 2), 0, (s_2910216).length-1)] & 63) << 6)) | (s_2910216[chckIndx(addInt(iHEX60gensym393_2915002, 3), 0, (s_2910216).length-1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym393_2915002 = addInt(iHEX60gensym393_2915002, 4);
          }
          else {
            runeHEX60gensym393_2915005 = 65533;
            iHEX60gensym393_2915002 = addInt(iHEX60gensym393_2915002, 1);
          }
          
          }
          else {
          if ((((s_2910216[chckIndx(iHEX60gensym393_2915002, 0, (s_2910216).length-1)] >>> 0) >>> 2) == 62)) {
          if ((iHEX60gensym393_2915002 <= subInt((s_2910216).length, 5))) {
          runeHEX60gensym393_2915005 = chckRange(((((((s_2910216[chckIndx(iHEX60gensym393_2915002, 0, (s_2910216).length-1)] & 3) << 24) | ((s_2910216[chckIndx(addInt(iHEX60gensym393_2915002, 1), 0, (s_2910216).length-1)] & 63) << 18)) | ((s_2910216[chckIndx(addInt(iHEX60gensym393_2915002, 2), 0, (s_2910216).length-1)] & 63) << 12)) | ((s_2910216[chckIndx(addInt(iHEX60gensym393_2915002, 3), 0, (s_2910216).length-1)] & 63) << 6)) | (s_2910216[chckIndx(addInt(iHEX60gensym393_2915002, 4), 0, (s_2910216).length-1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym393_2915002 = addInt(iHEX60gensym393_2915002, 5);
          }
          else {
            runeHEX60gensym393_2915005 = 65533;
            iHEX60gensym393_2915002 = addInt(iHEX60gensym393_2915002, 1);
          }
          
          }
          else {
          if ((((s_2910216[chckIndx(iHEX60gensym393_2915002, 0, (s_2910216).length-1)] >>> 0) >>> 1) == 126)) {
          if ((iHEX60gensym393_2915002 <= subInt((s_2910216).length, 6))) {
          runeHEX60gensym393_2915005 = chckRange((((((((s_2910216[chckIndx(iHEX60gensym393_2915002, 0, (s_2910216).length-1)] & 1) << 30) | ((s_2910216[chckIndx(addInt(iHEX60gensym393_2915002, 1), 0, (s_2910216).length-1)] & 63) << 24)) | ((s_2910216[chckIndx(addInt(iHEX60gensym393_2915002, 2), 0, (s_2910216).length-1)] & 63) << 18)) | ((s_2910216[chckIndx(addInt(iHEX60gensym393_2915002, 3), 0, (s_2910216).length-1)] & 63) << 12)) | ((s_2910216[chckIndx(addInt(iHEX60gensym393_2915002, 4), 0, (s_2910216).length-1)] & 63) << 6)) | (s_2910216[chckIndx(addInt(iHEX60gensym393_2915002, 5), 0, (s_2910216).length-1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym393_2915002 = addInt(iHEX60gensym393_2915002, 6);
          }
          else {
            runeHEX60gensym393_2915005 = 65533;
            iHEX60gensym393_2915002 = addInt(iHEX60gensym393_2915002, 1);
          }
          
          }
          else {
            runeHEX60gensym393_2915005 = chckRange(s_2910216[chckIndx(iHEX60gensym393_2915002, 0, (s_2910216).length-1)], -2147483648, 2147483647);
            iHEX60gensym393_2915002 = addInt(iHEX60gensym393_2915002, 1);
          }
          }}}}}
          runeHEX60gensym393_2915005 = nuctoLower(runeHEX60gensym393_2915005);
          var iHEX60gensym443_3165001 = runeHEX60gensym393_2915005;
          if (HEX3CHEX3DHEX25_4674(iHEX60gensym443_3165001, 127)) {
          (result_2910217.length = chckRange(addInt(resultIndexHEX60gensym393_2915004, 1), 0, 2147483647));
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 0), 0, (result_2910217).length-1)] = chckRange(iHEX60gensym443_3165001, 0, 255);
          resultIndexHEX60gensym393_2915004 = addInt(resultIndexHEX60gensym393_2915004, 1);
          }
          else {
          if (HEX3CHEX3DHEX25_4674(iHEX60gensym443_3165001, 2047)) {
          (result_2910217.length = chckRange(addInt(resultIndexHEX60gensym393_2915004, 2), 0, 2147483647));
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 0), 0, (result_2910217).length-1)] = chckRange(((iHEX60gensym443_3165001 >> 6) | 192), 0, 255);
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 1), 0, (result_2910217).length-1)] = chckRange(((iHEX60gensym443_3165001 & 63) | 128), 0, 255);
          resultIndexHEX60gensym393_2915004 = addInt(resultIndexHEX60gensym393_2915004, 2);
          }
          else {
          if (HEX3CHEX3DHEX25_4674(iHEX60gensym443_3165001, 65535)) {
          (result_2910217.length = chckRange(addInt(resultIndexHEX60gensym393_2915004, 3), 0, 2147483647));
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 0), 0, (result_2910217).length-1)] = chckRange(((iHEX60gensym443_3165001 >> 12) | 224), 0, 255);
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 1), 0, (result_2910217).length-1)] = chckRange((((iHEX60gensym443_3165001 >> 6) & 63) | 128), 0, 255);
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 2), 0, (result_2910217).length-1)] = chckRange(((iHEX60gensym443_3165001 & 63) | 128), 0, 255);
          resultIndexHEX60gensym393_2915004 = addInt(resultIndexHEX60gensym393_2915004, 3);
          }
          else {
          if (HEX3CHEX3DHEX25_4674(iHEX60gensym443_3165001, 2097151)) {
          (result_2910217.length = chckRange(addInt(resultIndexHEX60gensym393_2915004, 4), 0, 2147483647));
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 0), 0, (result_2910217).length-1)] = chckRange(((iHEX60gensym443_3165001 >> 18) | 240), 0, 255);
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 1), 0, (result_2910217).length-1)] = chckRange((((iHEX60gensym443_3165001 >> 12) & 63) | 128), 0, 255);
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 2), 0, (result_2910217).length-1)] = chckRange((((iHEX60gensym443_3165001 >> 6) & 63) | 128), 0, 255);
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 3), 0, (result_2910217).length-1)] = chckRange(((iHEX60gensym443_3165001 & 63) | 128), 0, 255);
          resultIndexHEX60gensym393_2915004 = addInt(resultIndexHEX60gensym393_2915004, 4);
          }
          else {
          if (HEX3CHEX3DHEX25_4674(iHEX60gensym443_3165001, 67108863)) {
          (result_2910217.length = chckRange(addInt(resultIndexHEX60gensym393_2915004, 5), 0, 2147483647));
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 0), 0, (result_2910217).length-1)] = chckRange(((iHEX60gensym443_3165001 >> 24) | 248), 0, 255);
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 1), 0, (result_2910217).length-1)] = chckRange((((iHEX60gensym443_3165001 >> 18) & 63) | 128), 0, 255);
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 2), 0, (result_2910217).length-1)] = chckRange((((iHEX60gensym443_3165001 >> 12) & 63) | 128), 0, 255);
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 3), 0, (result_2910217).length-1)] = chckRange((((iHEX60gensym443_3165001 >> 6) & 63) | 128), 0, 255);
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 4), 0, (result_2910217).length-1)] = chckRange(((iHEX60gensym443_3165001 & 63) | 128), 0, 255);
          resultIndexHEX60gensym393_2915004 = addInt(resultIndexHEX60gensym393_2915004, 5);
          }
          else {
          if (HEX3CHEX3DHEX25_4674(iHEX60gensym443_3165001, 2147483647)) {
          (result_2910217.length = chckRange(addInt(resultIndexHEX60gensym393_2915004, 6), 0, 2147483647));
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 0), 0, (result_2910217).length-1)] = chckRange(((iHEX60gensym443_3165001 >> 30) | 252), 0, 255);
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 1), 0, (result_2910217).length-1)] = chckRange((((iHEX60gensym443_3165001 >> 24) & 63) | 128), 0, 255);
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 2), 0, (result_2910217).length-1)] = chckRange((((iHEX60gensym443_3165001 >> 18) & 63) | 128), 0, 255);
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 3), 0, (result_2910217).length-1)] = chckRange((((iHEX60gensym443_3165001 >> 12) & 63) | 128), 0, 255);
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 4), 0, (result_2910217).length-1)] = chckRange((((iHEX60gensym443_3165001 >> 6) & 63) | 128), 0, 255);
          result_2910217[chckIndx(addInt(resultIndexHEX60gensym393_2915004, 5), 0, (result_2910217).length-1)] = chckRange(((iHEX60gensym443_3165001 & 63) | 128), 0, 255);
          resultIndexHEX60gensym393_2915004 = addInt(resultIndexHEX60gensym393_2915004, 6);
          }
          else {
          }
          }}}}}
        }
    } while(false);

  return result_2910217;

}
function HEX3DHEX3D_1840064(a_1840066, b_1840067) {
  var result_1840068 = false;

  BeforeRet: do {
    result_1840068 = (((a_1840066)|0) == ((b_1840067)|0));
    break BeforeRet;
  } while (false);

  return result_1840068;

}
function find_6725208(a_6725212, item_6725213) {
  var result_6725214 = 0;

  BeforeRet: do {
    result_6725214 = 0;
    L1: do {
      var i_6725247 = null;
      var i_6725247_Idx = 0;
      var i_13965978 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_13965978 < (a_6725212).length)) break L3;
            i_6725247 = a_6725212; i_6725247_Idx = chckIndx(i_13965978, 0, (a_6725212).length-1);
            if (HEX3DHEX3D_1840064(i_6725247[i_6725247_Idx], item_6725213)) {
            break BeforeRet;
            }
            
            result_6725214 = addInt(result_6725214, 1);
            i_13965978 = addInt(i_13965978, 1);
          }
      } while(false);
    } while(false);
    result_6725214 = -1;
  } while (false);

  return result_6725214;

}
function contains_6725201(a_6725205, item_6725206) {
  var result_6725207 = false;

  BeforeRet: do {
    result_6725207 = (0 <= find_6725208(a_6725205, item_6725206));
    break BeforeRet;
  } while (false);

  return result_6725207;

}
function HEX5BHEX5D_1825283(s_1825287, x_1825289) {
  var result_1825290 = [];

    var a_1825401 = x_1825289.a;
    var L_1825601 = addInt(subInt(x_1825289.b, a_1825401), 1);
    result_1825290 = nimCopy(null, mnewString(chckRange(L_1825601, 0, 2147483647)), NTI113);
    L1: do {
      var i_1825609 = 0;
      var i_13965985 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_13965985 < L_1825601)) break L3;
            i_1825609 = i_13965985;
            result_1825290[chckIndx(i_1825609, 0, (result_1825290).length-1)] = s_1825287[chckIndx(addInt(i_1825609, a_1825401), 0, (s_1825287).length-1)];
            i_13965985 = addInt(i_13965985, 1);
          }
      } while(false);
    } while(false);

  return result_1825290;

}
function HEX2EHEX2E_1825220(a_1825225, b_1825227) {
  var result_1825229 = ({a: 0, b: 0});

    nimCopy(result_1825229, {a: a_1825225, b: b_1825227}, NTI946734);

  return result_1825229;

}
function nucStrip(s_7015040, leading_7015041, trailing_7015042, runes_7015044) {
  var result_7015045 = [];

    var sI_7015047 = 0;
    var eI_7015048 = subInt((s_7015040).length, 1);
    if (leading_7015041) {
    var i_7015050 = 0;
    var xI_7015051 = 0;
    var rune_7015052 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_7015050 < (s_7015040).length)) break L2;
          xI_7015051 = i_7015050;
          if ((s_7015040[chckIndx(i_7015050, 0, (s_7015040).length-1)] <= 127)) {
          rune_7015052 = chckRange(s_7015040[chckIndx(i_7015050, 0, (s_7015040).length-1)], -2147483648, 2147483647);
          i_7015050 = addInt(i_7015050, 1);
          }
          else {
          if ((((s_7015040[chckIndx(i_7015050, 0, (s_7015040).length-1)] >>> 0) >>> 5) == 6)) {
          if ((i_7015050 <= subInt((s_7015040).length, 2))) {
          rune_7015052 = chckRange((((s_7015040[chckIndx(i_7015050, 0, (s_7015040).length-1)] & 31) << 6) | (s_7015040[chckIndx(addInt(i_7015050, 1), 0, (s_7015040).length-1)] & 63)), -2147483648, 2147483647);
          i_7015050 = addInt(i_7015050, 2);
          }
          else {
            rune_7015052 = 65533;
            i_7015050 = addInt(i_7015050, 1);
          }
          
          }
          else {
          if ((((s_7015040[chckIndx(i_7015050, 0, (s_7015040).length-1)] >>> 0) >>> 4) == 14)) {
          if ((i_7015050 <= subInt((s_7015040).length, 3))) {
          rune_7015052 = chckRange(((((s_7015040[chckIndx(i_7015050, 0, (s_7015040).length-1)] & 15) << 12) | ((s_7015040[chckIndx(addInt(i_7015050, 1), 0, (s_7015040).length-1)] & 63) << 6)) | (s_7015040[chckIndx(addInt(i_7015050, 2), 0, (s_7015040).length-1)] & 63)), -2147483648, 2147483647);
          i_7015050 = addInt(i_7015050, 3);
          }
          else {
            rune_7015052 = 65533;
            i_7015050 = addInt(i_7015050, 1);
          }
          
          }
          else {
          if ((((s_7015040[chckIndx(i_7015050, 0, (s_7015040).length-1)] >>> 0) >>> 3) == 30)) {
          if ((i_7015050 <= subInt((s_7015040).length, 4))) {
          rune_7015052 = chckRange((((((s_7015040[chckIndx(i_7015050, 0, (s_7015040).length-1)] & 7) << 18) | ((s_7015040[chckIndx(addInt(i_7015050, 1), 0, (s_7015040).length-1)] & 63) << 12)) | ((s_7015040[chckIndx(addInt(i_7015050, 2), 0, (s_7015040).length-1)] & 63) << 6)) | (s_7015040[chckIndx(addInt(i_7015050, 3), 0, (s_7015040).length-1)] & 63)), -2147483648, 2147483647);
          i_7015050 = addInt(i_7015050, 4);
          }
          else {
            rune_7015052 = 65533;
            i_7015050 = addInt(i_7015050, 1);
          }
          
          }
          else {
          if ((((s_7015040[chckIndx(i_7015050, 0, (s_7015040).length-1)] >>> 0) >>> 2) == 62)) {
          if ((i_7015050 <= subInt((s_7015040).length, 5))) {
          rune_7015052 = chckRange(((((((s_7015040[chckIndx(i_7015050, 0, (s_7015040).length-1)] & 3) << 24) | ((s_7015040[chckIndx(addInt(i_7015050, 1), 0, (s_7015040).length-1)] & 63) << 18)) | ((s_7015040[chckIndx(addInt(i_7015050, 2), 0, (s_7015040).length-1)] & 63) << 12)) | ((s_7015040[chckIndx(addInt(i_7015050, 3), 0, (s_7015040).length-1)] & 63) << 6)) | (s_7015040[chckIndx(addInt(i_7015050, 4), 0, (s_7015040).length-1)] & 63)), -2147483648, 2147483647);
          i_7015050 = addInt(i_7015050, 5);
          }
          else {
            rune_7015052 = 65533;
            i_7015050 = addInt(i_7015050, 1);
          }
          
          }
          else {
          if ((((s_7015040[chckIndx(i_7015050, 0, (s_7015040).length-1)] >>> 0) >>> 1) == 126)) {
          if ((i_7015050 <= subInt((s_7015040).length, 6))) {
          rune_7015052 = chckRange((((((((s_7015040[chckIndx(i_7015050, 0, (s_7015040).length-1)] & 1) << 30) | ((s_7015040[chckIndx(addInt(i_7015050, 1), 0, (s_7015040).length-1)] & 63) << 24)) | ((s_7015040[chckIndx(addInt(i_7015050, 2), 0, (s_7015040).length-1)] & 63) << 18)) | ((s_7015040[chckIndx(addInt(i_7015050, 3), 0, (s_7015040).length-1)] & 63) << 12)) | ((s_7015040[chckIndx(addInt(i_7015050, 4), 0, (s_7015040).length-1)] & 63) << 6)) | (s_7015040[chckIndx(addInt(i_7015050, 5), 0, (s_7015040).length-1)] & 63)), -2147483648, 2147483647);
          i_7015050 = addInt(i_7015050, 6);
          }
          else {
            rune_7015052 = 65533;
            i_7015050 = addInt(i_7015050, 1);
          }
          
          }
          else {
            rune_7015052 = chckRange(s_7015040[chckIndx(i_7015050, 0, (s_7015040).length-1)], -2147483648, 2147483647);
            i_7015050 = addInt(i_7015050, 1);
          }
          }}}}}
          sI_7015047 = i_7015050;
          if (!(contains_6725201(runes_7015044, rune_7015052))) {
          sI_7015047 = xI_7015051;
          break L1;
          }
          
        }
    } while(false);
    }
    
    if (trailing_7015042) {
    var i_7260213 = eI_7015048;
    var xI_7260214 = 0;
    var rune_7260215 = 0;
    L3: do {
        L4: while (true) {
        if (!(0 <= i_7260213)) break L4;
          xI_7260214 = i_7260213;
          if ((s_7015040[chckIndx(xI_7260214, 0, (s_7015040).length-1)] <= 127)) {
          rune_7260215 = chckRange(s_7015040[chckIndx(xI_7260214, 0, (s_7015040).length-1)], -2147483648, 2147483647);
          xI_7260214 = addInt(xI_7260214, 1);
          }
          else {
          if ((((s_7015040[chckIndx(xI_7260214, 0, (s_7015040).length-1)] >>> 0) >>> 5) == 6)) {
          if ((xI_7260214 <= subInt((s_7015040).length, 2))) {
          rune_7260215 = chckRange((((s_7015040[chckIndx(xI_7260214, 0, (s_7015040).length-1)] & 31) << 6) | (s_7015040[chckIndx(addInt(xI_7260214, 1), 0, (s_7015040).length-1)] & 63)), -2147483648, 2147483647);
          xI_7260214 = addInt(xI_7260214, 2);
          }
          else {
            rune_7260215 = 65533;
            xI_7260214 = addInt(xI_7260214, 1);
          }
          
          }
          else {
          if ((((s_7015040[chckIndx(xI_7260214, 0, (s_7015040).length-1)] >>> 0) >>> 4) == 14)) {
          if ((xI_7260214 <= subInt((s_7015040).length, 3))) {
          rune_7260215 = chckRange(((((s_7015040[chckIndx(xI_7260214, 0, (s_7015040).length-1)] & 15) << 12) | ((s_7015040[chckIndx(addInt(xI_7260214, 1), 0, (s_7015040).length-1)] & 63) << 6)) | (s_7015040[chckIndx(addInt(xI_7260214, 2), 0, (s_7015040).length-1)] & 63)), -2147483648, 2147483647);
          xI_7260214 = addInt(xI_7260214, 3);
          }
          else {
            rune_7260215 = 65533;
            xI_7260214 = addInt(xI_7260214, 1);
          }
          
          }
          else {
          if ((((s_7015040[chckIndx(xI_7260214, 0, (s_7015040).length-1)] >>> 0) >>> 3) == 30)) {
          if ((xI_7260214 <= subInt((s_7015040).length, 4))) {
          rune_7260215 = chckRange((((((s_7015040[chckIndx(xI_7260214, 0, (s_7015040).length-1)] & 7) << 18) | ((s_7015040[chckIndx(addInt(xI_7260214, 1), 0, (s_7015040).length-1)] & 63) << 12)) | ((s_7015040[chckIndx(addInt(xI_7260214, 2), 0, (s_7015040).length-1)] & 63) << 6)) | (s_7015040[chckIndx(addInt(xI_7260214, 3), 0, (s_7015040).length-1)] & 63)), -2147483648, 2147483647);
          xI_7260214 = addInt(xI_7260214, 4);
          }
          else {
            rune_7260215 = 65533;
            xI_7260214 = addInt(xI_7260214, 1);
          }
          
          }
          else {
          if ((((s_7015040[chckIndx(xI_7260214, 0, (s_7015040).length-1)] >>> 0) >>> 2) == 62)) {
          if ((xI_7260214 <= subInt((s_7015040).length, 5))) {
          rune_7260215 = chckRange(((((((s_7015040[chckIndx(xI_7260214, 0, (s_7015040).length-1)] & 3) << 24) | ((s_7015040[chckIndx(addInt(xI_7260214, 1), 0, (s_7015040).length-1)] & 63) << 18)) | ((s_7015040[chckIndx(addInt(xI_7260214, 2), 0, (s_7015040).length-1)] & 63) << 12)) | ((s_7015040[chckIndx(addInt(xI_7260214, 3), 0, (s_7015040).length-1)] & 63) << 6)) | (s_7015040[chckIndx(addInt(xI_7260214, 4), 0, (s_7015040).length-1)] & 63)), -2147483648, 2147483647);
          xI_7260214 = addInt(xI_7260214, 5);
          }
          else {
            rune_7260215 = 65533;
            xI_7260214 = addInt(xI_7260214, 1);
          }
          
          }
          else {
          if ((((s_7015040[chckIndx(xI_7260214, 0, (s_7015040).length-1)] >>> 0) >>> 1) == 126)) {
          if ((xI_7260214 <= subInt((s_7015040).length, 6))) {
          rune_7260215 = chckRange((((((((s_7015040[chckIndx(xI_7260214, 0, (s_7015040).length-1)] & 1) << 30) | ((s_7015040[chckIndx(addInt(xI_7260214, 1), 0, (s_7015040).length-1)] & 63) << 24)) | ((s_7015040[chckIndx(addInt(xI_7260214, 2), 0, (s_7015040).length-1)] & 63) << 18)) | ((s_7015040[chckIndx(addInt(xI_7260214, 3), 0, (s_7015040).length-1)] & 63) << 12)) | ((s_7015040[chckIndx(addInt(xI_7260214, 4), 0, (s_7015040).length-1)] & 63) << 6)) | (s_7015040[chckIndx(addInt(xI_7260214, 5), 0, (s_7015040).length-1)] & 63)), -2147483648, 2147483647);
          xI_7260214 = addInt(xI_7260214, 6);
          }
          else {
            rune_7260215 = 65533;
            xI_7260214 = addInt(xI_7260214, 1);
          }
          
          }
          else {
            rune_7260215 = chckRange(s_7015040[chckIndx(xI_7260214, 0, (s_7015040).length-1)], -2147483648, 2147483647);
            xI_7260214 = addInt(xI_7260214, 1);
          }
          }}}}}
          var yI_7510207 = subInt(i_7260213, 1);
          L5: do {
              L6: while (true) {
              if (!(0 <= yI_7510207)) break L6;
                var yIend_7515001 = yI_7510207;
                var pRune_7515002 = 0;
                if ((s_7015040[chckIndx(yIend_7515001, 0, (s_7015040).length-1)] <= 127)) {
                pRune_7515002 = chckRange(s_7015040[chckIndx(yIend_7515001, 0, (s_7015040).length-1)], -2147483648, 2147483647);
                yIend_7515001 = addInt(yIend_7515001, 1);
                }
                else {
                if ((((s_7015040[chckIndx(yIend_7515001, 0, (s_7015040).length-1)] >>> 0) >>> 5) == 6)) {
                if ((yIend_7515001 <= subInt((s_7015040).length, 2))) {
                pRune_7515002 = chckRange((((s_7015040[chckIndx(yIend_7515001, 0, (s_7015040).length-1)] & 31) << 6) | (s_7015040[chckIndx(addInt(yIend_7515001, 1), 0, (s_7015040).length-1)] & 63)), -2147483648, 2147483647);
                yIend_7515001 = addInt(yIend_7515001, 2);
                }
                else {
                  pRune_7515002 = 65533;
                  yIend_7515001 = addInt(yIend_7515001, 1);
                }
                
                }
                else {
                if ((((s_7015040[chckIndx(yIend_7515001, 0, (s_7015040).length-1)] >>> 0) >>> 4) == 14)) {
                if ((yIend_7515001 <= subInt((s_7015040).length, 3))) {
                pRune_7515002 = chckRange(((((s_7015040[chckIndx(yIend_7515001, 0, (s_7015040).length-1)] & 15) << 12) | ((s_7015040[chckIndx(addInt(yIend_7515001, 1), 0, (s_7015040).length-1)] & 63) << 6)) | (s_7015040[chckIndx(addInt(yIend_7515001, 2), 0, (s_7015040).length-1)] & 63)), -2147483648, 2147483647);
                yIend_7515001 = addInt(yIend_7515001, 3);
                }
                else {
                  pRune_7515002 = 65533;
                  yIend_7515001 = addInt(yIend_7515001, 1);
                }
                
                }
                else {
                if ((((s_7015040[chckIndx(yIend_7515001, 0, (s_7015040).length-1)] >>> 0) >>> 3) == 30)) {
                if ((yIend_7515001 <= subInt((s_7015040).length, 4))) {
                pRune_7515002 = chckRange((((((s_7015040[chckIndx(yIend_7515001, 0, (s_7015040).length-1)] & 7) << 18) | ((s_7015040[chckIndx(addInt(yIend_7515001, 1), 0, (s_7015040).length-1)] & 63) << 12)) | ((s_7015040[chckIndx(addInt(yIend_7515001, 2), 0, (s_7015040).length-1)] & 63) << 6)) | (s_7015040[chckIndx(addInt(yIend_7515001, 3), 0, (s_7015040).length-1)] & 63)), -2147483648, 2147483647);
                yIend_7515001 = addInt(yIend_7515001, 4);
                }
                else {
                  pRune_7515002 = 65533;
                  yIend_7515001 = addInt(yIend_7515001, 1);
                }
                
                }
                else {
                if ((((s_7015040[chckIndx(yIend_7515001, 0, (s_7015040).length-1)] >>> 0) >>> 2) == 62)) {
                if ((yIend_7515001 <= subInt((s_7015040).length, 5))) {
                pRune_7515002 = chckRange(((((((s_7015040[chckIndx(yIend_7515001, 0, (s_7015040).length-1)] & 3) << 24) | ((s_7015040[chckIndx(addInt(yIend_7515001, 1), 0, (s_7015040).length-1)] & 63) << 18)) | ((s_7015040[chckIndx(addInt(yIend_7515001, 2), 0, (s_7015040).length-1)] & 63) << 12)) | ((s_7015040[chckIndx(addInt(yIend_7515001, 3), 0, (s_7015040).length-1)] & 63) << 6)) | (s_7015040[chckIndx(addInt(yIend_7515001, 4), 0, (s_7015040).length-1)] & 63)), -2147483648, 2147483647);
                yIend_7515001 = addInt(yIend_7515001, 5);
                }
                else {
                  pRune_7515002 = 65533;
                  yIend_7515001 = addInt(yIend_7515001, 1);
                }
                
                }
                else {
                if ((((s_7015040[chckIndx(yIend_7515001, 0, (s_7015040).length-1)] >>> 0) >>> 1) == 126)) {
                if ((yIend_7515001 <= subInt((s_7015040).length, 6))) {
                pRune_7515002 = chckRange((((((((s_7015040[chckIndx(yIend_7515001, 0, (s_7015040).length-1)] & 1) << 30) | ((s_7015040[chckIndx(addInt(yIend_7515001, 1), 0, (s_7015040).length-1)] & 63) << 24)) | ((s_7015040[chckIndx(addInt(yIend_7515001, 2), 0, (s_7015040).length-1)] & 63) << 18)) | ((s_7015040[chckIndx(addInt(yIend_7515001, 3), 0, (s_7015040).length-1)] & 63) << 12)) | ((s_7015040[chckIndx(addInt(yIend_7515001, 4), 0, (s_7015040).length-1)] & 63) << 6)) | (s_7015040[chckIndx(addInt(yIend_7515001, 5), 0, (s_7015040).length-1)] & 63)), -2147483648, 2147483647);
                yIend_7515001 = addInt(yIend_7515001, 6);
                }
                else {
                  pRune_7515002 = 65533;
                  yIend_7515001 = addInt(yIend_7515001, 1);
                }
                
                }
                else {
                  pRune_7515002 = chckRange(s_7015040[chckIndx(yIend_7515001, 0, (s_7015040).length-1)], -2147483648, 2147483647);
                  yIend_7515001 = addInt(yIend_7515001, 1);
                }
                }}}}}
                if ((yIend_7515001 < xI_7260214)) {
                break L5;
                }
                
                i_7260213 = yI_7510207;
                rune_7260215 = pRune_7515002;
                yI_7510207 = subInt(yI_7510207, 1);
              }
          } while(false);
          if (!(contains_6725201(runes_7015044, rune_7260215))) {
          eI_7015048 = subInt(xI_7260214, 1);
          break L3;
          }
          
          i_7260213 = subInt(i_7260213, 1);
        }
    } while(false);
    }
    
    var newLen_7760225 = addInt(subInt(eI_7015048, sI_7015047), 1);
    result_7015045 = nimCopy(null, mnewString(0), NTI113);
    if ((0 < newLen_7760225)) {
    result_7015045.push.apply(result_7015045, HEX5BHEX5D_1825283(s_7015040, HEX2EHEX2E_1825220(sI_7015047, eI_7015048)));;
    }
    

  return result_7015045;

}
function HEX21HEX24_9282305(h_9282307) {
  var result_9282308 = 0;

    var h_9282309 = (h_9282307 >>> 0);
    var res_9282317 = ((h_9282309 + (h_9282309 << 3)) >>> 0);
    res_9282317 = (res_9282317 ^ ((res_9282317 >>> 0) >>> 11));
    res_9282317 = ((res_9282317 + (res_9282317 << 15)) >>> 0);
    result_9282308 = (res_9282317|0);

  return result_9282308;

}
function hash_13686254(x_13686256) {
  var result_13686257 = 0;

    result_13686257 = HEX21HEX26_9282270(HEX21HEX26_9282270(HEX21HEX26_9282270(hash_9335214(nuctoLowerStr(nucStrip(x_13686256.name, true, true, unicodeSpaces_1844041))), hash_9335214(nuctoLowerStr(nucStrip(x_13686256.sector.postalCode, true, true, unicodeSpaces_1844041)))), hash_9335214(nuctoLowerStr(nucStrip(x_13686256.sector.city, true, true, unicodeSpaces_1844041)))), hash_9335214(nuctoLowerStr(nucStrip(x_13686256.sector.district, true, true, unicodeSpaces_1844041))));
    result_13686257 = HEX21HEX24_9282305(result_13686257);

  return result_13686257;

}
function initTblTotFamByStreet_13765837() {
              var Tmp8;
              var Tmp9;
              var Tmp10;
              var Tmp11;
              var Tmp12;
              var Tmp13;

  var result_13765861 = [({data: [], counter: 0})];

    nimCopy(result_13765861[0], initTable_13765864(32), NTI13765848);
    var streets_13775629 = nsuSplitCharSet(makeNimstrLit("Plz|DistrictUser|City|District|Street|TotalFamilies\x0A63628|Ahl|Bad Soden-Salm\xC3\xBCnster|Ahl|Am Hang|1\x0A63628|Ahl|Bad Soden-Salm\xC3\xBCnster|Ahl|Sch\xC3\xB6ne Aussicht|2\x0A63628|Ahl||||3\x0A63628|Alsberg|Bad Soden-Salm\xC3\xBCnster|Alsberg|Ringstra\xC3\x9Fe|1\x0A63628|Alsberg||||1\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany|Linsengericht|Altenha\xC3\x9Flau|Elf Morgen|1\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany|Linsengericht|Altenha\xC3\x9Flau|Fasanenweg|3\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany|Linsengericht|Altenha\xC3\x9Flau|Metzgerstra\xC3\x9Fe|1\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany|Linsengericht|Altenha\xC3\x9Flau|Rosenstra\xC3\x9Fe|1\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany|Linsengericht|Altenha\xC3\x9Flau|Strumpelburg|2\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany|Linsengericht|Altenha\xC3\x9Flau|Vor der Au|1\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany||||9\x0A63579|Altenmittlau|Freigericht|Altenmittlau|An der Freigerichthalle|1\x0A63579|Altenmittlau|Freigericht|Altenmittlau|Industriestra\xC3\x9Fe|2\x0A63579|Altenmittlau|Freigericht||Kalkbergstra\xC3\x9Fe|1\x0A63579|Altenmittlau|Freigericht|Altenmittlau|Kolpingstra\xC3\x9Fe|3\x0A63579|Altenmittlau|Freigericht|Altenmittlau|Somborner Stra\xC3\x9Fe|1\x0A63579|Altenmittlau||||8\x0A63674|Altenstadt|Altenstadt|Altenstadt|Alemannenstra\xC3\x9Fe|4\x0A63674|Altenstadt|Altenstadt|Altenstadt|An der Hollerstaude|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|An der Steinkaute|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|Auf der Mauer|2\x0A63674|Altenstadt|Altenstadt|Altenstadt|Borngasse|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|Frankfurter Stra\xC3\x9Fe|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|Goethestra\xC3\x9Fe|4\x0A63674|Altenstadt|Altenstadt|Altenstadt|Hadrianstra\xC3\x9Fe|4\x0A63674|Altenstadt|Altenstadt|Altenstadt|Hanauer Stra\xC3\x9Fe|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|Kirchgasse|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|R\xC3\xB6merbrunnen|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|Seilerstra\xC3\x9Fe|2\x0A63674|Altenstadt||||23\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|Bamberger Stra\xC3\x9Fe|2\x0A63607|Aufenau|W\xC3\xA4chtersbach||Frankfurter Stra\xC3\x9Fe|9\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|F\xC3\xBCrther Stra\xC3\x9Fe|2\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|Grimmstra\xC3\x9Fe|4\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|Hermann-L\xC3\xB6ns-Stra\xC3\x9Fe|1\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|Kantstra\xC3\x9Fe|1\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|Martin-Luther-Stra\xC3\x9Fe|1\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|M\xC3\xBCnchener Stra\xC3\x9Fe|2\x0A63607|Aufenau||||22\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Am Linsenhof|2\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster||An der Rolandquelle|2\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Auf der Hohl|2\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Bornweg|7\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Burgstra\xC3\x9Fe|4\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Feldstra\xC3\x9Fe|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Hegelstra\xC3\x9Fe|5\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Hochstra\xC3\x9Fe|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Hohm\xC3\xBChlenweg|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Honiggasse|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Kantstra\xC3\x9Fe|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Karl-Roth-Stra\xC3\x9Fe|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Pacificusstra\xC3\x9Fe|4\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster||Romsthaler Stra\xC3\x9Fe|11\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Rudolf-Berta-Stra\xC3\x9Fe|6\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Sprudelallee|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Stolzenthalstra\xC3\x9Fe|17\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Weilersweg|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Bad Sodener Stra\xC3\x9Fe|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Bahnhofstra\xC3\x9Fe|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Frankfurter Stra\xC3\x9Fe|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Fuldaer Stra\xC3\x9Fe|12\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Hanauer Landstra\xC3\x9Fe|13\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Joseph-M\xC3\xBCller-Stra\xC3\x9Fe|2\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Kettelerstra\xC3\x9Fe|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|M\xC3\xBCnsterbergstra\xC3\x9Fe|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Philipp-Reis-Stra\xC3\x9Fe|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|R\xC3\xBCckm\xC3\xBChlenweg|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Schillerstra\xC3\x9Fe|4\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Schwedenring|4\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Spessartstra\xC3\x9Fe|9\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Sudetenlandstra\xC3\x9Fe|7\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Winkelgasse|1\x0A63628|B.Soden-Salm\xC3\xBCns.||||141\x0A63619|Bad Orb|Bad Orb|Bad Orb|Altenbergstra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Am Schafstrieb|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Austra\xC3\x9Fe|5\x0A63619|Bad Orb|Bad Orb|Bad Orb|Berliner Stra\xC3\x9Fe|2\x0A63619|Bad Orb|Bad Orb|Bad Orb|Burgstra\xC3\x9Fe|4\x0A63619|Bad Orb|Bad Orb|Bad Orb|Eichendorffstra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Faulhaberstra\xC3\x9Fe|4\x0A63619|Bad Orb|Bad Orb|Bad Orb|F\xC3\xBCllweinstra\xC3\x9Fe|3\x0A63619|Bad Orb|Bad Orb|Bad Orb|Kinzigweg|2\x0A63619|Bad Orb|Bad Orb|Bad Orb|Lauzenstra\xC3\x9Fe|4\x0A63619|Bad Orb|Bad Orb|Bad Orb|Martin-Luther-Stra\xC3\x9Fe|5\x0A63619|Bad Orb|Bad Orb|Bad Orb|Mittelweg|6\x0A63619|Bad Orb|Bad Orb|Bad Orb|Taunusstra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Uferweg|2\x0A63619|Bad Orb|Bad Orb|Bad Orb|W\xC3\xA4chtersbacher Weg|4\x0A63619|Bad Orb|Bad Orb|Bad Orb|Wemmstra\xC3\x9Fe|2\x0A63619|Bad Orb|Bad Orb|Bad Orb|Bayernweg|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Bennweg|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Burgring|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Eduard-Gr\xC3\xA4f-Stra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Frankenweg|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Frankfurter Stra\xC3\x9Fe|2\x0A63619|Bad Orb|Bad Orb|Bad Orb|Friedrichstalstra\xC3\x9Fe|6\x0A63619|Bad Orb|Bad Orb|Bad Orb|Hubertusstra\xC3\x9Fe|6\x0A63619|Bad Orb|Bad Orb|Bad Orb|Johann-B\xC3\xBCttel-Stra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Kanalstra\xC3\x9Fe|2\x0A63619|Bad Orb|Bad Orb|Bad Orb|Kasselbergweg|11\x0A63619|Bad Orb|Bad Orb|Bad Orb|Leimbachstra\xC3\x9Fe|5\x0A63619|Bad Orb|Bad Orb|Bad Orb|Leopold-Koch-Stra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Lindenallee|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Marktbrunnenstra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Rh\xC3\xB6nstra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Sachsenh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Salzk\xC3\xA4rrnerweg|7\x0A63619|Bad Orb||||97\x0A63594|Bahnhofsiedlung|Hasselroth|Niedermittlau-Bahnhofssiedlung|Berliner Stra\xC3\x9Fe|2\x0A63594|Bahnhofsiedlung|Hasselroth|Niedermittlau-Bahnhofssiedlung|Fichtenstra\xC3\x9Fe|1\x0A63594|Bahnhofsiedlung|Hasselroth|Niedermittlau-Bahnhofssiedlung|Heinrich-Hofmann-Stra\xC3\x9Fe|3\x0A63594|Bahnhofsiedlung|Hasselroth|Niedermittlau-Bahnhofssiedlung|Lindenstra\xC3\x9Fe|1\x0A63594|Bahnhofsiedlung|Hasselroth|Niedermittlau-Bahnhofssiedlung|Waldstra\xC3\x9Fe|1\x0A63594|Bahnhofsiedlung||||8\x0A63579|Bernbach|Freigericht|Bernbach|Birkenhainer Stra\xC3\x9Fe|2\x0A63579|Bernbach|Freigericht|Bernbach|Brentanostra\xC3\x9Fe|1\x0A63579|Bernbach|Freigericht|Neuses|Vogelsbergstra\xC3\x9Fe|1\x0A63579|Bernbach||||4\x0A63599|Bieber|Biebergem\xC3\xBCnd|Bieber|Zimmerwiesenweg|1\x0A63599|Bieber||||1\x0A63633|Birstein|Birstein|Birstein|An der Riedwiese|2\x0A63633|Birstein|Birstein|Birstein|Bornwiesenweg|1\x0A63633|Birstein|Birstein|Birstein|B\xC3\xBCdinger Stra\xC3\x9Fe|1\x0A63633|Birstein|Birstein|Birstein|F\xC3\xBCnfkirchener Stra\xC3\x9Fe|3\x0A63633|Birstein|Birstein|Birstein|M\xC3\xBChlweg|1\x0A63633|Birstein|Birstein|Birstein|Rh\xC3\xB6nstra\xC3\x9Fe|1\x0A63633|Birstein|Birstein|Birstein|Spessartstra\xC3\x9Fe|3\x0A63633|Birstein|Birstein|Birstein|Steinweg|1\x0A63633|Birstein|Birstein|Birstein|Anton-Praetorius-Weg|2\x0A63633|Birstein|Birstein|Birstein|Bathwiesenweg|5\x0A63633|Birstein|Birstein|Birstein|Charlottenstra\xC3\x9Fe|15\x0A63633|Birstein|Birstein|Birstein|Julius-Hufnagel-Weg|3\x0A63633|Birstein|Birstein|Birstein|Katharinenstra\xC3\x9Fe|4\x0A63633|Birstein|Birstein|Birstein|Raiffeisenstra\xC3\x9Fe|5\x0A63633|Birstein|Birstein|Birstein|Sophienstra\xC3\x9Fe|6\x0A63633|Birstein|Birstein|Birstein|Zehntefeld|4\x0A63633|Birstein||||57\x0A63633|B\xC3\xB6sges\xC3\xA4\xC3\x9F|Birstein|B\xC3\xB6ssges\xC3\xA4\xC3\x9F|Grundweg|2\x0A63633|B\xC3\xB6sges\xC3\xA4\xC3\x9F||||2\x0A63599|Breitenborn|Gr\xC3\xBCndau|Breitenborn A.W.|Bergwiesenstra\xC3\x9Fe|1\x0A63599|Breitenborn|Gr\xC3\xBCndau|Breitenborn A.W.|Buchenweg|1\x0A63599|Breitenborn|Gr\xC3\xBCndau|Breitenborn A.W.|Hauptstra\xC3\x9Fe|1\x0A63599|Breitenborn|Biebergem\xC3\xBCnd|Breitenborn|Lanzinger Stra\xC3\x9Fe|1\x0A63599|Breitenborn||||4\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|August-Bebel-Stra\xC3\x9Fe|2\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Buchenweg|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Erich-Ollenhauer-Stra\xC3\x9Fe|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Ernst-Reuter-Stra\xC3\x9Fe|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Gleiwitzer Stra\xC3\x9Fe|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Hauptstra\xC3\x9Fe|2\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Im Niederried|3\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Kettelerstra\xC3\x9Fe|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Kirleweg|2\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|K\xC3\xB6nigsberger Stra\xC3\x9Fe|2\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Lindenallee|3\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Tilsiter Stra\xC3\x9Fe|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Udo-M\xC3\xBCller-Ring|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Varang\xC3\xA9viller Stra\xC3\x9Fe|2\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Walter-Rathenau-Stra\xC3\x9Fe|2\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Innerer Ring|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Kellereigasse|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Saalburgring|4\x0A63486|Bruchk\xC3\xB6bel||||31\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Nu\xC3\x9Fgraben|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Schlag|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Wildenstein|4\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Bismarckstra\xC3\x9Fe|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Friedrich-Fendt-Stra\xC3\x9Fe|8\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Gymnasiumstra\xC3\x9Fe|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Kastanienring|3\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Kellergasse|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|M\xC3\xBChltorstra\xC3\x9Fe|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Wilhelm-Dotter-Stra\xC3\x9Fe|3\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Alten Viadukt|12\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Klarengarten|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Im Flachsgrund|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|In den Weiherwiesen|12\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|An der Kleibscheibe|3\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Industriestra\xC3\x9Fe|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Salzbachaue|9\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Thiergartenstra\xC3\x9Fe|22\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Am Hofacker|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Auf dem Biehm|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen||Calbacher Stra\xC3\x9Fe|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Finkenweg|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Hauptstra\xC3\x9Fe|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Im Einzel|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Im Hinterfeld|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Im Hoffeld|10\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Otto-Beppler-Stra\xC3\x9Fe|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Schulstra\xC3\x9Fe|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Waldstra\xC3\x9Fe|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Wilhelm-Leuschner-Stra\xC3\x9Fe|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Zum Seemenbach|1\x0A63654|B\xC3\xBCdingen||||114\x0A63165|Dietesheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|B\xC3\xBCrgermeister-Hainz-Stra\xC3\x9Fe|8\x0A63165|Dietesheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Elisabethenstra\xC3\x9Fe|10\x0A63165|Dietesheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Thomas-Mann-Stra\xC3\x9Fe|3\x0A63165|Dietesheim||||21\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Am Bieberbach|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Am Steinberg|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|B\xC3\xB6llstra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Gallische Stra\xC3\x9Fe|3\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Georg-August-Zinn-Stra\xC3\x9Fe|2\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Gertrud-Kolmar-Weg|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Gustav-Heinemann-Ring|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Konrad-Adenauer-Allee|2\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Kurt-Schumacher-Allee|2\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Langg\xC3\xA4sserstra\xC3\x9Fe|2\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Neckarstra\xC3\x9Fe|3\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Nibelungenstra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Patersh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Pestalozzistra\xC3\x9Fe|3\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Rheinstra\xC3\x9Fe|11\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Ringelnatzstra\xC3\x9Fe|2\x0A63128|Dietzenbach|Dietzenbach|Steinberg|R\xC3\xB6merstra\xC3\x9Fe|2\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Schlegelstra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Siedlerstra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Staufenstra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Taunusstra\xC3\x9Fe|9\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Thomas-Mann-Ring|1\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Aschaffenburger Weg|4\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Babenh\xC3\xA4user Stra\xC3\x9Fe|2\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Glash\xC3\xBCttener Weg|4\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Konrad-Lang-Stra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Marktheidenfelder Weg|3\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Rodgaustra\xC3\x9Fe|5\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Rohrbrunner Weg|2\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Talstra\xC3\x9Fe|6\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Tulpenstra\xC3\x9Fe|2\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Wertheimer Weg|1\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Wiesenstra\xC3\x9Fe|3\x0A63128|Dietzenbach||||85\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Backesweg|1\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Beethovenstra\xC3\x9Fe|1\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Berliner Stra\xC3\x9Fe|1\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Bonhoefferstra\xC3\x9Fe|2\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Hermann-L\xC3\xB6ns-Stra\xC3\x9Fe|4\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|In der Mainaue|1\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|K\xC3\xA4the-Kollwitz-Stra\xC3\x9Fe|12\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|S\xC3\xBCdring|4\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Westendstra\xC3\x9Fe|4\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Wilhelmsbader Stra\xC3\x9Fe|1\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Wingertstra\xC3\x9Fe|1\x0A63477|D\xC3\xB6rnigheim||||32\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Am Alten S\xC3\xA4gewerk|2\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Am R\xC3\xBCckersgraben|8\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Dekan-Schuster-Stra\xC3\x9Fe|1\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Nieuwpoorter Stra\xC3\x9Fe|1\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Raiffeisenstra\xC3\x9Fe|1\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Saalburgring|2\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Spessartring|10\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Dr.-Weinholz-Stra\xC3\x9Fe|1\x0A63110|Dudenhofen||||26\x0A63628|Eckardroth|Bad Soden-Salm\xC3\xBCnster|Eckardroth-Wahlert|Bergstra\xC3\x9Fe|1\x0A63628|Eckardroth|Bad Soden-Salm\xC3\xBCnster|Eckardroth-Wahlert|Oberweg|2\x0A63628|Eckardroth|Bad Soden-Salm\xC3\xBCnster|Eckardroth-Wahlert|Stiftungsstra\xC3\x9Fe|4\x0A63628|Eckardroth||||7\x0A63654|Eckartshausen|B\xC3\xBCdingen|Eckartshausen|Lohrbergstra\xC3\x9Fe|1\x0A63654|Eckartshausen||||1\x0A61130|Eichen|Nidderau|Eichen|Kleine Gasse|3\x0A61130|Eichen||||3\x0A63589|Eidenges\xC3\xA4\xC3\x9F|Linsengericht|Eidenges\xC3\xA4\xC3\x9F|Dettersweg|2\x0A63589|Eidenges\xC3\xA4\xC3\x9F|Linsengericht|Eidenges\xC3\xA4\xC3\x9F|Im Bangertsfeld|1\x0A63589|Eidenges\xC3\xA4\xC3\x9F||||3\x0A61130|Erbstadt|Nidderau|Erbstadt|Bogenstra\xC3\x9Fe|2\x0A61130|Erbstadt|Nidderau|Erbstadt|Hauptstra\xC3\x9Fe|1\x0A61130|Erbstadt||||3\x0A63639 Sum|Fl\xC3\xB6rsbach|Fl\xC3\xB6rsbachtal|Fl\xC3\xB6rsbach|Gartenweg|1\x0A63639 Sum|Fl\xC3\xB6rsbach|Fl\xC3\xB6rsbachtal|Fl\xC3\xB6rsbach|Huntzelstra\xC3\x9Fe|3\x0A63639 Sum|Fl\xC3\xB6rsbach|Fl\xC3\xB6rsbachtal|Fl\xC3\xB6rsbach|Orber Stra\xC3\x9Fe|1\x0A63639 Sum|Fl\xC3\xB6rsbach||||5\x0A63500|Froschhausen|Seligenstadt|Froschhausen|Hanauer Landstra\xC3\x9Fe|2\x0A63500|Froschhausen|Seligenstadt|Froschhausen|Mittelstra\xC3\x9Fe|1\x0A63500|Froschhausen|Seligenstadt|Froschhausen|Seligenst\xC3\xA4dter Stra\xC3\x9Fe|1\x0A63500|Froschhausen||||4\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Barbarossastra\xC3\x9Fe|1\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Grimmelshausenstra\xC3\x9Fe|2\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Herzbachweg|15\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Im Setzling|3\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|In der Brug|1\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Kapellenweg|1\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Kuhgasse|3\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|M\xC3\xBChlbachweg|2\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Pappelweg|2\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Parkstra\xC3\x9Fe|1\x0A63571|Gelnhausen-Nord||||31\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Am Galgenfeld|3\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Clamecystra\xC3\x9Fe|16\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Dr.-Sondheimer-Stra\xC3\x9Fe|2\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Frankfurter Stra\xC3\x9Fe|1\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Franklinstra\xC3\x9Fe|1\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Graslitzer Stra\xC3\x9Fe|2\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Im Weiherfeld|5\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Lohm\xC3\xBChlenweg|18\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Rudolf-Diesel-Stra\xC3\x9Fe|1\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Uferweg|1\x0A63571|Gelnhausen-S\xC3\xBCd||||50\x0A63695|Glauberg, Glauburg, Deutschland|Glauburg|Glauberg|Ladestra\xC3\x9Fe|2\x0A63695|Glauberg, Glauburg, Deutschland|Glauburg|Glauberg|Wallgasse|1\x0A63695|Glauberg, Glauburg, Deutschland||||3\x0A63594|Gondsroth|Hasselroth|Gondsroth|Hauptstra\xC3\x9Fe|1\x0A63594|Gondsroth|Hasselroth|Gondsroth|Schulstra\xC3\x9Fe|2\x0A63594|Gondsroth||||3\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Brown-Boveri-Stra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Carl-Kronenberger-Stra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Hainbachstra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Karl-Kihn-Stra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Krotzenburger Stra\xC3\x9Fe|2\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Otto-Gr\xC3\xBCn-Stra\xC3\x9Fe|2\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Spitzenweg|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Zum Torfbruch|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Annette-Kolb-Weg|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Annette-von-Droste-H\xC3\xBClshoff-Weg|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|August-Gaul-Stra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Bahnhofstra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Bertolt-Brecht-Weg|4\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Franz-Kafka-Weg|3\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Goethestra\xC3\x9Fe|3\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Hauptstra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Ingeborg-Bachmann-Weg|3\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Lion-Feuchtwanger-Weg|5\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Rudolf-Hagelstange-Weg|3\x0A63457|Gro\xC3\x9Fauheim||||36\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Molkenborn|9\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Pfaffenwald|3\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|An der Schildwache|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Gr\xC3\xBCnwaldweg|2\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Pferdsbacher Weg|3\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen||Vogelsbergstra\xC3\x9Fe|3\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Zum Stadtgraben|2\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Kreischborn|2\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheimer Stra\xC3\x9Fe|3\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Eichelbergring|2\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Ostpreu\xC3\x9Fenstra\xC3\x9Fe|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Sudetenstra\xC3\x9Fe|7\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|\xC3\x9Cber den Roten Gr\xC3\xA4ben|4\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Bahnhofstra\xC3\x9Fe|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Berliner Stra\xC3\x9Fe|4\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Lorbacher Stra\xC3\x9Fe|8\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen||Orlesh\xC3\xA4user Stra\xC3\x9Fe|4\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen||\xC3\x9Cber der Seeme|3\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Im Lipperts|21\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Lorbacher Stra\xC3\x9Fe|7\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|An der Fahrbach|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Bahnhofstra\xC3\x9Fe|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Mackensenstra\xC3\x9Fe|8\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|M\xC3\xA4usfall|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Schillerstra\xC3\x9Fe|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Seemenbachstra\xC3\x9Fe|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen||Vogelsbergstra\xC3\x9Fe|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany||||104\x0A63589|Gro\xC3\x9Fenhausen|Linsengericht|Gro\xC3\x9Fenhausen|Kastanienstra\xC3\x9Fe|1\x0A63589|Gro\xC3\x9Fenhausen|Linsengericht|Gro\xC3\x9Fenhausen|Nordstra\xC3\x9Fe|1\x0A63589|Gro\xC3\x9Fenhausen||||2\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Albert-Einstein-Stra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Bahnhofstra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Danziger Stra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gutenbergallee|4\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Im Flachsgewann|2\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Max-Planck-Stra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Melmensee|3\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Oberwaldstra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Rh\xC3\xB6nstra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Robert-Koch-Weg|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Taunusstra\xC3\x9Fe|4\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Torsbyv\xC3\xA4gen|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Wahlersee|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Bahnhofstra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Beethovenstra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Wilhelmstra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg||||25\x0A63571|Hailer|Gelnhausen|Hailer|Am Fa\xC3\x9Fholzwerk|1\x0A63571|Hailer|Gelnhausen|Hailer|Bl\xC3\xBCmgesgrundstra\xC3\x9Fe|1\x0A63571|Hailer|Gelnhausen|Hailer|Dr.-Heinrich-Mohn-Stra\xC3\x9Fe|5\x0A63571|Hailer|Gelnhausen|Hailer|Eisenbahnstra\xC3\x9Fe|6\x0A63571|Hailer|Gelnhausen|Hailer|Gelnh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63571|Hailer|Gelnhausen|Hailer|Gr\xC3\xBCner Weg|5\x0A63571|Hailer|Gelnhausen|Hailer|Jahnstra\xC3\x9Fe|1\x0A63571|Hailer|Gelnhausen|Hailer|Reinhardstra\xC3\x9Fe|1\x0A63571|Hailer|Gelnhausen|Hailer|Sudetenstra\xC3\x9Fe|2\x0A63571|Hailer|Gelnhausen|Hailer|Vorm R\xC3\xB6hrig|5\x0A63571|Hailer||||28\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Burgstra\xC3\x9Fe|1\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Hainstra\xC3\x9Fe|2\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Hochstra\xC3\x9Fe|1\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Ortsberingweg|1\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Schmiedegasse|1\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Weidenstra\xC3\x9Fe|2\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Zur K\xC3\xB6nigseiche|2\x0A63584|Hain-Gr\xC3\xBCndau||||10\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Hainhausen|Br\xC3\xBCder-Grimm-Stra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Weiskirchen|Dietrich-Bonhoeffer-Stra\xC3\x9Fe|3\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Hainhausen|Eppsteiner Stra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Weiskirchen|Friedrich-Ebert-Stra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Weiskirchen|Hainh\xC3\xA4user Stra\xC3\x9Fe|2\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Weiskirchen|Hauptstra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Weiskirchen|Kolpingstra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Hainhausen|Rochusstra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Hainhausen|Rubensstra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Hainhausen|Wilhelm-Leuschner-Stra\xC3\x9Fe|5\x0A63110|Hainhausen,We\xC3\x9Fkirchen||||17\x0A63512|Hainstadt|Hainburg||Bachgasse|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Bahnhofstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Friedhofstra\xC3\x9Fe|2\x0A63512|Hainstadt|Hainburg|Hainstadt|Hainst\xC3\xA4dter Stra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Hauptstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Wilhelmstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Am Kiefernhain|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Dresdener Stra\xC3\x9Fe|2\x0A63512|Hainstadt|Hainburg|Hainstadt|Erfurter Stra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Fichtestra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Gablonzer Stra\xC3\x9Fe|2\x0A63512|Hainstadt|Hainburg|Hainstadt|Gartenstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Im L\xC3\xB6schem|1\x0A63512|Hainstadt|Hainburg|Hainstadt|K\xC3\xB6nigsberger Stra\xC3\x9Fe|4\x0A63512|Hainstadt|Hainburg|Hainstadt|Leipziger Stra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Offenbacher Landstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Reichenberger Ring|2\x0A63512|Hainstadt|Hainburg|Hainstadt|Schillerstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Uhlandstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Waldstra\xC3\x9Fe|1\x0A63512|Hainstadt||||27\x0A63571|Haitz|Gelnhausen|Haitz|Am Bocksborn|2\x0A63571|Haitz|Gelnhausen|Haitz|Am Kandelrain|1\x0A63571|Haitz|Gelnhausen|Haitz|Am Langen Steg|1\x0A63571|Haitz|Gelnhausen|Gelnhausen|Barbarossastra\xC3\x9Fe|4\x0A63571|Haitz|Gelnhausen|Haitz|Birsteiner Stra\xC3\x9Fe|2\x0A63571|Haitz|Gelnhausen|Haitz|Dorfstra\xC3\x9Fe|1\x0A63571|Haitz|Gelnhausen|Haitz|Dr.-Faust-Stra\xC3\x9Fe|2\x0A63571|Haitz|Gelnhausen|Gelnhausen|Fuldaweg|2\x0A63571|Haitz|Gelnhausen|Gelnhausen|Himmelauer M\xC3\xBChle|1\x0A63571|Haitz|Gelnhausen|Gelnhausen|Kinzigstra\xC3\x9Fe|13\x0A63571|Haitz|Gelnhausen||Kremp\'sche Spitze|4\x0A63571|Haitz|Gelnhausen|Gelnhausen|Mainstra\xC3\x9Fe|7\x0A63571|Haitz|Gelnhausen|Haitz|Neuer Weg|1\x0A63571|Haitz|Gelnhausen|Haitz|Sch\xC3\xB6ne Aussicht|1\x0A63571|Haitz|Gelnhausen|Meerholz|Spessartstra\xC3\x9Fe|2\x0A63571|Haitz|Gelnhausen|Haitz|Zum Taubengarten|8\x0A63571|Haitz||||52\x0A63450|Hanau|Hanau|Hanau|Altstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Am Frankfurter Tor|4\x0A63450|Hanau|Hanau|Hanau|Eugen-Kaiser-Stra\xC3\x9Fe|2\x0A63450|Hanau|Hanau|Hanau|Fischerh\xC3\xBCttenweg|1\x0A63450|Hanau|Hanau|Hanau|G\xC3\xA4rtnerstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Glockenstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|In den T\xC3\xBCrkischen G\xC3\xA4rten|2\x0A63450|Hanau|Hanau|Hanau|Johanneskirchplatz|1\x0A63450|Hanau|Hanau|Hanau|Karl-R\xC3\xB6ttelberg-Stra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Kinzigstra\xC3\x9Fe|2\x0A63450|Hanau|Hanau|Hanau|Kr\xC3\xA4merstra\xC3\x9Fe|2\x0A63450|Hanau|Hanau|Hanau|Lothringer Stra\xC3\x9Fe|3\x0A63450|Hanau|Hanau|Hanau|M\xC3\xBChlstra\xC3\x9Fe|11\x0A63450|Hanau|Hanau|Hanau|Nordstra\xC3\x9Fe|3\x0A63450|Hanau|Hanau|Hanau|Nu\xC3\x9Fallee|3\x0A63450|Hanau|Hanau|Hanau|Ramsaystra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|R\xC3\xB6merstra\xC3\x9Fe|5\x0A63450|Hanau|Hanau|Hanau|R\xC3\xBChlstra\xC3\x9Fe|4\x0A63450|Hanau|Hanau|Hanau|Sch\xC3\xBCtzenstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Steinheimer Stra\xC3\x9Fe|5\x0A63450|Hanau|Hanau|Hanau|Vor dem Kanaltor|2\x0A63450|Hanau|Hanau|Hanau|Akademiestra\xC3\x9Fe|2\x0A63450|Hanau|Hanau|Hanau|Am Hauptbahnhof|2\x0A63450|Hanau|Hanau|Hanau|Am Krawallgraben|1\x0A63450|Hanau|Hanau|Hanau|Barbarossastra\xC3\x9Fe|3\x0A63450|Hanau|Hanau|Hanau|B\xC3\xBCchnerstra\xC3\x9Fe|5\x0A63450|Hanau|Hanau|Hanau|Dettinger Stra\xC3\x9Fe|5\x0A63450|Hanau|Hanau|Hanau|Engelhardstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Freigerichtstra\xC3\x9Fe|5\x0A63450|Hanau|Hanau|Hanau|Friedrichstra\xC3\x9Fe|9\x0A63450|Hanau|Hanau|Hanau|Gallienstra\xC3\x9Fe|3\x0A63450|Hanau|Hanau|Hanau|Grimmelshausenstra\xC3\x9Fe|8\x0A63450|Hanau|Hanau|Hanau|Industrieweg|1\x0A63450|Hanau|Hanau|Hanau|Landwehr|2\x0A63450|Hanau|Hanau|Hanau|Matthias-Da\xC3\x9Fbach-Stra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Milseburgstra\xC3\x9Fe|5\x0A63450|Hanau|Hanau|Hanau|Ottostra\xC3\x9Fe|6\x0A63450|Hanau|Hanau|Hanau|Ronneburgstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Saalburgstra\xC3\x9Fe|2\x0A63450|Hanau|Hanau|Hanau|Auheimer Stra\xC3\x9Fe|4\x0A63450|Hanau|Hanau|Gro\xC3\x9Fauheim|Hanauer Landstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Mainstra\xC3\x9Fe|1\x0A63450|Hanau||||124\x0A63452|Hanau-Nord|Hanau|Hanau|Alter R\xC3\xBCckinger Weg|12\x0A63452|Hanau-Nord|Hanau|Hanau|B\xC3\xBCdinger Stra\xC3\x9Fe|52\x0A63452|Hanau-Nord|Hanau|Hanau|D\xC3\xB6rnigheimer Stra\xC3\x9Fe|6\x0A63452|Hanau-Nord|Hanau|Hanau|Vor der Kinzigbr\xC3\xBCcke|1\x0A63452|Hanau-Nord|Hanau|Hanau|Alter R\xC3\xBCckinger Weg|23\x0A63452|Hanau-Nord|Hanau|Hanau|Antoniterstra\xC3\x9Fe|21\x0A63452|Hanau-Nord|Hanau|Hanau|Friedberger Stra\xC3\x9Fe|7\x0A63452|Hanau-Nord|Hanau|Hanau|Im Venussee|1\x0A63452|Hanau-Nord|Hanau|Hanau|Reichenberger Stra\xC3\x9Fe|11\x0A63452|Hanau-Nord||||134\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Albert-Schweitzer-Stra\xC3\x9Fe|3\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Austra\xC3\x9Fe|8\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Bachstra\xC3\x9Fe|3\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Bauerbachstra\xC3\x9Fe|3\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Bernardstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Birkenwaldstra\xC3\x9Fe|24\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Dieburger Stra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Dreieichstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Egerl\xC3\xA4nder Platz|7\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Feldstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Forststra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Frankfurter Stra\xC3\x9Fe|8\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Gumbertseestra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Herrnstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Kapellenstra\xC3\x9Fe|2\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|L\xC3\xA4mmerspieler Stra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Laubenstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Maingaustra\xC3\x9Fe|8\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|M\xC3\xBChlstra\xC3\x9Fe|2\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Pater-Delp-Stra\xC3\x9Fe|2\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Platanenstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Richard-Wagner-Stra\xC3\x9Fe|11\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Robert-Koch-Stra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Sch\xC3\xB6nbornstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Schubertstra\xC3\x9Fe|6\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Seligenst\xC3\xA4dter Stra\xC3\x9Fe|23\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Sudetenstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Tempelhofer Stra\xC3\x9Fe|2\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Tulpenstra\xC3\x9Fe|3\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Von-Behring-Stra\xC3\x9Fe|3\x0A63179|Obertshausen Hausen||||131\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Aachener Stra\xC3\x9Fe|4\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|Ahornstra\xC3\x9Fe|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Bonner Stra\xC3\x9Fe|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Dresdener Stra\xC3\x9Fe|6\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|Fichtenstra\xC3\x9Fe|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|Ginsterweg|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Gustav-Kastropp-Stra\xC3\x9Fe|3\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Heinrich-Hofmann-Stra\xC3\x9Fe|8\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|Josef-Leistenschneider-Stra\xC3\x9Fe|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|K\xC3\xB6lner Stra\xC3\x9Fe|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|L\xC3\xA4rchenweg|2\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|Lavendelweg|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|M\xC3\xBCnchener Stra\xC3\x9Fe|8\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|Platanenstra\xC3\x9Fe|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Potsdamer Stra\xC3\x9Fe|4\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Weinstra\xC3\x9Fe|2\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|W\xC3\xBCrzburger Stra\xC3\x9Fe|2\x0A63628|Hausen||||47\x0A63674|Heegheim|Altenstadt|Heegheim|Fliederweg|1\x0A63674|Heegheim||||1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Albert-Schweitzer-Stra\xC3\x9Fe|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Am H\xC3\xBCpper|4\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Am Nidderfeld|4\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Am Pfarrgarten|2\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Am Steinweg|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|An der Landwehr|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Beethovenallee|2\x0A61130|Heldenbergen|Nidderau|Heldenbergen|B\xC3\xBCdinger Stra\xC3\x9Fe|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Castellring|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Emil-Nolde-Stra\xC3\x9Fe|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Gartenstra\xC3\x9Fe|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Jenny-Rothschild-Stra\xC3\x9Fe|2\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Saalburgstra\xC3\x9Fe|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Wagnerstra\xC3\x9Fe|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Wilhelm-Leibl-Stra\xC3\x9Fe|1\x0A61130|Heldenbergen||||24\x0A63636 Sum|Hellstein|Brachttal|Hellstein|Breulstra\xC3\x9Fe|1\x0A63636 Sum|Hellstein|Brachttal|Hellstein|Hochstra\xC3\x9Fe|3\x0A63636 Sum|Hellstein|Brachttal|Hellstein|Hochstra\xC3\x9Fe|1\x0A63636 Sum|Hellstein|Brachttal|Hellstein|Oberweg|2\x0A63636 Sum|Hellstein|Brachttal|Hellstein|Raiffeisenstra\xC3\x9Fe|1\x0A63636 Sum|Hellstein|Brachttal|Hellstein|Im Schafstall|6\x0A63636 Sum|Hellstein||||14\x0A63607|Hesseldorf|W\xC3\xA4chtersbach|Hesseldorf|Brachttalstra\xC3\x9Fe|1\x0A63607|Hesseldorf|W\xC3\xA4chtersbach|Hesseldorf|Im Alten Garten|1\x0A63607|Hesseldorf|W\xC3\xA4chtersbach|Hesseldorf|In der Aue|1\x0A63607|Hesseldorf|W\xC3\xA4chtersbach|Hesseldorf|Triebstra\xC3\x9Fe|2\x0A63607|Hesseldorf||||5\x0A63633|Hettersroth|Birstein|Hettersroth|Birkengasse|1\x0A63633|Hettersroth|Birstein|Hettersroth|Brunnenstra\xC3\x9Fe|2\x0A63633|Hettersroth|Birstein|Hettersroth|Haideacker|1\x0A63633|Hettersroth||||4\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Frankfurter Stra\xC3\x9Fe|3\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Friedenstra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Hans-Hemberger-Stra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Im Hohen Gewann|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Landgrebeweg|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Ostendstra\xC3\x9Fe|2\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Paulstra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Albert-Einstein-Stra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Am Frankfurter Weg|14\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Am Lindenbaum|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Berliner Stra\xC3\x9Fe|7\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Borsigstra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Dietrich-Bonhoeffer-Stra\xC3\x9Fe|2\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Feldbergstra\xC3\x9Fe|6\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Hegelstra\xC3\x9Fe|4\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Humboldtstra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Kolpingstra\xC3\x9Fe|4\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Konrad-Adenauer-Stra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Leipziger Ring|3\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Lerchenstra\xC3\x9Fe|10\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Schweitzerstra\xC3\x9Fe|2\x0A63150|Heusenstamm||||67\x0A63699|Hitzkirchen|Kefenrod||Am Lindenberg|7\x0A63699|Hitzkirchen|Kefenrod|Hitzkirchen|Hauptstra\xC3\x9Fe|1\x0A63699|Hitzkirchen||||8\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Am R\xC3\xBCckersberg|1\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Brunnenblick|1\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Hauptstra\xC3\x9Fe|1\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Kasseler Stra\xC3\x9Fe|2\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Ketteler Stra\xC3\x9Fe|1\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Kurzer Weg|1\x0A63674|H\xC3\xB6chst|Gelnhausen|Roth|Leipziger Stra\xC3\x9Fe|2\x0A63674|H\xC3\xB6chst|Gelnhausen||Panoramaweg|1\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Untere Sch\xC3\xB6nau|1\x0A63674|H\xC3\xB6chst|Altenstadt|H\xC3\xB6chst|Am Feldborn|1\x0A63674|H\xC3\xB6chst|Altenstadt|H\xC3\xB6chst|Burgweg|1\x0A63674|H\xC3\xB6chst|Altenstadt|H\xC3\xB6chst|G\xC3\xA4\xC3\x9Fchen|1\x0A63674|H\xC3\xB6chst|Altenstadt|H\xC3\xB6chst|Ringstra\xC3\x9Fe|3\x0A63674|H\xC3\xB6chst||||17\x0A63477|Hochstadt|Maintal|Hochstadt|Altk\xC3\xB6nigstra\xC3\x9Fe|2\x0A63477|Hochstadt|Maintal|Hochstadt|Am Weides|1\x0A63477|Hochstadt|Maintal|Hochstadt|Bernauer Stra\xC3\x9Fe|1\x0A63477|Hochstadt|Maintal|Hochstadt|Bischofsheimer Stra\xC3\x9Fe|1\x0A63477|Hochstadt|Maintal|Hochstadt|Maulbeerweg|4\x0A63477|Hochstadt|Maintal|Hochstadt|Ringstra\xC3\x9Fe S\xC3\xBCd|2\x0A63477|Hochstadt|Maintal|Hochstadt|Speierlingweg|1\x0A63477|Hochstadt|Maintal|Hochstadt|Wilhelm-Mankel-Stra\xC3\x9Fe|1\x0A63477|Hochstadt||||13\x0A63579|Horbach|Freigericht|Horbach|Am Sandberg|1\x0A63579|Horbach|Freigericht|Bernbach|Birkenhainer Stra\xC3\x9Fe|2\x0A63579|Horbach|Freigericht|Horbach|Kirchstra\xC3\x9Fe|1\x0A63579|Horbach|Freigericht|Horbach|M\xC3\xBChlstra\xC3\x9Fe|2\x0A63579|Horbach|Freigericht|Horbach|Wilhelm-Winter-Stra\xC3\x9Fe|1\x0A63579|Horbach||||7\x0A63584|H\xC3\xBChnerhof|Gr\xC3\xBCndau||H\xC3\xBChnerhof|2\x0A63584|H\xC3\xBChnerhof||||2\x0A63549 Sum|H\xC3\xBCttenges\xC3\xA4\xC3\x9F|Ronneburg|H\xC3\xBCttenges\xC3\xA4\xC3\x9F|Im Hartengrund|1\x0A63549 Sum|H\xC3\xBCttenges\xC3\xA4\xC3\x9F||||1\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Berliner Stra\xC3\x9Fe|3\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Carl-von-Ossietzky-Stra\xC3\x9Fe|1\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Dudenh\xC3\xB6fer Stra\xC3\x9Fe|5\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Eifelstra\xC3\x9Fe|4\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Eugen-Roth-Stra\xC3\x9Fe|1\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Friedlandstra\xC3\x9Fe|3\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Grenzstra\xC3\x9Fe|6\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Harzer Stra\xC3\x9Fe|4\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Heinrich-B\xC3\xB6ll-Stra\xC3\x9Fe|1\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Lange Stra\xC3\x9Fe|2\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Marburger Stra\xC3\x9Fe|12\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Paul-Gerhardt-Stra\xC3\x9Fe|5\x0A63110|J\xC3\xBCgesheim||||47\x0A63599|Kassel|Biebergem\xC3\xBCnd|Kassel|Am Burgwerksrain|1\x0A63599|Kassel|Biebergem\xC3\xBCnd|Kassel|Bornweg|1\x0A63599|Kassel|Biebergem\xC3\xBCnd|Kassel|Marienstra\xC3\x9Fe|1\x0A63599|Kassel|Biebergem\xC3\xBCnd|Kassel|Nepomukweg|4\x0A63599|Kassel|Biebergem\xC3\xBCnd|Kassel|Spessartstra\xC3\x9Fe|1\x0A63599|Kassel|Biebergem\xC3\xBCnd|Kassel|Wirtheimer Stra\xC3\x9Fe|3\x0A63599|Kassel||||11\x0A63699|Kefenrod|Kefenrod|Kefenrod|Am Hirtengarten|4\x0A63699|Kefenrod|Kefenrod||An der Hohl|1\x0A63699|Kefenrod|Kefenrod||Bindsachsener Stra\xC3\x9Fe|1\x0A63699|Kefenrod|Kefenrod|Bindsachsen|Gartenstra\xC3\x9Fe|1\x0A63699|Kefenrod|Kefenrod|Kefenrod|Hitzkirchener Stra\xC3\x9Fe|7\x0A63699|Kefenrod|Kefenrod|Kefenrod|Jahnstra\xC3\x9Fe|2\x0A63699|Kefenrod|Kefenrod|Kefenrod|Roseneck|5\x0A63699|Kefenrod|Kefenrod|Kefenrod|Schulstra\xC3\x9Fe|1\x0A63699|Kefenrod|Kefenrod|Kefenrod|Tr\xC3\xA4nkweg|1\x0A63699|Kefenrod||||23\x0A63628|Kerbersdorf|Bad Soden-Salm\xC3\xBCnster|Kerbersdorf|Ziegelh\xC3\xBCttenstra\xC3\x9Fe|2\x0A63628|Kerbersdorf||||2\x0A63454|Kesselstadt|Hanau|Kesselstadt|K\xC3\xB6nigsberger Stra\xC3\x9Fe|12\x0A63454|Kesselstadt|Hanau|Kesselstadt|Schweriner Stra\xC3\x9Fe|17\x0A63454|Kesselstadt|Hanau|Kesselstadt|Stettiner Stra\xC3\x9Fe|2\x0A63454|Kesselstadt|Hanau|Kesselstadt|Kopernikusstra\xC3\x9Fe|20\x0A63454|Kesselstadt|Hanau|Kesselstadt|Potsdamer Stra\xC3\x9Fe|2\x0A63454|Kesselstadt|Hanau|Kesselstadt|Stettiner Stra\xC3\x9Fe|4\x0A63454|Kesselstadt|Hanau|Kesselstadt|Dresdener Stra\xC3\x9Fe|39\x0A63454|Kesselstadt|Hanau|Kesselstadt|Herderweg|1\x0A63454|Kesselstadt|Hanau|Kesselstadt|K\xC3\xB6nigsberger Stra\xC3\x9Fe|19\x0A63454|Kesselstadt|Hanau|Kesselstadt|Kurt-Schumacher-Platz|7\x0A63454|Kesselstadt|Hanau|Kesselstadt|Tilsiter Stra\xC3\x9Fe|3\x0A63454|Kesselstadt|Hanau|Hanau|Burgallee|13\x0A63454|Kesselstadt|Hanau|Kesselstadt|Dresdener Stra\xC3\x9Fe|16\x0A63454|Kesselstadt|Hanau|Kesselstadt|Gerhart-Hauptmann-Stra\xC3\x9Fe|2\x0A63454|Kesselstadt|Hanau|Kesselstadt|Selma-Lagerl\xC3\xB6f-Stra\xC3\x9Fe|3\x0A63454|Kesselstadt|Hanau|Kesselstadt|Fraunhoferstra\xC3\x9Fe|1\x0A63454|Kesselstadt|Hanau|Kesselstadt|Kantstra\xC3\x9Fe|6\x0A63454|Kesselstadt|Hanau|Kesselstadt|Kirchhoffstra\xC3\x9Fe|17\x0A63454|Kesselstadt|Hanau|Kesselstadt|Liebigstra\xC3\x9Fe|1\x0A63454|Kesselstadt|Hanau|Kesselstadt|Philipp-Reis-Stra\xC3\x9Fe|11\x0A63454|Kesselstadt|Hanau|Kesselstadt|Karlsbader Stra\xC3\x9Fe|44\x0A63454|Kesselstadt|Hanau|Kesselstadt|R\xC3\xB6ntgenstra\xC3\x9Fe|13\x0A63454|Kesselstadt|Hanau|Kesselstadt|Am Tiefen Weg|1\x0A63454|Kesselstadt|Hanau|Kesselstadt|Hopfenstra\xC3\x9Fe|1\x0A63454|Kesselstadt|Hanau|Kesselstadt|Kastanienallee|2\x0A63454|Kesselstadt|Hanau|Kesselstadt|Salisweg|3\x0A63454|Kesselstadt||||260\x0A63633|Kirchbracht|Birstein|Kirchbracht|Kreisstra\xC3\x9Fe|1\x0A63633|Kirchbracht||||1\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Alzenauer Stra\xC3\x9Fe|2\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Am Pachtanger|4\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Am Wiesengrund|1\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Bornpfad|1\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Burggartsweidig|5\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Eisenbahnstra\xC3\x9Fe|8\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Feldstra\xC3\x9Fe|5\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|In den Krautg\xC3\xA4rten|1\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Karl-Arnold-Stra\xC3\x9Fe|2\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Kolpingstra\xC3\x9Fe|1\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Obergasse|1\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Seligenst\xC3\xA4dter Stra\xC3\x9Fe|1\x0A63456|Klein-Auheim||||32\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Adolph-Kolping-Stra\xC3\x9Fe|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Anne-Frank-Weg|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Erzbergerstra\xC3\x9Fe|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Fahrstra\xC3\x9Fe|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Geschwister-Scholl-Stra\xC3\x9Fe|9\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Goethestra\xC3\x9Fe|2\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Gutenbergstra\xC3\x9Fe|2\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Hessenstra\xC3\x9Fe|6\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Jahnstra\xC3\x9Fe|2\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Kapellenweg|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Kappesweg|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Kirchstra\xC3\x9Fe|3\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Konrad-Adenauer-Stra\xC3\x9Fe|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Liebigstra\xC3\x9Fe|5\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Ludwig-Erhard-Stra\xC3\x9Fe|2\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Schlesienstra\xC3\x9Fe|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Spessartstra\xC3\x9Fe|7\x0A63512|Klein-Krotzenbrg||||46\x0A63452|Lamboy|Hanau|Hanau|August-Sch\xC3\xA4rttner-Stra\xC3\x9Fe|1\x0A63452|Lamboy|Hanau|Hanau|Breitscheidstra\xC3\x9Fe|3\x0A63452|Lamboy|Hanau|Hanau|Dartforder Stra\xC3\x9Fe|4\x0A63452|Lamboy|Hanau|Hanau|Dr.-Elisabeth-Schmitz-Stra\xC3\x9Fe|8\x0A63452|Lamboy|Hanau|Hanau|Eibenweg|2\x0A63452|Lamboy|Hanau|Hanau|Friedrich-Engels-Stra\xC3\x9Fe|14\x0A63452|Lamboy|Hanau|Hanau|Gabelsbergerstra\xC3\x9Fe|3\x0A63452|Lamboy|Hanau|Hanau|Karl-Marx-Stra\xC3\x9Fe|10\x0A63452|Lamboy|Hanau|Hanau|Kleib\xC3\xB6merstra\xC3\x9Fe|2\x0A63452|Lamboy|Hanau|Hanau|Lenbachstra\xC3\x9Fe|2\x0A63452|Lamboy|Hanau|Hanau|Paul-Ehrlich-Stra\xC3\x9Fe|5\x0A63452|Lamboy|Hanau|Hanau|Plantagenstra\xC3\x9Fe|5\x0A63452|Lamboy|Hanau|Hanau|Richard-K\xC3\xBCch-Stra\xC3\x9Fe|7\x0A63452|Lamboy|Hanau|Hanau|Theodor-Groppe-Stra\xC3\x9Fe|2\x0A63452|Lamboy|Hanau|Hanau|Am T\xC3\xBCmpelgarten|12\x0A63452|Lamboy|Hanau|Hanau|August-Sch\xC3\xA4rttner-Stra\xC3\x9Fe|14\x0A63452|Lamboy|Hanau|Hanau|Kiefernweg|5\x0A63452|Lamboy|Hanau|Hanau|L\xC3\xA4rchenweg|4\x0A63452|Lamboy|Hanau|Hanau|Neuhofstra\xC3\x9Fe|6\x0A63452|Lamboy||||109\x0A63165|L\xC3\xA4mmerspiel|M\xC3\xBChlheim am Main|L\xC3\xA4mmerspiel|Bischof-Ketteler-Stra\xC3\x9Fe|1\x0A63165|L\xC3\xA4mmerspiel|M\xC3\xBChlheim am Main|L\xC3\xA4mmerspiel|Brentanostra\xC3\x9Fe|2\x0A63165|L\xC3\xA4mmerspiel|M\xC3\xBChlheim am Main|L\xC3\xA4mmerspiel|Obertsh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63165|L\xC3\xA4mmerspiel|M\xC3\xBChlheim am Main|L\xC3\xA4mmerspiel|Schumacherstra\xC3\x9Fe|3\x0A63165|L\xC3\xA4mmerspiel|M\xC3\xBChlheim am Main|L\xC3\xA4mmerspiel|Waldstra\xC3\x9Fe|2\x0A63165|L\xC3\xA4mmerspiel||||9\x0A63546 Sum|Langen-Bergheim|Hammersbach|Langen-Bergheim|Wechmarer Ring|1\x0A63546 Sum|Langen-Bergheim||||1\x0A63526|Langendiebach|Erlensee|R\xC3\xBCckingen|Am G\xC3\xA4nseweiher|1\x0A63526|Langendiebach|Erlensee|Langendiebach|Am Rathaus|2\x0A63526|Langendiebach|Erlensee|Langendiebach|August-Bebel-Stra\xC3\x9Fe|1\x0A63526|Langendiebach|Erlensee|Langendiebach|Biggleswadestra\xC3\x9Fe|19\x0A63526|Langendiebach|Erlensee|R\xC3\xBCckingen|Dammstra\xC3\x9Fe|2\x0A63526|Langendiebach|Erlensee|Langendiebach|Fallbachstra\xC3\x9Fe|4\x0A63526|Langendiebach|Erlensee|Langendiebach|Langenselbolder Weg|2\x0A63526|Langendiebach|Erlensee|R\xC3\xBCckingen|Langstra\xC3\x9Fe|2\x0A63526|Langendiebach|Erlensee|Langendiebach|Reu\xC3\x9Ferhofstra\xC3\x9Fe|1\x0A63526|Langendiebach|Erlensee|Langendiebach|Rosenstra\xC3\x9Fe|1\x0A63526|Langendiebach|Erlensee|Langendiebach|R\xC3\xBCdigheimer Weg|2\x0A63526|Langendiebach|Erlensee|Langendiebach|Theodor-Heuss-Stra\xC3\x9Fe|1\x0A63526|Langendiebach|Erlensee|Langendiebach|Vogelsbergstra\xC3\x9Fe|1\x0A63526|Langendiebach|Erlensee|Langendiebach|Wusterwitzer Stra\xC3\x9Fe|18\x0A63526|Langendiebach||||57\x0A63505|Langenselbold|Langenselbold|Langenselbold|Am Br\xC3\xBChl|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Am H\xC3\xA4usergraben|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Bahnstra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Birkenstra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Clara-Schumann-Stra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Clemens-Brentano-Stra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Elise-Meitner-Stra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Emmy-Noether-Stra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Im Stockborn|3\x0A63505|Langenselbold|Langenselbold|Langenselbold|Johann-Strau\xC3\x9F-Allee|2\x0A63505|Langenselbold|Langenselbold|Langenselbold|Kreuze|2\x0A63505|Langenselbold|Langenselbold|Langenselbold|Marie-Curie-Stra\xC3\x9Fe|4\x0A63505|Langenselbold|Langenselbold|Langenselbold|Niedertalstra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Philipp-Reis-Ring|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Robert-Koch-Stra\xC3\x9Fe|5\x0A63505|Langenselbold|Langenselbold|Langenselbold|R\xC3\xB6delbergstra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Schlo\xC3\x9Fstra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Am Pappelried|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Auf der Sieb|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Friedrichstra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Gelnh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Im Ellenb\xC3\xBCgel|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Spessartstra\xC3\x9Fe|1\x0A63505|Langenselbold||||34\x0A63599|Lanzingen|Biebergem\xC3\xBCnd|Lanzingen|Am Gassenacker|1\x0A63599|Lanzingen|Biebergem\xC3\xBCnd|Lanzingen|Breitenborner Stra\xC3\x9Fe|1\x0A63599|Lanzingen|Biebergem\xC3\xBCnd|Lanzingen|Quellenstra\xC3\x9Fe|1\x0A63599|Lanzingen||||3\x0A63607|Leisenwald|W\xC3\xA4chtersbach|Leisenwald|Wolferborner Stra\xC3\x9Fe|2\x0A63607|Leisenwald||||2\x0A63637 Sum|Letgenbrun|Jossgrund|Lettgenbrunn|S\xC3\xBCdm\xC3\xA4hrer Weg|1\x0A63637 Sum|Letgenbrun||||1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Alte Hofstra\xC3\x9Fe|8\x0A63584|Lieblos|Gr\xC3\xBCndau||Alte Leipziger Stra\xC3\x9Fe|2\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Am Dreschplatz|7\x0A63584|Lieblos|Gr\xC3\xBCndau||An der Eisenbahn|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|August-Imhof-Stra\xC3\x9Fe|15\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Breitwiese|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|B\xC3\xBCdinger Stra\xC3\x9Fe|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Dammweg|3\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Faltergartenstra\xC3\x9Fe|2\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Fr\xC3\xB6belstra\xC3\x9Fe|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Mittel-Gr\xC3\xBCndau|Gartenstra\xC3\x9Fe|2\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Herzbergstra\xC3\x9Fe|2\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Im Euler|2\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Langer Rain|2\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Leipziger Stra\xC3\x9Fe|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Meerholzer Landweg|3\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Neugersdorfer Stra\xC3\x9Fe|3\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Nordstra\xC3\x9Fe|3\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Oberfeldstra\xC3\x9Fe|7\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Oberlausitzer Stra\xC3\x9Fe|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|R\xC3\xB6testra\xC3\x9Fe|4\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Sudetenstra\xC3\x9Fe|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Th\xC3\xBCringer Stra\xC3\x9Fe|7\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Weinbergstra\xC3\x9Fe|1\x0A63584|Lieblos||||80\x0A63694|Limeshain|Hasselroth|Neuenha\xC3\x9Flau|Barbarossastra\xC3\x9Fe|1\x0A63694|Limeshain||||1\x0A63674|Lindheim|Altenstadt|Lindheim|Altenst\xC3\xA4dter Stra\xC3\x9Fe|1\x0A63674|Lindheim|Altenstadt|Lindheim|Heugasse|1\x0A63674|Lindheim|Altenstadt||Leimenkautenfeld|2\x0A63674|Lindheim|Altenstadt|Lindheim|Nikkisostra\xC3\x9Fe|1\x0A63674|Lindheim|Altenstadt|Lindheim|Siedlerstra\xC3\x9Fe|3\x0A63674|Lindheim||||8\x0A63639 Sum|Lohrhaupten|Fl\xC3\xB6rsbachtal|Lohrhaupten|Gartenstra\xC3\x9Fe|1\x0A63639 Sum|Lohrhaupten||||1\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|Am Flutgraben|1\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|Am Hellerberg|1\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|An den Drei B\xC3\xA4umen|1\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|Gartenweg|2\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|Hans-Merian-Ring|8\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|Hardecker Stra\xC3\x9Fe|2\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|Herrnhuter Stra\xC3\x9Fe|4\x0A63654|Lorbach||||19\x0A63533|Mainflingen|Mainhausen|Mainflingen|Eichenstra\xC3\x9Fe|1\x0A63533|Mainflingen|Mainhausen|Mainflingen|Hauptstra\xC3\x9Fe|2\x0A63533|Mainflingen|Mainhausen|Mainflingen|Kantstra\xC3\x9Fe|1\x0A63533|Mainflingen|Mainhausen|Mainflingen|Kettelerstra\xC3\x9Fe|2\x0A63533|Mainflingen|Mainhausen|Mainflingen|Martinstra\xC3\x9Fe|1\x0A63533|Mainflingen||||7\x0A63546 Sum|Mark\xC3\xB6bel|Hammersbach|Mark\xC3\xB6bel|Burgstra\xC3\x9Fe|2\x0A63546 Sum|Mark\xC3\xB6bel|Hammersbach|Mark\xC3\xB6bel|Limesstra\xC3\x9Fe|1\x0A63546 Sum|Mark\xC3\xB6bel|Hammersbach|Mark\xC3\xB6bel|R\xC3\xB6merstra\xC3\x9Fe|1\x0A63546 Sum|Mark\xC3\xB6bel||||4\x0A63571|Meerholz|Gelnhausen|Meerholz|Am Pfarrgarten|1\x0A63571|Meerholz|Gelnhausen|Meerholz|Am Schlo\xC3\x9Fgarten|1\x0A63571|Meerholz|Gelnhausen|Meerholz|Am Viadukt|4\x0A63571|Meerholz|Gelnhausen|Meerholz|Amselweg|1\x0A63571|Meerholz|Gelnhausen|Meerholz|Europastra\xC3\x9Fe|1\x0A63571|Meerholz|Gelnhausen|Meerholz|Graf-Gustav-Weg|2\x0A63571|Meerholz|Gelnhausen|Meerholz|Gr\xC3\xA4fin-Thekla-Weg|3\x0A63571|Meerholz|Gelnhausen|Meerholz|Im B\xC3\xB6rner|1\x0A63571|Meerholz|Gelnhausen|Meerholz|K\xC3\xB6nigsberger Stra\xC3\x9Fe|1\x0A63571|Meerholz|Gelnhausen|Meerholz|Mittlauer Weg|2\x0A63571|Meerholz|Gelnhausen|Hailer|Sudetenstra\xC3\x9Fe|1\x0A63571|Meerholz|Gelnhausen|Meerholz|Wiesenbornstra\xC3\x9Fe|3\x0A63571|Meerholz||||21\x0A63654|Michelau|B\xC3\xBCdingen|Michelau|Moosbergstra\xC3\x9Fe|3\x0A63654|Michelau|B\xC3\xBCdingen|Michelau|Wiebelsteinweg|1\x0A63654|Michelau||||4\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Am Haubenflug|1\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Am L\xC3\xBCtzelberg|2\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|An der Gro\xC3\x9Fen Wiese|3\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Auf den R\xC3\xB6merkastellen|1\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Habichtswaldstra\xC3\x9Fe|1\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Nauheimer Stra\xC3\x9Fe|1\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Ro\xC3\x9Fdorfer Stra\xC3\x9Fe|1\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Wachenbuchener Stra\xC3\x9Fe|2\x0A63454|Mittelbuchen||||12\x0A63584|Mittelgr\xC3\xBCndau|Gr\xC3\xBCndau|Mittel-Gr\xC3\xBCndau|Ahl|1\x0A63584|Mittelgr\xC3\xBCndau|Gr\xC3\xBCndau|Mittel-Gr\xC3\xBCndau|Am Hirschsprung|1\x0A63584|Mittelgr\xC3\xBCndau|Gr\xC3\xBCndau|Mittel-Gr\xC3\xBCndau|Gr\xC3\xBCner Weg|1\x0A63584|Mittelgr\xC3\xBCndau|Gr\xC3\xBCndau|Mittel-Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndauer Stra\xC3\x9Fe|1\x0A63584|Mittelgr\xC3\xBCndau|Gr\xC3\xBCndau|Mittel-Gr\xC3\xBCndau|Im Wagnersgrund|4\x0A63584|Mittelgr\xC3\xBCndau||||8\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Bahnhofstra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Dietesheimer Stra\xC3\x9Fe|4\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Holbeinstra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main||L\xC3\xA4mmerspieler Stra\xC3\x9Fe|2\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Ludwigstra\xC3\x9Fe|4\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Schillerstra\xC3\x9Fe|21\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Blumenstra\xC3\x9Fe|2\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Dresdener Stra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Friedensstra\xC3\x9Fe|7\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Hausener Weg|22\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|K\xC3\xA4the-Kollwitz-Stra\xC3\x9Fe|13\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main||L\xC3\xA4mmerspieler Stra\xC3\x9Fe|4\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|M\xC3\xBCllerweg|20\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Robert-Bosch-Weg|13\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Tiefenorter Ring|3\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Tilsiter Stra\xC3\x9Fe|2\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Tulpenweg|2\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Ulmenstra\xC3\x9Fe|7\x0A63165|M\xC3\xBChlheim||||129\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Am Dreispitz|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Angergasse|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Aussiger Stra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Austra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Ebertstra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Grenzstra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Hindemithstra\xC3\x9Fe|2\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Hoffmannstra\xC3\x9Fe|4\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Marktstra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Offenbacher Stra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Rote-Warte-Stra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|R\xC3\xBCckertstra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.||||16\x0A63607|Neudorf|W\xC3\xA4chtersbach|Neudorf|Am Rosengarten|1\x0A63607|Neudorf|W\xC3\xA4chtersbach|Neudorf|Aufenauer Stra\xC3\x9Fe|1\x0A63607|Neudorf|W\xC3\xA4chtersbach|Neudorf|Birkenstra\xC3\x9Fe|1\x0A63607|Neudorf||||3\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Bahnhofstra\xC3\x9Fe|1\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Erlenstra\xC3\x9Fe|2\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Im Rosengarten|1\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|In den St\xC3\xBCmpfen|1\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Kirchgasse|1\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Mainstra\xC3\x9Fe|2\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|M\xC3\xBChlbachstra\xC3\x9Fe|3\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Rheinstra\xC3\x9Fe|10\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Simmigstra\xC3\x9Fe|2\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Tannenstra\xC3\x9Fe|1\x0A63594|Neuenha\xC3\x9Flau||||24\x0A63636 Sum|Neuenschmidten, Brachttal, Germany|Brachttal|Schlierbach|Birsteiner Stra\xC3\x9Fe|2\x0A63636 Sum|Neuenschmidten, Brachttal, Germany||||2\x0A63579|Neuses|Freigericht|Neuses|Schulstra\xC3\x9Fe|1\x0A63579|Neuses|Freigericht|Somborn|Waldstra\xC3\x9Fe|2\x0A63579|Neuses||||3\x0A63549 Sum|Neuwiedermu\xC3\x9F|Ronneburg|Neuwiedermu\xC3\x9F|Am Eisick|2\x0A63549 Sum|Neuwiedermu\xC3\x9F|Ronneburg|Neuwiedermu\xC3\x9F|Odenwaldstra\xC3\x9Fe|1\x0A63549 Sum|Neuwiedermu\xC3\x9F||||3\x0A63599|Neuwirtheim|Biebergem\xC3\xBCnd|Neuwirtheim|Karlsbader Stra\xC3\x9Fe|2\x0A63599|Neuwirtheim|Biebergem\xC3\xBCnd|Neuwirtheim|Stettiner Stra\xC3\x9Fe|1\x0A63599|Neuwirtheim|Biebergem\xC3\xBCnd|Neuwirtheim|Tilsiter Stra\xC3\x9Fe|1\x0A63599|Neuwirtheim||||4\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|Altenburgring|1\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|An der Nachtweide|3\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|An der Ruhbank|1\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|Berliner Stra\xC3\x9Fe|2\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|Junkergasse|1\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|Oberdorfelder Stra\xC3\x9Fe|1\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|Saint-Sever-Stra\xC3\x9Fe|3\x0A61138 Sum|Niederdorfelden||||12\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Birkenweg|3\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Im Krebsengarten|3\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Laussonner Stra\xC3\x9Fe|3\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Lerchenweg|1\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Mittel-Gr\xC3\xBCndauer Stra\xC3\x9Fe|3\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Schieferbergstra\xC3\x9Fe|1\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Schwalbenrain|1\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Untergasse|2\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Weingartenstra\xC3\x9Fe|2\x0A63584|Niedergr\xC3\xBCndau||||19\x0A63486|Niederissigheim|Bruchk\xC3\xB6bel|Niederissigheim|Heinrich-B\xC3\xB6ll-Stra\xC3\x9Fe|2\x0A63486|Niederissigheim|Bruchk\xC3\xB6bel|Niederissigheim|Heinrich-Hoffmann-Stra\xC3\x9Fe|1\x0A63486|Niederissigheim||||3\x0A63594|Niedermittlau|Hasselroth|Niedermittlau|Alte Dorfstra\xC3\x9Fe|1\x0A63594|Niedermittlau|Hasselroth|Niedermittlau|Hopfengartenstra\xC3\x9Fe|1\x0A63594|Niedermittlau|Hasselroth|Niedermittlau|J\xC3\xA4gerbuschstra\xC3\x9Fe|1\x0A63594|Niedermittlau|Hasselroth|Niedermittlau|Vogelsbergstra\xC3\x9Fe|1\x0A63594|Niedermittlau||||4\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Adolf-Reichwein-Stra\xC3\x9Fe|1\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Alzenauer Stra\xC3\x9Fe|2\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Feldbergstra\xC3\x9Fe|3\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Hainbornstra\xC3\x9Fe|1\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Heinrich-Heine-Stra\xC3\x9Fe|2\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|In der Gartel|3\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Landwehrstra\xC3\x9Fe|1\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Nordring|1\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|S\xC3\xBCdring|1\x0A63517|Niederrodenbach||||15\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Am Buchrain|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Am Jubil\xC3\xA4umsstein|3\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Am Kappenwald|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Am Karnweg|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Am Wiesengrund|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Berliner Stra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Breidertring|19\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Drosselstra\xC3\x9Fe|2\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Eisenbahnstra\xC3\x9Fe|2\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Erzbergerstra\xC3\x9Fe|2\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Frankfurter Stra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Geranienstra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Hanauer Stra\xC3\x9Fe|4\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Heinrich-von-Kleist-Stra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Hermann-L\xC3\xB6ns-Stra\xC3\x9Fe|2\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|H\xC3\xBCgelstra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|J\xC3\xA4gerstra\xC3\x9Fe|2\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Lindenweg|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Ludwig-Uhland-Stra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark||Nieder-R\xC3\xB6der-Stra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Odenwaldstra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Riemenschneiderstra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Talstra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Wingertstra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Zum Steckengarten|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany||||53\x0A63674|Oberau|Altenstadt|Oberau|Am Pfahlgraben|1\x0A63674|Oberau|Altenstadt|Oberau|Kochgasse|1\x0A63674|Oberau|Altenstadt|Oberau|Lange Stra\xC3\x9Fe|1\x0A63674|Oberau||||3\x0A63637 Sum|Oberndorf|Jossgrund|Oberndorf|Lohrer Stra\xC3\x9Fe|1\x0A63637 Sum|Oberndorf|Jossgrund|Oberndorf|Schulstra\xC3\x9Fe|1\x0A63637 Sum|Oberndorf||||2\x0A63517|Oberrodenbach|Rodenbach||Barbarossastra\xC3\x9Fe|1\x0A63517|Oberrodenbach|Rodenbach|Oberrodenbach|Hanauer Stra\xC3\x9Fe|1\x0A63517|Oberrodenbach|Rodenbach|Oberrodenbach|Talstra\xC3\x9Fe|1\x0A63517|Oberrodenbach||||3\x0A63633|Obersotzbach|Birstein|Obersotzbach|Hellwaldblick|1\x0A63633|Obersotzbach|Birstein|Obersotzbach|Waldschulstra\xC3\x9Fe|1\x0A63633|Obersotzbach||||2\x0A63179|Obertshausen|Obertshausen|Obertshausen|August-Bebel-Stra\xC3\x9Fe|1\x0A63179|Obertshausen|Obertshausen|Obertshausen|B\xC3\xB6hmerwaldstra\xC3\x9Fe|4\x0A63179|Obertshausen|Obertshausen|Obertshausen|Danziger Stra\xC3\x9Fe|22\x0A63179|Obertshausen|Obertshausen|Obertshausen|Geleitstra\xC3\x9Fe|2\x0A63179|Obertshausen|Obertshausen|Obertshausen|Georg-Kerschensteiner-Stra\xC3\x9Fe|5\x0A63179|Obertshausen|Obertshausen|Obertshausen|Grenzstra\xC3\x9Fe|1\x0A63179|Obertshausen|Obertshausen|Obertshausen|Laakirchener Stra\xC3\x9Fe|9\x0A63179|Obertshausen|Obertshausen|Obertshausen|Leipziger Stra\xC3\x9Fe|11\x0A63179|Obertshausen|Obertshausen|Obertshausen|Theodor-Heuss-Stra\xC3\x9Fe|1\x0A63179|Obertshausen|Obertshausen|Obertshausen|Beethovenstra\xC3\x9Fe|3\x0A63179|Obertshausen|Obertshausen|Obertshausen|Berliner Stra\xC3\x9Fe|2\x0A63179|Obertshausen|Obertshausen|Obertshausen|Bieberer Stra\xC3\x9Fe|12\x0A63179|Obertshausen|Obertshausen|Obertshausen|Eichenweg|1\x0A63179|Obertshausen|Obertshausen|Obertshausen|Erzbergerstra\xC3\x9Fe|1\x0A63179|Obertshausen|Obertshausen|Obertshausen|Heusenstammer Stra\xC3\x9Fe|1\x0A63179|Obertshausen|Obertshausen|Obertshausen|Stra\xC3\x9Fe im Loh|3\x0A63179|Obertshausen|Obertshausen|Obertshausen|Vogelsbergstra\xC3\x9Fe|7\x0A63179|Obertshausen|Obertshausen|Obertshausen|Von-Stauffenberg-Stra\xC3\x9Fe|2\x0A63179|Obertshausen|Obertshausen|Obertshausen|Waldstra\xC3\x9Fe|1\x0A63179|Obertshausen||||89\x0A63654|Orleshausen|B\xC3\xBCdingen|Orleshausen|Am Herrenh\xC3\xB6fchen|3\x0A63654|Orleshausen|B\xC3\xBCdingen|Orleshausen|B\xC3\xBCcheser Stra\xC3\x9Fe|2\x0A63654|Orleshausen|B\xC3\xBCdingen|Orleshausen|Hardeckring|9\x0A63654|Orleshausen|B\xC3\xBCdingen|Orleshausen|Hungebergweg|3\x0A63654|Orleshausen|B\xC3\xBCdingen|Orleshausen|Orlesh\xC3\xA4user Hauptstra\xC3\x9Fe|8\x0A63654|Orleshausen||||25\x0A61130|Ostheim|Nidderau|Ostheim|Alte Ziegelei|1\x0A61130|Ostheim|Nidderau|Ostheim|Am Jungfernborn|2\x0A61130|Ostheim|Nidderau|Ostheim|Am Weinberg|1\x0A61130|Ostheim|Nidderau|Ostheim|Am Ziegelweiher|3\x0A61130|Ostheim|Nidderau|Ostheim|Eisenbahnstra\xC3\x9Fe|1\x0A61130|Ostheim|Nidderau|Ostheim|Fasanenweg|1\x0A61130|Ostheim|Nidderau|Ostheim|In der M\xC3\xBChlweide|1\x0A61130|Ostheim|Nidderau|Ostheim|Limesstra\xC3\x9Fe|1\x0A61130|Ostheim||||11\x0A63543|Ravolzhausen|Neuberg|Ravolzhausen|Darmst\xC3\xA4dter Stra\xC3\x9Fe|1\x0A63543|Ravolzhausen|Neuberg|Ravolzhausen|Oberissigheimer Stra\xC3\x9Fe|1\x0A63543|Ravolzhausen||||2\x0A63150|Rembr\xC3\xBCcken, Heusenstamm, Germany|Heusenstamm|Rembr\xC3\xBCcken|Im Vogelseen|2\x0A63150|Rembr\xC3\xBCcken, Heusenstamm, Germany||||2\x0A63654|Rinderb\xC3\xBCgen|B\xC3\xBCdingen|Rinderb\xC3\xBCgen|Am Eckelgarten|1\x0A63654|Rinderb\xC3\xBCgen|B\xC3\xBCdingen|Rinderb\xC3\xBCgen|Am Hohenrain|8\x0A63654|Rinderb\xC3\xBCgen|B\xC3\xBCdingen|Rinderb\xC3\xBCgen|Auf der Wann|1\x0A63654|Rinderb\xC3\xBCgen|B\xC3\xBCdingen|Rinderb\xC3\xBCgen|Haingarten|1\x0A63654|Rinderb\xC3\xBCgen|B\xC3\xBCdingen|Rinderb\xC3\xBCgen|M\xC3\xBChlgasse|1\x0A63654|Rinderb\xC3\xBCgen|B\xC3\xBCdingen|Rinderb\xC3\xBCgen|Parkstra\xC3\x9Fe|2\x0A63654|Rinderb\xC3\xBCgen||||14\x0A63674|Rodenbach|Altenstadt|Rodenbach|Ortenberger Stra\xC3\x9Fe|1\x0A63674|Rodenbach|Altenstadt|Rodenbach|Rh\xC3\xB6nstra\xC3\x9Fe|1\x0A63674|Rodenbach|Altenstadt|Rodenbach|Unterstra\xC3\x9Fe|8\x0A63674|Rodenbach||||10\x0A63322|R\xC3\xB6dermark-Messenhausen|R\xC3\xB6dermark||Urberacher Stra\xC3\x9Fe|1\x0A63322|R\xC3\xB6dermark-Messenhausen||||1\x0A63322|R\xC3\xB6dermark-Urberach|R\xC3\xB6dermark|Urberach|Bruchwiesenstra\xC3\x9Fe|3\x0A63322|R\xC3\xB6dermark-Urberach|R\xC3\xB6dermark|Urberach|Naheweg|1\x0A63322|R\xC3\xB6dermark-Urberach|R\xC3\xB6dermark|Urberach|Nikolaus-Schwarzkopf-Stra\xC3\x9Fe|9\x0A63322|R\xC3\xB6dermark-Urberach|R\xC3\xB6dermark|Urberach|Rodaustra\xC3\x9Fe|1\x0A63322|R\xC3\xB6dermark-Urberach|R\xC3\xB6dermark|Urberach|Schillerstra\xC3\x9Fe|8\x0A63322|R\xC3\xB6dermark-Urberach||||22\x0A63628|Romsthal|Bad Soden-Salm\xC3\xBCnster|Romsthal|Lange Wiese|5\x0A63628|Romsthal|Bad Soden-Salm\xC3\xBCnster|Romsthal|Luzerneweg|1\x0A63628|Romsthal|Bad Soden-Salm\xC3\xBCnster|Romsthal|Wahlerter Stra\xC3\x9Fe|1\x0A63628|Romsthal||||7\x0A63452|Rosenau|Hanau|Hanau|Ameliastra\xC3\x9Fe|1\x0A63452|Rosenau|Hanau|Hanau|Beethovenplatz|1\x0A63452|Rosenau|Hanau|Hanau|Brahmsweg|1\x0A63452|Rosenau|Hanau|Hanau|Brucknerstra\xC3\x9Fe|2\x0A63452|Rosenau|Hanau|Hanau|Gustav-Adolf-Stra\xC3\x9Fe|1\x0A63452|Rosenau|Hanau|Hanau|Kattenstra\xC3\x9Fe|1\x0A63452|Rosenau|Hanau|Gro\xC3\x9Fauheim|Carl-Kronenberger-Stra\xC3\x9Fe|1\x0A63452|Rosenau|Hanau|Hanau|Salisweg|1\x0A63452|Rosenau||||9\x0A63599|Ro\xC3\x9Fbach|Biebergem\xC3\xBCnd|Ro\xC3\x9Fbach|Brunnenstra\xC3\x9Fe|1\x0A63599|Ro\xC3\x9Fbach|Biebergem\xC3\xBCnd|Ro\xC3\x9Fbach|Zur Kaisereiche|1\x0A63599|Ro\xC3\x9Fbach||||2\x0A63486|Ro\xC3\x9Fdorf|Bruchk\xC3\xB6bel|Ro\xC3\x9Fdorf|Eichendorffanlage|4\x0A63486|Ro\xC3\x9Fdorf|Bruchk\xC3\xB6bel|Ro\xC3\x9Fdorf|Hanauer Stra\xC3\x9Fe|1\x0A63486|Ro\xC3\x9Fdorf|Bruchk\xC3\xB6bel|Ro\xC3\x9Fdorf|Thomas-Mann-Stra\xC3\x9Fe|1\x0A63486|Ro\xC3\x9Fdorf||||6\x0A63571|Roth|Gelnhausen|Roth|Altdorfstra\xC3\x9Fe|3\x0A63571|Roth|Gelnhausen|Roth|Am R\xC3\xB6ther H\xC3\xA4uschen|1\x0A63571|Roth|Gelnhausen|Roth|Gartenstra\xC3\x9Fe|2\x0A63571|Roth|Gelnhausen|Hailer|Gelnh\xC3\xA4user Stra\xC3\x9Fe|3\x0A63571|Roth|Gelnhausen|Roth|Herzbergstra\xC3\x9Fe|1\x0A63571|Roth|Gelnhausen|Roth|Hochstra\xC3\x9Fe|4\x0A63571|Roth|Gelnhausen|Roth|Im Goldberg|4\x0A63571|Roth|Gelnhausen|Roth|Junkenhofstra\xC3\x9Fe|3\x0A63571|Roth|Gelnhausen||Kinzigtalblick|1\x0A63571|Roth|Gelnhausen|Roth|Nordstra\xC3\x9Fe|2\x0A63571|Roth|Gelnhausen|Roth|Quellenstra\xC3\x9Fe|2\x0A63571|Roth|Gelnhausen|Roth|Rathausstra\xC3\x9Fe|2\x0A63571|Roth|Gelnhausen|Roth|R\xC3\xB6ther Wingertstra\xC3\x9Fe|1\x0A63571|Roth|Gelnhausen|Roth|Unterstra\xC3\x9Fe|1\x0A63571|Roth||||30\x0A63584|Rothenbergen|Gr\xC3\xBCndau||Alte Leipziger Stra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Heiligenstock|3\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Am Sportplatz|4\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|An der Nachtweide|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Auf der Messbach|7\x0A63584|Rothenbergen|Gr\xC3\xBCndau||Bahnhofstra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Berliner Stra\xC3\x9Fe|2\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Bogenstra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Br\xC3\xBCder-Grimm-Stra\xC3\x9Fe|2\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Brunnenstra\xC3\x9Fe|2\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Eichendorffstra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Feldstra\xC3\x9Fe|6\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Frankfurter Stra\xC3\x9Fe|3\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Fuldaer Stra\xC3\x9Fe|6\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|F\xC3\xBCnfkirchner Stra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Georg-B\xC3\xBCchner-Stra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Goethestra\xC3\x9Fe|3\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Hofackerheeg|12\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Im Kleinen Feldchen|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|In der Hochstadt|5\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Jahnstra\xC3\x9Fe|3\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|John-Wesley-Stra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Karlsbader Stra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Niedergr\xC3\xBCndauer Stra\xC3\x9Fe|3\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Philipp-Reis-Stra\xC3\x9Fe|5\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Rohrstra\xC3\x9Fe|2\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Wibaustra\xC3\x9Fe|2\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Wiesenstra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Wingertstra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Zingelweg|1\x0A63584|Rothenbergen||||83\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|An der Sandwiese|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|An der W\xC3\xBCstung|4\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Beethovenstra\xC3\x9Fe|10\x0A63526|R\xC3\xBCckingen|Erlensee||Br\xC3\xBCckenstra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Georg-B\xC3\xBCchner-Stra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Hainstra\xC3\x9Fe|2\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Hattergasse|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Kastellstra\xC3\x9Fe|7\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Leipziger Stra\xC3\x9Fe|13\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Lindenstra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Marienstra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Markwaldsiedlung|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Mozartstra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Rh\xC3\xB6nstra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Taunusstra\xC3\x9Fe|7\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Waldstra\xC3\x9Fe|2\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Wilhelmstra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen||||55\x0A63543|R\xC3\xBCdigheim|Neuberg|R\xC3\xBCdigheim|Am M\xC3\xB6llerborn|1\x0A63543|R\xC3\xBCdigheim|Neuberg|R\xC3\xBCdigheim|Hainstra\xC3\x9Fe|1\x0A63543|R\xC3\xBCdigheim|Neuberg|R\xC3\xBCdigheim|Hintergasse|1\x0A63543|R\xC3\xBCdigheim|Neuberg|R\xC3\xBCdigheim|M\xC3\xBChlstra\xC3\x9Fe|1\x0A63543|R\xC3\xBCdigheim||||4\x0A63636 Sum|Schlierbach|Brachttal||Brachtstra\xC3\x9Fe|1\x0A63636 Sum|Schlierbach|Brachttal|Schlierbach|Hegstra\xC3\x9Fe|1\x0A63636 Sum|Schlierbach|Brachttal|Schlierbach|Hippegasse|2\x0A63636 Sum|Schlierbach|Brachttal|Schlierbach|In der Aue|2\x0A63636 Sum|Schlierbach|Brachttal|Schlierbach|Neue Stra\xC3\x9Fe|2\x0A63636 Sum|Schlierbach|Brachttal|Schlierbach|Weihergasse|1\x0A63636 Sum|Schlierbach||||9\x0A61137|Sch\xC3\xB6neck-B\xC3\xBCdesheim|Sch\xC3\xB6neck|B\xC3\xBCdesheim|Am Na\xC3\x9Fling|1\x0A61137|Sch\xC3\xB6neck-B\xC3\xBCdesheim|Sch\xC3\xB6neck|B\xC3\xBCdesheim|Eulenring|1\x0A61137|Sch\xC3\xB6neck-B\xC3\xBCdesheim|Sch\xC3\xB6neck|B\xC3\xBCdesheim|Fasanenstra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-B\xC3\xBCdesheim|Sch\xC3\xB6neck|B\xC3\xBCdesheim|Froschbachstra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-B\xC3\xBCdesheim|Sch\xC3\xB6neck|B\xC3\xBCdesheim|Ringstra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-B\xC3\xBCdesheim||||5\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Am Neuberg|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Anne-Frank-Stra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck||Bleichstra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Johann-Sebastian-Bach-Stra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Sonnensteig|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Talstra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Untergasse|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Wachenbucher Stra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Waldstra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten||||9\x0A61137|Sch\xC3\xB6neck-Oberdorffelden|Sch\xC3\xB6neck|Oberdorfelden|Hessenstra\xC3\x9Fe|2\x0A61137|Sch\xC3\xB6neck-Oberdorffelden|Sch\xC3\xB6neck|Oberdorfelden|Lerchenweg|1\x0A61137|Sch\xC3\xB6neck-Oberdorffelden|Sch\xC3\xB6neck|Oberdorfelden|Nidderauer Stra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Oberdorffelden|Sch\xC3\xB6neck|Oberdorfelden|Odenwaldstra\xC3\x9Fe|2\x0A61137|Sch\xC3\xB6neck-Oberdorffelden||||6\x0A63500|Seligenstadt|Seligenstadt|Seligenstadt|Berliner Stra\xC3\x9Fe|17\x0A63500|Seligenstadt|Seligenstadt|Seligenstadt|Babenh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63500|Seligenstadt|Seligenstadt|Seligenstadt|Giselastra\xC3\x9Fe|1\x0A63500|Seligenstadt|Seligenstadt|Seligenstadt|Hauptstra\xC3\x9Fe|1\x0A63500|Seligenstadt|Seligenstadt|Seligenstadt|Querstra\xC3\x9Fe|3\x0A63500|Seligenstadt|Seligenstadt|Seligenstadt|Wolfstra\xC3\x9Fe|1\x0A63500|Seligenstadt||||24\x0A63579|Somborn|Freigericht|Somborn|Am Sportfeld|5\x0A63579|Somborn|Freigericht|Somborn|Aue|2\x0A63579|Somborn|Freigericht||Auf dem Weidenstrauch|1\x0A63579|Somborn|Freigericht|Somborn|Dangelweg|2\x0A63579|Somborn|Freigericht||Im Schwalbengrund|1\x0A63579|Somborn|Freigericht|Somborn|Karlstra\xC3\x9Fe|1\x0A63579|Somborn|Freigericht|Somborn|Nelkenweg|1\x0A63579|Somborn|Freigericht|Somborn|Raiffeisenstra\xC3\x9Fe|1\x0A63579|Somborn|Freigericht|Somborn|Rosenstra\xC3\x9Fe|2\x0A63579|Somborn|Freigericht|Somborn|Theodor-Heuss-Stra\xC3\x9Fe|1\x0A63579|Somborn|Freigericht|Somborn|Tulpenweg|2\x0A63579|Somborn|Freigericht|Somborn|Vogelsbergblick|1\x0A63579|Somborn||||20\x0A63636 Sum|Spielberg|Brachttal|Spielberg|Hainbuchenweg|1\x0A63636 Sum|Spielberg|Brachttal|Spielberg|Herrnschwender Stra\xC3\x9Fe|1\x0A63636 Sum|Spielberg|Brachttal||Kreutstra\xC3\x9Fe|1\x0A63636 Sum|Spielberg||||3\x0A63456|Steinheim|Hanau|Steinheim|Auf den Sickenrain|1\x0A63456|Steinheim|Hanau|Steinheim|Brandenburgstra\xC3\x9Fe|1\x0A63456|Steinheim|Hanau|Steinheim|Doorner Stra\xC3\x9Fe|1\x0A63456|Steinheim|Hanau|Steinheim|Hermann-Ehlers-Stra\xC3\x9Fe|5\x0A63456|Steinheim|Hanau|Steinheim|Johannes-Eppert-Weg|1\x0A63456|Steinheim|Hanau|Steinheim|Johannes-Machern-Stra\xC3\x9Fe|4\x0A63456|Steinheim|Hanau|Steinheim|Karl-Kirstein-Stra\xC3\x9Fe|9\x0A63456|Steinheim|Hanau|Steinheim|Karlstra\xC3\x9Fe|2\x0A63456|Steinheim|Hanau|Steinheim|Pfaffenbrunnenstra\xC3\x9Fe|2\x0A63456|Steinheim|Hanau|Steinheim|Albrecht-D\xC3\xBCrer-Stra\xC3\x9Fe|1\x0A63456|Steinheim|Hanau|Steinheim|Dietzenseestra\xC3\x9Fe|3\x0A63456|Steinheim|Hanau|Steinheim|Eppsteinstra\xC3\x9Fe|4\x0A63456|Steinheim|Hanau|Steinheim|Idastra\xC3\x9Fe|3\x0A63456|Steinheim|Hanau|Steinheim|Illweg|1\x0A63456|Steinheim|Hanau|Steinheim|Kreuzweg|3\x0A63456|Steinheim|Hanau||Offenbacher Landstra\xC3\x9Fe|2\x0A63456|Steinheim|Hanau|Steinheim|Otto-Hahn-Stra\xC3\x9Fe|1\x0A63456|Steinheim|Hanau|Steinheim|Wilhelm-Paul-Stra\xC3\x9Fe|1\x0A63456|Steinheim||||45\x0A63695|Stockheim, Glauburg, Deutschland|Glauburg|Stockheim|Am W\xC3\xA4ldchen|1\x0A63695|Stockheim, Glauburg, Deutschland|Glauburg|Stockheim|Bahnhofstra\xC3\x9Fe|1\x0A63695|Stockheim, Glauburg, Deutschland|Glauburg|Stockheim|Berliner Stra\xC3\x9Fe|1\x0A63695|Stockheim, Glauburg, Deutschland|Glauburg|Stockheim|Ringstra\xC3\x9Fe|1\x0A63695|Stockheim, Glauburg, Deutschland|Glauburg|Stockheim|Unter der Struth|1\x0A63695|Stockheim, Glauburg, Deutschland|Glauburg|Stockheim|Weinbergstra\xC3\x9Fe|1\x0A63695|Stockheim, Glauburg, Deutschland||||6\x0A63636 Sum|Udenhain|Brachttal|Udenhain|Schauerwaldweg|1\x0A63636 Sum|Udenhain|Brachttal|Udenhain|Schulstra\xC3\x9Fe|3\x0A63636 Sum|Udenhain||||4\x0A63633|Unterreichenbach|Birstein|Unterreichenbach|Am Kirchacker|1\x0A63633|Unterreichenbach|Birstein|Unterreichenbach|Am Nollfeld|1\x0A63633|Unterreichenbach||||2\x0A63654|Vonhausen|B\xC3\xBCdingen|Vonhausen|Am Herrngarten|1\x0A63654|Vonhausen|B\xC3\xBCdingen|Vonhausen|An den Kernb\xC3\xA4umen|2\x0A63654|Vonhausen|B\xC3\xBCdingen|Vonhausen|Blumenstra\xC3\x9Fe|1\x0A63654|Vonhausen|B\xC3\xBCdingen|Vonhausen|Im M\xC3\xBCnchhohlring|2\x0A63654|Vonhausen||||6\x0A63477|Wachenbuchen|Maintal|Wachenbuchen|Bleichstra\xC3\x9Fe|1\x0A63477|Wachenbuchen|Maintal|Wachenbuchen|Saalburgstra\xC3\x9Fe|1\x0A63477|Wachenbuchen|Maintal|Wachenbuchen|Taufsteinstra\xC3\x9Fe|1\x0A63477|Wachenbuchen||||3\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Am Roten Berg|2\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|An der Etzweide|5\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Breitenborner Stra\xC3\x9Fe|5\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Chatilloner Stra\xC3\x9Fe|7\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Gelnh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Haitzer Stra\xC3\x9Fe|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Ro\xC3\x9Flebener Stra\xC3\x9Fe|7\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Wirtheimer Stra\xC3\x9Fe|2\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Auweg|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Bahnhofstra\xC3\x9Fe|21\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Bleichgartenstra\xC3\x9Fe|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Br\xC3\xBCckenstra\xC3\x9Fe|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Heegstra\xC3\x9Fe|7\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Mittelweg|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Poststra\xC3\x9Fe|14\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Ysenburger Stra\xC3\x9Fe|3\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Adtring|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Alsfelder Stra\xC3\x9Fe|6\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Birsteiner Stra\xC3\x9Fe|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Wittgenborn|Baumgartenweg|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Hainhofweg|2\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Hesseldorfer Stra\xC3\x9Fe|7\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Im Ziegelgarten|5\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|In den R\xC3\xB6dern|4\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Lauterbacher Stra\xC3\x9Fe|14\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Schlierbacher Stra\xC3\x9Fe|3\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Spessartstra\xC3\x9Fe|3\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Vogelsbergstra\xC3\x9Fe|4\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Im Ziegelgarten|1\x0A63607|W\xC3\xA4chtersbach||||131\x0A63607|Waldensberg|Hanau|Gro\xC3\x9Fauheim|Von-Brentano-Stra\xC3\x9Fe|3\x0A63607|Waldensberg|W\xC3\xA4chtersbach|Waldensberg|Arnaudstra\xC3\x9Fe|1\x0A63607|Waldensberg|W\xC3\xA4chtersbach|Waldensberg|B\xC3\xBCdinger Weg|1\x0A63607|Waldensberg||||5\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Bruchwiesenweg|2\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Ernst-Reuter-Stra\xC3\x9Fe|1\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|F\xC3\xBCrstenbergstra\xC3\x9Fe|1\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Gr\xC3\xBCnaustra\xC3\x9Fe|1\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Hermelinweg|2\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|In den Heimerswiesen|1\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|John-F.-Kennedy-Stra\xC3\x9Fe|20\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Ollenhauerstra\xC3\x9Fe|6\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Ratiborstra\xC3\x9Fe|1\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Theodor-Heuss-Stra\xC3\x9Fe|3\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Vosswaldestra\xC3\x9Fe|2\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Am Eichwald|1\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Amselweg|1\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Bornflo\xC3\x9Fstra\xC3\x9Fe|5\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Eichbaumstra\xC3\x9Fe|3\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Fasanenweg|3\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Hainstra\xC3\x9Fe|2\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Herrnstra\xC3\x9Fe|17\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Philipp-Reis-Stra\xC3\x9Fe|7\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Waldstra\xC3\x9Fe|2\x0A63674|Waldsiedlung||||81\x0A63607|Weilers|W\xC3\xA4chtersbach|Weilers|Im Alten Weg|2\x0A63607|Weilers||||2\x0A63110|Weiskirchen|Rodgau|Weiskirchen|Schlesienstra\xC3\x9Fe|1\x0A63110|Weiskirchen||||1\x0A63633|Wettges|Birstein|Wettges|Triebstra\xC3\x9Fe|1\x0A63633|Wettges||||1\x0A61130|Windecken|Nidderau|Windecken|Lindenstra\xC3\x9Fe|1\x0A61130|Windecken|Nidderau|Windecken|Ostheimer Stra\xC3\x9Fe|1\x0A61130|Windecken||||2\x0A63599|Wirtheim|Biebergem\xC3\xBCnd|Wirtheim|Frankfurter Stra\xC3\x9Fe|3\x0A63599|Wirtheim|Biebergem\xC3\xBCnd|Wirtheim|Gro\xC3\x9Fer Garten|1\x0A63599|Wirtheim|Biebergem\xC3\xBCnd|Wirtheim|Marktplatz|1\x0A63599|Wirtheim|Biebergem\xC3\xBCnd|Wirtheim|Pfingstborn|1\x0A63599|Wirtheim|Biebergem\xC3\xBCnd|Wirtheim|Schinnsgraben|2\x0A63599|Wirtheim|Biebergem\xC3\xBCnd|Wirtheim|Taubenfang|1\x0A63599|Wirtheim||||9\x0A63607|Wittgenborn|W\xC3\xA4chtersbach|Wittgenborn|Langgasse|2\x0A63607|Wittgenborn|W\xC3\xA4chtersbach|Wittgenborn|Siedlungsstra\xC3\x9Fe|1\x0A63607|Wittgenborn|W\xC3\xA4chtersbach||Sophie-Knoth-Stra\xC3\x9Fe|4\x0A63607|Wittgenborn|W\xC3\xA4chtersbach|Wittgenborn|Waldensberger Stra\xC3\x9Fe|3\x0A63607|Wittgenborn||||10\x0A63654|Wolferborn|B\xC3\xBCdingen|Wolferborn|Am Alten Graben|3\x0A63654|Wolferborn|B\xC3\xBCdingen|Wolferborn|An den \xC3\x84ckerwiesen|1\x0A63654|Wolferborn|B\xC3\xBCdingen|Wolferborn|Wehrtbornstra\xC3\x9Fe|2\x0A63654|Wolferborn||||6\x0A63457|Wolfgang|Hanau|Wolfgang|August-Bebel-Stra\xC3\x9Fe|1\x0A63457|Wolfgang|Hanau||Blaumeisenweg|2\x0A63457|Wolfgang|Hanau|Wolfgang|Friedrich-Fr\xC3\xB6bel-Stra\xC3\x9Fe|2\x0A63457|Wolfgang|Hanau||Gr\xC3\xBCnspechtweg|1\x0A63457|Wolfgang|Hanau||Heidelerchenweg|1\x0A63457|Wolfgang|Hanau|Wolfgang|Lehrh\xC3\xB6fer Stra\xC3\x9Fe|1\x0A63457|Wolfgang|Hanau||Sandbienenweg|3\x0A63457|Wolfgang|Hanau|Wolfgang|Schanzenstra\xC3\x9Fe|1\x0A63457|Wolfgang|Hanau|Wolfgang|Vor der Pulverm\xC3\xBChle|1\x0A63457|Wolfgang|Hanau||Zitronenfalterweg|2\x0A63457|Wolfgang||||15\x0A63533|Zellhausen|Mainhausen|Zellhausen|Am Gellmannsr\xC3\xB6dchen|1\x0A63533|Zellhausen|Mainhausen||Am Zellerbruch|1\x0A63533|Zellhausen|Mainhausen|Zellhausen|Babenh\xC3\xA4user Stra\xC3\x9Fe|3\x0A63533|Zellhausen|Mainhausen|Zellhausen|Bahnhofstra\xC3\x9Fe|1\x0A63533|Zellhausen|Mainhausen|Zellhausen|Harresh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63533|Zellhausen|Mainhausen|Zellhausen|Obergasse|1\x0A63533|Zellhausen|Mainhausen|Zellhausen|Wingertspfad|1\x0A63533|Zellhausen||||9"), ConstSet2, -1);
    var headerSeq_13775630 = nsuSplitString(streets_13775629[chckIndx(0, 0, (streets_13775629).length-1)], makeNimstrLit("|"), -1);
    var headerTbl_13785614 = [initTable_13775633(32)];
    L1: do {
      var i_13795229 = 0;
      var h_13795230 = [];
      var i_13965789 = 0;
      var L_13965790 = (headerSeq_13775630).length;
      L2: do {
          L3: while (true) {
          if (!(i_13965789 < L_13965790)) break L3;
            i_13795229 = i_13965789;
            h_13795230 = headerSeq_13775630[chckIndx(i_13965789, 0, (headerSeq_13775630).length-1)];
            HEX5BHEX5DHEX3D_13795348(headerTbl_13785614[0], h_13795230, chckRange(i_13795229, 0, 2147483647));
            i_13965789 = addInt(i_13965789, 1);
            if (!(((headerSeq_13775630).length == L_13965790))) {
            failedAssertImpl_115480(makeNimstrLit("iterators.nim(137, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    L4: do {
      var i_13865694 = 0;
      var colontmp__13965796 = 0;
      colontmp__13965796 = ((streets_13775629).length-1);
      var res_13965797 = 1;
      L5: do {
          L6: while (true) {
          if (!(res_13965797 <= colontmp__13965796)) break L6;
            i_13865694 = res_13965797;
            L7: do {
              var rowSeq_13865695 = nsuSplitString(streets_13775629[chckIndx(i_13865694, 0, (streets_13775629).length-1)], makeNimstrLit("|"), -1);
              var strN_13865696 = [];
              var city_13865697 = [];
              var dstr_13865698 = [];
              var plz_13865699 = [];
              var totalFam_13865700 = [];
              var strN_13865696 = nimCopy(null, rowSeq_13865695[chckIndx((Tmp8 = HEX5BHEX5D_13870153(headerTbl_13785614[0], makeNimstrLit("Street")), Tmp8)[0][Tmp8[1]], 0, (rowSeq_13865695).length-1)], NTI113);
              if (eqStrings(strN_13865696, [])) {
              break L7;
              }
              
              var city_13865697 = nimCopy(null, rowSeq_13865695[chckIndx((Tmp9 = HEX5BHEX5D_13870153(headerTbl_13785614[0], makeNimstrLit("City")), Tmp9)[0][Tmp9[1]], 0, (rowSeq_13865695).length-1)], NTI113);
              var dstr_13865698 = nimCopy(null, rowSeq_13865695[chckIndx((Tmp10 = HEX5BHEX5D_13870153(headerTbl_13785614[0], makeNimstrLit("District")), Tmp10)[0][Tmp10[1]], 0, (rowSeq_13865695).length-1)], NTI113);
              if (eqStrings(dstr_13865698, city_13865697)) {
              Tmp11 = [];
              }
              else {
              Tmp11 = dstr_13865698;
              }
              
              var district_13885168 = nimCopy(null, Tmp11, NTI113);
              var plz_13865699 = nimCopy(null, rowSeq_13865695[chckIndx((Tmp12 = HEX5BHEX5D_13870153(headerTbl_13785614[0], makeNimstrLit("Plz")), Tmp12)[0][Tmp12[1]], 0, (rowSeq_13865695).length-1)], NTI113);
              var sector_13890166 = {postalCode: nimCopy(null, plz_13865699, NTI113), city: nimCopy(null, city_13865697, NTI113), district: nimCopy(null, district_13885168, NTI113), folkDistrict: [], pFix: 0, streets: ({data: [], counter: 0, first: 0, last: 0}), shownOnMap: false, exclude: false};
              var street_13890167 = {name: nimCopy(null, strN_13865696, NTI113), sector: sector_13890166, links: [], totalFamilies: 0};
              var totalFam_13865700 = nimCopy(null, rowSeq_13865695[chckIndx((Tmp13 = HEX5BHEX5D_13870153(headerTbl_13785614[0], makeNimstrLit("TotalFamilies")), Tmp13)[0][Tmp13[1]], 0, (rowSeq_13865695).length-1)], NTI113);
              HEX5BHEX5DHEX3D_13895283(result_13765861[0], hash_13686254(street_13890167), chckRange(parseInt(toJSStr(totalFam_13865700), 10), 0, 2147483647));
            } while(false);
            res_13965797 = addInt(res_13965797, 1);
          }
      } while(false);
    } while(false);

  return result_13765861[0];

}
var tblTotalFam_13965773 = [initTblTotFamByStreet_13765837()];
function nsuFindChar(s_8930216, sub_8930217, start_8930218, last_8930219) {
    var Tmp1;

  var result_8930221 = 0;

  BeforeRet: do {
    if ((last_8930219 == 0)) {
    Tmp1 = ((s_8930216).length-1);
    }
    else {
    Tmp1 = last_8930219;
    }
    
    var last_8930223 = Tmp1;
    L2: do {
      var i_8930606 = 0;
      var colontmp__14870338 = 0;
      colontmp__14870338 = start_8930218;
      var res_14870339 = colontmp__14870338;
      L3: do {
          L4: while (true) {
          if (!(res_14870339 <= last_8930223)) break L4;
            i_8930606 = res_14870339;
            if ((sub_8930217 == s_8930216[chckIndx(i_8930606, 0, (s_8930216).length-1)])) {
            result_8930221 = i_8930606;
            break BeforeRet;
            }
            
            res_14870339 = addInt(res_14870339, 1);
          }
      } while(false);
    } while(false);
    result_8930221 = -1;
    break BeforeRet;
  } while (false);

  return result_8930221;

}
function substr_381053(s_381055, first_381056) {
  var result_381058 = [];

    result_381058 = nimCopy(null, substr_381022(s_381055, first_381056, ((s_381055).length-1)), NTI113);

  return result_381058;

}
function nsuInitSkipTable(a_8925081, sub_8925082) {
    var m_8925083 = (sub_8925082).length;
    var i_8925085 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_8925085 <= 248)) break L2;
          a_8925081[chckIndx(chckRange(addInt(i_8925085, 0), 0, 255), 0, (a_8925081).length-1)] = m_8925083;
          a_8925081[chckIndx(chckRange(addInt(i_8925085, 1), 0, 255), 0, (a_8925081).length-1)] = m_8925083;
          a_8925081[chckIndx(chckRange(addInt(i_8925085, 2), 0, 255), 0, (a_8925081).length-1)] = m_8925083;
          a_8925081[chckIndx(chckRange(addInt(i_8925085, 3), 0, 255), 0, (a_8925081).length-1)] = m_8925083;
          a_8925081[chckIndx(chckRange(addInt(i_8925085, 4), 0, 255), 0, (a_8925081).length-1)] = m_8925083;
          a_8925081[chckIndx(chckRange(addInt(i_8925085, 5), 0, 255), 0, (a_8925081).length-1)] = m_8925083;
          a_8925081[chckIndx(chckRange(addInt(i_8925085, 6), 0, 255), 0, (a_8925081).length-1)] = m_8925083;
          a_8925081[chckIndx(chckRange(addInt(i_8925085, 7), 0, 255), 0, (a_8925081).length-1)] = m_8925083;
          i_8925085 = addInt(i_8925085, 8);
        }
    } while(false);
    L3: do {
      var i_8925101 = 0;
      var colontmp__14870346 = 0;
      colontmp__14870346 = subInt(m_8925083, 1);
      var i_14870347 = 0;
      L4: do {
          L5: while (true) {
          if (!(i_14870347 < colontmp__14870346)) break L5;
            i_8925101 = i_14870347;
            a_8925081[chckIndx(sub_8925082[chckIndx(i_8925101, 0, (sub_8925082).length-1)], 0, (a_8925081).length-1)] = subInt(subInt(m_8925083, 1), i_8925101);
            i_14870347 = addInt(i_14870347, 1);
          }
      } while(false);
    } while(false);

  
}
function nsuFindStrA(a_8925117, s_8925118, sub_8925119, start_8925120, last_8925121) {
    var Tmp1;

  var result_8925123 = 0;

  BeforeRet: do {
    if ((last_8925121 == 0)) {
    Tmp1 = ((s_8925118).length-1);
    }
    else {
    Tmp1 = last_8925121;
    }
    
    var last_8925125 = Tmp1;
    var subLast_8925126 = subInt((sub_8925119).length, 1);
    if ((subLast_8925126 == -1)) {
    result_8925123 = start_8925120;
    break BeforeRet;
    }
    
    var skip_8925127 = start_8925120;
    L2: do {
        L3: while (true) {
        if (!(subLast_8925126 <= subInt(last_8925125, skip_8925127))) break L3;
          var i_8930001 = subLast_8925126;
          L4: do {
              L5: while (true) {
              if (!(s_8925118[chckIndx(addInt(skip_8925127, i_8930001), 0, (s_8925118).length-1)] == sub_8925119[chckIndx(i_8930001, 0, (sub_8925119).length-1)])) break L5;
                if ((i_8930001 == 0)) {
                result_8925123 = skip_8925127;
                break BeforeRet;
                }
                
                i_8930001 = subInt(i_8930001, 1);
              }
          } while(false);
          skip_8925127 = addInt(skip_8925127, a_8925117[chckIndx(s_8925118[chckIndx(addInt(skip_8925127, subLast_8925126), 0, (s_8925118).length-1)], 0, (a_8925117).length-1)]);
        }
    } while(false);
    result_8925123 = -1;
    break BeforeRet;
  } while (false);

  return result_8925123;

}
function nsuReplaceStr(s_9000016, sub_9000017, by_9000018) {
  var result_9000019 = [];

    result_9000019 = nimCopy(null, [], NTI113);
    var subLen_9000020 = (sub_9000017).length;
    if ((subLen_9000020 == 0)) {
    result_9000019 = nimCopy(null, s_9000016, NTI113);
    }
    else {
    if ((subLen_9000020 == 1)) {
    var c_9000021 = sub_9000017[chckIndx(0, 0, (sub_9000017).length-1)];
    var last_9000023 = ((s_9000016).length-1);
    var i_9000025 = 0;
    L1: do {
        L2: while (true) {
        if (!true) break L2;
          var j_9000026 = nsuFindChar(s_9000016, c_9000021, chckRange(i_9000025, 0, 2147483647), last_9000023);
          if ((j_9000026 < 0)) {
          break L1;
          }
          
          result_9000019.push.apply(result_9000019, substr_381022(s_9000016, i_9000025, subInt(j_9000026, 1)));;
          result_9000019.push.apply(result_9000019, by_9000018);;
          i_9000025 = addInt(j_9000026, subLen_9000020);
        }
    } while(false);
    result_9000019.push.apply(result_9000019, substr_381053(s_9000016, i_9000025));;
    }
    else {
      var a_9000027 = [new Int32Array(256)];
      nsuInitSkipTable(a_9000027[0], sub_9000017);
      var last_9000030 = ((s_9000016).length-1);
      var i_9000032 = 0;
      L3: do {
          L4: while (true) {
          if (!true) break L4;
            var j_9000033 = nsuFindStrA(a_9000027[0], s_9000016, sub_9000017, chckRange(i_9000032, 0, 2147483647), last_9000030);
            if ((j_9000033 < 0)) {
            break L3;
            }
            
            result_9000019.push.apply(result_9000019, substr_381022(s_9000016, i_9000032, subInt(j_9000033, 1)));;
            result_9000019.push.apply(result_9000019, by_9000018);;
            i_9000032 = addInt(j_9000033, subLen_9000020);
          }
      } while(false);
      result_9000019.push.apply(result_9000019, substr_381053(s_9000016, i_9000032));;
    }
    }

  return result_9000019;

}
function newSeq_13260012(len_13260015) {
  var result_13260017 = [];

    result_13260017 = new Array(len_13260015); for (var i=0;i<len_13260015;++i) {result_13260017[i]=({k: 0, parent: null, current: null, newNode: null, oldNode: null});}
  return result_13260017;

}
function newSeq_13260064(len_13260067) {
  var result_13260069 = [];

    result_13260069 = new Array(len_13260067); for (var i=0;i<len_13260067;++i) {result_13260069[i]=({parent: null, newChild: null, pos: 0});}
  return result_13260069;

}
function valueHEX3D_12445140(n_12445142, v_12445143) {
    n_12445142.text = v_12445143;

  
}
function value_12445123(n_12445125) {
  var result_12445126 = null;

    result_12445126 = n_12445125.text;

  return result_12445126;

}
function addEventShell_12702375(d_12702377, name_12702378, h_12702379) {
    d_12702377.addEventListener(name_12702378, h_12702379, false);
    if ((d_12702377.karaxEvents == null)) {
    d_12702377.karaxEvents = new Array(0);
    }
    
    d_12702377.karaxEvents.push({Field0: name_12702378, Field1: h_12702379});

  
}
function wrapEvent_12705097(d_12705099, n_12705100, k_12705101, action_12705102) {
      function laterWrapper_12775042() {
          function HEX3Aanonymous_12775048(ev_12775050) {
              function wrapper_12775051() {
                  var vHEX60gensym15_12785001 = ev_12775050.target.value;
                  valueHEX3D_12445140(n_12775046, vHEX60gensym15_12785001);
                  if (!(!((action_12775045 == null)))) {
                  failedAssertImpl_115480(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
                  }
                  
                  action_12775045(ev_12775050, n_12775046);
                  if (!((value_12445123(n_12775046) == vHEX60gensym15_12785001))) {
                  ev_12775050.target.value = value_12445123(n_12775046);
                  }
                  

                
              }

              if (!((timer_12775047 == null))) {
              clearTimeout(timer_12775047);
              }
              
              timer_12775047 = setTimeout(wrapper_12775051, 400);

            
          }

        var result_12775044 = null;

          var action_12775045 = action_12705102;
          var n_12775046 = n_12705100;
          var timer_12775047 = null;
          result_12775044 = HEX3Aanonymous_12775048;

        return result_12775044;

      }
      function enterWrapper_12740042() {
          function HEX3Aanonymous_12740047(ev_12740049) {
              if ((ev_12740049.keyCode == 13)) {
              var vHEX60gensym8_12750001 = ev_12740049.target.value;
              valueHEX3D_12445140(n_12740046, vHEX60gensym8_12750001);
              if (!(!((action_12740045 == null)))) {
              failedAssertImpl_115480(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
              }
              
              action_12740045(ev_12740049, n_12740046);
              if (!((value_12445123(n_12740046) == vHEX60gensym8_12750001))) {
              ev_12740049.target.value = value_12445123(n_12740046);
              }
              
              }
              

            
          }

        var result_12740044 = null;

          var action_12740045 = action_12705102;
          var n_12740046 = n_12705100;
          result_12740044 = HEX3Aanonymous_12740047;

        return result_12740044;

      }
      function stdWrapper_12705104() {
          function HEX3Aanonymous_12705109(ev_12705111) {
                var Tmp1;
                var Tmp2;

                if ((n_12705108.kind == 111)) Tmp2 = true; else {                  Tmp2 = (n_12705108.kind == 105);                }                if (Tmp2) Tmp1 = true; else {                  Tmp1 = (n_12705108.kind == 107);                }              if (Tmp1) {
              var vHEX60gensym1_12715001 = ev_12705111.target.value;
              valueHEX3D_12445140(n_12705108, vHEX60gensym1_12715001);
              if (!(!((action_12705107 == null)))) {
              failedAssertImpl_115480(makeNimstrLit("karax.nim(74, 10) `action != nil` "));
              }
              
              action_12705107(ev_12705111, n_12705108);
              if (!((value_12445123(n_12705108) == vHEX60gensym1_12715001))) {
              ev_12705111.target.value = value_12445123(n_12705108);
              }
              
              }
              else {
              action_12705107(ev_12705111, n_12705108);
              }
              

            
          }

        var result_12705106 = null;

          var action_12705107 = action_12705102;
          var n_12705108 = n_12705100;
          result_12705106 = HEX3Aanonymous_12705109;

        return result_12705106;

      }

  var result_12705103 = null;

    switch (k_12705101) {
    case 30:
      result_12705103 = laterWrapper_12775042();
      addEventShell_12702375(d_12705099, "keyup", result_12705103);
      break;
    case 29:
      result_12705103 = enterWrapper_12740042();
      addEventShell_12702375(d_12705099, "keyup", result_12705103);
      break;
    default: 
      result_12705103 = stdWrapper_12705104();
      addEventShell_12702375(d_12705099, toEventName_12445012[chckIndx(k_12705101, 0, (toEventName_12445012).length-1)], result_12705103);
      break;
    }

  return result_12705103;

}
function applyEvents_12815073(n_12815075) {
    var dest_12815076 = n_12815075.dom;
    L1: do {
      var i_12815089 = 0;
      var colontmp__14870380 = 0;
      colontmp__14870380 = (n_12815075.events).length;
      var i_14870381 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_14870381 < colontmp__14870380)) break L3;
            i_12815089 = i_14870381;
            n_12815075.events[chckIndx(i_12815089, 0, (n_12815075.events).length-1)]["Field2"] = wrapEvent_12705097(dest_12815076, n_12815075, n_12815075.events[chckIndx(i_12815089, 0, (n_12815075.events).length-1)]["Field0"], n_12815075.events[chckIndx(i_12815089, 0, (n_12815075.events).length-1)]["Field1"]);
            i_14870381 = addInt(i_14870381, 1);
          }
      } while(false);
    } while(false);

  
}
function applyStyle_12435628(n_12435630, s_12435631) {
    n_12435630.style = {};
    L1: do {
      var i_12435664 = 0;
      var colontmp__14870391 = 0;
      colontmp__14870391 = subInt(s_12435631.length, 1);
      var res_14870392 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_14870392 <= colontmp__14870391)) break L3;
            i_12435664 = res_14870392;
            n_12435630.style[s_12435631[i_12435664]] = s_12435631[addInt(i_12435664, 1)];
            res_14870392 = addInt(res_14870392, 2);
          }
      } while(false);
    } while(false);

  
}
function toDom_12815154(n_12815156, useAttachedNode_12815157, kxi_12815158) {
      var Tmp9;
      var Tmp10;

  var result_12815159 = null;

  BeforeRet: do {
    if (useAttachedNode_12815157) {
    if (!((n_12815156.dom == null))) {
    if (!((n_12815156.id == null))) {
    kxi_12815158.byId[n_12815156.id] = n_12815156;
    }
    
    result_12815159 = n_12815156.dom;
    break BeforeRet;
    }
    
    }
    
    if ((n_12815156.kind == 0)) {
    result_12815159 = document.createTextNode(n_12815156.text);
    n_12815156.dom = result_12815159;
    if (!((n_12815156.id == null))) {
    kxi_12702284[0].byId[n_12815156.id] = n_12815156;
    }
    
    }
    else {
    if ((n_12815156.kind == 6)) {
    result_12815159 = document.createElement("div");
    result_12815159.innerHTML = n_12815156.text;
    n_12815156.dom = result_12815159;
    if (!((n_12815156.id == null))) {
    kxi_12702284[0].byId[n_12815156.id] = n_12815156;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_12815156.kind == 3)) {
    var x_12850001 = vcomponents_12611239[0][n_12815156.text](n_12815156.kids);
    result_12815159 = toDom_12815154(x_12850001, useAttachedNode_12815157, kxi_12815158);
    n_12815156.dom = result_12815159;
    if (!((n_12815156.id == null))) {
    kxi_12702284[0].byId[n_12815156.id] = n_12815156;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_12815156.kind == 4)) {
    result_12815159 = n_12815156.dom;
    if (!(!((result_12815159 == null)))) {
    failedAssertImpl_115480(makeNimstrLit("karax.nim(176, 12) `result != nil` "));
    }
    
    n_12815156.dom = result_12815159;
    if (!((n_12815156.id == null))) {
    kxi_12702284[0].byId[n_12815156.id] = n_12815156;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_12815156.kind == 5)) {
    var x_12885022 = n_12815156;
    if (!((x_12885022.onAttachImpl == null))) {
    x_12885022.onAttachImpl(x_12885022);
    }
    
    if (!(!((x_12885022.renderImpl == null)))) {
    failedAssertImpl_115480(makeNimstrLit("karax.nim(183, 12) `x.renderImpl != nil` "));
    }
    
    if ((x_12885022.expanded == null)) {
    x_12885022.expanded = x_12885022.renderImpl(x_12885022);
    }
    
    if (!(!((x_12885022.expanded == null)))) {
    failedAssertImpl_115480(makeNimstrLit("karax.nim(187, 12) `x.expanded != nil` "));
    }
    
    result_12815159 = toDom_12815154(x_12885022.expanded, useAttachedNode_12815157, kxi_12815158);
    n_12815156.dom = result_12815159;
    if (!((n_12815156.id == null))) {
    kxi_12702284[0].byId[n_12815156.id] = n_12815156;
    }
    
    break BeforeRet;
    }
    else {
      result_12815159 = document.createElement(toTag_12445006[chckIndx(n_12815156.kind, 0, (toTag_12445006).length-1)]);
      n_12815156.dom = result_12815159;
      if (!((n_12815156.id == null))) {
      kxi_12702284[0].byId[n_12815156.id] = n_12815156;
      }
      
      L1: do {
        var k_12940016 = null;
        L2: do {
          var i_14870360 = 0;
          var colontmp__14870361 = 0;
          colontmp__14870361 = (n_12815156.kids).length;
          var i_14870362 = 0;
          L3: do {
              L4: while (true) {
              if (!(i_14870362 < colontmp__14870361)) break L4;
                i_14870360 = i_14870362;
                k_12940016 = n_12815156.kids[chckIndx(i_14870360, 0, (n_12815156.kids).length-1)];
                result_12815159.appendChild(toDom_12815154(k_12940016, useAttachedNode_12815157, kxi_12815158));
                i_14870362 = addInt(i_14870362, 1);
              }
          } while(false);
        } while(false);
      } while(false);
      if (!((n_12815156.text == null))) {
      result_12815159.value = n_12815156.text;
      }
      
    }
    }}}}
    if (!((n_12815156.id == null))) {
    result_12815159.id = n_12815156.id;
    }
    
    if (!((n_12815156.class == null))) {
    result_12815159.className = n_12815156.class;
    }
    
    L5: do {
      var k_12955001 = null;
      var v_12955002 = null;
      L6: do {
        var i_14870373 = 0;
        var colontmp__14870374 = 0;
        colontmp__14870374 = subInt((n_12815156.attrs).length, 2);
        var res_14870375 = 0;
        L7: do {
            L8: while (true) {
            if (!(res_14870375 <= colontmp__14870374)) break L8;
              i_14870373 = res_14870375;
              k_12955001 = n_12815156.attrs[chckIndx(i_14870373, 0, (n_12815156.attrs).length-1)];
              v_12955002 = n_12815156.attrs[chckIndx(addInt(i_14870373, 1), 0, (n_12815156.attrs).length-1)];
              if (!((v_12955002 == null))) {
              result_12815159.setAttribute(k_12955001, v_12955002);
              }
              
              res_14870375 = addInt(res_14870375, 2);
            }
        } while(false);
      } while(false);
    } while(false);
    applyEvents_12815073(n_12815156);
      if (!!((kxi_12815158 == null))) Tmp10 = false; else {        Tmp10 = (n_12815156 == kxi_12815158.toFocusV);      }      if (!Tmp10) Tmp9 = false; else {        Tmp9 = (kxi_12815158.toFocus == null);      }    if (Tmp9) {
    kxi_12815158.toFocus = result_12815159;
    }
    
    if (!((n_12815156.style == null))) {
    applyStyle_12435628(result_12815159, n_12815156.style);
    }
    
  } while (false);

  return result_12815159;

}
function replaceById_12980059(id_12980061, newTree_12980062) {
    var x_12980063 = document.getElementById(id_12980061);
    x_12980063.parentNode.replaceChild(newTree_12980062, x_12980063);
    newTree_12980062.id = id_12980061;

  
}
function len_12530014(x_12530016) {
  var result_12530017 = 0;

    result_12530017 = (x_12530016.kids).length;

  return result_12530017;

}
function HEX5BHEX5D_12530036(x_12530038, idx_12530039) {
  var result_12530040 = null;

    result_12530040 = x_12530038.kids[chckIndx(idx_12530039, 0, (x_12530038.kids).length-1)];

  return result_12530040;

}
function same_12965072(n_12965074, e_12965075, nesting_12965076) {
      var Tmp1;
      var Tmp2;

  var result_12965078 = false;

  BeforeRet: do {
    if (kxi_12702284[0].orphans.hasOwnProperty(n_12965074.id)) {
    result_12965078 = true;
    break BeforeRet;
    }
    
    if ((n_12965074.kind == 5)) {
    result_12965078 = same_12965072(n_12965074.expanded, e_12965075, addInt(nesting_12965076, 1));
    }
    else {
    if ((n_12965074.kind == 6)) {
    result_12965078 = true;
    }
    else {
      if ((n_12965074.kind == 3)) Tmp1 = true; else {        Tmp1 = (n_12965074.kind == 4);      }    if (Tmp1) {
    result_12965078 = true;
    }
    else {
    if ((toTag_12445006[chckIndx(n_12965074.kind, 0, (toTag_12445006).length-1)] == e_12965075.nodeName)) {
    result_12965078 = true;
    if (!((n_12965074.kind == 0))) {
      if (!!((e_12965075.childNodes.length == len_12530014(n_12965074)))) Tmp2 = false; else {        Tmp2 = !((n_12965074.kind == 111));      }    if (Tmp2) {
    rawEcho(makeNimstrLit("expected "), cstrToNimstr((len_12530014(n_12965074))+""), makeNimstrLit(" real "), cstrToNimstr((e_12965075.childNodes.length)+""), makeNimstrLit(" "), cstrToNimstr(toTag_12445006[chckIndx(n_12965074.kind, 0, (toTag_12445006).length-1)]), makeNimstrLit(" nesting "), cstrToNimstr((nesting_12965076)+""));
    result_12965078 = false;
    break BeforeRet;
    }
    
    L3: do {
      var i_12980024 = 0;
      var colontmp__14870398 = 0;
      colontmp__14870398 = len_12530014(n_12965074);
      var i_14870399 = 0;
      L4: do {
          L5: while (true) {
          if (!(i_14870399 < colontmp__14870398)) break L5;
            i_12980024 = i_14870399;
            if (!(same_12965072(HEX5BHEX5D_12530036(n_12965074, i_12980024), e_12965075.childNodes[i_12980024], addInt(nesting_12965076, 1)))) {
            result_12965078 = false;
            break BeforeRet;
            }
            
            i_14870399 = addInt(i_14870399, 1);
          }
      } while(false);
    } while(false);
    }
    
    }
    else {
    rawEcho(makeNimstrLit("VDOM: "), cstrToNimstr(toTag_12445006[chckIndx(n_12965074.kind, 0, (toTag_12445006).length-1)]), makeNimstrLit(" DOM: "), cstrToNimstr(e_12965075.nodeName));
    }
    }}}
  } while (false);

  return result_12965078;

}
function eq_12400229(a_12400231, b_12400232) {
  var result_12400233 = false;

  BeforeRet: do {
    if ((a_12400231 == null)) {
    if ((b_12400232 == null)) {
    result_12400233 = true;
    break BeforeRet;
    }
    else {
      result_12400233 = false;
      break BeforeRet;
    }
    
    }
    else {
    if ((b_12400232 == null)) {
    result_12400233 = false;
    break BeforeRet;
    }
    }
    if (!((a_12400231.length == b_12400232.length))) {
    result_12400233 = false;
    break BeforeRet;
    }
    
    L1: do {
      var i_12405083 = 0;
      var colontmp__14870438 = 0;
      colontmp__14870438 = a_12400231.length;
      var i_14870439 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_14870439 < colontmp__14870438)) break L3;
            i_12405083 = i_14870439;
            if (!((a_12400231[i_12405083] == b_12400232[i_12405083]))) {
            result_12400233 = false;
            break BeforeRet;
            }
            
            i_14870439 = addInt(i_14870439, 1);
          }
      } while(false);
    } while(false);
    result_12400233 = true;
    break BeforeRet;
  } while (false);

  return result_12400233;

}
function sameAttrs_12541079(a_12541081, b_12541082) {
  var result_12541083 = false;

  BeforeRet: do {
    if (((a_12541081.attrs).length == (b_12541082.attrs).length)) {
    result_12541083 = true;
    L1: do {
      var i_12541106 = 0;
      var colontmp__14870442 = 0;
      colontmp__14870442 = (a_12541081.attrs).length;
      var i_14870443 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_14870443 < colontmp__14870442)) break L3;
            i_12541106 = i_14870443;
            if (!((a_12541081.attrs[chckIndx(i_12541106, 0, (a_12541081.attrs).length-1)] == b_12541082.attrs[chckIndx(i_12541106, 0, (b_12541082.attrs).length-1)]))) {
            result_12541083 = false;
            break BeforeRet;
            }
            
            i_14870443 = addInt(i_14870443, 1);
          }
      } while(false);
    } while(false);
    }
    
  } while (false);

  return result_12541083;

}
function eq_12980214(a_12980216, b_12980217, recursive_12980218) {
      var Tmp4;
      var Tmp5;

  var result_12980219 = 0;

  BeforeRet: do {
    if (!((a_12980216.kind == b_12980217.kind))) {
    result_12980219 = 1;
    break BeforeRet;
    }
    
    if (!((a_12980216.id == b_12980217.id))) {
    result_12980219 = 1;
    break BeforeRet;
    }
    
    result_12980219 = 3;
    if (!((a_12980216.index == b_12980217.index))) {
    result_12980219 = 1;
    break BeforeRet;
    }
    
    if ((a_12980216.kind == 0)) {
    if (!((a_12980216.text == b_12980217.text))) {
    result_12980219 = 1;
    break BeforeRet;
    }
    
    }
    else {
    if ((a_12980216.kind == 3)) {
    if (!((a_12980216.text == b_12980217.text))) {
    result_12980219 = 1;
    break BeforeRet;
    }
    
    if (!((len_12530014(a_12980216) == len_12530014(b_12980217)))) {
    result_12980219 = 1;
    break BeforeRet;
    }
    
    L1: do {
      var i_13010008 = 0;
      var colontmp__14870430 = 0;
      colontmp__14870430 = len_12530014(a_12980216);
      var i_14870431 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_14870431 < colontmp__14870430)) break L3;
            i_13010008 = i_14870431;
            if ((eq_12980214(HEX5BHEX5D_12530036(a_12980216, i_13010008), HEX5BHEX5D_12530036(b_12980217, i_13010008), recursive_12980218) == 1)) {
            result_12980219 = 1;
            break BeforeRet;
            }
            
            i_14870431 = addInt(i_14870431, 1);
          }
      } while(false);
    } while(false);
    }
    else {
    if ((a_12980216.kind == 4)) {
    if ((a_12980216.dom == b_12980217.dom)) {
    result_12980219 = 3;
    break BeforeRet;
    }
    else {
      result_12980219 = 1;
      break BeforeRet;
    }
    
    }
    else {
    if ((a_12980216.kind == 6)) {
    if (!((a_12980216.text == b_12980217.text))) {
    result_12980219 = 1;
    break BeforeRet;
    }
    
    }
    else {
    if ((b_12980217.kind == 5)) {
    if (!((a_12980216.text == b_12980217.text))) {
    result_12980219 = 1;
    break BeforeRet;
    }
    
    if (!((a_12980216.key == b_12980217.key))) {
    result_12980219 = 1;
    break BeforeRet;
    }
    
    result_12980219 = 0;
    break BeforeRet;
    }
    }}}}
      if (!((a_12980216.class == b_12980217.class))) Tmp5 = true; else {        Tmp5 = !(eq_12400229(a_12980216.style, b_12980217.style));      }      if (Tmp5) Tmp4 = true; else {        Tmp4 = !(sameAttrs_12541079(a_12980216, b_12980217));      }    if (Tmp4) {
    result_12980219 = 2;
    break BeforeRet;
    }
    
    if (recursive_12980218) {
    if (!((len_12530014(a_12980216) == len_12530014(b_12980217)))) {
    result_12980219 = 1;
    break BeforeRet;
    }
    
    L6: do {
      var i_13035008 = 0;
      var colontmp__14870434 = 0;
      colontmp__14870434 = len_12530014(a_12980216);
      var i_14870435 = 0;
      L7: do {
          L8: while (true) {
          if (!(i_14870435 < colontmp__14870434)) break L8;
            i_13035008 = i_14870435;
            if (!((eq_12980214(HEX5BHEX5D_12530036(a_12980216, i_13035008), HEX5BHEX5D_12530036(b_12980217, i_13035008), true) == 3))) {
            result_12980219 = 1;
            break BeforeRet;
            }
            
            i_14870435 = addInt(i_14870435, 1);
          }
      } while(false);
    } while(false);
    }
    
    break BeforeRet;
  } while (false);

  return result_12980219;

}
function updateStyles_13040034(newNode_13040036, oldNode_13040037) {
    if (!((oldNode_13040037.dom == null))) {
    if (!((newNode_13040036.style == null))) {
    applyStyle_12435628(oldNode_13040037.dom, newNode_13040036.style);
    }
    else {
      oldNode_13040037.dom.style = {m_type: NTI9232293, alignContent: null, alignItems: null, alignSelf: null, all: null, animation: null, animationDelay: null, animationDirection: null, animationDuration: null, animationFillMode: null, animationIterationCount: null, animationName: null, animationPlayState: null, animationTimingFunction: null, backdropFilter: null, backfaceVisibility: null, background: null, backgroundAttachment: null, backgroundBlendMode: null, backgroundClip: null, backgroundColor: null, backgroundImage: null, backgroundOrigin: null, backgroundPosition: null, backgroundRepeat: null, backgroundSize: null, blockSize: null, border: null, borderBlock: null, borderBlockColor: null, borderBlockEnd: null, borderBlockEndColor: null, borderBlockEndStyle: null, borderBlockEndWidth: null, borderBlockStart: null, borderBlockStartColor: null, borderBlockStartStyle: null, borderBlockStartWidth: null, borderBlockStyle: null, borderBlockWidth: null, borderBottom: null, borderBottomColor: null, borderBottomLeftRadius: null, borderBottomRightRadius: null, borderBottomStyle: null, borderBottomWidth: null, borderCollapse: null, borderColor: null, borderEndEndRadius: null, borderEndStartRadius: null, borderImage: null, borderImageOutset: null, borderImageRepeat: null, borderImageSlice: null, borderImageSource: null, borderImageWidth: null, borderInline: null, borderInlineColor: null, borderInlineEnd: null, borderInlineEndColor: null, borderInlineEndStyle: null, borderInlineEndWidth: null, borderInlineStart: null, borderInlineStartColor: null, borderInlineStartStyle: null, borderInlineStartWidth: null, borderInlineStyle: null, borderInlineWidth: null, borderLeft: null, borderLeftColor: null, borderLeftStyle: null, borderLeftWidth: null, borderRadius: null, borderRight: null, borderRightColor: null, borderRightStyle: null, borderRightWidth: null, borderSpacing: null, borderStartEndRadius: null, borderStartStartRadius: null, borderStyle: null, borderTop: null, borderTopColor: null, borderTopLeftRadius: null, borderTopRightRadius: null, borderTopStyle: null, borderTopWidth: null, borderWidth: null, bottom: null, boxDecorationBreak: null, boxShadow: null, boxSizing: null, breakAfter: null, breakBefore: null, breakInside: null, captionSide: null, caretColor: null, clear: null, clip: null, clipPath: null, color: null, colorAdjust: null, columnCount: null, columnFill: null, columnGap: null, columnRule: null, columnRuleColor: null, columnRuleStyle: null, columnRuleWidth: null, columnSpan: null, columnWidth: null, columns: null, contain: null, content: null, counterIncrement: null, counterReset: null, counterSet: null, cursor: null, direction: null, display: null, emptyCells: null, filter: null, flex: null, flexBasis: null, flexDirection: null, flexFlow: null, flexGrow: null, flexShrink: null, flexWrap: null, cssFloat: null, font: null, fontFamily: null, fontFeatureSettings: null, fontKerning: null, fontLanguageOverride: null, fontOpticalSizing: null, fontSize: null, fontSizeAdjust: null, fontStretch: null, fontStyle: null, fontSynthesis: null, fontVariant: null, fontVariantAlternates: null, fontVariantCaps: null, fontVariantEastAsian: null, fontVariantLigatures: null, fontVariantNumeric: null, fontVariantPosition: null, fontVariationSettings: null, fontWeight: null, gap: null, grid: null, gridArea: null, gridAutoColumns: null, gridAutoFlow: null, gridAutoRows: null, gridColumn: null, gridColumnEnd: null, gridColumnStart: null, gridRow: null, gridRowEnd: null, gridRowStart: null, gridTemplate: null, gridTemplateAreas: null, gridTemplateColumns: null, gridTemplateRows: null, hangingPunctuation: null, height: null, hyphens: null, imageOrientation: null, imageRendering: null, inlineSize: null, inset: null, insetBlock: null, insetBlockEnd: null, insetBlockStart: null, insetInline: null, insetInlineEnd: null, insetInlineStart: null, isolation: null, justifyContent: null, justifyItems: null, justifySelf: null, left: null, letterSpacing: null, lineBreak: null, lineHeight: null, listStyle: null, listStyleImage: null, listStylePosition: null, listStyleType: null, margin: null, marginBlock: null, marginBlockEnd: null, marginBlockStart: null, marginBottom: null, marginInline: null, marginInlineEnd: null, marginInlineStart: null, marginLeft: null, marginRight: null, marginTop: null, mask: null, maskBorder: null, maskBorderMode: null, maskBorderOutset: null, maskBorderRepeat: null, maskBorderSlice: null, maskBorderSource: null, maskBorderWidth: null, maskClip: null, maskComposite: null, maskImage: null, maskMode: null, maskOrigin: null, maskPosition: null, maskRepeat: null, maskSize: null, maskType: null, maxBlockSize: null, maxHeight: null, maxInlineSize: null, maxWidth: null, minBlockSize: null, minHeight: null, minInlineSize: null, minWidth: null, mixBlendMode: null, objectFit: null, objectPosition: null, offset: null, offsetAnchor: null, offsetDistance: null, offsetPath: null, offsetRotate: null, opacity: null, order: null, orphans: null, outline: null, outlineColor: null, outlineOffset: null, outlineStyle: null, outlineWidth: null, overflow: null, overflowAnchor: null, overflowBlock: null, overflowInline: null, overflowWrap: null, overflowX: null, overflowY: null, overscrollBehavior: null, overscrollBehaviorBlock: null, overscrollBehaviorInline: null, overscrollBehaviorX: null, overscrollBehaviorY: null, padding: null, paddingBlock: null, paddingBlockEnd: null, paddingBlockStart: null, paddingBottom: null, paddingInline: null, paddingInlineEnd: null, paddingInlineStart: null, paddingLeft: null, paddingRight: null, paddingTop: null, pageBreakAfter: null, pageBreakBefore: null, pageBreakInside: null, paintOrder: null, perspective: null, perspectiveOrigin: null, placeContent: null, placeItems: null, placeSelf: null, pointerEvents: null, position: null, quotes: null, resize: null, right: null, rotate: null, rowGap: null, scale: null, scrollBehavior: null, scrollMargin: null, scrollMarginBlock: null, scrollMarginBlockEnd: null, scrollMarginBlockStart: null, scrollMarginBottom: null, scrollMarginInline: null, scrollMarginInlineEnd: null, scrollMarginInlineStart: null, scrollMarginLeft: null, scrollMarginRight: null, scrollMarginTop: null, scrollPadding: null, scrollPaddingBlock: null, scrollPaddingBlockEnd: null, scrollPaddingBlockStart: null, scrollPaddingBottom: null, scrollPaddingInline: null, scrollPaddingInlineEnd: null, scrollPaddingInlineStart: null, scrollPaddingLeft: null, scrollPaddingRight: null, scrollPaddingTop: null, scrollSnapAlign: null, scrollSnapStop: null, scrollSnapType: null, scrollbar3dLightColor: null, scrollbarArrowColor: null, scrollbarBaseColor: null, scrollbarColor: null, scrollbarDarkshadowColor: null, scrollbarFaceColor: null, scrollbarHighlightColor: null, scrollbarShadowColor: null, scrollbarTrackColor: null, scrollbarWidth: null, shapeImageThreshold: null, shapeMargin: null, shapeOutside: null, tabSize: null, tableLayout: null, textAlign: null, textAlignLast: null, textCombineUpright: null, textDecoration: null, textDecorationColor: null, textDecorationLine: null, textDecorationSkipInk: null, textDecorationStyle: null, textDecorationThickness: null, textEmphasis: null, textEmphasisColor: null, textEmphasisPosition: null, textEmphasisStyle: null, textIndent: null, textJustify: null, textOrientation: null, textOverflow: null, textRendering: null, textShadow: null, textTransform: null, textUnderlineOffset: null, textUnderlinePosition: null, top: null, touchAction: null, transform: null, transformBox: null, transformOrigin: null, transformStyle: null, transition: null, transitionDelay: null, transitionDuration: null, transitionProperty: null, transitionTimingFunction: null, translate: null, unicodeBidi: null, verticalAlign: null, visibility: null, whiteSpace: null, widows: null, width: null, willChange: null, wordBreak: null, wordSpacing: null, writingMode: null, zIndex: null};
    }
    
    oldNode_13040037.dom.className = newNode_13040036.class;
    }
    
    oldNode_13040037.style = newNode_13040036.style;
    oldNode_13040037.class = newNode_13040036.class;

  
}
function takeOverAttr_12480214(newNode_12480216, oldNode_12480217) {
    oldNode_12480217.attrs = newNode_12480216.attrs;

  
}
function updateAttributes_13050052(newNode_13050054, oldNode_13050055) {
    if (!((oldNode_13050055.dom == null))) {
    L1: do {
      var k_13055009 = null;
      var __13055010 = null;
      L2: do {
        var i_14870448 = 0;
        var colontmp__14870449 = 0;
        colontmp__14870449 = subInt((oldNode_13050055.attrs).length, 2);
        var res_14870450 = 0;
        L3: do {
            L4: while (true) {
            if (!(res_14870450 <= colontmp__14870449)) break L4;
              i_14870448 = res_14870450;
              k_13055009 = oldNode_13050055.attrs[chckIndx(i_14870448, 0, (oldNode_13050055.attrs).length-1)];
              __13055010 = oldNode_13050055.attrs[chckIndx(addInt(i_14870448, 1), 0, (oldNode_13050055.attrs).length-1)];
              oldNode_13050055.dom.removeAttribute(k_13055009);
              res_14870450 = addInt(res_14870450, 2);
            }
        } while(false);
      } while(false);
    } while(false);
    L5: do {
      var k_13055011 = null;
      var v_13055012 = null;
      L6: do {
        var i_14870456 = 0;
        var colontmp__14870457 = 0;
        colontmp__14870457 = subInt((newNode_13050054.attrs).length, 2);
        var res_14870458 = 0;
        L7: do {
            L8: while (true) {
            if (!(res_14870458 <= colontmp__14870457)) break L8;
              i_14870456 = res_14870458;
              k_13055011 = newNode_13050054.attrs[chckIndx(i_14870456, 0, (newNode_13050054.attrs).length-1)];
              v_13055012 = newNode_13050054.attrs[chckIndx(addInt(i_14870456, 1), 0, (newNode_13050054.attrs).length-1)];
              if (!((v_13055012 == null))) {
              oldNode_13050055.dom.setAttribute(k_13055011, v_13055012);
              }
              
              res_14870458 = addInt(res_14870458, 2);
            }
        } while(false);
      } while(false);
    } while(false);
    }
    
    takeOverAttr_12480214(newNode_13050054, oldNode_13050055);

  
}
function removeAllEventHandlers_12702436(d_12702438) {
    if (!((d_12702438.karaxEvents == null))) {
    L1: do {
      var i_12705041 = 0;
      var colontmp__14870463 = 0;
      colontmp__14870463 = d_12702438.karaxEvents.length;
      var i_14870464 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_14870464 < colontmp__14870463)) break L3;
            i_12705041 = i_14870464;
            d_12702438.removeEventListener(d_12702438.karaxEvents[i_12705041]["Field0"], d_12702438.karaxEvents[i_12705041]["Field1"]);
            i_14870464 = addInt(i_14870464, 1);
          }
      } while(false);
    } while(false);
    }
    

  
}
function mergeEvents_13060014(newNode_13060016, oldNode_13060017, kxi_13060018) {
    var d_13060019 = oldNode_13060017.dom;
    if (!((d_13060019 == null))) {
    removeAllEventHandlers_12702436(d_13060019);
    }
    
    oldNode_13060017.events = newNode_13060016.events;
    applyEvents_12815073(oldNode_13060017);

  
}
function addPatch_13065414(kxi_13065416, ka_13065417, parenta_13065418, currenta_13065419, na_13065420, oldNode_13065421) {
    var L_13065422 = kxi_13065416.patchLen;
    if (((kxi_13065416.patches).length <= L_13065422)) {
    kxi_13065416.patches.push({k: ka_13065417, parent: parenta_13065418, current: currenta_13065419, newNode: na_13065420, oldNode: oldNode_13065421});;
    }
    else {
      kxi_13065416.patches[chckIndx(L_13065422, 0, (kxi_13065416.patches).length-1)].k = ka_13065417;
      kxi_13065416.patches[chckIndx(L_13065422, 0, (kxi_13065416.patches).length-1)].parent = parenta_13065418;
      kxi_13065416.patches[chckIndx(L_13065422, 0, (kxi_13065416.patches).length-1)].current = currenta_13065419;
      kxi_13065416.patches[chckIndx(L_13065422, 0, (kxi_13065416.patches).length-1)].newNode = na_13065420;
      kxi_13065416.patches[chckIndx(L_13065422, 0, (kxi_13065416.patches).length-1)].oldNode = oldNode_13065421;
    }
    
    kxi_13065416.patchLen = addInt(kxi_13065416.patchLen, 1);

  
}
function diff_13115215(newNode_13115217, oldNode_13115218, parent_13115219, current_13115220, kxi_13115221) {
        var Tmp1;
            var Tmp6;

  BeforeRet: do {
    var result_13115401 = eq_12980214(newNode_13115217, oldNode_13115218, false);
    switch (result_13115401) {
    case 0:
      kxi_13115221.components.push({oldNode: oldNode_13115218, newNode: newNode_13115217, parent: parent_13115219, current: current_13115220});;
      break;
    case 3:
    case 2:
      newNode_13115217.dom = oldNode_13115218.dom;
      if ((result_13115401 == 2)) {
      updateStyles_13040034(newNode_13115217, oldNode_13115218);
      updateAttributes_13050052(newNode_13115217, oldNode_13115218);
      if ((oldNode_13115218.kind == 0)) {
      oldNode_13115218.text = newNode_13115217.text;
      oldNode_13115218.dom.nodeValue = newNode_13115217.text;
      }
      
      }
      
        if (!(((newNode_13115217.events).length == 0))) Tmp1 = true; else {          Tmp1 = !(((oldNode_13115218.events).length == 0));        }      if (Tmp1) {
      mergeEvents_13060014(newNode_13115217, oldNode_13115218, kxi_13115221);
      }
      
      var newLength_13125006 = len_12530014(newNode_13115217);
      var oldLength_13125007 = len_12530014(oldNode_13115218);
      if (((newLength_13125006 == 0) && (oldLength_13125007 == 0))) {
      break BeforeRet;
      }
      
      var minLength_13125008 = nimMin(newLength_13125006, oldLength_13125007);
      if (!((oldNode_13115218.kind == newNode_13115217.kind))) {
      failedAssertImpl_115480(makeNimstrLit("karax.nim(487, 12) `oldNode.kind == newNode.kind` "));
      }
      
      var commonPrefix_13135202 = 0;
      L2: do {
          L3: while (true) {
          if (!(commonPrefix_13135202 < minLength_13125008)) break L3;
            if ((eq_12980214(HEX5BHEX5D_12530036(newNode_13115217, commonPrefix_13135202), HEX5BHEX5D_12530036(oldNode_13115218, commonPrefix_13135202), true) == 3)) {
            addPatch_13065414(kxi_13115221, 5, null, null, HEX5BHEX5D_12530036(newNode_13115217, commonPrefix_13135202), HEX5BHEX5D_12530036(oldNode_13115218, commonPrefix_13135202));
            commonPrefix_13135202 = addInt(commonPrefix_13135202, 1);
            }
            else {
              break L2;
            }
            
          }
      } while(false);
      var oldPos_13135214 = subInt(oldLength_13125007, 1);
      var newPos_13135215 = subInt(newLength_13125006, 1);
      L4: do {
          L5: while (true) {
            if (!(commonPrefix_13135202 <= oldPos_13135214)) Tmp6 = false; else {              Tmp6 = (commonPrefix_13135202 <= newPos_13135215);            }          if (!Tmp6) break L5;
            if ((eq_12980214(HEX5BHEX5D_12530036(newNode_13115217, newPos_13135215), HEX5BHEX5D_12530036(oldNode_13115218, oldPos_13135214), true) == 3)) {
            addPatch_13065414(kxi_13115221, 5, null, null, HEX5BHEX5D_12530036(newNode_13115217, newPos_13135215), HEX5BHEX5D_12530036(oldNode_13115218, oldPos_13135214));
            oldPos_13135214 = subInt(oldPos_13135214, 1);
            newPos_13135215 = subInt(newPos_13135215, 1);
            }
            else {
              break L4;
            }
            
          }
      } while(false);
      var pos_13145018 = addInt(nimMin(oldPos_13135214, newPos_13135215), 1);
      L7: do {
        var i_13145024 = 0;
        var colontmp__14870405 = 0;
        colontmp__14870405 = subInt(pos_13145018, 1);
        var res_14870406 = commonPrefix_13135202;
        L8: do {
            L9: while (true) {
            if (!(res_14870406 <= colontmp__14870405)) break L9;
              i_13145024 = res_14870406;
              diff_13115215(HEX5BHEX5D_12530036(newNode_13115217, i_13145024), HEX5BHEX5D_12530036(oldNode_13115218, i_13145024), current_13115220, current_13115220.childNodes[chckIndx(i_13145024, 0, (current_13115220.childNodes).length-1)], kxi_13115221);
              res_14870406 = addInt(res_14870406, 1);
            }
        } while(false);
      } while(false);
      if ((addInt(oldPos_13135214, 1) == oldLength_13125007)) {
      L10: do {
        var i_13145030 = 0;
        var res_14870412 = pos_13145018;
        L11: do {
            L12: while (true) {
            if (!(res_14870412 <= newPos_13135215)) break L12;
              i_13145030 = res_14870412;
              addPatch_13065414(kxi_13115221, 2, current_13115220, null, HEX5BHEX5D_12530036(newNode_13115217, i_13145030), null);
              res_14870412 = addInt(res_14870412, 1);
            }
        } while(false);
      } while(false);
      }
      else {
        var before_13145031 = current_13115220.childNodes[chckIndx(addInt(oldPos_13135214, 1), 0, (current_13115220.childNodes).length-1)];
        L13: do {
          var i_13145037 = 0;
          var res_14870418 = pos_13145018;
          L14: do {
              L15: while (true) {
              if (!(res_14870418 <= newPos_13135215)) break L15;
                i_13145037 = res_14870418;
                addPatch_13065414(kxi_13115221, 3, current_13115220, before_13145031, HEX5BHEX5D_12530036(newNode_13115217, i_13145037), null);
                res_14870418 = addInt(res_14870418, 1);
              }
          } while(false);
        } while(false);
      }
      
      L16: do {
        var i_13145043 = 0;
        var res_14870424 = pos_13145018;
        L17: do {
            L18: while (true) {
            if (!(res_14870424 <= oldPos_13135214)) break L18;
              i_13145043 = res_14870424;
              addPatch_13065414(kxi_12702284[0], 4, null, null, null, HEX5BHEX5D_12530036(oldNode_13115218, i_13145043));
              addPatch_13065414(kxi_13115221, 1, current_13115220, current_13115220.childNodes[chckIndx(i_13145043, 0, (current_13115220.childNodes).length-1)], null, null);
              res_14870424 = addInt(res_14870424, 1);
            }
        } while(false);
      } while(false);
      break;
    case 1:
      addPatch_13065414(kxi_12702284[0], 4, null, null, null, oldNode_13115218);
      addPatch_13065414(kxi_13115221, 0, parent_13115219, current_13115220, newNode_13115217, null);
      break;
    case 4:
      if (true) {
      failedAssertImpl_115480(makeNimstrLit("karax.nim(529, 26) `false` eq returned usenewNode"));
      }
      
      break;
    }
  } while (false);

  
}
function applyComponents_13165429(kxi_13165431) {
            var Tmp3;

    var i_13165433 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_13165433 < (kxi_13165431.components).length)) break L2;
          var x_13165439 = kxi_13165431.components[chckIndx(i_13165433, 0, (kxi_13165431.components).length-1)].oldNode;
          var newNode_13165440 = kxi_13165431.components[chckIndx(i_13165433, 0, (kxi_13165431.components).length-1)].newNode;
            if (!!((x_13165439.changedImpl == null))) Tmp3 = false; else {              Tmp3 = x_13165439.changedImpl(x_13165439, newNode_13165440);            }          if (Tmp3) {
          var current_13170201 = kxi_13165431.components[chckIndx(i_13165433, 0, (kxi_13165431.components).length-1)].current;
          var parent_13170202 = kxi_13165431.components[chckIndx(i_13165433, 0, (kxi_13165431.components).length-1)].parent;
          x_13165439.updatedImpl(x_13165439, newNode_13165440);
          var oldExpanded_13170203 = x_13165439.expanded;
          x_13165439.expanded = x_13165439.renderImpl(x_13165439);
          x_13165439.renderedVersion = x_13165439.version;
          if ((oldExpanded_13170203 == null)) {
          addPatch_13065414(kxi_12702284[0], 4, null, null, null, x_13165439);
          addPatch_13065414(kxi_13165431, 0, parent_13170202, current_13170201, x_13165439.expanded, null);
          }
          else {
            diff_13115215(x_13165439.expanded, oldExpanded_13170203, parent_13170202, current_13170201, kxi_13165431);
          }
          
          }
          
          i_13165433 = addInt(i_13165433, 1);
        }
    } while(false);
    if (kxi_13165431.components.length < 0) { for (var i=kxi_13165431.components.length;i<0;++i) kxi_13165431.components.push(({oldNode: null, newNode: null, parent: null, current: null})); }
               else { kxi_13165431.components.length = 0; };

  
}
function moveDom_13075048(dest_13075050, src_13075051) {
    dest_13075050.dom = src_13075051.dom;
    src_13075051.dom = null;
    if (!((dest_13075050.id == null))) {
    kxi_12702284[0].byId[dest_13075050.id] = dest_13075050;
    }
    
    if (!((len_12530014(dest_13075050) == len_12530014(src_13075051)))) {
    failedAssertImpl_115480(makeNimstrLit("karax.nim(390, 10) `dest.len == src.len` "));
    }
    
    L1: do {
      var i_13090208 = 0;
      var colontmp__14870475 = 0;
      colontmp__14870475 = len_12530014(dest_13075050);
      var i_14870476 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_14870476 < colontmp__14870475)) break L3;
            i_13090208 = i_14870476;
            moveDom_13075048(HEX5BHEX5D_12530036(dest_13075050, i_13090208), HEX5BHEX5D_12530036(src_13075051, i_13090208));
            i_14870476 = addInt(i_14870476, 1);
          }
      } while(false);
    } while(false);

  
}
function HEX5BHEX5DHEX3D_12530054(x_12530056, idx_12530057, y_12530058) {
    x_12530056.kids[chckIndx(idx_12530057, 0, (x_12530056.kids).length-1)] = y_12530058;

  
}
function applyPatch_13090222(kxi_13090224) {
    L1: do {
      var i_13090232 = 0;
      var i_14870469 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_14870469 < kxi_13090224.patchLen)) break L3;
            i_13090232 = i_14870469;
            var p_13090233 = nimCopy(null, kxi_13090224.patches[chckIndx(i_13090232, 0, (kxi_13090224.patches).length-1)], NTI12702209);
            switch (p_13090233.k) {
            case 0:
              var nn_13090234 = toDom_12815154(p_13090233.newNode, true, kxi_13090224);
              if ((p_13090233.parent == null)) {
              replaceById_12980059(kxi_13090224.rootId, nn_13090234);
              }
              else {
                if ((p_13090233.current.parentNode == p_13090233.parent)) {
                p_13090233.parent.replaceChild(nn_13090234, p_13090233.current);
                }
                else {
                p_13090233.parent.appendChild(nn_13090234);
                }
                
              }
              
              break;
            case 5:
              moveDom_13075048(p_13090233.newNode, p_13090233.oldNode);
              break;
            case 1:
              p_13090233.parent.removeChild(p_13090233.current);
              break;
            case 2:
              var nn_13090250 = toDom_12815154(p_13090233.newNode, true, kxi_13090224);
              p_13090233.parent.appendChild(nn_13090250);
              break;
            case 3:
              var nn_13090251 = toDom_12815154(p_13090233.newNode, true, kxi_13090224);
              p_13090233.parent.insertBefore(nn_13090251, p_13090233.current);
              break;
            case 4:
              var n_13090252 = p_13090233.oldNode;
              if (!((n_13090252.id == null))) {
              delete kxi_13090224.byId[n_13090252.id];
              }
              
              if ((n_13090252.kind == 5)) {
              var x_13095018 = n_13090252;
              if (!((x_13095018.onDetachImpl == null))) {
              x_13095018.onDetachImpl(x_13095018);
              }
              
              }
              
              if (!(kxi_13090224.surpressRedraws)) {
              n_13090252.dom = null;
              }
              
              break;
            }
            i_14870469 = addInt(i_14870469, 1);
          }
      } while(false);
    } while(false);
    kxi_13090224.patchLen = 0;
    L4: do {
      var i_13100013 = 0;
      var i_14870472 = 0;
      L5: do {
          L6: while (true) {
          if (!(i_14870472 < kxi_13090224.patchLenV)) break L6;
            i_13100013 = i_14870472;
            var p_13100014 = nimCopy(null, kxi_13090224.patchesV[chckIndx(i_13100013, 0, (kxi_13090224.patchesV).length-1)], NTI12702211);
            HEX5BHEX5DHEX3D_12530054(p_13100014.parent, p_13100014.pos, p_13100014.newChild);
            if (!(!((p_13100014.newChild.dom == null)))) {
            failedAssertImpl_115480(makeNimstrLit("karax.nim(429, 12) `p.newChild.dom != nil` "));
            }
            
            i_14870472 = addInt(i_14870472, 1);
          }
      } while(false);
    } while(false);
    kxi_13090224.patchLenV = 0;

  
}
function dodraw_13230262(kxi_13230264) {
  BeforeRet: do {
    if ((kxi_13230264.renderer == null)) {
    break BeforeRet;
    }
    
    var rdata_13230269 = {hashPart: window.location.hash};
    var newtree_13230270 = kxi_13230264.renderer(rdata_13230269);
    kxi_13230264.runCount = addInt(kxi_13230264.runCount, 1);
    newtree_13230270.id = kxi_13230264.rootId;
    kxi_13230264.toFocus = null;
    if ((kxi_13230264.currentTree == null)) {
    var asdom_13230285 = toDom_12815154(newtree_13230270, true, kxi_13230264);
    replaceById_12980059(kxi_13230264.rootId, asdom_13230285);
    }
    else {
      if (!(same_12965072(kxi_13230264.currentTree, document.getElementById(kxi_13230264.rootId), 0))) {
      failedAssertImpl_115480(makeNimstrLit("karax.nim(644, 14) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
      }
      
      var olddom_13240201 = document.getElementById(kxi_13230264.rootId);
      diff_13115215(newtree_13230270, kxi_13230264.currentTree, null, olddom_13240201, kxi_13230264);
    }
    
    applyComponents_13165429(kxi_13230264);
    applyPatch_13090222(kxi_13230264);
    kxi_13230264.currentTree = newtree_13230270;
    if (!(same_12965072(kxi_13230264.currentTree, document.getElementById(kxi_13230264.rootId), 0))) {
    failedAssertImpl_115480(makeNimstrLit("karax.nim(657, 12) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
    }
    
    if (!((kxi_13230264.postRenderCallback == null))) {
    kxi_13230264.postRenderCallback(rdata_13230269);
    }
    
    if (!((kxi_13230264.toFocus == null))) {
    kxi_13230264.toFocus.focus();
    }
    
    kxi_13230264.renderId = 0;
  } while (false);

  
}
function init_13255646(ev_13255648) {
    function HEX3Aanonymous_13255649() {
        dodraw_13230262(kxi_12702284[0]);

      
    }

    kxi_12702284[0].renderId = window.requestAnimationFrame(HEX3Aanonymous_13255649);

  
}
function redraw_13255414(kxi_13255416) {
    function HEX3Aanonymous_13255601() {
        dodraw_13230262(kxi_13255416);

      
    }

    if ((kxi_13255416.renderId == 0)) {
    kxi_13255416.renderId = window.requestAnimationFrame(HEX3Aanonymous_13255601);
    }
    

  
}
function setRenderer_13255693(renderer_13255698, root_13255699, clientPostRenderCallback_13255703) {
    function HEX3Aanonymous_13260135() {
        redraw_13255414(kxi_12702284[0]);

      
    }

  var result_13255704 = null;

    if ((document.getElementById(root_13255699) == null)) {
    var msg_13255710 = (("Could not find a <div> with id=" + root_13255699) + ". Karax needs it as its rendering target.");
    raiseException({message: cstrToNimstr(msg_13255710), parent: null, m_type: NTI6817, name: null, trace: [], up: null}, "Exception");
    }
    
    result_13255704 = {rootId: root_13255699, renderer: renderer_13255698, postRenderCallback: clientPostRenderCallback_13255703, patches: newSeq_13260012(60), patchesV: newSeq_13260064(30), components: [], surpressRedraws: false, byId: {}, orphans: {}, currentTree: null, toFocus: null, toFocusV: null, renderId: 0, patchLen: 0, patchLenV: 0, runCount: 0};
    kxi_12702284[0] = result_13255704;
    window.onload = init_13255646;
    window.onhashchange = HEX3Aanonymous_13260135;

  return result_13255704;

}
function setRenderer_13260238(renderer_13260242, root_13260243, clientPostRenderCallback_13260246) {
    function wrapRenderer_13260248(data_13260250) {
      var result_13260251 = null;

        result_13260251 = renderer_13260242();

      return result_13260251;

    }
    function wrapPostRender_13260265(data_13260267) {
        if (!((clientPostRenderCallback_13260246 == null))) {
        clientPostRenderCallback_13260246();
        }
        

      
    }

  var result_13260247 = null;

    result_13260247 = setRenderer_13255693(wrapRenderer_13260248, root_13260243, wrapPostRender_13260265);

  return result_13260247;

}
function newVNode_12540428(kind_12540430) {
  var result_12540431 = null;

    result_12540431 = {kind: kind_12540430, index: -1, m_type: NTI12445031, id: null, class: null, text: null, kids: [], attrs: [], events: [], style: null, dom: null};

  return result_12540431;

}
function add_12530072(parent_12530074, kid_12530075) {
    parent_12530074.kids.push(kid_12530075);;

  
}
function tree_12540445(kind_12540447, kids_12540449) {
  var result_12540450 = null;

    result_12540450 = newVNode_12540428(kind_12540447);
    L1: do {
      var k_12540483 = null;
      var k_12540483_Idx = 0;
      var i_14870554 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_14870554 < (kids_12540449).length)) break L3;
            k_12540483 = kids_12540449; k_12540483_Idx = chckIndx(i_14870554, 0, (kids_12540449).length-1);
            add_12530072(result_12540450, k_12540483[k_12540483_Idx]);
            i_14870554 = addInt(i_14870554, 1);
          }
      } while(false);
    } while(false);

  return result_12540450;

}
function addEventListener_12545014(n_12545016, event_12545017, handler_12545018) {
    n_12545016.events.push({Field0: event_12545017, Field1: handler_12545018, Field2: null});;

  
}
function addEventHandler_13265118(n_13265120, k_13265121, action_13265122, kxi_13265123) {
    function wrapper_13265124(ev_13265126, n_13265127) {
        action_13265122(ev_13265126, n_13265127);
        if (!(kxi_13265123.surpressRedraws)) {
        redraw_13255414(kxi_13265123);
        }
        

      
    }

    addEventListener_12545014(n_13265120, k_13265121, wrapper_13265124);

  
}
function chckdCheck_14455267(ev_14455270, n_14455271) {
    L1: do {
      var inpChck_14465214 = null;
      var inpChck_14465214_Idx = 0;
      var colontmp__14870558 = [];
      colontmp__14870558 = document.querySelectorAll(".show-sector");
      var i_14870560 = 0;
      var L_14870561 = (colontmp__14870558).length;
      L2: do {
          L3: while (true) {
          if (!(i_14870560 < L_14870561)) break L3;
            inpChck_14465214 = colontmp__14870558; inpChck_14465214_Idx = chckIndx(i_14870560, 0, (colontmp__14870558).length-1);
            if ((inpChck_14465214[inpChck_14465214_Idx].getAttribute("checkd") == "true")) {
            inpChck_14465214[inpChck_14465214_Idx].setAttribute("checked", "true");
            }
            else {
            inpChck_14465214[inpChck_14465214_Idx].removeAttribute("checked");
            }
            
            i_14870560 = addInt(i_14870560, 1);
            if (!(((colontmp__14870558).length == L_14870561))) {
            failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);

  
}
function len_13985198(t_13985203) {
  var result_13985204 = 0;

    result_13985204 = t_13985203.counter;

  return result_13985204;

}
function text_12540582(s_12540584) {
  var result_12540585 = null;

    result_12540585 = {kind: 0, text: toJSStr(s_12540584), index: -1, m_type: NTI12445031, id: null, class: null, kids: [], attrs: [], events: [], style: null, dom: null};

  return result_12540585;

}
function initOrderedTable_14371460(initialSize_14371464) {
  var result_14371466 = ({data: [], counter: 0, first: 0, last: 0});

    var correctSizeHEX60gensym128_14375001 = slotsNeeded_9360048(chckRange(initialSize_14371464, 0, 2147483647));
    result_14371466.counter = 0;
    result_14371466.data = new Array(chckRange(correctSizeHEX60gensym128_14375001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym128_14375001, 0, 2147483647);++i) {result_14371466.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    result_14371466.first = -1;
    result_14371466.last = -1;

  return result_14371466;

}
function rawGet_14395621(t_14395626, key_14395627, hc_14395628, hc_14395628_Idx) {
            var Tmp3;

  var result_14395629 = 0;

  BeforeRet: do {
    hc_14395628[hc_14395628_Idx] = hash_9335214(key_14395627);
    if ((hc_14395628[hc_14395628_Idx] == 0)) {
    hc_14395628[hc_14395628_Idx] = 314159265;
    }
    
    if (((t_14395626.data).length == 0)) {
    result_14395629 = -1;
    break BeforeRet;
    }
    
    var h_14405138 = (hc_14395628[hc_14395628_Idx] & ((t_14395626.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_9356218(t_14395626.data[chckIndx(h_14405138, 0, (t_14395626.data).length-1)].Field0)) break L2;
            if (!(t_14395626.data[chckIndx(h_14405138, 0, (t_14395626.data).length-1)].Field0 == hc_14395628[hc_14395628_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_14395626.data[chckIndx(h_14405138, 0, (t_14395626.data).length-1)].Field2, key_14395627);            }          if (Tmp3) {
          result_14395629 = h_14405138;
          break BeforeRet;
          }
          
          h_14405138 = nextTry_9360014(h_14405138, ((t_14395626.data).length-1));
        }
    } while(false);
    result_14395629 = subInt(-1, h_14405138);
  } while (false);

  return result_14395629;

}
function mustRehash_14420601(t_14420604) {
  var result_14420605 = false;

    if (!((t_14420604.counter < (t_14420604.data).length))) {
    failedAssertImpl_115480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_14420605 = ((mulInt((t_14420604.data).length, 2) < mulInt(t_14420604.counter, 3)) || (subInt((t_14420604.data).length, t_14420604.counter) < 4));

  return result_14420605;

}
function rawInsert_14446359(t_14446365, data_14446368, data_14446368_Idx, key_14446369, val_14446371, hc_14446372, h_14446373) {
    data_14446368[data_14446368_Idx][chckIndx(h_14446373, 0, (data_14446368[data_14446368_Idx]).length-1)].Field2 = nimCopy(null, key_14446369, NTI113);
    data_14446368[data_14446368_Idx][chckIndx(h_14446373, 0, (data_14446368[data_14446368_Idx]).length-1)].Field3 = val_14446371;
    data_14446368[data_14446368_Idx][chckIndx(h_14446373, 0, (data_14446368[data_14446368_Idx]).length-1)].Field0 = hc_14446372;
    data_14446368[data_14446368_Idx][chckIndx(h_14446373, 0, (data_14446368[data_14446368_Idx]).length-1)].Field1 = -1;
    if ((t_14446365.first < 0)) {
    t_14446365.first = h_14446373;
    }
    
    if ((0 <= t_14446365.last)) {
    data_14446368[data_14446368_Idx][chckIndx(t_14446365.last, 0, (data_14446368[data_14446368_Idx]).length-1)].Field1 = h_14446373;
    }
    
    t_14446365.last = h_14446373;

  
}
function enlarge_14445180(t_14445186) {
          var Tmp6;
          var Tmp7;

    var n_14445194 = [];
    n_14445194 = new Array(chckRange(mulInt((t_14445186.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_14445186.data).length, 2), 0, 2147483647);++i) {n_14445194[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    var h_14445333 = t_14445186.first;
    t_14445186.first = -1;
    t_14445186.last = -1;
    var Tmp1 = t_14445186.data; t_14445186.data = n_14445194; n_14445194 = Tmp1;    L2: do {
        L3: while (true) {
        if (!(0 <= h_14445333)) break L3;
          var nxt_14445496 = n_14445194[chckIndx(h_14445333, 0, (n_14445194).length-1)].Field1;
          var eh_14445652 = n_14445194[chckIndx(h_14445333, 0, (n_14445194).length-1)].Field0;
          if (isFilled_9356218(eh_14445652)) {
          var j_14445659 = (eh_14445652 & ((t_14445186.data).length-1));
          L4: do {
              L5: while (true) {
              if (!isFilled_9356218(t_14445186.data[chckIndx(j_14445659, 0, (t_14445186.data).length-1)].Field0)) break L5;
                j_14445659 = nextTry_9360014(j_14445659, ((t_14445186.data).length-1));
              }
          } while(false);
          Tmp6 = n_14445194[chckIndx(h_14445333, 0, (n_14445194).length-1)].Field2;
          n_14445194[chckIndx(h_14445333, 0, (n_14445194).length-1)].Field2 = genericReset(n_14445194[chckIndx(h_14445333, 0, (n_14445194).length-1)].Field2, NTI113);
          Tmp7 = n_14445194[chckIndx(h_14445333, 0, (n_14445194).length-1)].Field3;
          n_14445194[chckIndx(h_14445333, 0, (n_14445194).length-1)].Field3 = genericReset(n_14445194[chckIndx(h_14445333, 0, (n_14445194).length-1)].Field3, NTI13686026);
          rawInsert_14446359(t_14445186, t_14445186, "data", Tmp6, Tmp7, n_14445194[chckIndx(h_14445333, 0, (n_14445194).length-1)].Field0, j_14445659);
          }
          
          h_14445333 = nxt_14445496;
        }
    } while(false);

  
}
function rawGetKnownHC_14447195(t_14447200, key_14447201, hc_14447202) {
  var result_14447203 = 0;

  BeforeRet: do {
    if (((t_14447200.data).length == 0)) {
    result_14447203 = -1;
    break BeforeRet;
    }
    
    var h_14450138 = (hc_14447202 & ((t_14447200.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_9356218(t_14447200.data[chckIndx(h_14450138, 0, (t_14447200.data).length-1)].Field0)) break L2;
          if (((t_14447200.data[chckIndx(h_14450138, 0, (t_14447200.data).length-1)].Field0 == hc_14447202) && eqStrings(t_14447200.data[chckIndx(h_14450138, 0, (t_14447200.data).length-1)].Field2, key_14447201))) {
          result_14447203 = h_14450138;
          break BeforeRet;
          }
          
          h_14450138 = nextTry_9360014(h_14450138, ((t_14447200.data).length-1));
        }
    } while(false);
    result_14447203 = subInt(-1, h_14450138);
  } while (false);

  return result_14447203;

}
function HEX5BHEX5DHEX3D_14380730(t_14380736, key_14380737, val_14380739) {
    if (((t_14380736.data).length == 0)) {
    var correctSizeHEX60gensym131_14390001 = slotsNeeded_9360048(32);
    t_14380736.counter = 0;
    t_14380736.data = new Array(chckRange(correctSizeHEX60gensym131_14390001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym131_14390001, 0, 2147483647);++i) {t_14380736.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    t_14380736.first = -1;
    t_14380736.last = -1;
    }
    
    var hc_14395601 = [0];
    var index_14405626 = rawGet_14395621(t_14380736, key_14380737, hc_14395601, 0);
    if ((0 <= index_14405626)) {
    t_14380736.data[chckIndx(index_14405626, 0, (t_14380736.data).length-1)].Field3 = val_14380739;
    }
    else {
      if (((t_14380736.data).length == 0)) {
      var correctSizeHEX60gensym136_14415001 = slotsNeeded_9360048(32);
      t_14380736.counter = 0;
      t_14380736.data = new Array(chckRange(correctSizeHEX60gensym136_14415001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym136_14415001, 0, 2147483647);++i) {t_14380736.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}      t_14380736.first = -1;
      t_14380736.last = -1;
      }
      
      if (mustRehash_14420601(t_14380736)) {
      enlarge_14445180(t_14380736);
      index_14405626 = rawGetKnownHC_14447195(t_14380736, key_14380737, hc_14395601[0]);
      }
      
      index_14405626 = subInt(-1, index_14405626);
      rawInsert_14446359(t_14380736, t_14380736, "data", key_14380737, val_14380739, hc_14395601[0], index_14405626);
      t_14380736.counter = addInt(t_14380736.counter, 1);
    }
    

  
}
function isInitialized_11505214(dt_11505216) {
  var result_11505217 = false;

    result_11505217 = !((dt_11505216.monthZero == 0));

  return result_11505217;

}
function monthday_11345229(dt_11345231) {
  var result_11345232 = 0;

    if (!(!((dt_11345231.monthdayZero == 0)))) {
    failedAssertImpl_115480(makeNimstrLit("times.nim(989, 28) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_11345232 = dt_11345231.monthdayZero;

  return result_11345232;

}
function nsuIntToStr(x_8575404, minchars_8575405) {
  var result_8575406 = [];

    result_8575406 = nimCopy(null, cstrToNimstr((absInt(x_8575404))+""), NTI113);
    L1: do {
      var i_8575415 = 0;
      var colontmp__14870587 = 0;
      colontmp__14870587 = subInt(minchars_8575405, (result_8575406).length);
      var res_14870588 = 1;
      L2: do {
          L3: while (true) {
          if (!(res_14870588 <= colontmp__14870587)) break L3;
            i_8575415 = res_14870588;
            result_8575406 = nimCopy(null, [48].concat(result_8575406 || []), NTI113);
            res_14870588 = addInt(res_14870588, 1);
          }
      } while(false);
    } while(false);
    if ((x_8575404 < 0)) {
    result_8575406 = nimCopy(null, [45].concat(result_8575406 || []), NTI113);
    }
    

  return result_8575406;

}
function HEX2D_11048091(a_11048093, b_11048094) {
  var result_11048095 = 0;

    result_11048095 = (a_11048093 - b_11048094);

  return result_11048095;

}
function month_11365214(dt_11365216) {
  var result_11365217 = 0;

    if (!(!((dt_11365216.monthdayZero == 0)))) {
    failedAssertImpl_115480(makeNimstrLit("times.nim(996, 28) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_11365217 = dt_11365216.monthZero;

  return result_11365217;

}
function HEX2A_11048001(a_11048003, b_11048004) {
  var result_11048005 = 0;

    result_11048005 = (a_11048003 * b_11048004);

  return result_11048005;

}
function convert_11165226(unitFrom_11165229, unitTo_11165230, quantity_11165231) {
    var Tmp1;

  var result_11165232 = 0;

    if ((unitFrom_11165229 < unitTo_11165230)) {
    Tmp1 = chckRange(divInt(quantity_11165231, divInt(unitWeights_11048382[chckIndx(unitTo_11165230, 0, (unitWeights_11048382).length-1)], unitWeights_11048382[chckIndx(unitFrom_11165229, 0, (unitWeights_11048382).length-1)])), 0, 999999999);
    }
    else {
    Tmp1 = chckRange(HEX2A_11048001(divInt(unitWeights_11048382[chckIndx(unitFrom_11165229, 0, (unitWeights_11048382).length-1)], unitWeights_11048382[chckIndx(unitTo_11165230, 0, (unitWeights_11048382).length-1)]), quantity_11165231), 0, 999999999);
    }
    
    result_11165232 = Tmp1;

  return result_11165232;

}
function HEX2B_11048055(a_11048057, b_11048058) {
  var result_11048059 = 0;

    result_11048059 = (a_11048057 + b_11048058);

  return result_11048059;

}
function HEX3DHEX3D_11575022(zone1_11575024, zone2_11575025) {
  var result_11575026 = false;

  BeforeRet: do {
    if ((zone1_11575024 == zone2_11575025)) {
    result_11575026 = true;
    break BeforeRet;
    }
    
    if (((zone1_11575024 == null) || (zone2_11575025 == null))) {
    result_11575026 = false;
    break BeforeRet;
    }
    
    result_11575026 = eqStrings(zone1_11575024.name, zone2_11575025.name);
  } while (false);

  return result_11575026;

}
function formatPattern_11720056(dt_11720058, pattern_11720059, result_11720061, result_11720061_Idx, loc_11720062) {
      var Tmp1;
      var Tmp2;
      var Tmp3;
      var Tmp4;
      var Tmp5;
      var Tmp6;
        var Tmp7;
        var Tmp8;
      var Tmp9;

    switch (pattern_11720059) {
    case 0:
      result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], cstrToNimstr((monthday_11345229(dt_11720058))+""));;
      break;
    case 1:
      result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], nsuIntToStr(monthday_11345229(dt_11720058), 2));;
      break;
    case 2:
      result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], loc_11720062.ddd[chckIndx(dt_11720058.weekday, 0, (loc_11720062.ddd).length-1)]);;
      break;
    case 3:
      result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], loc_11720062.dddd[chckIndx(dt_11720058.weekday, 0, (loc_11720062.dddd).length-1)]);;
      break;
    case 4:
      if ((dt_11720058.hour == 0)) {
      Tmp1 = makeNimstrLit("12");
      }
      else {
      if ((12 < dt_11720058.hour)) {
      Tmp1 = cstrToNimstr((HEX2D_11048091(dt_11720058.hour, 12))+"");
      }
      else {
      Tmp1 = cstrToNimstr((dt_11720058.hour)+"");
      }
      }
      result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], Tmp1);;
      break;
    case 5:
      if ((dt_11720058.hour == 0)) {
      Tmp2 = makeNimstrLit("12");
      }
      else {
      if ((12 < dt_11720058.hour)) {
      Tmp2 = nsuIntToStr(HEX2D_11048091(dt_11720058.hour, 12), 2);
      }
      else {
      Tmp2 = nsuIntToStr(dt_11720058.hour, 2);
      }
      }
      result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], Tmp2);;
      break;
    case 6:
      result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], cstrToNimstr((dt_11720058.hour)+""));;
      break;
    case 7:
      result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], nsuIntToStr(dt_11720058.hour, 2));;
      break;
    case 8:
      result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], cstrToNimstr((dt_11720058.minute)+""));;
      break;
    case 9:
      result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], nsuIntToStr(dt_11720058.minute, 2));;
      break;
    case 10:
      result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], cstrToNimstr((month_11365214(dt_11720058))+""));;
      break;
    case 11:
      result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], nsuIntToStr(month_11365214(dt_11720058), 2));;
      break;
    case 12:
      result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], loc_11720062.MMM[chckIndx(month_11365214(dt_11720058), 1, (loc_11720062.MMM).length+(1)-1)-(1)]);;
      break;
    case 13:
      result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], loc_11720062.MMMM[chckIndx(month_11365214(dt_11720058), 1, (loc_11720062.MMMM).length+(1)-1)-(1)]);;
      break;
    case 14:
      result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], cstrToNimstr((dt_11720058.second)+""));;
      break;
    case 15:
      result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], nsuIntToStr(dt_11720058.second, 2));;
      break;
    case 16:
      result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], nsuIntToStr(convert_11165226(0, 2, dt_11720058.nanosecond), 3));;
      break;
    case 17:
      result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], nsuIntToStr(convert_11165226(0, 1, dt_11720058.nanosecond), 6));;
      break;
    case 18:
      result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], nsuIntToStr(dt_11720058.nanosecond, 9));;
      break;
    case 19:
      if ((12 <= dt_11720058.hour)) {
      Tmp3 = makeNimstrLit("P");
      }
      else {
      Tmp3 = makeNimstrLit("A");
      }
      
      result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], Tmp3);;
      break;
    case 20:
      if ((12 <= dt_11720058.hour)) {
      Tmp4 = makeNimstrLit("PM");
      }
      else {
      Tmp4 = makeNimstrLit("AM");
      }
      
      result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], Tmp4);;
      break;
    case 21:
      if ((dt_11720058.year <= 0)) {
      Tmp5 = HEX2B_11048055(absInt(dt_11720058.year), 1);
      }
      else {
      Tmp5 = dt_11720058.year;
      }
      
      result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], nsuIntToStr(modInt(Tmp5, 100), 2));;
      break;
    case 22:
      if ((dt_11720058.year <= 0)) {
      Tmp6 = HEX2B_11048055(absInt(dt_11720058.year), 1);
      }
      else {
      Tmp6 = dt_11720058.year;
      }
      
      var year_11750001 = Tmp6;
      if ((year_11750001 < 10000)) {
      result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], nsuIntToStr(year_11750001, 4));;
      }
      else {
      result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], [43].concat(cstrToNimstr((year_11750001)+"") || []));;
      }
      
      break;
    case 23:
      if ((dt_11720058.year < 1)) {
      result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], cstrToNimstr((HEX2B_11048055(absInt(dt_11720058.year), 1))+""));;
      }
      else {
      result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], cstrToNimstr((dt_11720058.year)+""));;
      }
      
      break;
    case 24:
      var year_11750003 = dt_11720058.year;
      if (((year_11750003 < 10000) || (year_11750003 < 0))) {
      result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], nsuIntToStr(year_11750003, 4));;
      }
      else {
      result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], [43].concat(cstrToNimstr((year_11750003)+"") || []));;
      }
      
      break;
    case 25:
      result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], cstrToNimstr((dt_11720058.year)+""));;
      break;
    case 26:
    case 27:
    case 28:
    case 29:
        if (!!(HEX3DHEX3D_11575022(dt_11720058.timezone, null))) Tmp7 = false; else {          Tmp7 = eqStrings(dt_11720058.timezone.name, makeNimstrLit("Etc/UTC"));        }      if (Tmp7) {
      addChar(result_11720061[result_11720061_Idx], 90);;
      }
      else {
        if ((0 <= negInt(dt_11720058.utcOffset))) {
        Tmp8 = 43;
        }
        else {
        Tmp8 = 45;
        }
        
        addChar(result_11720061[result_11720061_Idx], Tmp8);;
        var absOffset_11760001 = absInt(dt_11720058.utcOffset);
        switch (pattern_11720059) {
        case 26:
          result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], cstrToNimstr((divInt(absOffset_11760001, 3600))+""));;
          break;
        case 27:
          result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], nsuIntToStr(divInt(absOffset_11760001, 3600), 2));;
          break;
        case 28:
          var h_11760005 = nsuIntToStr(divInt(absOffset_11760001, 3600), 2);
          var m_11760006 = nsuIntToStr(modInt(divInt(absOffset_11760001, 60), 60), 2);
          result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], (h_11760005 || []).concat(makeNimstrLit(":") || [],m_11760006 || []));;
          break;
        case 29:
          var absOffset_11760007 = absInt(dt_11720058.utcOffset);
          var h_11760009 = nsuIntToStr(divInt(absOffset_11760007, 3600), 2);
          var m_11760010 = nsuIntToStr(modInt(divInt(absOffset_11760007, 60), 60), 2);
          var s_11760011 = nsuIntToStr(modInt(absOffset_11760007, 60), 2);
          result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], (h_11760009 || []).concat(makeNimstrLit(":") || [],m_11760010 || [],makeNimstrLit(":") || [],s_11760011 || []));;
          break;
        default: 
          if (true) {
          failedAssertImpl_115480(makeNimstrLit("times.nim(1751, 20) `false` "));
          }
          
          break;
        }
      }
      
      break;
    case 30:
      if ((dt_11720058.year < 1)) {
      Tmp9 = makeNimstrLit("BC");
      }
      else {
      Tmp9 = makeNimstrLit("AD");
      }
      
      result_11720061[result_11720061_Idx].push.apply(result_11720061[result_11720061_Idx], Tmp9);;
      break;
    case 31:
      if (true) {
      failedAssertImpl_115480(makeNimstrLit("times.nim(1754, 18) `false` "));
      }
      
      break;
    }

  
}
function format_12100059(dt_12100061, f_12100062, loc_12100063) {
  var result_12100064 = [[]];

    if (!(!((dt_12100061.monthdayZero == 0)))) {
    failedAssertImpl_115480(makeNimstrLit("times.nim(1989, 29) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_12100064[0] = nimCopy(null, [], NTI113);
    var idx_12120202 = 0;
    L1: do {
        L2: while (true) {
        if (!(idx_12120202 <= ((f_12100062.patterns).length-1))) break L2;
          switch (chckRange(f_12100062.patterns[chckIndx(idx_12120202, 0, (f_12100062.patterns).length-1)], 0, 31)) {
          case 31:
            idx_12120202 = addInt(idx_12120202, 1);
            var len_12120215 = f_12100062.patterns[chckIndx(idx_12120202, 0, (f_12100062.patterns).length-1)];
            L3: do {
              var i_12120421 = 0;
              var res_14870581 = 1;
              L4: do {
                  L5: while (true) {
                  if (!(res_14870581 <= ((len_12120215)|0))) break L5;
                    i_12120421 = res_14870581;
                    idx_12120202 = addInt(idx_12120202, 1);
                    addChar(result_12100064[0], f_12100062.patterns[chckIndx(idx_12120202, 0, (f_12100062.patterns).length-1)]);;
                    res_14870581 = addInt(res_14870581, 1);
                  }
              } while(false);
            } while(false);
            idx_12120202 = addInt(idx_12120202, 1);
            break;
          default: 
            formatPattern_11720056(dt_12100061, chckRange(f_12100062.patterns[chckIndx(idx_12120202, 0, (f_12100062.patterns).length-1)], 0, 31), result_12100064, 0, loc_12100063);
            idx_12120202 = addInt(idx_12120202, 1);
            break;
          }
        }
    } while(false);

  return result_12100064[0];

}
function format_12125130(dt_12125133) {
  var result_12125135 = [];

    result_12125135 = nimCopy(null, format_12100059(dt_12125133, f2_12125174, DefaultLocale_11640709), NTI113);

  return result_12125135;

}
function HEX24_12125125(dt_12125127) {
  var result_12125128 = [];

    if (!(isInitialized_11505214(dt_12125127))) {
    result_12125128 = nimCopy(null, makeNimstrLit("Uninitialized DateTime"), NTI113);
    }
    else {
      result_12125128 = nimCopy(null, format_12125130(dt_12125127), NTI113);
    }
    

  return result_12125128;

}
function HEX2B_11048037(a_11048039, b_11048040) {
  var result_11048041 = 0;

    result_11048041 = (a_11048039 + b_11048040);

  return result_11048041;

}
function convert_11075442(unitFrom_11075445, unitTo_11075446, quantity_11075447) {
    var Tmp1;

  var result_11075448 = 0;

    if ((unitFrom_11075445 < unitTo_11075446)) {
    Tmp1 = divInt(quantity_11075447, divInt(unitWeights_11048382[chckIndx(unitTo_11075446, 0, (unitWeights_11048382).length-1)], unitWeights_11048382[chckIndx(unitFrom_11075445, 0, (unitWeights_11048382).length-1)]));
    }
    else {
    Tmp1 = HEX2A_11048001(divInt(unitWeights_11048382[chckIndx(unitFrom_11075445, 0, (unitWeights_11048382).length-1)], unitWeights_11048382[chckIndx(unitTo_11075446, 0, (unitWeights_11048382).length-1)]), quantity_11075447);
    }
    
    result_11075448 = Tmp1;

  return result_11075448;

}
function convert_11075558(unitFrom_11075561, unitTo_11075562, quantity_11075563) {
    var Tmp1;

  var result_11075564 = 0;

    if ((unitFrom_11075561 < unitTo_11075562)) {
    Tmp1 = chckRange(divInt(quantity_11075563, divInt(unitWeights_11048382[chckIndx(unitTo_11075562, 0, (unitWeights_11048382).length-1)], unitWeights_11048382[chckIndx(unitFrom_11075561, 0, (unitWeights_11048382).length-1)])), -2147483648, 2147483647);
    }
    else {
    Tmp1 = chckRange(HEX2A_11048001(divInt(unitWeights_11048382[chckIndx(unitFrom_11075561, 0, (unitWeights_11048382).length-1)], unitWeights_11048382[chckIndx(unitTo_11075562, 0, (unitWeights_11048382).length-1)]), quantity_11075563), -2147483648, 2147483647);
    }
    
    result_11075564 = Tmp1;

  return result_11075564;

}
function normalize_11245002(seconds_11245005, nanoseconds_11245006) {
  var result_11245007 = ({seconds: 0, nanosecond: 0});

    result_11245007.seconds = HEX2B_11048037(seconds_11245005, convert_11075442(0, 3, nanoseconds_11245006));
    var nanosecond_11245021 = modInt(nanoseconds_11245006, convert_11075558(3, 0, 1));
    if ((nanosecond_11245021 < 0)) {
    nanosecond_11245021 = addInt(nanosecond_11245021, convert_11075558(3, 0, 1));
    result_11245007.seconds = subInt(result_11245007.seconds, 1);
    }
    
    result_11245007.nanosecond = chckRange(chckRange(nanosecond_11245021, -2147483648, 2147483647), 0, 999999999);

  return result_11245007;

}
function HEX2D_11048073(a_11048075, b_11048076) {
  var result_11048077 = 0;

    result_11048077 = (a_11048075 - b_11048076);

  return result_11048077;

}
function ntSubTime(a_11245069, b_11245070) {
  var result_11245071 = ({seconds: 0, nanosecond: 0});

    nimCopy(result_11245071, normalize_11245002(HEX2D_11048073(a_11245069.seconds, b_11245070.seconds), HEX2D_11048091(a_11245069.nanosecond, b_11245070.nanosecond)), NTI11048239);

  return result_11245071;

}
function normalize_11075545(seconds_11075548, nanoseconds_11075549) {
  var result_11075550 = ({seconds: 0, nanosecond: 0});

    result_11075550.seconds = HEX2B_11048037(seconds_11075548, convert_11075442(0, 3, nanoseconds_11075549));
    var nanosecond_11075599 = modInt(nanoseconds_11075549, convert_11075558(3, 0, 1));
    if ((nanosecond_11075599 < 0)) {
    nanosecond_11075599 = addInt(nanosecond_11075599, convert_11075558(3, 0, 1));
    result_11075550.seconds = subInt(result_11075550.seconds, 1);
    }
    
    result_11075550.nanosecond = chckRange(chckRange(nanosecond_11075599, -2147483648, 2147483647), 0, 999999999);

  return result_11075550;

}
function initDuration_11075431(nanoseconds_11075433, microseconds_11075434, milliseconds_11075435, seconds_11075436, minutes_11075437, hours_11075438, days_11075439, weeks_11075440) {
  var result_11075441 = ({seconds: 0, nanosecond: 0});

    var seconds_11075525 = HEX2B_11048037(HEX2B_11048037(HEX2B_11048037(HEX2B_11048037(HEX2B_11048037(HEX2B_11048037(HEX2B_11048037(convert_11075442(7, 3, weeks_11075440), convert_11075442(6, 3, days_11075439)), convert_11075442(4, 3, minutes_11075437)), convert_11075442(5, 3, hours_11075438)), convert_11075442(3, 3, seconds_11075436)), convert_11075442(2, 3, milliseconds_11075435)), convert_11075442(1, 3, microseconds_11075434)), convert_11075442(0, 3, nanoseconds_11075433));
    var nanoseconds_11075541 = chckRange(HEX2B_11048037(HEX2B_11048037(convert_11075442(2, 0, modInt(milliseconds_11075435, 1000)), convert_11075442(1, 0, modInt(microseconds_11075434, 1000000))), modInt(nanoseconds_11075433, 1000000000)), -2147483648, 2147483647);
    nimCopy(result_11075441, normalize_11075545(seconds_11075525, nanoseconds_11075541), NTI11048243);

  return result_11075441;

}
function floorDiv_11075158(x_11075161, y_11075162) {
      var Tmp1;
      var Tmp2;
        var Tmp3;

  var result_11075163 = 0;

    result_11075163 = Math.trunc(x_11075161 / y_11075162);
    var r_11075164 = Math.trunc(x_11075161 % y_11075162);
      if (!(0 < r_11075164)) Tmp2 = false; else {        Tmp2 = (y_11075162 < 0);      }      if (Tmp2) Tmp1 = true; else {        if (!(r_11075164 < 0)) Tmp3 = false; else {          Tmp3 = (0 < y_11075162);        }        Tmp1 = Tmp3;      }    if (Tmp1) {
    result_11075163 -= 1;
    }
    

  return result_11075163;

}
function inc_11048133(a_11048136, a_11048136_Idx, b_11048137) {
    a_11048136[a_11048136_Idx] += b_11048137;

  
}
function fromEpochDay_11070036(epochday_11070038) {
    var Tmp1;
    var Tmp2;

  var result_11070043 = {Field0: 0, Field1: 0, Field2: 0};

  BeforeRet: do {
    var z_11070044 = [epochday_11070038];
    inc_11048133(z_11070044, 0, 719468);
    if ((0 <= z_11070044[0])) {
    Tmp1 = z_11070044[0];
    }
    else {
    Tmp1 = HEX2D_11048073(z_11070044[0], 146096);
    }
    
    var era_11075003 = divInt(Tmp1, 146097);
    var doe_11075005 = HEX2D_11048073(z_11070044[0], HEX2A_11048001(era_11075003, 146097));
    var yoe_11075010 = divInt(HEX2D_11048073(HEX2B_11048037(HEX2D_11048073(doe_11075005, divInt(doe_11075005, 1460)), divInt(doe_11075005, 36524)), divInt(doe_11075005, 146096)), 365);
    var y_11075012 = HEX2B_11048037(yoe_11075010, HEX2A_11048001(era_11075003, 400));
    var doy_11075015 = HEX2D_11048073(doe_11075005, HEX2D_11048073(HEX2B_11048037(HEX2A_11048001(365, yoe_11075010), divInt(yoe_11075010, 4)), divInt(yoe_11075010, 100)));
    var mp_11075017 = divInt(HEX2B_11048037(HEX2A_11048001(5, doy_11075015), 2), 153);
    var d_11075019 = HEX2B_11048037(HEX2D_11048073(doy_11075015, divInt(HEX2B_11048037(HEX2A_11048001(153, mp_11075017), 2), 5)), 1);
    if ((mp_11075017 < 10)) {
    Tmp2 = 3;
    }
    else {
    Tmp2 = -9;
    }
    
    var m_11075021 = HEX2B_11048037(mp_11075017, Tmp2);
    var colontmp__14870599 = chckRange(d_11075019, 1, 31);
    var colontmp__14870600 = chckRange(m_11075021, 1, 12);
    var colontmp__14870601 = chckRange(HEX2B_11048037(y_11075012, ((m_11075021 <= 2) ? 1:0)), -2147483648, 2147483647);
    nimCopy(result_11070043, {Field0: nimCopy(null, colontmp__14870599, NTI11048227), Field1: colontmp__14870600, Field2: colontmp__14870601}, NTI11070039);
    break BeforeRet;
  } while (false);

  return result_11070043;

}
function isLeapYear_11048443(year_11048445) {
    var Tmp1;
      var Tmp2;

  var result_11048446 = false;

    if (!(modInt(year_11048445, 4) == 0)) Tmp1 = false; else {      if (!((modInt(year_11048445, 100) == 0))) Tmp2 = true; else {        Tmp2 = (modInt(year_11048445, 400) == 0);      }      Tmp1 = Tmp2;    }    result_11048446 = Tmp1;

  return result_11048446;

}
function getDaysInMonth_11050016(month_11050018, year_11050019) {
      var Tmp1;

  var result_11050020 = 0;

    switch (month_11050018) {
    case 2:
      if (isLeapYear_11048443(year_11050019)) {
      Tmp1 = 29;
      }
      else {
      Tmp1 = 28;
      }
      
      result_11050020 = Tmp1;
      break;
    case 4:
    case 6:
    case 9:
    case 11:
      result_11050020 = 30;
      break;
    default: 
      result_11050020 = 31;
      break;
    }

  return result_11050020;

}
function assertValidDate_11050034(monthday_11050036, month_11050037, year_11050038) {
    if (!((monthday_11050036 <= getDaysInMonth_11050016(month_11050037, year_11050038)))) {
    failedAssertImpl_115480((makeNimstrLit("times.nim(443, 10) `monthday <= getDaysInMonth(month, year)` ") || []).concat(cstrToNimstr((year_11050038)+"") || [],makeNimstrLit("-") || [],nsuIntToStr(month_11050037, 2) || [],makeNimstrLit("-") || [],cstrToNimstr((monthday_11050036)+"") || [],makeNimstrLit(" is not a valid date") || []));
    }
    

  
}
function HEX2A_11048019(a_11048021, b_11048022) {
  var result_11048023 = 0;

    result_11048023 = (a_11048021 * b_11048022);

  return result_11048023;

}
function toEpochDay_11060229(monthday_11060231, month_11060232, year_11060233) {
    var Tmp1;
    var Tmp2;

  var result_11060234 = 0;

  BeforeRet: do {
    assertValidDate_11050034(monthday_11060231, month_11060232, year_11060233);
    var colontmp__14870603 = {Field0: year_11060233, Field1: month_11060232, Field2: monthday_11060231};
    var y_11060240 = colontmp__14870603["Field0"];
    var m_11060241 = colontmp__14870603["Field1"];
    var d_11060242 = colontmp__14870603["Field2"];
    if ((m_11060241 <= 2)) {
    y_11060240 = subInt(y_11060240, 1);
    }
    
    if ((0 <= y_11060240)) {
    Tmp1 = y_11060240;
    }
    else {
    Tmp1 = HEX2D_11048091(y_11060240, 399);
    }
    
    var era_11065003 = divInt(Tmp1, 400);
    var yoe_11065005 = HEX2D_11048091(y_11060240, HEX2A_11048019(era_11065003, 400));
    if ((2 < m_11060241)) {
    Tmp2 = -3;
    }
    else {
    Tmp2 = 9;
    }
    
    var doy_11070002 = HEX2D_11048091(HEX2B_11048055(divInt(HEX2B_11048055(HEX2A_11048019(153, HEX2B_11048055(m_11060241, Tmp2)), 2), 5), d_11060242), 1);
    var doe_11070005 = HEX2B_11048055(HEX2D_11048091(HEX2B_11048055(HEX2A_11048019(yoe_11065005, 365), divInt(yoe_11065005, 4)), divInt(yoe_11065005, 100)), doy_11070002);
    result_11060234 = HEX2D_11048091(HEX2B_11048055(HEX2A_11048019(era_11065003, 146097), doe_11070005), 719468);
    break BeforeRet;
  } while (false);

  return result_11060234;

}
function getDayOfWeek_11075151(monthday_11075153, month_11075154, year_11075155) {
    var Tmp1;

  var result_11075156 = 0;

    assertValidDate_11050034(monthday_11075153, month_11075154, year_11075155);
    var days_11075157 = HEX2D_11048073(toEpochDay_11060229(monthday_11075153, month_11075154, year_11075155), 3);
    var weeks_11075184 = floorDiv_11075158(days_11075157, 7);
    var wd_11075185 = HEX2D_11048073(days_11075157, HEX2A_11048001(weeks_11075184, 7));
    if ((wd_11075185 == 0)) {
    Tmp1 = 6;
    }
    else {
    Tmp1 = chckRange(HEX2D_11048073(wd_11075185, 1), 0, 6);
    }
    
    result_11075156 = Tmp1;

  return result_11075156;

}
function getDayOfYear_11075070(monthday_11075072, month_11075073, year_11075074) {
  var result_11075075 = 0;

    assertValidDate_11050034(monthday_11075072, month_11075073, year_11075074);
    if (isLeapYear_11048443(year_11075074)) {
    result_11075075 = chckRange(HEX2D_11048091(HEX2B_11048055(daysUntilMonthLeap_11075107[chckIndx(month_11075073, 1, (daysUntilMonthLeap_11075107).length+(1)-1)-(1)], monthday_11075072), 1), 0, 365);
    }
    else {
      result_11075075 = chckRange(HEX2D_11048091(HEX2B_11048055(daysUntilMonth_11075091[chckIndx(month_11075073, 1, (daysUntilMonth_11075091).length+(1)-1)-(1)], monthday_11075072), 1), 0, 365);
    }
    

  return result_11075075;

}
function initDateTime_11570220(zt_11570222, zone_11570223) {
  var result_11570224 = ({m_type: NTI11048241, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    var adjTime_11570225 = ntSubTime(zt_11570222.time, initDuration_11075431(0, 0, 0, zt_11570222.utcOffset, 0, 0, 0, 0));
    var s_11570226 = adjTime_11570225.seconds;
    var epochday_11570232 = floorDiv_11075158(s_11570226, 86400);
    var rem_11570233 = HEX2D_11048073(s_11570226, HEX2A_11048001(epochday_11570232, 86400));
    var hour_11570234 = divInt(rem_11570233, 3600);
    rem_11570233 = HEX2D_11048073(rem_11570233, HEX2A_11048001(hour_11570234, 3600));
    var minute_11570235 = divInt(rem_11570233, 60);
    rem_11570233 = HEX2D_11048073(rem_11570233, HEX2A_11048001(minute_11570235, 60));
    var second_11570236 = rem_11570233;
    var colontmp__14870598 = fromEpochDay_11070036(epochday_11570232);
    var d_11570237 = colontmp__14870598["Field0"];
    var m_11570238 = colontmp__14870598["Field1"];
    var y_11570239 = colontmp__14870598["Field2"];
    nimCopy(result_11570224, {year: y_11570239, monthZero: ((m_11570238)|0), monthdayZero: d_11570237, hour: nimCopy(null, chckRange(hour_11570234, 0, 23), NTI11048229), minute: nimCopy(null, chckRange(minute_11570235, 0, 59), NTI11048231), second: nimCopy(null, chckRange(second_11570236, 0, 60), NTI11048233), nanosecond: nimCopy(null, zt_11570222.time.nanosecond, NTI11048237), weekday: getDayOfWeek_11075151(d_11570237, m_11570238, y_11570239), yearday: getDayOfYear_11075070(d_11570237, m_11570238, y_11570239), isDst: zt_11570222.isDst, timezone: zone_11570223, utcOffset: zt_11570222.utcOffset, m_type: NTI11048241}, NTI11048241);

  return result_11570224;

}
function zonedTimeFromTime_11570341(zone_11570343, time_11570344) {
  var result_11570345 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    nimCopy(result_11570345, zone_11570343.zonedTimeFromTimeImpl(time_11570344), NTI11048253);

  return result_11570345;

}
function inZone_11575059(time_11575061, zone_11575062) {
  var result_11575063 = ({m_type: NTI11048241, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    nimCopy(result_11575063, initDateTime_11570220(zonedTimeFromTime_11570341(zone_11575062, time_11575061), zone_11575062), NTI11048241);

  return result_11575063;

}
function newTimezone_11570268(name_11570270, zonedTimeFromTimeImpl_11570274, zonedTimeFromAdjTimeImpl_11570278) {
  var result_11570280 = null;

    result_11570280 = {name: nimCopy(null, name_11570270, NTI113), zonedTimeFromTimeImpl: zonedTimeFromTimeImpl_11570274, zonedTimeFromAdjTimeImpl: zonedTimeFromAdjTimeImpl_11570278};

  return result_11570280;

}
function localZonedTimeFromTime_11595236(time_11595238) {
  var result_11595239 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var jsDate_11595245 = new Date(HEX2A_11048001(time_11595238.seconds, 1000));
    var offset_11595246 = HEX2A_11048019(jsDate_11595245.getTimezoneOffset(), 60);
    nimCopy(result_11595239.time, time_11595238, NTI11048239);
    result_11595239.utcOffset = offset_11595246;
    result_11595239.isDst = false;

  return result_11595239;

}
function contains_11600021(s_11600027, value_11600028) {
  var result_11600029 = false;

    result_11600029 = ((s_11600027.a <= value_11600028) && (value_11600028 <= s_11600027.b));

  return result_11600029;

}
function ntAddTime(a_11240022, b_11240023) {
  var result_11240024 = ({seconds: 0, nanosecond: 0});

    nimCopy(result_11240024, normalize_11245002(HEX2B_11048037(a_11240022.seconds, b_11240023.seconds), HEX2B_11048055(a_11240022.nanosecond, b_11240023.nanosecond)), NTI11048239);

  return result_11240024;

}
function localZonedTimeFromAdjTime_11595260(adjTime_11595262) {
  var result_11595263 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var utcDate_11595269 = new Date(HEX2A_11048001(adjTime_11595262.seconds, 1000));
    var localDate_11595270 = new Date(utcDate_11595269.getUTCFullYear(),utcDate_11595269.getUTCMonth(),utcDate_11595269.getUTCDate(),utcDate_11595269.getUTCHours(),utcDate_11595269.getUTCMinutes(),utcDate_11595269.getUTCSeconds(),0);
    if (contains_11600021(HEX2EHEX2E_1825220(0, 99), utcDate_11595269.getUTCFullYear())) {
    localDate_11595270.setFullYear(utcDate_11595269.getUTCFullYear());
    }
    
    result_11595263.utcOffset = HEX2A_11048019(localDate_11595270.getTimezoneOffset(), 60);
    nimCopy(result_11595263.time, ntAddTime(adjTime_11595262, initDuration_11075431(0, 0, 0, result_11595263.utcOffset, 0, 0, 0, 0)), NTI11048239);
    result_11595263.isDst = false;

  return result_11595263;

}
function local_11600282() {
  var result_11600284 = null;

    if ((localInstance_11600232[0] == null)) {
    localInstance_11600232[0] = newTimezone_11570268(makeNimstrLit("LOCAL"), localZonedTimeFromTime_11595236, localZonedTimeFromAdjTime_11595260);
    }
    
    result_11600284 = localInstance_11600232[0];

  return result_11600284;

}
function local_11600354(t_11600356) {
  var result_11600357 = ({m_type: NTI11048241, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    nimCopy(result_11600357, inZone_11575059(t_11600356, local_11600282()), NTI11048241);

  return result_11600357;

}
function initTime_11225182(unix_11225184, nanosecond_11225185) {
  var result_11225186 = ({seconds: 0, nanosecond: 0});

    result_11225186.seconds = unix_11225184;
    result_11225186.nanosecond = nanosecond_11225185;

  return result_11225186;

}
function getTime_11235291() {
  var result_11235293 = ({seconds: 0, nanosecond: 0});

    var millis_11235401 = new Date().getTime();
    var seconds_11235408 = convert_11075558(2, 3, millis_11235401);
    var nanos_11235422 = convert_11075558(2, 0, modInt(millis_11235401, convert_11075558(3, 2, 1)));
    nimCopy(result_11235293, initTime_11225182(seconds_11235408, chckRange(nanos_11235422, 0, 999999999)), NTI11048239);

  return result_11235293;

}
function now_11600371() {
  var result_11600373 = ({m_type: NTI11048241, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    nimCopy(result_11600373, local_11600354(getTime_11235291()), NTI11048241);

  return result_11600373;

}
function saveFunc_14150033(jStr_14150035, fname_14150036) {
    function innerHEX60gensym97_14155001() {
      var result_14155003 = null;

      BeforeRet: do {
        var a_14155004 = null;
        a_14155004 = {};
        a_14155004.type = makeNimstrLit("application/json");
        result_14155003 = a_14155004;
        break BeforeRet;
      } while (false);

      return result_14155003;

    }

    var blb_14160025 = function(o,opt){return new Blob([o], opt);}(jStr_14150035, innerHEX60gensym97_14155001());
    var bUrl_14160026 = function(b){return URL.createObjectURL(b);}(blb_14160025);
    var elA_14160027 = document.createElement("a");
    elA_14160027.setAttribute("href", bUrl_14160026);
    elA_14160027.setAttribute("download", toJSStr(fname_14150036));
    document.body.appendChild(elA_14160027);
    elA_14160027.click();
    document.body.removeChild(elA_14160027);
    (function(uk){return URL.revokeObjectURL(uk);})(bUrl_14160026);

  
}
function initOrderedTable_10491271(initialSize_10491275) {
  var result_10491277 = ({data: [], counter: 0, first: 0, last: 0});

    var correctSizeHEX60gensym0_10495001 = slotsNeeded_9360048(chckRange(initialSize_10491275, 0, 2147483647));
    result_10491277.counter = 0;
    result_10491277.data = new Array(chckRange(correctSizeHEX60gensym0_10495001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym0_10495001, 0, 2147483647);++i) {result_10491277.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    result_10491277.first = -1;
    result_10491277.last = -1;

  return result_10491277;

}
function newJObject_10491266() {
  var result_10491268 = null;

    result_10491268 = {kind: 5, fields: initOrderedTable_10491271(2), isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, elems: []};

  return result_10491268;

}
function rawGet_10565621(t_10565626, key_10565627, hc_10565628, hc_10565628_Idx) {
            var Tmp3;

  var result_10565629 = 0;

  BeforeRet: do {
    hc_10565628[hc_10565628_Idx] = hash_9335214(key_10565627);
    if ((hc_10565628[hc_10565628_Idx] == 0)) {
    hc_10565628[hc_10565628_Idx] = 314159265;
    }
    
    if (((t_10565626.data).length == 0)) {
    result_10565629 = -1;
    break BeforeRet;
    }
    
    var h_10575138 = (hc_10565628[hc_10565628_Idx] & ((t_10565626.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_9356218(t_10565626.data[chckIndx(h_10575138, 0, (t_10565626.data).length-1)].Field0)) break L2;
            if (!(t_10565626.data[chckIndx(h_10575138, 0, (t_10565626.data).length-1)].Field0 == hc_10565628[hc_10565628_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_10565626.data[chckIndx(h_10575138, 0, (t_10565626.data).length-1)].Field2, key_10565627);            }          if (Tmp3) {
          result_10565629 = h_10575138;
          break BeforeRet;
          }
          
          h_10575138 = nextTry_9360014(h_10575138, ((t_10565626.data).length-1));
        }
    } while(false);
    result_10565629 = subInt(-1, h_10575138);
  } while (false);

  return result_10565629;

}
function mustRehash_10590601(t_10590604) {
  var result_10590605 = false;

    if (!((t_10590604.counter < (t_10590604.data).length))) {
    failedAssertImpl_115480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_10590605 = ((mulInt((t_10590604.data).length, 2) < mulInt(t_10590604.counter, 3)) || (subInt((t_10590604.data).length, t_10590604.counter) < 4));

  return result_10590605;

}
function rawInsert_10616349(t_10616355, data_10616358, data_10616358_Idx, key_10616359, val_10616361, hc_10616362, h_10616363) {
    data_10616358[data_10616358_Idx][chckIndx(h_10616363, 0, (data_10616358[data_10616358_Idx]).length-1)].Field2 = nimCopy(null, key_10616359, NTI113);
    data_10616358[data_10616358_Idx][chckIndx(h_10616363, 0, (data_10616358[data_10616358_Idx]).length-1)].Field3 = val_10616361;
    data_10616358[data_10616358_Idx][chckIndx(h_10616363, 0, (data_10616358[data_10616358_Idx]).length-1)].Field0 = hc_10616362;
    data_10616358[data_10616358_Idx][chckIndx(h_10616363, 0, (data_10616358[data_10616358_Idx]).length-1)].Field1 = -1;
    if ((t_10616355.first < 0)) {
    t_10616355.first = h_10616363;
    }
    
    if ((0 <= t_10616355.last)) {
    data_10616358[data_10616358_Idx][chckIndx(t_10616355.last, 0, (data_10616358[data_10616358_Idx]).length-1)].Field1 = h_10616363;
    }
    
    t_10616355.last = h_10616363;

  
}
function enlarge_10615180(t_10615186) {
          var Tmp6;
          var Tmp7;

    var n_10615194 = [];
    n_10615194 = new Array(chckRange(mulInt((t_10615186.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_10615186.data).length, 2), 0, 2147483647);++i) {n_10615194[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    var h_10615333 = t_10615186.first;
    t_10615186.first = -1;
    t_10615186.last = -1;
    var Tmp1 = t_10615186.data; t_10615186.data = n_10615194; n_10615194 = Tmp1;    L2: do {
        L3: while (true) {
        if (!(0 <= h_10615333)) break L3;
          var nxt_10615489 = n_10615194[chckIndx(h_10615333, 0, (n_10615194).length-1)].Field1;
          var eh_10615638 = n_10615194[chckIndx(h_10615333, 0, (n_10615194).length-1)].Field0;
          if (isFilled_9356218(eh_10615638)) {
          var j_10615645 = (eh_10615638 & ((t_10615186.data).length-1));
          L4: do {
              L5: while (true) {
              if (!isFilled_9356218(t_10615186.data[chckIndx(j_10615645, 0, (t_10615186.data).length-1)].Field0)) break L5;
                j_10615645 = nextTry_9360014(j_10615645, ((t_10615186.data).length-1));
              }
          } while(false);
          Tmp6 = n_10615194[chckIndx(h_10615333, 0, (n_10615194).length-1)].Field2;
          n_10615194[chckIndx(h_10615333, 0, (n_10615194).length-1)].Field2 = genericReset(n_10615194[chckIndx(h_10615333, 0, (n_10615194).length-1)].Field2, NTI113);
          Tmp7 = n_10615194[chckIndx(h_10615333, 0, (n_10615194).length-1)].Field3;
          n_10615194[chckIndx(h_10615333, 0, (n_10615194).length-1)].Field3 = genericReset(n_10615194[chckIndx(h_10615333, 0, (n_10615194).length-1)].Field3, NTI10491056);
          rawInsert_10616349(t_10615186, t_10615186, "data", Tmp6, Tmp7, n_10615194[chckIndx(h_10615333, 0, (n_10615194).length-1)].Field0, j_10615645);
          }
          
          h_10615333 = nxt_10615489;
        }
    } while(false);

  
}
function rawGetKnownHC_10617150(t_10617155, key_10617156, hc_10617157) {
  var result_10617158 = 0;

  BeforeRet: do {
    if (((t_10617155.data).length == 0)) {
    result_10617158 = -1;
    break BeforeRet;
    }
    
    var h_10620138 = (hc_10617157 & ((t_10617155.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_9356218(t_10617155.data[chckIndx(h_10620138, 0, (t_10617155.data).length-1)].Field0)) break L2;
          if (((t_10617155.data[chckIndx(h_10620138, 0, (t_10617155.data).length-1)].Field0 == hc_10617157) && eqStrings(t_10617155.data[chckIndx(h_10620138, 0, (t_10617155.data).length-1)].Field2, key_10617156))) {
          result_10617158 = h_10620138;
          break BeforeRet;
          }
          
          h_10620138 = nextTry_9360014(h_10620138, ((t_10617155.data).length-1));
        }
    } while(false);
    result_10617158 = subInt(-1, h_10620138);
  } while (false);

  return result_10617158;

}
function HEX5BHEX5DHEX3D_10550311(t_10550317, key_10550318, val_10550320) {
    if (((t_10550317.data).length == 0)) {
    var correctSizeHEX60gensym13_10560001 = slotsNeeded_9360048(32);
    t_10550317.counter = 0;
    t_10550317.data = new Array(chckRange(correctSizeHEX60gensym13_10560001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym13_10560001, 0, 2147483647);++i) {t_10550317.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    t_10550317.first = -1;
    t_10550317.last = -1;
    }
    
    var hc_10565601 = [0];
    var index_10575620 = rawGet_10565621(t_10550317, key_10550318, hc_10565601, 0);
    if ((0 <= index_10575620)) {
    t_10550317.data[chckIndx(index_10575620, 0, (t_10550317.data).length-1)].Field3 = val_10550320;
    }
    else {
      if (((t_10550317.data).length == 0)) {
      var correctSizeHEX60gensym18_10585001 = slotsNeeded_9360048(32);
      t_10550317.counter = 0;
      t_10550317.data = new Array(chckRange(correctSizeHEX60gensym18_10585001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym18_10585001, 0, 2147483647);++i) {t_10550317.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}      t_10550317.first = -1;
      t_10550317.last = -1;
      }
      
      if (mustRehash_10590601(t_10550317)) {
      enlarge_10615180(t_10550317);
      index_10575620 = rawGetKnownHC_10617150(t_10550317, key_10550318, hc_10565601[0]);
      }
      
      index_10575620 = subInt(-1, index_10575620);
      rawInsert_10616349(t_10550317, t_10550317, "data", key_10550318, val_10550320, hc_10565601[0], index_10575620);
      t_10550317.counter = addInt(t_10550317.counter, 1);
    }
    

  
}
function add_10540223(obj_10540225, key_10540226, val_10540227) {
    var Tmp1;

    if (!((obj_10540225.kind == 5))) {
    failedAssertImpl_115480(makeNimstrLit("json.nim(298, 10) `obj.kind == JObject` "));
    }
    
    var Tmp1 = obj_10540225;
    if (ConstSet3[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
    HEX5BHEX5DHEX3D_10550311(Tmp1.fields, key_10540226, val_10540227);

  
}
function newJString_10491100(s_10491102) {
  var result_10491103 = null;

    result_10491103 = {kind: 4, str: nimCopy(null, s_10491102, NTI113), isUnquoted: false, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_10491103;

}
function newJArray_10500657() {
  var result_10500659 = null;

    result_10500659 = {kind: 6, elems: [], isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0})};

  return result_10500659;

}
function add_10530020(father_10530022, child_10530023) {
    var Tmp1;

    if (!((father_10530022.kind == 6))) {
    failedAssertImpl_115480(makeNimstrLit("json.nim(293, 10) `father.kind == JArray` "));
    }
    
    var Tmp1 = father_10530022;
    if (ConstSet4[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'elems\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
    Tmp1.elems.push(child_10530023);;

  
}
function len_14310548(t_14310553) {
  var result_14310554 = 0;

    result_14310554 = t_14310553.counter;

  return result_14310554;

}
function newSeq_14320256(len_14320259) {
  var result_14320261 = [];

    result_14320261 = new Array(len_14320259); for (var i=0;i<len_14320259;++i) {result_14320261[i]=null;}
  return result_14320261;

}
function newSeq_650232(len_650235) {
  var result_650237 = [];

    result_650237 = new Array(len_650235); for (var i=0;i<len_650235;++i) {result_650237[i]=[];}
  return result_650237;

}
function parseSaturatedNatural_7880017(s_7880019, b_7880021, b_7880021_Idx, start_7880022) {
      var Tmp1;
          var Tmp4;

  var result_7880024 = 0;

    var i_7880025 = start_7880022;
    if (((i_7880025 < (s_7880019).length) && (s_7880019[chckIndx(i_7880025, 0, (s_7880019).length-1)] == 43))) {
    i_7880025 = addInt(i_7880025, 1);
    }
    
      if (!(i_7880025 < (s_7880019).length)) Tmp1 = false; else {        Tmp1 = (ConstSet9[s_7880019[chckIndx(i_7880025, 0, (s_7880019).length-1)]] != undefined);      }    if (Tmp1) {
    b_7880021[b_7880021_Idx] = 0;
    L2: do {
        L3: while (true) {
          if (!(i_7880025 < (s_7880019).length)) Tmp4 = false; else {            Tmp4 = (ConstSet10[s_7880019[chckIndx(i_7880025, 0, (s_7880019).length-1)]] != undefined);          }        if (!Tmp4) break L3;
          var c_7890016 = subInt(s_7880019[chckIndx(i_7880025, 0, (s_7880019).length-1)], 48);
          if ((b_7880021[b_7880021_Idx] <= divInt(subInt(2147483647, c_7890016), 10))) {
          b_7880021[b_7880021_Idx] = addInt(mulInt(b_7880021[b_7880021_Idx], 10), c_7890016);
          }
          else {
            b_7880021[b_7880021_Idx] = 2147483647;
          }
          
          i_7880025 = addInt(i_7880025, 1);
          L5: do {
              L6: while (true) {
              if (!((i_7880025 < (s_7880019).length) && (s_7880019[chckIndx(i_7880025, 0, (s_7880019).length-1)] == 95))) break L6;
                i_7880025 = addInt(i_7880025, 1);
              }
          } while(false);
        }
    } while(false);
    result_7880024 = subInt(i_7880025, start_7880022);
    }
    

  return result_7880024;

}
function HEX5BHEX5D_4275068(s_4275072, x_4275074) {
  var result_4275075 = [];

    var a_4275201 = x_4275074.a;
    var L_4275401 = addInt(subInt(subInt((s_4275072).length, x_4275074.b), a_4275201), 1);
    result_4275075 = nimCopy(null, mnewString(chckRange(L_4275401, 0, 2147483647)), NTI113);
    L1: do {
      var i_4275409 = 0;
      var i_14870651 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_14870651 < L_4275401)) break L3;
            i_4275409 = i_14870651;
            result_4275075[chckIndx(i_4275409, 0, (result_4275075).length-1)] = s_4275072[chckIndx(addInt(i_4275409, a_4275201), 0, (s_4275072).length-1)];
            i_14870651 = addInt(i_14870651, 1);
          }
      } while(false);
    } while(false);

  return result_4275075;

}
function HEX2EHEX2E_4275001(a_4275006, b_4275008) {
  var result_4275014 = ({a: 0, b: 0});

    nimCopy(result_4275014, {a: a_4275006, b: b_4275008}, NTI4275011);

  return result_4275014;

}
function parseStandardFormatSpecifier_12180322(s_12180324, start_12180325, ignoreUnknownSuffix_12180327) {
      var Tmp1;
      var Tmp2;
      var Tmp3;

  var result_12180328 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

    result_12180328.fill = 32;
    result_12180328.align = 0;
    result_12180328.sign = 45;
    var i_12180331 = start_12180325;
    if (((addInt(i_12180331, 1) < (s_12180324).length) && (ConstSet5[s_12180324[chckIndx(addInt(i_12180331, 1), 0, (s_12180324).length-1)]] != undefined))) {
    result_12180328.fill = s_12180324[chckIndx(i_12180331, 0, (s_12180324).length-1)];
    result_12180328.align = s_12180324[chckIndx(addInt(i_12180331, 1), 0, (s_12180324).length-1)];
    i_12180331 = addInt(i_12180331, 2);
    }
    else {
    if (((i_12180331 < (s_12180324).length) && (ConstSet6[s_12180324[chckIndx(i_12180331, 0, (s_12180324).length-1)]] != undefined))) {
    result_12180328.align = s_12180324[chckIndx(i_12180331, 0, (s_12180324).length-1)];
    i_12180331 = addInt(i_12180331, 1);
    }
    }
    if (((i_12180331 < (s_12180324).length) && (ConstSet7[s_12180324[chckIndx(i_12180331, 0, (s_12180324).length-1)]] != undefined))) {
    result_12180328.sign = s_12180324[chckIndx(i_12180331, 0, (s_12180324).length-1)];
    i_12180331 = addInt(i_12180331, 1);
    }
    
    if (((i_12180331 < (s_12180324).length) && (s_12180324[chckIndx(i_12180331, 0, (s_12180324).length-1)] == 35))) {
    result_12180328.alternateForm = true;
    i_12180331 = addInt(i_12180331, 1);
    }
    
      if (!((addInt(i_12180331, 1) < (s_12180324).length) && (s_12180324[chckIndx(i_12180331, 0, (s_12180324).length-1)] == 48))) Tmp1 = false; else {        Tmp1 = (ConstSet8[s_12180324[chckIndx(addInt(i_12180331, 1), 0, (s_12180324).length-1)]] != undefined);      }    if (Tmp1) {
    result_12180328.padWithZero = true;
    i_12180331 = addInt(i_12180331, 1);
    }
    
    var parsedLength_12200015 = parseSaturatedNatural_7880017(s_12180324, result_12180328, "minimumWidth", i_12180331);
    i_12180331 = addInt(i_12180331, parsedLength_12200015);
    if (((i_12180331 < (s_12180324).length) && (s_12180324[chckIndx(i_12180331, 0, (s_12180324).length-1)] == 46))) {
    i_12180331 = addInt(i_12180331, 1);
    var parsedLengthB_12200029 = parseSaturatedNatural_7880017(s_12180324, result_12180328, "precision", i_12180331);
    i_12180331 = addInt(i_12180331, parsedLengthB_12200029);
    }
    else {
      result_12180328.precision = -1;
    }
    
      if (!(i_12180331 < (s_12180324).length)) Tmp2 = false; else {        Tmp2 = (ConstSet11[s_12180324[chckIndx(i_12180331, 0, (s_12180324).length-1)]] != undefined);      }    if (Tmp2) {
    result_12180328.typ = s_12180324[chckIndx(i_12180331, 0, (s_12180324).length-1)];
    i_12180331 = addInt(i_12180331, 1);
    }
    
    result_12180328.endPosition = i_12180331;
      if (!!((i_12180331 == (s_12180324).length))) Tmp3 = false; else {        Tmp3 = !(ignoreUnknownSuffix_12180327);      }    if (Tmp3) {
    raiseException({message: (makeNimstrLit("invalid format string, cannot parse: ") || []).concat(HEX5BHEX5D_4275068(s_12180324, HEX2EHEX2E_4275001(i_12180331, 1)) || []), parent: null, m_type: NTI6843, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_12180328;

}
function nsuformatBiggestFloat(f_9070221, format_9070222, precision_9070227, decimalSep_9070228) {
  var result_9070229 = [];

    var precision_9070401 = precision_9070227;
    if ((precision_9070401 == -1)) {
    precision_9070401 = 6;
    }
    
    var res_9070402 = null;
    switch (format_9070222) {
    case 0:
      res_9070402 = f_9070221.toString();
      break;
    case 1:
      res_9070402 = f_9070221.toFixed(precision_9070401);
      break;
    case 2:
      res_9070402 = f_9070221.toExponential(precision_9070401);
      break;
    }
    result_9070229 = nimCopy(null, cstrToNimstr(res_9070402), NTI113);
    if (((1.0000000000000000e+000 / f_9070221) == -Infinity)) {
    result_9070229 = nimCopy(null, (makeNimstrLit("-") || []).concat(cstrToNimstr(res_9070402) || []), NTI113);
    }
    
    L1: do {
      var i_9070410 = 0;
      var colontmp__14870656 = 0;
      colontmp__14870656 = (result_9070229).length;
      var i_14870657 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_14870657 < colontmp__14870656)) break L3;
            i_9070410 = i_14870657;
            if ((ConstSet12[result_9070229[chckIndx(i_9070410, 0, (result_9070229).length-1)]] != undefined)) {
            result_9070229[chckIndx(i_9070410, 0, (result_9070229).length-1)] = decimalSep_9070228;
            }
            
            i_14870657 = addInt(i_14870657, 1);
          }
      } while(false);
    } while(false);

  return result_9070229;

}
function insert_375401(x_375404, x_375404_Idx, item_375405, i_375406) {
    var xl_375407 = (x_375404[x_375404_Idx]).length;
    (x_375404[x_375404_Idx].length = chckRange(addInt(xl_375407, (item_375405).length), 0, 2147483647));
    var j_375408 = subInt(xl_375407, 1);
    L1: do {
        L2: while (true) {
        if (!(i_375406 <= j_375408)) break L2;
          x_375404[x_375404_Idx][chckIndx(addInt(j_375408, (item_375405).length), 0, (x_375404[x_375404_Idx]).length-1)] = x_375404[x_375404_Idx][chckIndx(j_375408, 0, (x_375404[x_375404_Idx]).length-1)];
          j_375408 = subInt(j_375408, 1);
        }
    } while(false);
    j_375408 = 0;
    L3: do {
        L4: while (true) {
        if (!(j_375408 < (item_375405).length)) break L4;
          x_375404[x_375404_Idx][chckIndx(addInt(j_375408, i_375406), 0, (x_375404[x_375404_Idx]).length-1)] = item_375405[chckIndx(j_375408, 0, (item_375405).length-1)];
          j_375408 = addInt(j_375408, 1);
        }
    } while(false);

  
}
function nsuRepeatChar(c_8755124, count_8755125) {
  var result_8755126 = [];

    result_8755126 = nimCopy(null, mnewString(count_8755125), NTI113);
    L1: do {
      var i_8755135 = 0;
      var colontmp__14870662 = 0;
      colontmp__14870662 = subInt(count_8755125, 1);
      var res_14870663 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_14870663 <= colontmp__14870662)) break L3;
            i_8755135 = res_14870663;
            result_8755126[chckIndx(i_8755135, 0, (result_8755126).length-1)] = c_8755124;
            res_14870663 = addInt(res_14870663, 1);
          }
      } while(false);
    } while(false);

  return result_8755126;

}
function validateUtf8_1190244(s_1190246) {
            var Tmp3;
            var Tmp4;
            var Tmp5;
            var Tmp6;
            var Tmp7;
            var Tmp8;

  var result_1190247 = 0;

  BeforeRet: do {
    var i_1190249 = 0;
    var L_1190250 = (s_1190246).length;
    L1: do {
        L2: while (true) {
        if (!(i_1190249 < L_1190250)) break L2;
          if ((s_1190246[chckIndx(i_1190249, 0, (s_1190246).length-1)] <= 127)) {
          i_1190249 = addInt(i_1190249, 1);
          }
          else {
          if ((((s_1190246[chckIndx(i_1190249, 0, (s_1190246).length-1)] >>> 0) >>> 5) == 6)) {
          if ((s_1190246[chckIndx(i_1190249, 0, (s_1190246).length-1)] < 194)) {
          result_1190247 = i_1190249;
          break BeforeRet;
          }
          
            if (!(addInt(i_1190249, 1) < L_1190250)) Tmp3 = false; else {              Tmp3 = (((s_1190246[chckIndx(addInt(i_1190249, 1), 0, (s_1190246).length-1)] >>> 0) >>> 6) == 2);            }          if (Tmp3) {
          i_1190249 = addInt(i_1190249, 2);
          }
          else {
            result_1190247 = i_1190249;
            break BeforeRet;
          }
          
          }
          else {
          if ((((s_1190246[chckIndx(i_1190249, 0, (s_1190246).length-1)] >>> 0) >>> 4) == 14)) {
            if (!(addInt(i_1190249, 2) < L_1190250)) Tmp5 = false; else {              Tmp5 = (((s_1190246[chckIndx(addInt(i_1190249, 1), 0, (s_1190246).length-1)] >>> 0) >>> 6) == 2);            }            if (!Tmp5) Tmp4 = false; else {              Tmp4 = (((s_1190246[chckIndx(addInt(i_1190249, 2), 0, (s_1190246).length-1)] >>> 0) >>> 6) == 2);            }          if (Tmp4) {
          i_1190249 = addInt(i_1190249, 3);
          }
          else {
            result_1190247 = i_1190249;
            break BeforeRet;
          }
          
          }
          else {
          if ((((s_1190246[chckIndx(i_1190249, 0, (s_1190246).length-1)] >>> 0) >>> 3) == 30)) {
            if (!(addInt(i_1190249, 3) < L_1190250)) Tmp8 = false; else {              Tmp8 = (((s_1190246[chckIndx(addInt(i_1190249, 1), 0, (s_1190246).length-1)] >>> 0) >>> 6) == 2);            }            if (!Tmp8) Tmp7 = false; else {              Tmp7 = (((s_1190246[chckIndx(addInt(i_1190249, 2), 0, (s_1190246).length-1)] >>> 0) >>> 6) == 2);            }            if (!Tmp7) Tmp6 = false; else {              Tmp6 = (((s_1190246[chckIndx(addInt(i_1190249, 3), 0, (s_1190246).length-1)] >>> 0) >>> 6) == 2);            }          if (Tmp6) {
          i_1190249 = addInt(i_1190249, 4);
          }
          else {
            result_1190247 = i_1190249;
            break BeforeRet;
          }
          
          }
          else {
            result_1190247 = i_1190249;
            break BeforeRet;
          }
          }}}
        }
    } while(false);
    result_1190247 = -1;
    break BeforeRet;
  } while (false);

  return result_1190247;

}
function nucruneLen(s_948025) {
  var result_948026 = 0;

    result_948026 = 0;
    var i_948028 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_948028 < (s_948025).length)) break L2;
          if ((s_948025[chckIndx(i_948028, 0, (s_948025).length-1)] <= 127)) {
          i_948028 = addInt(i_948028, 1);
          }
          else {
          if ((((s_948025[chckIndx(i_948028, 0, (s_948025).length-1)] >>> 0) >>> 5) == 6)) {
          i_948028 = addInt(i_948028, 2);
          }
          else {
          if ((((s_948025[chckIndx(i_948028, 0, (s_948025).length-1)] >>> 0) >>> 4) == 14)) {
          i_948028 = addInt(i_948028, 3);
          }
          else {
          if ((((s_948025[chckIndx(i_948028, 0, (s_948025).length-1)] >>> 0) >>> 3) == 30)) {
          i_948028 = addInt(i_948028, 4);
          }
          else {
          if ((((s_948025[chckIndx(i_948028, 0, (s_948025).length-1)] >>> 0) >>> 2) == 62)) {
          i_948028 = addInt(i_948028, 5);
          }
          else {
          if ((((s_948025[chckIndx(i_948028, 0, (s_948025).length-1)] >>> 0) >>> 1) == 126)) {
          i_948028 = addInt(i_948028, 6);
          }
          else {
          i_948028 = addInt(i_948028, 1);
          }
          }}}}}
          result_948026 = addInt(result_948026, 1);
        }
    } while(false);

  return result_948026;

}
function alignString_12180222(s_12180224, minimumWidth_12180225, align_12180226, fill_12180227) {
      var Tmp1;

  var result_12180228 = [];

    if ((minimumWidth_12180225 == 0)) {
    result_12180228 = nimCopy(null, s_12180224, NTI113);
    }
    else {
      if ((validateUtf8_1190244(s_12180224) == -1)) {
      Tmp1 = nucruneLen(s_12180224);
      }
      else {
      Tmp1 = (s_12180224).length;
      }
      
      var sRuneLen_12180229 = Tmp1;
      var toFill_12180230 = subInt(minimumWidth_12180225, sRuneLen_12180229);
      if ((toFill_12180230 <= 0)) {
      result_12180228 = nimCopy(null, s_12180224, NTI113);
      }
      else {
      if (((align_12180226 == 60) || (align_12180226 == 0))) {
      result_12180228 = nimCopy(null, (s_12180224 || []).concat(nsuRepeatChar(fill_12180227, chckRange(toFill_12180230, 0, 2147483647)) || []), NTI113);
      }
      else {
      if ((align_12180226 == 94)) {
      var half_12180231 = divInt(toFill_12180230, 2);
      result_12180228 = nimCopy(null, (nsuRepeatChar(fill_12180227, chckRange(half_12180231, 0, 2147483647)) || []).concat(s_12180224 || [],nsuRepeatChar(fill_12180227, chckRange(subInt(toFill_12180230, half_12180231), 0, 2147483647)) || []), NTI113);
      }
      else {
        result_12180228 = nimCopy(null, (nsuRepeatChar(fill_12180227, chckRange(toFill_12180230, 0, 2147483647)) || []).concat(s_12180224 || []), NTI113);
      }
      }}
    }
    

  return result_12180228;

}
function nsuToUpperAsciiChar(c_8245016) {
  var result_8245017 = 0;

    if ((ConstSet14[c_8245016] != undefined)) {
    result_8245017 = chckRange(subInt(c_8245016, 32), 0, 255);
    }
    else {
      result_8245017 = c_8245016;
    }
    

  return result_8245017;

}
function nsuToUpperAsciiStr(s_8250037) {
  var result_8250038 = [];

    result_8250038 = nimCopy(null, mnewString(chckRange((s_8250037).length, 0, 2147483647)), NTI113);
    L1: do {
      var iHEX60gensym11_8255009 = 0;
      var colontmp__12442686 = 0;
      colontmp__12442686 = subInt((s_8250037).length, 1);
      var res_12442687 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_12442687 <= colontmp__12442686)) break L3;
            iHEX60gensym11_8255009 = res_12442687;
            result_8250038[chckIndx(iHEX60gensym11_8255009, 0, (result_8250038).length-1)] = nsuToUpperAsciiChar(s_8250037[chckIndx(iHEX60gensym11_8255009, 0, (s_8250037).length-1)]);
            res_12442687 = addInt(res_12442687, 1);
          }
      } while(false);
    } while(false);

  return result_8250038;

}
function formatValue_14345001(result_14345004, result_14345004_Idx, value_14345005, specifier_14345006) {
    var Tmp1;

  BeforeRet: do {
    if (((specifier_14345006).length == 0)) {
    result_14345004[result_14345004_Idx].push.apply(result_14345004[result_14345004_Idx], cstrToNimstr(nimFloatToString(value_14345005)));;
    break BeforeRet;
    }
    
    var spec_14345007 = parseStandardFormatSpecifier_12180322(specifier_14345006, 0, false);
    var fmode_14345008 = 0;
    switch (spec_14345007.typ) {
    case 101:
    case 69:
      fmode_14345008 = 2;
      break;
    case 102:
    case 70:
      fmode_14345008 = 1;
      break;
    case 103:
    case 71:
      fmode_14345008 = 0;
      break;
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'e\', \'E\', \'f\', \'F\', \'g\', \'G\' but got: ") || []).concat([spec_14345007.typ]), parent: null, m_type: NTI6843, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    var f_14350002 = [nsuformatBiggestFloat(value_14345005, fmode_14345008, chckRange(spec_14345007.precision, -1, 32), 46)];
    var sign_14350003 = false;
    if ((0.0 <= value_14345005)) {
    if (!((spec_14345007.sign == 45))) {
    sign_14350003 = true;
    if ((value_14345005 == 0.0)) {
    if (((1.0000000000000000e+000 / value_14345005) == Infinity)) {
    insert_375401(f_14350002, 0, nimCharToStr(spec_14345007.sign), 0);
    }
    
    }
    else {
    insert_375401(f_14350002, 0, nimCharToStr(spec_14345007.sign), 0);
    }
    
    }
    
    }
    else {
      sign_14350003 = true;
    }
    
    if (spec_14345007.padWithZero) {
    var signStr_14350006 = [];
    if (sign_14350003) {
    signStr_14350006 = nimCopy(null, nimCharToStr(f_14350002[0][chckIndx(0, 0, (f_14350002[0]).length-1)]), NTI113);
    f_14350002[0] = nimCopy(null, HEX5BHEX5D_4275068(f_14350002[0], HEX2EHEX2E_4275001(1, 1)), NTI113);
    }
    
    var toFill_14360040 = subInt(subInt(spec_14345007.minimumWidth, (f_14350002[0]).length), (sign_14350003 ? 1:0));
    if ((0 < toFill_14360040)) {
    f_14350002[0] = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_14360040, 0, 2147483647)) || []).concat(f_14350002[0] || []), NTI113);
    }
    
    if (sign_14350003) {
    f_14350002[0] = nimCopy(null, (signStr_14350006 || []).concat(f_14350002[0] || []), NTI113);
    }
    
    }
    
    if ((spec_14345007.align == 0)) {
    Tmp1 = 62;
    }
    else {
    Tmp1 = spec_14345007.align;
    }
    
    var align_14360041 = Tmp1;
    var res_14360042 = alignString_12180222(f_14350002[0], spec_14345007.minimumWidth, align_14360041, spec_14345007.fill);
    if ((ConstSet13[spec_14345007.typ] != undefined)) {
    result_14345004[result_14345004_Idx].push.apply(result_14345004[result_14345004_Idx], nsuToUpperAsciiStr(res_14360042));;
    }
    else {
    result_14345004[result_14345004_Idx].push.apply(result_14345004[result_14345004_Idx], res_14360042);;
    }
    
  } while (false);

  
}
function nsuJoinSep(a_8920018, sep_8920019) {
  var result_8920020 = [];

    if ((0 < (a_8920018).length)) {
    var L_8925009 = mulInt((sep_8920019).length, subInt((a_8920018).length, 1));
    L1: do {
      var i_8925023 = 0;
      var colontmp__14870688 = 0;
      colontmp__14870688 = ((a_8920018).length-1);
      var res_14870689 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_14870689 <= colontmp__14870688)) break L3;
            i_8925023 = res_14870689;
            L_8925009 = addInt(L_8925009, (a_8920018[chckIndx(i_8925023, 0, (a_8920018).length-1)]).length);
            res_14870689 = addInt(res_14870689, 1);
          }
      } while(false);
    } while(false);
    result_8920020 = nimCopy(null, mnewString(0), NTI113);
    result_8920020.push.apply(result_8920020, a_8920018[chckIndx(0, 0, (a_8920018).length-1)]);;
    L4: do {
      var i_8925043 = 0;
      var colontmp__14870695 = 0;
      colontmp__14870695 = ((a_8920018).length-1);
      var res_14870696 = 1;
      L5: do {
          L6: while (true) {
          if (!(res_14870696 <= colontmp__14870695)) break L6;
            i_8925043 = res_14870696;
            result_8920020.push.apply(result_8920020, sep_8920019);;
            result_8920020.push.apply(result_8920020, a_8920018[chckIndx(i_8925043, 0, (a_8920018).length-1)]);;
            res_14870696 = addInt(res_14870696, 1);
          }
      } while(false);
    } while(false);
    }
    else {
      result_8920020 = nimCopy(null, [], NTI113);
    }
    

  return result_8920020;

}
function sectors2Json_14290614(x_14290623) {
  var result_14290624 = null;

    var cnt_14290626 = 0;
    var lenObj_14290759 = len_13985198(x_14290623);
    result_14290624 = {};
    L1: do {
      var k_14290767 = [];
      var v_14290768 = null;
      var L_14870633 = len_13985198(x_14290623);
      if ((0 < x_14290623.counter)) {
      var h_14870634 = x_14290623.first;
      L2: do {
          L3: while (true) {
          if (!(0 <= h_14870634)) break L3;
            var nxt_14870636 = x_14290623.data[chckIndx(h_14870634, 0, (x_14290623.data).length-1)].Field1;
            if (isFilled_9356218(x_14290623.data[chckIndx(h_14870634, 0, (x_14290623.data).length-1)].Field0)) {
            k_14290767 = x_14290623.data[chckIndx(h_14870634, 0, (x_14290623.data).length-1)].Field2;
            v_14290768 = x_14290623.data[chckIndx(h_14870634, 0, (x_14290623.data).length-1)].Field3;
            var oS_14290769 = {};
            oS_14290769["postalCode"] = (toJSStr(v_14290768.postalCode));
            oS_14290769["district"] = (toJSStr(v_14290768.district));
            oS_14290769["folkDistrict"] = (toJSStr(v_14290768.folkDistrict));
            oS_14290769["city"] = (toJSStr(v_14290768.city));
            oS_14290769["pFix"] = (v_14290768.pFix);
            oS_14290769["streets"] = {};
            L4: do {
              var kStr_14320244 = [];
              var vStr_14320245 = [];
              var L_14870629 = len_14310548(v_14290768.streets);
              if ((0 < v_14290768.streets.counter)) {
              var h_14870630 = v_14290768.streets.first;
              L5: do {
                  L6: while (true) {
                  if (!(0 <= h_14870630)) break L6;
                    var nxt_14870632 = v_14290768.streets.data[chckIndx(h_14870630, 0, (v_14290768.streets.data).length-1)].Field1;
                    if (isFilled_9356218(v_14290768.streets.data[chckIndx(h_14870630, 0, (v_14290768.streets.data).length-1)].Field0)) {
                    kStr_14320244 = v_14290768.streets.data[chckIndx(h_14870630, 0, (v_14290768.streets.data).length-1)].Field2;
                    vStr_14320245 = v_14290768.streets.data[chckIndx(h_14870630, 0, (v_14290768.streets.data).length-1)].Field3;
                    var seqLnk_14320298 = newSeq_14320256(0);
                    L7: do {
                      var strLnk_14330214 = null;
                      var strLnk_14330214_Idx = 0;
                      var i_14870626 = 0;
                      var L_14870627 = (vStr_14320245).length;
                      L8: do {
                          L9: while (true) {
                          if (!(i_14870626 < L_14870627)) break L9;
                            strLnk_14330214 = vStr_14320245; strLnk_14330214_Idx = chckIndx(i_14870626, 0, (vStr_14320245).length-1);
                            var lnkO_14330215 = {};
                            lnkO_14330215["linkId"] = (strLnk_14330214[strLnk_14330214_Idx].linkId);
                            lnkO_14330215["name"] = (toJSStr(strLnk_14330214[strLnk_14330214_Idx].name));
                            lnkO_14330215["cityId"] = (strLnk_14330214[strLnk_14330214_Idx].cityId);
                            lnkO_14330215["districtId"] = (strLnk_14330214[strLnk_14330214_Idx].districtId);
                            lnkO_14330215["postalCode"] = (toJSStr(strLnk_14330214[strLnk_14330214_Idx].postalCode));
                            lnkO_14330215["neighborLinks"] = (strLnk_14330214[strLnk_14330214_Idx].neighborLinks);
                            var gms_14340427 = newSeq_650232(0);
                            L10: do {
                              var g_14340435 = null;
                              var g_14340435_Idx = 0;
                              var i_14870622 = 0;
                              var L_14870623 = (strLnk_14330214[strLnk_14330214_Idx].geometry).length;
                              L11: do {
                                  L12: while (true) {
                                  if (!(i_14870622 < L_14870623)) break L12;
                                    g_14340435 = strLnk_14330214[strLnk_14330214_Idx].geometry; g_14340435_Idx = chckIndx(i_14870622, 0, (strLnk_14330214[strLnk_14330214_Idx].geometry).length-1);
                                    var lat_14340436 = g_14340435[g_14340435_Idx].lat;
                                    var lng_14340437 = g_14340435[g_14340435_Idx].lng;
                                    var fmtRes_14340441 = [mnewString(0)];
                                    formatValue_14345001(fmtRes_14340441, 0, lat_14340436, makeNimstrLit("0.5f"));
                                    var Tmp13 = nimCopy(null, fmtRes_14340441[0], NTI113);
                                    gms_14340427.push(Tmp13);;
                                    var fmtRes_14360087 = [mnewString(0)];
                                    formatValue_14345001(fmtRes_14360087, 0, lng_14340437, makeNimstrLit("0.5f"));
                                    var Tmp14 = nimCopy(null, fmtRes_14360087[0], NTI113);
                                    gms_14340427.push(Tmp14);;
                                    i_14870622 = addInt(i_14870622, 1);
                                    if (!(((strLnk_14330214[strLnk_14330214_Idx].geometry).length == L_14870623))) {
                                    failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                    }
                                    
                                  }
                              } while(false);
                            } while(false);
                            lnkO_14330215["geometry"] = (toJSStr(nsuJoinSep(gms_14340427, makeNimstrLit(","))));
                            lnkO_14330215["readOnly"] = (strLnk_14330214[strLnk_14330214_Idx].readOnly);
                            lnkO_14330215["addedToMap"] = (strLnk_14330214[strLnk_14330214_Idx].addedToMap);
                            lnkO_14330215["addedToSector"] = (strLnk_14330214[strLnk_14330214_Idx].addedToSector);
                            seqLnk_14320298.push(lnkO_14330215);;
                            i_14870626 = addInt(i_14870626, 1);
                            if (!(((vStr_14320245).length == L_14870627))) {
                            failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                            }
                            
                          }
                      } while(false);
                    } while(false);
                    oS_14290769["streets"][toJSStr(kStr_14320244)] = seqLnk_14320298;
                    if (!((len_14310548(v_14290768.streets) == L_14870629))) {
                    failedAssertImpl_115480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
                    }
                    
                    }
                    
                    h_14870630 = nxt_14870632;
                  }
              } while(false);
              }
              
            } while(false);
            oS_14290769["shownOnMap"] = (v_14290768.shownOnMap);
            oS_14290769["exclude"] = (v_14290768.exclude);
            result_14290624[toJSStr(k_14290767)] = oS_14290769;
            if (!((len_13985198(x_14290623) == L_14870633))) {
            failedAssertImpl_115480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_14870634 = nxt_14870636;
          }
      } while(false);
      }
      
    } while(false);

  return result_14290624;

}
function save_14371451() {
    if ((ministryArea_13755631[0] == null)) {
    ministryArea_13755631[0] = {name: nimCopy(null, nameArea_13755632[0], NTI113), cities: initOrderedTable_14371460(32)};
    }
    
    HEX5BHEX5DHEX3D_14380730(ministryArea_13755631[0].cities, addrCity_13765633[0], {allLinks: nimCopy(null, allLinks_13715629[0], NTI13686128), allStreets: nimCopy(null, allStreets_13725629[0], NTI13686151), cachedTiles: nimCopy(null, cachedTiles_13735629[0], NTI13686177), allSectors: nimCopy(null, allSectors_13745629[0], NTI13686200), lastPostfix: nimCopy(null, lastPostfix_13755629[0], NTI13686226)});
    var ser_14450696 = JSON.stringify(ministryArea_13755631[0]);
    var fname_14450697 = (addrCity_13765633[0] || []).concat(makeNimstrLit("_") || [],HEX24_12125125(now_11600371()) || [],makeNimstrLit(".json") || []);
    saveFunc_14150033(ser_14450696, fname_14450697);
    var citiesExp_14450698 = newJObject_10491266();
    var ministryAreaExp_14450699 = newJObject_10491266();
    add_10540223(ministryAreaExp_14450699, makeNimstrLit("name"), newJString_10491100(nameArea_13755632[0]));
    var allSectorsExp_14450701 = newJArray_10500657();
    L1: do {
      var k_14450709 = [];
      var v_14450710 = null;
      var L_14870567 = len_13985198(allSectors_13745629[0]);
      if ((0 < allSectors_13745629[0].counter)) {
      var h_14870568 = allSectors_13745629[0].first;
      L2: do {
          L3: while (true) {
          if (!(0 <= h_14870568)) break L3;
            var nxt_14870570 = allSectors_13745629[0].data[chckIndx(h_14870568, 0, (allSectors_13745629[0].data).length-1)].Field1;
            if (isFilled_9356218(allSectors_13745629[0].data[chckIndx(h_14870568, 0, (allSectors_13745629[0].data).length-1)].Field0)) {
            k_14450709 = allSectors_13745629[0].data[chckIndx(h_14870568, 0, (allSectors_13745629[0].data).length-1)].Field2;
            v_14450710 = allSectors_13745629[0].data[chckIndx(h_14870568, 0, (allSectors_13745629[0].data).length-1)].Field3;
            var s_14450711 = newJObject_10491266();
            add_10540223(s_14450711, makeNimstrLit("city"), newJString_10491100(v_14450710.city));
            add_10530020(allSectorsExp_14450701, s_14450711);
            if (!((len_13985198(allSectors_13745629[0]) == L_14870567))) {
            failedAssertImpl_115480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_14870568 = nxt_14870570;
          }
      } while(false);
      }
      
    } while(false);
    var fnameExp_14450714 = (addrCity_13765633[0] || []).concat(makeNimstrLit("_Exp_") || [],HEX24_12125125(now_11600371()) || [],makeNimstrLit(".json") || []);
    var strR_14450715 = sectors2Json_14290614(allSectors_13745629[0]);
    saveFunc_14150033(JSON.stringify(strR_14450715), fnameExp_14450714);

  
}
function setAttr_12480105(n_12480107, key_12480108, val_12480109) {
  BeforeRet: do {
    if (((n_12480107.attrs).length == 0)) {
    n_12480107.attrs = nimCopy(null, [key_12480108, val_12480109], NTI12480125);
    }
    else {
      L1: do {
        var i_12480138 = 0;
        var colontmp__14870702 = 0;
        colontmp__14870702 = subInt((n_12480107.attrs).length, 2);
        var res_14870703 = 0;
        L2: do {
            L3: while (true) {
            if (!(res_14870703 <= colontmp__14870702)) break L3;
              i_12480138 = res_14870703;
              if ((n_12480107.attrs[chckIndx(i_12480138, 0, (n_12480107.attrs).length-1)] == key_12480108)) {
              n_12480107.attrs[chckIndx(addInt(i_12480138, 1), 0, (n_12480107.attrs).length-1)] = val_12480109;
              break BeforeRet;
              }
              
              res_14870703 = addInt(res_14870703, 2);
            }
        } while(false);
      } while(false);
      n_12480107.attrs.push(key_12480108);;
      n_12480107.attrs.push(val_12480109);;
    }
    
  } while (false);

  
}
function rawGet_14010230(t_14010234, key_14010235, hc_14010236, hc_14010236_Idx) {
            var Tmp3;

  var result_14010237 = 0;

  BeforeRet: do {
    hc_14010236[hc_14010236_Idx] = hash_9335214(key_14010235);
    if ((hc_14010236[hc_14010236_Idx] == 0)) {
    hc_14010236[hc_14010236_Idx] = 314159265;
    }
    
    if (((t_14010234.data).length == 0)) {
    result_14010237 = -1;
    break BeforeRet;
    }
    
    var h_14020138 = (hc_14010236[hc_14010236_Idx] & ((t_14010234.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_9356218(t_14010234.data[chckIndx(h_14020138, 0, (t_14010234.data).length-1)].Field0)) break L2;
            if (!(t_14010234.data[chckIndx(h_14020138, 0, (t_14010234.data).length-1)].Field0 == hc_14010236[hc_14010236_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_14010234.data[chckIndx(h_14020138, 0, (t_14010234.data).length-1)].Field2, key_14010235);            }          if (Tmp3) {
          result_14010237 = h_14020138;
          break BeforeRet;
          }
          
          h_14020138 = nextTry_9360014(h_14020138, ((t_14010234.data).length-1));
        }
    } while(false);
    result_14010237 = subInt(-1, h_14020138);
  } while (false);

  return result_14010237;

}
function HEX5BHEX5D_14010219(t_14010225, key_14010226) {
  var result_14010228 = null;
  var result_14010228_Idx = 0;

    var hcHEX60gensym92_14010229 = [0];
    var indexHEX60gensym92_14020656 = rawGet_14010230(t_14010225, key_14010226, hcHEX60gensym92_14010229, 0);
    if ((0 <= indexHEX60gensym92_14020656)) {
    result_14010228 = t_14010225.data[chckIndx(indexHEX60gensym92_14020656, 0, (t_14010225.data).length-1)]; result_14010228_Idx = "Field3";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_14010226 || []), parent: null, m_type: NTI6845, name: null, trace: [], up: null}, "KeyError");
    }
    

  return [result_14010228, result_14010228_Idx];

}
function rawGet_14050621(t_14050626, key_14050627, hc_14050628, hc_14050628_Idx) {
            var Tmp3;

  var result_14050629 = 0;

  BeforeRet: do {
    hc_14050628[hc_14050628_Idx] = hash_9335214(key_14050627);
    if ((hc_14050628[hc_14050628_Idx] == 0)) {
    hc_14050628[hc_14050628_Idx] = 314159265;
    }
    
    if (((t_14050626.data).length == 0)) {
    result_14050629 = -1;
    break BeforeRet;
    }
    
    var h_14060138 = (hc_14050628[hc_14050628_Idx] & ((t_14050626.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_9356218(t_14050626.data[chckIndx(h_14060138, 0, (t_14050626.data).length-1)].Field0)) break L2;
            if (!(t_14050626.data[chckIndx(h_14060138, 0, (t_14050626.data).length-1)].Field0 == hc_14050628[hc_14050628_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_14050626.data[chckIndx(h_14060138, 0, (t_14050626.data).length-1)].Field2, key_14050627);            }          if (Tmp3) {
          result_14050629 = h_14060138;
          break BeforeRet;
          }
          
          h_14060138 = nextTry_9360014(h_14060138, ((t_14050626.data).length-1));
        }
    } while(false);
    result_14050629 = subInt(-1, h_14060138);
  } while (false);

  return result_14050629;

}
function mustRehash_14075601(t_14075604) {
  var result_14075605 = false;

    if (!((t_14075604.counter < (t_14075604.data).length))) {
    failedAssertImpl_115480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_14075605 = ((mulInt((t_14075604.data).length, 2) < mulInt(t_14075604.counter, 3)) || (subInt((t_14075604.data).length, t_14075604.counter) < 4));

  return result_14075605;

}
function rawInsert_14101359(t_14101365, data_14101368, data_14101368_Idx, key_14101369, val_14101371, hc_14101372, h_14101373) {
    data_14101368[data_14101368_Idx][chckIndx(h_14101373, 0, (data_14101368[data_14101368_Idx]).length-1)].Field2 = nimCopy(null, key_14101369, NTI113);
    data_14101368[data_14101368_Idx][chckIndx(h_14101373, 0, (data_14101368[data_14101368_Idx]).length-1)].Field3 = val_14101371;
    data_14101368[data_14101368_Idx][chckIndx(h_14101373, 0, (data_14101368[data_14101368_Idx]).length-1)].Field0 = hc_14101372;
    data_14101368[data_14101368_Idx][chckIndx(h_14101373, 0, (data_14101368[data_14101368_Idx]).length-1)].Field1 = -1;
    if ((t_14101365.first < 0)) {
    t_14101365.first = h_14101373;
    }
    
    if ((0 <= t_14101365.last)) {
    data_14101368[data_14101368_Idx][chckIndx(t_14101365.last, 0, (data_14101368[data_14101368_Idx]).length-1)].Field1 = h_14101373;
    }
    
    t_14101365.last = h_14101373;

  
}
function enlarge_14100180(t_14100186) {
          var Tmp6;
          var Tmp7;

    var n_14100194 = [];
    n_14100194 = new Array(chckRange(mulInt((t_14100186.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_14100186.data).length, 2), 0, 2147483647);++i) {n_14100194[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    var h_14100333 = t_14100186.first;
    t_14100186.first = -1;
    t_14100186.last = -1;
    var Tmp1 = t_14100186.data; t_14100186.data = n_14100194; n_14100194 = Tmp1;    L2: do {
        L3: while (true) {
        if (!(0 <= h_14100333)) break L3;
          var nxt_14100496 = n_14100194[chckIndx(h_14100333, 0, (n_14100194).length-1)].Field1;
          var eh_14100652 = n_14100194[chckIndx(h_14100333, 0, (n_14100194).length-1)].Field0;
          if (isFilled_9356218(eh_14100652)) {
          var j_14100659 = (eh_14100652 & ((t_14100186.data).length-1));
          L4: do {
              L5: while (true) {
              if (!isFilled_9356218(t_14100186.data[chckIndx(j_14100659, 0, (t_14100186.data).length-1)].Field0)) break L5;
                j_14100659 = nextTry_9360014(j_14100659, ((t_14100186.data).length-1));
              }
          } while(false);
          Tmp6 = n_14100194[chckIndx(h_14100333, 0, (n_14100194).length-1)].Field2;
          n_14100194[chckIndx(h_14100333, 0, (n_14100194).length-1)].Field2 = genericReset(n_14100194[chckIndx(h_14100333, 0, (n_14100194).length-1)].Field2, NTI113);
          Tmp7 = n_14100194[chckIndx(h_14100333, 0, (n_14100194).length-1)].Field3;
          n_14100194[chckIndx(h_14100333, 0, (n_14100194).length-1)].Field3 = genericReset(n_14100194[chckIndx(h_14100333, 0, (n_14100194).length-1)].Field3, NTI13686022);
          rawInsert_14101359(t_14100186, t_14100186, "data", Tmp6, Tmp7, n_14100194[chckIndx(h_14100333, 0, (n_14100194).length-1)].Field0, j_14100659);
          }
          
          h_14100333 = nxt_14100496;
        }
    } while(false);

  
}
function rawGetKnownHC_14102195(t_14102200, key_14102201, hc_14102202) {
  var result_14102203 = 0;

  BeforeRet: do {
    if (((t_14102200.data).length == 0)) {
    result_14102203 = -1;
    break BeforeRet;
    }
    
    var h_14105138 = (hc_14102202 & ((t_14102200.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_9356218(t_14102200.data[chckIndx(h_14105138, 0, (t_14102200.data).length-1)].Field0)) break L2;
          if (((t_14102200.data[chckIndx(h_14105138, 0, (t_14102200.data).length-1)].Field0 == hc_14102202) && eqStrings(t_14102200.data[chckIndx(h_14105138, 0, (t_14102200.data).length-1)].Field2, key_14102201))) {
          result_14102203 = h_14105138;
          break BeforeRet;
          }
          
          h_14105138 = nextTry_9360014(h_14105138, ((t_14102200.data).length-1));
        }
    } while(false);
    result_14102203 = subInt(-1, h_14105138);
  } while (false);

  return result_14102203;

}
function HEX5BHEX5DHEX3D_14035347(t_14035353, key_14035354, val_14035356) {
    if (((t_14035353.data).length == 0)) {
    var correctSizeHEX60gensym71_14045001 = slotsNeeded_9360048(32);
    t_14035353.counter = 0;
    t_14035353.data = new Array(chckRange(correctSizeHEX60gensym71_14045001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym71_14045001, 0, 2147483647);++i) {t_14035353.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    t_14035353.first = -1;
    t_14035353.last = -1;
    }
    
    var hc_14050601 = [0];
    var index_14060641 = rawGet_14050621(t_14035353, key_14035354, hc_14050601, 0);
    if ((0 <= index_14060641)) {
    t_14035353.data[chckIndx(index_14060641, 0, (t_14035353.data).length-1)].Field3 = val_14035356;
    }
    else {
      if (((t_14035353.data).length == 0)) {
      var correctSizeHEX60gensym76_14070001 = slotsNeeded_9360048(32);
      t_14035353.counter = 0;
      t_14035353.data = new Array(chckRange(correctSizeHEX60gensym76_14070001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym76_14070001, 0, 2147483647);++i) {t_14035353.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}      t_14035353.first = -1;
      t_14035353.last = -1;
      }
      
      if (mustRehash_14075601(t_14035353)) {
      enlarge_14100180(t_14035353);
      index_14060641 = rawGetKnownHC_14102195(t_14035353, key_14035354, hc_14050601[0]);
      }
      
      index_14060641 = subInt(-1, index_14060641);
      rawInsert_14101359(t_14035353, t_14035353, "data", key_14035354, val_14035356, hc_14050601[0], index_14060641);
      t_14035353.counter = addInt(t_14035353.counter, 1);
    }
    

  
}
function rawGet_14105854(t_14105858, key_14105859, hc_14105860, hc_14105860_Idx) {
            var Tmp3;

  var result_14105861 = 0;

  BeforeRet: do {
    hc_14105860[hc_14105860_Idx] = hash_9335214(key_14105859);
    if ((hc_14105860[hc_14105860_Idx] == 0)) {
    hc_14105860[hc_14105860_Idx] = 314159265;
    }
    
    if (((t_14105858.data).length == 0)) {
    result_14105861 = -1;
    break BeforeRet;
    }
    
    var h_14115138 = (hc_14105860[hc_14105860_Idx] & ((t_14105858.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_9356218(t_14105858.data[chckIndx(h_14115138, 0, (t_14105858.data).length-1)].Field0)) break L2;
            if (!(t_14105858.data[chckIndx(h_14115138, 0, (t_14105858.data).length-1)].Field0 == hc_14105860[hc_14105860_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_14105858.data[chckIndx(h_14115138, 0, (t_14105858.data).length-1)].Field2, key_14105859);            }          if (Tmp3) {
          result_14105861 = h_14115138;
          break BeforeRet;
          }
          
          h_14115138 = nextTry_9360014(h_14115138, ((t_14105858.data).length-1));
        }
    } while(false);
    result_14105861 = subInt(-1, h_14115138);
  } while (false);

  return result_14105861;

}
function HEX5BHEX5D_14105843(t_14105849, key_14105850) {
  var result_14105852 = null;
  var result_14105852_Idx = 0;

    var hcHEX60gensym92_14105853 = [0];
    var indexHEX60gensym92_14115626 = rawGet_14105854(t_14105849, key_14105850, hcHEX60gensym92_14105853, 0);
    if ((0 <= indexHEX60gensym92_14115626)) {
    result_14105852 = t_14105849.data[chckIndx(indexHEX60gensym92_14115626, 0, (t_14105849.data).length-1)]; result_14105852_Idx = "Field3";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_14105850 || []), parent: null, m_type: NTI6845, name: null, trace: [], up: null}, "KeyError");
    }
    

  return [result_14105852, result_14105852_Idx];

}
function id_13970026(s_13970028) {
  var result_13970029 = [];

    result_13970029 = nimCopy(null, (s_13970028.postalCode || []).concat(makeNimstrLit("-") || [],cstrToNimstr((s_13970028.pFix)+"") || []), NTI113);

  return result_13970029;

}
function name_13966057(s_13966059) {
    var Tmp1;

  var result_13966060 = [];

    if (!(eqStrings(s_13966059.folkDistrict, []))) {
    Tmp1 = s_13966059.folkDistrict;
    }
    else {
    Tmp1 = s_13966059.district;
    }
    
    result_13966060 = nimCopy(null, nucStrip(nsuJoinSep([(s_13966059.postalCode || []).concat(makeNimstrLit("-") || [],cstrToNimstr((s_13966059.pFix)+"") || []), nimCopy(null, s_13966059.city, NTI113), nimCopy(null, Tmp1, NTI113)], makeNimstrLit(" ")), true, true, unicodeSpaces_1844041), NTI113);

  return result_13966060;

}
function hash_13985041(x_13985043) {
  var result_13985044 = 0;

    result_13985044 = HEX21HEX26_9282270(hash_9335214(id_13970026(x_13985043)), hash_9335214(name_13966057(x_13985043)));
    result_13985044 = HEX21HEX24_9282305(result_13985044);

  return result_13985044;

}
function rawGet_13995378(t_13995382, key_13995383, hc_13995384, hc_13995384_Idx) {
            var Tmp3;

  var result_13995385 = 0;

  BeforeRet: do {
    hc_13995384[hc_13995384_Idx] = hash_13985041(key_13995383);
    if ((hc_13995384[hc_13995384_Idx] == 0)) {
    hc_13995384[hc_13995384_Idx] = 314159265;
    }
    
    if (((t_13995382.data).length == 0)) {
    result_13995385 = -1;
    break BeforeRet;
    }
    
    var h_14005138 = (hc_13995384[hc_13995384_Idx] & ((t_13995382.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_9356218(t_13995382.data[chckIndx(h_14005138, 0, (t_13995382.data).length-1)].Field0)) break L2;
            if (!(t_13995382.data[chckIndx(h_14005138, 0, (t_13995382.data).length-1)].Field0 == hc_13995384[hc_13995384_Idx])) Tmp3 = false; else {              Tmp3 = (t_13995382.data[chckIndx(h_14005138, 0, (t_13995382.data).length-1)].Field1 == key_13995383);            }          if (Tmp3) {
          result_13995385 = h_14005138;
          break BeforeRet;
          }
          
          h_14005138 = nextTry_9360014(h_14005138, ((t_13995382.data).length-1));
        }
    } while(false);
    result_13995385 = subInt(-1, h_14005138);
  } while (false);

  return result_13995385;

}
function HEX5BHEX5D_13995367(t_13995373, key_13995374) {
  var result_13995376 = null;
  var result_13995376_Idx = 0;

    var hcHEX60gensym22_13995377 = [0];
    var indexHEX60gensym22_14005646 = rawGet_13995378(t_13995373, key_13995374, hcHEX60gensym22_13995377, 0);
    if ((0 <= indexHEX60gensym22_14005646)) {
    result_13995376 = t_13995373.data[chckIndx(indexHEX60gensym22_14005646, 0, (t_13995373.data).length-1)]; result_13995376_Idx = "Field2";
    }
    else {
      raiseException({message: makeNimstrLit("key not found"), parent: null, m_type: NTI6845, name: null, trace: [], up: null}, "KeyError");
    }
    

  return [result_13995376, result_13995376_Idx];

}
function removeAllSectorFromMap_13985062() {
            var Tmp5;
            var Tmp6;

    L1: do {
      var s_13995215 = null;
      var s_13995215_Idx = 0;
      var L_14870727 = len_13985198(allSectors_13745629[0]);
      if ((0 < allSectors_13745629[0].counter)) {
      var h_14870728 = allSectors_13745629[0].first;
      L2: do {
          L3: while (true) {
          if (!(0 <= h_14870728)) break L3;
            var nxt_14870730 = allSectors_13745629[0].data[chckIndx(h_14870728, 0, (allSectors_13745629[0].data).length-1)].Field1;
            if (isFilled_9356218(allSectors_13745629[0].data[chckIndx(h_14870728, 0, (allSectors_13745629[0].data).length-1)].Field0)) {
            s_13995215 = allSectors_13745629[0].data[chckIndx(h_14870728, 0, (allSectors_13745629[0].data).length-1)]; s_13995215_Idx = "Field3";
            s_13995215[s_13995215_Idx].shownOnMap = false;
++excHandler;
            Tmp5 = framePtr;
            try {
            (Tmp6 = HEX5BHEX5D_13995367(sectorGrp_13765629[0], s_13995215[s_13995215_Idx]), Tmp6)[0][Tmp6[1]].removeAll();
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp5;
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp5;
            }
            if (!((len_13985198(allSectors_13745629[0]) == L_14870727))) {
            failedAssertImpl_115480(makeNimstrLit("tables.nim(1787, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_14870728 = nxt_14870730;
          }
      } while(false);
      }
      
    } while(false);
    redraw_13255414(kxi_12702284[0]);

  
}
function load_14010065(d_14010067) {
    var Tmp2;
    var Tmp3;
            var Tmp8;
            var Tmp9;
            var Tmp10;

++excHandler;
    Tmp2 = framePtr;
    try {
    var city_14025028 = (Tmp3 = HEX5BHEX5D_14010219(d_14010067.cities, addrCity_13765633[0]), Tmp3)[0][Tmp3[1]];
    nimCopy(allLinks_13715629[0], city_14025028.allLinks, NTI13686128);
    nimCopy(allStreets_13725629[0], city_14025028.allStreets, NTI13686151);
    nimCopy(cachedTiles_13735629[0], city_14025028.cachedTiles, NTI13686177);
    L4: do {
      var k_14035229 = [];
      var v_14035230 = null;
      var L_14870713 = len_13985198(city_14025028.allSectors);
      if ((0 < city_14025028.allSectors.counter)) {
      var h_14870714 = city_14025028.allSectors.first;
      L5: do {
          L6: while (true) {
          if (!(0 <= h_14870714)) break L6;
            var nxt_14870716 = city_14025028.allSectors.data[chckIndx(h_14870714, 0, (city_14025028.allSectors.data).length-1)].Field1;
            if (isFilled_9356218(city_14025028.allSectors.data[chckIndx(h_14870714, 0, (city_14025028.allSectors.data).length-1)].Field0)) {
            k_14035229 = city_14025028.allSectors.data[chckIndx(h_14870714, 0, (city_14025028.allSectors.data).length-1)].Field2;
            v_14035230 = city_14025028.allSectors.data[chckIndx(h_14870714, 0, (city_14025028.allSectors.data).length-1)].Field3;
            HEX5BHEX5DHEX3D_14035347(allSectors_13745629[0], k_14035229, v_14035230);
++excHandler;
            Tmp8 = framePtr;
            try {
            (Tmp9 = HEX5BHEX5D_14105843(allSectors_13745629[0], k_14035229), Tmp9)[0][Tmp9[1]].folkDistrict = nimCopy(null, v_14035230.folkDistrict, NTI113);
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp8;
            (Tmp10 = HEX5BHEX5D_14105843(allSectors_13745629[0], k_14035229), Tmp10)[0][Tmp10[1]].folkDistrict = nimCopy(null, [], NTI113);
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp8;
            }
            if (!((len_13985198(city_14025028.allSectors) == L_14870713))) {
            failedAssertImpl_115480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_14870714 = nxt_14870716;
          }
      } while(false);
      }
      
    } while(false);
    nimCopy(lastPostfix_13755629[0], city_14025028.lastPostfix, NTI13686226);
    redraw_13255414(kxi_12702284[0]);
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
    framePtr = Tmp2;
    window.alert(("Сначала кликнуть по городу на карте\n с каким надо работать."));
    lastJSError = prevJSError;
    } finally {
    framePtr = Tmp2;
    }
    removeAllSectorFromMap_13985062();

  
}
function hasKey_14670239(t_14670244, key_14670245) {
  var result_14670246 = false;

    var hc_14670247 = [0];
    result_14670246 = (0 <= rawGet_13910602(t_14670244, key_14670245, hc_14670247, 0));

  return result_14670246;

}
function HEX5BHEX5D_14670420(t_14670426, key_14670427) {
  var result_14670429 = null;
  var result_14670429_Idx = 0;

    var hcHEX60gensym22_14670430 = [0];
    var indexHEX60gensym22_14670439 = rawGet_13910602(t_14670426, key_14670427, hcHEX60gensym22_14670430, 0);
    if ((0 <= indexHEX60gensym22_14670439)) {
    result_14670429 = t_14670426.data[chckIndx(indexHEX60gensym22_14670439, 0, (t_14670426.data).length-1)]; result_14670429_Idx = "Field2";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(cstrToNimstr((key_14670427)+"") || []), parent: null, m_type: NTI6845, name: null, trace: [], up: null}, "KeyError");
    }
    

  return [result_14670429, result_14670429_Idx];

}
function rawGet_14520621(t_14520626, key_14520627, hc_14520628, hc_14520628_Idx) {
            var Tmp3;

  var result_14520629 = 0;

  BeforeRet: do {
    hc_14520628[hc_14520628_Idx] = hash_9335214(key_14520627);
    if ((hc_14520628[hc_14520628_Idx] == 0)) {
    hc_14520628[hc_14520628_Idx] = 314159265;
    }
    
    if (((t_14520626.data).length == 0)) {
    result_14520629 = -1;
    break BeforeRet;
    }
    
    var h_14530138 = (hc_14520628[hc_14520628_Idx] & ((t_14520626.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_9356218(t_14520626.data[chckIndx(h_14530138, 0, (t_14520626.data).length-1)].Field0)) break L2;
            if (!(t_14520626.data[chckIndx(h_14530138, 0, (t_14520626.data).length-1)].Field0 == hc_14520628[hc_14520628_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_14520626.data[chckIndx(h_14530138, 0, (t_14520626.data).length-1)].Field2, key_14520627);            }          if (Tmp3) {
          result_14520629 = h_14530138;
          break BeforeRet;
          }
          
          h_14530138 = nextTry_9360014(h_14530138, ((t_14520626.data).length-1));
        }
    } while(false);
    result_14520629 = subInt(-1, h_14530138);
  } while (false);

  return result_14520629;

}
function mustRehash_14545601(t_14545604) {
  var result_14545605 = false;

    if (!((t_14545604.counter < (t_14545604.data).length))) {
    failedAssertImpl_115480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_14545605 = ((mulInt((t_14545604.data).length, 2) < mulInt(t_14545604.counter, 3)) || (subInt((t_14545604.data).length, t_14545604.counter) < 4));

  return result_14545605;

}
function rawInsert_14571359(t_14571365, data_14571368, data_14571368_Idx, key_14571369, val_14571371, hc_14571372, h_14571373) {
    data_14571368[data_14571368_Idx][chckIndx(h_14571373, 0, (data_14571368[data_14571368_Idx]).length-1)].Field2 = nimCopy(null, key_14571369, NTI113);
    data_14571368[data_14571368_Idx][chckIndx(h_14571373, 0, (data_14571368[data_14571368_Idx]).length-1)].Field3 = nimCopy(null, val_14571371, NTI13686061);
    data_14571368[data_14571368_Idx][chckIndx(h_14571373, 0, (data_14571368[data_14571368_Idx]).length-1)].Field0 = hc_14571372;
    data_14571368[data_14571368_Idx][chckIndx(h_14571373, 0, (data_14571368[data_14571368_Idx]).length-1)].Field1 = -1;
    if ((t_14571365.first < 0)) {
    t_14571365.first = h_14571373;
    }
    
    if ((0 <= t_14571365.last)) {
    data_14571368[data_14571368_Idx][chckIndx(t_14571365.last, 0, (data_14571368[data_14571368_Idx]).length-1)].Field1 = h_14571373;
    }
    
    t_14571365.last = h_14571373;

  
}
function enlarge_14570180(t_14570186) {
          var Tmp6;
          var Tmp7;

    var n_14570194 = [];
    n_14570194 = new Array(chckRange(mulInt((t_14570186.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_14570186.data).length, 2), 0, 2147483647);++i) {n_14570194[i]={Field0: 0, Field1: 0, Field2: [], Field3: []};}    var h_14570333 = t_14570186.first;
    t_14570186.first = -1;
    t_14570186.last = -1;
    var Tmp1 = t_14570186.data; t_14570186.data = n_14570194; n_14570194 = Tmp1;    L2: do {
        L3: while (true) {
        if (!(0 <= h_14570333)) break L3;
          var nxt_14570496 = n_14570194[chckIndx(h_14570333, 0, (n_14570194).length-1)].Field1;
          var eh_14570652 = n_14570194[chckIndx(h_14570333, 0, (n_14570194).length-1)].Field0;
          if (isFilled_9356218(eh_14570652)) {
          var j_14570659 = (eh_14570652 & ((t_14570186.data).length-1));
          L4: do {
              L5: while (true) {
              if (!isFilled_9356218(t_14570186.data[chckIndx(j_14570659, 0, (t_14570186.data).length-1)].Field0)) break L5;
                j_14570659 = nextTry_9360014(j_14570659, ((t_14570186.data).length-1));
              }
          } while(false);
          Tmp6 = n_14570194[chckIndx(h_14570333, 0, (n_14570194).length-1)].Field2;
          n_14570194[chckIndx(h_14570333, 0, (n_14570194).length-1)].Field2 = genericReset(n_14570194[chckIndx(h_14570333, 0, (n_14570194).length-1)].Field2, NTI113);
          Tmp7 = n_14570194[chckIndx(h_14570333, 0, (n_14570194).length-1)].Field3;
          n_14570194[chckIndx(h_14570333, 0, (n_14570194).length-1)].Field3 = genericReset(n_14570194[chckIndx(h_14570333, 0, (n_14570194).length-1)].Field3, NTI13686061);
          rawInsert_14571359(t_14570186, t_14570186, "data", Tmp6, Tmp7, n_14570194[chckIndx(h_14570333, 0, (n_14570194).length-1)].Field0, j_14570659);
          }
          
          h_14570333 = nxt_14570496;
        }
    } while(false);

  
}
function rawGetKnownHC_14572195(t_14572200, key_14572201, hc_14572202) {
  var result_14572203 = 0;

  BeforeRet: do {
    if (((t_14572200.data).length == 0)) {
    result_14572203 = -1;
    break BeforeRet;
    }
    
    var h_14575138 = (hc_14572202 & ((t_14572200.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_9356218(t_14572200.data[chckIndx(h_14575138, 0, (t_14572200.data).length-1)].Field0)) break L2;
          if (((t_14572200.data[chckIndx(h_14575138, 0, (t_14572200.data).length-1)].Field0 == hc_14572202) && eqStrings(t_14572200.data[chckIndx(h_14575138, 0, (t_14572200.data).length-1)].Field2, key_14572201))) {
          result_14572203 = h_14575138;
          break BeforeRet;
          }
          
          h_14575138 = nextTry_9360014(h_14575138, ((t_14572200.data).length-1));
        }
    } while(false);
    result_14572203 = subInt(-1, h_14575138);
  } while (false);

  return result_14572203;

}
function hasKeyOrPut_14505085(t_14505091, key_14505092, val_14505093) {
  var result_14505094 = false;

    if (((t_14505091.data).length == 0)) {
    var correctSizeHEX60gensym156_14515001 = slotsNeeded_9360048(32);
    t_14505091.counter = 0;
    t_14505091.data = new Array(chckRange(correctSizeHEX60gensym156_14515001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym156_14515001, 0, 2147483647);++i) {t_14505091.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: []};}    t_14505091.first = -1;
    t_14505091.last = -1;
    }
    
    var hc_14520601 = [0];
    var index_14530656 = rawGet_14520621(t_14505091, key_14505092, hc_14520601, 0);
    if ((index_14530656 < 0)) {
    result_14505094 = false;
    if (((t_14505091.data).length == 0)) {
    var correctSizeHEX60gensym161_14540001 = slotsNeeded_9360048(32);
    t_14505091.counter = 0;
    t_14505091.data = new Array(chckRange(correctSizeHEX60gensym161_14540001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym161_14540001, 0, 2147483647);++i) {t_14505091.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: []};}    t_14505091.first = -1;
    t_14505091.last = -1;
    }
    
    if (mustRehash_14545601(t_14505091)) {
    enlarge_14570180(t_14505091);
    index_14530656 = rawGetKnownHC_14572195(t_14505091, key_14505092, hc_14520601[0]);
    }
    
    index_14530656 = subInt(-1, index_14530656);
    rawInsert_14571359(t_14505091, t_14505091, "data", key_14505092, val_14505093, hc_14520601[0], index_14530656);
    t_14505091.counter = addInt(t_14505091.counter, 1);
    }
    else {
      result_14505094 = true;
    }
    

  return result_14505094;

}
function rawGet_14491323(t_14491327, key_14491328, hc_14491329, hc_14491329_Idx) {
            var Tmp3;

  var result_14491330 = 0;

  BeforeRet: do {
    hc_14491329[hc_14491329_Idx] = hash_9335214(key_14491328);
    if ((hc_14491329[hc_14491329_Idx] == 0)) {
    hc_14491329[hc_14491329_Idx] = 314159265;
    }
    
    if (((t_14491327.data).length == 0)) {
    result_14491330 = -1;
    break BeforeRet;
    }
    
    var h_14500138 = (hc_14491329[hc_14491329_Idx] & ((t_14491327.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_9356218(t_14491327.data[chckIndx(h_14500138, 0, (t_14491327.data).length-1)].Field0)) break L2;
            if (!(t_14491327.data[chckIndx(h_14500138, 0, (t_14491327.data).length-1)].Field0 == hc_14491329[hc_14491329_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_14491327.data[chckIndx(h_14500138, 0, (t_14491327.data).length-1)].Field2, key_14491328);            }          if (Tmp3) {
          result_14491330 = h_14500138;
          break BeforeRet;
          }
          
          h_14500138 = nextTry_9360014(h_14500138, ((t_14491327.data).length-1));
        }
    } while(false);
    result_14491330 = subInt(-1, h_14500138);
  } while (false);

  return result_14491330;

}
function HEX5BHEX5D_14491312(t_14491318, key_14491319) {
  var result_14491321 = null;
  var result_14491321_Idx = 0;

    var hcHEX60gensym92_14491322 = [0];
    var indexHEX60gensym92_14500641 = rawGet_14491323(t_14491318, key_14491319, hcHEX60gensym92_14491322, 0);
    if ((0 <= indexHEX60gensym92_14500641)) {
    result_14491321 = t_14491318.data[chckIndx(indexHEX60gensym92_14500641, 0, (t_14491318.data).length-1)]; result_14491321_Idx = "Field3";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_14491319 || []), parent: null, m_type: NTI6845, name: null, trace: [], up: null}, "KeyError");
    }
    

  return [result_14491321, result_14491321_Idx];

}
function del_14720324(t_14720330, key_14720331) {
            var Tmp4;
            var Tmp5;

  BeforeRet: do {
    if ((t_14720330.counter == 0)) {
    break BeforeRet;
    }
    
    var n_14720339 = [];
    n_14720339 = new Array(chckRange((t_14720330.data).length, 0, 2147483647)); for (var i=0;i<chckRange((t_14720330.data).length, 0, 2147483647);++i) {n_14720339[i]={Field0: 0, Field1: 0, Field2: [], Field3: []};}    var h_14720478 = t_14720330.first;
    t_14720330.first = -1;
    t_14720330.last = -1;
    var Tmp1 = t_14720330.data; t_14720330.data = n_14720339; n_14720339 = Tmp1;    var resHEX60gensym197_14725001 = 0;
    resHEX60gensym197_14725001 = hash_9335214(key_14720331);
    if ((resHEX60gensym197_14725001 == 0)) {
    resHEX60gensym197_14725001 = 314159265;
    }
    
    var hc_14730004 = resHEX60gensym197_14725001;
    L2: do {
        L3: while (true) {
        if (!(0 <= h_14720478)) break L3;
          var nxt_14730160 = n_14720339[chckIndx(h_14720478, 0, (n_14720339).length-1)].Field1;
          if (isFilled_9356218(n_14720339[chckIndx(h_14720478, 0, (n_14720339).length-1)].Field0)) {
          if (((n_14720339[chckIndx(h_14720478, 0, (n_14720339).length-1)].Field0 == hc_14730004) && eqStrings(n_14720339[chckIndx(h_14720478, 0, (n_14720339).length-1)].Field2, key_14720331))) {
          t_14720330.counter = subInt(t_14720330.counter, 1);
          }
          else {
            var j_14730971 = subInt(-1, rawGetKnownHC_14572195(t_14720330, n_14720339[chckIndx(h_14720478, 0, (n_14720339).length-1)].Field2, n_14720339[chckIndx(h_14720478, 0, (n_14720339).length-1)].Field0));
            Tmp4 = n_14720339[chckIndx(h_14720478, 0, (n_14720339).length-1)].Field2;
            n_14720339[chckIndx(h_14720478, 0, (n_14720339).length-1)].Field2 = genericReset(n_14720339[chckIndx(h_14720478, 0, (n_14720339).length-1)].Field2, NTI113);
            Tmp5 = n_14720339[chckIndx(h_14720478, 0, (n_14720339).length-1)].Field3;
            n_14720339[chckIndx(h_14720478, 0, (n_14720339).length-1)].Field3 = genericReset(n_14720339[chckIndx(h_14720478, 0, (n_14720339).length-1)].Field3, NTI13686061);
            rawInsert_14571359(t_14720330, t_14720330, "data", Tmp4, Tmp5, n_14720339[chckIndx(h_14720478, 0, (n_14720339).length-1)].Field0, j_14730971);
          }
          
          }
          
          h_14720478 = nxt_14730160;
        }
    } while(false);
  } while (false);

  
}
function rawGet_13970209(t_13970213, key_13970214, hc_13970215, hc_13970215_Idx) {
            var Tmp3;

  var result_13970216 = 0;

  BeforeRet: do {
    hc_13970215[hc_13970215_Idx] = hash_9335214(key_13970214);
    if ((hc_13970215[hc_13970215_Idx] == 0)) {
    hc_13970215[hc_13970215_Idx] = 314159265;
    }
    
    if (((t_13970213.data).length == 0)) {
    result_13970216 = -1;
    break BeforeRet;
    }
    
    var h_13980138 = (hc_13970215[hc_13970215_Idx] & ((t_13970213.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_9356218(t_13970213.data[chckIndx(h_13980138, 0, (t_13970213.data).length-1)].Field0)) break L2;
            if (!(t_13970213.data[chckIndx(h_13980138, 0, (t_13970213.data).length-1)].Field0 == hc_13970215[hc_13970215_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_13970213.data[chckIndx(h_13980138, 0, (t_13970213.data).length-1)].Field1, key_13970214);            }          if (Tmp3) {
          result_13970216 = h_13980138;
          break BeforeRet;
          }
          
          h_13980138 = nextTry_9360014(h_13980138, ((t_13970213.data).length-1));
        }
    } while(false);
    result_13970216 = subInt(-1, h_13980138);
  } while (false);

  return result_13970216;

}
function HEX5BHEX5D_13970198(t_13970204, key_13970205) {
  var result_13970207 = null;
  var result_13970207_Idx = 0;

    var hcHEX60gensym22_13970208 = [0];
    var indexHEX60gensym22_13980626 = rawGet_13970209(t_13970204, key_13970205, hcHEX60gensym22_13970208, 0);
    if ((0 <= indexHEX60gensym22_13980626)) {
    result_13970207 = t_13970204.data[chckIndx(indexHEX60gensym22_13980626, 0, (t_13970204.data).length-1)]; result_13970207_Idx = "Field2";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_13970205 || []), parent: null, m_type: NTI6845, name: null, trace: [], up: null}, "KeyError");
    }
    

  return [result_13970207, result_13970207_Idx];

}
function del_14576123(t_14576129, key_14576130) {
            var Tmp4;
            var Tmp5;

  BeforeRet: do {
    if ((t_14576129.counter == 0)) {
    break BeforeRet;
    }
    
    var n_14576138 = [];
    n_14576138 = new Array(chckRange((t_14576129.data).length, 0, 2147483647)); for (var i=0;i<chckRange((t_14576129.data).length, 0, 2147483647);++i) {n_14576138[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    var h_14576277 = t_14576129.first;
    t_14576129.first = -1;
    t_14576129.last = -1;
    var Tmp1 = t_14576129.data; t_14576129.data = n_14576138; n_14576138 = Tmp1;    var resHEX60gensym169_14580001 = 0;
    resHEX60gensym169_14580001 = hash_9335214(key_14576130);
    if ((resHEX60gensym169_14580001 == 0)) {
    resHEX60gensym169_14580001 = 314159265;
    }
    
    var hc_14585004 = resHEX60gensym169_14580001;
    L2: do {
        L3: while (true) {
        if (!(0 <= h_14576277)) break L3;
          var nxt_14585160 = n_14576138[chckIndx(h_14576277, 0, (n_14576138).length-1)].Field1;
          if (isFilled_9356218(n_14576138[chckIndx(h_14576277, 0, (n_14576138).length-1)].Field0)) {
          if (((n_14576138[chckIndx(h_14576277, 0, (n_14576138).length-1)].Field0 == hc_14585004) && eqStrings(n_14576138[chckIndx(h_14576277, 0, (n_14576138).length-1)].Field2, key_14576130))) {
          t_14576129.counter = subInt(t_14576129.counter, 1);
          }
          else {
            var j_14585971 = subInt(-1, rawGetKnownHC_14102195(t_14576129, n_14576138[chckIndx(h_14576277, 0, (n_14576138).length-1)].Field2, n_14576138[chckIndx(h_14576277, 0, (n_14576138).length-1)].Field0));
            Tmp4 = n_14576138[chckIndx(h_14576277, 0, (n_14576138).length-1)].Field2;
            n_14576138[chckIndx(h_14576277, 0, (n_14576138).length-1)].Field2 = genericReset(n_14576138[chckIndx(h_14576277, 0, (n_14576138).length-1)].Field2, NTI113);
            Tmp5 = n_14576138[chckIndx(h_14576277, 0, (n_14576138).length-1)].Field3;
            n_14576138[chckIndx(h_14576277, 0, (n_14576138).length-1)].Field3 = genericReset(n_14576138[chckIndx(h_14576277, 0, (n_14576138).length-1)].Field3, NTI13686022);
            rawInsert_14101359(t_14576129, t_14576129, "data", Tmp4, Tmp5, n_14576138[chckIndx(h_14576277, 0, (n_14576138).length-1)].Field0, j_14585971);
          }
          
          }
          
          h_14576277 = nxt_14585160;
        }
    } while(false);
  } while (false);

  
}
function len_14470152(t_14470157) {
  var result_14470158 = 0;

    result_14470158 = t_14470157.counter;

  return result_14470158;

}
function hasKey_14485110(t_14485115, key_14485116) {
  var result_14485117 = false;

    var hc_14485118 = [0];
    result_14485117 = (0 <= rawGet_14050621(t_14485115, key_14485116, hc_14485118, 0));

  return result_14485117;

}
function reindexSect_14470014() {
                              var Tmp10;
                            var Tmp11;
                            var Tmp12;
                            var Tmp13;
                              var Tmp15;
                                    var Tmp18;
                                    var Tmp19;
                                    var Tmp20;
                                    var Tmp21;

    var moved_14470016 = true;
    L1: do {
        L2: while (true) {
        if (!moved_14470016) break L2;
          moved_14470016 = false;
          L3: do {
            var k_14480245 = [];
            var val_14480246 = null;
            var val_14480246_Idx = 0;
            var L_14870786 = len_14470152(lastPostfix_13755629[0]);
            L4: do {
              var h_14870788 = 0;
              var colontmp__14870789 = 0;
              colontmp__14870789 = ((lastPostfix_13755629[0].data).length-1);
              var res_14870790 = 0;
              L5: do {
                  L6: while (true) {
                  if (!(res_14870790 <= colontmp__14870789)) break L6;
                    h_14870788 = res_14870790;
                    if (isFilled_9356218(lastPostfix_13755629[0].data[chckIndx(h_14870788, 0, (lastPostfix_13755629[0].data).length-1)].Field0)) {
                    k_14480245 = lastPostfix_13755629[0].data[chckIndx(h_14870788, 0, (lastPostfix_13755629[0].data).length-1)].Field1;
                    val_14480246 = lastPostfix_13755629[0].data[chckIndx(h_14870788, 0, (lastPostfix_13755629[0].data).length-1)]; val_14480246_Idx = "Field2";
                    L7: do {
                      var v_14480253 = 0;
                      var res_14870774 = val_14480246[val_14480246_Idx];
                      L8: do {
                          L9: while (true) {
                          if (!(1 <= res_14870774)) break L9;
                            v_14480253 = res_14870774;
                            var fromSect_14480254 = (k_14480245 || []).concat(makeNimstrLit("-") || [],cstrToNimstr((v_14480253)+"") || []);
                            var prevV_14480255 = subInt(v_14480253, 1);
                            var toSect_14480256 = (k_14480245 || []).concat(makeNimstrLit("-") || [],cstrToNimstr((prevV_14480255)+"") || []);
                              if (!!((prevV_14480255 == 0))) Tmp10 = false; else {                                Tmp10 = !(hasKey_14485110(allSectors_13745629[0], toSect_14480256));                              }                            if (Tmp10) {
                            moved_14470016 = true;
                            HEX5BHEX5DHEX3D_14035347(allSectors_13745629[0], toSect_14480256, {postalCode: [], district: [], folkDistrict: [], city: [], pFix: 0, streets: ({data: [], counter: 0, first: 0, last: 0}), shownOnMap: false, exclude: false});
                            (Tmp11 = HEX5BHEX5D_14105843(allSectors_13745629[0], toSect_14480256), Tmp11)[0][Tmp11[1]] = (Tmp12 = HEX5BHEX5D_14105843(allSectors_13745629[0], fromSect_14480254), Tmp12)[0][Tmp12[1]];
                            (Tmp13 = HEX5BHEX5D_14105843(allSectors_13745629[0], toSect_14480256), Tmp13)[0][Tmp13[1]].pFix = prevV_14480255;
                            L14: do {
                              var name_14490979 = [];
                              var mV_14490980 = [];
                              var colontmp__14870765 = ({data: [], counter: 0, first: 0, last: 0});
                              nimCopy(colontmp__14870765, (Tmp15 = HEX5BHEX5D_14105843(allSectors_13745629[0], fromSect_14480254), Tmp15)[0][Tmp15[1]].streets, NTI13686069);
                              var L_14870766 = len_14310548(colontmp__14870765);
                              if ((0 < colontmp__14870765.counter)) {
                              var h_14870767 = colontmp__14870765.first;
                              L16: do {
                                  L17: while (true) {
                                  if (!(0 <= h_14870767)) break L17;
                                    var nxt_14870769 = colontmp__14870765.data[chckIndx(h_14870767, 0, (colontmp__14870765.data).length-1)].Field1;
                                    if (isFilled_9356218(colontmp__14870765.data[chckIndx(h_14870767, 0, (colontmp__14870765.data).length-1)].Field0)) {
                                    name_14490979 = colontmp__14870765.data[chckIndx(h_14870767, 0, (colontmp__14870765.data).length-1)].Field2;
                                    mV_14490980 = colontmp__14870765.data[chckIndx(h_14870767, 0, (colontmp__14870765.data).length-1)].Field3;
                                    var _ = hasKeyOrPut_14505085((Tmp18 = HEX5BHEX5D_14105843(allSectors_13745629[0], toSect_14480256), Tmp18)[0][Tmp18[1]].streets, name_14490979, (Tmp19 = HEX5BHEX5D_14491312(allStreets_13725629[0], name_14490979), Tmp19)[0][Tmp19[1]].links);
                                    (Tmp20 = HEX5BHEX5D_14491312(allStreets_13725629[0], name_14490979), Tmp20)[0][Tmp20[1]].sector = (Tmp21 = HEX5BHEX5D_14105843(allSectors_13745629[0], toSect_14480256), Tmp21)[0][Tmp21[1]];
                                    if (!((len_14310548(colontmp__14870765) == L_14870766))) {
                                    failedAssertImpl_115480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
                                    }
                                    
                                    }
                                    
                                    h_14870767 = nxt_14870769;
                                  }
                              } while(false);
                              }
                              
                            } while(false);
                            del_14576123(allSectors_13745629[0], fromSect_14480254);
                            if ((v_14480253 == val_14480246[val_14480246_Idx])) {
                            val_14480246[val_14480246_Idx] = subInt(val_14480246[val_14480246_Idx], 1);
                            }
                            
                            }
                            
                            res_14870774 = subInt(res_14870774, 1);
                          }
                      } while(false);
                    } while(false);
                    if (!((len_14470152(lastPostfix_13755629[0]) == L_14870786))) {
                    failedAssertImpl_115480(makeNimstrLit("tables.nim(703, 13) `len(t) == L` the length of the table changed while iterating over it"));
                    }
                    
                    }
                    
                    res_14870790 = addInt(res_14870790, 1);
                  }
              } while(false);
            } while(false);
          } while(false);
        }
    } while(false);

  
}
function initOrderedTable_14735013(initialSize_14735017) {
  var result_14735019 = ({data: [], counter: 0, first: 0, last: 0});

    var correctSizeHEX60gensym200_14740001 = slotsNeeded_9360048(chckRange(initialSize_14735017, 0, 2147483647));
    result_14735019.counter = 0;
    result_14735019.data = new Array(chckRange(correctSizeHEX60gensym200_14740001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym200_14740001, 0, 2147483647);++i) {result_14735019.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: []};}    result_14735019.first = -1;
    result_14735019.last = -1;

  return result_14735019;

}
function contains_14785166(s_14785172, value_14785173) {
  var result_14785174 = false;

    result_14785174 = ((cmpStrings(s_14785172.a, value_14785173) <= 0) && (cmpStrings(value_14785173, s_14785172.b) <= 0));

  return result_14785174;

}
function HEX2EHEX2E_14785001(a_14785006, b_14785008) {
  var result_14785014 = ({a: [], b: []});

    nimCopy(result_14785014, {a: nimCopy(null, a_14785006, NTI113), b: nimCopy(null, b_14785008, NTI113)}, NTI14785011);

  return result_14785014;

}
function len_14795368(t_14795373) {
  var result_14795374 = 0;

    result_14795374 = t_14795373.counter;

  return result_14795374;

}
function createDom_14586539() {
    function HEX3Aanonymous_14600138(ev_14600141, n_14600142) {
        save_14371451();

      
    }
    function HEX3Aanonymous_14600161(ev_14600164, n_14600165) {
        function HEX3Aanonymous_14600168(e_14600171) {
            var dataTarget_14605004 = e_14600171.target;
            var data_14610004 = dataTarget_14605004.result;
            var a_14610009 = JSON.parse(data_14610004);
            var x_14610010 = a_14610009;
            load_14010065(x_14610010);

          
        }

        var fReader_14600166 = function(){return new FileReader();}();
        fReader_14600166.addEventListener("load", HEX3Aanonymous_14600168, false);
        var inpFile_14615214 = ev_14600164.target;
        fReader_14600166.readAsText(inpFile_14615214.files[0]);

      
    }
    function HEX3Aanonymous_14620042(ev_14620045, n_14620046) {
        function HEX3Aanonymous_14630013(r_14630015) {
            var c_14660004 = r_14630015.response.view[0].result[0].location.displayPosition;
            map.setCenter({lat: nimCopy(null, chckRange((c_14660004.latitude), -9.0000000000000000e+001, 9.0000000000000000e+001), NTI9596016), lng: nimCopy(null, chckRange((c_14660004.longitude), -1.8000000000000000e+002, 1.8000000000000000e+002), NTI9596018), m_type: NTI9596036}, false);
            map.setZoom(14, false);

          
        }
        function HEX3Aanonymous_14670023(e_14670025) {
          
        }

        var address_14620047 = ev_14620045.target.value;
        var geocoder_14620048 = platform_13705017[0].getGeocodingService();
        var geocodingParameters_14620049 = {};
        geocodingParameters_14620049.searchText = address_14620047;
        geocodingParameters_14620049.jsonattributes = 1;
        geocoder_14620048.geocode(geocodingParameters_14620049, HEX3Aanonymous_14630013, HEX3Aanonymous_14670023);

      
    }
                    var Tmp7;
                    var Tmp8;
                    function clckOnStr_14586542(ev_14586545, n_14586546) {
                        var trgt_14586547 = ev_14586545.target;
                        map.setZoom(20, false);
                        map.setCenter({lat: nimCopy(null, chckRange(parseFloat(trgt_14586547.getAttribute("data-lat")), -9.0000000000000000e+001, 9.0000000000000000e+001), NTI9596016), lng: nimCopy(null, chckRange(parseFloat(trgt_14586547.getAttribute("data-lng")), -1.8000000000000000e+002, 1.8000000000000000e+002), NTI9596018), m_type: NTI9596036}, false);

                      
                    }
            function HEX3Aanonymous_14675174(ev_14675177, n_14675178) {
                var evClck_14675179 = ev_14675177;
                var t_14680004 = evClck_14675179.target;
                var chckd_14685010 = (t_14680004.checked);
                var sN_14690010 = (t_14680004.value);
                t_14680004.checkd = nimBoolToStr((t_14680004.checked));
                if (chckd_14685010) {
                displaySector_14455263(cstrToNimstr(sN_14690010), true);
                }
                else {
                displaySector_14455263(cstrToNimstr(sN_14690010), false);
                }
                

              
            }
            function HEX3Aanonymous_14705246(ev_14705249, n_14705250) {
                var Tmp1;
                        var Tmp5;
                        var Tmp6;
                        var Tmp7;
                        var Tmp8;
                  var Tmp13;
                var Tmp14;

                removeAllSectorFromMap_13985062();
                var id_14705251 = cstrToNimstr(ev_14705249.target.id);
                var fromSect_14705252 = nsuReplaceStr(id_14705251, makeNimstrLit("_"), makeNimstrLit(" "));
                var elSel_14705253 = document.querySelectorAll(toJSStr((makeNimstrLit("select[id=\'") || []).concat(id_14705251 || [],makeNimstrLit("\']") || [])));
                var toSect_14705254 = cstrToNimstr(elSel_14705253[chckIndx(0, 0, (elSel_14705253).length-1)].value);
                var fromSector_14705416 = (Tmp1 = HEX5BHEX5D_14105843(allSectors_13745629[0], fromSect_14705252), Tmp1)[0][Tmp1[1]];
                var namesForDel_14705433 = newSeq_650232(0);
                L2: do {
                  var name_14705441 = [];
                  var mV_14705442 = [];
                  var L_14870741 = len_14310548(fromSector_14705416.streets);
                  if ((0 < fromSector_14705416.streets.counter)) {
                  var h_14870742 = fromSector_14705416.streets.first;
                  L3: do {
                      L4: while (true) {
                      if (!(0 <= h_14870742)) break L4;
                        var nxt_14870744 = fromSector_14705416.streets.data[chckIndx(h_14870742, 0, (fromSector_14705416.streets.data).length-1)].Field1;
                        if (isFilled_9356218(fromSector_14705416.streets.data[chckIndx(h_14870742, 0, (fromSector_14705416.streets.data).length-1)].Field0)) {
                        name_14705441 = fromSector_14705416.streets.data[chckIndx(h_14870742, 0, (fromSector_14705416.streets.data).length-1)].Field2;
                        mV_14705442 = fromSector_14705416.streets.data[chckIndx(h_14870742, 0, (fromSector_14705416.streets.data).length-1)].Field3;
                        var _ = hasKeyOrPut_14505085((Tmp5 = HEX5BHEX5D_14105843(allSectors_13745629[0], toSect_14705254), Tmp5)[0][Tmp5[1]].streets, name_14705441, (Tmp6 = HEX5BHEX5D_14491312(allStreets_13725629[0], name_14705441), Tmp6)[0][Tmp6[1]].links);
                        (Tmp7 = HEX5BHEX5D_14491312(allStreets_13725629[0], name_14705441), Tmp7)[0][Tmp7[1]].sector = (Tmp8 = HEX5BHEX5D_14105843(allSectors_13745629[0], toSect_14705254), Tmp8)[0][Tmp8[1]];
                        var Tmp9 = nimCopy(null, name_14705441, NTI113);
                        namesForDel_14705433.push(Tmp9);;
                        if (!((len_14310548(fromSector_14705416.streets) == L_14870741))) {
                        failedAssertImpl_115480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
                        }
                        
                        }
                        
                        h_14870742 = nxt_14870744;
                      }
                  } while(false);
                  }
                  
                } while(false);
                L10: do {
                  var n_14720214 = null;
                  var n_14720214_Idx = 0;
                  var i_14870747 = 0;
                  var L_14870748 = (namesForDel_14705433).length;
                  L11: do {
                      L12: while (true) {
                      if (!(i_14870747 < L_14870748)) break L12;
                        n_14720214 = namesForDel_14705433; n_14720214_Idx = chckIndx(i_14870747, 0, (namesForDel_14705433).length-1);
                        del_14720324(fromSector_14705416.streets, n_14720214[n_14720214_Idx]);
                        i_14870747 = addInt(i_14870747, 1);
                        if (!(((namesForDel_14705433).length == L_14870748))) {
                        failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  } while(false);
                } while(false);
                if (!(fromSector_14705416.exclude)) {
                if ((fromSector_14705416.pFix == (Tmp13 = HEX5BHEX5D_13970198(lastPostfix_13755629[0], fromSector_14705416.postalCode), Tmp13)[0][Tmp13[1]])) {
                (Tmp14 = HEX5BHEX5D_13970198(lastPostfix_13755629[0], fromSector_14705416.postalCode), Tmp14)[0][Tmp14[1]] = subInt(Tmp14[0][Tmp14[1]], 1);
                }
                
                del_14576123(allSectors_13745629[0], fromSect_14705252);
                }
                
                reindexSect_14470014();

              
            }
            function HEX3Aanonymous_14731972(ev_14731975, n_14731976) {
                var Tmp1;
                          var Tmp6;
                                  var Tmp10;
                          var Tmp11;
                            var Tmp12;
                            var Tmp13;
                                    var Tmp17;
                            var Tmp18;

                var id_14731977 = cstrToNimstr(ev_14731975.target.id);
                var fromSect_14731978 = nsuReplaceStr(id_14731977, makeNimstrLit("_"), makeNimstrLit(" "));
                var fromSector_14732140 = (Tmp1 = HEX5BHEX5D_14105843(allSectors_13745629[0], fromSect_14731978), Tmp1)[0][Tmp1[1]];
                var allSectorsTmp_14732149 = [initOrderedTable_13735632(32)];
                var addk_14732151 = 0;
                var newv_14732152 = null;
                L2: do {
                  var k_14732160 = [];
                  var v_14732161 = null;
                  var L_14870808 = len_13985198(allSectors_13745629[0]);
                  if ((0 < allSectors_13745629[0].counter)) {
                  var h_14870809 = allSectors_13745629[0].first;
                  L3: do {
                      L4: while (true) {
                      if (!(0 <= h_14870809)) break L4;
                        var nxt_14870811 = allSectors_13745629[0].data[chckIndx(h_14870809, 0, (allSectors_13745629[0].data).length-1)].Field1;
                        if (isFilled_9356218(allSectors_13745629[0].data[chckIndx(h_14870809, 0, (allSectors_13745629[0].data).length-1)].Field0)) {
                        k_14732160 = allSectors_13745629[0].data[chckIndx(h_14870809, 0, (allSectors_13745629[0].data).length-1)].Field2;
                        v_14732161 = allSectors_13745629[0].data[chckIndx(h_14870809, 0, (allSectors_13745629[0].data).length-1)].Field3;
                        L5: do {
                          if (v_14732161.exclude) {
                          break L5;
                          }
                          
                          if ((addk_14732151 == 1)) {
                          newv_14732152 = JSON.parse(JSON.stringify(v_14732161));
                          if (false) {
                          nimCopy(newv_14732152.streets, initOrderedTable_14735013(32), NTI13686069);
                          }
                          
                          newv_14732152.pFix = addInt(newv_14732152.pFix, 1);
                          L7: do {
                            var nstHEX60gensym199_14745627 = [];
                            var stHEX60gensym199_14745628 = [];
                            var L_14870798 = len_14310548(newv_14732152.streets);
                            if ((0 < newv_14732152.streets.counter)) {
                            var h_14870799 = newv_14732152.streets.first;
                            L8: do {
                                L9: while (true) {
                                if (!(0 <= h_14870799)) break L9;
                                  var nxt_14870801 = newv_14732152.streets.data[chckIndx(h_14870799, 0, (newv_14732152.streets.data).length-1)].Field1;
                                  if (isFilled_9356218(newv_14732152.streets.data[chckIndx(h_14870799, 0, (newv_14732152.streets.data).length-1)].Field0)) {
                                  nstHEX60gensym199_14745627 = newv_14732152.streets.data[chckIndx(h_14870799, 0, (newv_14732152.streets.data).length-1)].Field2;
                                  stHEX60gensym199_14745628 = newv_14732152.streets.data[chckIndx(h_14870799, 0, (newv_14732152.streets.data).length-1)].Field3;
                                  (Tmp10 = HEX5BHEX5D_14491312(allStreets_13725629[0], nstHEX60gensym199_14745627), Tmp10)[0][Tmp10[1]].sector = newv_14732152;
                                  if (!((len_14310548(newv_14732152.streets) == L_14870798))) {
                                  failedAssertImpl_115480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
                                  }
                                  
                                  }
                                  
                                  h_14870799 = nxt_14870801;
                                }
                            } while(false);
                            }
                            
                          } while(false);
                          Tmp6 = nsuJoinSep([nimCopy(null, (Tmp11 = nsuSplitString(k_14732160, makeNimstrLit("-"), -1), Tmp11)[chckIndx(0, 0, (Tmp11).length-1)], NTI113), cstrToNimstr((newv_14732152.pFix)+"")], makeNimstrLit("-"));
                          }
                          else {
                            if (eqStrings(k_14732160, fromSect_14731978)) {
                            addk_14732151 = 1;
                            (Tmp13 = HEX5BHEX5D_13970198(lastPostfix_13755629[0], fromSector_14732140.postalCode), Tmp13)[0][Tmp13[1]] = addInt(Tmp13[0][Tmp13[1]], 1);
                            HEX5BHEX5DHEX3D_14035347(allSectorsTmp_14732149[0], k_14732160, v_14732161);
                            newv_14732152 = JSON.parse(JSON.stringify(v_14732161));
                            if (true) {
                            nimCopy(newv_14732152.streets, initOrderedTable_14735013(32), NTI13686069);
                            }
                            
                            newv_14732152.pFix = addInt(newv_14732152.pFix, 1);
                            L14: do {
                              var nstHEX60gensym204_14760032 = [];
                              var stHEX60gensym204_14760033 = [];
                              var L_14870804 = len_14310548(newv_14732152.streets);
                              if ((0 < newv_14732152.streets.counter)) {
                              var h_14870805 = newv_14732152.streets.first;
                              L15: do {
                                  L16: while (true) {
                                  if (!(0 <= h_14870805)) break L16;
                                    var nxt_14870807 = newv_14732152.streets.data[chckIndx(h_14870805, 0, (newv_14732152.streets.data).length-1)].Field1;
                                    if (isFilled_9356218(newv_14732152.streets.data[chckIndx(h_14870805, 0, (newv_14732152.streets.data).length-1)].Field0)) {
                                    nstHEX60gensym204_14760032 = newv_14732152.streets.data[chckIndx(h_14870805, 0, (newv_14732152.streets.data).length-1)].Field2;
                                    stHEX60gensym204_14760033 = newv_14732152.streets.data[chckIndx(h_14870805, 0, (newv_14732152.streets.data).length-1)].Field3;
                                    (Tmp17 = HEX5BHEX5D_14491312(allStreets_13725629[0], nstHEX60gensym204_14760032), Tmp17)[0][Tmp17[1]].sector = newv_14732152;
                                    if (!((len_14310548(newv_14732152.streets) == L_14870804))) {
                                    failedAssertImpl_115480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
                                    }
                                    
                                    }
                                    
                                    h_14870805 = nxt_14870807;
                                  }
                              } while(false);
                              }
                              
                            } while(false);
                            Tmp12 = nsuJoinSep([nimCopy(null, (Tmp18 = nsuSplitString(k_14732160, makeNimstrLit("-"), -1), Tmp18)[chckIndx(0, 0, (Tmp18).length-1)], NTI113), cstrToNimstr((newv_14732152.pFix)+"")], makeNimstrLit("-"));
                            }
                            else {
                              newv_14732152 = v_14732161;
                            Tmp12 = k_14732160;
                            }
                            
                          Tmp6 = Tmp12;
                          }
                          
                          var newk_14765207 = nimCopy(null, Tmp6, NTI113);
                          HEX5BHEX5DHEX3D_14035347(allSectorsTmp_14732149[0], newk_14765207, newv_14732152);
                        } while(false);
                        if (!((len_13985198(allSectors_13745629[0]) == L_14870808))) {
                        failedAssertImpl_115480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
                        }
                        
                        }
                        
                        h_14870809 = nxt_14870811;
                      }
                  } while(false);
                  }
                  
                } while(false);
                nimCopy(allSectors_13745629[0], JSON.parse(JSON.stringify(allSectorsTmp_14732149[0])), NTI13686200);

              
            }
    function HEX3Aanonymous_14770170(ev_14770173, n_14770174) {
        var elSelects_14770175 = document.querySelectorAll("div.chg-sect-name input");
        var newDistrictName_14770176 = [];
        var fromNSect_14770177 = [];
        var toNSect_14770178 = [];
        L1: do {
          var el_14770186 = null;
          var el_14770186_Idx = 0;
          var i_14870814 = 0;
          var L_14870815 = (elSelects_14770175).length;
          L2: do {
              L3: while (true) {
              if (!(i_14870814 < L_14870815)) break L3;
                el_14770186 = elSelects_14770175; el_14770186_Idx = chckIndx(i_14870814, 0, (elSelects_14770175).length-1);
                switch (toJSStr(cstrToNimstr(el_14770186[el_14770186_Idx].name))) {
                case "newDistrictName":
                  newDistrictName_14770176 = nimCopy(null, cstrToNimstr(el_14770186[el_14770186_Idx].value.trim()), NTI113);
                  break;
                case "fromNSect":
                  fromNSect_14770177 = nimCopy(null, cstrToNimstr(el_14770186[el_14770186_Idx].value.trim()), NTI113);
                  break;
                case "toNSect":
                  toNSect_14770178 = nimCopy(null, cstrToNimstr(el_14770186[el_14770186_Idx].value.trim()), NTI113);
                  break;
                default: 
                  break;
                }
                i_14870814 = addInt(i_14870814, 1);
                if (!(((elSelects_14770175).length == L_14870815))) {
                failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);
        L4: do {
          var k_14780245 = [];
          var v_14780246 = null;
          var v_14780246_Idx = 0;
          var L_14870819 = len_13985198(allSectors_13745629[0]);
          if ((0 < allSectors_13745629[0].counter)) {
          var h_14870820 = allSectors_13745629[0].first;
          L5: do {
              L6: while (true) {
              if (!(0 <= h_14870820)) break L6;
                var nxt_14870822 = allSectors_13745629[0].data[chckIndx(h_14870820, 0, (allSectors_13745629[0].data).length-1)].Field1;
                if (isFilled_9356218(allSectors_13745629[0].data[chckIndx(h_14870820, 0, (allSectors_13745629[0].data).length-1)].Field0)) {
                k_14780245 = allSectors_13745629[0].data[chckIndx(h_14870820, 0, (allSectors_13745629[0].data).length-1)].Field2;
                v_14780246 = allSectors_13745629[0].data[chckIndx(h_14870820, 0, (allSectors_13745629[0].data).length-1)]; v_14780246_Idx = "Field3";
                if (contains_14785166(HEX2EHEX2E_14785001(fromNSect_14770177, toNSect_14770178), nucStrip(k_14780245, true, true, unicodeSpaces_1844041))) {
                v_14780246[v_14780246_Idx].folkDistrict = nimCopy(null, newDistrictName_14770176, NTI113);
                }
                
                if (!((len_13985198(allSectors_13745629[0]) == L_14870819))) {
                failedAssertImpl_115480(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                h_14870820 = nxt_14870822;
              }
          } while(false);
          }
          
        } while(false);

      
    }

  var result_14586541 = null;

    var tmp_14590276 = tree_12540445(43, []);
    tmp_14590276.class = "main-root";
    addEventHandler_13265118(tmp_14590276, 11, chckdCheck_14455267, kxi_12702284[0]);
    var tmp_14590282 = tree_12540445(43, []);
    if (!((len_13985198(allSectors_13745629[0]) == 0))) {
    var tmp_14590283 = tree_12540445(106, []);
    add_12530072(tmp_14590283, text_12540582(makeNimstrLit("\xD0\xA1\xD0\xBE\xD1\x85\xD1\x80\xD0\xB0\xD0\xBD\xD0\xB8\xD1\x82\xD1\x8C")));
    addEventHandler_13265118(tmp_14590283, 0, HEX3Aanonymous_14600138, kxi_12702284[0]);
    add_12530072(tmp_14590282, tmp_14590283);
    }
    
    var tmp_14590284 = tree_12540445(105, []);
    setAttr_12480105(tmp_14590284, "type", "file");
    setAttr_12480105(tmp_14590284, "name", "fileArea");
    addEventHandler_13265118(tmp_14590284, 8, HEX3Aanonymous_14600161, kxi_12702284[0]);
    add_12530072(tmp_14590282, tmp_14590284);
    var tmp_14590285 = tree_12540445(43, []);
    var tmp_14590286 = tree_12540445(105, []);
    setAttr_12480105(tmp_14590286, "type", "text");
    setAttr_12480105(tmp_14590286, "placeholder", "найти адрес на карте");
    addEventHandler_13265118(tmp_14590286, 8, HEX3Aanonymous_14620042, kxi_12702284[0]);
    add_12530072(tmp_14590285, tmp_14590286);
    add_12530072(tmp_14590282, tmp_14590285);
    L1: do {
      var k_14670105 = [];
      var v_14670106 = null;
      var L_14870513 = len_13985198(allSectors_13745629[0]);
      if ((0 < allSectors_13745629[0].counter)) {
      var h_14870514 = allSectors_13745629[0].first;
      L2: do {
          L3: while (true) {
          if (!(0 <= h_14870514)) break L3;
            var nxt_14870516 = allSectors_13745629[0].data[chckIndx(h_14870514, 0, (allSectors_13745629[0].data).length-1)].Field1;
            if (isFilled_9356218(allSectors_13745629[0].data[chckIndx(h_14870514, 0, (allSectors_13745629[0].data).length-1)].Field0)) {
            k_14670105 = allSectors_13745629[0].data[chckIndx(h_14870514, 0, (allSectors_13745629[0].data).length-1)].Field2;
            v_14670106 = allSectors_13745629[0].data[chckIndx(h_14870514, 0, (allSectors_13745629[0].data).length-1)].Field3;
            var id4Move_14670107 = nsuReplaceStr(k_14670105, makeNimstrLit(" "), makeNimstrLit("_"));
            var tmp_14590287 = tree_12540445(43, []);
            tmp_14590287.class = "sector";
            var tmp_14590288 = tree_12540445(70, []);
            tmp_14590288.class = "sect-name";
            add_12530072(tmp_14590288, text_12540582(name_13966057(v_14670106)));
            add_12530072(tmp_14590287, tmp_14590288);
            var tmp_14590289 = tree_12540445(43, []);
            tmp_14590289.class = "streets";
            L4: do {
              var nStreet_14670127 = [];
              var links_14670128 = [];
              var L_14870493 = len_14310548(v_14670106.streets);
              if ((0 < v_14670106.streets.counter)) {
              var h_14870494 = v_14670106.streets.first;
              L5: do {
                  L6: while (true) {
                  if (!(0 <= h_14870494)) break L6;
                    var nxt_14870496 = v_14670106.streets.data[chckIndx(h_14870494, 0, (v_14670106.streets.data).length-1)].Field1;
                    if (isFilled_9356218(v_14670106.streets.data[chckIndx(h_14870494, 0, (v_14670106.streets.data).length-1)].Field0)) {
                    nStreet_14670127 = v_14670106.streets.data[chckIndx(h_14870494, 0, (v_14670106.streets.data).length-1)].Field2;
                    links_14670128 = v_14670106.streets.data[chckIndx(h_14870494, 0, (v_14670106.streets.data).length-1)].Field3;
                    var streetObj_14670129 = {name: nimCopy(null, nStreet_14670127, NTI113), sector: v_14670106, links: [], totalFamilies: 0};
                    if (hasKey_14670239(tblTotalFam_13965773[0], hash_13686254(streetObj_14670129))) {
                    Tmp7 = (Tmp8 = HEX5BHEX5D_14670420(tblTotalFam_13965773[0], hash_13686254(streetObj_14670129)), Tmp8)[0][Tmp8[1]];
                    }
                    else {
                    Tmp7 = 0;
                    }
                    
                    var totalFam_14675016 = Tmp7;
                    var coord_14675017 = links_14670128[chckIndx(0, 0, (links_14670128).length-1)].geometry[chckIndx(0, 0, (links_14670128[chckIndx(0, 0, (links_14670128).length-1)].geometry).length-1)];
                    var tmp_14590290 = tree_12540445(43, []);
                    tmp_14590290.class = "street";
                    var tmp_14590291 = tree_12540445(70, []);
                    setAttr_12480105(tmp_14590291, "data-lat", toJSStr(cstrToNimstr(nimFloatToString(coord_14675017.lat))));
                    setAttr_12480105(tmp_14590291, "data-lng", toJSStr(cstrToNimstr(nimFloatToString(coord_14675017.lng))));
                    addEventHandler_13265118(tmp_14590291, 0, clckOnStr_14586542, kxi_12702284[0]);
                    add_12530072(tmp_14590291, text_12540582(nsuJoinSep([nimCopy(null, nStreet_14670127, NTI113), makeNimstrLit(" ("), cstrToNimstr((totalFam_14675016)+""), makeNimstrLit(")")], [])));
                    add_12530072(tmp_14590290, tmp_14590291);
                    add_12530072(tmp_14590289, tmp_14590290);
                    if (!((len_14310548(v_14670106.streets) == L_14870493))) {
                    failedAssertImpl_115480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
                    }
                    
                    }
                    
                    h_14870494 = nxt_14870496;
                  }
              } while(false);
              }
              
            } while(false);
            add_12530072(tmp_14590287, tmp_14590289);
            var tmp_14590292 = tree_12540445(43, []);
            tmp_14590292.class = "show-sector-box";
            var tmp_14590293 = tree_12540445(104, []);
            setAttr_12480105(tmp_14590293, "for", toJSStr(k_14670105));
            add_12530072(tmp_14590293, text_12540582((makeNimstrLit("\xD0\x9F\xD0\xBE\xD0\xBA\xD0\xB0\xD0\xB7. \xD0\xBD\xD0\xB0 \xD0\xBA\xD0\xB0\xD1\x80\xD1\x82\xD0\xB5 (") || []).concat(cstrToNimstr((len_14310548(v_14670106.streets))+"") || [],makeNimstrLit(")") || [])));
            add_12530072(tmp_14590292, tmp_14590293);
            var tmp_14590294 = tree_12540445(105, []);
            setAttr_12480105(tmp_14590294, "type", "checkbox");
            setAttr_12480105(tmp_14590294, "name", "showSector");
            tmp_14590294.class = "show-sector";
            valueHEX3D_12445140(tmp_14590294, toJSStr(k_14670105));
            setAttr_12480105(tmp_14590294, "value", toJSStr(k_14670105));
            tmp_14590294.id = toJSStr(k_14670105);
            setAttr_12480105(tmp_14590294, "checkd", toJSStr(nimBoolToStr(v_14670106.shownOnMap)));
            addEventHandler_13265118(tmp_14590294, 0, HEX3Aanonymous_14675174, kxi_12702284[0]);
            add_12530072(tmp_14590292, tmp_14590294);
            add_12530072(tmp_14590287, tmp_14590292);
            var tmp_14590295 = tree_12540445(43, []);
            tmp_14590295.class = "for-select";
            var tmp_14590296 = tree_12540445(107, []);
            tmp_14590296.id = toJSStr(id4Move_14670107);
            var tmp_14590297 = tree_12540445(110, []);
            valueHEX3D_12445140(tmp_14590297, "");
            setAttr_12480105(tmp_14590297, "value", "");
            add_12530072(tmp_14590297, text_12540582(makeNimstrLit("\xD0\x94\xD0\xB2\xD0\xB8\xD0\xBD\xD1\x83\xD1\x82\xD1\x8C \xD0\xB2\xD1\x81\xD0\xB5 \xD1\x83\xD0\xBB\xD0\xB8\xD1\x86\xD1\x8B \xD0\xB2")));
            add_12530072(tmp_14590296, tmp_14590297);
            L9: do {
              var kOpt_14705233 = [];
              var vOpt_14705234 = null;
              var L_14870507 = len_13985198(allSectors_13745629[0]);
              if ((0 < allSectors_13745629[0].counter)) {
              var h_14870508 = allSectors_13745629[0].first;
              L10: do {
                  L11: while (true) {
                  if (!(0 <= h_14870508)) break L11;
                    var nxt_14870510 = allSectors_13745629[0].data[chckIndx(h_14870508, 0, (allSectors_13745629[0].data).length-1)].Field1;
                    if (isFilled_9356218(allSectors_13745629[0].data[chckIndx(h_14870508, 0, (allSectors_13745629[0].data).length-1)].Field0)) {
                    kOpt_14705233 = allSectors_13745629[0].data[chckIndx(h_14870508, 0, (allSectors_13745629[0].data).length-1)].Field2;
                    vOpt_14705234 = allSectors_13745629[0].data[chckIndx(h_14870508, 0, (allSectors_13745629[0].data).length-1)].Field3;
                    L12: do {
                      if (eqStrings(kOpt_14705233, id_13970026(v_14670106))) {
                      break L12;
                      }
                      
                      var tmp_14590298 = tree_12540445(110, []);
                      valueHEX3D_12445140(tmp_14590298, toJSStr(kOpt_14705233));
                      setAttr_12480105(tmp_14590298, "value", toJSStr(kOpt_14705233));
                      add_12530072(tmp_14590298, text_12540582(kOpt_14705233));
                      add_12530072(tmp_14590296, tmp_14590298);
                    } while(false);
                    if (!((len_13985198(allSectors_13745629[0]) == L_14870507))) {
                    failedAssertImpl_115480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
                    }
                    
                    }
                    
                    h_14870508 = nxt_14870510;
                  }
              } while(false);
              }
              
            } while(false);
            add_12530072(tmp_14590295, tmp_14590296);
            var tmp_14590299 = tree_12540445(106, []);
            tmp_14590299.id = toJSStr(id4Move_14670107);
            add_12530072(tmp_14590299, text_12540582(makeNimstrLit("\xD0\x9E\xD0\xBA !")));
            addEventHandler_13265118(tmp_14590299, 0, HEX3Aanonymous_14705246, kxi_12702284[0]);
            add_12530072(tmp_14590295, tmp_14590299);
            add_12530072(tmp_14590287, tmp_14590295);
            var tmp_14590300 = tree_12540445(106, []);
            tmp_14590300.id = toJSStr(id4Move_14670107);
            add_12530072(tmp_14590300, text_12540582(makeNimstrLit("\xD0\xB2\xD1\x81\xD1\x82\xD0\xB0\xD0\xB2\xD0\xB8\xD1\x82\xD1\x8C \xD0\xBD\xD0\xBE\xD0\xB2\xD1\x8B\xD0\xB9 \xD1\x83\xD1\x87\xD0\xB0\xD1\x81\xD1\x82\xD0\xBE\xD0\xBA")));
            addEventHandler_13265118(tmp_14590300, 0, HEX3Aanonymous_14731972, kxi_12702284[0]);
            add_12530072(tmp_14590287, tmp_14590300);
            add_12530072(tmp_14590282, tmp_14590287);
            if (!((len_13985198(allSectors_13745629[0]) == L_14870513))) {
            failedAssertImpl_115480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_14870514 = nxt_14870516;
          }
      } while(false);
      }
      
    } while(false);
    if (!((len_13985198(allSectors_13745629[0]) == 0))) {
    var tmp_14590301 = tree_12540445(43, []);
    tmp_14590301.class = "chg-sect-name";
    var tmp_14590302 = tree_12540445(104, []);
    add_12530072(tmp_14590302, text_12540582(makeNimstrLit("\xD1\x83\xD1\x81\xD1\x82\xD0\xB0\xD0\xBD\xD0\xBE\xD0\xB2\xD0\xB8\xD1\x82\xD1\x8C \xD0\xBD\xD0\xBE\xD0\xB2\xD0\xBE\xD0\xB5 \xD0\xB8\xD0\xBC\xD1\x8F \xD1\x80\xD0\xB0\xD0\xB9\xD0\xBE\xD0\xBD\xD0\xB0: ")));
    add_12530072(tmp_14590301, tmp_14590302);
    var tmp_14590303 = tree_12540445(105, []);
    setAttr_12480105(tmp_14590303, "type", "text");
    setAttr_12480105(tmp_14590303, "placeholder", "новое имя района");
    setAttr_12480105(tmp_14590303, "name", "newDistrictName");
    add_12530072(tmp_14590301, tmp_14590303);
    var tmp_14590304 = tree_12540445(31, []);
    var tmp_14590305 = tree_12540445(104, []);
    add_12530072(tmp_14590305, text_12540582(makeNimstrLit("\xD1\x81: ")));
    add_12530072(tmp_14590304, tmp_14590305);
    var tmp_14590306 = tree_12540445(105, []);
    setAttr_12480105(tmp_14590306, "type", "text");
    setAttr_12480105(tmp_14590306, "placeholder", "с номера участка");
    setAttr_12480105(tmp_14590306, "name", "fromNSect");
    add_12530072(tmp_14590304, tmp_14590306);
    var tmp_14590307 = tree_12540445(104, []);
    add_12530072(tmp_14590307, text_12540582(makeNimstrLit("\xD0\xBF\xD0\xBE: ")));
    add_12530072(tmp_14590304, tmp_14590307);
    var tmp_14590308 = tree_12540445(105, []);
    setAttr_12480105(tmp_14590308, "type", "text");
    setAttr_12480105(tmp_14590308, "placeholder", "по номер участка");
    setAttr_12480105(tmp_14590308, "name", "toNSect");
    add_12530072(tmp_14590304, tmp_14590308);
    add_12530072(tmp_14590301, tmp_14590304);
    var tmp_14590309 = tree_12540445(106, []);
    add_12530072(tmp_14590309, text_12540582(makeNimstrLit("\xD1\x83\xD1\x81\xD1\x82\xD0\xB0\xD0\xBD\xD0\xBE\xD0\xB2\xD0\xB8\xD1\x82\xD1\x8C!")));
    addEventHandler_13265118(tmp_14590309, 0, HEX3Aanonymous_14770170, kxi_12702284[0]);
    add_12530072(tmp_14590301, tmp_14590309);
    add_12530072(tmp_14590282, tmp_14590301);
    }
    
    L13: do {
      var k_14795229 = [];
      var v_14795230 = 0;
      var L_14870535 = len_14470152(lastPostfix_13755629[0]);
      L14: do {
        var h_14870537 = 0;
        var colontmp__14870538 = 0;
        colontmp__14870538 = ((lastPostfix_13755629[0].data).length-1);
        var res_14870539 = 0;
        L15: do {
            L16: while (true) {
            if (!(res_14870539 <= colontmp__14870538)) break L16;
              h_14870537 = res_14870539;
              if (isFilled_9356218(lastPostfix_13755629[0].data[chckIndx(h_14870537, 0, (lastPostfix_13755629[0].data).length-1)].Field0)) {
              k_14795229 = lastPostfix_13755629[0].data[chckIndx(h_14870537, 0, (lastPostfix_13755629[0].data).length-1)].Field1;
              v_14795230 = lastPostfix_13755629[0].data[chckIndx(h_14870537, 0, (lastPostfix_13755629[0].data).length-1)].Field2;
              var tmp_14590310 = tree_12540445(43, []);
              add_12530072(tmp_14590310, text_12540582((k_14795229 || []).concat(makeNimstrLit(" : ") || [],cstrToNimstr((v_14795230)+"") || [])));
              add_12530072(tmp_14590282, tmp_14590310);
              if (!((len_14470152(lastPostfix_13755629[0]) == L_14870535))) {
              failedAssertImpl_115480(makeNimstrLit("tables.nim(681, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_14870539 = addInt(res_14870539, 1);
            }
        } while(false);
      } while(false);
    } while(false);
    L17: do {
      var k_14805229 = [];
      var v_14805230 = null;
      var L_14870548 = len_14795368(allStreets_13725629[0]);
      if ((0 < allStreets_13725629[0].counter)) {
      var h_14870549 = allStreets_13725629[0].first;
      L18: do {
          L19: while (true) {
          if (!(0 <= h_14870549)) break L19;
            var nxt_14870551 = allStreets_13725629[0].data[chckIndx(h_14870549, 0, (allStreets_13725629[0].data).length-1)].Field1;
            if (isFilled_9356218(allStreets_13725629[0].data[chckIndx(h_14870549, 0, (allStreets_13725629[0].data).length-1)].Field0)) {
            k_14805229 = allStreets_13725629[0].data[chckIndx(h_14870549, 0, (allStreets_13725629[0].data).length-1)].Field2;
            v_14805230 = allStreets_13725629[0].data[chckIndx(h_14870549, 0, (allStreets_13725629[0].data).length-1)].Field3;
            L20: do {
              if (!((v_14805230.sector == null))) {
              break L20;
              }
              
              var coord_14810009 = v_14805230.links[chckIndx(0, 0, (v_14805230.links).length-1)].geometry[chckIndx(0, 0, (v_14805230.links[chckIndx(0, 0, (v_14805230.links).length-1)].geometry).length-1)];
              var tmp_14590311 = tree_12540445(43, []);
              tmp_14590311.class = "street";
              var tmp_14590312 = tree_12540445(70, []);
              setAttr_12480105(tmp_14590312, "data-lat", toJSStr(cstrToNimstr(nimFloatToString(coord_14810009.lat))));
              setAttr_12480105(tmp_14590312, "data-lng", toJSStr(cstrToNimstr(nimFloatToString(coord_14810009.lng))));
              addEventHandler_13265118(tmp_14590312, 0, clckOnStr_14586542, kxi_12702284[0]);
              add_12530072(tmp_14590312, text_12540582(k_14805229));
              add_12530072(tmp_14590311, tmp_14590312);
              add_12530072(tmp_14590282, tmp_14590311);
            } while(false);
            if (!((len_14795368(allStreets_13725629[0]) == L_14870548))) {
            failedAssertImpl_115480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_14870549 = nxt_14870551;
          }
      } while(false);
      }
      
    } while(false);
    add_12530072(tmp_14590276, tmp_14590282);
    result_14586541 = tmp_14590276;

  return result_14586541;

}
var Tmp3;
var locSearch_14820010 = [cstrToNimstr((window.location.search))];
locSearch_14820010[0] = nimCopy(null, nsuReplaceStr(locSearch_14820010[0], makeNimstrLit("?"), []), NTI113);
var arrLs_14820011 = nsuSplitString(locSearch_14820010[0], makeNimstrLit("&"), -1);
var apikey_14820012 = nimCopy(null, (Tmp3 = nsuSplitString(arrLs_14820011[chckIndx(0, 0, (arrLs_14820011).length-1)], makeNimstrLit("="), -1), Tmp3)[chckIndx(1, 0, (Tmp3).length-1)], NTI113);
var opts_14820014 = {apikey: toJSStr(apikey_14820012), useHTTPS: true, m_type: NTI13347030, app_id: null, app_code: null, useCIT: false};
var pixelRatio_14825010 = (window.devicePixelRatio);
var hidpi_14830001 = (1.0000000000000000e+000 < pixelRatio_14825010);
var layerOpts_14830002 = [{m_type: NTI13415014, tileSize: 0, ppi: 0, lg: null, lg2: null, style: null, pois: false, crossOrigin: []}];
if (hidpi_14830001) {
layerOpts_14830002[0].ppi = 320;
}

platform_13705017[0] = function(o){return new H.service.Platform(o)}(opts_14820014);
var defLayers_14830004 = platform_13705017[0].createDefaultLayers();
var mapOpts_14830007 = [{pixelRatio: pixelRatio_14825010, m_type: NTI13572035, noWrap: false}];
var normalMap_14835004 = defLayers_14830004.vector.normal;
map = function(element, baseLayer, opt_options){return new H.Map(element, baseLayer, opt_options)}(document.getElementById("map"), normalMap_14835004.map, mapOpts_14830007[0]);
var mapEvts_14840004 = function(map){return new H.mapevents.MapEvents(map)}(map);
var behavior = function(mapE){return new H.mapevents.Behavior(mapE)}(mapEvts_14840004);
var uiDef_14870006 = [H.ui.UI.createDefault((map), (defLayers_14830004))];
setRenderer_13260238(createDom_14586539, "main-control-container", null);
map.setCenter({lat: 5.0151851800000003e+001, lng: 8.9302924000000008e+000, m_type: NTI9596036}, false);
map.setZoom(9, false);
var mainGroup_14870008 = [function(){return new H.map.Group()}()];
var mainSectorGroup_14870009 = [function(){return new H.map.Group()}()];
mainGroup_14870008[0].setZIndex(99);
map.addObject(mainGroup_14870008[0]);
map.addObject(mainSectorGroup_14870009[0]);
var mrk_14870022 = function(position){return new H.map.Marker(position)}({lat: 5.2000000000000000e+001, lng: 8.0000000000000000e+000, m_type: NTI9596036});
var p_14870024 = {lat: 3.4000000000000000e+001, lng: 1.2300000000000000e+002, m_type: NTI9596036};
var scrPoint_14870025 = function(x,y){return new H.math.Point(x, y)}(1, 1);
var check_14870028 = isPointInPolygon(scrPoint_14870025, [function(x,y){return new H.math.Point(x, y)}(0, 0), function(x,y){return new H.math.Point(x, y)}(0, 3), function(x,y){return new H.math.Point(x, y)}(3, 3)]);
rawEcho(makeNimstrLit("check: "), nimBoolToStr(check_14870028));
var cle_14870033 = platform_13705017[0].getCustomLocationService();
var geocoder_14870034 = platform_13705017[0].getGeocodingService();
var pdeService_14870035 = [platform_13705017[0].getPlatformDataService()];
map.addObject(mvStreetGrp_13755630[0]);
var strGgeoPoint_16040250 = [newSeq_650232(0)];
function len_14170431(t_14170436) {
  var result_14170437 = 0;

    result_14170437 = t_14170436.counter;

  return result_14170437;

}
function len_15620146(t_15620151) {
  var result_15620152 = 0;

    result_15620152 = t_15620151.counter;

  return result_15620152;

}
function rawGet_14977022(t_14977026, key_14977027, hc_14977028, hc_14977028_Idx) {
            var Tmp3;

  var result_14977029 = 0;

  BeforeRet: do {
    hc_14977028[hc_14977028_Idx] = hash_9295408(key_14977027);
    if ((hc_14977028[hc_14977028_Idx] == 0)) {
    hc_14977028[hc_14977028_Idx] = 314159265;
    }
    
    if (((t_14977026.data).length == 0)) {
    result_14977029 = -1;
    break BeforeRet;
    }
    
    var h_14985138 = (hc_14977028[hc_14977028_Idx] & ((t_14977026.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_9356218(t_14977026.data[chckIndx(h_14985138, 0, (t_14977026.data).length-1)].Field0)) break L2;
            if (!(t_14977026.data[chckIndx(h_14985138, 0, (t_14977026.data).length-1)].Field0 == hc_14977028[hc_14977028_Idx])) Tmp3 = false; else {              Tmp3 = (t_14977026.data[chckIndx(h_14985138, 0, (t_14977026.data).length-1)].Field1 == key_14977027);            }          if (Tmp3) {
          result_14977029 = h_14985138;
          break BeforeRet;
          }
          
          h_14985138 = nextTry_9360014(h_14985138, ((t_14977026.data).length-1));
        }
    } while(false);
    result_14977029 = subInt(-1, h_14985138);
  } while (false);

  return result_14977029;

}
function mustRehash_15270601(t_15270604) {
  var result_15270605 = false;

    if (!((t_15270604.counter < (t_15270604.data).length))) {
    failedAssertImpl_115480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_15270605 = ((mulInt((t_15270604.data).length, 2) < mulInt(t_15270604.counter, 3)) || (subInt((t_15270604.data).length, t_15270604.counter) < 4));

  return result_15270605;

}
function rawInsert_15296122(t_15296128, data_15296131, data_15296131_Idx, key_15296132, val_15296134, hc_15296135, h_15296136) {
    data_15296131[data_15296131_Idx][chckIndx(h_15296136, 0, (data_15296131[data_15296131_Idx]).length-1)].Field1 = key_15296132;
    data_15296131[data_15296131_Idx][chckIndx(h_15296136, 0, (data_15296131[data_15296131_Idx]).length-1)].Field2 = val_15296134;
    data_15296131[data_15296131_Idx][chckIndx(h_15296136, 0, (data_15296131[data_15296131_Idx]).length-1)].Field0 = hc_15296135;

  
}
function enlarge_15295161(t_15295167) {
    var n_15295175 = [];
    n_15295175 = new Array(chckRange(mulInt((t_15295167.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_15295167.data).length, 2), 0, 2147483647);++i) {n_15295175[i]={Field0: 0, Field1: 0, Field2: null};}    var Tmp1 = t_15295167.data; t_15295167.data = n_15295175; n_15295175 = Tmp1;    L2: do {
      var i_15295334 = 0;
      var colontmp__16070387 = 0;
      colontmp__16070387 = ((n_15295175).length-1);
      var res_16070388 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_16070388 <= colontmp__16070387)) break L4;
            i_15295334 = res_16070388;
            var eh_15295490 = n_15295175[chckIndx(i_15295334, 0, (n_15295175).length-1)].Field0;
            if (isFilled_9356218(eh_15295490)) {
            var j_15295497 = (eh_15295490 & ((t_15295167.data).length-1));
            L5: do {
                L6: while (true) {
                if (!isFilled_9356218(t_15295167.data[chckIndx(j_15295497, 0, (t_15295167.data).length-1)].Field0)) break L6;
                  j_15295497 = nextTry_9360014(j_15295497, ((t_15295167.data).length-1));
                }
            } while(false);
            rawInsert_15296122(t_15295167, t_15295167, "data", n_15295175[chckIndx(i_15295334, 0, (n_15295175).length-1)].Field1, n_15295175[chckIndx(i_15295334, 0, (n_15295175).length-1)].Field2, eh_15295490, j_15295497);
            }
            
            res_16070388 = addInt(res_16070388, 1);
          }
      } while(false);
    } while(false);

  
}
function rawGetKnownHC_15296629(t_15296633, key_15296634, hc_15296635) {
  var result_15296636 = 0;

  BeforeRet: do {
    if (((t_15296633.data).length == 0)) {
    result_15296636 = -1;
    break BeforeRet;
    }
    
    var h_15300138 = (hc_15296635 & ((t_15296633.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_9356218(t_15296633.data[chckIndx(h_15300138, 0, (t_15296633.data).length-1)].Field0)) break L2;
          if (((t_15296633.data[chckIndx(h_15300138, 0, (t_15296633.data).length-1)].Field0 == hc_15296635) && (t_15296633.data[chckIndx(h_15300138, 0, (t_15296633.data).length-1)].Field1 == key_15296634))) {
          result_15296636 = h_15300138;
          break BeforeRet;
          }
          
          h_15300138 = nextTry_9360014(h_15300138, ((t_15296633.data).length-1));
        }
    } while(false);
    result_15296636 = subInt(-1, h_15300138);
  } while (false);

  return result_15296636;

}
function hasKeyOrPut_15240087(t_15240093, key_15240094, val_15240095) {
  var result_15240096 = false;

    if (((t_15240093.data).length == 0)) {
    var correctSizeHEX60gensym302_15250001 = slotsNeeded_9360048(32);
    t_15240093.counter = 0;
    t_15240093.data = new Array(chckRange(correctSizeHEX60gensym302_15250001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym302_15250001, 0, 2147483647);++i) {t_15240093.data[i]={Field0: 0, Field1: 0, Field2: null};}    }
    
    var hc_15255601 = [0];
    var index_15255610 = rawGet_14977022(t_15240093, key_15240094, hc_15255601, 0);
    if ((index_15255610 < 0)) {
    result_15240096 = false;
    if (((t_15240093.data).length == 0)) {
    var correctSizeHEX60gensym305_15265001 = slotsNeeded_9360048(32);
    t_15240093.counter = 0;
    t_15240093.data = new Array(chckRange(correctSizeHEX60gensym305_15265001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym305_15265001, 0, 2147483647);++i) {t_15240093.data[i]={Field0: 0, Field1: 0, Field2: null};}    }
    
    if (mustRehash_15270601(t_15240093)) {
    enlarge_15295161(t_15240093);
    index_15255610 = rawGetKnownHC_15296629(t_15240093, key_15240094, hc_15255601[0]);
    }
    
    index_15255610 = subInt(-1, index_15255610);
    rawInsert_15296122(t_15240093, t_15240093, "data", key_15240094, val_15240095, hc_15255601[0], index_15255610);
    t_15240093.counter = addInt(t_15240093.counter, 1);
    }
    else {
      result_15240096 = true;
    }
    

  return result_15240096;

}
function HEX5BHEX5D_14985788(t_14985794, key_14985795) {
  var result_14985797 = null;
  var result_14985797_Idx = 0;

    var hcHEX60gensym22_14985798 = [0];
    var indexHEX60gensym22_14985807 = rawGet_14977022(t_14985794, key_14985795, hcHEX60gensym22_14985798, 0);
    if ((0 <= indexHEX60gensym22_14985807)) {
    result_14985797 = t_14985794.data[chckIndx(indexHEX60gensym22_14985807, 0, (t_14985794.data).length-1)]; result_14985797_Idx = "Field2";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(cstrToNimstr((key_14985795)+"") || []), parent: null, m_type: NTI6845, name: null, trace: [], up: null}, "KeyError");
    }
    

  return [result_14985797, result_14985797_Idx];

}
function newSeq_15345181(len_15345184) {
  var result_15345186 = [];

    result_15345186 = new Array(len_15345184); for (var i=0;i<len_15345184;++i) {result_15345186[i]=null;}
  return result_15345186;

}
function map_15400221(s_15400226, op_15400229) {
  var result_15400231 = [];

    result_15400231 = new Array(chckRange((s_15400226).length, 0, 2147483647)); for (var i=0;i<chckRange((s_15400226).length, 0, 2147483647);++i) {result_15400231[i]=0;}    L1: do {
      var i_15400254 = 0;
      var colontmp__16070396 = 0;
      colontmp__16070396 = (s_15400226).length;
      var i_16070397 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_16070397 < colontmp__16070396)) break L3;
            i_15400254 = i_16070397;
            result_15400231[chckIndx(i_15400254, 0, (result_15400231).length-1)] = op_15400229(s_15400226[chckIndx(i_15400254, 0, (s_15400226).length-1)]);
            i_16070397 = addInt(i_16070397, 1);
          }
      } while(false);
    } while(false);

  return result_15400231;

}
function newSeq_15400283(len_15400286) {
  var result_15400288 = [];

    result_15400288 = new Array(len_15400286); for (var i=0;i<len_15400286;++i) {result_15400288[i]=0;}
  return result_15400288;

}
function concat_15400510(seqs_15400515) {
  var result_15400517 = [];

    var L_15400519 = 0;
    L1: do {
      var seqitm_15400552 = null;
      var seqitm_15400552_Idx = 0;
      var i_16070401 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_16070401 < (seqs_15400515).length)) break L3;
            seqitm_15400552 = seqs_15400515; seqitm_15400552_Idx = chckIndx(i_16070401, 0, (seqs_15400515).length-1);
            L_15400519 = addInt(L_15400519, (seqitm_15400552[seqitm_15400552_Idx]).length);
            i_16070401 = addInt(i_16070401, 1);
          }
      } while(false);
    } while(false);
    result_15400517 = new Array(chckRange(L_15400519, 0, 2147483647)); for (var i=0;i<chckRange(L_15400519, 0, 2147483647);++i) {result_15400517[i]=0;}    var i_15400572 = 0;
    L4: do {
      var s_15400579 = null;
      var s_15400579_Idx = 0;
      var i_16070409 = 0;
      L5: do {
          L6: while (true) {
          if (!(i_16070409 < (seqs_15400515).length)) break L6;
            s_15400579 = seqs_15400515; s_15400579_Idx = chckIndx(i_16070409, 0, (seqs_15400515).length-1);
            L7: do {
              var itm_15400587 = null;
              var itm_15400587_Idx = 0;
              var i_16070406 = 0;
              var L_16070407 = (s_15400579[s_15400579_Idx]).length;
              L8: do {
                  L9: while (true) {
                  if (!(i_16070406 < L_16070407)) break L9;
                    itm_15400587 = s_15400579[s_15400579_Idx]; itm_15400587_Idx = chckIndx(i_16070406, 0, (s_15400579[s_15400579_Idx]).length-1);
                    result_15400517[chckIndx(i_15400572, 0, (result_15400517).length-1)] = itm_15400587[itm_15400587_Idx];
                    i_15400572 = addInt(i_15400572, 1);
                    i_16070406 = addInt(i_16070406, 1);
                    if (!(((s_15400579[s_15400579_Idx]).length == L_16070407))) {
                    failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while(false);
            } while(false);
            i_16070409 = addInt(i_16070409, 1);
          }
      } while(false);
    } while(false);

  return result_15400517;

}
function rawGet_14930338(t_14930343, key_14930344, hc_14930345, hc_14930345_Idx) {
            var Tmp3;

  var result_14930346 = 0;

  BeforeRet: do {
    hc_14930345[hc_14930345_Idx] = hash_9335214(key_14930344);
    if ((hc_14930345[hc_14930345_Idx] == 0)) {
    hc_14930345[hc_14930345_Idx] = 314159265;
    }
    
    if (((t_14930343.data).length == 0)) {
    result_14930346 = -1;
    break BeforeRet;
    }
    
    var h_14940138 = (hc_14930345[hc_14930345_Idx] & ((t_14930343.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_9356218(t_14930343.data[chckIndx(h_14940138, 0, (t_14930343.data).length-1)].Field0)) break L2;
            if (!(t_14930343.data[chckIndx(h_14940138, 0, (t_14930343.data).length-1)].Field0 == hc_14930345[hc_14930345_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_14930343.data[chckIndx(h_14940138, 0, (t_14930343.data).length-1)].Field2, key_14930344);            }          if (Tmp3) {
          result_14930346 = h_14940138;
          break BeforeRet;
          }
          
          h_14940138 = nextTry_9360014(h_14940138, ((t_14930343.data).length-1));
        }
    } while(false);
    result_14930346 = subInt(-1, h_14940138);
  } while (false);

  return result_14930346;

}
function mustRehash_15435601(t_15435604) {
  var result_15435605 = false;

    if (!((t_15435604.counter < (t_15435604.data).length))) {
    failedAssertImpl_115480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_15435605 = ((mulInt((t_15435604.data).length, 2) < mulInt(t_15435604.counter, 3)) || (subInt((t_15435604.data).length, t_15435604.counter) < 4));

  return result_15435605;

}
function rawInsert_15461359(t_15461365, data_15461368, data_15461368_Idx, key_15461369, val_15461371, hc_15461372, h_15461373) {
    data_15461368[data_15461368_Idx][chckIndx(h_15461373, 0, (data_15461368[data_15461368_Idx]).length-1)].Field2 = nimCopy(null, key_15461369, NTI113);
    data_15461368[data_15461368_Idx][chckIndx(h_15461373, 0, (data_15461368[data_15461368_Idx]).length-1)].Field3 = val_15461371;
    data_15461368[data_15461368_Idx][chckIndx(h_15461373, 0, (data_15461368[data_15461368_Idx]).length-1)].Field0 = hc_15461372;
    data_15461368[data_15461368_Idx][chckIndx(h_15461373, 0, (data_15461368[data_15461368_Idx]).length-1)].Field1 = -1;
    if ((t_15461365.first < 0)) {
    t_15461365.first = h_15461373;
    }
    
    if ((0 <= t_15461365.last)) {
    data_15461368[data_15461368_Idx][chckIndx(t_15461365.last, 0, (data_15461368[data_15461368_Idx]).length-1)].Field1 = h_15461373;
    }
    
    t_15461365.last = h_15461373;

  
}
function enlarge_15460180(t_15460186) {
          var Tmp6;
          var Tmp7;

    var n_15460194 = [];
    n_15460194 = new Array(chckRange(mulInt((t_15460186.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_15460186.data).length, 2), 0, 2147483647);++i) {n_15460194[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    var h_15460333 = t_15460186.first;
    t_15460186.first = -1;
    t_15460186.last = -1;
    var Tmp1 = t_15460186.data; t_15460186.data = n_15460194; n_15460194 = Tmp1;    L2: do {
        L3: while (true) {
        if (!(0 <= h_15460333)) break L3;
          var nxt_15460496 = n_15460194[chckIndx(h_15460333, 0, (n_15460194).length-1)].Field1;
          var eh_15460652 = n_15460194[chckIndx(h_15460333, 0, (n_15460194).length-1)].Field0;
          if (isFilled_9356218(eh_15460652)) {
          var j_15460659 = (eh_15460652 & ((t_15460186.data).length-1));
          L4: do {
              L5: while (true) {
              if (!isFilled_9356218(t_15460186.data[chckIndx(j_15460659, 0, (t_15460186.data).length-1)].Field0)) break L5;
                j_15460659 = nextTry_9360014(j_15460659, ((t_15460186.data).length-1));
              }
          } while(false);
          Tmp6 = n_15460194[chckIndx(h_15460333, 0, (n_15460194).length-1)].Field2;
          n_15460194[chckIndx(h_15460333, 0, (n_15460194).length-1)].Field2 = genericReset(n_15460194[chckIndx(h_15460333, 0, (n_15460194).length-1)].Field2, NTI113);
          Tmp7 = n_15460194[chckIndx(h_15460333, 0, (n_15460194).length-1)].Field3;
          n_15460194[chckIndx(h_15460333, 0, (n_15460194).length-1)].Field3 = genericReset(n_15460194[chckIndx(h_15460333, 0, (n_15460194).length-1)].Field3, NTI13686020);
          rawInsert_15461359(t_15460186, t_15460186, "data", Tmp6, Tmp7, n_15460194[chckIndx(h_15460333, 0, (n_15460194).length-1)].Field0, j_15460659);
          }
          
          h_15460333 = nxt_15460496;
        }
    } while(false);

  
}
function rawGetKnownHC_15462195(t_15462200, key_15462201, hc_15462202) {
  var result_15462203 = 0;

  BeforeRet: do {
    if (((t_15462200.data).length == 0)) {
    result_15462203 = -1;
    break BeforeRet;
    }
    
    var h_15465138 = (hc_15462202 & ((t_15462200.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_9356218(t_15462200.data[chckIndx(h_15465138, 0, (t_15462200.data).length-1)].Field0)) break L2;
          if (((t_15462200.data[chckIndx(h_15465138, 0, (t_15462200.data).length-1)].Field0 == hc_15462202) && eqStrings(t_15462200.data[chckIndx(h_15465138, 0, (t_15462200.data).length-1)].Field2, key_15462201))) {
          result_15462203 = h_15465138;
          break BeforeRet;
          }
          
          h_15465138 = nextTry_9360014(h_15465138, ((t_15462200.data).length-1));
        }
    } while(false);
    result_15462203 = subInt(-1, h_15465138);
  } while (false);

  return result_15462203;

}
function hasKeyOrPut_15405277(t_15405283, key_15405284, val_15405285) {
  var result_15405286 = false;

    if (((t_15405283.data).length == 0)) {
    var correctSizeHEX60gensym335_15415001 = slotsNeeded_9360048(32);
    t_15405283.counter = 0;
    t_15405283.data = new Array(chckRange(correctSizeHEX60gensym335_15415001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym335_15415001, 0, 2147483647);++i) {t_15405283.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    t_15405283.first = -1;
    t_15405283.last = -1;
    }
    
    var hc_15420601 = [0];
    var index_15420630 = rawGet_14930338(t_15405283, key_15405284, hc_15420601, 0);
    if ((index_15420630 < 0)) {
    result_15405286 = false;
    if (((t_15405283.data).length == 0)) {
    var correctSizeHEX60gensym338_15430001 = slotsNeeded_9360048(32);
    t_15405283.counter = 0;
    t_15405283.data = new Array(chckRange(correctSizeHEX60gensym338_15430001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym338_15430001, 0, 2147483647);++i) {t_15405283.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    t_15405283.first = -1;
    t_15405283.last = -1;
    }
    
    if (mustRehash_15435601(t_15405283)) {
    enlarge_15460180(t_15405283);
    index_15420630 = rawGetKnownHC_15462195(t_15405283, key_15405284, hc_15420601[0]);
    }
    
    index_15420630 = subInt(-1, index_15420630);
    rawInsert_15461359(t_15405283, t_15405283, "data", key_15405284, val_15405285, hc_15420601[0], index_15420630);
    t_15405283.counter = addInt(t_15405283.counter, 1);
    }
    else {
      result_15405286 = true;
    }
    

  return result_15405286;

}
function newSeq_15405193(len_15405196) {
  var result_15405198 = [];

    result_15405198 = new Array(len_15405196); for (var i=0;i<len_15405196;++i) {result_15405198[i]=null;}
  return result_15405198;

}
function rawGet_15480602(t_15480606, key_15480607, hc_15480608, hc_15480608_Idx) {
            var Tmp3;

  var result_15480609 = 0;

  BeforeRet: do {
    hc_15480608[hc_15480608_Idx] = hash_9335214(key_15480607);
    if ((hc_15480608[hc_15480608_Idx] == 0)) {
    hc_15480608[hc_15480608_Idx] = 314159265;
    }
    
    if (((t_15480606.data).length == 0)) {
    result_15480609 = -1;
    break BeforeRet;
    }
    
    var h_15490138 = (hc_15480608[hc_15480608_Idx] & ((t_15480606.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_9356218(t_15480606.data[chckIndx(h_15490138, 0, (t_15480606.data).length-1)].Field0)) break L2;
            if (!(t_15480606.data[chckIndx(h_15490138, 0, (t_15480606.data).length-1)].Field0 == hc_15480608[hc_15480608_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_15480606.data[chckIndx(h_15490138, 0, (t_15480606.data).length-1)].Field1, key_15480607);            }          if (Tmp3) {
          result_15480609 = h_15490138;
          break BeforeRet;
          }
          
          h_15490138 = nextTry_9360014(h_15490138, ((t_15480606.data).length-1));
        }
    } while(false);
    result_15480609 = subInt(-1, h_15490138);
  } while (false);

  return result_15480609;

}
function mustRehash_15505601(t_15505604) {
  var result_15505605 = false;

    if (!((t_15505604.counter < (t_15505604.data).length))) {
    failedAssertImpl_115480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_15505605 = ((mulInt((t_15505604.data).length, 2) < mulInt(t_15505604.counter, 3)) || (subInt((t_15505604.data).length, t_15505604.counter) < 4));

  return result_15505605;

}
function rawInsert_15531122(t_15531128, data_15531131, data_15531131_Idx, key_15531132, val_15531134, hc_15531135, h_15531136) {
    data_15531131[data_15531131_Idx][chckIndx(h_15531136, 0, (data_15531131[data_15531131_Idx]).length-1)].Field1 = nimCopy(null, key_15531132, NTI113);
    data_15531131[data_15531131_Idx][chckIndx(h_15531136, 0, (data_15531131[data_15531131_Idx]).length-1)].Field2 = val_15531134;
    data_15531131[data_15531131_Idx][chckIndx(h_15531136, 0, (data_15531131[data_15531131_Idx]).length-1)].Field0 = hc_15531135;

  
}
function enlarge_15530161(t_15530167) {
    var n_15530175 = [];
    n_15530175 = new Array(chckRange(mulInt((t_15530167.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_15530167.data).length, 2), 0, 2147483647);++i) {n_15530175[i]={Field0: 0, Field1: [], Field2: null};}    var Tmp1 = t_15530167.data; t_15530167.data = n_15530175; n_15530175 = Tmp1;    L2: do {
      var i_15530334 = 0;
      var colontmp__16070418 = 0;
      colontmp__16070418 = ((n_15530175).length-1);
      var res_16070419 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_16070419 <= colontmp__16070418)) break L4;
            i_15530334 = res_16070419;
            var eh_15530490 = n_15530175[chckIndx(i_15530334, 0, (n_15530175).length-1)].Field0;
            if (isFilled_9356218(eh_15530490)) {
            var j_15530497 = (eh_15530490 & ((t_15530167.data).length-1));
            L5: do {
                L6: while (true) {
                if (!isFilled_9356218(t_15530167.data[chckIndx(j_15530497, 0, (t_15530167.data).length-1)].Field0)) break L6;
                  j_15530497 = nextTry_9360014(j_15530497, ((t_15530167.data).length-1));
                }
            } while(false);
            rawInsert_15531122(t_15530167, t_15530167, "data", n_15530175[chckIndx(i_15530334, 0, (n_15530175).length-1)].Field1, n_15530175[chckIndx(i_15530334, 0, (n_15530175).length-1)].Field2, eh_15530490, j_15530497);
            }
            
            res_16070419 = addInt(res_16070419, 1);
          }
      } while(false);
    } while(false);

  
}
function rawGetKnownHC_15531629(t_15531633, key_15531634, hc_15531635) {
  var result_15531636 = 0;

  BeforeRet: do {
    if (((t_15531633.data).length == 0)) {
    result_15531636 = -1;
    break BeforeRet;
    }
    
    var h_15535138 = (hc_15531635 & ((t_15531633.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_9356218(t_15531633.data[chckIndx(h_15535138, 0, (t_15531633.data).length-1)].Field0)) break L2;
          if (((t_15531633.data[chckIndx(h_15535138, 0, (t_15531633.data).length-1)].Field0 == hc_15531635) && eqStrings(t_15531633.data[chckIndx(h_15535138, 0, (t_15531633.data).length-1)].Field1, key_15531634))) {
          result_15531636 = h_15535138;
          break BeforeRet;
          }
          
          h_15535138 = nextTry_9360014(h_15535138, ((t_15531633.data).length-1));
        }
    } while(false);
    result_15531636 = subInt(-1, h_15535138);
  } while (false);

  return result_15531636;

}
function hasKeyOrPut_15466098(t_15466104, key_15466105, val_15466106) {
  var result_15466107 = false;

    if (((t_15466104.data).length == 0)) {
    var correctSizeHEX60gensym347_15475001 = slotsNeeded_9360048(32);
    t_15466104.counter = 0;
    t_15466104.data = new Array(chckRange(correctSizeHEX60gensym347_15475001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym347_15475001, 0, 2147483647);++i) {t_15466104.data[i]={Field0: 0, Field1: [], Field2: null};}    }
    
    var hc_15480601 = [0];
    var index_15490641 = rawGet_15480602(t_15466104, key_15466105, hc_15480601, 0);
    if ((index_15490641 < 0)) {
    result_15466107 = false;
    if (((t_15466104.data).length == 0)) {
    var correctSizeHEX60gensym352_15500001 = slotsNeeded_9360048(32);
    t_15466104.counter = 0;
    t_15466104.data = new Array(chckRange(correctSizeHEX60gensym352_15500001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym352_15500001, 0, 2147483647);++i) {t_15466104.data[i]={Field0: 0, Field1: [], Field2: null};}    }
    
    if (mustRehash_15505601(t_15466104)) {
    enlarge_15530161(t_15466104);
    index_15490641 = rawGetKnownHC_15531629(t_15466104, key_15466105, hc_15480601[0]);
    }
    
    index_15490641 = subInt(-1, index_15490641);
    rawInsert_15531122(t_15466104, t_15466104, "data", key_15466105, val_15466106, hc_15480601[0], index_15490641);
    t_15466104.counter = addInt(t_15466104.counter, 1);
    }
    else {
      result_15466107 = true;
    }
    

  return result_15466107;

}
function HEX2A_946019(x_946021, order_946022) {
  var result_946023 = 0;

    var y_946028 = subInt(order_946022, 1);
    result_946023 = subInt((x_946021 ^ y_946028), y_946028);

  return result_946023;

}
function sort_15545080(t_15545086, cmp_15545096, order_15545097) {
                      var Tmp9;
                        var Tmp10;

  BeforeRet: do {
    var list_15545098 = t_15545086.first;
    var p_15545099 = 0;
    var q_15545100 = 0;
    var e_15545101 = 0;
    var tail_15545102 = 0;
    var oldhead_15545103 = 0;
    var nmerges_15545104 = 0;
    var psize_15545105 = 0;
    var qsize_15545106 = 0;
    var i_15545107 = 0;
    if ((t_15545086.counter == 0)) {
    break BeforeRet;
    }
    
    var insize_15545109 = 1;
    L1: do {
        L2: while (true) {
        if (!true) break L2;
          p_15545099 = list_15545098;
          oldhead_15545103 = list_15545098;
          list_15545098 = -1;
          tail_15545102 = -1;
          nmerges_15545104 = 0;
          L3: do {
              L4: while (true) {
              if (!(0 <= p_15545099)) break L4;
                nmerges_15545104 = addInt(nmerges_15545104, 1);
                q_15545100 = p_15545099;
                psize_15545105 = 0;
                i_15545107 = 0;
                L5: do {
                    L6: while (true) {
                    if (!(i_15545107 < insize_15545109)) break L6;
                      psize_15545105 = addInt(psize_15545105, 1);
                      q_15545100 = t_15545086.data[chckIndx(q_15545100, 0, (t_15545086.data).length-1)].Field1;
                      if ((q_15545100 < 0)) {
                      break L5;
                      }
                      
                      i_15545107 = addInt(i_15545107, 1);
                    }
                } while(false);
                qsize_15545106 = insize_15545109;
                L7: do {
                    L8: while (true) {
                      if ((0 < psize_15545105)) Tmp9 = true; else {                        if (!(0 < qsize_15545106)) Tmp10 = false; else {                          Tmp10 = (0 <= q_15545100);                        }                        Tmp9 = Tmp10;                      }                    if (!Tmp9) break L8;
                      if ((psize_15545105 == 0)) {
                      e_15545101 = q_15545100;
                      q_15545100 = t_15545086.data[chckIndx(q_15545100, 0, (t_15545086.data).length-1)].Field1;
                      qsize_15545106 = subInt(qsize_15545106, 1);
                      }
                      else {
                      if (((qsize_15545106 == 0) || (q_15545100 < 0))) {
                      e_15545101 = p_15545099;
                      p_15545099 = t_15545086.data[chckIndx(p_15545099, 0, (t_15545086.data).length-1)].Field1;
                      psize_15545105 = subInt(psize_15545105, 1);
                      }
                      else {
                      if ((HEX2A_946019(cmp_15545096({Field0: nimCopy(null, t_15545086.data[chckIndx(p_15545099, 0, (t_15545086.data).length-1)].Field2, NTI113), Field1: t_15545086.data[chckIndx(p_15545099, 0, (t_15545086.data).length-1)].Field3}, {Field0: nimCopy(null, t_15545086.data[chckIndx(q_15545100, 0, (t_15545086.data).length-1)].Field2, NTI113), Field1: t_15545086.data[chckIndx(q_15545100, 0, (t_15545086.data).length-1)].Field3}), order_15545097) <= 0)) {
                      e_15545101 = p_15545099;
                      p_15545099 = t_15545086.data[chckIndx(p_15545099, 0, (t_15545086.data).length-1)].Field1;
                      psize_15545105 = subInt(psize_15545105, 1);
                      }
                      else {
                        e_15545101 = q_15545100;
                        q_15545100 = t_15545086.data[chckIndx(q_15545100, 0, (t_15545086.data).length-1)].Field1;
                        qsize_15545106 = subInt(qsize_15545106, 1);
                      }
                      }}
                      if ((0 <= tail_15545102)) {
                      t_15545086.data[chckIndx(tail_15545102, 0, (t_15545086.data).length-1)].Field1 = e_15545101;
                      }
                      else {
                        list_15545098 = e_15545101;
                      }
                      
                      tail_15545102 = e_15545101;
                    }
                } while(false);
                p_15545099 = q_15545100;
              }
          } while(false);
          t_15545086.data[chckIndx(tail_15545102, 0, (t_15545086.data).length-1)].Field1 = -1;
          if ((nmerges_15545104 <= 1)) {
          break L1;
          }
          
          insize_15545109 = mulInt(insize_15545109, 2);
        }
    } while(false);
    t_15545086.first = list_15545098;
    t_15545086.last = tail_15545102;
  } while (false);

  
}
function sortStreetTbl_15540222(x_15540227, y_15540229) {
    var Tmp1;
      var Tmp2;

  var result_15540230 = 0;

    var kX_15540231 = nimCopy(null, x_15540227["Field0"], NTI113);
    var kY_15540232 = nimCopy(null, y_15540229["Field0"], NTI113);
      if ((cmpStrings(kY_15540232, kX_15540231) < 0)) Tmp2 = true; else {        Tmp2 = eqStrings(kX_15540231, kY_15540232);      }    if (Tmp2) {
    Tmp1 = 1;
    }
    else {
    Tmp1 = -1;
    }
    
    result_15540230 = Tmp1;

  return result_15540230;

}
function hasKey_14930310(t_14930315, key_14930316) {
  var result_14930317 = false;

    var hc_14930318 = [0];
    result_14930317 = (0 <= rawGet_14930338(t_14930315, key_14930316, hc_14930318, 0));

  return result_14930317;

}
function hasKeyOrPut_14945618(t_14945624, key_14945625, val_14945626) {
  var result_14945627 = false;

    if (((t_14945624.data).length == 0)) {
    var correctSizeHEX60gensym243_14955001 = slotsNeeded_9360048(32);
    t_14945624.counter = 0;
    t_14945624.data = new Array(chckRange(correctSizeHEX60gensym243_14955001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym243_14955001, 0, 2147483647);++i) {t_14945624.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    t_14945624.first = -1;
    t_14945624.last = -1;
    }
    
    var hc_14960601 = [0];
    var index_14960630 = rawGet_14050621(t_14945624, key_14945625, hc_14960601, 0);
    if ((index_14960630 < 0)) {
    result_14945627 = false;
    if (((t_14945624.data).length == 0)) {
    var correctSizeHEX60gensym246_14970001 = slotsNeeded_9360048(32);
    t_14945624.counter = 0;
    t_14945624.data = new Array(chckRange(correctSizeHEX60gensym246_14970001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym246_14970001, 0, 2147483647);++i) {t_14945624.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    t_14945624.first = -1;
    t_14945624.last = -1;
    }
    
    if (mustRehash_14075601(t_14945624)) {
    enlarge_14100180(t_14945624);
    index_14960630 = rawGetKnownHC_14102195(t_14945624, key_14945625, hc_14960601[0]);
    }
    
    index_14960630 = subInt(-1, index_14960630);
    rawInsert_14101359(t_14945624, t_14945624, "data", key_14945625, val_14945626, hc_14960601[0], index_14960630);
    t_14945624.counter = addInt(t_14945624.counter, 1);
    }
    else {
      result_14945627 = true;
    }
    

  return result_14945627;

}
function nextId_13970043(s_13970045) {
    var Tmp1;
      var Tmp2;

  var result_13970046 = [];

    if (s_13970045.exclude) {
    Tmp1 = [];
    }
    else {
    Tmp1 = (s_13970045.postalCode || []).concat(makeNimstrLit("-") || [],cstrToNimstr((addInt((Tmp2 = HEX5BHEX5D_13970198(lastPostfix_13755629[0], s_13970045.postalCode), Tmp2)[0][Tmp2[1]], 1))+"") || []);
    }
    
    result_13970046 = nimCopy(null, Tmp1, NTI113);

  return result_13970046;

}
function HEX5BHEX5DHEX3D_14876059(t_14876065, key_14876066, val_14876068) {
    if (((t_14876065.data).length == 0)) {
    var correctSizeHEX60gensym229_14885001 = slotsNeeded_9360048(32);
    t_14876065.counter = 0;
    t_14876065.data = new Array(chckRange(correctSizeHEX60gensym229_14885001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym229_14885001, 0, 2147483647);++i) {t_14876065.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: []};}    t_14876065.first = -1;
    t_14876065.last = -1;
    }
    
    var hc_14890601 = [0];
    var index_14890630 = rawGet_14520621(t_14876065, key_14876066, hc_14890601, 0);
    if ((0 <= index_14890630)) {
    t_14876065.data[chckIndx(index_14890630, 0, (t_14876065.data).length-1)].Field3 = nimCopy(null, val_14876068, NTI13686061);
    }
    else {
      if (((t_14876065.data).length == 0)) {
      var correctSizeHEX60gensym232_14900001 = slotsNeeded_9360048(32);
      t_14876065.counter = 0;
      t_14876065.data = new Array(chckRange(correctSizeHEX60gensym232_14900001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym232_14900001, 0, 2147483647);++i) {t_14876065.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: []};}      t_14876065.first = -1;
      t_14876065.last = -1;
      }
      
      if (mustRehash_14545601(t_14876065)) {
      enlarge_14570180(t_14876065);
      index_14890630 = rawGetKnownHC_14572195(t_14876065, key_14876066, hc_14890601[0]);
      }
      
      index_14890630 = subInt(-1, index_14890630);
      rawInsert_14571359(t_14876065, t_14876065, "data", key_14876066, val_14876068, hc_14890601[0], index_14890630);
      t_14876065.counter = addInt(t_14876065.counter, 1);
    }
    

  
}
function onGrpStreet_14870825(e_14870827) {
    function HEX3Aanonymous_14875031(e_14875034) {
        var Tmp1;
        var Tmp2;
        var Tmp3;
        var Tmp4;
        var Tmp5;
        var Tmp6;
        var Tmp7;
          var Tmp8;
            var Tmp9;
          var Tmp10;
        var Tmp11;

        mvStreetGrp_13755630[0].removeAll();
        removeAllSectorFromMap_13985062();
        var trgtBtn_14875035 = e_14875034.target;
        var toSectId_14875037 = cstrToNimstr((Tmp1 = trgtBtn_14875035.parentNode.getElementsByTagName("select"), Tmp1)[chckIndx(0, 0, (Tmp1).length-1)].value);
        var sectFromId_14875038 = id_13970026(street_14875009.sector);
        var postCode_14875039 = nimCopy(null, street_14875009.sector.postalCode, NTI113);
        if (!(hasKey_14485110(allSectors_13745629[0], toSectId_14875037))) {
        (Tmp2 = HEX5BHEX5D_13970198(lastPostfix_13755629[0], postCode_14875039), Tmp2)[0][Tmp2[1]] = addInt(Tmp2[0][Tmp2[1]], 1);
        HEX5BHEX5DHEX3D_14035347(allSectors_13745629[0], toSectId_14875037, {city: nimCopy(null, addrCity_13765633[0], NTI113), postalCode: nimCopy(null, postCode_14875039, NTI113), district: nimCopy(null, street_14875009.sector.district, NTI113), pFix: (Tmp3 = HEX5BHEX5D_13970198(lastPostfix_13755629[0], postCode_14875039), Tmp3)[0][Tmp3[1]], streets: initOrderedTable_14735013(32), shownOnMap: false, folkDistrict: [], exclude: false});
        }
        
        street_14875009.sector = (Tmp4 = HEX5BHEX5D_14105843(allSectors_13745629[0], toSectId_14875037), Tmp4)[0][Tmp4[1]];
        HEX5BHEX5DHEX3D_14876059((Tmp5 = HEX5BHEX5D_14105843(allSectors_13745629[0], toSectId_14875037), Tmp5)[0][Tmp5[1]].streets, street_14875009.name, street_14875009.links);
        del_14720324((Tmp6 = HEX5BHEX5D_14105843(allSectors_13745629[0], sectFromId_14875038), Tmp6)[0][Tmp6[1]].streets, street_14875009.name);
        var fromSector_14906181 = (Tmp7 = HEX5BHEX5D_14105843(allSectors_13745629[0], sectFromId_14875038), Tmp7)[0][Tmp7[1]];
          if (!!(fromSector_14906181.exclude)) Tmp8 = false; else {            Tmp8 = (len_14310548((Tmp9 = HEX5BHEX5D_14105843(allSectors_13745629[0], sectFromId_14875038), Tmp9)[0][Tmp9[1]].streets) == 0);          }        if (Tmp8) {
        if ((fromSector_14906181.pFix == (Tmp10 = HEX5BHEX5D_13970198(lastPostfix_13755629[0], fromSector_14906181.postalCode), Tmp10)[0][Tmp10[1]])) {
        (Tmp11 = HEX5BHEX5D_13970198(lastPostfix_13755629[0], fromSector_14906181.postalCode), Tmp11)[0][Tmp11[1]] = subInt(Tmp11[0][Tmp11[1]], 1);
        }
        
        del_14576123(allSectors_13745629[0], sectFromId_14875038);
        }
        
        reindexSect_14470014();
        redraw_13255414(kxi_12702284[0]);

      
    }
    function HEX3Aanonymous_14915216(el_14915219, di_14915220, dm_14915221) {
        var Tmp1;
        var Tmp2;
        function HEX3Aanonymous_14915226(e_14915229) {
            mvStreetGrp_13755630[0].removeAll();

          
        }
        function HEX3Aanonymous_14915245(e_14915248) {
            map.removeEventListener("tap", loadLinks_13966053);

          
        }

        var btn_14915223 = (Tmp1 = el_14915219.getElementsByClassName("ok-str-mv"), Tmp1)[chckIndx(0, 0, (Tmp1).length-1)];
        var btnClose_14915225 = (Tmp2 = el_14915219.getElementsByClassName("close-str-mv"), Tmp2)[chckIndx(0, 0, (Tmp2).length-1)];
        btn_14915223.addEventListener("click", mvBtnHndl_14915214, false);
        btnClose_14915225.addEventListener("click", HEX3Aanonymous_14915226, false);
        var elEvt_14915244 = el_14915219;
        elEvt_14915244.addEventListener("mouseenter", HEX3Aanonymous_14915245, false);

      
    }
    function HEX3Aanonymous_14915293(el_14915296, di_14915297, dm_14915298) {
        var Tmp1;

        var btn_14915300 = (Tmp1 = el_14915296.getElementsByClassName("ok-str-mv"), Tmp1)[chckIndx(0, 0, (Tmp1).length-1)];
        btn_14915300.removeEventListener("click", mvBtnHndl_14915214);
        map.addEventListener("tap", loadLinks_13966053, false);

      
    }

    mvStreetGrp_13755630[0].removeAll();
    var trgtGrp_14875004 = e_14870827.currentTarget;
    var street_14875009 = trgtGrp_14875004.getData();
    var sectId_14875010 = id_13970026(street_14875009.sector);
    var sectNextId_14875011 = nextId_13970043(street_14875009.sector);
    var sectExclude_14875012 = street_14875009.sector.exclude;
    var elMoveStreet_14875013 = document.createElement("div");
    elMoveStreet_14875013.className = "move-str-marker";
    elMoveStreet_14875013.appendChild(document.createElement("span"));
    var elTxt_14875014 = document.createTextNode(toJSStr(street_14875009.name));
    elMoveStreet_14875013.childNodes[0].appendChild(elTxt_14875014);
    elMoveStreet_14875013.appendChild(document.createElement("div"));
    var selEl_14875015 = document.createElement("select");
    var mvOpt_14875016 = document.createElement("option");
    mvOpt_14875016.appendChild(document.createTextNode("Двинуть в"));
    selEl_14875015.appendChild(mvOpt_14875016);
    if (!(sectExclude_14875012)) {
    var mvOptNew_14875017 = document.createElement("option");
    mvOptNew_14875017.appendChild(document.createTextNode(toJSStr((sectNextId_14875011 || []).concat(makeNimstrLit("(\xD0\xBD\xD0\xBE\xD0\xB2\xD1\x8B\xD0\xB9)") || []))));
    mvOptNew_14875017.value = toJSStr(sectNextId_14875011);
    mvOptNew_14875017.setAttribute("data-new", "1");
    selEl_14875015.appendChild(mvOptNew_14875017);
    }
    
    L1: do {
      var kOpt_14875025 = [];
      var vOpt_14875026 = null;
      var L_16070452 = len_13985198(allSectors_13745629[0]);
      if ((0 < allSectors_13745629[0].counter)) {
      var h_16070453 = allSectors_13745629[0].first;
      L2: do {
          L3: while (true) {
          if (!(0 <= h_16070453)) break L3;
            var nxt_16070455 = allSectors_13745629[0].data[chckIndx(h_16070453, 0, (allSectors_13745629[0].data).length-1)].Field1;
            if (isFilled_9356218(allSectors_13745629[0].data[chckIndx(h_16070453, 0, (allSectors_13745629[0].data).length-1)].Field0)) {
            kOpt_14875025 = allSectors_13745629[0].data[chckIndx(h_16070453, 0, (allSectors_13745629[0].data).length-1)].Field2;
            vOpt_14875026 = allSectors_13745629[0].data[chckIndx(h_16070453, 0, (allSectors_13745629[0].data).length-1)].Field3;
            L4: do {
              if (eqStrings(kOpt_14875025, sectId_14875010)) {
              break L4;
              }
              
              var mvOpt_14875029 = document.createElement("option");
              mvOpt_14875029.appendChild(document.createTextNode(toJSStr(kOpt_14875025)));
              mvOpt_14875029.value = toJSStr(kOpt_14875025);
              selEl_14875015.appendChild(mvOpt_14875029);
            } while(false);
            if (!((len_13985198(allSectors_13745629[0]) == L_16070452))) {
            failedAssertImpl_115480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_16070453 = nxt_16070455;
          }
      } while(false);
      }
      
    } while(false);
    elMoveStreet_14875013.childNodes[1].appendChild(selEl_14875015);
    var btnOk_14875030 = document.createElement("button");
    btnOk_14875030.appendChild(document.createTextNode("Ok !"));
    btnOk_14875030.className = "ok-str-mv";
    var mvBtnHndl_14915214 = HEX3Aanonymous_14875031;
    var btnClose_14915215 = document.createElement("button");
    btnClose_14915215.appendChild(document.createTextNode("закрыть"));
    btnClose_14915215.className = "close-str-mv";
    elMoveStreet_14875013.childNodes[1].appendChild(btnOk_14875030);
    elMoveStreet_14875013.childNodes[1].appendChild(btnClose_14915215);
    var diOpt_14920215 = {onAttach: HEX3Aanonymous_14915216, onDetach: HEX3Aanonymous_14915293, m_type: NTI9691089};
    var iconMoveStreet_14920217 = function(element, opt){return new H.map.DomIcon(element, opt)}(elMoveStreet_14875013, diOpt_14920215);
    var geoPoint_14920218 = map.screenToGeo(e_14870827.currentPointer.viewportX, e_14870827.currentPointer.viewportY);
    var mvStreetMarker_14920219 = function(position){return new H.map.DomMarker(position)}(geoPoint_14920218);
    mvStreetMarker_14920219.setIcon(iconMoveStreet_14920217);
    mvStreetGrp_13755630[0].addObject(mvStreetMarker_14920219);
    rawEcho(makeNimstrLit("mvStreet: "));

  
}
function hasKey_14977013(t_14977018, key_14977019) {
  var result_14977020 = false;

    var hc_14977021 = [0];
    result_14977020 = (0 <= rawGet_14977022(t_14977018, key_14977019, hc_14977021, 0));

  return result_14977020;

}
function displayStreet_14925323(name_14925325, tree_14925326) {
      var Tmp1;
    var Tmp2;
    var Tmp3;
    var Tmp4;
    var Tmp5;
    var Tmp6;
      var Tmp8;
            var Tmp11;
            function HEX3Aanonymous_14976808(e_14976810) {
                map.removeEventListener("tap", loadLinks_13966053);

              
            }
            function HEX3Aanonymous_14976841(e_14976843) {
                map.addEventListener("tap", loadLinks_13966053, false);

              
            }
              var Tmp15;
                var Tmp16;
            var Tmp17;
                    var Tmp21;
                    var Tmp22;

  BeforeRet: do {
    if (!(hasKey_14930310(allStreets_13725629[0], name_14925325))) {
    break BeforeRet;
    }
    
    if (((Tmp1 = HEX5BHEX5D_14491312(allStreets_13725629[0], name_14925325), Tmp1)[0][Tmp1[1]].sector == null)) {
    var pFix_14945531 = (Tmp2 = HEX5BHEX5D_13970198(lastPostfix_13755629[0], postalCode_13765635[0]), Tmp2)[0][Tmp2[1]];
    var _ = hasKeyOrPut_14945618(allSectors_13745629[0], sectName_13765636[0], {city: nimCopy(null, addrCity_13765633[0], NTI113), postalCode: nimCopy(null, postalCode_13765635[0], NTI113), district: nimCopy(null, addrDistr_13765632[0], NTI113), pFix: pFix_14945531, streets: initOrderedTable_14735013(32), shownOnMap: false, folkDistrict: [], exclude: false});
    var _ = hasKeyOrPut_14505085((Tmp3 = HEX5BHEX5D_14105843(allSectors_13745629[0], sectName_13765636[0]), Tmp3)[0][Tmp3[1]].streets, name_14925325, (Tmp4 = HEX5BHEX5D_14491312(allStreets_13725629[0], name_14925325), Tmp4)[0][Tmp4[1]].links);
    (Tmp5 = HEX5BHEX5D_14491312(allStreets_13725629[0], name_14925325), Tmp5)[0][Tmp5[1]].sector = (Tmp6 = HEX5BHEX5D_14105843(allSectors_13745629[0], sectName_13765636[0]), Tmp6)[0][Tmp6[1]];
    }
    
    L7: do {
      var link_14976639 = null;
      var link_14976639_Idx = 0;
      var colontmp__16070443 = [];
      colontmp__16070443 = (Tmp8 = HEX5BHEX5D_14491312(allStreets_13725629[0], name_14925325), Tmp8)[0][Tmp8[1]].links;
      var i_16070444 = 0;
      var L_16070445 = (colontmp__16070443).length;
      L9: do {
          L10: while (true) {
          if (!(i_16070444 < L_16070445)) break L10;
            link_14976639 = colontmp__16070443; link_14976639_Idx = chckIndx(i_16070444, 0, (colontmp__16070443).length-1);
            var grpStreet_14976640 = function(){return new H.map.Group()}();
            grpStreet_14976640.setZIndex(99);
            grpStreet_14976640.setData((Tmp11 = HEX5BHEX5D_14491312(allStreets_13725629[0], name_14925325), Tmp11)[0][Tmp11[1]]);
            grpStreet_14976640.addEventListener("pointerenter", HEX3Aanonymous_14976808, true, null);
            grpStreet_14976640.addEventListener("pointerleave", HEX3Aanonymous_14976841, true, null);
            grpStreet_14976640.addEventListener("tap", onGrpStreet_14870825, true, null);
            mainGroup_14870008[0].addObject(grpStreet_14976640);
            var lnStr_14976895 = function(){return new H.geo.LineString();}();
            L12: do {
              var c_14976903 = null;
              var c_14976903_Idx = 0;
              var i_16070434 = 0;
              var L_16070435 = (link_14976639[link_14976639_Idx].geometry).length;
              L13: do {
                  L14: while (true) {
                  if (!(i_16070434 < L_16070435)) break L14;
                    c_14976903 = link_14976639[link_14976639_Idx].geometry; c_14976903_Idx = chckIndx(i_16070434, 0, (link_14976639[link_14976639_Idx].geometry).length-1);
                    lnStr_14976895.pushLatLngAlt(c_14976903[c_14976903_Idx].lat, c_14976903[c_14976903_Idx].lng, 1.0000000000000000e+000);
                    i_16070434 = addInt(i_16070434, 1);
                    if (!(((link_14976639[link_14976639_Idx].geometry).length == L_16070435))) {
                    failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while(false);
            } while(false);
              if (!hasKey_14977013(allLinks_13715629[0], link_14976639[link_14976639_Idx].linkId)) Tmp15 = false; else {                Tmp15 = !((Tmp16 = HEX5BHEX5D_14985788(allLinks_13715629[0], link_14976639[link_14976639_Idx].linkId), Tmp16)[0][Tmp16[1]].addedToMap);              }            if (Tmp15) {
            var pOpt_14990029 = {style: {strokeColor: "rgba(0, 0, 255, 0.3)", fillColor: "rgba(255, 0, 0, 0.4)", lineWidth: 10, m_type: NTI9691076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, zIndex: 99, m_type: NTI9691081};
            var pl_14990030 = function(ls, options){return new H.map.Polyline(ls, options)}(lnStr_14976895, pOpt_14990029);
            grpStreet_14976640.addObject(pl_14990030);
            (Tmp17 = HEX5BHEX5D_14985788(allLinks_13715629[0], link_14976639[link_14976639_Idx].linkId), Tmp17)[0][Tmp17[1]].addedToMap = true;
            }
            
            if (tree_14925326) {
            L18: do {
              var nLink_14995208 = null;
              var nLink_14995208_Idx = 0;
              var i_16070440 = 0;
              var L_16070441 = (link_14976639[link_14976639_Idx].neighborLinks).length;
              L19: do {
                  L20: while (true) {
                  if (!(i_16070440 < L_16070441)) break L20;
                    nLink_14995208 = link_14976639[link_14976639_Idx].neighborLinks; nLink_14995208_Idx = chckIndx(i_16070440, 0, (link_14976639[link_14976639_Idx].neighborLinks).length-1);
                    if ((0 < nLink_14995208[nLink_14995208_Idx])) {
                    Tmp21 = nLink_14995208[nLink_14995208_Idx];
                    }
                    else {
                    Tmp21 = mulInt(nLink_14995208[nLink_14995208_Idx], -1);
                    }
                    
                    var nLnk_15000001 = Tmp21;
                    if (hasKey_14977013(allLinks_13715629[0], nLnk_15000001)) {
                    displayStreet_14925323((Tmp22 = HEX5BHEX5D_14985788(allLinks_13715629[0], nLnk_15000001), Tmp22)[0][Tmp22[1]].name, false);
                    }
                    else {
                    }
                    
                    i_16070440 = addInt(i_16070440, 1);
                    if (!(((link_14976639[link_14976639_Idx].neighborLinks).length == L_16070441))) {
                    failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while(false);
            } while(false);
            }
            
            i_16070444 = addInt(i_16070444, 1);
            if (!(((colontmp__16070443).length == L_16070445))) {
            failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
  } while (false);

  
}
function mustRehash_15575601(t_15575604) {
  var result_15575605 = false;

    if (!((t_15575604.counter < (t_15575604.data).length))) {
    failedAssertImpl_115480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_15575605 = ((mulInt((t_15575604.data).length, 2) < mulInt(t_15575604.counter, 3)) || (subInt((t_15575604.data).length, t_15575604.counter) < 4));

  return result_15575605;

}
function rawInsert_15601122(t_15601128, data_15601131, data_15601131_Idx, key_15601132, val_15601134, hc_15601135, h_15601136) {
    data_15601131[data_15601131_Idx][chckIndx(h_15601136, 0, (data_15601131[data_15601131_Idx]).length-1)].Field1 = nimCopy(null, key_15601132, NTI113);
    data_15601131[data_15601131_Idx][chckIndx(h_15601136, 0, (data_15601131[data_15601131_Idx]).length-1)].Field2 = val_15601134;
    data_15601131[data_15601131_Idx][chckIndx(h_15601136, 0, (data_15601131[data_15601131_Idx]).length-1)].Field0 = hc_15601135;

  
}
function enlarge_15600161(t_15600167) {
    var n_15600175 = [];
    n_15600175 = new Array(chckRange(mulInt((t_15600167.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_15600167.data).length, 2), 0, 2147483647);++i) {n_15600175[i]={Field0: 0, Field1: [], Field2: 0};}    var Tmp1 = t_15600167.data; t_15600167.data = n_15600175; n_15600175 = Tmp1;    L2: do {
      var i_15600334 = 0;
      var colontmp__16070460 = 0;
      colontmp__16070460 = ((n_15600175).length-1);
      var res_16070461 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_16070461 <= colontmp__16070460)) break L4;
            i_15600334 = res_16070461;
            var eh_15600490 = n_15600175[chckIndx(i_15600334, 0, (n_15600175).length-1)].Field0;
            if (isFilled_9356218(eh_15600490)) {
            var j_15600497 = (eh_15600490 & ((t_15600167.data).length-1));
            L5: do {
                L6: while (true) {
                if (!isFilled_9356218(t_15600167.data[chckIndx(j_15600497, 0, (t_15600167.data).length-1)].Field0)) break L6;
                  j_15600497 = nextTry_9360014(j_15600497, ((t_15600167.data).length-1));
                }
            } while(false);
            rawInsert_15601122(t_15600167, t_15600167, "data", n_15600175[chckIndx(i_15600334, 0, (n_15600175).length-1)].Field1, n_15600175[chckIndx(i_15600334, 0, (n_15600175).length-1)].Field2, eh_15600490, j_15600497);
            }
            
            res_16070461 = addInt(res_16070461, 1);
          }
      } while(false);
    } while(false);

  
}
function rawGetKnownHC_15601629(t_15601633, key_15601634, hc_15601635) {
  var result_15601636 = 0;

  BeforeRet: do {
    if (((t_15601633.data).length == 0)) {
    result_15601636 = -1;
    break BeforeRet;
    }
    
    var h_15605138 = (hc_15601635 & ((t_15601633.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_9356218(t_15601633.data[chckIndx(h_15605138, 0, (t_15601633.data).length-1)].Field0)) break L2;
          if (((t_15601633.data[chckIndx(h_15605138, 0, (t_15601633.data).length-1)].Field0 == hc_15601635) && eqStrings(t_15601633.data[chckIndx(h_15605138, 0, (t_15601633.data).length-1)].Field1, key_15601634))) {
          result_15601636 = h_15605138;
          break BeforeRet;
          }
          
          h_15605138 = nextTry_9360014(h_15605138, ((t_15601633.data).length-1));
        }
    } while(false);
    result_15601636 = subInt(-1, h_15605138);
  } while (false);

  return result_15601636;

}
function HEX5BHEX5DHEX3D_15547427(t_15547433, key_15547434, val_15547436) {
    if (((t_15547433.data).length == 0)) {
    var correctSizeHEX60gensym363_15555001 = slotsNeeded_9360048(32);
    t_15547433.counter = 0;
    t_15547433.data = new Array(chckRange(correctSizeHEX60gensym363_15555001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym363_15555001, 0, 2147483647);++i) {t_15547433.data[i]={Field0: 0, Field1: [], Field2: 0};}    }
    
    var hc_15560601 = [0];
    var index_15560610 = rawGet_13970209(t_15547433, key_15547434, hc_15560601, 0);
    if ((0 <= index_15560610)) {
    t_15547433.data[chckIndx(index_15560610, 0, (t_15547433.data).length-1)].Field2 = val_15547436;
    }
    else {
      if (((t_15547433.data).length == 0)) {
      var correctSizeHEX60gensym366_15570001 = slotsNeeded_9360048(32);
      t_15547433.counter = 0;
      t_15547433.data = new Array(chckRange(correctSizeHEX60gensym366_15570001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym366_15570001, 0, 2147483647);++i) {t_15547433.data[i]={Field0: 0, Field1: [], Field2: 0};}      }
      
      if (mustRehash_15575601(t_15547433)) {
      enlarge_15600161(t_15547433);
      index_15560610 = rawGetKnownHC_15601629(t_15547433, key_15547434, hc_15560601[0]);
      }
      
      index_15560610 = subInt(-1, index_15560610);
      rawInsert_15601122(t_15547433, t_15547433, "data", key_15547434, val_15547436, hc_15560601[0], index_15560610);
      t_15547433.counter = addInt(t_15547433.counter, 1);
    }
    

  
}
function sort_15610080(t_15610086, cmp_15610096, order_15610097) {
                      var Tmp9;
                        var Tmp10;

  BeforeRet: do {
    var list_15610098 = t_15610086.first;
    var p_15610099 = 0;
    var q_15610100 = 0;
    var e_15610101 = 0;
    var tail_15610102 = 0;
    var oldhead_15610103 = 0;
    var nmerges_15610104 = 0;
    var psize_15610105 = 0;
    var qsize_15610106 = 0;
    var i_15610107 = 0;
    if ((t_15610086.counter == 0)) {
    break BeforeRet;
    }
    
    var insize_15610109 = 1;
    L1: do {
        L2: while (true) {
        if (!true) break L2;
          p_15610099 = list_15610098;
          oldhead_15610103 = list_15610098;
          list_15610098 = -1;
          tail_15610102 = -1;
          nmerges_15610104 = 0;
          L3: do {
              L4: while (true) {
              if (!(0 <= p_15610099)) break L4;
                nmerges_15610104 = addInt(nmerges_15610104, 1);
                q_15610100 = p_15610099;
                psize_15610105 = 0;
                i_15610107 = 0;
                L5: do {
                    L6: while (true) {
                    if (!(i_15610107 < insize_15610109)) break L6;
                      psize_15610105 = addInt(psize_15610105, 1);
                      q_15610100 = t_15610086.data[chckIndx(q_15610100, 0, (t_15610086.data).length-1)].Field1;
                      if ((q_15610100 < 0)) {
                      break L5;
                      }
                      
                      i_15610107 = addInt(i_15610107, 1);
                    }
                } while(false);
                qsize_15610106 = insize_15610109;
                L7: do {
                    L8: while (true) {
                      if ((0 < psize_15610105)) Tmp9 = true; else {                        if (!(0 < qsize_15610106)) Tmp10 = false; else {                          Tmp10 = (0 <= q_15610100);                        }                        Tmp9 = Tmp10;                      }                    if (!Tmp9) break L8;
                      if ((psize_15610105 == 0)) {
                      e_15610101 = q_15610100;
                      q_15610100 = t_15610086.data[chckIndx(q_15610100, 0, (t_15610086.data).length-1)].Field1;
                      qsize_15610106 = subInt(qsize_15610106, 1);
                      }
                      else {
                      if (((qsize_15610106 == 0) || (q_15610100 < 0))) {
                      e_15610101 = p_15610099;
                      p_15610099 = t_15610086.data[chckIndx(p_15610099, 0, (t_15610086.data).length-1)].Field1;
                      psize_15610105 = subInt(psize_15610105, 1);
                      }
                      else {
                      if ((HEX2A_946019(cmp_15610096({Field0: nimCopy(null, t_15610086.data[chckIndx(p_15610099, 0, (t_15610086.data).length-1)].Field2, NTI113), Field1: t_15610086.data[chckIndx(p_15610099, 0, (t_15610086.data).length-1)].Field3}, {Field0: nimCopy(null, t_15610086.data[chckIndx(q_15610100, 0, (t_15610086.data).length-1)].Field2, NTI113), Field1: t_15610086.data[chckIndx(q_15610100, 0, (t_15610086.data).length-1)].Field3}), order_15610097) <= 0)) {
                      e_15610101 = p_15610099;
                      p_15610099 = t_15610086.data[chckIndx(p_15610099, 0, (t_15610086.data).length-1)].Field1;
                      psize_15610105 = subInt(psize_15610105, 1);
                      }
                      else {
                        e_15610101 = q_15610100;
                        q_15610100 = t_15610086.data[chckIndx(q_15610100, 0, (t_15610086.data).length-1)].Field1;
                        qsize_15610106 = subInt(qsize_15610106, 1);
                      }
                      }}
                      if ((0 <= tail_15610102)) {
                      t_15610086.data[chckIndx(tail_15610102, 0, (t_15610086.data).length-1)].Field1 = e_15610101;
                      }
                      else {
                        list_15610098 = e_15610101;
                      }
                      
                      tail_15610102 = e_15610101;
                    }
                } while(false);
                p_15610099 = q_15610100;
              }
          } while(false);
          t_15610086.data[chckIndx(tail_15610102, 0, (t_15610086.data).length-1)].Field1 = -1;
          if ((nmerges_15610104 <= 1)) {
          break L1;
          }
          
          insize_15610109 = mulInt(insize_15610109, 2);
        }
    } while(false);
    t_15610086.first = list_15610098;
    t_15610086.last = tail_15610102;
  } while (false);

  
}
function nsuRepeatStr(s_8755151, n_8755152) {
  var result_8755153 = [];

    result_8755153 = nimCopy(null, mnewString(0), NTI113);
    L1: do {
      var i_8755162 = 0;
      var colontmp__16070472 = 0;
      colontmp__16070472 = n_8755152;
      var res_16070473 = 1;
      L2: do {
          L3: while (true) {
          if (!(res_16070473 <= colontmp__16070472)) break L3;
            i_8755162 = res_16070473;
            result_8755153.push.apply(result_8755153, s_8755151);;
            res_16070473 = addInt(res_16070473, 1);
          }
      } while(false);
    } while(false);

  return result_8755153;

}
function sortSectorTbl_15605693(x_15605698, y_15605700) {
    var Tmp1;
      var Tmp2;

  var result_15605701 = 0;

    var akX_15605702 = nsuSplitString(x_15605698["Field0"], makeNimstrLit("-"), -1);
    var akY_15605703 = nsuSplitString(y_15605700["Field0"], makeNimstrLit("-"), -1);
    var kX_15605728 = (akX_15605702[chckIndx(0, 0, (akX_15605702).length-1)] || []).concat(makeNimstrLit("-") || [],nsuRepeatStr(makeNimstrLit("0"), chckRange(subInt(4, (akX_15605702[chckIndx(((akX_15605702).length-1), 0, (akX_15605702).length-1)]).length), 0, 2147483647)) || [],akX_15605702[chckIndx(((akX_15605702).length-1), 0, (akX_15605702).length-1)] || []);
    var kY_15605753 = (akY_15605703[chckIndx(0, 0, (akY_15605703).length-1)] || []).concat(makeNimstrLit("-") || [],nsuRepeatStr(makeNimstrLit("0"), chckRange(subInt(4, (akY_15605703[chckIndx(((akY_15605703).length-1), 0, (akY_15605703).length-1)]).length), 0, 2147483647)) || [],akY_15605703[chckIndx(((akY_15605703).length-1), 0, (akY_15605703).length-1)] || []);
      if ((cmpStrings(kY_15605753, kX_15605728) < 0)) Tmp2 = true; else {        Tmp2 = eqStrings(kX_15605728, kY_15605753);      }    if (Tmp2) {
    Tmp1 = 1;
    }
    else {
    Tmp1 = -1;
    }
    
    result_15605701 = Tmp1;

  return result_15605701;

}
function newSeq_15650024(len_15650027) {
  var result_15650029 = [];

    result_15650029 = new Array(len_15650027); for (var i=0;i<len_15650027;++i) {result_15650029[i]={Field0: 0.0, Field1: 0.0};}
  return result_15650029;

}
function initTable_15650072(initialSize_15650076) {
  var result_15650092 = ({data: [], counter: 0});

    var correctSizeHEX60gensym383_15655001 = slotsNeeded_9360048(chckRange(initialSize_15650076, 0, 2147483647));
    result_15650092.counter = 0;
    result_15650092.data = new Array(chckRange(correctSizeHEX60gensym383_15655001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym383_15655001, 0, 2147483647);++i) {result_15650092.data[i]={Field0: 0, Field1: [], Field2: {Field0: 0, Field1: 0, Field2: 0}};}
  return result_15650092;

}
function HEX2AHEX3D_9891033(x_9891037, x_9891037_Idx, y_9891038) {
    x_9891037[x_9891037_Idx] = mulInt(x_9891037[x_9891037_Idx], y_9891038);

  
}
function HEX5E_9891024(x_9891027, y_9891028) {
  var result_9891029 = [0];

    switch (y_9891028) {
    case 0:
      result_9891029[0] = 1;
      break;
    case 1:
      result_9891029[0] = x_9891027;
      break;
    case 2:
      result_9891029[0] = mulInt(x_9891027, x_9891027);
      break;
    case 3:
      result_9891029[0] = mulInt(mulInt(x_9891027, x_9891027), x_9891027);
      break;
    default: 
      var colontmp__16070481 = {Field0: x_9891027, Field1: nimCopy(null, y_9891028, NTI6604)};
      var x_9891031 = [colontmp__16070481["Field0"]];
      var y_9891032 = colontmp__16070481["Field1"];
      result_9891029[0] = 1;
      L1: do {
          L2: while (true) {
          if (!true) break L2;
            if (!(((y_9891032 & 1) == 0))) {
            HEX2AHEX3D_9891033(result_9891029, 0, x_9891031[0]);
            }
            
            y_9891032 = chckRange((y_9891032 >> 1), 0, 2147483647);
            if ((y_9891032 == 0)) {
            break L1;
            }
            
            HEX2AHEX3D_9891033(x_9891031, 0, x_9891031[0]);
          }
      } while(false);
      break;
    }

  return result_9891029[0];

}
function getCoord_9891015(level_9891017, tileX_9891018, tileY_9891019) {
  var result_9891021 = {Field0: 0.0, Field1: 0.0};

    var tileSize_9891081 = HEX2F_365648(180, HEX5E_9891024(2, chckRange(level_9891017, 0, 2147483647)));
    nimCopy(result_9891021, {Field0: ((tileY_9891019 * tileSize_9891081) - 9.0000000000000000e+001), Field1: ((tileX_9891018 * tileSize_9891081) - 1.8000000000000000e+002)}, NTI9891020);

  return result_9891021;

}
function rawGet_15685602(t_15685606, key_15685607, hc_15685608, hc_15685608_Idx) {
            var Tmp3;

  var result_15685609 = 0;

  BeforeRet: do {
    hc_15685608[hc_15685608_Idx] = hash_9335214(key_15685607);
    if ((hc_15685608[hc_15685608_Idx] == 0)) {
    hc_15685608[hc_15685608_Idx] = 314159265;
    }
    
    if (((t_15685606.data).length == 0)) {
    result_15685609 = -1;
    break BeforeRet;
    }
    
    var h_15695138 = (hc_15685608[hc_15685608_Idx] & ((t_15685606.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_9356218(t_15685606.data[chckIndx(h_15695138, 0, (t_15685606.data).length-1)].Field0)) break L2;
            if (!(t_15685606.data[chckIndx(h_15695138, 0, (t_15685606.data).length-1)].Field0 == hc_15685608[hc_15685608_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_15685606.data[chckIndx(h_15695138, 0, (t_15685606.data).length-1)].Field1, key_15685607);            }          if (Tmp3) {
          result_15685609 = h_15695138;
          break BeforeRet;
          }
          
          h_15695138 = nextTry_9360014(h_15695138, ((t_15685606.data).length-1));
        }
    } while(false);
    result_15685609 = subInt(-1, h_15695138);
  } while (false);

  return result_15685609;

}
function mustRehash_15710601(t_15710604) {
  var result_15710605 = false;

    if (!((t_15710604.counter < (t_15710604.data).length))) {
    failedAssertImpl_115480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_15710605 = ((mulInt((t_15710604.data).length, 2) < mulInt(t_15710604.counter, 3)) || (subInt((t_15710604.data).length, t_15710604.counter) < 4));

  return result_15710605;

}
function rawInsert_15736123(t_15736129, data_15736132, data_15736132_Idx, key_15736133, val_15736135, hc_15736136, h_15736137) {
    data_15736132[data_15736132_Idx][chckIndx(h_15736137, 0, (data_15736132[data_15736132_Idx]).length-1)].Field1 = nimCopy(null, key_15736133, NTI113);
    nimCopy(data_15736132[data_15736132_Idx][chckIndx(h_15736137, 0, (data_15736132[data_15736132_Idx]).length-1)].Field2, val_15736135, NTI15650067);
    data_15736132[data_15736132_Idx][chckIndx(h_15736137, 0, (data_15736132[data_15736132_Idx]).length-1)].Field0 = hc_15736136;

  
}
function enlarge_15735161(t_15735167) {
    var n_15735175 = [];
    n_15735175 = new Array(chckRange(mulInt((t_15735167.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_15735167.data).length, 2), 0, 2147483647);++i) {n_15735175[i]={Field0: 0, Field1: [], Field2: {Field0: 0, Field1: 0, Field2: 0}};}    var Tmp1 = t_15735167.data; t_15735167.data = n_15735175; n_15735175 = Tmp1;    L2: do {
      var i_15735334 = 0;
      var colontmp__16070485 = 0;
      colontmp__16070485 = ((n_15735175).length-1);
      var res_16070486 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_16070486 <= colontmp__16070485)) break L4;
            i_15735334 = res_16070486;
            var eh_15735490 = n_15735175[chckIndx(i_15735334, 0, (n_15735175).length-1)].Field0;
            if (isFilled_9356218(eh_15735490)) {
            var j_15735497 = (eh_15735490 & ((t_15735167.data).length-1));
            L5: do {
                L6: while (true) {
                if (!isFilled_9356218(t_15735167.data[chckIndx(j_15735497, 0, (t_15735167.data).length-1)].Field0)) break L6;
                  j_15735497 = nextTry_9360014(j_15735497, ((t_15735167.data).length-1));
                }
            } while(false);
            rawInsert_15736123(t_15735167, t_15735167, "data", n_15735175[chckIndx(i_15735334, 0, (n_15735175).length-1)].Field1, n_15735175[chckIndx(i_15735334, 0, (n_15735175).length-1)].Field2, eh_15735490, j_15735497);
            }
            
            res_16070486 = addInt(res_16070486, 1);
          }
      } while(false);
    } while(false);

  
}
function rawGetKnownHC_15736630(t_15736634, key_15736635, hc_15736636) {
  var result_15736637 = 0;

  BeforeRet: do {
    if (((t_15736634.data).length == 0)) {
    result_15736637 = -1;
    break BeforeRet;
    }
    
    var h_15740138 = (hc_15736636 & ((t_15736634.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_9356218(t_15736634.data[chckIndx(h_15740138, 0, (t_15736634.data).length-1)].Field0)) break L2;
          if (((t_15736634.data[chckIndx(h_15740138, 0, (t_15736634.data).length-1)].Field0 == hc_15736636) && eqStrings(t_15736634.data[chckIndx(h_15740138, 0, (t_15736634.data).length-1)].Field1, key_15736635))) {
          result_15736637 = h_15740138;
          break BeforeRet;
          }
          
          h_15740138 = nextTry_9360014(h_15740138, ((t_15736634.data).length-1));
        }
    } while(false);
    result_15736637 = subInt(-1, h_15740138);
  } while (false);

  return result_15736637;

}
function HEX5BHEX5DHEX3D_15670144(t_15670150, key_15670151, val_15670153) {
    if (((t_15670150.data).length == 0)) {
    var correctSizeHEX60gensym388_15680001 = slotsNeeded_9360048(32);
    t_15670150.counter = 0;
    t_15670150.data = new Array(chckRange(correctSizeHEX60gensym388_15680001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym388_15680001, 0, 2147483647);++i) {t_15670150.data[i]={Field0: 0, Field1: [], Field2: {Field0: 0, Field1: 0, Field2: 0}};}    }
    
    var hc_15685601 = [0];
    var index_15695641 = rawGet_15685602(t_15670150, key_15670151, hc_15685601, 0);
    if ((0 <= index_15695641)) {
    nimCopy(t_15670150.data[chckIndx(index_15695641, 0, (t_15670150.data).length-1)].Field2, val_15670153, NTI15650067);
    }
    else {
      if (((t_15670150.data).length == 0)) {
      var correctSizeHEX60gensym393_15705001 = slotsNeeded_9360048(32);
      t_15670150.counter = 0;
      t_15670150.data = new Array(chckRange(correctSizeHEX60gensym393_15705001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym393_15705001, 0, 2147483647);++i) {t_15670150.data[i]={Field0: 0, Field1: [], Field2: {Field0: 0, Field1: 0, Field2: 0}};}      }
      
      if (mustRehash_15710601(t_15670150)) {
      enlarge_15735161(t_15670150);
      index_15695641 = rawGetKnownHC_15736630(t_15670150, key_15670151, hc_15685601[0]);
      }
      
      index_15695641 = subInt(-1, index_15695641);
      rawInsert_15736123(t_15670150, t_15670150, "data", key_15670151, val_15670153, hc_15685601[0], index_15695641);
      t_15670150.counter = addInt(t_15670150.counter, 1);
    }
    

  
}
function getTileXY_9891113(level_9891115, lat_9891116, lng_9891117) {
  var result_9891119 = {Field0: 0, Field1: 0};

    var tileSize_9891127 = HEX2F_365648(180, HEX5E_9891024(2, chckRange(level_9891115, 0, 2147483647)));
    nimCopy(result_9891119, {Field0: ((Math.trunc(((lng_9891117 + 1.8000000000000000e+002) / tileSize_9891127)))|0), Field1: ((Math.trunc(((lat_9891116 + 9.0000000000000000e+001) / tileSize_9891127)))|0)}, NTI9891118);

  return result_9891119;

}
function hasKeyOrPut_15760281(t_15760287, key_15760288, val_15760289) {
  var result_15760290 = false;

    if (((t_15760287.data).length == 0)) {
    var correctSizeHEX60gensym406_15770001 = slotsNeeded_9360048(32);
    t_15760287.counter = 0;
    t_15760287.data = new Array(chckRange(correctSizeHEX60gensym406_15770001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym406_15770001, 0, 2147483647);++i) {t_15760287.data[i]={Field0: 0, Field1: [], Field2: {Field0: 0, Field1: 0, Field2: 0}};}    }
    
    var hc_15775601 = [0];
    var index_15775610 = rawGet_15685602(t_15760287, key_15760288, hc_15775601, 0);
    if ((index_15775610 < 0)) {
    result_15760290 = false;
    if (((t_15760287.data).length == 0)) {
    var correctSizeHEX60gensym409_15785001 = slotsNeeded_9360048(32);
    t_15760287.counter = 0;
    t_15760287.data = new Array(chckRange(correctSizeHEX60gensym409_15785001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym409_15785001, 0, 2147483647);++i) {t_15760287.data[i]={Field0: 0, Field1: [], Field2: {Field0: 0, Field1: 0, Field2: 0}};}    }
    
    if (mustRehash_15710601(t_15760287)) {
    enlarge_15735161(t_15760287);
    index_15775610 = rawGetKnownHC_15736630(t_15760287, key_15760288, hc_15775601[0]);
    }
    
    index_15775610 = subInt(-1, index_15775610);
    rawInsert_15736123(t_15760287, t_15760287, "data", key_15760288, val_15760289, hc_15775601[0], index_15775610);
    t_15760287.counter = addInt(t_15760287.counter, 1);
    }
    else {
      result_15760290 = true;
    }
    

  return result_15760290;

}
function len_15790823(t_15790828) {
  var result_15790829 = 0;

    result_15790829 = t_15790828.counter;

  return result_15790829;

}
function hasKey_15800339(t_15800344, key_15800345) {
  var result_15800346 = false;

    var hc_15800347 = [0];
    result_15800346 = (0 <= rawGet_15480602(t_15800344, key_15800345, hc_15800347, 0));

  return result_15800346;

}
function hasKeyOrPut_15985086(t_15985092, key_15985093, val_15985094) {
  var result_15985095 = false;

    if (((t_15985092.data).length == 0)) {
    var correctSizeHEX60gensym451_15995001 = slotsNeeded_9360048(32);
    t_15985092.counter = 0;
    t_15985092.data = new Array(chckRange(correctSizeHEX60gensym451_15995001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym451_15995001, 0, 2147483647);++i) {t_15985092.data[i]={Field0: 0, Field1: [], Field2: 0};}    }
    
    var hc_16000601 = [0];
    var index_16000610 = rawGet_13970209(t_15985092, key_15985093, hc_16000601, 0);
    if ((index_16000610 < 0)) {
    result_15985095 = false;
    if (((t_15985092.data).length == 0)) {
    var correctSizeHEX60gensym454_16010001 = slotsNeeded_9360048(32);
    t_15985092.counter = 0;
    t_15985092.data = new Array(chckRange(correctSizeHEX60gensym454_16010001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym454_16010001, 0, 2147483647);++i) {t_15985092.data[i]={Field0: 0, Field1: [], Field2: 0};}    }
    
    if (mustRehash_15575601(t_15985092)) {
    enlarge_15600161(t_15985092);
    index_16000610 = rawGetKnownHC_15601629(t_15985092, key_15985093, hc_16000601[0]);
    }
    
    index_16000610 = subInt(-1, index_16000610);
    rawInsert_15601122(t_15985092, t_15985092, "data", key_15985093, val_15985094, hc_16000601[0], index_16000610);
    t_15985092.counter = addInt(t_15985092.counter, 1);
    }
    else {
      result_15985095 = true;
    }
    

  return result_15985095;

}
function loadLinks_13966053(e_13966056) {
function parseTiles_15190250(tiles_15190253) {
                        var Tmp8;
                          var Tmp9;
                        var Tmp10;
                              var Tmp16;
                                var Tmp17;
                              var Tmp18;
                              var Tmp19;
                              var Tmp20;
                              var Tmp21;
                              var Tmp22;
                      var Tmp28;
                              var Tmp32;
                              var Tmp33;
                              var Tmp34;
                      var Tmp35;
                      var Tmp36;
                      var Tmp37;
                      var Tmp38;
                      var Tmp39;
                        var Tmp40;
                      var Tmp41;
                      var Tmp42;
                      var Tmp43;
                      var Tmp44;
                      function HEX3Aanonymous_15400201(x_15400203) {
                        var result_15400204 = 0;

                          result_15400204 = parseInt(toJSStr(x_15400203), 10);

                        return result_15400204;

                      }
                      var Tmp45;
                        function HEX3Aanonymous_15400310(x_15400312) {
                          var result_15400313 = 0;

                            result_15400313 = parseInt(toJSStr(x_15400312), 10);

                          return result_15400313;

                        }
                      var Tmp46;
                      var Tmp47;
                        var Tmp48;
                          var Tmp49;
                      var Tmp50;
                      var Tmp51;
    var Tmp56;
    var Tmp57;

    L1: do {
      var t_15200214 = null;
      var t_15200214_Idx = 0;
      var i_16070372 = 0;
      var L_16070373 = (tiles_15190253).length;
      L2: do {
          L3: while (true) {
          if (!(i_16070372 < L_16070373)) break L3;
            t_15200214 = tiles_15190253; t_15200214_Idx = chckIndx(i_16070372, 0, (tiles_15190253).length-1);
            var rows_15205012 = (t_15200214[t_15200214_Idx].Rows);
            var meta_15210010 = (t_15200214[t_15200214_Idx].Meta);
            var tileId_15230020 = nsuJoinSep([cstrToNimstr((meta_15210010.tileX)), cstrToNimstr((meta_15210010.tileY)), cstrToNimstr((meta_15210010.level)), cstrToNimstr((meta_15210010.layerName))], makeNimstrLit("_"));
            L4: do {
              var r_15235208 = null;
              var r_15235208_Idx = 0;
              var i_16070369 = 0;
              var L_16070370 = (rows_15205012).length;
              L5: do {
                  L6: while (true) {
                  if (!(i_16070369 < L_16070370)) break L6;
                    r_15235208 = rows_15205012; r_15235208_Idx = chckIndx(i_16070369, 0, (rows_15205012).length-1);
                    L7: do {
                      var linkId_15240010 = parseInt(toJSStr(cstrToNimstr((r_15235208[r_15235208_Idx].LINK_ID))), 10);
                        if (!hasKeyOrPut_15240087(allLinks_13715629[0], linkId_15240010, {linkId: linkId_15240010, name: [], cityId: 0, districtId: 0, postalCode: [], neighborLinks: [], geometry: [], readOnly: false, addedToMap: false, addedToSector: false})) Tmp8 = false; else {                          Tmp8 = (Tmp9 = HEX5BHEX5D_14985788(allLinks_13715629[0], linkId_15240010), Tmp9)[0][Tmp9[1]].readOnly;                        }                      if (Tmp8) {
                      break L7;
                      }
                      
                        if (!(r_15235208[r_15235208_Idx].NAMES)) Tmp10 = false; else {                          Tmp10 = !((r_15235208[r_15235208_Idx].NAME));                        }                      if (Tmp10) {
                      var strName_15320010 = cstrToNimstr((r_15235208[r_15235208_Idx].NAMES));
                      L11: do {
                        var seqNames_15320011 = [];
                        var lastHEX60gensym33_16070343 = 0;
                        var splitsHEX60gensym33_16070344 = -1;
                        L12: do {
                            L13: while (true) {
                            if (!(lastHEX60gensym33_16070343 <= (strName_15320010).length)) break L13;
                              var firstHEX60gensym33_16070346 = lastHEX60gensym33_16070343;
                              L14: do {
                                  L15: while (true) {
                                  if (!((lastHEX60gensym33_16070343 < (strName_15320010).length) && !(substrEq_8325026(strName_15320010, lastHEX60gensym33_16070343, makeNimstrLit("\x1D"))))) break L15;
                                    lastHEX60gensym33_16070343 = addInt(lastHEX60gensym33_16070343, 1);
                                  }
                              } while(false);
                              if ((splitsHEX60gensym33_16070344 == 0)) {
                              lastHEX60gensym33_16070343 = (strName_15320010).length;
                              }
                              
                              seqNames_15320011 = substr_381022(strName_15320010, firstHEX60gensym33_16070346, subInt(lastHEX60gensym33_16070343, 1));
                              var txt_15325201 = nsuReplaceStr((Tmp16 = nsuSplitString(seqNames_15320011, makeNimstrLit("\x1E"), -1), Tmp16)[chckIndx(0, 0, (Tmp16).length-1)], makeNimstrLit("GERBN"), []);
                                if (!!((ConstSet15[txt_15325201[chckIndx(0, 0, (txt_15325201).length-1)]] != undefined))) Tmp17 = false; else {                                  Tmp17 = !((ConstSet16[txt_15325201[chckIndx(1, 0, (txt_15325201).length-1)]] != undefined));                                }                              if (Tmp17) {
                              (Tmp18 = HEX5BHEX5D_14985788(allLinks_13715629[0], linkId_15240010), Tmp18)[0][Tmp18[1]].name = nimCopy(null, ((Tmp19 = HEX5BHEX5D_14985788(allLinks_13715629[0], linkId_15240010), Tmp19)[0][Tmp19[1]].name || []).concat(makeNimstrLit(" ") || [],nsuReplaceStr((Tmp20 = nsuSplitString(seqNames_15320011, makeNimstrLit("\x1E"), -1), Tmp20)[chckIndx(0, 0, (Tmp20).length-1)], makeNimstrLit("GERBN"), []) || []), NTI113);
                              (Tmp21 = HEX5BHEX5D_14985788(allLinks_13715629[0], linkId_15240010), Tmp21)[0][Tmp21[1]].name = nimCopy(null, nucStrip((Tmp22 = HEX5BHEX5D_14985788(allLinks_13715629[0], linkId_15240010), Tmp22)[0][Tmp22[1]].name, true, true, unicodeSpaces_1844041), NTI113);
                              break L11;
                              }
                              
                              L23: do {
                                var seqText_15335651 = [];
                                var lastHEX60gensym33_16070338 = 0;
                                var splitsHEX60gensym33_16070339 = -1;
                                L24: do {
                                    L25: while (true) {
                                    if (!(lastHEX60gensym33_16070338 <= (seqNames_15320011).length)) break L25;
                                      var firstHEX60gensym33_16070341 = lastHEX60gensym33_16070338;
                                      L26: do {
                                          L27: while (true) {
                                          if (!((lastHEX60gensym33_16070338 < (seqNames_15320011).length) && !(substrEq_8325026(seqNames_15320011, lastHEX60gensym33_16070338, makeNimstrLit("\x1E"))))) break L27;
                                            lastHEX60gensym33_16070338 = addInt(lastHEX60gensym33_16070338, 1);
                                          }
                                      } while(false);
                                      if ((splitsHEX60gensym33_16070339 == 0)) {
                                      lastHEX60gensym33_16070338 = (seqNames_15320011).length;
                                      }
                                      
                                      seqText_15335651 = substr_381022(seqNames_15320011, firstHEX60gensym33_16070341, subInt(lastHEX60gensym33_16070338, 1));
                                      if ((splitsHEX60gensym33_16070339 == 0)) {
                                      break L24;
                                      }
                                      
                                      splitsHEX60gensym33_16070339 = subInt(splitsHEX60gensym33_16070339, 1);
                                      lastHEX60gensym33_16070338 = addInt(lastHEX60gensym33_16070338, 1);
                                    }
                                } while(false);
                              } while(false);
                              if ((splitsHEX60gensym33_16070344 == 0)) {
                              break L12;
                              }
                              
                              splitsHEX60gensym33_16070344 = subInt(splitsHEX60gensym33_16070344, 1);
                              lastHEX60gensym33_16070343 = addInt(lastHEX60gensym33_16070343, 1);
                            }
                        } while(false);
                      } while(false);
                      }
                      else {
                      if ((r_15235208[r_15235208_Idx].NAME)) {
                      (Tmp28 = HEX5BHEX5D_14985788(allLinks_13715629[0], linkId_15240010), Tmp28)[0][Tmp28[1]].geometry = nimCopy(null, newSeq_15345181(0), NTI15345185);
                      var lats_15350010 = nsuSplitString(cstrToNimstr((r_15235208[r_15235208_Idx].LAT)), makeNimstrLit(","), -1);
                      var lngs_15355010 = nsuSplitString(cstrToNimstr((r_15235208[r_15235208_Idx].LON)), makeNimstrLit(","), -1);
                      var lat0_15355011 = 0.0;
                      var lng0_15355012 = 0.0;
                      L29: do {
                        var i_15355027 = 0;
                        var colontmp__16070355 = 0;
                        colontmp__16070355 = ((lats_15350010).length-1);
                        var res_16070356 = 0;
                        L30: do {
                            L31: while (true) {
                            if (!(res_16070356 <= colontmp__16070355)) break L31;
                              i_15355027 = res_16070356;
                              if (eqStrings(nucStrip(lats_15350010[chckIndx(i_15355027, 0, (lats_15350010).length-1)], true, true, unicodeSpaces_1844041), [])) {
                              Tmp32 = lat0_15355011;
                              }
                              else {
                              Tmp32 = (lat0_15355011 + parseFloat(toJSStr(nucStrip(lats_15350010[chckIndx(i_15355027, 0, (lats_15350010).length-1)], true, true, unicodeSpaces_1844041))));
                              }
                              
                              var strLat_15355030 = Tmp32;
                              if (eqStrings(nucStrip(lngs_15355010[chckIndx(i_15355027, 0, (lngs_15355010).length-1)], true, true, unicodeSpaces_1844041), [])) {
                              Tmp33 = lng0_15355012;
                              }
                              else {
                              Tmp33 = (lng0_15355012 + parseFloat(toJSStr(nucStrip(lngs_15355010[chckIndx(i_15355027, 0, (lngs_15355010).length-1)], true, true, unicodeSpaces_1844041))));
                              }
                              
                              var strLng_15355033 = Tmp33;
                              (Tmp34 = HEX5BHEX5D_14985788(allLinks_13715629[0], linkId_15240010), Tmp34)[0][Tmp34[1]].geometry.push({lat: nimCopy(null, (strLat_15355030 / 1.0000000000000000e+005), NTI9596016), lng: nimCopy(null, (strLng_15355033 / 1.0000000000000000e+005), NTI9596018)});;
                              lat0_15355011 = strLat_15355030;
                              lng0_15355012 = strLng_15355033;
                              res_16070356 = addInt(res_16070356, 1);
                            }
                        } while(false);
                      } while(false);
                      }
                      else {
                      if ((r_15235208[r_15235208_Idx].POSTAL_CODES)) {
                      (Tmp35 = HEX5BHEX5D_14985788(allLinks_13715629[0], linkId_15240010), Tmp35)[0][Tmp35[1]].cityId = parseInt(toJSStr((Tmp37 = nsuSplitString((Tmp36 = nsuSplitString(cstrToNimstr((r_15235208[r_15235208_Idx].ADMIN_PLACE_IDS)), makeNimstrLit(","), -1), Tmp36)[chckIndx(3, 0, (Tmp36).length-1)], makeNimstrLit(";"), -1), Tmp37)[chckIndx(0, 0, (Tmp37).length-1)]), 10);
                      var distrPrt_15370010 = nimCopy(null, (Tmp38 = nsuSplitString(cstrToNimstr((r_15235208[r_15235208_Idx].ADMIN_PLACE_IDS)), makeNimstrLit(","), -1), Tmp38)[chckIndx(4, 0, (Tmp38).length-1)], NTI113);
                      if ((eqStrings(distrPrt_15370010, []) || (distrPrt_15370010[chckIndx(0, 0, (distrPrt_15370010).length-1)] == 59))) {
                      Tmp39 = 0;
                      }
                      else {
                      Tmp39 = parseInt(toJSStr((Tmp40 = nsuSplitString(distrPrt_15370010, makeNimstrLit(";"), -1), Tmp40)[chckIndx(0, 0, (Tmp40).length-1)]), 10);
                      }
                      
                      var districtId_15375204 = Tmp39;
                      (Tmp41 = HEX5BHEX5D_14985788(allLinks_13715629[0], linkId_15240010), Tmp41)[0][Tmp41[1]].districtId = addInt(districtId_15375204, (Tmp42 = HEX5BHEX5D_14985788(allLinks_13715629[0], linkId_15240010), Tmp42)[0][Tmp42[1]].cityId);
                      (Tmp43 = HEX5BHEX5D_14985788(allLinks_13715629[0], linkId_15240010), Tmp43)[0][Tmp43[1]].postalCode = nimCopy(null, (Tmp44 = nsuSplitString(cstrToNimstr((r_15235208[r_15235208_Idx].POSTAL_CODES)), makeNimstrLit(";"), -1), Tmp44)[chckIndx(0, 0, (Tmp44).length-1)], NTI113);
                      }
                      else {
                      if ((r_15235208[r_15235208_Idx].REF_NODE_NEIGHBOR_LINKS)) {
                      var rLinks_15390010 = cstrToNimstr((r_15235208[r_15235208_Idx].REF_NODE_NEIGHBOR_LINKS));
                      var nonRLinks_15395010 = cstrToNimstr((r_15235208[r_15235208_Idx].NONREF_NODE_NEIGHBOR_LINKS));
                      var refLinks_15395011 = nsuSplitString(rLinks_15390010, makeNimstrLit(","), -1);
                      var nonRefLinks_15395012 = nsuSplitString(nonRLinks_15395010, makeNimstrLit(","), -1);
                      var refLinksInt_15400270 = map_15400221(refLinks_15395011, HEX3Aanonymous_15400201);
                      if (eqStrings(nonRLinks_15395010, [])) {
                      Tmp45 = newSeq_15400283(0);
                      }
                      else {
                      Tmp45 = map_15400221(nonRefLinks_15395012, HEX3Aanonymous_15400310);
                      }
                      
                      var nonRefLinksInt_15400340 = nimCopy(null, Tmp45, NTI15400287);
                      (Tmp46 = HEX5BHEX5D_14985788(allLinks_13715629[0], linkId_15240010), Tmp46)[0][Tmp46[1]].neighborLinks = nimCopy(null, concat_15400510([nimCopy(null, refLinksInt_15400270, NTI15400502), nimCopy(null, nonRefLinksInt_15400340, NTI15400507)]), NTI15400516);
                      }
                      }}}
                      var street_15400785 = nimCopy(null, (Tmp47 = HEX5BHEX5D_14985788(allLinks_13715629[0], linkId_15240010), Tmp47)[0][Tmp47[1]].name, NTI113);
                        if (!!(eqStrings(street_15400785, []))) Tmp48 = false; else {                          Tmp48 = ((Tmp49 = HEX5BHEX5D_14985788(allLinks_13715629[0], linkId_15240010), Tmp49)[0][Tmp49[1]].cityId == cityId_13765630[0]);                        }                      if (Tmp48) {
                      if (!(hasKeyOrPut_15405277(allStreets_13725629[0], street_15400785, {name: nimCopy(null, street_15400785, NTI113), links: newSeq_15405193(0), sector: null, totalFamilies: 0}))) {
                      }
                      
                      (Tmp50 = HEX5BHEX5D_14491312(allStreets_13725629[0], street_15400785), Tmp50)[0][Tmp50[1]].links.push((Tmp51 = HEX5BHEX5D_14985788(allLinks_13715629[0], linkId_15240010), Tmp51)[0][Tmp51[1]]);;
                      }
                      
                      var _ = hasKeyOrPut_15466098(cachedTiles_13735629[0], tileId_15230020, t_15200214[t_15200214_Idx]);
                    } while(false);
                    i_16070369 = addInt(i_16070369, 1);
                    if (!(((rows_15205012).length == L_16070370))) {
                    failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while(false);
            } while(false);
            i_16070372 = addInt(i_16070372, 1);
            if (!(((tiles_15190253).length == L_16070373))) {
            failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    L52: do {
      var k_15535682 = 0;
      var v_15535683 = null;
      var v_15535683_Idx = 0;
      var L_16070376 = len_14170431(allLinks_13715629[0]);
      L53: do {
        var h_16070378 = 0;
        var colontmp__16070379 = 0;
        colontmp__16070379 = ((allLinks_13715629[0].data).length-1);
        var res_16070380 = 0;
        L54: do {
            L55: while (true) {
            if (!(res_16070380 <= colontmp__16070379)) break L55;
              h_16070378 = res_16070380;
              if (isFilled_9356218(allLinks_13715629[0].data[chckIndx(h_16070378, 0, (allLinks_13715629[0].data).length-1)].Field0)) {
              k_15535682 = allLinks_13715629[0].data[chckIndx(h_16070378, 0, (allLinks_13715629[0].data).length-1)].Field1;
              v_15535683 = allLinks_13715629[0].data[chckIndx(h_16070378, 0, (allLinks_13715629[0].data).length-1)]; v_15535683_Idx = "Field2";
              v_15535683[v_15535683_Idx].readOnly = true;
              if (eqStrings(v_15535683[v_15535683_Idx].name, [])) {
              v_15535683[v_15535683_Idx].name = nimCopy(null, makeNimstrLit("uknown!!!"), NTI113);
              }
              
              if (!((len_14170431(allLinks_13715629[0]) == L_16070376))) {
              failedAssertImpl_115480(makeNimstrLit("tables.nim(703, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_16070380 = addInt(res_16070380, 1);
            }
        } while(false);
      } while(false);
    } while(false);
    sort_15545080(allStreets_13725629[0], sortStreetTbl_15540222, 1);
    displayStreet_14925323((Tmp56 = HEX5BHEX5D_14985788(allLinks_13715629[0], clckLinkId_13765634[0]), Tmp56)[0][Tmp56[1]].name, true);
    if (!(hasKey_14485110(allSectors_13745629[0], sectName_13765636[0]))) {
    HEX5BHEX5DHEX3D_15547427(lastPostfix_13755629[0], postalCode_13765635[0], subInt((Tmp57 = HEX5BHEX5D_13970198(lastPostfix_13755629[0], postalCode_13765635[0]), Tmp57)[0][Tmp57[1]], 1));
    }
    
    sort_15610080(allSectors_13745629[0], sortSectorTbl_15605693, 1);
    redraw_13255414(kxi_12702284[0]);

  
}
    function HEX3Aanonymous_15612063(res_15612065) {
        var tiles_15620012 = (res_15612065.Tiles);
        L1: do {
          var k_15630229 = [];
          var v_15630230 = null;
          var L_16070314 = len_15620146(cachedTiles_13735629[0]);
          L2: do {
            var h_16070316 = 0;
            var colontmp__16070317 = 0;
            colontmp__16070317 = ((cachedTiles_13735629[0].data).length-1);
            var res_16070318 = 0;
            L3: do {
                L4: while (true) {
                if (!(res_16070318 <= colontmp__16070317)) break L4;
                  h_16070316 = res_16070318;
                  if (isFilled_9356218(cachedTiles_13735629[0].data[chckIndx(h_16070316, 0, (cachedTiles_13735629[0].data).length-1)].Field0)) {
                  k_15630229 = cachedTiles_13735629[0].data[chckIndx(h_16070316, 0, (cachedTiles_13735629[0].data).length-1)].Field1;
                  v_15630230 = cachedTiles_13735629[0].data[chckIndx(h_16070316, 0, (cachedTiles_13735629[0].data).length-1)].Field2;
                  tiles_15620012.push(v_15630230);;
                  if (!((len_15620146(cachedTiles_13735629[0]) == L_16070314))) {
                  failedAssertImpl_115480(makeNimstrLit("tables.nim(681, 13) `len(t) == L` the length of the table changed while iterating over it"));
                  }
                  
                  }
                  
                  res_16070318 = addInt(res_16070318, 1);
                }
            } while(false);
          } while(false);
        } while(false);
        parseTiles_15190250(tiles_15620012);

      
    }
    function HEX3Aanonymous_15630253(e_15630255) {
      
    }
    function HEX3Aanonymous_15630270(res_15630272) {
      BeforeRet: do {
        var layerObj_15635004 = res_15630272.Layers[0];
        var ePnt_15635005 = function(){return H.service.extension.platformData.Service.EntryPoint}();
        var ePntType_15635006 = function(){return H.service.extension.platformData.Service.EntryPointType}();
        var prmsPde_15640201 = {};
        var tXYs_15640218 = newSeq_650232(0);
        var layers_15640230 = [makeNimstrLit("ROAD_ADMIN_FC"), makeNimstrLit("ROAD_GEOM_FC"), makeNimstrLit("ROAD_NAME_FC"), makeNimstrLit("LINK_FC")];
        var rLayers_15640247 = newSeq_650232(0);
        var levels_15640264 = newSeq_650232(0);
        var tileXYs_15645012 = (layerObj_15635004.tileXYs);
        var level_15650010 = (layerObj_15635004.level);
        var allCrds_15650065 = newSeq_15650024(0);
        var prevTxys_15660629 = [initTable_15650072(32)];
        L1: do {
          var xy_15660637 = null;
          var xy_15660637_Idx = 0;
          var i_16070239 = 0;
          var L_16070240 = (tileXYs_15645012).length;
          L2: do {
              L3: while (true) {
              if (!(i_16070239 < L_16070240)) break L3;
                xy_15660637 = tileXYs_15645012; xy_15660637_Idx = chckIndx(i_16070239, 0, (tileXYs_15645012).length-1);
                var tx_15665010 = (xy_15660637[xy_15660637_Idx].x);
                var ty_15670010 = (xy_15660637[xy_15660637_Idx].y);
                var latlng_15670011 = getCoord_9891015(level_15650010, tx_15665010, ty_15670010);
                HEX5BHEX5DHEX3D_15670144(prevTxys_15660629[0], nsuJoinSep([cstrToNimstr((level_15650010)+""), cstrToNimstr((tx_15665010)+""), cstrToNimstr((ty_15670010)+"")], makeNimstrLit("_")), {Field0: level_15650010, Field1: tx_15665010, Field2: ty_15670010});
                allCrds_15650065.push({Field0: latlng_15670011["Field0"], Field1: latlng_15670011["Field1"]});;
                i_16070239 = addInt(i_16070239, 1);
                if (!(((tileXYs_15645012).length == L_16070240))) {
                failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);
        L4: do {
          var lvl_15745210 = 0;
          var res_16070248 = 10;
          L5: do {
              L6: while (true) {
              if (!(res_16070248 <= 13)) break L6;
                lvl_15745210 = res_16070248;
                L7: do {
                  var crd_15755214 = null;
                  var i_16070245 = 0;
                  var L_16070246 = (allCrds_15650065).length;
                  L8: do {
                      L9: while (true) {
                      if (!(i_16070245 < L_16070246)) break L9;
                        crd_15755214 = allCrds_15650065[chckIndx(i_16070245, 0, (allCrds_15650065).length-1)];
                        var txy_15755215 = getTileXY_9891113(lvl_15745210, crd_15755214["Field0"], crd_15755214["Field1"]);
                        var k_15755227 = nsuJoinSep([cstrToNimstr((lvl_15745210)+""), cstrToNimstr((txy_15755215["Field0"])+""), cstrToNimstr((txy_15755215["Field1"])+"")], makeNimstrLit("_"));
                        var _ = hasKeyOrPut_15760281(prevTxys_15660629[0], k_15755227, {Field0: lvl_15745210, Field1: txy_15755215["Field0"], Field2: txy_15755215["Field1"]});
                        i_16070245 = addInt(i_16070245, 1);
                        if (!(((allCrds_15650065).length == L_16070246))) {
                        failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  } while(false);
                } while(false);
                res_16070248 = addInt(res_16070248, 1);
              }
          } while(false);
        } while(false);
        L10: do {
          var lr_15790690 = null;
          var lr_15790690_Idx = 0;
          var i_16070271 = 0;
          var L_16070272 = (layers_15640230).length;
          L11: do {
              L12: while (true) {
              if (!(i_16070271 < L_16070272)) break L12;
                lr_15790690 = layers_15640230; lr_15790690_Idx = chckIndx(i_16070271, 0, (layers_15640230).length-1);
                L13: do {
                  var lvlTxTy_15800214 = {Field0: 0, Field1: 0, Field2: 0};
                  var L_16070263 = len_15790823(prevTxys_15660629[0]);
                  L14: do {
                    var h_16070265 = 0;
                    var colontmp__16070266 = 0;
                    colontmp__16070266 = ((prevTxys_15660629[0].data).length-1);
                    var res_16070267 = 0;
                    L15: do {
                        L16: while (true) {
                        if (!(res_16070267 <= colontmp__16070266)) break L16;
                          h_16070265 = res_16070267;
                          if (isFilled_9356218(prevTxys_15660629[0].data[chckIndx(h_16070265, 0, (prevTxys_15660629[0].data).length-1)].Field0)) {
                          nimCopy(lvlTxTy_15800214, prevTxys_15660629[0].data[chckIndx(h_16070265, 0, (prevTxys_15660629[0].data).length-1)].Field2, NTI15650067);
                          L17: do {
                            var xStr_15800215 = cstrToNimstr((lvlTxTy_15800214.Field1)+"");
                            var yStr_15800216 = cstrToNimstr((lvlTxTy_15800214.Field2)+"");
                            var level_15800217 = lvlTxTy_15800214.Field0;
                            var layerName_15800218 = (lr_15790690[lr_15790690_Idx] || []).concat(cstrToNimstr((subInt(level_15800217, 8))+"") || []);
                            if (hasKey_15800339(cachedTiles_13735629[0], nsuJoinSep([nimCopy(null, xStr_15800215, NTI113), nimCopy(null, yStr_15800216, NTI113), cstrToNimstr((level_15800217)+""), nimCopy(null, layerName_15800218, NTI113)], makeNimstrLit("_")))) {
                            break L17;
                            }
                            
                            tXYs_15640218.push((xStr_15800215 || []).concat(makeNimstrLit(",") || [],yStr_15800216 || []));;
                            levels_15640264.push(cstrToNimstr((level_15800217)+""));;
                            var Tmp18 = nimCopy(null, layerName_15800218, NTI113);
                            rLayers_15640247.push(Tmp18);;
                          } while(false);
                          if (!((len_15790823(prevTxys_15660629[0]) == L_16070263))) {
                          failedAssertImpl_115480(makeNimstrLit("tables.nim(745, 13) `len(t) == L` the length of the table changed while iterating over it"));
                          }
                          
                          }
                          
                          res_16070267 = addInt(res_16070267, 1);
                        }
                    } while(false);
                  } while(false);
                } while(false);
                i_16070271 = addInt(i_16070271, 1);
                if (!(((layers_15640230).length == L_16070272))) {
                failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);
        if (((rLayers_15640247).length == 0)) {
        var tiles_15800414 = newSeq_14320256(0);
        L19: do {
          var k_15800422 = [];
          var v_15800423 = null;
          var L_16070282 = len_15620146(cachedTiles_13735629[0]);
          L20: do {
            var h_16070284 = 0;
            var colontmp__16070285 = 0;
            colontmp__16070285 = ((cachedTiles_13735629[0].data).length-1);
            var res_16070286 = 0;
            L21: do {
                L22: while (true) {
                if (!(res_16070286 <= colontmp__16070285)) break L22;
                  h_16070284 = res_16070286;
                  if (isFilled_9356218(cachedTiles_13735629[0].data[chckIndx(h_16070284, 0, (cachedTiles_13735629[0].data).length-1)].Field0)) {
                  k_15800422 = cachedTiles_13735629[0].data[chckIndx(h_16070284, 0, (cachedTiles_13735629[0].data).length-1)].Field1;
                  v_15800423 = cachedTiles_13735629[0].data[chckIndx(h_16070284, 0, (cachedTiles_13735629[0].data).length-1)].Field2;
                  tiles_15800414.push(v_15800423);;
                  if (!((len_15620146(cachedTiles_13735629[0]) == L_16070282))) {
                  failedAssertImpl_115480(makeNimstrLit("tables.nim(681, 13) `len(t) == L` the length of the table changed while iterating over it"));
                  }
                  
                  }
                  
                  res_16070286 = addInt(res_16070286, 1);
                }
            } while(false);
          } while(false);
        } while(false);
        parseTiles_15190250(tiles_15800414);
        break BeforeRet;
        }
        
        prmsPde_15640201.layers = toJSStr(nsuJoinSep(rLayers_15640247, makeNimstrLit(",")));
        prmsPde_15640201.levels = toJSStr(nsuJoinSep(levels_15640264, makeNimstrLit(",")));
        prmsPde_15640201.tilexy = toJSStr(nsuJoinSep(tXYs_15640218, makeNimstrLit(",")));
        prmsPde_15640201.meta = 1;
        pdeService_14870035[0].request(ePnt_15635005.TILES, ePntType_15635006.JSON, prmsPde_15640201, onResRoadGeom_15630252, onErrRoadGeom_15630269);
      } while (false);

      
    }
    function HEX3Aanonymous_15825290(e_15825292) {
      
    }
    function HEX3Aanonymous_15825307(r_15825309) {
        var Tmp1;
          var Tmp5;
        var Tmp6;
        var Tmp7;
          var Tmp8;
        var Tmp9;
        var Tmp10;

      BeforeRet: do {
        var res_15825310 = r_15825309;
        var mapReference_15850004 = res_15825310.response.view[0].result[0].location.mapReference;
        var cityShape_15880010 = (res_15825310.response.view[0].result[0].location.shape.value);
        var cityGeo_15880011 = function(wkt){return new H.util.wkt.toGeometry(wkt)}(cityShape_15880010);
        var address_15905004 = res_15825310.response.view[0].result[0].location.address;
        var linkId_15910004 = mapReference_15850004.referenceId;
        clckLinkId_13765634[0] = (linkId_15910004);
        if ((cityGeo_15880011.getExterior === undefined)) {
        Tmp1 = cityGeo_15880011.getGeometries();
        }
        else {
        Tmp1 = [cityGeo_15880011];
        }
        
        var geoms_15915019 = nimCopy(null, Tmp1, NTI9680004);
        L2: do {
          var g_15930214 = null;
          var g_15930214_Idx = 0;
          var i_16070300 = 0;
          var L_16070301 = (geoms_15915019).length;
          L3: do {
              L4: while (true) {
              if (!(i_16070300 < L_16070301)) break L4;
                g_15930214 = geoms_15915019; g_15930214_Idx = chckIndx(i_16070300, 0, (geoms_15915019).length-1);
                var lnStr_15930219 = g_15930214[g_15930214_Idx].getExterior();
                var pOpt_15935201 = {style: {strokeColor: "rgba(0, 255, 255, 1)", fillColor: "rgba(0, 255, 255, 1)", lineWidth: 10, m_type: NTI9691076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, m_type: NTI9691081, zIndex: 0};
                var pl_15935202 = function(ls, options){return new H.map.Polyline(ls, options)}(lnStr_15930219, pOpt_15935201);
                if ((cityId_13765630[0] == 0)) {
                map.addObject(pl_15935202);
                }
                
                i_16070300 = addInt(i_16070300, 1);
                if (!(((geoms_15915019).length == L_16070301))) {
                failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);
        var revCityId_15940010 = parseInt(toJSStr(cstrToNimstr((mapReference_15850004.cityId))), 10);
        var revPostalCode_15945010 = cstrToNimstr((address_15905004.postalCode));
          if (!!((cityId_13765630[0] == 0))) Tmp5 = false; else {            Tmp5 = !((revCityId_15940010 == cityId_13765630[0]));          }        if (Tmp5) {
        break BeforeRet;
        }
        
        cityId_13765630[0] = revCityId_15940010;
        postalCode_13765635[0] = nimCopy(null, revPostalCode_15945010, NTI113);
        if ((mapReference_15850004.districtId)) {
        Tmp6 = parseInt(toJSStr(cstrToNimstr((mapReference_15850004.districtId))), 10);
        }
        else {
        Tmp6 = 0;
        }
        
        districtId_13765631[0] = Tmp6;
        addrCity_13765633[0] = nimCopy(null, cstrToNimstr((address_15905004.city)), NTI113);
          if ((address_15905004.district === undefined)) Tmp8 = true; else {            Tmp8 = eqStrings(cstrToNimstr((address_15905004.district)), addrCity_13765633[0]);          }        if (Tmp8) {
        Tmp7 = [];
        }
        else {
        Tmp7 = cstrToNimstr((address_15905004.district));
        }
        
        addrDistr_13765632[0] = nimCopy(null, Tmp7, NTI113);
        var _ = hasKeyOrPut_15985086(lastPostfix_13755629[0], postalCode_13765635[0], 0);
        HEX5BHEX5DHEX3D_15547427(lastPostfix_13755629[0], postalCode_13765635[0], addInt((Tmp9 = HEX5BHEX5D_13970198(lastPostfix_13755629[0], postalCode_13765635[0]), Tmp9)[0][Tmp9[1]], 1));
        var pFix_16016131 = (Tmp10 = HEX5BHEX5D_13970198(lastPostfix_13755629[0], postalCode_13765635[0]), Tmp10)[0][Tmp10[1]];
        var seqSectName_16016148 = newSeq_650232(0);
        seqSectName_16016148.push((postalCode_13765635[0] || []).concat(makeNimstrLit("-") || [],cstrToNimstr((pFix_16016131)+"") || []));;
        sectName_13765636[0] = nimCopy(null, nsuJoinSep(seqSectName_16016148, makeNimstrLit(" ")), NTI113);
        var ePnt_16020201 = function(){return H.service.extension.platformData.Service.EntryPoint}();
        var ePntType_16020202 = function(){return H.service.extension.platformData.Service.EntryPointType}();
        var prmsPde_16020203 = {};
        prmsPde_16020203.layer = "ROAD_GEOM_FCn";
        prmsPde_16020203.attributes = "LINK_ID";
        prmsPde_16020203.values = (linkId_15910004);
        var zKey_16035012 = (makeNimstrLit("z") || []).concat(addrCity_13765633[0] || [],makeNimstrLit("-1") || []);
        if (!(hasKey_14485110(allSectors_13745629[0], zKey_16035012))) {
        HEX5BHEX5DHEX3D_14035347(allSectors_13745629[0], zKey_16035012, {exclude: true, pFix: 1, city: [], postalCode: (makeNimstrLit("z") || []).concat(addrCity_13765633[0] || []), district: [], folkDistrict: [], streets: ({data: [], counter: 0, first: 0, last: 0}), shownOnMap: false});
        }
        
        pdeService_14870035[0].request(ePnt_16020201.INDEX, ePntType_16020202.JSON, prmsPde_16020203, onResIndexRoadGeom_15825289, onErrIndexRoadGeom_15825306);
      } while (false);

      
    }
    function HEX3Aanonymous_16035475(e_16035477) {
      
    }

    var pE_15175349 = e_13966056;
    mainGroup_14870008[0].removeAll();
    L1: do {
      var k_15190245 = 0;
      var v_15190246 = null;
      var v_15190246_Idx = 0;
      var L_16070223 = len_14170431(allLinks_13715629[0]);
      L2: do {
        var h_16070225 = 0;
        var colontmp__16070226 = 0;
        colontmp__16070226 = ((allLinks_13715629[0].data).length-1);
        var res_16070227 = 0;
        L3: do {
            L4: while (true) {
            if (!(res_16070227 <= colontmp__16070226)) break L4;
              h_16070225 = res_16070227;
              if (isFilled_9356218(allLinks_13715629[0].data[chckIndx(h_16070225, 0, (allLinks_13715629[0].data).length-1)].Field0)) {
              k_15190245 = allLinks_13715629[0].data[chckIndx(h_16070225, 0, (allLinks_13715629[0].data).length-1)].Field1;
              v_15190246 = allLinks_13715629[0].data[chckIndx(h_16070225, 0, (allLinks_13715629[0].data).length-1)]; v_15190246_Idx = "Field2";
              v_15190246[v_15190246_Idx].addedToMap = false;
              if (!((len_14170431(allLinks_13715629[0]) == L_16070223))) {
              failedAssertImpl_115480(makeNimstrLit("tables.nim(703, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_16070227 = addInt(res_16070227, 1);
            }
        } while(false);
      } while(false);
    } while(false);
    var geoPoint_15190247 = map.screenToGeo(pE_15175349.currentPointer.viewportX, pE_15175349.currentPointer.viewportY);
    var reverseGeocodingParameters_15190248 = {m_type: NTI13415047, jsonattributes: 0, mode: null, prox: null, maxResults: 0, additionaldata: null, locationattributes: null};
    reverseGeocodingParameters_15190248.jsonattributes = 1;
    reverseGeocodingParameters_15190248.prox = toJSStr((cstrToNimstr(nimFloatToString(geoPoint_15190247.lat)) || []).concat(makeNimstrLit(",") || [],cstrToNimstr(nimFloatToString(geoPoint_15190247.lng)) || [],makeNimstrLit(",1") || []));
    reverseGeocodingParameters_15190248.mode = "retrieveAddresses";
    reverseGeocodingParameters_15190248.maxResults = 1;
    reverseGeocodingParameters_15190248.additionaldata = "SuppressStreetType,Unnamed";
    reverseGeocodingParameters_15190248.locationattributes = "linkInfo";
    reverseGeocodingParameters_15190248.additionaldata = "IncludeShapeLevel,city";
    var rgcp_15190249 = reverseGeocodingParameters_15190248;
    var onResRoadGeom_15630252 = HEX3Aanonymous_15612063;
    var onErrRoadGeom_15630269 = HEX3Aanonymous_15630253;
    var onResIndexRoadGeom_15825289 = HEX3Aanonymous_15630270;
    var onErrIndexRoadGeom_15825306 = HEX3Aanonymous_15825290;
    var onResRevGeo_16035474 = HEX3Aanonymous_15825307;
    var onErrRevGeo_16035491 = HEX3Aanonymous_16035475;
    geocoder_14870034.reverseGeocode(reverseGeocodingParameters_15190248, onResRevGeo_16035474, onErrRevGeo_16035491);

  
}
function map_15075409(s_15075414, op_15075417) {
  var result_15075419 = [];

    result_15075419 = new Array(chckRange((s_15075414).length, 0, 2147483647)); for (var i=0;i<chckRange((s_15075414).length, 0, 2147483647);++i) {result_15075419[i]=[];}    L1: do {
      var i_15075442 = 0;
      var colontmp__16070506 = 0;
      colontmp__16070506 = (s_15075414).length;
      var i_16070507 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_16070507 < colontmp__16070506)) break L3;
            i_15075442 = i_16070507;
            result_15075419[chckIndx(i_15075442, 0, (result_15075419).length-1)] = nimCopy(null, op_15075417(s_15075414[chckIndx(i_15075442, 0, (s_15075414).length-1)]), NTI113);
            i_16070507 = addInt(i_16070507, 1);
          }
      } while(false);
    } while(false);

  return result_15075419;

}
function showBorder_15075380(hrCoord_15075382, sCol_15075383, latlon_15075384) {
    function HEX3Aanonymous_15075385(item_15075387) {
        function HEX3Aanonymous_15075389(item_15075391) {
          var result_15075392 = [];

            result_15075392 = nimCopy(null, nucStrip(item_15075391, true, true, unicodeSpaces_1844041), NTI113);

          return result_15075392;

        }

      var result_15075388 = [];

        result_15075388 = nimCopy(null, nsuJoinSep(map_15075409(nsuSplitString(item_15075387, makeNimstrLit(","), -1), HEX3Aanonymous_15075389), makeNimstrLit(",")), NTI113);

      return result_15075388;

    }

    var hrArrArea_15075514 = nsuSplitString(nsuJoinSep(map_15075409(nsuSplitString(hrCoord_15075382, makeNimstrLit(" "), -1), HEX3Aanonymous_15075385), makeNimstrLit(",")), makeNimstrLit(","), -1);
    var hrLnStr_15075515 = function(){return new H.geo.LineString();}();
    var iLat_15075517 = 0;
    var iLng_15075519 = 1;
    if (latlon_15075384) {
    iLat_15075517 = 1;
    iLng_15075519 = 0;
    }
    
    L1: do {
      var i_15075533 = 0;
      var colontmp__16070496 = 0;
      colontmp__16070496 = subInt(((hrArrArea_15075514).length-1), 3);
      var res_16070497 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_16070497 <= colontmp__16070496)) break L3;
            i_15075533 = res_16070497;
            hrLnStr_15075515.pushLatLngAlt(chckRange(parseFloat(toJSStr(hrArrArea_15075514[chckIndx(addInt(i_15075533, iLng_15075519), 0, (hrArrArea_15075514).length-1)])), -9.0000000000000000e+001, 9.0000000000000000e+001), chckRange(parseFloat(toJSStr(hrArrArea_15075514[chckIndx(addInt(i_15075533, iLat_15075517), 0, (hrArrArea_15075514).length-1)])), -1.8000000000000000e+002, 1.8000000000000000e+002), parseFloat(toJSStr(hrArrArea_15075514[chckIndx(addInt(i_15075533, 3), 0, (hrArrArea_15075514).length-1)])));
            res_16070497 = addInt(res_16070497, 3);
          }
      } while(false);
    } while(false);
    hrLnStr_15075515.pushLatLngAlt(chckRange(parseFloat(toJSStr(hrArrArea_15075514[chckIndx(iLng_15075519, 0, (hrArrArea_15075514).length-1)])), -9.0000000000000000e+001, 9.0000000000000000e+001), chckRange(parseFloat(toJSStr(hrArrArea_15075514[chckIndx(iLat_15075517, 0, (hrArrArea_15075514).length-1)])), -1.8000000000000000e+002, 1.8000000000000000e+002), parseFloat(toJSStr(hrArrArea_15075514[chckIndx(2, 0, (hrArrArea_15075514).length-1)])));
    var pOpt_15075534 = {style: {strokeColor: toJSStr(sCol_15075383), fillColor: toJSStr(sCol_15075383), lineWidth: 10, m_type: NTI9691076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, m_type: NTI9691081, zIndex: 0};
    var pl_15075535 = function(ls, options){return new H.map.Polyline(ls, options)}(hrLnStr_15075515, pOpt_15075534);
    map.addObject(pl_15075535);

  
}
function geoArea_15075554() {
    function showBorderDistrict_15075558(borderData_15075560, strokeColor_15075561, fillColor_15075562) {
        function HEX3Aanonymous_15080201(item_15080203) {
            function HEX3Aanonymous_15080205(item_15080207) {
              var result_15080208 = [];

                result_15080208 = nimCopy(null, nucStrip(item_15080207, true, true, unicodeSpaces_1844041), NTI113);

              return result_15080208;

            }

          var result_15080204 = [];

            result_15080204 = nimCopy(null, nsuJoinSep(map_15075409(nsuSplitString(item_15080203, makeNimstrLit(","), -1), HEX3Aanonymous_15080205), makeNimstrLit(",")), NTI113);

          return result_15080204;

        }
        function HEX3Aanonymous_15085201(e_15085203) {
          
        }
        strokeColor_15075561 = nimCopy(null, strokeColor_15075561, NTI113);
        fillColor_15075562 = nimCopy(null, fillColor_15075562, NTI113);
        function HEX3Aanonymous_15085218(r_15085220) {
            var res_15100004 = r_15085220.response.view[0].result[0];
            var loc_15100005 = res_15100004["location"];
            var shp_15115010 = cstrToNimstr((loc_15100005.shape.value));
            var pOpt_15115013 = {style: {strokeColor: toJSStr(strokeColor_15075561), fillColor: toJSStr(fillColor_15075562), lineWidth: 5, m_type: NTI9691076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, zIndex: -999, m_type: NTI9691085};
            var pl_15115019 = function(ls, opt){return new H.map.Polygon(ls, opt)}(function(wkt){return new H.util.wkt.toGeometry(wkt)}(toJSStr(shp_15115010)), pOpt_15115013);
            map.addObject(pl_15115019);

          
        }
                function HEX3Aanonymous_15120001() {
                    function HEX3Aanonymous_15120005(r_15120007) {
                        var Tmp1;

                        var res_15135004 = r_15120007.response.view[0].result[0];
                        var matchLvl_15140010 = cstrToNimstr((res_15135004.matchLevel));
                        var loc_15140011 = res_15135004["location"];
                        if ((loc_15140011.shape === undefined)) {
                        Tmp1 = makeNimstrLit("city");
                        }
                        else {
                        Tmp1 = makeNimstrLit("district");
                        }
                        
                        var typeShp_15150008 = nimCopy(null, Tmp1, NTI113);
                        var reverseGeocodingParameters_15150009 = {m_type: NTI13415047, jsonattributes: 0, mode: null, prox: null, maxResults: 0, additionaldata: null, locationattributes: null};
                        reverseGeocodingParameters_15150009.jsonattributes = 1;
                        reverseGeocodingParameters_15150009.prox = toJSStr((cstrToNimstr(nimFloatToString((loc_15140011.displayPosition.latitude))) || []).concat(makeNimstrLit(",") || [],cstrToNimstr(nimFloatToString((loc_15140011.displayPosition.longitude))) || [],makeNimstrLit(",1") || []));
                        reverseGeocodingParameters_15150009.mode = "retrieveAddresses";
                        reverseGeocodingParameters_15150009.locationattributes = "none";
                        reverseGeocodingParameters_15150009.maxResults = 1;
                        reverseGeocodingParameters_15150009.additionaldata = additionalData_15120004;
                        geocodingParameters_15075563.searchtext = toJSStr(c_15120003);
                        geocodingParameters_15075563.additionaldata = additionalData_15120004;
                        geocoder_14870034.reverseGeocode(reverseGeocodingParameters_15150009, onResGeoForMap_15115083, onErrGeo_15085217);

                      
                    }

                    var c_15120003 = nimCopy(null, arrCity_15115092[chckIndx(0, 0, (arrCity_15115092).length-1)], NTI113);
                    var additionalData_15120004 = geocodingParameters_15075563.additionaldata;
                    var onResGeo_15175274 = HEX3Aanonymous_15120005;
                    geocodingParameters_15075563.searchtext = toJSStr(arrCity_15115092[chckIndx(0, 0, (arrCity_15115092).length-1)]);
                    geocoder_14870034.geocode(geocodingParameters_15075563, onResGeo_15175274, onErrGeo_15085217);

                  
                }

        var geocodingParameters_15075563 = {m_type: NTI13415055, searchtext: null, jsonattributes: 0, country: null, state: null, additionaldata: null};
        geocodingParameters_15075563.jsonattributes = 1;
        geocodingParameters_15075563.searchtext = "";
        geocodingParameters_15075563.country = "DEU";
        geocodingParameters_15075563.state = "Hessen";
        geocodingParameters_15075563.additionaldata = "IncludeShapeLevel,district";
        var bordersStr_15075564 = nimCopy(null, borderData_15075560, NTI113);
        var arrArea_15080261 = nsuSplitString(nsuJoinSep(map_15075409(nsuSplitCharSet(bordersStr_15075564, ConstSet17, -1), HEX3Aanonymous_15080201), makeNimstrLit(",")), makeNimstrLit(","), -1);
        var onErrGeo_15085217 = HEX3Aanonymous_15085201;
        var onResGeoForMap_15115083 = HEX3Aanonymous_15085218;
        L1: do {
          var city_15115091 = null;
          var city_15115091_Idx = 0;
          var i_16070519 = 0;
          var L_16070520 = (arrArea_15080261).length;
          L2: do {
              L3: while (true) {
              if (!(i_16070519 < L_16070520)) break L3;
                city_15115091 = arrArea_15080261; city_15115091_Idx = chckIndx(i_16070519, 0, (arrArea_15080261).length-1);
                var arrCity_15115092 = nsuSplitString(city_15115091[city_15115091_Idx], makeNimstrLit(">"), -1);
                var isCity_15115100 = (((arrCity_15115092).length == 2) && eqStrings(arrCity_15115092[chckIndx(1, 0, (arrCity_15115092).length-1)], makeNimstrLit("city")));
                if (isCity_15115100) {
                geocodingParameters_15075563.additionaldata = "IncludeShapeLevel,city";
                }
                else {
                  geocodingParameters_15075563.additionaldata = "IncludeShapeLevel,district";
                }
                
                HEX3Aanonymous_15120001();
                i_16070519 = addInt(i_16070519, 1);
                if (!(((arrArea_15080261).length == L_16070520))) {
                failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);

      
    }

    var hrCoordReal_15075556 = makeNimstrLit("49.95856259839435,8.850124261434395,0.0 49.96396515545882,8.899470891953959,0.0 49.989107714500946,8.942093035419573,0.0 49.99375559635732,8.973836498540546,0.0 49.98852001928919,9.014720749471216,0.0 49.98595544705414,9.046298016450189,0.0 49.993374764204034,9.054906229836575,0.0 50.01241735811533,9.038966773881107,0.0 50.02965494688769,9.03186813780005,0.0 50.0384117586606,9.032281998108914,0.0 50.042818175748586,9.027509152282287,0.0 50.04441439462123,9.022565665862723,0.0 50.04644677958852,9.013523319190714,0.0 50.04425309054112,8.996242389995311,0.0 50.04241418571553,8.987752631175479,0.0 50.04476926168952,8.980317812800713,0.0 50.05134995729781,8.977353932502664,0.0 50.05405939323471,8.980217342282131,0.0 50.06044531552646,8.986546984952541,0.0 50.062896251887224,8.988757336361253,0.0 50.06734631621531,8.99182168717788,0.0 50.06673365070724,8.992977098141527,0.0 50.0668626335698,8.99398180332731,0.0 50.06718803495289,8.994414733080061,0.0 50.06771451792822,8.995464253486665,0.0 50.06829194422368,8.99569356046626,0.0 50.0688014322406,8.995790574957626,0.0 50.06906749605375,8.996778358869724,0.0 50.06879577129238,8.997378084816354,0.0 50.06905051330128,8.998956775175868,0.0 50.06930053266752,8.99941800765802,0.0 50.0695826597326,8.999881101814484,0.0 50.07118974475246,8.99940230955102,0.0 50.07246819127017,8.999262421160052,0.0 50.073681046891316,8.999278572803176,0.0 50.07593045003854,8.998761720223174,0.0 50.07685298579153,8.998697113650673,0.0 50.079516837714955,8.99906860144255,0.0 50.08036829651911,8.999048176213728,0.0 50.08163131412362,8.999132593752917,0.0 50.08380948509669,8.998839123161446,0.0 50.08398524097505,8.998457611392535,0.0 50.08529083589718,8.998731517277907,0.0 50.0858180853043,8.999103246693766,0.0 50.087745007018746,8.999113029046814,0.0 50.08994800500485,8.99887825257364,0.0 50.09095218700986,8.998614129041318,0.0 50.09268435151408,8.997880452562647,0.0 50.093989709477825,8.9992499819895,0.0 50.09529893546212,9.000556974921759,0.0 50.097739470199144,9.003266612926636,0.0 50.11201852058528,9.02981141216353,0.0 50.11661516874831,9.067234864827416,0.0 50.12025635598552,9.07282045477725,0.0 50.14215732616893,9.07477541125969,0.0 50.13214371793553,9.104686488157405,0.0 50.130002073318444,9.11819544464286,0.0 50.12962960360105,9.129525537179045,0.0 50.124042209958354,9.131849658724928,0.0 50.12329717485541,9.139257796152435,0.0 50.12525286726787,9.144487069630674,0.0 50.12804657496021,9.150297373495386,0.0 50.130455597090595,9.155493171369901,0.0 50.133915546952075,9.158535444434747,0.0 50.1367776800252,9.15868265119595,0.0 50.13741151788165,9.163817274408206,0.0 50.14339492987892,9.173004915543089,0.0 50.14755755017878,9.192392814174495,0.0 50.14648131805793,9.200345557307376,0.0 50.138180651937496,9.259625280641485,0.0 50.13309753499998,9.307707323856194,0.0 50.139325423584935,9.327568851365392,0.0 50.12993748742165,9.339142835021836,0.0 50.12858337744752,9.365496359295658,0.0 50.12641773051991,9.372735178643259,0.0 50.11574275323997,9.381663055838633,0.0 50.09423086055464,9.394210342707808,0.0 50.087113888846716,9.404106700966404,0.0 50.084234652636276,9.41068546866214,0.0 50.08332028837411,9.415072180815773,0.0 50.084109152691816,9.419263307077205,0.0 50.08422122075908,9.425175379748403,0.0 50.08359146921259,9.427138246524793,0.0 50.08359146921259,9.433746564671972,0.0 50.09022443676629,9.46096498397125,0.0 50.09085360543011,9.474022801340594,0.0 50.093517639965924,9.48311122533397,0.0 50.09417105978058,9.497057255254838,0.0 50.09552813400177,9.509122921590878,0.0 50.10598134317437,9.5205618000653,0.0 50.114221688388604,9.519935012203698,0.0 50.14498492404182,9.511705614500329,0.0 50.151057005957576,9.529820900852283,0.0 50.16355592364119,9.537067015393063,0.0 50.17319571327903,9.524804360016356,0.0 50.17694399525393,9.501393836115371,0.0 50.192469459564606,9.505852983525081,0.0 50.19496733876523,9.518673032328001,0.0 50.19962499700489,9.516589022864023,0.0 50.21399704559683,9.50504530922025,0.0 50.21870102145308,9.466106812451708,0.0 50.26614431812017,9.43139020351146,0.0 50.2704110296101,9.442662471130737,0.0 50.27772026972424,9.4554185495736,0.0 50.30061968660411,9.419174629647651,0.0 50.3134338989555,9.398350843677145,0.0 50.330902260659,9.396070867111032,0.0 50.34710327756438,9.365823178000584,0.0 50.41660380223247,9.344974529943373,0.0 50.42288128194858,9.245267930092574,0.0 50.42450902384603,9.234516048623957,0.0 50.421660438811095,9.224935164146977,0.0 50.415420082407365,9.218334999285055,0.0 50.40619370176144,9.159039969799737,0.0 50.39988345120526,9.134129670159584,0.0 50.38861790491299,9.116032443925288,0.0 50.38196590399061,9.085373613598946,0.0 50.373828204075195,9.060876585432112,0.0 50.374851912213195,9.039245421406951,0.0 50.37455942642779,9.033894956807094,0.0 50.36909604401242,9.032055311810234,0.0 50.34884219264727,9.036714437078075,0.0 50.34206593823363,9.028913111048201,0.0 50.338055046494205,9.028371352296126,0.0 50.32394508151426,9.03866476858554,0.0 50.31439772920148,9.016777715001732,0.0 50.30756222761449,9.006886141097945,0.0 50.30215231393127,8.999211834250447,0.0 50.30015521042514,8.987558257185748,0.0 50.29616075185897,8.975449906381932,0.0 50.29107641039998,8.972493877077715,0.0 50.27792723722931,8.94907302951354,0.0 50.27618342766435,8.937021525427118,0.0 50.274948190575785,8.92258245921037,0.0 50.25656116848032,8.893022166168203,0.0 50.24522017796395,8.85641288016981,0.0 50.23634884074695,8.855222008654989,0.0 50.22470113569143,8.860339308210316,0.0 50.20947108695584,8.860934343042329,0.0 50.20672916183294,8.839751103022607,0.0 50.20094013589099,8.796432567251937,0.0 50.197435910668744,8.790006191066185,0.0 50.1946134041465,8.79057185680632,0.0 50.18875997039989,8.791839840630303,0.0 50.18371958792864,8.791637049898368,0.0 50.17642594359777,8.789065201919588,0.0 50.17596274342498,8.78995123147805,0.0 50.17430232089517,8.792046274117968,0.0 50.17337983900064,8.792936667239935,0.0 50.173916557905876,8.7938270603619,0.0 50.173195340484554,8.794979333813854,0.0 50.17431909312838,8.796367299562801,0.0 50.17334629386889,8.798724222532709,0.0 50.17103162290417,8.799588427621675,0.0 50.16957231619278,8.79793858154274,0.0 50.16703939070253,8.793905624460896,0.0 50.16438890109903,8.794534137252873,0.0 50.16375141964782,8.79050118017103,0.0 50.16162082784406,8.789139402455083,0.0 50.16103364018217,8.79076306050102,0.0 50.1591545911941,8.790527368204028,0.0 50.1596579151296,8.787280052112155,0.0 50.15856737323834,8.783220906997313,0.0 50.157225133682765,8.783011402733322,0.0 50.1560842004315,8.7835875394593,0.0 50.15568151160696,8.781728189116372,0.0 50.138275414238024,8.77894862521831,0.0 50.13670242407733,8.77838227975314,0.0 50.13690217682525,8.784467717601034,0.0 50.13534508071917,8.794250560713733,0.0 50.13391419097039,8.802588957192343,0.0 50.13357750481077,8.81237180030504,0.0 50.13319873004944,8.816967766868055,0.0 50.12932663828693,8.816967766868055,0.0 50.12356000792097,8.817755646850285,0.0 50.12381257562391,8.812306143639855,0.0 50.12170780404554,8.807447550416098,0.0 50.120865869500825,8.806725327099054,0.0 50.11556134136147,8.803179867179015,0.0 50.11324568846011,8.805346537130145,0.0 50.106340167703365,8.80816977373314,0.0 50.10335027363762,8.817164736863607,0.0 50.100570768108895,8.819594033475484,0.0 50.09652756307581,8.818280900171766,0.0 50.090630610745976,8.820775853448833,0.0 50.08907200924542,8.82274555340441,0.0 50.08818737503363,8.82530616334666,0.0 50.0851963479583,8.842048612969064,0.0 50.07200832727764,8.835811229776404,0.0 50.07049126160658,8.824386970034057,0.0 50.069570879337796,8.78607195954587,0.0 50.0601144750599,8.77637532098599,0.0 50.048860122033034,8.752320198404746,0.0 50.01891548545801,8.76089799405387,0.0 50.01232515932821,8.762762732238464,0.0 50.00777131509019,8.767797525336864,0.0 50.00381631081293,8.766492208607648,0.0 50.002510604252436,8.768218421614016,0.0 50.00128762337993,8.775689982557171,0.0 50.002779059304025,8.78613160499326,0.0 50.00131196288862,8.790503627643895,0.0 49.99779764073278,8.794819888766732,0.0 49.99865804458652,8.799875040273319,0.0 50.00348400921596,8.811082687365706,0.0 50.00061646545155,8.81260605687341,0.0 50.00033669592648,8.815217547458044,0.0 49.99781869693746,8.815326359565736,0.0 49.99648969985931,8.811844372119557,0.0 49.99383159550032,8.813150117411876,0.0 49.994111402878666,8.819134783334993,0.0 49.98877967758542,8.820035779675596,0.0 49.98385558936126,8.814211125129365,0.0 49.97969399505043,8.814642581021678,0.0 49.9713003514494,8.818202092133264,0.0 49.96810899538112,8.812377437587031,0.0 49.96519496372066,8.813456077317817,0.0 49.962003202814614,8.82165373927177,0.0 49.96255830686967,8.839127702910474,0.0 49.96380726759058,8.846246725133646,0.0");
    var hrCoord_15075557 = makeNimstrLit("8.74344999062572,50.04918999904961,0 8.751160000623477,50.0240599912103,0 8.754709994364463,50.01274999536513,0 8.757490069155791,50.00470163525198,0 8.762733428456755,50.00328437886608,0 8.764625619546589,50.00285518138227,0 8.770820082372893,50.00139911723744,0 8.772673791350965,50.00094266817716,0 8.77914111075552,49.99943225272401,0 8.799229992240086,49.99467000542582,0 8.806542356164457,49.99340340620989,0 8.809790356707138,49.99206374565822,0 8.826786125387034,49.98576635583486,0 8.828778769472731,49.98395187720181,0 8.831507689809753,49.98097186169272,0 8.830959149889964,49.97966245881608,0 8.829928960125969,49.9778595543125,0 8.830465197667758,49.9768960693446,0 8.830997048231009,49.97595153004782,0 8.83394675737425,49.97397788936575,0 8.836460977629683,49.97217362668664,0 8.83910802473485,49.96908500881526,0 8.840122212590229,49.96799437118023,0 8.841363208739749,49.9668289258026,0 8.842263170839054,49.96603842183582,0 8.843115976927399,49.96501359037988,0 8.846351833332184,49.9627537294549,0 8.849460013049532,49.95986999442856,0 8.850210000098501,49.95926998619805,0 8.850310012566743,49.95926999267505,0 8.865430008710506,49.95390999382382,0 8.891260000848778,49.94599000213314,0 8.908000004981322,49.96970998840088,0 8.960089986326672,49.98685999774121,0 9.028550004173386,49.98896999905399,0 9.051090005623092,49.98967000446294,0 9.063509599805697,49.99349370576994,0 9.058420003685276,50.00014000125238,0 9.053349983587822,50.00350000123728,0 9.043370001095513,50.00774999264858,0 9.039590003958708,50.01043999620001,0 9.037680002386232,50.0117099996073,0 9.035770000347792,50.01386000058577,0 9.035669991374673,50.01396999599814,0 9.033520003630585,50.01612999279517,0 9.03276999394412,50.01722999549925,0 9.031890007343058,50.01854999140686,0 9.031080010354554,50.02017000106182,0 9.030590017083911,50.02186000123651,0 9.030160003507783,50.02427999548287,0 9.030019994132037,50.02558000112721,0 9.03012998938997,50.02655999787962,0 9.030250000259972,50.02768999624666,0 9.03161000235999,50.03279999301565,0 9.032170004807355,50.0358999942769,0 9.032050012345229,50.03739999588439,0 9.031490007969513,50.03882000226924,0 9.030510014244126,50.04000000228209,0 9.029080001550227,50.04103999783368,0 9.029060008563725,50.04106000232493,0 9.028230008798136,50.04156999577097,0 9.026240009262718,50.04279999711334,0 9.024160016072742,50.04365000084064,0 9.023260013005588,50.04386000537015,0 9.019740018159242,50.04436999886058,0 9.017760016210493,50.04465999781608,0 9.013460007365307,50.04553999270155,0 9.011000004708681,50.04575999839583,0 9.00992999888183,50.04561998877342,0 9.008480008624115,50.04557998927629,0 9.005680013424682,50.04550000056366,0 8.986750005661659,50.04149000275402,0 8.978420013141989,50.04530999078934,0 8.976519982950132,50.0514200003693,0 8.982709988738773,50.05690999839843,0 8.986820008613575,50.06226000595279,0 8.987800012679832,50.06321000762544,0 8.989760009887313,50.06513000580236,0 8.990918897321578,50.0669106073983,0 8.9955775301496,50.06892022836311,0 8.998568988963262,50.06893433107653,0 8.999404770882135,50.06967750682338,0 8.99907863971808,50.070980702649,0 8.998540008233778,50.07845000669163,0 8.999480727122569,50.07942879191786,0 8.998936147196799,50.08570047236539,0 8.997979981825159,50.09309999923527,0 9.009470009726822,50.10552999340482,0 9.014060011409995,50.1093099951841,0 9.018390009198136,50.11148999968705,0 9.022280002796611,50.11211998982098,0 9.030180002730933,50.11276999957308,0 9.036709983650752,50.11439000225139,0 9.03690999604585,50.11440999933917,0 9.03949998805237,50.11470999733926,0 9.041409993836245,50.11494000056713,0 9.043569987178085,50.11518999631258,0 9.047210001617215,50.1158499945509,0 9.05294999694393,50.11569999345475,0 9.055779984887241,50.11657998906307,0 9.062110001201511,50.11675000135271,0 9.065399990762362,50.11700000561905,0 9.071007549127517,50.11922371673292,0 9.076630005563471,50.1161700007584,0 9.077190003068765,50.115860002529,0 9.090149996865359,50.11705999751791,0 9.097210008411061,50.12491999822693,0 9.097229998645521,50.12493000896303,0 9.097450000598039,50.12500001156322,0 9.100480005609697,50.12522999907779,0 9.101720017827175,50.12503999964554,0 9.104050013666759,50.12524999543405,0 9.106250000414615,50.1255599977141,0 9.106320013833074,50.12556999995883,0 9.11103000773252,50.12645000491829,0 9.112480002104718,50.12650000158009,0 9.118190018941625,50.12683999405951,0 9.11824001589531,50.12684999758118,0 9.119370021092625,50.12667000066124,0 9.120230000806123,50.12640000226687,0 9.121240007930481,50.12608999931724,0 9.122669997795143,50.1251799912294,0 9.125470008557192,50.12341000006478,0 9.129070017631035,50.12185001116103,0 9.134449996804847,50.11918999923478,0 9.134810008978569,50.11920999602372,0 9.134890001642818,50.11917000907523,0 9.138790008249355,50.11738000700088,0 9.143799995794254,50.11436000115628,0 9.153480013609004,50.1177800012857,0 9.174246170565004,50.11909431140469,0 9.178573419936008,50.12093255348469,0 9.187279993149794,50.12424999394975,0 9.190869996641968,50.12840999555607,0 9.190140006470225,50.12852999126118,0 9.189239992099489,50.12886999244492,0 9.18859001078415,50.13008000182714,0 9.188529991233642,50.13068000290921,0 9.188270001636816,50.13122999393559,0 9.187689999246999,50.13169000225765,0 9.186230008527531,50.13220000137167,0 9.184630011698792,50.13358999951587,0 9.184889997736651,50.13418000049787,0 9.184539995171448,50.13461999983619,0 9.183930004443509,50.13530000248941,0 9.183950002803973,50.135519998149,0 9.183550012978392,50.13613999783406,0 9.183569996231322,50.13690999406499,0 9.18340000738119,50.13743999921365,0 9.183380014260379,50.13787000106181,0 9.190900001716518,50.139159993859,0 9.193700011750751,50.13930999759451,0 9.19464001127551,50.13981000038044,0 9.195470000586393,50.14028998889953,0 9.196120007766066,50.14010998828039,0 9.196500004917223,50.14001998961674,0 9.197040001756861,50.14030999242293,0 9.199190010294648,50.14073999922731,0 9.200440003999781,50.14084998669727,0 9.201030013515277,50.14057999207999,0 9.203099982949214,50.14095000662204,0 9.205299986371029,50.14180000860304,0 9.206359985346644,50.142070008102,0 9.207580000543322,50.14207999782826,0 9.209859987405412,50.14242999853374,0 9.210280003353484,50.1423899976447,0 9.210799991009644,50.14220999766564,0 9.21077998816282,50.1435000057295,0 9.211479992867652,50.14477000460019,0 9.214099996581536,50.14445000468506,0 9.218959999344854,50.14661000455769,0 9.221479995862085,50.14939999389495,0 9.225630001631478,50.14855000094843,0 9.23032000616189,50.14765999014259,0 9.232970002625747,50.14675999789494,0 9.233769992622126,50.14662999691726,0 9.235819988502438,50.14626998818617,0 9.240770008871321,50.14369999990418,0 9.250599997697448,50.14088999946022,0 9.253009998704444,50.13936000061953,0 9.257409988922282,50.13877999779094,0 9.258539987369192,50.13882999185971,0 9.261029985191303,50.13894999352718,0 9.26667000168456,50.13956998800712,0 9.270219998473655,50.14184999133448,0 9.271399995864714,50.14201999982645,0 9.276349996686779,50.14272000476213,0 9.281169993334959,50.14154000700376,0 9.281790004285499,50.14151999702619,0 9.28505000417664,50.14177000501881,0 9.294040000079619,50.13933999639883,0 9.298069993519123,50.13708999386204,0 9.304220003766982,50.13527001045085,0 9.307460002912588,50.13401000172517,0 9.3099899963248,50.13394000197258,0 9.313210010638157,50.13483999891268,0 9.317820007007097,50.13657000315733,0 9.32087000656426,50.13792000208673,0 9.327880001083775,50.14102000396739,0 9.332359997806428,50.13920999562789,0 9.335839993928891,50.13698998995007,0 9.336390008811645,50.13671999110127,0 9.339360000403303,50.13273000018819,0 9.341829993133189,50.1314900069315,0 9.349580011888042,50.13060000490764,0 9.357900000002719,50.1309800011009,0 9.364500003588615,50.1308599976779,0 9.373790012600809,50.13085001035299,0 9.374940014378062,50.13078000272372,0 9.376428136780461,50.13060459037479,0 9.375980001360301,50.12583000875451,0 9.380379996288745,50.12133000326065,0 9.382299998223088,50.11936999839725,0 9.384039990002806,50.11687999723922,0 9.386960003003646,50.1104799943284,0 9.392690004434337,50.10208999192354,0 9.39389999043634,50.09908999048587,0 9.39441999471242,50.09769998717655,0 9.395280005887983,50.09654000569314,0 9.398049991407143,50.09346000849757,0 9.399579989575344,50.09215000204925,0 9.401979985879303,50.08986000850655,0 9.404899991283124,50.08774999576386,0 9.408080014793335,50.08628000072305,0 9.410360008182412,50.08474000191088,0 9.412109999917282,50.08400999347561,0 9.414540018844249,50.08372999722369,0 9.416490008385686,50.08366999838898,0 9.419320007524787,50.08447000100686,0 9.421189997530622,50.08477000057801,0 9.421729983690359,50.0848199989533,0 9.422609992020972,50.0848999888351,0 9.424210000439418,50.08487999332674,0 9.426209991743331,50.08466000872539,0 9.426650001161059,50.08445000438933,0 9.427099982830001,50.08406000313204,0 9.427139990696315,50.08406000087415,0 9.427652721408091,50.08399998652941,0 9.433353179705726,50.08402470953537,0 9.435354143826626,50.08505389047933,0 9.436088619491672,50.08522879361796,0 9.438430526576967,50.08697187563428,0 9.440104382080714,50.08699613917442,0 9.445369991346254,50.08990999762638,0 9.447630008726817,50.08999999740072,0 9.450919994621692,50.09031000114513,0 9.452070007349786,50.0907899928403,0 9.454410007723135,50.09108999360934,0 9.460950000938215,50.09060999515631,0 9.462300008199286,50.0910400032701,0 9.463400013428359,50.09106000139991,0 9.464200003484436,50.09124000726924,0 9.465530012619313,50.09153000694008,0 9.468800008351925,50.09136999634158,0 9.470470017914517,50.09143000256835,0 9.472329999587991,50.09161000390467,0 9.473620019051696,50.09215000133324,0 9.474920003056653,50.09292999912699,0 9.476870017014669,50.09377000009614,0 9.478919993936698,50.09430999575569,0 9.481419984146658,50.0947799948108,0 9.483559984403359,50.09436999910113,0 9.485509981915525,50.09412999558609,0 9.48570999585527,50.09412000396971,0 9.487359987494594,50.09400999892856,0 9.490429987404328,50.09412999491645,0 9.493209983692267,50.09459999267533,0 9.495159986345893,50.09531999217066,0 9.496829992324216,50.09657999894574,0 9.498319988002368,50.09723999301944,0 9.49989998994757,50.09718000287389,0 9.501569988519432,50.09664000069188,0 9.502680008048856,50.09603999797577,0 9.504629999438921,50.09574000956214,0 9.506760006872188,50.09622000084823,0 9.507140003812562,50.09742000406875,0 9.507229996886643,50.09819000714014,0 9.50669001130621,50.09907000222062,0 9.507150006893196,50.09931999902311,0 9.50923999463094,50.09956000551333,0 9.512149998788429,50.09941000120356,0 9.512820008669731,50.0990800014653,0 9.513100009864747,50.09966999606637,0 9.518980005320945,50.10612000219624,0 9.523749987770032,50.10609999798064,0 9.509789996972424,50.14568999412518,0 9.510159999038692,50.17993000361417,0 9.523900010995279,50.20862999333181,0 9.497610010511844,50.23025999464183,0 9.465759992135864,50.23500999995167,0 9.427309998664841,50.28948999496187,0 9.39269000551494,50.33608999941583,0 9.354189991318192,50.3790699957637,0 9.352780014398681,50.43896001016936,0 9.340660001490294,50.4547299998002,0 9.312470000603268,50.45978998838441,0 9.299499989859983,50.45929999898711,0 9.289360011907432,50.45382000673616,0 9.262010012800003,50.40678999774384,0 9.261579990204883,50.37911000208434,0 9.163230003564165,50.3586100105654,0 9.131989998719183,50.34574999621018,0 9.062800000324119,50.32285000000135,0 9.054520002404079,50.31968000467632,0 9.043719996102452,50.32165000058219,0 9.029761680801087,50.32841918451295,0 9.031495109187416,50.31272183455483,0 8.995839452582921,50.30250677011594,0 8.987631336027818,50.30006956026648,0 8.975659492935346,50.29547621167906,0 8.958677331367527,50.28630458701393,0 8.94929415829554,50.28125262914848,0 8.925608601416379,50.27595619488345,0 8.912707196248872,50.26838770369456,0 8.900321281931532,50.26109642163877,0 8.883946027953995,50.2514976812132,0 8.857519269942278,50.24799938088881,0 8.843243933535447,50.24615324039392,0 8.843337919829239,50.24519622029486,0 8.844352709690199,50.23641778130721,0 8.848844132593994,50.23205190395576,0 8.859845616898108,50.22335260208263,0 8.858916319673716,50.22092275483271,0 8.854913957622637,50.21029795607451,0 8.828012506624319,50.20845601508016,0 8.792170003634453,50.19689999140842,0 8.792079997664727,50.19360999114326,0 8.792090007857588,50.19360999589294,0 8.792080005707826,50.1933399969401,0 8.792139995449546,50.18931998969914,0 8.792109992014069,50.18893999697589,0 8.792080000426376,50.18849999434099,0 8.792679986357536,50.18761999891223,0 8.792780002183326,50.18624999797653,0 8.792809992943038,50.1838499994514,0 8.78973001669163,50.17977998885446,0 8.789990009297167,50.17618999887759,0 8.790029994197257,50.17608999350487,0 8.790400013363707,50.1756399975125,0 8.795660002988884,50.17271001146669,0 8.800430009638776,50.17120000991109,0 8.800030003318794,50.17109000869478,0 8.80016999786298,50.17019999937831,0 8.800160007579409,50.16933000575472,0 8.798210009160762,50.16943000004811,0 8.798119992086578,50.16853000305719,0 8.797839987310598,50.16741000349072,0 8.795570001629894,50.16727000126137,0 8.794420002285929,50.16686998641285,0 8.794869986905674,50.16460000764227,0 8.794839990093175,50.16445000317964,0 8.795069987661732,50.1639400006493,0 8.794959989515347,50.16379001174276,0 8.794649984336918,50.1638499933831,0 8.793969990776221,50.1630399881526,0 8.791709999964247,50.16336999710949,0 8.790470002191894,50.16343999740508,0 8.790340002022822,50.16295999319533,0 8.789559999991919,50.16145999765807,0 8.790999987988663,50.16111999166834,0 8.790610009406777,50.15989999880812,0 8.790650015217244,50.1588999906634,0 8.789859999743616,50.15894999130114,0 8.789490009437273,50.1588699891094,0 8.787180014898484,50.1593899986436,0 8.786940002233044,50.15923998964287,0 8.786050003904881,50.15883999909401,0 8.785669999219367,50.15878999189965,0 8.785020015562498,50.15871999044146,0 8.783420004936072,50.15842000281186,0 8.783420004789116,50.15770999268128,0 8.783470016746801,50.15722999454914,0 8.783580009619461,50.15699999220811,0 8.784100012663544,50.15583999017743,0 8.782219996826949,50.15551999603872,0 8.782360012243217,50.15504999142234,0 8.782400002741433,50.15412000308445,0 8.782440000873432,50.1538799934948,0 8.782640002335953,50.15348999380655,0 8.782690004419679,50.15288999409114,0 8.782599997613589,50.15168999527978,0 8.782499994394218,50.15002000083744,0 8.782429997799444,50.14841999909195,0 8.782339993684557,50.14642999456324,0 8.782259999824177,50.14484999042134,0 8.782299991382095,50.14447000212288,0 8.782329990151951,50.14413999428914,0 8.782350006299202,50.14389999847396,0 8.782369988407282,50.14374000265145,0 8.78239000173469,50.14349999358076,0 8.782439996314656,50.14299999406526,0 8.782439988694478,50.1429199972104,0 8.782470000856153,50.14267999368212,0 8.782480003228939,50.14251999070935,0 8.782579988275536,50.14241999306769,0 8.783599991220438,50.14111999489931,0 8.784448782893042,50.1405347806952,0 8.784710985537078,50.14005921419489,0 8.784836043163592,50.13976715250182,0 8.784909988556111,50.13939000291317,0 8.784920000629107,50.13928999326227,0 8.784719982911794,50.13919999095377,0 8.77993000857648,50.13822000388137,0 8.779900001379451,50.13804999861398,0 8.779870002850776,50.13781999822846,0 8.779780007883684,50.13723999143221,0 8.781680019517596,50.13739999790258,0 8.785470012109293,50.13728999853527,0 8.790470012031696,50.13658999710204,0 8.795220001648541,50.13552000122132,0 8.796740008487991,50.13528000323189,0 8.79849000489105,50.13476000552564,0 8.801570014121655,50.13428000627525,0 8.809370015405136,50.13413999475548,0 8.806000008358936,50.12600000470178,0 8.800339551601194,50.11398120331311,0 8.798730684364719,50.11222326889193,0 8.803275711144671,50.10682728967874,0 8.806256200740775,50.10212970751106,0 8.809628959422538,50.09681686079544,0 8.812426567410549,50.0923736430835,0 8.814529068369041,50.08870301933311,0 8.815564740819466,50.08674190292712,0 8.816983190135087,50.08430003950284,0 8.816736771584527,50.08396773922301,0 8.819257293064814,50.08161630263398,0 8.825500005361317,50.07011000106249,0 8.825430011347251,50.06916000981824,0 8.825340007617122,50.06887000547547,0 8.825010007651045,50.06831000400231,0 8.824340007935508,50.06807000324666,0 8.824190003312365,50.0678600107172,0 8.823980000479738,50.06767000416784,0 8.823560009647329,50.06769000265334,0 8.819140000891526,50.06794999086822,0 8.784360013267232,50.06681998757962,0 8.778350008752462,50.05852000117123,0 8.769430002590275,50.05571000525481,0 8.74344999062572,50.04918999904961,0");
    showBorder_15075380(hrCoordReal_15075556, makeNimstrLit("rgba(255, 0, 0, 1)"), true);
    showBorderDistrict_15075558(makeNimstrLit("63688 Ober-Seemen,63697 Merkenfritz,63697 Hirzenhain,63683 Li\xC3\x9Fberg,63683 Eckartsborn,63691 Bobenhausen,63683 Wippenbach,63683 Selters (Ortenberg),63683 Bleichenbach,63654 B\xC3\xBCdingen>city,63674 Enzheim,63674 Lindheim,63674 Oberau,63674 H\xC3\xB6chst,61130 Eichen,61130 Nidderau Heldenbergen,61130 Windecken,61137 Sch\xC3\xB6neck,61137 Oberdorfelden,61138 Niederdorfelden>city,63477 Maintal>city,63165 M\xC3\xBChlheim am Main>city,63075 Waldheim,63179 Obertshausen>city,63150 Heusenstamm>city,63128 Dietzenbach,63322 Waldacker,63322 R\xC3\xB6dermark Ober-Roden,63110 Rodgau>city,63533 Mainhausen>city,63538 Gro\xC3\x9Fkrotzenburg>city,63517 Rodenbach>city,63579 Neuses,63579 Horbach,63589 Waldrode,63599 Biebergem\xC3\xBCnd>city,63639 Fl\xC3\xB6rsbachtal>city,63637 Pfaffenhausen>city,63628 Alsberg,63628 Kerbersdorf,63628 Sch\xC3\xB6nhof,63633 Wettges"), makeNimstrLit("rgba(255, 0, 0, 1)"), makeNimstrLit("rgba(255, 0, 0, 0)"));

  
}
function HEX3Aanonymous_16045246(e_16045249) {
    map.getViewPort().resize();

  
}
map.addEventListener("tap", loadLinks_13966053, false);
geoArea_15075554();
window.addEventListener("resize", HEX3Aanonymous_16045246, false);
function mustRehash_15035601(t_15035604) {
  var result_15035605 = false;

    if (!((t_15035604.counter < (t_15035604.data).length))) {
    failedAssertImpl_115480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_15035605 = ((mulInt((t_15035604.data).length, 2) < mulInt(t_15035604.counter, 3)) || (subInt((t_15035604.data).length, t_15035604.counter) < 4));

  return result_15035605;

}
function rawInsert_15061122(t_15061128, data_15061131, data_15061131_Idx, key_15061132, val_15061134, hc_15061135, h_15061136) {
    data_15061131[data_15061131_Idx][chckIndx(h_15061136, 0, (data_15061131[data_15061131_Idx]).length-1)].Field1 = key_15061132;
    data_15061131[data_15061131_Idx][chckIndx(h_15061136, 0, (data_15061131[data_15061131_Idx]).length-1)].Field2 = val_15061134;
    data_15061131[data_15061131_Idx][chckIndx(h_15061136, 0, (data_15061131[data_15061131_Idx]).length-1)].Field0 = hc_15061135;

  
}
function enlarge_15060161(t_15060167) {
    var n_15060175 = [];
    n_15060175 = new Array(chckRange(mulInt((t_15060167.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_15060167.data).length, 2), 0, 2147483647);++i) {n_15060175[i]={Field0: 0, Field1: null, Field2: null};}    var Tmp1 = t_15060167.data; t_15060167.data = n_15060175; n_15060175 = Tmp1;    L2: do {
      var i_15060334 = 0;
      var colontmp__16070554 = 0;
      colontmp__16070554 = ((n_15060175).length-1);
      var res_16070555 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_16070555 <= colontmp__16070554)) break L4;
            i_15060334 = res_16070555;
            var eh_15060490 = n_15060175[chckIndx(i_15060334, 0, (n_15060175).length-1)].Field0;
            if (isFilled_9356218(eh_15060490)) {
            var j_15060497 = (eh_15060490 & ((t_15060167.data).length-1));
            L5: do {
                L6: while (true) {
                if (!isFilled_9356218(t_15060167.data[chckIndx(j_15060497, 0, (t_15060167.data).length-1)].Field0)) break L6;
                  j_15060497 = nextTry_9360014(j_15060497, ((t_15060167.data).length-1));
                }
            } while(false);
            rawInsert_15061122(t_15060167, t_15060167, "data", n_15060175[chckIndx(i_15060334, 0, (n_15060175).length-1)].Field1, n_15060175[chckIndx(i_15060334, 0, (n_15060175).length-1)].Field2, eh_15060490, j_15060497);
            }
            
            res_16070555 = addInt(res_16070555, 1);
          }
      } while(false);
    } while(false);

  
}
function rawGetKnownHC_15061629(t_15061633, key_15061634, hc_15061635) {
  var result_15061636 = 0;

  BeforeRet: do {
    if (((t_15061633.data).length == 0)) {
    result_15061636 = -1;
    break BeforeRet;
    }
    
    var h_15065138 = (hc_15061635 & ((t_15061633.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_9356218(t_15061633.data[chckIndx(h_15065138, 0, (t_15061633.data).length-1)].Field0)) break L2;
          if (((t_15061633.data[chckIndx(h_15065138, 0, (t_15061633.data).length-1)].Field0 == hc_15061635) && (t_15061633.data[chckIndx(h_15065138, 0, (t_15061633.data).length-1)].Field1 == key_15061634))) {
          result_15061636 = h_15065138;
          break BeforeRet;
          }
          
          h_15065138 = nextTry_9360014(h_15065138, ((t_15061633.data).length-1));
        }
    } while(false);
    result_15061636 = subInt(-1, h_15065138);
  } while (false);

  return result_15061636;

}
function HEX5BHEX5DHEX3D_15005975(t_15005981, key_15005982, val_15005984) {
    if (((t_15005981.data).length == 0)) {
    var correctSizeHEX60gensym255_15015001 = slotsNeeded_9360048(32);
    t_15005981.counter = 0;
    t_15005981.data = new Array(chckRange(correctSizeHEX60gensym255_15015001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym255_15015001, 0, 2147483647);++i) {t_15005981.data[i]={Field0: 0, Field1: null, Field2: null};}    }
    
    var hc_15020601 = [0];
    var index_15020610 = rawGet_13995378(t_15005981, key_15005982, hc_15020601, 0);
    if ((0 <= index_15020610)) {
    t_15005981.data[chckIndx(index_15020610, 0, (t_15005981.data).length-1)].Field2 = val_15005984;
    }
    else {
      if (((t_15005981.data).length == 0)) {
      var correctSizeHEX60gensym258_15030001 = slotsNeeded_9360048(32);
      t_15005981.counter = 0;
      t_15005981.data = new Array(chckRange(correctSizeHEX60gensym258_15030001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym258_15030001, 0, 2147483647);++i) {t_15005981.data[i]={Field0: 0, Field1: null, Field2: null};}      }
      
      if (mustRehash_15035601(t_15005981)) {
      enlarge_15060161(t_15005981);
      index_15020610 = rawGetKnownHC_15061629(t_15005981, key_15005982, hc_15020601[0]);
      }
      
      index_15020610 = subInt(-1, index_15020610);
      rawInsert_15061122(t_15005981, t_15005981, "data", key_15005982, val_15005984, hc_15020601[0], index_15020610);
      t_15005981.counter = addInt(t_15005981.counter, 1);
    }
    

  
}
function displaySector_14455263(sectName_14455265, show_14455266) {
    var Tmp1;
    var Tmp2;
    var Tmp3;
    var Tmp4;
                    var Tmp14;
    var Tmp15;

  BeforeRet: do {
    var sector_15005531 = (Tmp1 = HEX5BHEX5D_14105843(allSectors_13745629[0], sectName_14455265), Tmp1)[0][Tmp1[1]];
    if (!(show_14455266)) {
    mainSectorGroup_14870009[0].removeObject((Tmp2 = HEX5BHEX5D_13995367(sectorGrp_13765629[0], sector_15005531), Tmp2)[0][Tmp2[1]]);
    (Tmp3 = HEX5BHEX5D_13995367(sectorGrp_13765629[0], sector_15005531), Tmp3)[0][Tmp3[1]].removeAll();
    sector_15005531.shownOnMap = false;
    break BeforeRet;
    }
    
    HEX5BHEX5DHEX3D_15005975(sectorGrp_13765629[0], sector_15005531, function(){return new H.map.Group()}());
    (Tmp4 = HEX5BHEX5D_13995367(sectorGrp_13765629[0], sector_15005531), Tmp4)[0][Tmp4[1]].setZIndex(-99);
    sector_15005531.shownOnMap = true;
    L5: do {
      var n_15065847 = [];
      var links_15065848 = [];
      var L_16070548 = len_14310548(sector_15005531.streets);
      if ((0 < sector_15005531.streets.counter)) {
      var h_16070549 = sector_15005531.streets.first;
      L6: do {
          L7: while (true) {
          if (!(0 <= h_16070549)) break L7;
            var nxt_16070551 = sector_15005531.streets.data[chckIndx(h_16070549, 0, (sector_15005531.streets.data).length-1)].Field1;
            if (isFilled_9356218(sector_15005531.streets.data[chckIndx(h_16070549, 0, (sector_15005531.streets.data).length-1)].Field0)) {
            n_15065847 = sector_15005531.streets.data[chckIndx(h_16070549, 0, (sector_15005531.streets.data).length-1)].Field2;
            links_15065848 = sector_15005531.streets.data[chckIndx(h_16070549, 0, (sector_15005531.streets.data).length-1)].Field3;
            L8: do {
              var link_15065856 = null;
              var link_15065856_Idx = 0;
              var i_16070545 = 0;
              var L_16070546 = (links_15065848).length;
              L9: do {
                  L10: while (true) {
                  if (!(i_16070545 < L_16070546)) break L10;
                    link_15065856 = links_15065848; link_15065856_Idx = chckIndx(i_16070545, 0, (links_15065848).length-1);
                    var lnStr_15065857 = function(){return new H.geo.LineString();}();
                    L11: do {
                      var c_15065865 = null;
                      var c_15065865_Idx = 0;
                      var i_16070540 = 0;
                      var L_16070541 = (link_15065856[link_15065856_Idx].geometry).length;
                      L12: do {
                          L13: while (true) {
                          if (!(i_16070540 < L_16070541)) break L13;
                            c_15065865 = link_15065856[link_15065856_Idx].geometry; c_15065865_Idx = chckIndx(i_16070540, 0, (link_15065856[link_15065856_Idx].geometry).length-1);
                            lnStr_15065857.pushLatLngAlt(c_15065865[c_15065865_Idx].lat, c_15065865[c_15065865_Idx].lng, 1.0000000000000000e+000);
                            i_16070540 = addInt(i_16070540, 1);
                            if (!(((link_15065856[link_15065856_Idx].geometry).length == L_16070541))) {
                            failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                            }
                            
                          }
                      } while(false);
                    } while(false);
                    var pOpt_15065868 = {style: {strokeColor: "rgba(255, 0, 0, 0.2)", fillColor: "rgba(255, 0, 0, 0.4)", lineWidth: 10, m_type: NTI9691076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, zIndex: -99, m_type: NTI9691081};
                    var pl_15065869 = function(ls, options){return new H.map.Polyline(ls, options)}(lnStr_15065857, pOpt_15065868);
                    (Tmp14 = HEX5BHEX5D_13995367(sectorGrp_13765629[0], sector_15005531), Tmp14)[0][Tmp14[1]].addObject(pl_15065869);
                    i_16070545 = addInt(i_16070545, 1);
                    if (!(((links_15065848).length == L_16070546))) {
                    failedAssertImpl_115480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while(false);
            } while(false);
            if (!((len_14310548(sector_15005531.streets) == L_16070548))) {
            failedAssertImpl_115480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_16070549 = nxt_16070551;
          }
      } while(false);
      }
      
    } while(false);
    mainSectorGroup_14870009[0].addObject((Tmp15 = HEX5BHEX5D_13995367(sectorGrp_13765629[0], sector_15005531), Tmp15)[0][Tmp15[1]]);
  } while (false);

  
}
