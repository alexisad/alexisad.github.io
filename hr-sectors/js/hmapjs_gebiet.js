/* Generated by the Nim Compiler v1.0.0 */
/*   (c) 2019 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI223202 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI223223 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI223227 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI48486 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI247085 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI197320 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI329131 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI246040 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI246024 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI246143 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI249066 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI434089 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI434128 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI249020 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI219776 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI219784 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI48494 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI48404 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI247048 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI247081 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI95289 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI245073 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI247056 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI247076 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI247096 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI247090 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI247089 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI415916 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI415907 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI415902 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI415687 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI414385 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI329121 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI329123 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI246036 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI48454 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI300588 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI146432 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI149247 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI48430 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI48452 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI48460 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI99907 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI210628 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI214420 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI214483 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI210618 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI45014 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI210614 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI210697 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI210693 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI210692 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI210626 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI210649 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI210610 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI210204 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI210202 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI210636 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI210602 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI210639 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI210604 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI210642 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI210606 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI210645 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI210608 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI210653 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI210612 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI210616 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI341229 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI341226 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI341223 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI341203 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI341200 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI341197 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI48538 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI236561 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI236549 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI341180 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI341177 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI341174 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI341058 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI341072 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI341069 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI341066 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI341050 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI341021 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI341046 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI341044 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI341019 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI341154 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI341151 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI341148 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI246018 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI246016 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI341026 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI341015 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI341038 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI341036 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI341030 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI341017 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI227230 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI341131 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI341128 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI341125 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI48444 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI311211 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI294297 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI294298 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI299761 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI299757 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI299150 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI299713 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI299701 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI299722 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI299720 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI299028 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI299714 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI299705 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI95448 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI95444 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI95440 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI95436 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI95432 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI95428 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI95424 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI95420 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI95416 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI95412 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI95408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI95404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI95400 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI95396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI95392 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI95388 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI95384 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI95380 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI95376 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI95372 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI95205 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI95281 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI95227 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI95565 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI95563 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI95561 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI95231 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI95229 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI311207 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI311209 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI95283 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI45026 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI334035 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI45006 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI329081 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI225055 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI45032 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI325030 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI197416 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI48442 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI48446 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI48458 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI48462 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI48408 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI48514 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI45016 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI45040 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI45042 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI48508 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI48426 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI48428 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI48450 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI48450 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI48450.node = NNI48450;
var NNI48428 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI48428.node = NNI48428;
NTI48508.base = NTI48426;
NTI48514.base = NTI48426;
var NNI48426 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI48508, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI45042, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI45040, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI45040, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI45016, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI48514, name: "up", sons: null}]};
NTI48426.node = NNI48426;
var NNI48408 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI48408.node = NNI48408;
NTI48426.base = NTI48408;
NTI48428.base = NTI48426;
NTI48450.base = NTI48428;
var NNI48462 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI48462.node = NNI48462;
NTI48462.base = NTI48428;
var NNI48458 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI48458.node = NNI48458;
NTI48458.base = NTI48428;
var NNI48446 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI48446.node = NNI48446;
var NNI48442 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI48442.node = NNI48442;
NTI48442.base = NTI48428;
NTI48446.base = NTI48442;
NTI197416.base = NTI45040;
var NNI325030 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "app_id", len: 0, typ: NTI45042, name: "app_id", sons: null}, 
{kind: 1, offset: "app_code", len: 0, typ: NTI45042, name: "app_code", sons: null}, 
{kind: 1, offset: "useHTTPS", len: 0, typ: NTI45032, name: "useHTTPS", sons: null}, 
{kind: 1, offset: "useCIT", len: 0, typ: NTI45032, name: "useCIT", sons: null}]};
NTI325030.node = NNI325030;
var NNI225055 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI225055.node = NNI225055;
NTI225055.base = NTI48408;
NTI325030.base = NTI225055;
var NNI329081 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "tileSize", len: 0, typ: NTI45006, name: "tileSize", sons: null}, 
{kind: 1, offset: "ppi", len: 0, typ: NTI45006, name: "ppi", sons: null}, 
{kind: 1, offset: "lg", len: 0, typ: NTI45042, name: "lg", sons: null}, 
{kind: 1, offset: "lg2", len: 0, typ: NTI45042, name: "lg2", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI45042, name: "style", sons: null}, 
{kind: 1, offset: "pois", len: 0, typ: NTI45032, name: "pois", sons: null}, 
{kind: 1, offset: "crossOrigin", len: 0, typ: NTI45040, name: "crossOrigin", sons: null}]};
NTI329081.node = NNI329081;
NTI329081.base = NTI225055;
var NNI334035 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "pixelRatio", len: 0, typ: NTI45026, name: "pixelRatio", sons: null}, 
{kind: 1, offset: "noWrap", len: 0, typ: NTI45032, name: "noWrap", sons: null}]};
NTI334035.node = NNI334035;
NTI334035.base = NTI225055;
var NNI95283 = {kind: 2, len: 92, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI45042, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI45042, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI45042, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI45042, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI45042, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI45042, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI45042, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI45042, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI45042, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI45042, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI45042, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI45042, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI45042, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI45042, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI45042, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI45042, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI45042, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI45042, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI45042, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI45042, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI45042, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI45042, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI45042, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI45042, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI45042, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI45042, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI45042, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI45042, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI45042, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI45042, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI45042, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI45042, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI45042, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI45042, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI45042, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI45042, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI45042, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI45042, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI45042, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI45042, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI45042, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI45042, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI45042, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI45042, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI45042, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI45042, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI45042, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI45042, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI45042, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI45042, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI45042, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI45042, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI45042, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI45042, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI45042, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI45042, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI45042, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI45042, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI45042, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI45042, name: "minWidth", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI45042, name: "opacity", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI45042, name: "overflow", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI45042, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI45042, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI45042, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI45042, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI45042, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI45042, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI45042, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI45042, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI45042, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI45042, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI45042, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI45042, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI45042, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI45042, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI45042, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI45042, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI45042, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI45042, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI45042, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI45042, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI45042, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI45042, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI45042, name: "textTransform", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI45042, name: "transform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI45042, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI45042, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI45042, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI45042, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI45042, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI45006, name: "zIndex", sons: null}]};
NTI95283.node = NNI95283;
NTI95283.base = NTI48408;
var NNI311207 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI311207, name: "pkReplace", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI311207, name: "pkRemove", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI311207, name: "pkAppend", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI311207, name: "pkInsertBefore", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI311207, name: "pkDetach", len: 0, sons: null}}};
NTI311207.node = NNI311207;
NTI95561.base = NTI95229;
NTI95563.base = NTI95229;
NTI95565.base = NTI95229;
var NNI95227 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI95227, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI95227, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI95227, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI95227, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI95227, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI95227, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI95227, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI95227, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI95227, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI95227, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI95227, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI95227, name: "NotationNode", len: 0, sons: null}}};
NTI95227.node = NNI95227;
NTI95281.base = NTI95283;
var NNI95231 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI95561, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI95563, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI95565, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI45042, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI95229, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI95229, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI95229, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI45042, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI95227, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI45042, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI95229, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI95229, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI45042, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI95281, name: "style", sons: null}]};
NTI95231.node = NNI95231;
var NNI95205 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI95372, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI95376, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI95380, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI95384, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI95388, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI95392, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI95396, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI95400, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI95404, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI95408, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI95412, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI95416, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI95420, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI95424, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI95428, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI95432, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI95436, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI95440, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI95444, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI95448, name: "onunload", sons: null}]};
NTI95205.node = NNI95205;
NTI95205.base = NTI48408;
NTI95231.base = NTI95205;
NTI95229.base = NTI95231;
var NNI299028 = {kind: 2, offset: 0, typ: null, name: null, len: 120, sons: {"0": {kind: 1, offset: 0, typ: NTI299028, name: "#text", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI299028, name: "#int", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI299028, name: "#bool", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI299028, name: "#vthunk", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI299028, name: "#dthunk", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI299028, name: "#component", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI299028, name: "#verbatim", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI299028, name: "html", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI299028, name: "head", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI299028, name: "title", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI299028, name: "base", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI299028, name: "link", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI299028, name: "meta", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI299028, name: "style", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI299028, name: "script", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI299028, name: "noscript", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI299028, name: "body", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI299028, name: "section", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI299028, name: "nav", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI299028, name: "article", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI299028, name: "aside", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI299028, name: "h1", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI299028, name: "h2", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI299028, name: "h3", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI299028, name: "h4", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI299028, name: "h5", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI299028, name: "h6", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI299028, name: "header", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI299028, name: "footer", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI299028, name: "address", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI299028, name: "main", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI299028, name: "p", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI299028, name: "hr", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI299028, name: "pre", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI299028, name: "blockquote", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI299028, name: "ol", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI299028, name: "ul", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI299028, name: "li", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI299028, name: "dl", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI299028, name: "dt", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI299028, name: "dd", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI299028, name: "figure", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI299028, name: "figcaption", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI299028, name: "div", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI299028, name: "a", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI299028, name: "em", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI299028, name: "strong", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI299028, name: "small", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI299028, name: "s", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI299028, name: "cite", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI299028, name: "quote", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI299028, name: "dfn", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI299028, name: "abbr", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI299028, name: "data", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI299028, name: "time", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI299028, name: "code", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI299028, name: "var", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI299028, name: "samp", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI299028, name: "kdb", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI299028, name: "sub", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI299028, name: "sup", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI299028, name: "i", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI299028, name: "b", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI299028, name: "u", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI299028, name: "mark", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI299028, name: "ruby", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI299028, name: "rt", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI299028, name: "rp", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI299028, name: "bdi", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI299028, name: "dbo", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI299028, name: "span", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI299028, name: "br", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI299028, name: "wbr", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI299028, name: "ins", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI299028, name: "del", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI299028, name: "img", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI299028, name: "iframe", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI299028, name: "embed", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI299028, name: "object", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI299028, name: "param", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI299028, name: "video", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI299028, name: "audio", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI299028, name: "source", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI299028, name: "track", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI299028, name: "canvas", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI299028, name: "map", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI299028, name: "area", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI299028, name: "svg", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI299028, name: "math", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI299028, name: "path", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI299028, name: "circle", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI299028, name: "table", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI299028, name: "caption", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI299028, name: "colgroup", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI299028, name: "col", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI299028, name: "tbody", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI299028, name: "thead", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI299028, name: "tfoot", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI299028, name: "tr", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI299028, name: "td", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI299028, name: "th", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI299028, name: "form", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI299028, name: "fieldset", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI299028, name: "legend", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI299028, name: "label", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI299028, name: "input", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI299028, name: "button", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI299028, name: "select", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI299028, name: "datalist", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI299028, name: "optgroup", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI299028, name: "option", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI299028, name: "textarea", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI299028, name: "keygen", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI299028, name: "output", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI299028, name: "progress", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI299028, name: "meter", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI299028, name: "details", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI299028, name: "summary", len: 0, sons: null}, 
"118": {kind: 1, offset: 118, typ: NTI299028, name: "command", len: 0, sons: null}, 
"119": {kind: 1, offset: 119, typ: NTI299028, name: "menu", len: 0, sons: null}}};
NTI299028.node = NNI299028;
NTI299720.base = NTI299705;
NTI299722.base = NTI45042;
var NNI299150 = {kind: 2, offset: 0, typ: null, name: null, len: 31, sons: {"0": {kind: 1, offset: 0, typ: NTI299150, name: "onclick", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI299150, name: "oncontextmenu", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI299150, name: "ondblclick", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI299150, name: "onkeyup", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI299150, name: "onkeydown", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI299150, name: "onkeypressed", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI299150, name: "onfocus", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI299150, name: "onblur", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI299150, name: "onchange", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI299150, name: "onscroll", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI299150, name: "onmousedown", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI299150, name: "onmouseenter", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI299150, name: "onmouseleave", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI299150, name: "onmousemove", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI299150, name: "onmouseout", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI299150, name: "onmouseover", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI299150, name: "onmouseup", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI299150, name: "ondrag", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI299150, name: "ondragend", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI299150, name: "ondragenter", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI299150, name: "ondragleave", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI299150, name: "ondragover", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI299150, name: "ondragstart", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI299150, name: "ondrop", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI299150, name: "onsubmit", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI299150, name: "oninput", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI299150, name: "onanimationstart", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI299150, name: "onanimationend", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI299150, name: "onanimationiteration", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI299150, name: "onkeyupenter", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI299150, name: "onkeyuplater", len: 0, sons: null}}};
NTI299150.node = NNI299150;
var NNI299713 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI299150, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI299757, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI299761, name: "Field2", sons: null}]};
NTI299713.node = NNI299713;
NTI299701.base = NTI299713;
var NNI294297 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI294297.node = NNI294297;
NTI294298.base = NTI294297;
var NNI299714 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI299028, name: "kind", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI45006, name: "index", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI45042, name: "id", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI45042, name: "class", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI45042, name: "text", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI299720, name: "kids", sons: null}, 
{kind: 1, offset: "attrs", len: 0, typ: NTI299722, name: "attrs", sons: null}, 
{kind: 1, offset: "events", len: 0, typ: NTI299701, name: "events", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI294298, name: "style", sons: null}, 
{kind: 1, offset: "dom", len: 0, typ: NTI95229, name: "dom", sons: null}]};
NTI299714.node = NNI299714;
NTI299714.base = NTI48408;
NTI299705.base = NTI299714;
var NNI311209 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "k", len: 0, typ: NTI311207, name: "k", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI95229, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI95229, name: "current", sons: null}, 
{kind: 1, offset: "n", len: 0, typ: NTI299705, name: "n", sons: null}]};
NTI311209.node = NNI311209;
var NNI311211 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI299705, name: "parent", sons: null}, 
{kind: 1, offset: "newChild", len: 0, typ: NTI299705, name: "newChild", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI45006, name: "pos", sons: null}]};
NTI311211.node = NNI311211;
var NNI48444 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI48444.node = NNI48444;
NTI48444.base = NTI48442;
NTI341036.base = NTI45006;
NTI246016.base = NTI45026;
NTI246018.base = NTI45026;
var NNI341026 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "lat", len: 0, typ: NTI246016, name: "lat", sons: null}, 
{kind: 1, offset: "lng", len: 0, typ: NTI246018, name: "lng", sons: null}]};
NTI341026.node = NNI341026;
NTI341015.base = NTI341026;
NTI341038.base = NTI341015;
var NNI341030 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "linkId", len: 0, typ: NTI45006, name: "linkId", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI45040, name: "name", sons: null}, 
{kind: 1, offset: "cityId", len: 0, typ: NTI45006, name: "cityId", sons: null}, 
{kind: 1, offset: "districtId", len: 0, typ: NTI45006, name: "districtId", sons: null}, 
{kind: 1, offset: "postalCode", len: 0, typ: NTI45040, name: "postalCode", sons: null}, 
{kind: 1, offset: "neighborLinks", len: 0, typ: NTI341036, name: "neighborLinks", sons: null}, 
{kind: 1, offset: "geometry", len: 0, typ: NTI341038, name: "geometry", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI45032, name: "readOnly", sons: null}, 
{kind: 1, offset: "addedToMap", len: 0, typ: NTI45032, name: "addedToMap", sons: null}, 
{kind: 1, offset: "addedToSector", len: 0, typ: NTI45032, name: "addedToSector", sons: null}]};
NTI341030.node = NNI341030;
NTI341017.base = NTI341030;
var NNI341131 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI227230, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI45006, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI341017, name: "Field2", sons: null}]};
NTI341131.node = NNI341131;
NTI341128.base = NTI341131;
var NNI341125 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI341128, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI45006, name: "counter", sons: null}]};
NTI341125.node = NNI341125;
NTI341046.base = NTI341017;
NTI341058.base = NTI341017;
var NNI341072 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI227230, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI45006, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI45040, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI341058, name: "Field3", sons: null}]};
NTI341072.node = NNI341072;
NTI341069.base = NTI341072;
var NNI341066 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI341069, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI45006, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI45006, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI45006, name: "last", sons: null}]};
NTI341066.node = NNI341066;
var NNI341050 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "postalCode", len: 0, typ: NTI45040, name: "postalCode", sons: null}, 
{kind: 1, offset: "district", len: 0, typ: NTI45040, name: "district", sons: null}, 
{kind: 1, offset: "city", len: 0, typ: NTI45040, name: "city", sons: null}, 
{kind: 1, offset: "pFix", len: 0, typ: NTI45006, name: "pFix", sons: null}, 
{kind: 1, offset: "streets", len: 0, typ: NTI341066, name: "streets", sons: null}, 
{kind: 1, offset: "shownOnMap", len: 0, typ: NTI45032, name: "shownOnMap", sons: null}, 
{kind: 1, offset: "exclude", len: 0, typ: NTI45032, name: "exclude", sons: null}]};
NTI341050.node = NNI341050;
NTI341021.base = NTI341050;
var NNI341044 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI45040, name: "name", sons: null}, 
{kind: 1, offset: "links", len: 0, typ: NTI341046, name: "links", sons: null}, 
{kind: 1, offset: "sector", len: 0, typ: NTI341021, name: "sector", sons: null}]};
NTI341044.node = NNI341044;
NTI341019.base = NTI341044;
var NNI341154 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI227230, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI45006, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI45040, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI341019, name: "Field3", sons: null}]};
NTI341154.node = NNI341154;
NTI341151.base = NTI341154;
var NNI341148 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI341151, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI45006, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI45006, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI45006, name: "last", sons: null}]};
NTI341148.node = NNI341148;
var NNI236561 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI236561.node = NNI236561;
var NNI48538 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI48538.node = NNI48538;
NTI48538.base = NTI48408;
NTI236561.base = NTI48538;
NTI236549.base = NTI236561;
var NNI341180 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI227230, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI45040, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI236549, name: "Field2", sons: null}]};
NTI341180.node = NNI341180;
NTI341177.base = NTI341180;
var NNI341174 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI341177, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI45006, name: "counter", sons: null}]};
NTI341174.node = NNI341174;
var NNI341203 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI227230, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI45006, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI45040, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI341021, name: "Field3", sons: null}]};
NTI341203.node = NNI341203;
NTI341200.base = NTI341203;
var NNI341197 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI341200, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI45006, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI45006, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI45006, name: "last", sons: null}]};
NTI341197.node = NNI341197;
var NNI341229 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI227230, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI45040, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI45006, name: "Field2", sons: null}]};
NTI341229.node = NNI341229;
NTI341226.base = NTI341229;
var NNI341223 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI341226, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI45006, name: "counter", sons: null}]};
NTI341223.node = NNI341223;
NTI210612.base = NTI210653;
NTI210608.base = NTI210645;
NTI210606.base = NTI210642;
NTI210604.base = NTI210639;
NTI210602.base = NTI210636;
var NNI210202 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI210202, name: "January", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI210202, name: "February", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI210202, name: "March", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI210202, name: "April", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI210202, name: "May", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI210202, name: "June", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI210202, name: "July", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI210202, name: "August", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI210202, name: "September", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI210202, name: "October", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI210202, name: "November", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI210202, name: "December", len: 0, sons: null}}};
NTI210202.node = NNI210202;
var NNI210204 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI210204, name: "Monday", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI210204, name: "Tuesday", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI210204, name: "Wednesday", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI210204, name: "Thursday", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI210204, name: "Friday", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI210204, name: "Saturday", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI210204, name: "Sunday", len: 0, sons: null}}};
NTI210204.node = NNI210204;
NTI210610.base = NTI210649;
var NNI210692 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "zonedTimeFromTimeImpl", len: 0, typ: NTI210693, name: "zonedTimeFromTimeImpl", sons: null}, 
{kind: 1, offset: "zonedTimeFromAdjTimeImpl", len: 0, typ: NTI210697, name: "zonedTimeFromAdjTimeImpl", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI45040, name: "name", sons: null}]};
NTI210692.node = NNI210692;
NTI210626.base = NTI210692;
var NNI210616 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nanosecond", len: 0, typ: NTI210612, name: "nanosecond", sons: null}, 
{kind: 1, offset: "second", len: 0, typ: NTI210608, name: "second", sons: null}, 
{kind: 1, offset: "minute", len: 0, typ: NTI210606, name: "minute", sons: null}, 
{kind: 1, offset: "hour", len: 0, typ: NTI210604, name: "hour", sons: null}, 
{kind: 1, offset: "monthday", len: 0, typ: NTI210602, name: "monthday", sons: null}, 
{kind: 1, offset: "month", len: 0, typ: NTI210202, name: "month", sons: null}, 
{kind: 1, offset: "year", len: 0, typ: NTI45006, name: "year", sons: null}, 
{kind: 1, offset: "weekday", len: 0, typ: NTI210204, name: "weekday", sons: null}, 
{kind: 1, offset: "yearday", len: 0, typ: NTI210610, name: "yearday", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI45032, name: "isDst", sons: null}, 
{kind: 1, offset: "timezone", len: 0, typ: NTI210626, name: "timezone", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI45006, name: "utcOffset", sons: null}]};
NTI210616.node = NNI210616;
NTI210616.base = NTI48408;
var NNI210614 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI45014, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI210612, name: "nanosecond", sons: null}]};
NTI210614.node = NNI210614;
var NNI210618 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI45014, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI210612, name: "nanosecond", sons: null}]};
NTI210618.node = NNI210618;
var NNI214483 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI210602, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI210202, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI45006, name: "Field2", sons: null}]};
NTI214483.node = NNI214483;
var NNI214420 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI45006, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI45006, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI45006, name: "Field2", sons: null}]};
NTI214420.node = NNI214420;
var NNI210628 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "time", len: 0, typ: NTI210614, name: "time", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI45006, name: "utcOffset", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI45032, name: "isDst", sons: null}]};
NTI210628.node = NNI210628;
var NNI99907 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI45006, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI45006, name: "b", sons: null}]};
NTI99907.node = NNI99907;
var NNI48460 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI48460.node = NNI48460;
NTI48460.base = NTI48428;
var NNI48452 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI48452.node = NNI48452;
var NNI48430 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI48430.node = NNI48430;
NTI48430.base = NTI48426;
NTI48452.base = NTI48430;
var NNI149247 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI146432, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI45006, name: "b", sons: null}]};
NTI149247.node = NNI149247;
NTI300588.base = NTI45042;
var NNI48454 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI48454.node = NNI48454;
NTI48454.base = NTI48452;
var NNI246036 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "lat", len: 0, typ: NTI246016, name: "lat", sons: null}, 
{kind: 1, offset: "lng", len: 0, typ: NTI246018, name: "lng", sons: null}]};
NTI246036.node = NNI246036;
NTI246036.base = NTI225055;
var NNI329123 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "jsonattributes", len: 0, typ: NTI45006, name: "jsonattributes", sons: null}, 
{kind: 1, offset: "mode", len: 0, typ: NTI45042, name: "mode", sons: null}, 
{kind: 1, offset: "prox", len: 0, typ: NTI45042, name: "prox", sons: null}, 
{kind: 1, offset: "maxResults", len: 0, typ: NTI45006, name: "maxResults", sons: null}, 
{kind: 1, offset: "additionaldata", len: 0, typ: NTI45042, name: "additionaldata", sons: null}, 
{kind: 1, offset: "locationattributes", len: 0, typ: NTI45042, name: "locationattributes", sons: null}]};
NTI329123.node = NNI329123;
var NNI329121 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI329121.node = NNI329121;
NTI329121.base = NTI225055;
NTI329123.base = NTI329121;
NTI414385.base = NTI341015;
NTI415687.base = NTI45006;
NTI415902.base = NTI45006;
NTI415907.base = NTI45006;
NTI415916.base = NTI45006;
var NNI247089 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onAttach", len: 0, typ: NTI247090, name: "onAttach", sons: null}, 
{kind: 1, offset: "onDetach", len: 0, typ: NTI247096, name: "onDetach", sons: null}]};
NTI247089.node = NNI247089;
NTI247089.base = NTI225055;
var NNI247076 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "strokeColor", len: 0, typ: NTI45042, name: "strokeColor", sons: null}, 
{kind: 1, offset: "fillColor", len: 0, typ: NTI45042, name: "fillColor", sons: null}, 
{kind: 1, offset: "lineWidth", len: 0, typ: NTI45006, name: "lineWidth", sons: null}]};
NTI247076.node = NNI247076;
var NNI247056 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI247056.node = NNI247056;
var NNI245073 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI245073.node = NNI245073;
var NNI95289 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "bubbles", len: 0, typ: NTI45032, name: "bubbles", sons: null}, 
{kind: 1, offset: "cancelBubble", len: 0, typ: NTI45032, name: "cancelBubble", sons: null}, 
{kind: 1, offset: "cancelable", len: 0, typ: NTI45032, name: "cancelable", sons: null}, 
{kind: 1, offset: "composed", len: 0, typ: NTI45032, name: "composed", sons: null}, 
{kind: 1, offset: "currentTarget", len: 0, typ: NTI95229, name: "currentTarget", sons: null}, 
{kind: 1, offset: "defaultPrevented", len: 0, typ: NTI45032, name: "defaultPrevented", sons: null}, 
{kind: 1, offset: "eventPhase", len: 0, typ: NTI45006, name: "eventPhase", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI95229, name: "target", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI45042, name: "type", sons: null}, 
{kind: 1, offset: "isTrusted", len: 0, typ: NTI45032, name: "isTrusted", sons: null}]};
NTI95289.node = NNI95289;
NTI95289.base = NTI48408;
NTI245073.base = NTI95289;
NTI247056.base = NTI245073;
NTI247076.base = NTI247056;
NTI247048.base = NTI247076;
var NNI247081 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "style", len: 0, typ: NTI247048, name: "style", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI45006, name: "zIndex", sons: null}]};
NTI247081.node = NNI247081;
NTI247081.base = NTI225055;
NTI48404.base = NTI48494;
var NNI219784 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI219776, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI48404, name: "Field1", sons: null}]};
NTI219784.node = NNI219784;
var NNI249020 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI45026, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI45026, name: "Field1", sons: null}]};
NTI249020.node = NNI249020;
var NNI434128 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI45006, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI45006, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI45006, name: "Field2", sons: null}]};
NTI434128.node = NNI434128;
var NNI434089 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI45026, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI45026, name: "Field1", sons: null}]};
NTI434089.node = NNI434089;
var NNI249066 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI45006, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI45006, name: "Field1", sons: null}]};
NTI249066.node = NNI249066;
var NNI246040 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI246040.node = NNI246040;
NTI246040.base = NTI225055;
NTI246024.base = NTI246040;
NTI246143.base = NTI246024;
var NNI329131 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "searchtext", len: 0, typ: NTI45042, name: "searchtext", sons: null}, 
{kind: 1, offset: "country", len: 0, typ: NTI45042, name: "country", sons: null}, 
{kind: 1, offset: "state", len: 0, typ: NTI45042, name: "state", sons: null}, 
{kind: 1, offset: "additionaldata", len: 0, typ: NTI45042, name: "additionaldata", sons: null}]};
NTI329131.node = NNI329131;
NTI329131.base = NTI329121;
NTI197320.base = NTI45040;
var NNI247085 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "style", len: 0, typ: NTI247048, name: "style", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI45006, name: "zIndex", sons: null}]};
NTI247085.node = NNI247085;
NTI247085.base = NTI225055;
var NNI48486 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI48486.node = NNI48486;
NTI48486.base = NTI48428;
var NNI223227 = {kind: 1, offset: "useStderr", len: 0, typ: NTI45032, name: "useStderr", sons: null};
NTI223227.node = NNI223227;
var NNI223202 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI223202, name: "lvlAll", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI223202, name: "lvlDebug", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI223202, name: "lvlInfo", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI223202, name: "lvlNotice", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI223202, name: "lvlWarn", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI223202, name: "lvlError", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI223202, name: "lvlFatal", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI223202, name: "lvlNone", len: 0, sons: null}}};
NTI223202.node = NNI223202;
var NNI223223 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "levelThreshold", len: 0, typ: NTI223202, name: "levelThreshold", sons: null}, 
{kind: 1, offset: "fmtStr", len: 0, typ: NTI45040, name: "fmtStr", sons: null}]};
NTI223223.node = NNI223223;
NTI223223.base = NTI48408;
NTI223227.base = NTI223223;

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_69827, src_69828, ti_69829) {
	var result_70019 = null;

		switch (ti_69829.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_69801(ti_69829))) {
			result_70019 = src_69828;
			}
			else {
				result_70019 = [src_69828[0], src_69828[1]];
			}
			
			break;
		case 19:
			      if (dest_69827 === null || dest_69827 === undefined) {
        dest_69827 = {};
      }
      else {
        for (var key in dest_69827) { delete dest_69827[key]; }
      }
      for (var key in src_69828) { dest_69827[key] = src_69828[key]; }
      result_70019 = dest_69827;
    
			break;
		case 18:
		case 17:
			if (!((ti_69829.base == null))) {
			result_70019 = nimCopy(dest_69827, src_69828, ti_69829.base);
			}
			else {
			if ((ti_69829.kind == 17)) {
			result_70019 = (dest_69827 === null || dest_69827 === undefined) ? {m_type: ti_69829} : dest_69827;
			}
			else {
				result_70019 = (dest_69827 === null || dest_69827 === undefined) ? {} : dest_69827;
			}
			}
			nimCopyAux(result_70019, src_69828, ti_69829.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_69828 === null) {
        result_70019 = null;
      }
      else {
        if (dest_69827 === null || dest_69827 === undefined) {
          dest_69827 = new Array(src_69828.length);
        }
        else {
          dest_69827.length = src_69828.length;
        }
        result_70019 = dest_69827;
        for (var i = 0; i < src_69828.length; ++i) {
          result_70019[i] = nimCopy(result_70019[i], src_69828[i], ti_69829.base);
        }
      }
    
			break;
		case 28:
			      if (src_69828 !== null) {
        result_70019 = src_69828.slice(0);
      }
    
			break;
		default: 
			result_70019 = src_69828;
			break;
		}

	return result_70019;

}

function makeNimstrLit(c_68269) {
		  var ln = c_68269.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_68269.charCodeAt(i);
  }
  return result;
  

	
}

function toJSStr(s_68303) {
										var Tmp5;
						var Tmp7;

	var result_68304 = null;

		var res_68362 = new_seq_68335((s_68303 != null ? s_68303.length : 0));
		var i_68364 = 0;
		var j_68366 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_68364 < (s_68303 != null ? s_68303.length : 0))) break L2;
					var c_68367 = s_68303[i_68364];
					if ((c_68367 < 128)) {
					res_68362[j_68366] = String.fromCharCode(c_68367);
					i_68364 += 1;
					}
					else {
						var helper_68390 = new_seq_68335(0);
						L3: do {
								L4: while (true) {
								if (!true) break L4;
									var code_68391 = c_68367.toString(16);
									if (((code_68391 != null ? code_68391.length : 0) == 1)) {
									if (helper_68390 != null) { helper_68390.push("%0"); } else { helper_68390 = ["%0"]; };
									}
									else {
									if (helper_68390 != null) { helper_68390.push("%"); } else { helper_68390 = ["%"]; };
									}
									
									if (helper_68390 != null) { helper_68390.push(code_68391); } else { helper_68390 = [code_68391]; };
									i_68364 += 1;
										if (((s_68303 != null ? s_68303.length : 0) <= i_68364)) Tmp5 = true; else {											Tmp5 = (s_68303[i_68364] < 128);										}									if (Tmp5) {
									break L3;
									}
									
									c_68367 = s_68303[i_68364];
								}
						} while(false);
++excHandler;
						Tmp7 = framePtr;
						try {
						res_68362[j_68366] = decodeURIComponent(helper_68390.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
						framePtr = Tmp7;
						res_68362[j_68366] = helper_68390.join("");
						lastJSError = prevJSError;
						} finally {
						framePtr = Tmp7;
						}
					}
					
					j_68366 += 1;
				}
		} while(false);
		if (res_68362 === null) res_68362 = [];
               if (res_68362.length < j_68366) { for (var i=res_68362.length;i<j_68366;++i) res_68362.push(null); }
               else { res_68362.length = j_68366; };
		result_68304 = res_68362.join("");

	return result_68304;

}

function raiseException(e_66618, ename_66619) {
		e_66618.name = ename_66619;
		if ((excHandler == 0)) {
		unhandledException(e_66618);
		}
		
		throw e_66618;

	
}

function chckRange(i_70124, a_70125, b_70126) {
			var Tmp1;

	var result_70127 = 0;

	BeforeRet: do {
			if (!(a_70125 <= i_70124)) Tmp1 = false; else {				Tmp1 = (i_70124 <= b_70126);			}		if (Tmp1) {
		result_70127 = i_70124;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_70127;

}

function cstrToNimstr(c_68286) {
		  var ln = c_68286.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_68286.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_68286.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function chckIndx(i_70105, a_70106, b_70107) {
			var Tmp1;

	var result_70108 = 0;

	BeforeRet: do {
			if (!(a_70106 <= i_70105)) Tmp1 = false; else {				Tmp1 = (i_70105 <= b_70107);			}		if (Tmp1) {
		result_70108 = i_70105;
		break BeforeRet;
		}
		else {
		raiseIndexError(i_70105, a_70106, b_70107);
		}
		
	} while (false);

	return result_70108;

}

function subInt(a_68821, b_68822) {
		    var result = a_68821 - b_68822;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function addInt(a_68803, b_68804) {
		    var result = a_68803 + b_68804;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function nimMax(a_69221, b_69222) {
		var Tmp1;

	var result_69223 = 0;

	BeforeRet: do {
		if ((b_69222 <= a_69221)) {
		Tmp1 = a_69221;
		}
		else {
		Tmp1 = b_69222;
		}
		
		result_69223 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_69223;

}

function nimMin(a_69203, b_69204) {
		var Tmp1;

	var result_69205 = 0;

	BeforeRet: do {
		if ((a_69203 <= b_69204)) {
		Tmp1 = a_69203;
		}
		else {
		Tmp1 = b_69204;
		}
		
		result_69205 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_69205;

}

function mnewString(len_68462) {
		    return new Array(len_68462);
  

	
}
			var to_tag_299689 = ["#text", "#int", "#bool", "#vthunk", "#dthunk", "#component", "#verbatim", "HTML", "HEAD", "TITLE", "BASE", "LINK", "META", "STYLE", "SCRIPT", "NOSCRIPT", "BODY", "SECTION", "NAV", "ARTICLE", "ASIDE", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "FOOTER", "ADDRESS", "MAIN", "P", "HR", "PRE", "BLOCKQUOTE", "OL", "UL", "LI", "DL", "DT", "DD", "FIGURE", "FIGCAPTION", "DIV", "A", "EM", "STRONG", "SMALL", "S", "CITE", "QUOTE", "DFN", "ABBR", "DATA", "TIME", "CODE", "VAR", "SAMP", "KDB", "SUB", "SUP", "I", "B", "U", "MARK", "RUBY", "RT", "RP", "BDI", "DBO", "SPAN", "BR", "WBR", "INS", "DEL", "IMG", "IFRAME", "EMBED", "OBJECT", "PARAM", "VIDEO", "AUDIO", "SOURCE", "TRACK", "CANVAS", "MAP", "AREA", "SVG", "MATH", "PATH", "CIRCLE", "TABLE", "CAPTION", "COLGROUP", "COL", "TBODY", "THEAD", "TFOOT", "TR", "TD", "TH", "FORM", "FIELDSET", "LEGEND", "LABEL", "INPUT", "BUTTON", "SELECT", "DATALIST", "OPTGROUP", "OPTION", "TEXTAREA", "KEYGEN", "OUTPUT", "PROGRESS", "METER", "DETAILS", "SUMMARY", "COMMAND", "MENU"];
			var to_event_name_299695 = ["click", "contextmenu", "dblclick", "keyup", "keydown", "keypressed", "focus", "blur", "change", "scroll", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseout", "mouseover", "mouseup", "drag", "dragend", "dragenter", "dragleave", "dragover", "dragstart", "drop", "submit", "input", "animationstart", "animationend", "animationiteration", "keyupenter", "keyuplater"];

function rawEcho() {
		      var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

	
}

function divInt(a_68857, b_68858) {
		    if (b_68858 == 0) raiseDivByZero();
    if (b_68858 == -1 && a_68857 == 2147483647) raiseOverflow();
    return Math.trunc(a_68857 / b_68858);
  

	
}

function mulInt(a_68839, b_68840) {
		    var result = a_68839 * b_68840;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function modInt(a_68875, b_68876) {
		    if (b_68876 == 0) raiseDivByZero();
    if (b_68876 == -1 && a_68875 == 2147483647) raiseOverflow();
    return Math.trunc(a_68875 % b_68876);
  

	
}

function eqStrings(a_68640, b_68641) {
		    if (a_68640 == b_68641) return true;
    if (a_68640 === null && b_68641.length == 0) return true;
    if (b_68641 === null && a_68640.length == 0) return true;
    if ((!a_68640) || (!b_68641)) return false;
    var alen = a_68640.length;
    if (alen != b_68641.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_68640[i] != b_68641[i]) return false;
    return true;
  

	
}

function addChar(x_70310, c_70311) {
		x_70310.push(c_70311);

	
}

function absInt(a_69019) {
		var Tmp1;

	var result_69020 = 0;

		if ((a_69019 < 0)) {
		Tmp1 = (a_69019 * -1);
		}
		else {
		Tmp1 = a_69019;
		}
		
		result_69020 = Tmp1;

	return result_69020;

}
		var unit_weights_210777 = [1, 1000, 1000000, 1000000000, 60000000000, 3600000000000, 86400000000000, 604800000000000];

function negInt(a_68983) {
	var result_68984 = 0;

		result_68984 = (a_68983 * -1);

	return result_68984;

}
		var days_until_month_leap_214587 = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];
			var days_until_month_214571 = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];
var ConstSet2 = setConstr(5);

function raiseFieldError(f_68054) {
		var e_68057 = null;
		e_68057 = {m_type: NTI48460, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_68057.message = nimCopy(null, f_68054, NTI45040);
		e_68057.parent = null;
		raiseException(e_68057, "FieldError");

	
}
var ConstSet3 = setConstr(6);
var ConstSet4 = setConstr(60, 62, 94);
var ConstSet5 = setConstr(60, 62, 94);
var ConstSet6 = setConstr(45, 43, 32);
var ConstSet7 = setConstr([48, 57]);
var ConstSet8 = setConstr([48, 57]);
var ConstSet9 = setConstr([48, 57]);
var ConstSet10 = setConstr([65, 90], [97, 122]);
var ConstSet11 = setConstr(46, 44);

function nimCharToStr(x_66062) {
	var result_66063 = null;

		result_66063 = nimCopy(null, mnewString(1), NTI45040);
		result_66063[0] = x_66062;

	return result_66063;

}
var ConstSet12 = setConstr([65, 90]);
var ConstSet13 = setConstr([97, 122]);

function nimBoolToStr(x_66045) {
	var result_66046 = null;

		if (x_66045) {
		result_66046 = nimCopy(null, makeNimstrLit("true"), NTI45040);
		}
		else {
			result_66046 = nimCopy(null, makeNimstrLit("false"), NTI45040);
		}
		

	return result_66046;

}
var ConstSet14 = setConstr([48, 57]);
var ConstSet15 = setConstr([48, 57]);
var ConstSet16 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet17 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet18 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet19 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet20 = setConstr(32, 9, 11, 13, 10, 12);

function cmpStrings(a_68604, b_68605) {
		    if (a_68604 == b_68605) return 0;
    if (!a_68604) return -1;
    if (!b_68605) return 1;
    for (var i = 0; i < a_68604.length && i < b_68605.length; i++) {
      var result = a_68604[i] - b_68605[i];
      if (result != 0) return result;
    }
    return a_68604.length - b_68605.length;
  

	
}
var ConstSet21 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet22 = setConstr(13, 10);
var ConstSet23 = setConstr(32, 9, 11, 13, 10, 12);

function isObj(obj_70269, subclass_70270) {
	var result_70271 = false;

	BeforeRet: do {
		var x_70272 = obj_70269;
		if ((x_70272 == subclass_70270)) {
		result_70271 = true;
		break BeforeRet;
		}
		
		L1: do {
				L2: while (true) {
				if (!!((x_70272 == subclass_70270))) break L2;
					if ((x_70272 == null)) {
					result_70271 = false;
					break BeforeRet;
					}
					
					x_70272 = x_70272.base;
				}
		} while(false);
		result_70271 = true;
		break BeforeRet;
	} while (false);

	return result_70271;

}
var ConstSet24 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet25 = setConstr([65, 90]);
							var level_names_223216 = [makeNimstrLit("DEBUG"), makeNimstrLit("DEBUG"), makeNimstrLit("INFO"), makeNimstrLit("NOTICE"), makeNimstrLit("WARN"), makeNimstrLit("ERROR"), makeNimstrLit("FATAL"), makeNimstrLit("NONE")];
var nimvm_52910 = false;
var nim_program_result = 0;
var global_raise_hook_63618 = [null];
var local_raise_hook_63623 = [null];
var out_of_mem_hook_63626 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var utc_instance_216031 = [null];
var local_instance_216032 = [null];
var level_223401 = [0];
var handlers_223403 = [null];
var object_id_227437 = [0];

function is_power_of_two_109062(x_109064) {
		var Tmp1;

	var result_109065 = false;

	BeforeRet: do {
		if (!(0 < x_109064)) Tmp1 = false; else {			Tmp1 = ((x_109064 & (x_109064 - 1)) == 0);		}		result_109065 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_109065;

}

function is_fat_pointer_69801(ti_69803) {
	var result_69804 = false;

	BeforeRet: do {
		result_69804 = !((ConstSet1[ti_69803.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_69804;

}

function nimCopyAux(dest_69832, src_69833, n_69835) {
		switch (n_69835.kind) {
		case 0:
			break;
		case 1:
			      dest_69832[n_69835.offset] = nimCopy(dest_69832[n_69835.offset], src_69833[n_69835.offset], n_69835.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_69835.sons.length; i++) {
      nimCopyAux(dest_69832, src_69833, n_69835.sons[i]);
    }
    
			break;
		case 3:
			      dest_69832[n_69835.offset] = nimCopy(dest_69832[n_69835.offset], src_69833[n_69835.offset], n_69835.typ);
      for (var i = 0; i < n_69835.sons.length; ++i) {
        nimCopyAux(dest_69832, src_69833, n_69835.sons[i][1]);
      }
    
			break;
		}

	
}

function add_63638(x_63641, x_63641_Idx, y_63642) {
		      if (x_63641[x_63641_Idx] === null) { x_63641[x_63641_Idx] = []; }
      var off = x_63641[x_63641_Idx].length;
      x_63641[x_63641_Idx].length += y_63642.length;
      for (var i = 0; i < y_63642.length; ++i) {
        x_63641[x_63641_Idx][off+i] = y_63642.charCodeAt(i);
      }
    

	
}

function new_seq_68335(len_68338) {
	var result_68340 = null;

		result_68340 = new Array(len_68338); for (var i=0;i<len_68338;++i) {result_68340[i]=null;}
	return result_68340;

}

function unhandledException(e_66529) {
		var buf_66530 = [[]];
		if (!(((e_66529.message != null ? e_66529.message.length : 0) == 0))) {
		if (buf_66530[0] != null) { buf_66530[0] = (buf_66530[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_66530[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_66530[0] != null) { buf_66530[0] = (buf_66530[0]).concat(e_66529.message); } else { buf_66530[0] = e_66529.message.slice(); };
		}
		else {
		if (buf_66530[0] != null) { buf_66530[0] = (buf_66530[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_66530[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_66530[0] != null) { buf_66530[0] = (buf_66530[0]).concat(makeNimstrLit(" [")); } else { buf_66530[0] = makeNimstrLit(" ["); };
		add_63638(buf_66530, 0, e_66529.name);
		if (buf_66530[0] != null) { buf_66530[0] = (buf_66530[0]).concat(makeNimstrLit("]\x0A")); } else { buf_66530[0] = makeNimstrLit("]\x0A"); };
		var cbuf_66601 = toJSStr(buf_66530[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_66601);
  }
  else {
    throw cbuf_66601;
  }
  

	
}

function sys_fatal_59862(message_59866) {
		var e_60003 = null;
		e_60003 = {m_type: NTI48450, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_60003.message = nimCopy(null, message_59866, NTI45040);
		raiseException(e_60003, "AssertionError");

	
}

function raise_assert_59858(msg_59860) {
		sys_fatal_59862(msg_59860);

	
}

function failed_assert_impl_60066(msg_60068) {
		raise_assert_59858(msg_60068);

	
}

function raiseRangeError() {
		var e_67456 = null;
		e_67456 = {m_type: NTI48462, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_67456.message = nimCopy(null, makeNimstrLit("value out of range"), NTI45040);
		e_67456.parent = null;
		raiseException(e_67456, "RangeError");

	
}

function init_table_236018(initial_size_236022) {
	var result_236038 = {data: null, counter: 0};

		if (!(is_power_of_two_109062(initial_size_236022))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_236038.counter = 0;
		result_236038.data = new Array(chckRange(initial_size_236022, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_236022, 0, 2147483647);++i) {result_236038.data[i]={Field0: 0, Field1: null, Field2: null};}
	return result_236038;

}
var mangled_names_236429 = [init_table_236018(64)];
var name_counter_236431 = [0];
var gid_300495 = [0];

function init_table_304408(initial_size_304412) {
	var result_304428 = {data: null, counter: 0};

		if (!(is_power_of_two_109062(initial_size_304412))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_304428.counter = 0;
		result_304428.data = new Array(chckRange(initial_size_304412, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_304412, 0, 2147483647);++i) {result_304428.data[i]={Field0: 0, Field1: null, Field2: 0};}
	return result_304428;

}
var vcomponents_304239 = [{}];
var allcomponents_304829 = [init_table_304408(64)];
var kxi_311324 = [null];

function raiseIndexError(i_67654, a_67655, b_67656) {
		var Tmp1;

		var e_67802 = null;
		e_67802 = {m_type: NTI48458, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		if ((b_67656 < a_67655)) {
		Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
		}
		else {
		Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_67654)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_67655)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_67656)+"") || []);
		}
		
		e_67802.message = nimCopy(null, Tmp1, NTI45040);
		e_67802.parent = null;
		raiseException(e_67802, "IndexError");

	
}

function to_float_55457(i_55459) {
	var result_55460 = 0.0;

		result_55460 = i_55459;

	return result_55460;

}

function HEX2F_71817(x_71819, y_71820) {
	var result_71821 = 0.0;

		result_71821 = (to_float_55457(x_71819) / to_float_55457(y_71820));

	return result_71821;

}

function raiseOverflow() {
		var e_67057 = null;
		e_67057 = {m_type: NTI48446, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_67057.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI45040);
		e_67057.parent = null;
		raiseException(e_67057, "OverflowError");

	
}

function isPointInPolygon(test_point_330070, polyg_points_330072) {
							var Tmp4;
							var Tmp5;
								var Tmp6;

	var result_330073 = false;

		result_330073 = false;
		var j_330079 = (polyg_points_330072 != null ? (polyg_points_330072.length-1) : -1);
		L1: do {
			var i_330114 = 0;
			var p_330115 = null;
			var i_330165 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_330165 < (polyg_points_330072 != null ? polyg_points_330072.length : 0))) break L3;
						i_330114 = i_330165;
						p_330115 = polyg_points_330072[chckIndx(i_330165, 0, polyg_points_330072.length+0-1)-0];
						var l_p_330116 = polyg_points_330072[chckIndx(j_330079, 0, polyg_points_330072.length+0-1)-0];
							if (!(p_330115.y < test_point_330070.y)) Tmp5 = false; else {								Tmp5 = (test_point_330070.y <= l_p_330116.y);							}							if (Tmp5) Tmp4 = true; else {								if (!(l_p_330116.y < test_point_330070.y)) Tmp6 = false; else {									Tmp6 = (test_point_330070.y <= p_330115.y);								}								Tmp4 = Tmp6;							}						if (Tmp4) {
						if (((p_330115.x + (HEX2F_71817(subInt(test_point_330070.y, p_330115.y), subInt(l_p_330116.y, p_330115.y)) * subInt(l_p_330116.x, p_330115.x))) < test_point_330070.x)) {
						result_330073 = !(result_330073);
						}
						
						}
						
						j_330079 = i_330114;
						i_330165 = addInt(i_330165, 1);
					}
			} while(false);
		} while(false);

	return result_330073;

}

function init_table_341319(initial_size_341323) {
	var result_341325 = {data: null, counter: 0};

		if (!(is_power_of_two_109062(initial_size_341323))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_341325.counter = 0;
		result_341325.data = new Array(chckRange(initial_size_341323, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_341323, 0, 2147483647);++i) {result_341325.data[i]={Field0: 0, Field1: 0, Field2: null};}
	return result_341325;

}

function init_ordered_table_341632(initial_size_341636) {
	var result_341638 = {data: null, counter: 0, first: 0, last: 0};

		if (!(is_power_of_two_109062(initial_size_341636))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_341638.counter = 0;
		result_341638.data = new Array(chckRange(initial_size_341636, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_341636, 0, 2147483647);++i) {result_341638.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		result_341638.first = -1;
		result_341638.last = -1;

	return result_341638;

}

function init_table_342032(initial_size_342036) {
	var result_342038 = {data: null, counter: 0};

		if (!(is_power_of_two_109062(initial_size_342036))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_342038.counter = 0;
		result_342038.data = new Array(chckRange(initial_size_342036, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_342036, 0, 2147483647);++i) {result_342038.data[i]={Field0: 0, Field1: null, Field2: null};}
	return result_342038;

}

function init_ordered_table_342432(initial_size_342436) {
	var result_342438 = {data: null, counter: 0, first: 0, last: 0};

		if (!(is_power_of_two_109062(initial_size_342436))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_342438.counter = 0;
		result_342438.data = new Array(chckRange(initial_size_342436, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_342436, 0, 2147483647);++i) {result_342438.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		result_342438.first = -1;
		result_342438.last = -1;

	return result_342438;

}

function init_table_342832(initial_size_342836) {
	var result_342838 = {data: null, counter: 0};

		if (!(is_power_of_two_109062(initial_size_342836))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_342838.counter = 0;
		result_342838.data = new Array(chckRange(initial_size_342836, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_342836, 0, 2147483647);++i) {result_342838.data[i]={Field0: 0, Field1: null, Field2: 0};}
	return result_342838;

}

function init_table_343235(initial_size_343239) {
	var result_343255 = {data: null, counter: 0};

		if (!(is_power_of_two_109062(initial_size_343239))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_343255.counter = 0;
		result_343255.data = new Array(chckRange(initial_size_343239, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_343239, 0, 2147483647);++i) {result_343255.data[i]={Field0: 0, Field1: null, Field2: null};}
	return result_343255;

}
var all_links_341629 = [init_table_341319(8)];
var all_streets_342029 = [init_ordered_table_341632(8)];
var cached_tiles_342429 = [init_table_342032(8)];
var all_sectors_342829 = [init_ordered_table_342432(8)];
var last_postfix_343229 = [init_table_342832(8)];
var mv_street_grp_343230 = [function(){return new H.map.Group()}()];
var ministry_area_343231 = [null];
var name_area_343232 = [makeNimstrLit("Hanau-Russisch")];
var sector_grp_343629 = [init_table_343235(8)];
var city_id_343630 = [0];
var district_id_343631 = [0];
var addr_distr_343632 = [null];
var addr_city_343633 = [null];
var clck_link_id_343634 = [0];
var postal_code_343635 = [null];
var sect_name_343636 = [null];
var border_distr_343638 = [null];
var map = null;

function nsuFindChar(s_202016, sub_202017, start_202018, last_202019) {
		var Tmp1;

	var result_202021 = 0;

	BeforeRet: do {
		if ((last_202019 == 0)) {
		Tmp1 = (s_202016 != null ? (s_202016.length-1) : -1);
		}
		else {
		Tmp1 = last_202019;
		}
		
		var last_202023 = Tmp1;
		L2: do {
			var i_202406 = 0;
			var colontmp__389032 = 0;
			colontmp__389032 = start_202018;
			var res_389033 = colontmp__389032;
			L3: do {
					L4: while (true) {
					if (!(res_389033 <= last_202023)) break L4;
						i_202406 = res_389033;
						if ((sub_202017 == s_202016[chckIndx(i_202406, 0, s_202016.length+0-1)-0])) {
						result_202021 = i_202406;
						break BeforeRet;
						}
						
						res_389033 = addInt(res_389033, 1);
					}
			} while(false);
		} while(false);
		result_202021 = -1;
		break BeforeRet;
	} while (false);

	return result_202021;

}

function substr_75222(s_75224, first_75225, last_75226) {
	var result_75227 = null;

		var first_75228 = nimMax(first_75225, 0);
		var l_75230 = nimMax(addInt(subInt(nimMin(last_75226, (s_75224 != null ? (s_75224.length-1) : -1)), first_75228), 1), 0);
		result_75227 = nimCopy(null, mnewString(chckRange(l_75230, 0, 2147483647)), NTI45040);
		L1: do {
			var i_75239 = 0;
			var colontmp__299678 = 0;
			colontmp__299678 = subInt(l_75230, 1);
			var res_299679 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_299679 <= colontmp__299678)) break L3;
						i_75239 = res_299679;
						result_75227[chckIndx(i_75239, 0, result_75227.length+0-1)-0] = s_75224[chckIndx(addInt(i_75239, first_75228), 0, s_75224.length+0-1)-0];
						res_299679 = addInt(res_299679, 1);
					}
			} while(false);
		} while(false);

	return result_75227;

}

function substr_75253(s_75255, first_75256) {
	var result_75258 = null;

		result_75258 = nimCopy(null, substr_75222(s_75255, first_75256, (s_75255 != null ? (s_75255.length-1) : -1)), NTI45040);

	return result_75258;

}

function nsuInitSkipTable(a_201744, sub_201745) {
		var m_201746 = (sub_201745 != null ? sub_201745.length : 0);
		var i_201748 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_201748 <= 248)) break L2;
					a_201744[chckIndx(chckRange(addInt(i_201748, 0), 0, 255), 0, a_201744.length+0-1)-0] = m_201746;
					a_201744[chckIndx(chckRange(addInt(i_201748, 1), 0, 255), 0, a_201744.length+0-1)-0] = m_201746;
					a_201744[chckIndx(chckRange(addInt(i_201748, 2), 0, 255), 0, a_201744.length+0-1)-0] = m_201746;
					a_201744[chckIndx(chckRange(addInt(i_201748, 3), 0, 255), 0, a_201744.length+0-1)-0] = m_201746;
					a_201744[chckIndx(chckRange(addInt(i_201748, 4), 0, 255), 0, a_201744.length+0-1)-0] = m_201746;
					a_201744[chckIndx(chckRange(addInt(i_201748, 5), 0, 255), 0, a_201744.length+0-1)-0] = m_201746;
					a_201744[chckIndx(chckRange(addInt(i_201748, 6), 0, 255), 0, a_201744.length+0-1)-0] = m_201746;
					a_201744[chckIndx(chckRange(addInt(i_201748, 7), 0, 255), 0, a_201744.length+0-1)-0] = m_201746;
					i_201748 = addInt(i_201748, 8);
				}
		} while(false);
		L3: do {
			var i_201765 = 0;
			var colontmp__389040 = 0;
			colontmp__389040 = subInt(m_201746, 1);
			var i_389041 = 0;
			L4: do {
					L5: while (true) {
					if (!(i_389041 < colontmp__389040)) break L5;
						i_201765 = i_389041;
						a_201744[chckIndx(sub_201745[chckIndx(i_201765, 0, sub_201745.length+0-1)-0], 0, a_201744.length+0-1)-0] = subInt(subInt(m_201746, 1), i_201765);
						i_389041 = addInt(i_389041, 1);
					}
			} while(false);
		} while(false);

	
}

function nsuFindStrA(a_201781, s_201782, sub_201783, start_201784, last_201785) {
		var Tmp1;

	var result_201787 = 0;

	BeforeRet: do {
		if ((last_201785 == 0)) {
		Tmp1 = (s_201782 != null ? (s_201782.length-1) : -1);
		}
		else {
		Tmp1 = last_201785;
		}
		
		var last_201789 = Tmp1;
		var sub_last_201790 = subInt((sub_201783 != null ? sub_201783.length : 0), 1);
		if ((sub_last_201790 == -1)) {
		result_201787 = start_201784;
		break BeforeRet;
		}
		
		var skip_201792 = start_201784;
		L2: do {
				L3: while (true) {
				if (!(sub_last_201790 <= subInt(last_201789, skip_201792))) break L3;
					var i_201793 = sub_last_201790;
					L4: do {
							L5: while (true) {
							if (!(s_201782[chckIndx(addInt(skip_201792, i_201793), 0, s_201782.length+0-1)-0] == sub_201783[chckIndx(i_201793, 0, sub_201783.length+0-1)-0])) break L5;
								if ((i_201793 == 0)) {
								result_201787 = skip_201792;
								break BeforeRet;
								}
								
								i_201793 = subInt(i_201793, 1);
							}
					} while(false);
					skip_201792 = addInt(skip_201792, a_201781[chckIndx(s_201782[chckIndx(addInt(skip_201792, sub_last_201790), 0, s_201782.length+0-1)-0], 0, a_201781.length+0-1)-0]);
				}
		} while(false);
		result_201787 = -1;
		break BeforeRet;
	} while (false);

	return result_201787;

}

function nsuReplaceStr(s_203318, sub_203319, by_203320) {
	var result_203321 = null;

		result_203321 = nimCopy(null, [], NTI45040);
		var sub_len_203322 = (sub_203319 != null ? sub_203319.length : 0);
		if ((sub_len_203322 == 0)) {
		result_203321 = nimCopy(null, s_203318, NTI45040);
		}
		else {
		if ((sub_len_203322 == 1)) {
		var c_203323 = sub_203319[chckIndx(0, 0, sub_203319.length+0-1)-0];
		var last_203325 = (s_203318 != null ? (s_203318.length-1) : -1);
		var i_203327 = 0;
		L1: do {
				L2: while (true) {
				if (!true) break L2;
					var j_203328 = nsuFindChar(s_203318, c_203323, chckRange(i_203327, 0, 2147483647), last_203325);
					if ((j_203328 < 0)) {
					break L1;
					}
					
					if (result_203321 != null) { result_203321 = (result_203321).concat(substr_75222(s_203318, i_203327, subInt(j_203328, 1))); } else { result_203321 = substr_75222(s_203318, i_203327, subInt(j_203328, 1)).slice(); };
					if (result_203321 != null) { result_203321 = (result_203321).concat(by_203320); } else { result_203321 = by_203320.slice(); };
					i_203327 = addInt(j_203328, sub_len_203322);
				}
		} while(false);
		if (result_203321 != null) { result_203321 = (result_203321).concat(substr_75253(s_203318, i_203327)); } else { result_203321 = substr_75253(s_203318, i_203327).slice(); };
		}
		else {
			var a_203329 = [new Int32Array(256)];
			nsuInitSkipTable(a_203329[0], sub_203319);
			var last_203332 = (s_203318 != null ? (s_203318.length-1) : -1);
			var i_203334 = 0;
			L3: do {
					L4: while (true) {
					if (!true) break L4;
						var j_203335 = nsuFindStrA(a_203329[0], s_203318, sub_203319, chckRange(i_203334, 0, 2147483647), last_203332);
						if ((j_203335 < 0)) {
						break L3;
						}
						
						if (result_203321 != null) { result_203321 = (result_203321).concat(substr_75222(s_203318, i_203334, subInt(j_203335, 1))); } else { result_203321 = substr_75222(s_203318, i_203334, subInt(j_203335, 1)).slice(); };
						if (result_203321 != null) { result_203321 = (result_203321).concat(by_203320); } else { result_203321 = by_203320.slice(); };
						i_203334 = addInt(j_203335, sub_len_203322);
					}
			} while(false);
			if (result_203321 != null) { result_203321 = (result_203321).concat(substr_75253(s_203318, i_203334)); } else { result_203321 = substr_75253(s_203318, i_203334).slice(); };
		}
		}

	return result_203321;

}

function substr_eq_196702(s_196704, pos_196705, substr_196706) {
	var result_196707 = false;

	BeforeRet: do {
		var i_196709 = 0;
		var length_196710 = (substr_196706 != null ? substr_196706.length : 0);
		L1: do {
				L2: while (true) {
				if (!(((i_196709 < length_196710) && (addInt(pos_196705, i_196709) < (s_196704 != null ? s_196704.length : 0))) && (s_196704[chckIndx(addInt(pos_196705, i_196709), 0, s_196704.length+0-1)-0] == substr_196706[chckIndx(i_196709, 0, substr_196706.length+0-1)-0]))) break L2;
					i_196709 = addInt(i_196709, 1);
				}
		} while(false);
		result_196707 = (i_196709 == length_196710);
		break BeforeRet;
	} while (false);

	return result_196707;

}

function nsuSplitString(s_197343, sep_197344, maxsplit_197346) {
	var result_197348 = null;

		if (!((0 < (sep_197344 != null ? sep_197344.length : 0)))) {
		failed_assert_impl_60066(makeNimstrLit("strutils.nim(768, 11) `sep.len > 0` "));
		}
		
		result_197348 = nimCopy(null, [], NTI197416);
		L1: do {
			var x_197401 = null;
			var last_389049 = 0;
			var splits_389050 = maxsplit_197346;
			L2: do {
					L3: while (true) {
					if (!(last_389049 <= (s_197343 != null ? s_197343.length : 0))) break L3;
						var first_389052 = last_389049;
						L4: do {
								L5: while (true) {
								if (!((last_389049 < (s_197343 != null ? s_197343.length : 0)) && !(substr_eq_196702(s_197343, last_389049, sep_197344)))) break L5;
									last_389049 = addInt(last_389049, 1);
								}
						} while(false);
						if ((splits_389050 == 0)) {
						last_389049 = (s_197343 != null ? s_197343.length : 0);
						}
						
						x_197401 = substr_75222(s_197343, first_389052, subInt(last_389049, 1));
						var Tmp6 = nimCopy(null, x_197401, NTI45040);
						if (result_197348 != null) { result_197348.push(Tmp6); } else { result_197348 = [Tmp6]; };
						if ((splits_389050 == 0)) {
						break L2;
						}
						
						splits_389050 = subInt(splits_389050, 1);
						last_389049 = addInt(last_389049, (sep_197344 != null ? sep_197344.length : 0));
					}
			} while(false);
		} while(false);

	return result_197348;

}

function new_seq_321212(len_321215) {
	var result_321217 = null;

		result_321217 = new Array(len_321215); for (var i=0;i<len_321215;++i) {result_321217[i]={k: 0, parent: null, current: null, n: null};}
	return result_321217;

}

function new_seq_321249(len_321252) {
	var result_321254 = null;

		result_321254 = new Array(len_321252); for (var i=0;i<len_321252;++i) {result_321254[i]={parent: null, newChild: null, pos: 0};}
	return result_321254;

}

function valueHEX3D_299839(n_299841, v_299842) {
		n_299841.text = v_299842;

	
}

function value_299822(n_299824) {
	var result_299825 = null;

		result_299825 = n_299824.text;

	return result_299825;

}

function wrap_event_311390(d_311392, n_311393, k_311394, action_311395) {

			function later_wrapper_311827() {

					function HEX3Aanonymous_311833(ev_311835) {

							function wrapper_311836() {
									var v_311838 = ev_311835.target.value;
									valueHEX3D_299839(n_311831, v_311838);
									if (!(!((action_311830 == null)))) {
									failed_assert_impl_60066(makeNimstrLit("karax.nim(75, 10) `action != nil` "));
									}
									
									action_311830(ev_311835, n_311831);
									if (!((value_299822(n_311831) == v_311838))) {
									ev_311835.target.value = value_299822(n_311831);
									}
									

								
							}

							if (!((timer_311832 == null))) {
							clearTimeout(timer_311832);
							}
							
							timer_311832 = setTimeout(wrapper_311836, 400);

						
					}

				var result_311829 = null;

					var action_311830 = action_311395;
					var n_311831 = n_311393;
					var timer_311832 = null;
					result_311829 = HEX3Aanonymous_311833;

				return result_311829;

			}

			function enter_wrapper_311657() {

					function HEX3Aanonymous_311662(ev_311664) {
							if ((ev_311664.keyCode == 13)) {
							var v_311665 = ev_311664.target.value;
							valueHEX3D_299839(n_311661, v_311665);
							if (!(!((action_311660 == null)))) {
							failed_assert_impl_60066(makeNimstrLit("karax.nim(75, 10) `action != nil` "));
							}
							
							action_311660(ev_311664, n_311661);
							if (!((value_299822(n_311661) == v_311665))) {
							ev_311664.target.value = value_299822(n_311661);
							}
							
							}
							

						
					}

				var result_311659 = null;

					var action_311660 = action_311395;
					var n_311661 = n_311393;
					result_311659 = HEX3Aanonymous_311662;

				return result_311659;

			}

			function std_wrapper_311397() {

					function HEX3Aanonymous_311402(ev_311404) {
								var Tmp1;
								var Tmp2;

								if ((n_311401.kind == 111)) Tmp2 = true; else {									Tmp2 = (n_311401.kind == 105);								}								if (Tmp2) Tmp1 = true; else {									Tmp1 = (n_311401.kind == 107);								}							if (Tmp1) {
							var v_311423 = ev_311404.target.value;
							valueHEX3D_299839(n_311401, v_311423);
							if (!(!((action_311400 == null)))) {
							failed_assert_impl_60066(makeNimstrLit("karax.nim(75, 10) `action != nil` "));
							}
							
							action_311400(ev_311404, n_311401);
							if (!((value_299822(n_311401) == v_311423))) {
							ev_311404.target.value = value_299822(n_311401);
							}
							
							}
							else {
							action_311400(ev_311404, n_311401);
							}
							

						
					}

				var result_311399 = null;

					var action_311400 = action_311395;
					var n_311401 = n_311393;
					result_311399 = HEX3Aanonymous_311402;

				return result_311399;

			}

	var result_311396 = null;

		switch (k_311394) {
		case 30:
			result_311396 = later_wrapper_311827();
			d_311392.addEventListener("keyup", result_311396, false);
			break;
		case 29:
			result_311396 = enter_wrapper_311657();
			d_311392.addEventListener("keyup", result_311396, false);
			break;
		default: 
			result_311396 = std_wrapper_311397();
			d_311392.addEventListener(to_event_name_299695[chckIndx(k_311394, 0, to_event_name_299695.length+0-1)-0], result_311396, false);
			break;
		}

	return result_311396;

}

function apply_events_312086(n_312088) {
		var dest_312089 = n_312088.dom;
		L1: do {
			var i_312102 = 0;
			var colontmp__389084 = 0;
			colontmp__389084 = (n_312088.events != null ? n_312088.events.length : 0);
			var i_389085 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_389085 < colontmp__389084)) break L3;
						i_312102 = i_389085;
						n_312088.events[chckIndx(i_312102, 0, n_312088.events.length+0-1)-0]["Field2"] = wrap_event_311390(dest_312089, n_312088, n_312088.events[chckIndx(i_312102, 0, n_312088.events.length+0-1)-0]["Field0"], n_312088.events[chckIndx(i_312102, 0, n_312088.events.length+0-1)-0]["Field1"]);
						i_389085 = addInt(i_389085, 1);
					}
			} while(false);
		} while(false);

	
}

function apply_style_297025(n_297027, s_297028) {
		n_297027.style = {};
		L1: do {
			var i_297061 = 0;
			var colontmp__389096 = 0;
			colontmp__389096 = subInt(s_297028.length, 1);
			var res_389097 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_389097 <= colontmp__389096)) break L3;
						i_297061 = res_389097;
						n_297027.style[s_297028[i_297061]] = s_297028[addInt(i_297061, 1)];
						res_389097 = addInt(res_389097, 2);
					}
			} while(false);
		} while(false);

	
}

function vnode_to_dom_312167(n_312169, kxi_312170) {
			var Tmp9;
			var Tmp10;

	var result_312171 = null;

	BeforeRet: do {
		if ((n_312169.kind == 0)) {
		result_312171 = document.createTextNode(n_312169.text);
		n_312169.dom = result_312171;
		if (!((n_312169.id == null))) {
		kxi_311324[0].byId[n_312169.id] = n_312169;
		}
		
		}
		else {
		if ((n_312169.kind == 6)) {
		result_312171 = document.createElement("div");
		result_312171.innerHTML = n_312169.text;
		n_312169.dom = result_312171;
		if (!((n_312169.id == null))) {
		kxi_311324[0].byId[n_312169.id] = n_312169;
		}
		
		break BeforeRet;
		}
		else {
		if ((n_312169.kind == 3)) {
		var x_312234 = vcomponents_304239[0][n_312169.text](n_312169.kids);
		result_312171 = vnode_to_dom_312167(x_312234, kxi_312170);
		n_312169.dom = result_312171;
		if (!((n_312169.id == null))) {
		kxi_311324[0].byId[n_312169.id] = n_312169;
		}
		
		break BeforeRet;
		}
		else {
		if ((n_312169.kind == 4)) {
		result_312171 = n_312169.dom;
		if (!(!((result_312171 == null)))) {
		failed_assert_impl_60066(makeNimstrLit("karax.nim(155, 12) `result != nil` "));
		}
		
		n_312169.dom = result_312171;
		if (!((n_312169.id == null))) {
		kxi_311324[0].byId[n_312169.id] = n_312169;
		}
		
		break BeforeRet;
		}
		else {
		if ((n_312169.kind == 5)) {
		var x_312422 = n_312169;
		if (!((x_312422.onAttachImpl == null))) {
		x_312422.onAttachImpl(x_312422);
		}
		
		if (!(!((x_312422.renderImpl == null)))) {
		failed_assert_impl_60066(makeNimstrLit("karax.nim(162, 12) `x.renderImpl != nil` "));
		}
		
		if ((x_312422.expanded == null)) {
		x_312422.expanded = x_312422.renderImpl(x_312422);
		}
		
		if (!(!((x_312422.expanded == null)))) {
		failed_assert_impl_60066(makeNimstrLit("karax.nim(166, 12) `x.expanded != nil` "));
		}
		
		result_312171 = vnode_to_dom_312167(x_312422.expanded, kxi_312170);
		n_312169.dom = result_312171;
		if (!((n_312169.id == null))) {
		kxi_311324[0].byId[n_312169.id] = n_312169;
		}
		
		break BeforeRet;
		}
		else {
			result_312171 = document.createElement(to_tag_299689[chckIndx(n_312169.kind, 0, to_tag_299689.length+0-1)-0]);
			n_312169.dom = result_312171;
			if (!((n_312169.id == null))) {
			kxi_311324[0].byId[n_312169.id] = n_312169;
			}
			
			L1: do {
				var k_312831 = null;
				L2: do {
					var i_389064 = 0;
					var colontmp__389065 = 0;
					colontmp__389065 = (n_312169.kids != null ? n_312169.kids.length : 0);
					var i_389066 = 0;
					L3: do {
							L4: while (true) {
							if (!(i_389066 < colontmp__389065)) break L4;
								i_389064 = i_389066;
								k_312831 = n_312169.kids[chckIndx(i_389064, 0, n_312169.kids.length+0-1)-0];
								result_312171.appendChild(vnode_to_dom_312167(k_312831, kxi_312170));
								i_389066 = addInt(i_389066, 1);
							}
					} while(false);
				} while(false);
			} while(false);
			if (!((n_312169.text == null))) {
			result_312171.value = n_312169.text;
			}
			
		}
		}}}}
		if (!((n_312169.id == null))) {
		result_312171.id = n_312169.id;
		}
		
		if (!((n_312169.class == null))) {
		result_312171.className = n_312169.class;
		}
		
		L5: do {
			var k_312832 = null;
			var v_312833 = null;
			L6: do {
				var i_389077 = 0;
				var colontmp__389078 = 0;
				colontmp__389078 = subInt((n_312169.attrs != null ? n_312169.attrs.length : 0), 2);
				var res_389079 = 0;
				L7: do {
						L8: while (true) {
						if (!(res_389079 <= colontmp__389078)) break L8;
							i_389077 = res_389079;
							k_312832 = n_312169.attrs[chckIndx(i_389077, 0, n_312169.attrs.length+0-1)-0];
							v_312833 = n_312169.attrs[chckIndx(addInt(i_389077, 1), 0, n_312169.attrs.length+0-1)-0];
							if (!((v_312833 == null))) {
							result_312171.setAttribute(k_312832, v_312833);
							}
							
							res_389079 = addInt(res_389079, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		apply_events_312086(n_312169);
			if (!!((kxi_312170 == null))) Tmp10 = false; else {				Tmp10 = (n_312169 == kxi_312170.toFocusV);			}			if (!Tmp10) Tmp9 = false; else {				Tmp9 = (kxi_312170.toFocus == null);			}		if (Tmp9) {
		kxi_312170.toFocus = result_312171;
		}
		
		if (!((n_312169.style == null))) {
		apply_style_297025(result_312171, n_312169.style);
		}
		
	} while (false);

	return result_312171;

}

function replace_by_id_313012(id_313014, new_tree_313015) {
		var x_313016 = document.getElementById(id_313014);
		x_313016.parentNode.replaceChild(new_tree_313015, x_313016);
		new_tree_313015.id = id_313014;

	
}

function len_300728(x_300730) {
	var result_300731 = 0;

		result_300731 = (x_300730.kids != null ? x_300730.kids.length : 0);

	return result_300731;

}

function HEX5BHEX5D_300750(x_300752, idx_300753) {
	var result_300754 = null;

		result_300754 = x_300752.kids[chckIndx(idx_300753, 0, x_300752.kids.length+0-1)-0];

	return result_300754;

}

function same_312920(n_312922, e_312923, nesting_312924) {
			var Tmp1;
			var Tmp2;

	var result_312926 = false;

	BeforeRet: do {
		if (kxi_311324[0].orphans.hasOwnProperty(n_312922.id)) {
		result_312926 = true;
		break BeforeRet;
		}
		
		if ((n_312922.kind == 5)) {
		result_312926 = same_312920(n_312922.expanded, e_312923, addInt(nesting_312924, 1));
		}
		else {
		if ((n_312922.kind == 6)) {
		result_312926 = true;
		}
		else {
			if ((n_312922.kind == 3)) Tmp1 = true; else {				Tmp1 = (n_312922.kind == 4);			}		if (Tmp1) {
		result_312926 = true;
		}
		else {
		if ((to_tag_299689[chckIndx(n_312922.kind, 0, to_tag_299689.length+0-1)-0] == e_312923.nodeName)) {
		result_312926 = true;
		if (!((n_312922.kind == 0))) {
			if (!!((e_312923.childNodes.length == len_300728(n_312922)))) Tmp2 = false; else {				Tmp2 = !((n_312922.kind == 111));			}		if (Tmp2) {
		rawEcho(makeNimstrLit("expected "), cstrToNimstr((len_300728(n_312922))+""), makeNimstrLit(" real "), cstrToNimstr((e_312923.childNodes.length)+""), makeNimstrLit(" "), cstrToNimstr(to_tag_299689[chckIndx(n_312922.kind, 0, to_tag_299689.length+0-1)-0]), makeNimstrLit(" nesting "), cstrToNimstr((nesting_312924)+""));
		result_312926 = false;
		break BeforeRet;
		}
		
		L3: do {
			var i_312994 = 0;
			var colontmp__389103 = 0;
			colontmp__389103 = len_300728(n_312922);
			var i_389104 = 0;
			L4: do {
					L5: while (true) {
					if (!(i_389104 < colontmp__389103)) break L5;
						i_312994 = i_389104;
						if (!(same_312920(HEX5BHEX5D_300750(n_312922, i_312994), e_312923.childNodes[i_312994], addInt(nesting_312924, 1)))) {
						result_312926 = false;
						break BeforeRet;
						}
						
						i_389104 = addInt(i_389104, 1);
					}
			} while(false);
		} while(false);
		}
		
		}
		else {
		rawEcho(makeNimstrLit("VDOM: "), cstrToNimstr(to_tag_299689[chckIndx(n_312922.kind, 0, to_tag_299689.length+0-1)-0]), makeNimstrLit(" DOM: "), cstrToNimstr(e_312923.nodeName));
		}
		}}}
	} while (false);

	return result_312926;

}

function eq_295814(a_295816, b_295817) {
	var result_295818 = false;

	BeforeRet: do {
		if ((a_295816 == null)) {
		if ((b_295817 == null)) {
		result_295818 = true;
		break BeforeRet;
		}
		else {
			result_295818 = false;
			break BeforeRet;
		}
		
		}
		else {
		if ((b_295817 == null)) {
		result_295818 = false;
		break BeforeRet;
		}
		}
		if (!((a_295816.length == b_295817.length))) {
		result_295818 = false;
		break BeforeRet;
		}
		
		L1: do {
			var i_295916 = 0;
			var colontmp__389141 = 0;
			colontmp__389141 = a_295816.length;
			var i_389142 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_389142 < colontmp__389141)) break L3;
						i_295916 = i_389142;
						if (!((a_295816[i_295916] == b_295817[i_295916]))) {
						result_295818 = false;
						break BeforeRet;
						}
						
						i_389142 = addInt(i_389142, 1);
					}
			} while(false);
		} while(false);
		result_295818 = true;
		break BeforeRet;
	} while (false);

	return result_295818;

}

function same_attrs_302480(a_302482, b_302483) {
	var result_302484 = false;

	BeforeRet: do {
		if (((a_302482.attrs != null ? a_302482.attrs.length : 0) == (b_302483.attrs != null ? b_302483.attrs.length : 0))) {
		result_302484 = true;
		L1: do {
			var i_302507 = 0;
			var colontmp__389146 = 0;
			colontmp__389146 = (a_302482.attrs != null ? a_302482.attrs.length : 0);
			var i_389147 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_389147 < colontmp__389146)) break L3;
						i_302507 = i_389147;
						if (!((a_302482.attrs[chckIndx(i_302507, 0, a_302482.attrs.length+0-1)-0] == b_302483.attrs[chckIndx(i_302507, 0, b_302483.attrs.length+0-1)-0]))) {
						result_302484 = false;
						break BeforeRet;
						}
						
						i_389147 = addInt(i_389147, 1);
					}
			} while(false);
		} while(false);
		}
		
	} while (false);

	return result_302484;

}

function eq_313214(a_313216, b_313217) {
			var Tmp4;
			var Tmp5;

	var result_313218 = 0;

	BeforeRet: do {
		if (!((a_313216.kind == b_313217.kind))) {
		result_313218 = 1;
		break BeforeRet;
		}
		
		if (!((a_313216.id == b_313217.id))) {
		result_313218 = 1;
		break BeforeRet;
		}
		
		result_313218 = 3;
		if (!((a_313216.index == b_313217.index))) {
		result_313218 = 1;
		break BeforeRet;
		}
		
		if ((a_313216.kind == 0)) {
		if (!((a_313216.text == b_313217.text))) {
		result_313218 = 1;
		break BeforeRet;
		}
		
		}
		else {
		if ((a_313216.kind == 3)) {
		if (!((a_313216.text == b_313217.text))) {
		result_313218 = 1;
		break BeforeRet;
		}
		
		if (!((len_300728(a_313216) == len_300728(b_313217)))) {
		result_313218 = 1;
		break BeforeRet;
		}
		
		L1: do {
			var i_314014 = 0;
			var colontmp__389136 = 0;
			colontmp__389136 = len_300728(a_313216);
			var i_389137 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_389137 < colontmp__389136)) break L3;
						i_314014 = i_389137;
						if ((eq_313214(HEX5BHEX5D_300750(a_313216, i_314014), HEX5BHEX5D_300750(b_313217, i_314014)) == 1)) {
						result_313218 = 1;
						break BeforeRet;
						}
						
						i_389137 = addInt(i_389137, 1);
					}
			} while(false);
		} while(false);
		}
		else {
		if ((a_313216.kind == 4)) {
		result_313218 = 3;
		break BeforeRet;
		}
		else {
		if ((a_313216.kind == 6)) {
		if (!((a_313216.text == b_313217.text))) {
		result_313218 = 1;
		break BeforeRet;
		}
		
		}
		else {
		if ((b_313217.kind == 5)) {
		if (!((a_313216.text == b_313217.text))) {
		result_313218 = 1;
		break BeforeRet;
		}
		
		if (!((a_313216.key == b_313217.key))) {
		result_313218 = 1;
		break BeforeRet;
		}
		
		result_313218 = 0;
		break BeforeRet;
		}
		}}}}
			if (!((a_313216.class == b_313217.class))) Tmp5 = true; else {				Tmp5 = !(eq_295814(a_313216.style, b_313217.style));			}			if (Tmp5) Tmp4 = true; else {				Tmp4 = !(same_attrs_302480(a_313216, b_313217));			}		if (Tmp4) {
		result_313218 = 2;
		break BeforeRet;
		}
		
		break BeforeRet;
	} while (false);

	return result_313218;

}

function update_styles_314629(new_node_314631, old_node_314632) {
		if (!((old_node_314632.dom == null))) {
		if (!((new_node_314631.style == null))) {
		apply_style_297025(old_node_314632.dom, new_node_314631.style);
		}
		else {
			old_node_314632.dom.style = {m_type: NTI95283, background: null, backgroundAttachment: null, backgroundColor: null, backgroundImage: null, backgroundPosition: null, backgroundRepeat: null, border: null, borderBottom: null, borderBottomColor: null, borderBottomStyle: null, borderBottomWidth: null, borderColor: null, borderLeft: null, borderLeftColor: null, borderLeftStyle: null, borderLeftWidth: null, borderRight: null, borderRightColor: null, borderRightStyle: null, borderRightWidth: null, borderStyle: null, borderTop: null, borderTopColor: null, borderTopStyle: null, borderTopWidth: null, borderWidth: null, bottom: null, captionSide: null, clear: null, clip: null, color: null, cursor: null, direction: null, display: null, emptyCells: null, cssFloat: null, font: null, fontFamily: null, fontSize: null, fontStretch: null, fontStyle: null, fontVariant: null, fontWeight: null, height: null, left: null, letterSpacing: null, lineHeight: null, listStyle: null, listStyleImage: null, listStylePosition: null, listStyleType: null, margin: null, marginBottom: null, marginLeft: null, marginRight: null, marginTop: null, maxHeight: null, maxWidth: null, minHeight: null, minWidth: null, opacity: null, overflow: null, padding: null, paddingBottom: null, paddingLeft: null, paddingRight: null, paddingTop: null, pageBreakAfter: null, pageBreakBefore: null, pointerEvents: null, position: null, right: null, scrollbar3dLightColor: null, scrollbarArrowColor: null, scrollbarBaseColor: null, scrollbarDarkshadowColor: null, scrollbarFaceColor: null, scrollbarHighlightColor: null, scrollbarShadowColor: null, scrollbarTrackColor: null, tableLayout: null, textAlign: null, textDecoration: null, textIndent: null, textTransform: null, transform: null, top: null, verticalAlign: null, visibility: null, width: null, wordSpacing: null, zIndex: 0};
		}
		
		old_node_314632.dom.className = new_node_314631.class;
		}
		
		old_node_314632.style = new_node_314631.style;
		old_node_314632.class = new_node_314631.class;

	
}

function take_over_attr_300660(new_node_300662, old_node_300663) {
		old_node_300663.attrs = new_node_300662.attrs;

	
}

function update_attributes_314677(new_node_314679, old_node_314680) {
		if (!((old_node_314680.dom == null))) {
		L1: do {
			var k_314689 = null;
			var __314690 = null;
			L2: do {
				var i_389153 = 0;
				var colontmp__389154 = 0;
				colontmp__389154 = subInt((old_node_314680.attrs != null ? old_node_314680.attrs.length : 0), 2);
				var res_389155 = 0;
				L3: do {
						L4: while (true) {
						if (!(res_389155 <= colontmp__389154)) break L4;
							i_389153 = res_389155;
							k_314689 = old_node_314680.attrs[chckIndx(i_389153, 0, old_node_314680.attrs.length+0-1)-0];
							__314690 = old_node_314680.attrs[chckIndx(addInt(i_389153, 1), 0, old_node_314680.attrs.length+0-1)-0];
							old_node_314680.dom.removeAttribute(k_314689);
							res_389155 = addInt(res_389155, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		L5: do {
			var k_314691 = null;
			var v_314692 = null;
			L6: do {
				var i_389161 = 0;
				var colontmp__389162 = 0;
				colontmp__389162 = subInt((new_node_314679.attrs != null ? new_node_314679.attrs.length : 0), 2);
				var res_389163 = 0;
				L7: do {
						L8: while (true) {
						if (!(res_389163 <= colontmp__389162)) break L8;
							i_389161 = res_389163;
							k_314691 = new_node_314679.attrs[chckIndx(i_389161, 0, new_node_314679.attrs.length+0-1)-0];
							v_314692 = new_node_314679.attrs[chckIndx(addInt(i_389161, 1), 0, new_node_314679.attrs.length+0-1)-0];
							if (!((v_314692 == null))) {
							old_node_314680.dom.setAttribute(k_314691, v_314692);
							}
							
							res_389163 = addInt(res_389163, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		}
		
		take_over_attr_300660(new_node_314679, old_node_314680);

	
}

function merge_events_314706(new_node_314708, old_node_314709, kxi_314710) {
						var Tmp4;

		var d_314711 = old_node_314709.dom;
		L1: do {
			var i_314724 = 0;
			var colontmp__389168 = 0;
			colontmp__389168 = (old_node_314709.events != null ? old_node_314709.events.length : 0);
			var i_389169 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_389169 < colontmp__389168)) break L3;
						i_314724 = i_389169;
						var k_314725 = old_node_314709.events[chckIndx(i_314724, 0, old_node_314709.events.length+0-1)-0]["Field0"];
						switch (k_314725) {
						case 30:
						case 29:
							Tmp4 = "keyup";
							break;
						default: 
							Tmp4 = to_event_name_299695[chckIndx(k_314725, 0, to_event_name_299695.length+0-1)-0];
							break;
						}
						var name_314728 = Tmp4;
						d_314711.removeEventListener(name_314728, old_node_314709.events[chckIndx(i_314724, 0, old_node_314709.events.length+0-1)-0]["Field2"]);
						i_389169 = addInt(i_389169, 1);
					}
			} while(false);
		} while(false);
		old_node_314709.events = new_node_314708.events;
		apply_events_312086(old_node_314709);

	
}

function HEX5BHEX5DHEX3D_300768(x_300770, idx_300771, y_300772) {
		x_300770.kids[chckIndx(idx_300771, 0, x_300770.kids.length+0-1)-0] = y_300772;

	
}

function add_patch_v_314868(kxi_314870, parent_314871, pos_314872, new_child_314873) {
		var l_314874 = kxi_314870.patchLenV;
		if (((kxi_314870.patchesV != null ? kxi_314870.patchesV.length : 0) <= l_314874)) {
		if (kxi_314870.patchesV != null) { kxi_314870.patchesV.push({parent: parent_314871, newChild: new_child_314873, pos: pos_314872}); } else { kxi_314870.patchesV = [{parent: parent_314871, newChild: new_child_314873, pos: pos_314872}]; };
		}
		else {
			kxi_314870.patchesV[chckIndx(l_314874, 0, kxi_314870.patchesV.length+0-1)-0].parent = parent_314871;
			kxi_314870.patchesV[chckIndx(l_314874, 0, kxi_314870.patchesV.length+0-1)-0].newChild = new_child_314873;
			kxi_314870.patchesV[chckIndx(l_314874, 0, kxi_314870.patchesV.length+0-1)-0].pos = pos_314872;
		}
		
		kxi_314870.patchLenV = addInt(kxi_314870.patchLenV, 1);

	
}

function add_patch_314814(kxi_314816, ka_314817, parenta_314818, currenta_314819, na_314820) {
		var l_314821 = kxi_314816.patchLen;
		if (((kxi_314816.patches != null ? kxi_314816.patches.length : 0) <= l_314821)) {
		if (kxi_314816.patches != null) { kxi_314816.patches.push({k: ka_314817, parent: parenta_314818, current: currenta_314819, n: na_314820}); } else { kxi_314816.patches = [{k: ka_314817, parent: parenta_314818, current: currenta_314819, n: na_314820}]; };
		}
		else {
			kxi_314816.patches[chckIndx(l_314821, 0, kxi_314816.patches.length+0-1)-0].k = ka_314817;
			kxi_314816.patches[chckIndx(l_314821, 0, kxi_314816.patches.length+0-1)-0].parent = parenta_314818;
			kxi_314816.patches[chckIndx(l_314821, 0, kxi_314816.patches.length+0-1)-0].current = currenta_314819;
			kxi_314816.patches[chckIndx(l_314821, 0, kxi_314816.patches.length+0-1)-0].n = na_314820;
		}
		
		kxi_314816.patchLen = addInt(kxi_314816.patchLen, 1);

	
}

function diff_315045(new_node_315047, old_node_315048, parent_315049, current_315050, kxi_315051) {
				var Tmp1;
			var Tmp2;
			var Tmp3;
						var Tmp6;
						var Tmp9;
						var Tmp10;

	var result_315052 = 0;

	BeforeRet: do {
		result_315052 = eq_313214(new_node_315047, old_node_315048);
		switch (result_315052) {
		case 0:
			if (kxi_315051.components != null) { kxi_315051.components.push({oldNode: old_node_315048, newNode: new_node_315047, parent: parent_315049, current: current_315050}); } else { kxi_315051.components = [{oldNode: old_node_315048, newNode: new_node_315047, parent: parent_315049, current: current_315050}]; };
			break;
		case 3:
		case 2:
			new_node_315047.dom = old_node_315048.dom;
			if ((result_315052 == 2)) {
			update_styles_314629(new_node_315047, old_node_315048);
			update_attributes_314677(new_node_315047, old_node_315048);
			if ((old_node_315048.kind == 0)) {
			old_node_315048.text = new_node_315047.text;
			old_node_315048.dom.nodeValue = new_node_315047.text;
			}
			
			}
			
				if (!(((new_node_315047.events != null ? new_node_315047.events.length : 0) == 0))) Tmp1 = true; else {					Tmp1 = !(((old_node_315048.events != null ? old_node_315048.events.length : 0) == 0));				}			if (Tmp1) {
			merge_events_314706(new_node_315047, old_node_315048, kxi_315051);
			}
			
			var new_length_315401 = len_300728(new_node_315047);
			var old_length_315402 = len_300728(old_node_315048);
			if (((new_length_315401 == 0) && (old_length_315402 == 0))) {
			break BeforeRet;
			}
			
			var min_length_315403 = nimMin(new_length_315401, old_length_315402);
			if (!((old_node_315048.kind == new_node_315047.kind))) {
			failed_assert_impl_60066(makeNimstrLit("karax.nim(419, 12) `oldNode.kind == newNode.kind` "));
			}
			
			var common_prefix_315602 = 0;
			if ((old_node_315048.kind == 5)) Tmp3 = true; else {				Tmp3 = (old_node_315048.kind == 3);			}			if (Tmp3) Tmp2 = true; else {				Tmp2 = (old_node_315048.kind == 4);			}			var is_special_315621 = Tmp2;
			L4: do {
					L5: while (true) {
					if (!(common_prefix_315602 < min_length_315403)) break L5;
						var old_len_315645 = kxi_315051.patchLen;
						var old_len_v_315646 = kxi_315051.patchLenV;
						if (!((common_prefix_315602 < len_300728(new_node_315047)))) {
						failed_assert_impl_60066(makeNimstrLit("karax.nim(428, 14) `commonPrefix <\x0A    newNode.len` "));
						}
						
						if (!((common_prefix_315602 < len_300728(old_node_315048)))) {
						failed_assert_impl_60066(makeNimstrLit("karax.nim(429, 14) `commonPrefix <\x0A    oldNode.len` "));
						}
						
						if (is_special_315621) {
						Tmp6 = diff_315045(HEX5BHEX5D_300750(new_node_315047, common_prefix_315602), HEX5BHEX5D_300750(old_node_315048, common_prefix_315602), parent_315049, current_315050, kxi_315051);
						}
						else {
						Tmp6 = diff_315045(HEX5BHEX5D_300750(new_node_315047, common_prefix_315602), HEX5BHEX5D_300750(old_node_315048, common_prefix_315602), current_315050, current_315050.childNodes[chckIndx(common_prefix_315602, 0, current_315050.childNodes.length+0-1)-0], kxi_315051);
						}
						
						var r_315647 = Tmp6;
						switch (r_315647) {
						case 3:
						case 0:
						case 2:
							HEX5BHEX5DHEX3D_300768(new_node_315047, common_prefix_315602, HEX5BHEX5D_300750(old_node_315048, common_prefix_315602));
							common_prefix_315602 = addInt(common_prefix_315602, 1);
							break;
						case 4:
							add_patch_v_314868(kxi_315051, old_node_315048, common_prefix_315602, HEX5BHEX5D_300750(new_node_315047, common_prefix_315602));
							common_prefix_315602 = addInt(common_prefix_315602, 1);
							result_315052 = 4;
							break;
						case 1:
							kxi_315051.patchLen = old_len_315645;
							kxi_315051.patchLenV = old_len_v_315646;
							if (!((result_315052 == 1))) {
							result_315052 = r_315647;
							}
							
							break L4;
							break;
						}
					}
			} while(false);
			var old_pos_316022 = subInt(old_length_315402, 1);
			var new_pos_316023 = subInt(new_length_315401, 1);
			L7: do {
					L8: while (true) {
						if (!(common_prefix_315602 <= old_pos_316022)) Tmp9 = false; else {							Tmp9 = (common_prefix_315602 <= new_pos_316023);						}					if (!Tmp9) break L8;
						var old_len_316024 = kxi_315051.patchLen;
						var old_len_v_316025 = kxi_315051.patchLenV;
						if (!((new_pos_316023 < len_300728(new_node_315047)))) {
						failed_assert_impl_60066(makeNimstrLit("karax.nim(428, 14) `newPos <\x0A    newNode.len` "));
						}
						
						if (!((old_pos_316022 < len_300728(old_node_315048)))) {
						failed_assert_impl_60066(makeNimstrLit("karax.nim(429, 14) `oldPos <\x0A    oldNode.len` "));
						}
						
						if (is_special_315621) {
						Tmp10 = diff_315045(HEX5BHEX5D_300750(new_node_315047, new_pos_316023), HEX5BHEX5D_300750(old_node_315048, old_pos_316022), parent_315049, current_315050, kxi_315051);
						}
						else {
						Tmp10 = diff_315045(HEX5BHEX5D_300750(new_node_315047, new_pos_316023), HEX5BHEX5D_300750(old_node_315048, old_pos_316022), current_315050, current_315050.childNodes[chckIndx(old_pos_316022, 0, current_315050.childNodes.length+0-1)-0], kxi_315051);
						}
						
						var r_316026 = Tmp10;
						switch (r_316026) {
						case 3:
						case 0:
						case 2:
							HEX5BHEX5DHEX3D_300768(new_node_315047, new_pos_316023, HEX5BHEX5D_300750(old_node_315048, old_pos_316022));
							old_pos_316022 = subInt(old_pos_316022, 1);
							new_pos_316023 = subInt(new_pos_316023, 1);
							break;
						case 4:
							add_patch_v_314868(kxi_315051, old_node_315048, old_pos_316022, HEX5BHEX5D_300750(new_node_315047, new_pos_316023));
							old_pos_316022 = subInt(old_pos_316022, 1);
							new_pos_316023 = subInt(new_pos_316023, 1);
							result_315052 = 4;
							break;
						case 1:
							kxi_315051.patchLen = old_len_316024;
							kxi_315051.patchLenV = old_len_v_316025;
							if (!((result_315052 == 1))) {
							result_315052 = r_316026;
							}
							
							break L7;
							break;
						}
					}
			} while(false);
			var pos_316434 = addInt(nimMin(old_pos_316022, new_pos_316023), 1);
			L11: do {
				var i_316440 = 0;
				var colontmp__389111 = 0;
				colontmp__389111 = subInt(pos_316434, 1);
				var res_389112 = common_prefix_315602;
				L12: do {
						L13: while (true) {
						if (!(res_389112 <= colontmp__389111)) break L13;
							i_316440 = res_389112;
							var r_316441 = diff_315045(HEX5BHEX5D_300750(new_node_315047, i_316440), HEX5BHEX5D_300750(old_node_315048, i_316440), current_315050, current_315050.childNodes[chckIndx(i_316440, 0, current_315050.childNodes.length+0-1)-0], kxi_315051);
							if ((r_316441 == 4)) {
							add_patch_v_314868(kxi_315051, old_node_315048, i_316440, HEX5BHEX5D_300750(new_node_315047, i_316440));
							}
							else {
							if (!((r_316441 == 1))) {
							HEX5BHEX5DHEX3D_300768(new_node_315047, i_316440, HEX5BHEX5D_300750(old_node_315048, i_316440));
							}
							}
							res_389112 = addInt(res_389112, 1);
						}
				} while(false);
			} while(false);
			if ((addInt(old_pos_316022, 1) == old_length_315402)) {
			L14: do {
				var i_316457 = 0;
				var res_389118 = pos_316434;
				L15: do {
						L16: while (true) {
						if (!(res_389118 <= new_pos_316023)) break L16;
							i_316457 = res_389118;
							add_patch_314814(kxi_315051, 2, current_315050, null, HEX5BHEX5D_300750(new_node_315047, i_316457));
							result_315052 = 4;
							res_389118 = addInt(res_389118, 1);
						}
				} while(false);
			} while(false);
			}
			else {
				var before_316458 = current_315050.childNodes[chckIndx(addInt(old_pos_316022, 1), 0, current_315050.childNodes.length+0-1)-0];
				L17: do {
					var i_316464 = 0;
					var res_389124 = pos_316434;
					L18: do {
							L19: while (true) {
							if (!(res_389124 <= new_pos_316023)) break L19;
								i_316464 = res_389124;
								add_patch_314814(kxi_315051, 3, current_315050, before_316458, HEX5BHEX5D_300750(new_node_315047, i_316464));
								result_315052 = 4;
								res_389124 = addInt(res_389124, 1);
							}
					} while(false);
				} while(false);
			}
			
			L20: do {
				var i_316470 = 0;
				var res_389130 = pos_316434;
				L21: do {
						L22: while (true) {
						if (!(res_389130 <= old_pos_316022)) break L22;
							i_316470 = res_389130;
							add_patch_314814(kxi_311324[0], 4, null, null, HEX5BHEX5D_300750(old_node_315048, i_316470));
							add_patch_314814(kxi_315051, 1, current_315050, current_315050.childNodes[chckIndx(i_316470, 0, current_315050.childNodes.length+0-1)-0], null);
							result_315052 = 4;
							res_389130 = addInt(res_389130, 1);
						}
				} while(false);
			} while(false);
			break;
		case 1:
			add_patch_314814(kxi_311324[0], 4, null, null, old_node_315048);
			add_patch_314814(kxi_315051, 0, parent_315049, current_315050, new_node_315047);
			break;
		case 4:
			if (true) {
			failed_assert_impl_60066(makeNimstrLit("karax.nim(492, 26) `false` eq returned usenewNode"));
			}
			
			break;
		}
	} while (false);

	return result_315052;

}

function apply_components_316814(kxi_316816) {
						var Tmp3;

		var i_316818 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_316818 < (kxi_316816.components != null ? kxi_316816.components.length : 0))) break L2;
					var x_316824 = kxi_316816.components[chckIndx(i_316818, 0, kxi_316816.components.length+0-1)-0].oldNode;
					var new_node_316825 = kxi_316816.components[chckIndx(i_316818, 0, kxi_316816.components.length+0-1)-0].newNode;
						if (!!((x_316824.changedImpl == null))) Tmp3 = false; else {							Tmp3 = x_316824.changedImpl(x_316824, new_node_316825);						}					if (Tmp3) {
					var current_317201 = kxi_316816.components[chckIndx(i_316818, 0, kxi_316816.components.length+0-1)-0].current;
					var parent_317202 = kxi_316816.components[chckIndx(i_316818, 0, kxi_316816.components.length+0-1)-0].parent;
					x_316824.updatedImpl(x_316824, new_node_316825);
					var old_expanded_317203 = x_316824.expanded;
					x_316824.expanded = x_316824.renderImpl(x_316824);
					x_316824.renderedVersion = x_316824.version;
					if ((old_expanded_317203 == null)) {
					add_patch_314814(kxi_311324[0], 4, null, null, x_316824);
					add_patch_314814(kxi_316816, 0, parent_317202, current_317201, x_316824.expanded);
					}
					else {
						var res_317601 = diff_315045(x_316824.expanded, old_expanded_317203, parent_317202, current_317201, kxi_316816);
						if ((res_317601 == 4)) {
						}
						else {
						if (!((res_317601 == 1))) {
						x_316824.expanded = old_expanded_317203;
						if (!(!((old_expanded_317203.dom == null)))) {
						failed_assert_impl_60066(makeNimstrLit("karax.nim(534, 18) `oldExpanded.dom != nil` old expanded.dom is nil"));
						}
						
						}
						else {
							if (!(!((x_316824.expanded.dom == null)))) {
							failed_assert_impl_60066(makeNimstrLit("karax.nim(538, 18) `x.expanded.dom != nil` expanded.dom is nil"));
							}
							
						}
						}
					}
					
					}
					
					i_316818 = addInt(i_316818, 1);
				}
		} while(false);
		if (kxi_316816.components === null) kxi_316816.components = [];
               if (kxi_316816.components.length < 0) { for (var i=kxi_316816.components.length;i<0;++i) kxi_316816.components.push({oldNode: null, newNode: null, parent: null, current: null}); }
               else { kxi_316816.components.length = 0; };

	
}

function apply_patch_314906(kxi_314908) {
		L1: do {
			var i_314916 = 0;
			var colontmp__389176 = 0;
			colontmp__389176 = kxi_314908.patchLen;
			var i_389177 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_389177 < colontmp__389176)) break L3;
						i_314916 = i_389177;
						var p_314917 = nimCopy(null, kxi_314908.patches[chckIndx(i_314916, 0, kxi_314908.patches.length+0-1)-0], NTI311209);
						switch (p_314917.k) {
						case 0:
							var nn_314918 = vnode_to_dom_312167(p_314917.n, kxi_314908);
							if ((p_314917.parent == null)) {
							replace_by_id_313012(kxi_314908.rootId, nn_314918);
							}
							else {
							p_314917.parent.replaceChild(nn_314918, p_314917.current);
							}
							
							break;
						case 1:
							p_314917.parent.removeChild(p_314917.current);
							break;
						case 2:
							var nn_314927 = vnode_to_dom_312167(p_314917.n, kxi_314908);
							p_314917.parent.appendChild(nn_314927);
							break;
						case 3:
							var nn_314928 = vnode_to_dom_312167(p_314917.n, kxi_314908);
							p_314917.parent.insertBefore(nn_314928, p_314917.current);
							break;
						case 4:
							var n_314929 = p_314917.n;
							if (!((n_314929.id == null))) {
							delete kxi_314908.byId[n_314929.id];
							}
							
							if ((n_314929.kind == 5)) {
							var x_314947 = n_314929;
							if (!((x_314947.onDetachImpl == null))) {
							x_314947.onDetachImpl(x_314947);
							}
							
							}
							
							if (!(kxi_314908.surpressRedraws)) {
							n_314929.dom = null;
							}
							
							break;
						}
						i_389177 = addInt(i_389177, 1);
					}
			} while(false);
		} while(false);
		kxi_314908.patchLen = 0;
		L4: do {
			var i_314960 = 0;
			var colontmp__389181 = 0;
			colontmp__389181 = kxi_314908.patchLenV;
			var i_389182 = 0;
			L5: do {
					L6: while (true) {
					if (!(i_389182 < colontmp__389181)) break L6;
						i_314960 = i_389182;
						var p_314961 = nimCopy(null, kxi_314908.patchesV[chckIndx(i_314960, 0, kxi_314908.patchesV.length+0-1)-0], NTI311211);
						HEX5BHEX5DHEX3D_300768(p_314961.parent, p_314961.pos, p_314961.newChild);
						if (!(!((p_314961.newChild.dom == null)))) {
						failed_assert_impl_60066(makeNimstrLit("karax.nim(378, 12) `p.newChild.dom != nil` "));
						}
						
						i_389182 = addInt(i_389182, 1);
					}
			} while(false);
		} while(false);
		kxi_314908.patchLenV = 0;

	
}

function dodraw_319646(kxi_319648) {
	BeforeRet: do {
		if ((kxi_319648.renderer == null)) {
		break BeforeRet;
		}
		
		var rdata_319653 = {hashPart: window.location.hash};
		var newtree_319654 = kxi_319648.renderer(rdata_319653);
		kxi_319648.runCount = addInt(kxi_319648.runCount, 1);
		newtree_319654.id = kxi_319648.rootId;
		kxi_319648.toFocus = null;
		if ((kxi_319648.currentTree == null)) {
		var asdom_319669 = vnode_to_dom_312167(newtree_319654, kxi_319648);
		replace_by_id_313012(kxi_319648.rootId, asdom_319669);
		}
		else {
			if (!(same_312920(kxi_319648.currentTree, document.getElementById(kxi_319648.rootId), 0))) {
			failed_assert_impl_60066(makeNimstrLit("karax.nim(598, 14) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
			}
			
			var olddom_319801 = document.getElementById(kxi_319648.rootId);
			diff_315045(newtree_319654, kxi_319648.currentTree, null, olddom_319801, kxi_319648);
		}
		
		apply_components_316814(kxi_319648);
		apply_patch_314906(kxi_319648);
		kxi_319648.currentTree = newtree_319654;
		if (!(same_312920(kxi_319648.currentTree, document.getElementById(kxi_319648.rootId), 0))) {
		failed_assert_impl_60066(makeNimstrLit("karax.nim(612, 12) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
		}
		
		if (!((kxi_319648.postRenderCallback == null))) {
		kxi_319648.postRenderCallback(rdata_319653);
		}
		
		if (!((kxi_319648.toFocus == null))) {
		kxi_319648.toFocus.focus();
		}
		
		kxi_319648.renderId = 0;
	} while (false);

	
}

function init_321046(ev_321048) {

		function HEX3Aanonymous_321049() {
				dodraw_319646(kxi_311324[0]);

			
		}

		kxi_311324[0].renderId = window.requestAnimationFrame(HEX3Aanonymous_321049);

	
}

function redraw_320814(kxi_320816) {

		function HEX3Aanonymous_321001() {
				dodraw_319646(kxi_320816);

			
		}

		if ((kxi_320816.renderId == 0)) {
		kxi_320816.renderId = window.requestAnimationFrame(HEX3Aanonymous_321001);
		}
		

	
}

function set_renderer_321078(renderer_321083, root_321084, client_post_render_callback_321088) {

		function HEX3Aanonymous_321312() {
				redraw_320814(kxi_311324[0]);

			
		}

	var result_321089 = null;

		if ((document.getElementById(root_321084) == null)) {
		var msg_321095 = (("Could not find a <div> with id=" + root_321084) + ". Karax needs it as its rendering target.");
		var e_321098 = null;
		e_321098 = {m_type: NTI48426, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_321098.message = nimCopy(null, cstrToNimstr(msg_321095), NTI45040);
		e_321098.parent = null;
		raiseException(e_321098, "Exception");
		}
		
		result_321089 = {rootId: root_321084, renderer: renderer_321083, postRenderCallback: client_post_render_callback_321088, patches: new_seq_321212(60), patchesV: new_seq_321249(30), components: [], surpressRedraws: false, byId: {}, orphans: {}, currentTree: null, toFocus: null, toFocusV: null, renderId: 0, patchLen: 0, patchLenV: 0, runCount: 0};
		kxi_311324[0] = result_321089;
		window.onload = init_321046;
		window.onhashchange = HEX3Aanonymous_321312;

	return result_321089;

}

function set_renderer_321400(renderer_321404, root_321405, client_post_render_callback_321408) {

		function wrap_renderer_321410(data_321412) {
			var result_321413 = null;

				result_321413 = renderer_321404();

			return result_321413;

		}

		function wrap_post_render_321427(data_321429) {
				if (!((client_post_render_callback_321408 == null))) {
				client_post_render_callback_321408();
				}
				

			
		}

	var result_321409 = null;

		result_321409 = set_renderer_321078(wrap_renderer_321410, root_321405, wrap_post_render_321427);

	return result_321409;

}

function new_vnode_302028(kind_302030) {
	var result_302031 = null;

		result_302031 = {kind: kind_302030, index: -1, m_type: NTI299714, id: null, class: null, text: null, kids: null, attrs: null, events: null, style: null, dom: null};

	return result_302031;

}

function add_300786(parent_300788, kid_300789) {
		if (parent_300788.kids != null) { parent_300788.kids.push(kid_300789); } else { parent_300788.kids = [kid_300789]; };

	
}

function tree_302046(kind_302048, kids_302050) {
	var result_302051 = null;

		result_302051 = new_vnode_302028(kind_302048);
		L1: do {
			var k_302082 = null;
			var i_389249 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_389249 < (kids_302050 != null ? kids_302050.length : 0))) break L3;
						k_302082 = kids_302050[chckIndx(i_389249, 0, kids_302050.length+0-1)-0];
						add_300786(result_302051, k_302082);
						i_389249 = addInt(i_389249, 1);
					}
			} while(false);
		} while(false);

	return result_302051;

}

function add_event_listener_302521(n_302523, event_302524, handler_302525) {
		if (n_302523.events != null) { n_302523.events.push({Field0: event_302524, Field1: handler_302525, Field2: null}); } else { n_302523.events = [{Field0: event_302524, Field1: handler_302525, Field2: null}]; };

	
}

function add_event_handler_321547(n_321549, k_321550, action_321551, kxi_321552) {

		function wrapper_321553(ev_321555, n_321556) {
				action_321551(ev_321555, n_321556);
				if (!(kxi_321552.surpressRedraws)) {
				redraw_320814(kxi_321552);
				}
				

			
		}

		add_event_listener_302521(n_321549, k_321550, wrapper_321553);

	
}

function chckd_check_366237(ev_366239, n_366240) {
		L1: do {
			var inp_chck_366414 = null;
			var colontmp__389253 = null;
			colontmp__389253 = document.querySelectorAll(".show-sector");
			var i_389255 = 0;
			var l_389256 = (colontmp__389253 != null ? colontmp__389253.length : 0);
			L2: do {
					L3: while (true) {
					if (!(i_389255 < l_389256)) break L3;
						inp_chck_366414 = colontmp__389253[chckIndx(i_389255, 0, colontmp__389253.length+0-1)-0];
						if ((inp_chck_366414.getAttribute("checkd") == "true")) {
						inp_chck_366414.setAttribute("checked", "true");
						}
						else {
						inp_chck_366414.removeAttribute("checked");
						}
						
						i_389255 = addInt(i_389255, 1);
						if (!(((colontmp__389253 != null ? colontmp__389253.length : 0) == l_389256))) {
						failed_assert_impl_60066(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);

	
}

function len_354740(t_354745) {
	var result_354746 = 0;

		result_354746 = t_354745.counter;

	return result_354746;

}

function text_302164(s_302166) {
	var result_302167 = null;

		result_302167 = {kind: 0, text: toJSStr(s_302166), index: -1, m_type: NTI299714, id: null, class: null, kids: null, attrs: null, events: null, style: null, dom: null};

	return result_302167;

}

function init_ordered_table_360823(initial_size_360827) {
	var result_360829 = {data: null, counter: 0, first: 0, last: 0};

		if (!(is_power_of_two_109062(initial_size_360827))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_360829.counter = 0;
		result_360829.data = new Array(chckRange(initial_size_360827, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_360827, 0, 2147483647);++i) {result_360829.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		result_360829.first = -1;
		result_360829.last = -1;

	return result_360829;

}

function raiseDivByZero() {
		var e_67256 = null;
		e_67256 = {m_type: NTI48444, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_67256.message = nimCopy(null, makeNimstrLit("division by zero"), NTI45040);
		e_67256.parent = null;
		raiseException(e_67256, "DivByZeroError");

	
}

function imul_227968(a_227970, b_227971) {
	var result_227972 = 0;

		var mask_227973 = 65535;
		var a_hi_227986 = (((a_227970 >>> 0) >>> 16) & mask_227973);
		var a_lo_227992 = (a_227970 & mask_227973);
		var b_hi_228005 = (((b_227971 >>> 0) >>> 16) & mask_227973);
		var b_lo_228011 = (b_227971 & mask_227973);
		result_227972 = ((((a_lo_227992 * b_lo_228011) >>> 0) + (((((a_hi_227986 * b_lo_228011) >>> 0) + ((a_lo_227992 * b_hi_228005) >>> 0)) >>> 0) << 16)) >>> 0);

	return result_227972;

}

function rotl32_228201(x_228203, r_228204) {
	var result_228205 = 0;

		result_228205 = ((x_228203 << r_228204) | ((x_228203 >>> 0) >>> subInt(32, r_228204)));

	return result_228205;

}

function murmur_hash_228237(x_228240) {
	var result_228241 = 0;

	BeforeRet: do {
		var size_228251 = (x_228240 != null ? x_228240.length : 0);
		var step_size_228253 = 4;
		var n_228254 = divInt(size_228251, step_size_228253);
		var h1_228255 = 0;
		var i_228257 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_228257 < mulInt(n_228254, step_size_228253))) break L2;
					var k1_228258 = 0;
					var j_228259 = step_size_228253;
					L3: do {
							L4: while (true) {
							if (!(0 < j_228259)) break L4;
								j_228259 = subInt(j_228259, 1);
								k1_228258 = ((k1_228258 << 8) | chckRange(x_228240[chckIndx(addInt(i_228257, j_228259), 0, x_228240.length+0-1)-0], 0, 4294967295));
							}
					} while(false);
					i_228257 = addInt(i_228257, step_size_228253);
					k1_228258 = imul_227968(k1_228258, 3432918353);
					k1_228258 = rotl32_228201(k1_228258, 15);
					k1_228258 = imul_227968(k1_228258, 461845907);
					h1_228255 = (h1_228255 ^ k1_228258);
					h1_228255 = rotl32_228201(h1_228255, 13);
					h1_228255 = ((((h1_228255 * 5) >>> 0) + 3864292196) >>> 0);
				}
		} while(false);
		var k1_228422 = 0;
		var rem_228423 = modInt(size_228251, step_size_228253);
		L5: do {
				L6: while (true) {
				if (!(0 < rem_228423)) break L6;
					rem_228423 = subInt(rem_228423, 1);
					k1_228422 = ((k1_228422 << 8) | chckRange(x_228240[chckIndx(addInt(i_228257, rem_228423), 0, x_228240.length+0-1)-0], 0, 4294967295));
				}
		} while(false);
		k1_228422 = imul_227968(k1_228422, 3432918353);
		k1_228422 = rotl32_228201(k1_228422, 15);
		k1_228422 = imul_227968(k1_228422, 461845907);
		h1_228255 = (h1_228255 ^ k1_228422);
		h1_228255 = (h1_228255 ^ chckRange(size_228251, 0, 4294967295));
		h1_228255 = (h1_228255 ^ ((h1_228255 >>> 0) >>> 16));
		h1_228255 = imul_227968(h1_228255, 2246822507);
		h1_228255 = (h1_228255 ^ ((h1_228255 >>> 0) >>> 13));
		h1_228255 = imul_227968(h1_228255, 3266489909);
		h1_228255 = (h1_228255 ^ ((h1_228255 >>> 0) >>> 16));
		result_228241 = (h1_228255|0);
		break BeforeRet;
	} while (false);

	return result_228241;

}

function hash_229014(x_229016) {
	var result_229017 = 0;

		result_229017 = murmur_hash_228237((x_229016.slice(0, (x_229016 != null ? (x_229016.length-1) : -1)+1)));

	return result_229017;

}

function is_filled_232018(hcode_232020) {
	var result_232021 = false;

		result_232021 = !((hcode_232020 == 0));

	return result_232021;

}

function next_try_232035(h_232037, max_hash_232038) {
	var result_232039 = 0;

		result_232039 = (addInt(h_232037, 1) & max_hash_232038);

	return result_232039;

}

function raw_get_361821(t_361826, key_361827, hc_361828, hc_361828_Idx) {
						var Tmp3;

	var result_361829 = 0;

	BeforeRet: do {
		hc_361828[hc_361828_Idx] = hash_229014(key_361827);
		if ((hc_361828[hc_361828_Idx] == 0)) {
		hc_361828[hc_361828_Idx] = 314159265;
		}
		
		if (((t_361826.data != null ? t_361826.data.length : 0) == 0)) {
		result_361829 = -1;
		break BeforeRet;
		}
		
		var h_361971 = (hc_361828[hc_361828_Idx] & (t_361826.data != null ? (t_361826.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_232018(t_361826.data[chckIndx(h_361971, 0, t_361826.data.length+0-1)-0].Field0)) break L2;
						if (!(t_361826.data[chckIndx(h_361971, 0, t_361826.data.length+0-1)-0].Field0 == hc_361828[hc_361828_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_361826.data[chckIndx(h_361971, 0, t_361826.data.length+0-1)-0].Field2, key_361827);						}					if (Tmp3) {
					result_361829 = h_361971;
					break BeforeRet;
					}
					
					h_361971 = next_try_232035(h_361971, (t_361826.data != null ? (t_361826.data.length-1) : -1));
				}
		} while(false);
		result_361829 = subInt(-1, h_361971);
	} while (false);

	return result_361829;

}

function must_rehash_232053(length_232055, counter_232056) {
	var result_232057 = false;

		if (!((counter_232056 < length_232055))) {
		failed_assert_impl_60066(makeNimstrLit("hashcommon.nim(33, 9) `length > counter` "));
		}
		
		result_232057 = ((mulInt(length_232055, 2) < mulInt(counter_232056, 3)) || (subInt(length_232055, counter_232056) < 4));

	return result_232057;

}

function raw_insert_364507(t_364513, data_364516, data_364516_Idx, key_364517, val_364518, hc_364519, h_364520) {
		data_364516[data_364516_Idx][chckIndx(h_364520, 0, data_364516[data_364516_Idx].length+0-1)-0].Field2 = nimCopy(null, key_364517, NTI45040);
		data_364516[data_364516_Idx][chckIndx(h_364520, 0, data_364516[data_364516_Idx].length+0-1)-0].Field3 = val_364518;
		data_364516[data_364516_Idx][chckIndx(h_364520, 0, data_364516[data_364516_Idx].length+0-1)-0].Field0 = hc_364519;
		data_364516[data_364516_Idx][chckIndx(h_364520, 0, data_364516[data_364516_Idx].length+0-1)-0].Field1 = -1;
		if ((t_364513.first < 0)) {
		t_364513.first = h_364520;
		}
		
		if ((0 <= t_364513.last)) {
		data_364516[data_364516_Idx][chckIndx(t_364513.last, 0, data_364516[data_364516_Idx].length+0-1)-0].Field1 = h_364520;
		}
		
		t_364513.last = h_364520;

	
}

function enlarge_363367(t_363373) {
		var n_363381 = null;
		n_363381 = new Array(chckRange(mulInt((t_363373.data != null ? t_363373.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_363373.data != null ? t_363373.data.length : 0), 2), 0, 2147483647);++i) {n_363381[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		var h_363520 = t_363373.first;
		t_363373.first = -1;
		t_363373.last = -1;
		var Tmp1 = t_363373.data; t_363373.data = n_363381; n_363381 = Tmp1;		L2: do {
				L3: while (true) {
				if (!(0 <= h_363520)) break L3;
					var nxt_363686 = n_363381[chckIndx(h_363520, 0, n_363381.length+0-1)-0].Field1;
					var eh_363842 = n_363381[chckIndx(h_363520, 0, n_363381.length+0-1)-0].Field0;
					if (is_filled_232018(eh_363842)) {
					var j_363849 = (eh_363842 & (t_363373.data != null ? (t_363373.data.length-1) : -1));
					L4: do {
							L5: while (true) {
							if (!is_filled_232018(t_363373.data[chckIndx(j_363849, 0, t_363373.data.length+0-1)-0].Field0)) break L5;
								j_363849 = next_try_232035(j_363849, (t_363373.data != null ? (t_363373.data.length-1) : -1));
							}
					} while(false);
					raw_insert_364507(t_363373, t_363373, "data", n_363381[chckIndx(h_363520, 0, n_363381.length+0-1)-0].Field2, n_363381[chckIndx(h_363520, 0, n_363381.length+0-1)-0].Field3, n_363381[chckIndx(h_363520, 0, n_363381.length+0-1)-0].Field0, j_363849);
					}
					
					h_363520 = nxt_363686;
				}
		} while(false);

	
}

function raw_get_known_hc_365344(t_365349, key_365350, hc_365351) {
	var result_365352 = 0;

	BeforeRet: do {
		if (((t_365349.data != null ? t_365349.data.length : 0) == 0)) {
		result_365352 = -1;
		break BeforeRet;
		}
		
		var h_365491 = (hc_365351 & (t_365349.data != null ? (t_365349.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_232018(t_365349.data[chckIndx(h_365491, 0, t_365349.data.length+0-1)-0].Field0)) break L2;
					if (((t_365349.data[chckIndx(h_365491, 0, t_365349.data.length+0-1)-0].Field0 == hc_365351) && eqStrings(t_365349.data[chckIndx(h_365491, 0, t_365349.data.length+0-1)-0].Field2, key_365350))) {
					result_365352 = h_365491;
					break BeforeRet;
					}
					
					h_365491 = next_try_232035(h_365491, (t_365349.data != null ? (t_365349.data.length-1) : -1));
				}
		} while(false);
		result_365352 = subInt(-1, h_365491);
	} while (false);

	return result_365352;

}

function HEX5BHEX5DHEX3D_361345(t_361351, key_361352, val_361353) {
		if (((t_361351.data != null ? t_361351.data.length : 0) == 0)) {
		if (!(is_power_of_two_109062(64))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_361351.counter = 0;
		t_361351.data = new Array(64); for (var i=0;i<64;++i) {t_361351.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		t_361351.first = -1;
		t_361351.last = -1;
		}
		
		var hc_361801 = [0];
		var index_362460 = raw_get_361821(t_361351, key_361352, hc_361801, 0);
		if ((0 <= index_362460)) {
		t_361351.data[chckIndx(index_362460, 0, t_361351.data.length+0-1)-0].Field3 = val_361353;
		}
		else {
			if (((t_361351.data != null ? t_361351.data.length : 0) == 0)) {
			if (!(is_power_of_two_109062(64))) {
			failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			t_361351.counter = 0;
			t_361351.data = new Array(64); for (var i=0;i<64;++i) {t_361351.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}			t_361351.first = -1;
			t_361351.last = -1;
			}
			
			if (must_rehash_232053((t_361351.data != null ? t_361351.data.length : 0), t_361351.counter)) {
			enlarge_363367(t_361351);
			index_362460 = raw_get_known_hc_365344(t_361351, key_361352, hc_361801[0]);
			}
			
			index_362460 = subInt(-1, index_362460);
			raw_insert_364507(t_361351, t_361351, "data", key_361352, val_361353, hc_361801[0], index_362460);
			t_361351.counter = addInt(t_361351.counter, 1);
		}
		

	
}

function nsuIntToStr(x_198215, minchars_198216) {
	var result_198217 = null;

		result_198217 = nimCopy(null, cstrToNimstr((absInt(x_198215))+""), NTI45040);
		L1: do {
			var i_198226 = 0;
			var colontmp__389285 = 0;
			colontmp__389285 = subInt(minchars_198216, (result_198217 != null ? result_198217.length : 0));
			var res_389286 = 1;
			L2: do {
					L3: while (true) {
					if (!(res_389286 <= colontmp__389285)) break L3;
						i_198226 = res_389286;
						result_198217 = nimCopy(null, [48].concat(result_198217 || []), NTI45040);
						res_389286 = addInt(res_389286, 1);
					}
			} while(false);
		} while(false);
		if ((x_198215 < 0)) {
		result_198217 = nimCopy(null, [45].concat(result_198217 || []), NTI45040);
		}
		

	return result_198217;

}

function HEX2D_210091(a_210093, b_210094) {
	var result_210095 = 0;

		result_210095 = (a_210093 - b_210094);

	return result_210095;

}

function HEX2A_210001(a_210003, b_210004) {
	var result_210005 = 0;

		result_210005 = (a_210003 * b_210004);

	return result_210005;

}

function convert_213426(unit_from_213429, unit_to_213430, quantity_213431) {
		var Tmp1;

	var result_213432 = 0;

		if ((unit_from_213429 < unit_to_213430)) {
		Tmp1 = chckRange(divInt(quantity_213431, divInt(unit_weights_210777[chckIndx(unit_to_213430, 0, unit_weights_210777.length+0-1)-0], unit_weights_210777[chckIndx(unit_from_213429, 0, unit_weights_210777.length+0-1)-0])), 0, 999999999);
		}
		else {
		Tmp1 = chckRange(HEX2A_210001(divInt(unit_weights_210777[chckIndx(unit_from_213429, 0, unit_weights_210777.length+0-1)-0], unit_weights_210777[chckIndx(unit_to_213430, 0, unit_weights_210777.length+0-1)-0]), quantity_213431), 0, 999999999);
		}
		
		result_213432 = Tmp1;

	return result_213432;

}

function HEX2B_210055(a_210057, b_210058) {
	var result_210059 = 0;

		result_210059 = (a_210057 + b_210058);

	return result_210059;

}

function HEX3DHEX3D_215792(zone1_215794, zone2_215795) {
	var result_215796 = false;

	BeforeRet: do {
		if ((zone1_215794 == zone2_215795)) {
		result_215796 = true;
		break BeforeRet;
		}
		
		if (((zone1_215794 == null) || (zone2_215795 == null))) {
		result_215796 = false;
		break BeforeRet;
		}
		
		result_215796 = eqStrings(zone1_215794.name, zone2_215795.name);
	} while (false);

	return result_215796;

}

function format_pattern_218490(dt_218492, pattern_218493, result_218495, result_218495_Idx, loc_218496) {
			var Tmp1;
			var Tmp2;
			var Tmp3;
			var Tmp4;
			var Tmp5;
			var Tmp6;
			var Tmp7;
			var Tmp8;
			var Tmp9;
				var Tmp10;
				var Tmp11;
			var Tmp12;

		switch (pattern_218493) {
		case 0:
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(cstrToNimstr((dt_218492.monthday)+"")); } else { result_218495[result_218495_Idx] = cstrToNimstr((dt_218492.monthday)+"").slice(); };
			break;
		case 1:
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(nsuIntToStr(dt_218492.monthday, 2)); } else { result_218495[result_218495_Idx] = nsuIntToStr(dt_218492.monthday, 2).slice(); };
			break;
		case 2:
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(loc_218496.ddd[chckIndx(dt_218492.weekday, 0, loc_218496.ddd.length+0-1)-0]); } else { result_218495[result_218495_Idx] = loc_218496.ddd[chckIndx(dt_218492.weekday, 0, loc_218496.ddd.length+0-1)-0].slice(); };
			break;
		case 3:
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(loc_218496.dddd[chckIndx(dt_218492.weekday, 0, loc_218496.dddd.length+0-1)-0]); } else { result_218495[result_218495_Idx] = loc_218496.dddd[chckIndx(dt_218492.weekday, 0, loc_218496.dddd.length+0-1)-0].slice(); };
			break;
		case 4:
			if ((dt_218492.hour == 0)) {
			Tmp1 = makeNimstrLit("12");
			}
			else {
			if ((12 < dt_218492.hour)) {
			Tmp1 = cstrToNimstr((HEX2D_210091(dt_218492.hour, 12))+"");
			}
			else {
			Tmp1 = cstrToNimstr((dt_218492.hour)+"");
			}
			}
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(Tmp1); } else { result_218495[result_218495_Idx] = Tmp1.slice(); };
			break;
		case 5:
			if ((dt_218492.hour == 0)) {
			Tmp2 = makeNimstrLit("12");
			}
			else {
			if ((12 < dt_218492.hour)) {
			Tmp2 = nsuIntToStr(HEX2D_210091(dt_218492.hour, 12), 2);
			}
			else {
			Tmp2 = nsuIntToStr(dt_218492.hour, 2);
			}
			}
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(Tmp2); } else { result_218495[result_218495_Idx] = Tmp2.slice(); };
			break;
		case 6:
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(cstrToNimstr((dt_218492.hour)+"")); } else { result_218495[result_218495_Idx] = cstrToNimstr((dt_218492.hour)+"").slice(); };
			break;
		case 7:
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(nsuIntToStr(dt_218492.hour, 2)); } else { result_218495[result_218495_Idx] = nsuIntToStr(dt_218492.hour, 2).slice(); };
			break;
		case 8:
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(cstrToNimstr((dt_218492.minute)+"")); } else { result_218495[result_218495_Idx] = cstrToNimstr((dt_218492.minute)+"").slice(); };
			break;
		case 9:
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(nsuIntToStr(dt_218492.minute, 2)); } else { result_218495[result_218495_Idx] = nsuIntToStr(dt_218492.minute, 2).slice(); };
			break;
		case 10:
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(cstrToNimstr((dt_218492.month)+"")); } else { result_218495[result_218495_Idx] = cstrToNimstr((dt_218492.month)+"").slice(); };
			break;
		case 11:
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(nsuIntToStr(dt_218492.month, 2)); } else { result_218495[result_218495_Idx] = nsuIntToStr(dt_218492.month, 2).slice(); };
			break;
		case 12:
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(loc_218496.MMM[chckIndx(dt_218492.month, 1, loc_218496.MMM.length+1-1)-1]); } else { result_218495[result_218495_Idx] = loc_218496.MMM[chckIndx(dt_218492.month, 1, loc_218496.MMM.length+1-1)-1].slice(); };
			break;
		case 13:
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(loc_218496.MMMM[chckIndx(dt_218492.month, 1, loc_218496.MMMM.length+1-1)-1]); } else { result_218495[result_218495_Idx] = loc_218496.MMMM[chckIndx(dt_218492.month, 1, loc_218496.MMMM.length+1-1)-1].slice(); };
			break;
		case 14:
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(cstrToNimstr((dt_218492.second)+"")); } else { result_218495[result_218495_Idx] = cstrToNimstr((dt_218492.second)+"").slice(); };
			break;
		case 15:
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(nsuIntToStr(dt_218492.second, 2)); } else { result_218495[result_218495_Idx] = nsuIntToStr(dt_218492.second, 2).slice(); };
			break;
		case 16:
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(nsuIntToStr(convert_213426(0, 2, dt_218492.nanosecond), 3)); } else { result_218495[result_218495_Idx] = nsuIntToStr(convert_213426(0, 2, dt_218492.nanosecond), 3).slice(); };
			break;
		case 17:
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(nsuIntToStr(convert_213426(0, 1, dt_218492.nanosecond), 6)); } else { result_218495[result_218495_Idx] = nsuIntToStr(convert_213426(0, 1, dt_218492.nanosecond), 6).slice(); };
			break;
		case 18:
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(nsuIntToStr(dt_218492.nanosecond, 9)); } else { result_218495[result_218495_Idx] = nsuIntToStr(dt_218492.nanosecond, 9).slice(); };
			break;
		case 19:
			if ((12 <= dt_218492.hour)) {
			Tmp3 = makeNimstrLit("P");
			}
			else {
			Tmp3 = makeNimstrLit("A");
			}
			
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(Tmp3); } else { result_218495[result_218495_Idx] = Tmp3.slice(); };
			break;
		case 20:
			if ((12 <= dt_218492.hour)) {
			Tmp4 = makeNimstrLit("PM");
			}
			else {
			Tmp4 = makeNimstrLit("AM");
			}
			
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(Tmp4); } else { result_218495[result_218495_Idx] = Tmp4.slice(); };
			break;
		case 21:
			if ((dt_218492.year <= 0)) {
			Tmp5 = HEX2B_210055(absInt(dt_218492.year), 1);
			}
			else {
			Tmp5 = dt_218492.year;
			}
			
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(cstrToNimstr((modInt(Tmp5, 10))+"")); } else { result_218495[result_218495_Idx] = cstrToNimstr((modInt(Tmp5, 10))+"").slice(); };
			break;
		case 22:
			if ((dt_218492.year <= 0)) {
			Tmp6 = HEX2B_210055(absInt(dt_218492.year), 1);
			}
			else {
			Tmp6 = dt_218492.year;
			}
			
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(nsuIntToStr(modInt(Tmp6, 100), 2)); } else { result_218495[result_218495_Idx] = nsuIntToStr(modInt(Tmp6, 100), 2).slice(); };
			break;
		case 23:
			if ((dt_218492.year <= 0)) {
			Tmp7 = HEX2B_210055(absInt(dt_218492.year), 1);
			}
			else {
			Tmp7 = dt_218492.year;
			}
			
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(nsuIntToStr(modInt(Tmp7, 1000), 3)); } else { result_218495[result_218495_Idx] = nsuIntToStr(modInt(Tmp7, 1000), 3).slice(); };
			break;
		case 24:
			if ((dt_218492.year <= 0)) {
			Tmp8 = HEX2B_210055(absInt(dt_218492.year), 1);
			}
			else {
			Tmp8 = dt_218492.year;
			}
			
			var year_218531 = Tmp8;
			if ((year_218531 < 10000)) {
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(nsuIntToStr(year_218531, 4)); } else { result_218495[result_218495_Idx] = nsuIntToStr(year_218531, 4).slice(); };
			}
			else {
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat([43].concat(cstrToNimstr((year_218531)+"") || [])); } else { result_218495[result_218495_Idx] = [43].concat(cstrToNimstr((year_218531)+"") || []).slice(); };
			}
			
			break;
		case 25:
			if ((dt_218492.year <= 0)) {
			Tmp9 = HEX2B_210055(absInt(dt_218492.year), 1);
			}
			else {
			Tmp9 = dt_218492.year;
			}
			
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(nsuIntToStr(modInt(Tmp9, 100000), 5)); } else { result_218495[result_218495_Idx] = nsuIntToStr(modInt(Tmp9, 100000), 5).slice(); };
			break;
		case 26:
			if ((dt_218492.year < 1)) {
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(cstrToNimstr((HEX2B_210055(absInt(dt_218492.year), 1))+"")); } else { result_218495[result_218495_Idx] = cstrToNimstr((HEX2B_210055(absInt(dt_218492.year), 1))+"").slice(); };
			}
			else {
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(cstrToNimstr((dt_218492.year)+"")); } else { result_218495[result_218495_Idx] = cstrToNimstr((dt_218492.year)+"").slice(); };
			}
			
			break;
		case 27:
			var year_218534 = dt_218492.year;
			if (((year_218534 < 10000) || (year_218534 < 0))) {
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(nsuIntToStr(year_218534, 4)); } else { result_218495[result_218495_Idx] = nsuIntToStr(year_218534, 4).slice(); };
			}
			else {
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat([43].concat(cstrToNimstr((year_218534)+"") || [])); } else { result_218495[result_218495_Idx] = [43].concat(cstrToNimstr((year_218534)+"") || []).slice(); };
			}
			
			break;
		case 28:
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(cstrToNimstr((dt_218492.year)+"")); } else { result_218495[result_218495_Idx] = cstrToNimstr((dt_218492.year)+"").slice(); };
			break;
		case 29:
		case 30:
		case 31:
		case 32:
				if (!!(HEX3DHEX3D_215792(dt_218492.timezone, null))) Tmp10 = false; else {					Tmp10 = eqStrings(dt_218492.timezone.name, makeNimstrLit("Etc/UTC"));				}			if (Tmp10) {
			if (result_218495[result_218495_Idx] != null) { addChar(result_218495[result_218495_Idx], 90); } else { result_218495[result_218495_Idx] = [90]; };
			}
			else {
				if ((0 <= negInt(dt_218492.utcOffset))) {
				Tmp11 = 43;
				}
				else {
				Tmp11 = 45;
				}
				
				if (result_218495[result_218495_Idx] != null) { addChar(result_218495[result_218495_Idx], Tmp11); } else { result_218495[result_218495_Idx] = [Tmp11]; };
				var abs_offset_218540 = absInt(dt_218492.utcOffset);
				switch (pattern_218493) {
				case 29:
					if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(cstrToNimstr((divInt(abs_offset_218540, 3600))+"")); } else { result_218495[result_218495_Idx] = cstrToNimstr((divInt(abs_offset_218540, 3600))+"").slice(); };
					break;
				case 30:
					if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(nsuIntToStr(divInt(abs_offset_218540, 3600), 2)); } else { result_218495[result_218495_Idx] = nsuIntToStr(divInt(abs_offset_218540, 3600), 2).slice(); };
					break;
				case 31:
					var h_218544 = nsuIntToStr(divInt(abs_offset_218540, 3600), 2);
					var m_218545 = nsuIntToStr(modInt(divInt(abs_offset_218540, 60), 60), 2);
					if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat((h_218544 || []).concat(makeNimstrLit(":") || [],m_218545 || [])); } else { result_218495[result_218495_Idx] = (h_218544 || []).concat(makeNimstrLit(":") || [],m_218545 || []).slice(); };
					break;
				case 32:
					var abs_offset_218546 = absInt(dt_218492.utcOffset);
					var h_218548 = nsuIntToStr(divInt(abs_offset_218546, 3600), 2);
					var m_218549 = nsuIntToStr(modInt(divInt(abs_offset_218546, 60), 60), 2);
					var s_218550 = nsuIntToStr(modInt(abs_offset_218546, 60), 2);
					if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat((h_218548 || []).concat(makeNimstrLit(":") || [],m_218549 || [],makeNimstrLit(":") || [],s_218550 || [])); } else { result_218495[result_218495_Idx] = (h_218548 || []).concat(makeNimstrLit(":") || [],m_218549 || [],makeNimstrLit(":") || [],s_218550 || []).slice(); };
					break;
				default: 
					if (true) {
					failed_assert_impl_60066(makeNimstrLit("times.nim(2025, 20) `false` "));
					}
					
					break;
				}
			}
			
			break;
		case 33:
			if ((dt_218492.year < 1)) {
			Tmp12 = makeNimstrLit("BC");
			}
			else {
			Tmp12 = makeNimstrLit("AD");
			}
			
			if (result_218495[result_218495_Idx] != null) { result_218495[result_218495_Idx] = (result_218495[result_218495_Idx]).concat(Tmp12); } else { result_218495[result_218495_Idx] = Tmp12.slice(); };
			break;
		case 34:
			if (true) {
			failed_assert_impl_60066(makeNimstrLit("times.nim(2028, 18) `false` "));
			}
			
			break;
		}

	
}

function format_221483(dt_221485, f_221486, loc_221487) {
	var result_221488 = [null];

		var idx_221490 = 0;
		L1: do {
				L2: while (true) {
				if (!(idx_221490 <= (f_221486.patterns != null ? (f_221486.patterns.length-1) : -1))) break L2;
					switch (chckRange(f_221486.patterns[chckIndx(idx_221490, 0, f_221486.patterns.length+0-1)-0], 0, 34)) {
					case 34:
						idx_221490 = addInt(idx_221490, 1);
						var len_221503 = f_221486.patterns[chckIndx(idx_221490, 0, f_221486.patterns.length+0-1)-0];
						L3: do {
							var i_221621 = 0;
							var res_389280 = 1;
							L4: do {
									L5: while (true) {
									if (!(res_389280 <= ((len_221503)|0))) break L5;
										i_221621 = chckRange(res_389280, 0, 255);
										idx_221490 = addInt(idx_221490, 1);
										if (result_221488[0] != null) { addChar(result_221488[0], f_221486.patterns[chckIndx(idx_221490, 0, f_221486.patterns.length+0-1)-0]); } else { result_221488[0] = [f_221486.patterns[chckIndx(idx_221490, 0, f_221486.patterns.length+0-1)-0]]; };
										res_389280 = addInt(res_389280, 1);
									}
							} while(false);
						} while(false);
						idx_221490 = addInt(idx_221490, 1);
						break;
					default: 
						format_pattern_218490(dt_221485, chckRange(f_221486.patterns[chckIndx(idx_221490, 0, f_221486.patterns.length+0-1)-0], 0, 34), result_221488, 0, loc_221487);
						idx_221490 = addInt(idx_221490, 1);
						break;
					}
				}
		} while(false);

	return result_221488[0];

}

function format_221915(dt_221918) {
	var result_221920 = null;

		result_221920 = nimCopy(null, format_221483(dt_221918, {patterns: [24, 34, 1, 45, 11, 34, 1, 45, 1, 34, 1, 84, 7, 34, 1, 58, 9, 34, 1, 58, 15, 31], formatStr: makeNimstrLit("yyyy-MM-dd\'T\'HH:mm:sszzz")}, {MMM: [makeNimstrLit("Jan"), makeNimstrLit("Feb"), makeNimstrLit("Mar"), makeNimstrLit("Apr"), makeNimstrLit("May"), makeNimstrLit("Jun"), makeNimstrLit("Jul"), makeNimstrLit("Aug"), makeNimstrLit("Sep"), makeNimstrLit("Oct"), makeNimstrLit("Nov"), makeNimstrLit("Dec")], MMMM: [makeNimstrLit("January"), makeNimstrLit("February"), makeNimstrLit("March"), makeNimstrLit("April"), makeNimstrLit("May"), makeNimstrLit("June"), makeNimstrLit("July"), makeNimstrLit("August"), makeNimstrLit("September"), makeNimstrLit("October"), makeNimstrLit("November"), makeNimstrLit("December")], ddd: [makeNimstrLit("Mon"), makeNimstrLit("Tue"), makeNimstrLit("Wed"), makeNimstrLit("Thu"), makeNimstrLit("Fri"), makeNimstrLit("Sat"), makeNimstrLit("Sun")], dddd: [makeNimstrLit("Monday"), makeNimstrLit("Tuesday"), makeNimstrLit("Wednesday"), makeNimstrLit("Thursday"), makeNimstrLit("Friday"), makeNimstrLit("Saturday"), makeNimstrLit("Sunday")]}), NTI45040);

	return result_221920;

}

function HEX24_221910(dt_221912) {
	var result_221913 = null;

		result_221913 = nimCopy(null, format_221915(dt_221912), NTI45040);

	return result_221913;

}

function HEX2B_210037(a_210039, b_210040) {
	var result_210041 = 0;

		result_210041 = (a_210039 + b_210040);

	return result_210041;

}

function convert_210888(unit_from_210891, unit_to_210892, quantity_210893) {
		var Tmp1;

	var result_210894 = 0;

		if ((unit_from_210891 < unit_to_210892)) {
		Tmp1 = divInt(quantity_210893, divInt(unit_weights_210777[chckIndx(unit_to_210892, 0, unit_weights_210777.length+0-1)-0], unit_weights_210777[chckIndx(unit_from_210891, 0, unit_weights_210777.length+0-1)-0]));
		}
		else {
		Tmp1 = HEX2A_210001(divInt(unit_weights_210777[chckIndx(unit_from_210891, 0, unit_weights_210777.length+0-1)-0], unit_weights_210777[chckIndx(unit_to_210892, 0, unit_weights_210777.length+0-1)-0]), quantity_210893);
		}
		
		result_210894 = Tmp1;

	return result_210894;

}

function convert_211004(unit_from_211007, unit_to_211008, quantity_211009) {
		var Tmp1;

	var result_211010 = 0;

		if ((unit_from_211007 < unit_to_211008)) {
		Tmp1 = chckRange(divInt(quantity_211009, divInt(unit_weights_210777[chckIndx(unit_to_211008, 0, unit_weights_210777.length+0-1)-0], unit_weights_210777[chckIndx(unit_from_211007, 0, unit_weights_210777.length+0-1)-0])), -2147483648, 2147483647);
		}
		else {
		Tmp1 = chckRange(HEX2A_210001(divInt(unit_weights_210777[chckIndx(unit_from_211007, 0, unit_weights_210777.length+0-1)-0], unit_weights_210777[chckIndx(unit_to_211008, 0, unit_weights_210777.length+0-1)-0]), quantity_211009), -2147483648, 2147483647);
		}
		
		result_211010 = Tmp1;

	return result_211010;

}

function normalize_215355(seconds_215358, nanoseconds_215359) {
	var result_215360 = {seconds: 0, nanosecond: 0};

		result_215360.seconds = HEX2B_210037(seconds_215358, convert_210888(0, 3, nanoseconds_215359));
		var nanosecond_215374 = modInt(nanoseconds_215359, convert_211004(3, 0, 1));
		if ((nanosecond_215374 < 0)) {
		nanosecond_215374 = addInt(nanosecond_215374, convert_211004(3, 0, 1));
		result_215360.seconds = subInt(result_215360.seconds, 1);
		}
		
		result_215360.nanosecond = chckRange(chckRange(nanosecond_215374, -2147483648, 2147483647), 0, 999999999);

	return result_215360;

}

function HEX2D_210073(a_210075, b_210076) {
	var result_210077 = 0;

		result_210077 = (a_210075 - b_210076);

	return result_210077;

}

function ntSubTime(a_215422, b_215423) {
	var result_215424 = {seconds: 0, nanosecond: 0};

		nimCopy(result_215424, normalize_215355(HEX2D_210073(a_215422.seconds, b_215423.seconds), HEX2D_210091(a_215422.nanosecond, b_215423.nanosecond)), NTI210614);

	return result_215424;

}

function normalize_210991(seconds_210994, nanoseconds_210995) {
	var result_210996 = {seconds: 0, nanosecond: 0};

		result_210996.seconds = HEX2B_210037(seconds_210994, convert_210888(0, 3, nanoseconds_210995));
		var nanosecond_211045 = modInt(nanoseconds_210995, convert_211004(3, 0, 1));
		if ((nanosecond_211045 < 0)) {
		nanosecond_211045 = addInt(nanosecond_211045, convert_211004(3, 0, 1));
		result_210996.seconds = subInt(result_210996.seconds, 1);
		}
		
		result_210996.nanosecond = chckRange(chckRange(nanosecond_211045, -2147483648, 2147483647), 0, 999999999);

	return result_210996;

}

function init_duration_210877(nanoseconds_210879, microseconds_210880, milliseconds_210881, seconds_210882, minutes_210883, hours_210884, days_210885, weeks_210886) {
	var result_210887 = {seconds: 0, nanosecond: 0};

		var seconds_210971 = HEX2B_210037(HEX2B_210037(HEX2B_210037(HEX2B_210037(HEX2B_210037(HEX2B_210037(HEX2B_210037(convert_210888(7, 3, weeks_210886), convert_210888(6, 3, days_210885)), convert_210888(4, 3, minutes_210883)), convert_210888(5, 3, hours_210884)), convert_210888(3, 3, seconds_210882)), convert_210888(2, 3, milliseconds_210881)), convert_210888(1, 3, microseconds_210880)), convert_210888(0, 3, nanoseconds_210879));
		var nanoseconds_210987 = chckRange(HEX2B_210037(HEX2B_210037(convert_210888(2, 0, modInt(milliseconds_210881, 1000)), convert_210888(1, 0, modInt(microseconds_210880, 1000000))), modInt(nanoseconds_210879, 1000000000)), -2147483648, 2147483647);
		nimCopy(result_210887, normalize_210991(seconds_210971, nanoseconds_210987), NTI210618);

	return result_210887;

}

function floor_div_214108(x_214111, y_214112) {
			var Tmp1;
			var Tmp2;
				var Tmp3;

	var result_214113 = 0;

		result_214113 = Math.trunc(x_214111 / y_214112);
		var r_214114 = Math.trunc(x_214111 % y_214112);
			if (!(0 < r_214114)) Tmp2 = false; else {				Tmp2 = (y_214112 < 0);			}			if (Tmp2) Tmp1 = true; else {				if (!(r_214114 < 0)) Tmp3 = false; else {					Tmp3 = (0 < y_214112);				}				Tmp1 = Tmp3;			}		if (Tmp1) {
		result_214113 -= 1;
		}
		

	return result_214113;

}

function inc_210133(a_210136, a_210136_Idx, b_210137) {
		a_210136[a_210136_Idx] += b_210137;

	
}

function from_epoch_day_214480(epochday_214482) {
		var Tmp1;
		var Tmp2;

	var result_214487 = {Field0: 0, Field1: 0, Field2: 0};

	BeforeRet: do {
		var z_214488 = [epochday_214482];
		inc_210133(z_214488, 0, 719468);
		if ((0 <= z_214488[0])) {
		Tmp1 = z_214488[0];
		}
		else {
		Tmp1 = HEX2D_210073(z_214488[0], 146096);
		}
		
		var era_214494 = divInt(Tmp1, 146097);
		var doe_214496 = HEX2D_210073(z_214488[0], HEX2A_210001(era_214494, 146097));
		var yoe_214501 = divInt(HEX2D_210073(HEX2B_210037(HEX2D_210073(doe_214496, divInt(doe_214496, 1460)), divInt(doe_214496, 36524)), divInt(doe_214496, 146096)), 365);
		var y_214503 = HEX2B_210037(yoe_214501, HEX2A_210001(era_214494, 400));
		var doy_214507 = HEX2D_210073(doe_214496, HEX2D_210073(HEX2B_210037(HEX2A_210001(365, yoe_214501), divInt(yoe_214501, 4)), divInt(yoe_214501, 100)));
		var mp_214510 = divInt(HEX2B_210037(HEX2A_210001(5, doy_214507), 2), 153);
		var d_214513 = HEX2B_210037(HEX2D_210073(doy_214507, divInt(HEX2B_210037(HEX2A_210001(153, mp_214510), 2), 5)), 1);
		if ((mp_214510 < 10)) {
		Tmp2 = 3;
		}
		else {
		Tmp2 = -9;
		}
		
		var m_214516 = HEX2B_210037(mp_214510, Tmp2);
		var colontmp__389293 = chckRange(d_214513, 1, 31);
		var colontmp__389294 = chckRange(m_214516, 1, 12);
		var colontmp__389295 = chckRange(HEX2B_210037(y_214503, ((m_214516 <= 2) ? 1:0)), -2147483648, 2147483647);
		nimCopy(result_214487, {Field0: nimCopy(null, colontmp__389293, NTI210602), Field1: colontmp__389294, Field2: colontmp__389295}, NTI214483);
		break BeforeRet;
	} while (false);

	return result_214487;

}

function is_leap_year_214170(year_214172) {
		var Tmp1;
			var Tmp2;

	var result_214173 = false;

		if (!(modInt(year_214172, 4) == 0)) Tmp1 = false; else {			if (!((modInt(year_214172, 100) == 0))) Tmp2 = true; else {				Tmp2 = (modInt(year_214172, 400) == 0);			}			Tmp1 = Tmp2;		}		result_214173 = Tmp1;

	return result_214173;

}

function get_days_in_month_214189(month_214191, year_214192) {
			var Tmp1;

	var result_214193 = 0;

		switch (month_214191) {
		case 2:
			if (is_leap_year_214170(year_214192)) {
			Tmp1 = 29;
			}
			else {
			Tmp1 = 28;
			}
			
			result_214193 = Tmp1;
			break;
		case 4:
		case 6:
		case 9:
		case 11:
			result_214193 = 30;
			break;
		default: 
			result_214193 = 31;
			break;
		}

	return result_214193;

}

function assert_valid_date_214226(monthday_214228, month_214229, year_214230) {
		if (!((monthday_214228 <= get_days_in_month_214189(month_214229, year_214230)))) {
		failed_assert_impl_60066((makeNimstrLit("times.nim(634, 10) `monthday <= getDaysInMonth(month, year)` ") || []).concat(cstrToNimstr((year_214230)+"") || [],makeNimstrLit("-") || [],nsuIntToStr(month_214229, 2) || [],makeNimstrLit("-") || [],cstrToNimstr((monthday_214228)+"") || [],makeNimstrLit(" is not a valid date") || []));
		}
		

	
}

function HEX2A_210019(a_210021, b_210022) {
	var result_210023 = 0;

		result_210023 = (a_210021 * b_210022);

	return result_210023;

}

function to_epoch_day_214414(monthday_214416, month_214417, year_214418) {
		var Tmp1;
		var Tmp2;

	var result_214419 = 0;

	BeforeRet: do {
		assert_valid_date_214226(monthday_214416, month_214417, year_214418);
		var colontmp__389297 = {Field0: 0, Field1: 0, Field2: 0};
		var y_214425 = 0;
		var m_214426 = 0;
		var d_214427 = 0;
		nimCopy(colontmp__389297, {Field0: year_214418, Field1: month_214417, Field2: monthday_214416}, NTI214420);
		y_214425 = colontmp__389297["Field0"];
		m_214426 = colontmp__389297["Field1"];
		d_214427 = colontmp__389297["Field2"];
		if ((m_214426 <= 2)) {
		y_214425 = subInt(y_214425, 1);
		}
		
		if ((0 <= y_214425)) {
		Tmp1 = y_214425;
		}
		else {
		Tmp1 = HEX2D_210091(y_214425, 399);
		}
		
		var era_214437 = divInt(Tmp1, 400);
		var yoe_214439 = HEX2D_210091(y_214425, HEX2A_210019(era_214437, 400));
		if ((2 < m_214426)) {
		Tmp2 = -3;
		}
		else {
		Tmp2 = 9;
		}
		
		var doy_214446 = HEX2D_210091(HEX2B_210055(divInt(HEX2B_210055(HEX2A_210019(153, HEX2B_210055(m_214426, Tmp2)), 2), 5), d_214427), 1);
		var doe_214449 = HEX2B_210055(HEX2D_210091(HEX2B_210055(HEX2A_210019(yoe_214439, 365), divInt(yoe_214439, 4)), divInt(yoe_214439, 100)), doy_214446);
		result_214419 = HEX2D_210091(HEX2B_210055(HEX2A_210019(era_214437, 146097), doe_214449), 719468);
		break BeforeRet;
	} while (false);

	return result_214419;

}

function get_day_of_week_214616(monthday_214618, month_214619, year_214620) {
		var Tmp1;

	var result_214621 = 0;

		assert_valid_date_214226(monthday_214618, month_214619, year_214620);
		var days_214622 = HEX2D_210073(to_epoch_day_214414(monthday_214618, month_214619, year_214620), 3);
		var weeks_214628 = floor_div_214108(days_214622, 7);
		var wd_214629 = HEX2D_210073(days_214622, HEX2A_210001(weeks_214628, 7));
		if ((wd_214629 == 0)) {
		Tmp1 = 6;
		}
		else {
		Tmp1 = chckRange(HEX2D_210073(wd_214629, 1), 0, 6);
		}
		
		result_214621 = Tmp1;

	return result_214621;

}

function get_day_of_year_214550(monthday_214552, month_214553, year_214554) {
	var result_214555 = 0;

		assert_valid_date_214226(monthday_214552, month_214553, year_214554);
		if (is_leap_year_214170(year_214554)) {
		result_214555 = chckRange(HEX2D_210091(HEX2B_210055(days_until_month_leap_214587[chckIndx(month_214553, 1, days_until_month_leap_214587.length+1-1)-1], monthday_214552), 1), 0, 365);
		}
		else {
			result_214555 = chckRange(HEX2D_210091(HEX2B_210055(days_until_month_214571[chckIndx(month_214553, 1, days_until_month_214571.length+1-1)-1], monthday_214552), 1), 0, 365);
		}
		

	return result_214555;

}

function init_date_time_215588(zt_215590, zone_215591) {
	var result_215592 = {m_type: NTI210616, nanosecond: 0, second: 0, minute: 0, hour: 0, monthday: 0, month: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0};

		var adj_time_215593 = ntSubTime(zt_215590.time, init_duration_210877(0, 0, 0, zt_215590.utcOffset, 0, 0, 0, 0));
		var s_215594 = adj_time_215593.seconds;
		var epochday_215600 = floor_div_214108(s_215594, 86400);
		var rem_215601 = HEX2D_210073(s_215594, HEX2A_210001(epochday_215600, 86400));
		var hour_215602 = divInt(rem_215601, 3600);
		rem_215601 = HEX2D_210073(rem_215601, HEX2A_210001(hour_215602, 3600));
		var minute_215603 = divInt(rem_215601, 60);
		rem_215601 = HEX2D_210073(rem_215601, HEX2A_210001(minute_215603, 60));
		var second_215604 = rem_215601;
		var colontmp__389292 = {Field0: 0, Field1: 0, Field2: 0};
		var d_215605 = 0;
		var m_215606 = 0;
		var y_215607 = 0;
		nimCopy(colontmp__389292, from_epoch_day_214480(epochday_215600), NTI214483);
		d_215605 = colontmp__389292["Field0"];
		m_215606 = colontmp__389292["Field1"];
		y_215607 = colontmp__389292["Field2"];
		nimCopy(result_215592, {year: y_215607, month: m_215606, monthday: nimCopy(null, d_215605, NTI210602), hour: nimCopy(null, chckRange(hour_215602, 0, 23), NTI210604), minute: nimCopy(null, chckRange(minute_215603, 0, 59), NTI210606), second: nimCopy(null, chckRange(second_215604, 0, 60), NTI210608), nanosecond: nimCopy(null, zt_215590.time.nanosecond, NTI210612), weekday: get_day_of_week_214616(d_215605, m_215606, y_215607), yearday: get_day_of_year_214550(d_215605, m_215606, y_215607), isDst: zt_215590.isDst, timezone: zone_215591, utcOffset: zt_215590.utcOffset, m_type: NTI210616}, NTI210616);

	return result_215592;

}

function zoned_time_from_time_215724(zone_215726, time_215727) {
	var result_215728 = {time: {seconds: 0, nanosecond: 0}, utcOffset: 0, isDst: false};

		nimCopy(result_215728, zone_215726.zonedTimeFromTimeImpl(time_215727), NTI210628);

	return result_215728;

}

function in_zone_215829(time_215831, zone_215832) {
	var result_215833 = {m_type: NTI210616, nanosecond: 0, second: 0, minute: 0, hour: 0, monthday: 0, month: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0};

		nimCopy(result_215833, init_date_time_215588(zoned_time_from_time_215724(zone_215832, time_215831), zone_215832), NTI210616);

	return result_215833;

}

function new_timezone_215666(name_215668, zoned_time_from_time_impl_215672, zoned_time_from_adj_time_impl_215676) {
	var result_215678 = null;

		result_215678 = {name: nimCopy(null, name_215668, NTI45040), zonedTimeFromTimeImpl: zoned_time_from_time_impl_215672, zonedTimeFromAdjTimeImpl: zoned_time_from_adj_time_impl_215676};

	return result_215678;

}

function local_zoned_time_from_time_210835(time_210837) {
	var result_215890 = {time: {seconds: 0, nanosecond: 0}, utcOffset: 0, isDst: false};

		var js_date_215896 = new Date(HEX2A_210001(time_210837.seconds, 1000));
		var offset_215897 = HEX2A_210019(js_date_215896.getTimezoneOffset(), 60);
		nimCopy(result_215890.time, time_210837, NTI210614);
		result_215890.utcOffset = offset_215897;
		result_215890.isDst = false;

	return result_215890;

}

function contains_215955(s_215961, value_215962) {
	var result_215963 = false;

		result_215963 = ((s_215961.a <= value_215962) && (value_215962 <= s_215961.b));

	return result_215963;

}

function HEX2EHEX2E_122220(a_122224, b_122225) {
	var result_122227 = {a: 0, b: 0};

		nimCopy(result_122227, {a: a_122224, b: b_122225}, NTI99907);

	return result_122227;

}

function ntAddTime(a_215347, b_215348) {
	var result_215349 = {seconds: 0, nanosecond: 0};

		nimCopy(result_215349, normalize_215355(HEX2B_210037(a_215347.seconds, b_215348.seconds), HEX2B_210055(a_215347.nanosecond, b_215348.nanosecond)), NTI210614);

	return result_215349;

}

function local_zoned_time_from_adj_time_210838(adj_time_210840) {
	var result_215929 = {time: {seconds: 0, nanosecond: 0}, utcOffset: 0, isDst: false};

		var utc_date_215935 = new Date(HEX2A_210001(adj_time_210840.seconds, 1000));
		var local_date_215936 = new Date(utc_date_215935.getUTCFullYear(),utc_date_215935.getUTCMonth(),utc_date_215935.getUTCDate(),utc_date_215935.getUTCHours(),utc_date_215935.getUTCMinutes(),utc_date_215935.getUTCSeconds(),0);
		if (contains_215955(HEX2EHEX2E_122220(0, 99), utc_date_215935.getUTCFullYear())) {
		local_date_215936.setFullYear(utc_date_215935.getUTCFullYear());
		}
		
		result_215929.utcOffset = HEX2A_210019(local_date_215936.getTimezoneOffset(), 60);
		nimCopy(result_215929.time, ntAddTime(adj_time_210840, init_duration_210877(0, 0, 0, result_215929.utcOffset, 0, 0, 0, 0)), NTI210614);
		result_215929.isDst = false;

	return result_215929;

}

function local_216067() {
	var result_216069 = null;

		if ((local_instance_216032[0] == null)) {
		local_instance_216032[0] = new_timezone_215666(makeNimstrLit("LOCAL"), local_zoned_time_from_time_210835, local_zoned_time_from_adj_time_210838);
		}
		
		result_216069 = local_instance_216032[0];

	return result_216069;

}

function local_216139(t_216141) {
	var result_216142 = {m_type: NTI210616, nanosecond: 0, second: 0, minute: 0, hour: 0, monthday: 0, month: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0};

		nimCopy(result_216142, in_zone_215829(t_216141, local_216067()), NTI210616);

	return result_216142;

}

function init_time_210841(unix_210843, nanosecond_210844) {
	var result_215303 = {seconds: 0, nanosecond: 0};

		result_215303.seconds = unix_210843;
		result_215303.nanosecond = nanosecond_210844;

	return result_215303;

}

function get_time_216156() {
	var result_216158 = {seconds: 0, nanosecond: 0};

		var millis_216201 = new Date().getTime();
		var seconds_216208 = convert_211004(2, 3, millis_216201);
		var nanos_216222 = convert_211004(2, 0, modInt(millis_216201, convert_211004(3, 2, 1)));
		nimCopy(result_216158, init_time_210841(seconds_216208, chckRange(nanos_216222, 0, 999999999)), NTI210614);

	return result_216158;

}

function now_216236() {
	var result_216238 = {m_type: NTI210616, nanosecond: 0, second: 0, minute: 0, hour: 0, monthday: 0, month: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0};

		nimCopy(result_216238, local_216139(get_time_216156()), NTI210616);

	return result_216238;

}

function save_func_346664(j_str_346666, fname_346667) {

		function inner_346684() {
			var result_346686 = null;

			BeforeRet: do {
				var a_346687 = null;
				a_346687 = {};
				a_346687.type = makeNimstrLit("application/json");
				result_346686 = a_346687;
				break BeforeRet;
			} while (false);

			return result_346686;

		}

		var blb_346829 = function(o,opt){return new Blob([o], opt);}(j_str_346666, inner_346684());
		var b_url_346830 = function(b){return URL.createObjectURL(b);}(blb_346829);
		var el_a_346831 = document.createElement("a");
		el_a_346831.setAttribute("href", b_url_346830);
		el_a_346831.setAttribute("download", toJSStr(fname_346667));
		document.body.appendChild(el_a_346831);
		el_a_346831.click();
		document.body.removeChild(el_a_346831);
		(function(uk){return URL.revokeObjectURL(uk);})(b_url_346830);

	
}

function init_ordered_table_262209(initial_size_262213) {
	var result_262215 = {data: null, counter: 0, first: 0, last: 0};

		if (!(is_power_of_two_109062(initial_size_262213))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_262215.counter = 0;
		result_262215.data = new Array(chckRange(initial_size_262213, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_262213, 0, 2147483647);++i) {result_262215.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		result_262215.first = -1;
		result_262215.last = -1;

	return result_262215;

}

function new_jobject_262204() {
	var result_262206 = null;

		result_262206 = {kind: 5, fields: init_ordered_table_262209(4), str: null, num: 0, fnum: 0.0, bval: false, elems: null};

	return result_262206;

}

function raw_get_264021(t_264026, key_264027, hc_264028, hc_264028_Idx) {
						var Tmp3;

	var result_264029 = 0;

	BeforeRet: do {
		hc_264028[hc_264028_Idx] = hash_229014(key_264027);
		if ((hc_264028[hc_264028_Idx] == 0)) {
		hc_264028[hc_264028_Idx] = 314159265;
		}
		
		if (((t_264026.data != null ? t_264026.data.length : 0) == 0)) {
		result_264029 = -1;
		break BeforeRet;
		}
		
		var h_264171 = (hc_264028[hc_264028_Idx] & (t_264026.data != null ? (t_264026.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_232018(t_264026.data[chckIndx(h_264171, 0, t_264026.data.length+0-1)-0].Field0)) break L2;
						if (!(t_264026.data[chckIndx(h_264171, 0, t_264026.data.length+0-1)-0].Field0 == hc_264028[hc_264028_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_264026.data[chckIndx(h_264171, 0, t_264026.data.length+0-1)-0].Field2, key_264027);						}					if (Tmp3) {
					result_264029 = h_264171;
					break BeforeRet;
					}
					
					h_264171 = next_try_232035(h_264171, (t_264026.data != null ? (t_264026.data.length-1) : -1));
				}
		} while(false);
		result_264029 = subInt(-1, h_264171);
	} while (false);

	return result_264029;

}

function raw_insert_266465(t_266471, data_266474, data_266474_Idx, key_266475, val_266476, hc_266477, h_266478) {
		data_266474[data_266474_Idx][chckIndx(h_266478, 0, data_266474[data_266474_Idx].length+0-1)-0].Field2 = nimCopy(null, key_266475, NTI45040);
		data_266474[data_266474_Idx][chckIndx(h_266478, 0, data_266474[data_266474_Idx].length+0-1)-0].Field3 = val_266476;
		data_266474[data_266474_Idx][chckIndx(h_266478, 0, data_266474[data_266474_Idx].length+0-1)-0].Field0 = hc_266477;
		data_266474[data_266474_Idx][chckIndx(h_266478, 0, data_266474[data_266474_Idx].length+0-1)-0].Field1 = -1;
		if ((t_266471.first < 0)) {
		t_266471.first = h_266478;
		}
		
		if ((0 <= t_266471.last)) {
		data_266474[data_266474_Idx][chckIndx(t_266471.last, 0, data_266474[data_266474_Idx].length+0-1)-0].Field1 = h_266478;
		}
		
		t_266471.last = h_266478;

	
}

function enlarge_265367(t_265373) {
		var n_265381 = null;
		n_265381 = new Array(chckRange(mulInt((t_265373.data != null ? t_265373.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_265373.data != null ? t_265373.data.length : 0), 2), 0, 2147483647);++i) {n_265381[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		var h_265520 = t_265373.first;
		t_265373.first = -1;
		t_265373.last = -1;
		var Tmp1 = t_265373.data; t_265373.data = n_265381; n_265381 = Tmp1;		L2: do {
				L3: while (true) {
				if (!(0 <= h_265520)) break L3;
					var nxt_265679 = n_265381[chckIndx(h_265520, 0, n_265381.length+0-1)-0].Field1;
					var eh_265828 = n_265381[chckIndx(h_265520, 0, n_265381.length+0-1)-0].Field0;
					if (is_filled_232018(eh_265828)) {
					var j_265835 = (eh_265828 & (t_265373.data != null ? (t_265373.data.length-1) : -1));
					L4: do {
							L5: while (true) {
							if (!is_filled_232018(t_265373.data[chckIndx(j_265835, 0, t_265373.data.length+0-1)-0].Field0)) break L5;
								j_265835 = next_try_232035(j_265835, (t_265373.data != null ? (t_265373.data.length-1) : -1));
							}
					} while(false);
					raw_insert_266465(t_265373, t_265373, "data", n_265381[chckIndx(h_265520, 0, n_265381.length+0-1)-0].Field2, n_265381[chckIndx(h_265520, 0, n_265381.length+0-1)-0].Field3, n_265381[chckIndx(h_265520, 0, n_265381.length+0-1)-0].Field0, j_265835);
					}
					
					h_265520 = nxt_265679;
				}
		} while(false);

	
}

function raw_get_known_hc_267267(t_267272, key_267273, hc_267274) {
	var result_267275 = 0;

	BeforeRet: do {
		if (((t_267272.data != null ? t_267272.data.length : 0) == 0)) {
		result_267275 = -1;
		break BeforeRet;
		}
		
		var h_267414 = (hc_267274 & (t_267272.data != null ? (t_267272.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_232018(t_267272.data[chckIndx(h_267414, 0, t_267272.data.length+0-1)-0].Field0)) break L2;
					if (((t_267272.data[chckIndx(h_267414, 0, t_267272.data.length+0-1)-0].Field0 == hc_267274) && eqStrings(t_267272.data[chckIndx(h_267414, 0, t_267272.data.length+0-1)-0].Field2, key_267273))) {
					result_267275 = h_267414;
					break BeforeRet;
					}
					
					h_267414 = next_try_232035(h_267414, (t_267272.data != null ? (t_267272.data.length-1) : -1));
				}
		} while(false);
		result_267275 = subInt(-1, h_267414);
	} while (false);

	return result_267275;

}

function HEX5BHEX5DHEX3D_263511(t_263517, key_263518, val_263519) {
		if (((t_263517.data != null ? t_263517.data.length : 0) == 0)) {
		if (!(is_power_of_two_109062(64))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_263517.counter = 0;
		t_263517.data = new Array(64); for (var i=0;i<64;++i) {t_263517.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		t_263517.first = -1;
		t_263517.last = -1;
		}
		
		var hc_264001 = [0];
		var index_264639 = raw_get_264021(t_263517, key_263518, hc_264001, 0);
		if ((0 <= index_264639)) {
		t_263517.data[chckIndx(index_264639, 0, t_263517.data.length+0-1)-0].Field3 = val_263519;
		}
		else {
			if (((t_263517.data != null ? t_263517.data.length : 0) == 0)) {
			if (!(is_power_of_two_109062(64))) {
			failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			t_263517.counter = 0;
			t_263517.data = new Array(64); for (var i=0;i<64;++i) {t_263517.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}			t_263517.first = -1;
			t_263517.last = -1;
			}
			
			if (must_rehash_232053((t_263517.data != null ? t_263517.data.length : 0), t_263517.counter)) {
			enlarge_265367(t_263517);
			index_264639 = raw_get_known_hc_267267(t_263517, key_263518, hc_264001[0]);
			}
			
			index_264639 = subInt(-1, index_264639);
			raw_insert_266465(t_263517, t_263517, "data", key_263518, val_263519, hc_264001[0], index_264639);
			t_263517.counter = addInt(t_263517.counter, 1);
		}
		

	
}

function add_263222(obj_263224, key_263225, val_263226) {
		var Tmp1;

		if (!((obj_263224.kind == 5))) {
		failed_assert_impl_60066(makeNimstrLit("json.nim(289, 10) `obj.kind == JObject` "));
		}
		
		var Tmp1 = obj_263224;
		if (ConstSet2[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
		HEX5BHEX5DHEX3D_263511(Tmp1.fields, key_263225, val_263226);

	
}

function new_jstring_262087(s_262089) {
	var result_262090 = null;

		result_262090 = {kind: 4, str: nimCopy(null, s_262089, NTI45040), num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};

	return result_262090;

}

function new_jarray_262657() {
	var result_262659 = null;

		result_262659 = {kind: 6, elems: [], str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}};

	return result_262659;

}

function add_262995(father_262997, child_262998) {
		var Tmp1;
		var Tmp2;

		if (!((father_262997.kind == 6))) {
		failed_assert_impl_60066(makeNimstrLit("json.nim(284, 10) `father.kind == JArray` "));
		}
		
		var Tmp1 = father_262997;
		if (ConstSet3[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'elems\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
		if ((Tmp2 = Tmp1.elems, Tmp2) != null) { Tmp2.push(child_262998); } else { Tmp2 = [child_262998]; };

	
}

function len_356748(t_356753) {
	var result_356754 = 0;

		result_356754 = t_356753.counter;

	return result_356754;

}

function new_seq_357626(len_357629) {
	var result_357631 = null;

		result_357631 = new Array(len_357629); for (var i=0;i<len_357629;++i) {result_357631[i]=null;}
	return result_357631;

}

function new_seq_85233(len_85236) {
	var result_85238 = null;

		result_85238 = new Array(len_85236); for (var i=0;i<len_85236;++i) {result_85238[i]=null;}
	return result_85238;

}

function parse_saturated_natural_103231(s_103233, b_103235, b_103235_Idx, start_103236) {
			var Tmp1;
					var Tmp4;

	var result_103238 = 0;

		var i_103239 = start_103236;
		if (((i_103239 < (s_103233 != null ? s_103233.length : 0)) && (s_103233[chckIndx(i_103239, 0, s_103233.length+0-1)-0] == 43))) {
		i_103239 = addInt(i_103239, 1);
		}
		
			if (!(i_103239 < (s_103233 != null ? s_103233.length : 0))) Tmp1 = false; else {				Tmp1 = (ConstSet8[s_103233[chckIndx(i_103239, 0, s_103233.length+0-1)-0]] != undefined);			}		if (Tmp1) {
		b_103235[b_103235_Idx] = 0;
		L2: do {
				L3: while (true) {
					if (!(i_103239 < (s_103233 != null ? s_103233.length : 0))) Tmp4 = false; else {						Tmp4 = (ConstSet9[s_103233[chckIndx(i_103239, 0, s_103233.length+0-1)-0]] != undefined);					}				if (!Tmp4) break L3;
					var c_103268 = subInt(s_103233[chckIndx(i_103239, 0, s_103233.length+0-1)-0], 48);
					if ((b_103235[b_103235_Idx] <= divInt(subInt(2147483647, c_103268), 10))) {
					b_103235[b_103235_Idx] = addInt(mulInt(b_103235[b_103235_Idx], 10), c_103268);
					}
					else {
						b_103235[b_103235_Idx] = 2147483647;
					}
					
					i_103239 = addInt(i_103239, 1);
					L5: do {
							L6: while (true) {
							if (!((i_103239 < (s_103233 != null ? s_103233.length : 0)) && (s_103233[chckIndx(i_103239, 0, s_103233.length+0-1)-0] == 95))) break L6;
								i_103239 = addInt(i_103239, 1);
							}
					} while(false);
				}
		} while(false);
		result_103238 = subInt(i_103239, start_103236);
		}
		

	return result_103238;

}

function HEX5BHEX5D_149304(s_149308, x_149310) {
	var result_149311 = null;

		var a_149401 = x_149310.a;
		var l_149601 = addInt(subInt(subInt((s_149308 != null ? s_149308.length : 0), x_149310.b), a_149401), 1);
		result_149311 = nimCopy(null, mnewString(chckRange(l_149601, 0, 2147483647)), NTI45040);
		L1: do {
			var i_149609 = 0;
			var i_389346 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_389346 < l_149601)) break L3;
						i_149609 = i_389346;
						result_149311[chckIndx(i_149609, 0, result_149311.length+0-1)-0] = s_149308[chckIndx(addInt(i_149609, a_149401), 0, s_149308.length+0-1)-0];
						i_389346 = addInt(i_389346, 1);
					}
			} while(false);
		} while(false);

	return result_149311;

}

function HEX2EHEX2E_149239(a_149243, b_149244) {
	var result_149250 = {a: 0, b: 0};

		nimCopy(result_149250, {a: a_149243, b: b_149244}, NTI149247);

	return result_149250;

}

function parse_standard_format_specifier_287324(s_287326, start_287327, ignore_unknown_suffix_287329) {
			var Tmp1;
			var Tmp2;
			var Tmp3;

	var result_287330 = {fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0};

		result_287330.fill = 32;
		result_287330.align = 0;
		result_287330.sign = 45;
		var i_287333 = start_287327;
		if (((addInt(i_287333, 1) < (s_287326 != null ? s_287326.length : 0)) && (ConstSet4[s_287326[chckIndx(addInt(i_287333, 1), 0, s_287326.length+0-1)-0]] != undefined))) {
		result_287330.fill = s_287326[chckIndx(i_287333, 0, s_287326.length+0-1)-0];
		result_287330.align = s_287326[chckIndx(addInt(i_287333, 1), 0, s_287326.length+0-1)-0];
		i_287333 = addInt(i_287333, 2);
		}
		else {
		if (((i_287333 < (s_287326 != null ? s_287326.length : 0)) && (ConstSet5[s_287326[chckIndx(i_287333, 0, s_287326.length+0-1)-0]] != undefined))) {
		result_287330.align = s_287326[chckIndx(i_287333, 0, s_287326.length+0-1)-0];
		i_287333 = addInt(i_287333, 1);
		}
		}
		if (((i_287333 < (s_287326 != null ? s_287326.length : 0)) && (ConstSet6[s_287326[chckIndx(i_287333, 0, s_287326.length+0-1)-0]] != undefined))) {
		result_287330.sign = s_287326[chckIndx(i_287333, 0, s_287326.length+0-1)-0];
		i_287333 = addInt(i_287333, 1);
		}
		
		if (((i_287333 < (s_287326 != null ? s_287326.length : 0)) && (s_287326[chckIndx(i_287333, 0, s_287326.length+0-1)-0] == 35))) {
		result_287330.alternateForm = true;
		i_287333 = addInt(i_287333, 1);
		}
		
			if (!((addInt(i_287333, 1) < (s_287326 != null ? s_287326.length : 0)) && (s_287326[chckIndx(i_287333, 0, s_287326.length+0-1)-0] == 48))) Tmp1 = false; else {				Tmp1 = (ConstSet7[s_287326[chckIndx(addInt(i_287333, 1), 0, s_287326.length+0-1)-0]] != undefined);			}		if (Tmp1) {
		result_287330.padWithZero = true;
		i_287333 = addInt(i_287333, 1);
		}
		
		var parsed_length_287391 = parse_saturated_natural_103231(s_287326, result_287330, "minimumWidth", i_287333);
		i_287333 = addInt(i_287333, parsed_length_287391);
		if (((i_287333 < (s_287326 != null ? s_287326.length : 0)) && (s_287326[chckIndx(i_287333, 0, s_287326.length+0-1)-0] == 46))) {
		i_287333 = addInt(i_287333, 1);
		var parsed_length_b_287405 = parse_saturated_natural_103231(s_287326, result_287330, "precision", i_287333);
		i_287333 = addInt(i_287333, parsed_length_b_287405);
		}
		else {
			result_287330.precision = -1;
		}
		
			if (!(i_287333 < (s_287326 != null ? s_287326.length : 0))) Tmp2 = false; else {				Tmp2 = (ConstSet10[s_287326[chckIndx(i_287333, 0, s_287326.length+0-1)-0]] != undefined);			}		if (Tmp2) {
		result_287330.typ = s_287326[chckIndx(i_287333, 0, s_287326.length+0-1)-0];
		i_287333 = addInt(i_287333, 1);
		}
		
		result_287330.endPosition = i_287333;
			if (!!((i_287333 == (s_287326 != null ? s_287326.length : 0)))) Tmp3 = false; else {				Tmp3 = !(ignore_unknown_suffix_287329);			}		if (Tmp3) {
		var e_287460 = null;
		e_287460 = {m_type: NTI48452, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_287460.message = nimCopy(null, (makeNimstrLit("invalid format string, cannot parse: ") || []).concat(HEX5BHEX5D_149304(s_287326, HEX2EHEX2E_149239(i_287333, 1)) || []), NTI45040);
		e_287460.parent = null;
		raiseException(e_287460, "ValueError");
		}
		

	return result_287330;

}

function nsuformatBiggestFloat(f_204221, format_204222, precision_204228, decimal_sep_204229) {
	var result_204230 = null;

		var precision_204401 = precision_204228;
		if ((precision_204401 == -1)) {
		precision_204401 = 6;
		}
		
		var res_204403 = null;
		switch (format_204222) {
		case 0:
			res_204403 = f_204221.toString();
			break;
		case 1:
			res_204403 = f_204221.toFixed(precision_204401);
			break;
		case 2:
			res_204403 = f_204221.toExponential(precision_204401);
			break;
		}
		result_204230 = nimCopy(null, cstrToNimstr(res_204403), NTI45040);
		if (((1.0000000000000000e+000 / f_204221) == -Infinity)) {
		result_204230 = nimCopy(null, (makeNimstrLit("-") || []).concat(cstrToNimstr(res_204403) || []), NTI45040);
		}
		
		L1: do {
			var i_204411 = 0;
			var colontmp__389352 = 0;
			colontmp__389352 = (result_204230 != null ? result_204230.length : 0);
			var i_389353 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_389353 < colontmp__389352)) break L3;
						i_204411 = i_389353;
						if ((ConstSet11[result_204230[chckIndx(i_204411, 0, result_204230.length+0-1)-0]] != undefined)) {
						result_204230[chckIndx(i_204411, 0, result_204230.length+0-1)-0] = decimal_sep_204229;
						}
						
						i_389353 = addInt(i_389353, 1);
					}
			} while(false);
		} while(false);

	return result_204230;

}

function insert_73401(x_73404, x_73404_Idx, item_73405, i_73406) {
		var xl_73407 = (x_73404[x_73404_Idx] != null ? x_73404[x_73404_Idx].length : 0);
		(x_73404[x_73404_Idx] == null ? x_73404[x_73404_Idx] = mnewString(chckRange(addInt(xl_73407, (item_73405 != null ? item_73405.length : 0)), 0, 2147483647)) : x_73404[x_73404_Idx].length = chckRange(addInt(xl_73407, (item_73405 != null ? item_73405.length : 0)), 0, 2147483647));
		var j_73408 = subInt(xl_73407, 1);
		L1: do {
				L2: while (true) {
				if (!(i_73406 <= j_73408)) break L2;
					x_73404[x_73404_Idx][chckIndx(addInt(j_73408, (item_73405 != null ? item_73405.length : 0)), 0, x_73404[x_73404_Idx].length+0-1)-0] = x_73404[x_73404_Idx][chckIndx(j_73408, 0, x_73404[x_73404_Idx].length+0-1)-0];
					j_73408 = subInt(j_73408, 1);
				}
		} while(false);
		j_73408 = 0;
		L3: do {
				L4: while (true) {
				if (!(j_73408 < (item_73405 != null ? item_73405.length : 0))) break L4;
					x_73404[x_73404_Idx][chckIndx(addInt(j_73408, i_73406), 0, x_73404[x_73404_Idx].length+0-1)-0] = item_73405[chckIndx(j_73408, 0, item_73405.length+0-1)-0];
					j_73408 = addInt(j_73408, 1);
				}
		} while(false);

	
}

function nsuRepeatChar(c_200455, count_200456) {
	var result_200457 = null;

		result_200457 = nimCopy(null, mnewString(count_200456), NTI45040);
		L1: do {
			var i_200466 = 0;
			var colontmp__389359 = 0;
			colontmp__389359 = subInt(count_200456, 1);
			var res_389360 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_389360 <= colontmp__389359)) break L3;
						i_200466 = res_389360;
						result_200457[chckIndx(i_200466, 0, result_200457.length+0-1)-0] = c_200455;
						res_389360 = addInt(res_389360, 1);
					}
			} while(false);
		} while(false);

	return result_200457;

}

function validate_utf8_116829(s_116831) {
						var Tmp3;
						var Tmp4;
						var Tmp5;
						var Tmp6;
						var Tmp7;
						var Tmp8;

	var result_116832 = 0;

	BeforeRet: do {
		var i_116834 = 0;
		var l_116835 = (s_116831 != null ? s_116831.length : 0);
		L1: do {
				L2: while (true) {
				if (!(i_116834 < l_116835)) break L2;
					if ((s_116831[chckIndx(i_116834, 0, s_116831.length+0-1)-0] <= 127)) {
					i_116834 = addInt(i_116834, 1);
					}
					else {
					if ((((s_116831[chckIndx(i_116834, 0, s_116831.length+0-1)-0] >>> 0) >>> 5) == 6)) {
					if ((s_116831[chckIndx(i_116834, 0, s_116831.length+0-1)-0] < 194)) {
					result_116832 = i_116834;
					break BeforeRet;
					}
					
						if (!(addInt(i_116834, 1) < l_116835)) Tmp3 = false; else {							Tmp3 = (((s_116831[chckIndx(addInt(i_116834, 1), 0, s_116831.length+0-1)-0] >>> 0) >>> 6) == 2);						}					if (Tmp3) {
					i_116834 = addInt(i_116834, 2);
					}
					else {
						result_116832 = i_116834;
						break BeforeRet;
					}
					
					}
					else {
					if ((((s_116831[chckIndx(i_116834, 0, s_116831.length+0-1)-0] >>> 0) >>> 4) == 14)) {
						if (!(addInt(i_116834, 2) < l_116835)) Tmp5 = false; else {							Tmp5 = (((s_116831[chckIndx(addInt(i_116834, 1), 0, s_116831.length+0-1)-0] >>> 0) >>> 6) == 2);						}						if (!Tmp5) Tmp4 = false; else {							Tmp4 = (((s_116831[chckIndx(addInt(i_116834, 2), 0, s_116831.length+0-1)-0] >>> 0) >>> 6) == 2);						}					if (Tmp4) {
					i_116834 = addInt(i_116834, 3);
					}
					else {
						result_116832 = i_116834;
						break BeforeRet;
					}
					
					}
					else {
					if ((((s_116831[chckIndx(i_116834, 0, s_116831.length+0-1)-0] >>> 0) >>> 3) == 30)) {
						if (!(addInt(i_116834, 3) < l_116835)) Tmp8 = false; else {							Tmp8 = (((s_116831[chckIndx(addInt(i_116834, 1), 0, s_116831.length+0-1)-0] >>> 0) >>> 6) == 2);						}						if (!Tmp8) Tmp7 = false; else {							Tmp7 = (((s_116831[chckIndx(addInt(i_116834, 2), 0, s_116831.length+0-1)-0] >>> 0) >>> 6) == 2);						}						if (!Tmp7) Tmp6 = false; else {							Tmp6 = (((s_116831[chckIndx(addInt(i_116834, 3), 0, s_116831.length+0-1)-0] >>> 0) >>> 6) == 2);						}					if (Tmp6) {
					i_116834 = addInt(i_116834, 4);
					}
					else {
						result_116832 = i_116834;
						break BeforeRet;
					}
					
					}
					else {
						result_116832 = i_116834;
						break BeforeRet;
					}
					}}}
				}
		} while(false);
		result_116832 = -1;
		break BeforeRet;
	} while (false);

	return result_116832;

}

function nucruneLen(s_113825) {
	var result_113826 = 0;

		var i_113828 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_113828 < (s_113825 != null ? s_113825.length : 0))) break L2;
					if ((s_113825[chckIndx(i_113828, 0, s_113825.length+0-1)-0] <= 127)) {
					i_113828 = addInt(i_113828, 1);
					}
					else {
					if ((((s_113825[chckIndx(i_113828, 0, s_113825.length+0-1)-0] >>> 0) >>> 5) == 6)) {
					i_113828 = addInt(i_113828, 2);
					}
					else {
					if ((((s_113825[chckIndx(i_113828, 0, s_113825.length+0-1)-0] >>> 0) >>> 4) == 14)) {
					i_113828 = addInt(i_113828, 3);
					}
					else {
					if ((((s_113825[chckIndx(i_113828, 0, s_113825.length+0-1)-0] >>> 0) >>> 3) == 30)) {
					i_113828 = addInt(i_113828, 4);
					}
					else {
					if ((((s_113825[chckIndx(i_113828, 0, s_113825.length+0-1)-0] >>> 0) >>> 2) == 62)) {
					i_113828 = addInt(i_113828, 5);
					}
					else {
					if ((((s_113825[chckIndx(i_113828, 0, s_113825.length+0-1)-0] >>> 0) >>> 1) == 126)) {
					i_113828 = addInt(i_113828, 6);
					}
					else {
					i_113828 = addInt(i_113828, 1);
					}
					}}}}}
					result_113826 = addInt(result_113826, 1);
				}
		} while(false);

	return result_113826;

}

function align_string_287223(s_287225, minimum_width_287226, align_287227, fill_287228) {
			var Tmp1;

	var result_287229 = null;

		if ((minimum_width_287226 == 0)) {
		result_287229 = nimCopy(null, s_287225, NTI45040);
		}
		else {
			if ((validate_utf8_116829(s_287225) == -1)) {
			Tmp1 = nucruneLen(s_287225);
			}
			else {
			Tmp1 = (s_287225 != null ? s_287225.length : 0);
			}
			
			var s_rune_len_287231 = Tmp1;
			var to_fill_287232 = subInt(minimum_width_287226, s_rune_len_287231);
			if ((to_fill_287232 <= 0)) {
			result_287229 = nimCopy(null, s_287225, NTI45040);
			}
			else {
			if (((align_287227 == 60) || (align_287227 == 0))) {
			result_287229 = nimCopy(null, (s_287225 || []).concat(nsuRepeatChar(fill_287228, chckRange(to_fill_287232, 0, 2147483647)) || []), NTI45040);
			}
			else {
			if ((align_287227 == 94)) {
			var half_287233 = divInt(to_fill_287232, 2);
			result_287229 = nimCopy(null, (nsuRepeatChar(fill_287228, chckRange(half_287233, 0, 2147483647)) || []).concat(s_287225 || [],nsuRepeatChar(fill_287228, chckRange(subInt(to_fill_287232, half_287233), 0, 2147483647)) || []), NTI45040);
			}
			else {
				result_287229 = nimCopy(null, (nsuRepeatChar(fill_287228, chckRange(to_fill_287232, 0, 2147483647)) || []).concat(s_287225 || []), NTI45040);
			}
			}}
		}
		

	return result_287229;

}

function nsuToUpperAsciiChar(c_196462) {
	var result_196463 = 0;

		if ((ConstSet13[c_196462] != undefined)) {
		result_196463 = chckRange(subInt(c_196462, 32), 0, 255);
		}
		else {
			result_196463 = c_196462;
		}
		

	return result_196463;

}

function nsuToUpperAsciiStr(s_196501) {
	var result_196502 = null;

		result_196502 = nimCopy(null, mnewString(chckRange((s_196501 != null ? s_196501.length : 0), 0, 2147483647)), NTI45040);
		L1: do {
			var i_196503 = 0;
			var colontmp__299671 = 0;
			colontmp__299671 = subInt((s_196501 != null ? s_196501.length : 0), 1);
			var res_299672 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_299672 <= colontmp__299671)) break L3;
						i_196503 = res_299672;
						result_196502[chckIndx(i_196503, 0, result_196502.length+0-1)-0] = nsuToUpperAsciiChar(s_196501[chckIndx(i_196503, 0, s_196501.length+0-1)-0]);
						res_299672 = addInt(res_299672, 1);
					}
			} while(false);
		} while(false);

	return result_196502;

}

function format_value_359045(result_359048, result_359048_Idx, value_359049, specifier_359050) {
		var Tmp1;

	BeforeRet: do {
		if (((specifier_359050 != null ? specifier_359050.length : 0) == 0)) {
		if (result_359048[result_359048_Idx] != null) { result_359048[result_359048_Idx] = (result_359048[result_359048_Idx]).concat(cstrToNimstr((value_359049)+"")); } else { result_359048[result_359048_Idx] = cstrToNimstr((value_359049)+"").slice(); };
		break BeforeRet;
		}
		
		var spec_359051 = parse_standard_format_specifier_287324(specifier_359050, 0, false);
		var fmode_359052 = 0;
		switch (spec_359051.typ) {
		case 101:
		case 69:
			fmode_359052 = 2;
			break;
		case 102:
		case 70:
			fmode_359052 = 1;
			break;
		case 103:
		case 71:
			fmode_359052 = 0;
			break;
		case 0:
			break;
		default: 
			var e_359054 = null;
			e_359054 = {m_type: NTI48452, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			e_359054.message = nimCopy(null, (makeNimstrLit("invalid type in format string for number, expected one  of \'e\', \'E\', \'f\', \'F\', \'g\', \'G\' but got: ") || []).concat([spec_359051.typ]), NTI45040);
			e_359054.parent = null;
			raiseException(e_359054, "ValueError");
			break;
		}
		var f_359209 = [nsuformatBiggestFloat(value_359049, fmode_359052, chckRange(spec_359051.precision, -1, 32), 46)];
		var sign_359210 = false;
		if ((0.0 <= value_359049)) {
		if (!((spec_359051.sign == 45))) {
		sign_359210 = true;
		if ((value_359049 == 0.0)) {
		if (((1.0000000000000000e+000 / value_359049) == Infinity)) {
		insert_73401(f_359209, 0, nimCharToStr(spec_359051.sign), 0);
		}
		
		}
		else {
		insert_73401(f_359209, 0, nimCharToStr(spec_359051.sign), 0);
		}
		
		}
		
		}
		else {
			sign_359210 = true;
		}
		
		if (spec_359051.padWithZero) {
		var sign_str_359213 = [];
		if (sign_359210) {
		sign_str_359213 = nimCopy(null, nimCharToStr(f_359209[0][chckIndx(0, 0, f_359209[0].length+0-1)-0]), NTI45040);
		f_359209[0] = nimCopy(null, HEX5BHEX5D_149304(f_359209[0], HEX2EHEX2E_149239(1, 1)), NTI45040);
		}
		
		var to_fill_359256 = subInt(subInt(spec_359051.minimumWidth, (f_359209[0] != null ? f_359209[0].length : 0)), (sign_359210 ? 1:0));
		if ((0 < to_fill_359256)) {
		f_359209[0] = nimCopy(null, (nsuRepeatChar(48, chckRange(to_fill_359256, 0, 2147483647)) || []).concat(f_359209[0] || []), NTI45040);
		}
		
		if (sign_359210) {
		f_359209[0] = nimCopy(null, (sign_str_359213 || []).concat(f_359209[0] || []), NTI45040);
		}
		
		}
		
		if ((spec_359051.align == 0)) {
		Tmp1 = 62;
		}
		else {
		Tmp1 = spec_359051.align;
		}
		
		var align_359259 = Tmp1;
		var res_359260 = align_string_287223(f_359209[0], spec_359051.minimumWidth, align_359259, spec_359051.fill);
		if ((ConstSet12[spec_359051.typ] != undefined)) {
		if (result_359048[result_359048_Idx] != null) { result_359048[result_359048_Idx] = (result_359048[result_359048_Idx]).concat(nsuToUpperAsciiStr(res_359260)); } else { result_359048[result_359048_Idx] = nsuToUpperAsciiStr(res_359260).slice(); };
		}
		else {
		if (result_359048[result_359048_Idx] != null) { result_359048[result_359048_Idx] = (result_359048[result_359048_Idx]).concat(res_359260); } else { result_359048[result_359048_Idx] = res_359260.slice(); };
		}
		
	} while (false);

	
}

function nsuJoinSep(a_201659, sep_201660) {
	var result_201661 = null;

		if ((0 < (a_201659 != null ? a_201659.length : 0))) {
		var l_201672 = mulInt((sep_201660 != null ? sep_201660.length : 0), subInt((a_201659 != null ? a_201659.length : 0), 1));
		L1: do {
			var i_201686 = 0;
			var colontmp__389385 = 0;
			colontmp__389385 = (a_201659 != null ? (a_201659.length-1) : -1);
			var res_389386 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_389386 <= colontmp__389385)) break L3;
						i_201686 = res_389386;
						l_201672 = addInt(l_201672, (a_201659[chckIndx(i_201686, 0, a_201659.length+0-1)-0] != null ? a_201659[chckIndx(i_201686, 0, a_201659.length+0-1)-0].length : 0));
						res_389386 = addInt(res_389386, 1);
					}
			} while(false);
		} while(false);
		result_201661 = nimCopy(null, mnewString(0), NTI45040);
		if (result_201661 != null) { result_201661 = (result_201661).concat(a_201659[chckIndx(0, 0, a_201659.length+0-1)-0]); } else { result_201661 = a_201659[chckIndx(0, 0, a_201659.length+0-1)-0].slice(); };
		L4: do {
			var i_201706 = 0;
			var colontmp__389392 = 0;
			colontmp__389392 = (a_201659 != null ? (a_201659.length-1) : -1);
			var res_389393 = 1;
			L5: do {
					L6: while (true) {
					if (!(res_389393 <= colontmp__389392)) break L6;
						i_201706 = res_389393;
						if (result_201661 != null) { result_201661 = (result_201661).concat(sep_201660); } else { result_201661 = sep_201660.slice(); };
						if (result_201661 != null) { result_201661 = (result_201661).concat(a_201659[chckIndx(i_201706, 0, a_201659.length+0-1)-0]); } else { result_201661 = a_201659[chckIndx(i_201706, 0, a_201659.length+0-1)-0].slice(); };
						res_389393 = addInt(res_389393, 1);
					}
			} while(false);
		} while(false);
		}
		else {
			result_201661 = nimCopy(null, [], NTI45040);
		}
		

	return result_201661;

}

function sectors2json_354601(x_354610) {
	var result_354611 = null;

		var cnt_354613 = 0;
		var len_obj_354760 = len_354740(x_354610);
		result_354611 = {};
		L1: do {
			var k_355814 = null;
			var v_355815 = null;
			var l_389330 = len_354740(x_354610);
			if ((0 < x_354610.counter)) {
			var h_389331 = x_354610.first;
			L2: do {
					L3: while (true) {
					if (!(0 <= h_389331)) break L3;
						var nxt_389333 = x_354610.data[chckIndx(h_389331, 0, x_354610.data.length+0-1)-0].Field1;
						if (is_filled_232018(x_354610.data[chckIndx(h_389331, 0, x_354610.data.length+0-1)-0].Field0)) {
						k_355814 = x_354610.data[chckIndx(h_389331, 0, x_354610.data.length+0-1)-0].Field2;
						v_355815 = x_354610.data[chckIndx(h_389331, 0, x_354610.data.length+0-1)-0].Field3;
						var o_s_355816 = {};
						o_s_355816["postalCode"] = (toJSStr(v_355815.postalCode));
						o_s_355816["district"] = (toJSStr(v_355815.district));
						o_s_355816["city"] = (toJSStr(v_355815.city));
						o_s_355816["pFix"] = (v_355815.pFix);
						o_s_355816["streets"] = {};
						L4: do {
							var k_str_357614 = null;
							var v_str_357615 = null;
							var colontmp__389325 = {data: null, counter: 0, first: 0, last: 0};
							nimCopy(colontmp__389325, v_355815.streets, NTI341066);
							var l_389326 = len_356748(colontmp__389325);
							if ((0 < colontmp__389325.counter)) {
							var h_389327 = colontmp__389325.first;
							L5: do {
									L6: while (true) {
									if (!(0 <= h_389327)) break L6;
										var nxt_389329 = colontmp__389325.data[chckIndx(h_389327, 0, colontmp__389325.data.length+0-1)-0].Field1;
										if (is_filled_232018(colontmp__389325.data[chckIndx(h_389327, 0, colontmp__389325.data.length+0-1)-0].Field0)) {
										k_str_357614 = colontmp__389325.data[chckIndx(h_389327, 0, colontmp__389325.data.length+0-1)-0].Field2;
										v_str_357615 = colontmp__389325.data[chckIndx(h_389327, 0, colontmp__389325.data.length+0-1)-0].Field3;
										var seq_lnk_357653 = new_seq_357626(0);
										L7: do {
											var str_lnk_357814 = null;
											var i_389322 = 0;
											var l_389323 = (v_str_357615 != null ? v_str_357615.length : 0);
											L8: do {
													L9: while (true) {
													if (!(i_389322 < l_389323)) break L9;
														str_lnk_357814 = v_str_357615[chckIndx(i_389322, 0, v_str_357615.length+0-1)-0];
														var lnk_o_357815 = {};
														lnk_o_357815["linkId"] = (str_lnk_357814.linkId);
														lnk_o_357815["name"] = (toJSStr(str_lnk_357814.name));
														lnk_o_357815["cityId"] = (str_lnk_357814.cityId);
														lnk_o_357815["districtId"] = (str_lnk_357814.districtId);
														lnk_o_357815["postalCode"] = (toJSStr(str_lnk_357814.postalCode));
														lnk_o_357815["neighborLinks"] = (str_lnk_357814.neighborLinks);
														var gms_359027 = new_seq_85233(0);
														L10: do {
															var g_359034 = null;
															var colontmp__389316 = null;
															colontmp__389316 = str_lnk_357814.geometry;
															var i_389318 = 0;
															var l_389319 = (colontmp__389316 != null ? colontmp__389316.length : 0);
															L11: do {
																	L12: while (true) {
																	if (!(i_389318 < l_389319)) break L12;
																		g_359034 = colontmp__389316[chckIndx(i_389318, 0, colontmp__389316.length+0-1)-0];
																		var lat_359035 = g_359034.lat;
																		var lng_359036 = g_359034.lng;
																		var fmt_res_359040 = [mnewString(0)];
																		format_value_359045(fmt_res_359040, 0, lat_359035, makeNimstrLit("0.5f"));
																		var Tmp13 = nimCopy(null, fmt_res_359040[0], NTI45040);
																		if (gms_359027 != null) { gms_359027.push(Tmp13); } else { gms_359027 = [Tmp13]; };
																		var fmt_res_359304 = [mnewString(0)];
																		format_value_359045(fmt_res_359304, 0, lng_359036, makeNimstrLit("0.5f"));
																		var Tmp14 = nimCopy(null, fmt_res_359304[0], NTI45040);
																		if (gms_359027 != null) { gms_359027.push(Tmp14); } else { gms_359027 = [Tmp14]; };
																		i_389318 = addInt(i_389318, 1);
																		if (!(((colontmp__389316 != null ? colontmp__389316.length : 0) == l_389319))) {
																		failed_assert_impl_60066(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
																		}
																		
																	}
															} while(false);
														} while(false);
														lnk_o_357815["geometry"] = (toJSStr(nsuJoinSep(gms_359027, makeNimstrLit(","))));
														lnk_o_357815["readOnly"] = (str_lnk_357814.readOnly);
														lnk_o_357815["addedToMap"] = (str_lnk_357814.addedToMap);
														lnk_o_357815["addedToSector"] = (str_lnk_357814.addedToSector);
														if (seq_lnk_357653 != null) { seq_lnk_357653.push(lnk_o_357815); } else { seq_lnk_357653 = [lnk_o_357815]; };
														i_389322 = addInt(i_389322, 1);
														if (!(((v_str_357615 != null ? v_str_357615.length : 0) == l_389323))) {
														failed_assert_impl_60066(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
														}
														
													}
											} while(false);
										} while(false);
										o_s_355816["streets"][toJSStr(k_str_357614)] = seq_lnk_357653;
										if (!((len_356748(colontmp__389325) == l_389326))) {
										failed_assert_impl_60066(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
										}
										
										}
										
										h_389327 = nxt_389329;
									}
							} while(false);
							}
							
						} while(false);
						o_s_355816["shownOnMap"] = (v_355815.shownOnMap);
						o_s_355816["exclude"] = (v_355815.exclude);
						result_354611[toJSStr(k_355814)] = o_s_355816;
						if (!((len_354740(x_354610) == l_389330))) {
						failed_assert_impl_60066(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
						}
						
						}
						
						h_389331 = nxt_389333;
					}
			} while(false);
			}
			
		} while(false);

	return result_354611;

}

function save_360814() {
		if ((ministry_area_343231[0] == null)) {
		ministry_area_343231[0] = {name: nimCopy(null, name_area_343232[0], NTI45040), cities: init_ordered_table_360823(64)};
		}
		
		HEX5BHEX5DHEX3D_361345(ministry_area_343231[0].cities, addr_city_343633[0], {allLinks: nimCopy(null, all_links_341629[0], NTI341125), allStreets: nimCopy(null, all_streets_342029[0], NTI341148), cachedTiles: nimCopy(null, cached_tiles_342429[0], NTI341174), allSectors: nimCopy(null, all_sectors_342829[0], NTI341197), lastPostfix: nimCopy(null, last_postfix_343229[0], NTI341223)});
		var ser_366050 = JSON.stringify(ministry_area_343231[0]);
		var fname_366051 = (addr_city_343633[0] || []).concat(makeNimstrLit("_") || [],HEX24_221910(now_216236()) || [],makeNimstrLit(".json") || []);
		save_func_346664(ser_366050, fname_366051);
		var cities_exp_366052 = new_jobject_262204();
		var ministry_area_exp_366053 = new_jobject_262204();
		add_263222(ministry_area_exp_366053, makeNimstrLit("name"), new_jstring_262087(name_area_343232[0]));
		var all_sectors_exp_366055 = new_jarray_262657();
		L1: do {
			var k_366063 = null;
			var v_366064 = null;
			var l_389262 = len_354740(all_sectors_342829[0]);
			if ((0 < all_sectors_342829[0].counter)) {
			var h_389263 = all_sectors_342829[0].first;
			L2: do {
					L3: while (true) {
					if (!(0 <= h_389263)) break L3;
						var nxt_389265 = all_sectors_342829[0].data[chckIndx(h_389263, 0, all_sectors_342829[0].data.length+0-1)-0].Field1;
						if (is_filled_232018(all_sectors_342829[0].data[chckIndx(h_389263, 0, all_sectors_342829[0].data.length+0-1)-0].Field0)) {
						k_366063 = all_sectors_342829[0].data[chckIndx(h_389263, 0, all_sectors_342829[0].data.length+0-1)-0].Field2;
						v_366064 = all_sectors_342829[0].data[chckIndx(h_389263, 0, all_sectors_342829[0].data.length+0-1)-0].Field3;
						var s_366065 = new_jobject_262204();
						add_263222(s_366065, makeNimstrLit("city"), new_jstring_262087(v_366064.city));
						add_262995(all_sectors_exp_366055, s_366065);
						if (!((len_354740(all_sectors_342829[0]) == l_389262))) {
						failed_assert_impl_60066(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
						}
						
						}
						
						h_389263 = nxt_389265;
					}
			} while(false);
			}
			
		} while(false);
		var fname_exp_366068 = (addr_city_343633[0] || []).concat(makeNimstrLit("_Exp_") || [],HEX24_221910(now_216236()) || [],makeNimstrLit(".json") || []);
		var str_r_366069 = sectors2json_354601(all_sectors_342829[0]);
		save_func_346664(JSON.stringify(str_r_366069), fname_exp_366068);

	
}

function set_attr_300568(n_300570, key_300571, val_300572) {
	BeforeRet: do {
		if (((n_300570.attrs != null ? n_300570.attrs.length : 0) == 0)) {
		n_300570.attrs = nimCopy(null, [key_300571, val_300572], NTI300588);
		}
		else {
			L1: do {
				var i_300601 = 0;
				var colontmp__389399 = 0;
				colontmp__389399 = subInt((n_300570.attrs != null ? n_300570.attrs.length : 0), 2);
				var res_389400 = 0;
				L2: do {
						L3: while (true) {
						if (!(res_389400 <= colontmp__389399)) break L3;
							i_300601 = res_389400;
							if ((n_300570.attrs[chckIndx(i_300601, 0, n_300570.attrs.length+0-1)-0] == key_300571)) {
							n_300570.attrs[chckIndx(addInt(i_300601, 1), 0, n_300570.attrs.length+0-1)-0] = val_300572;
							break BeforeRet;
							}
							
							res_389400 = addInt(res_389400, 2);
						}
				} while(false);
			} while(false);
			if (n_300570.attrs != null) { n_300570.attrs.push(key_300571); } else { n_300570.attrs = [key_300571]; };
			if (n_300570.attrs != null) { n_300570.attrs.push(val_300572); } else { n_300570.attrs = [val_300572]; };
		}
		
	} while (false);

	
}

function raw_get_345435(t_345439, key_345440, hc_345441, hc_345441_Idx) {
						var Tmp3;

	var result_345442 = 0;

	BeforeRet: do {
		hc_345441[hc_345441_Idx] = hash_229014(key_345440);
		if ((hc_345441[hc_345441_Idx] == 0)) {
		hc_345441[hc_345441_Idx] = 314159265;
		}
		
		if (((t_345439.data != null ? t_345439.data.length : 0) == 0)) {
		result_345442 = -1;
		break BeforeRet;
		}
		
		var h_345584 = (hc_345441[hc_345441_Idx] & (t_345439.data != null ? (t_345439.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_232018(t_345439.data[chckIndx(h_345584, 0, t_345439.data.length+0-1)-0].Field0)) break L2;
						if (!(t_345439.data[chckIndx(h_345584, 0, t_345439.data.length+0-1)-0].Field0 == hc_345441[hc_345441_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_345439.data[chckIndx(h_345584, 0, t_345439.data.length+0-1)-0].Field2, key_345440);						}					if (Tmp3) {
					result_345442 = h_345584;
					break BeforeRet;
					}
					
					h_345584 = next_try_232035(h_345584, (t_345439.data != null ? (t_345439.data.length-1) : -1));
				}
		} while(false);
		result_345442 = subInt(-1, h_345584);
	} while (false);

	return result_345442;

}

function HEX5BHEX5D_345423(t_345429, key_345430) {
	var result_345432 = null;
	var result_345432_Idx = 0;

		var hc_345433 = [0];
		var index_345434 = raw_get_345435(t_345429, key_345430, hc_345433, 0);
		if ((0 <= index_345434)) {
		result_345432 = t_345429.data[chckIndx(index_345434, 0, t_345429.data.length+0-1)-0]; result_345432_Idx = "Field3";
		}
		else {
			var e_346403 = null;
			e_346403 = {m_type: NTI48454, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			e_346403.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(key_345430 || []), NTI45040);
			e_346403.parent = null;
			raiseException(e_346403, "KeyError");
		}
		

	return [result_345432, result_345432_Idx];

}

function load_345269(d_345271) {
		var Tmp2;
		var Tmp3;

++excHandler;
		Tmp2 = framePtr;
		try {
		var city_346635 = (Tmp3 = HEX5BHEX5D_345423(d_345271.cities, addr_city_343633[0]), Tmp3)[0][Tmp3[1]];
		nimCopy(all_links_341629[0], city_346635.allLinks, NTI341125);
		nimCopy(all_streets_342029[0], city_346635.allStreets, NTI341148);
		nimCopy(cached_tiles_342429[0], city_346635.cachedTiles, NTI341174);
		nimCopy(all_sectors_342829[0], city_346635.allSectors, NTI341197);
		nimCopy(last_postfix_343229[0], city_346635.lastPostfix, NTI341223);
		redraw_320814(kxi_311324[0]);
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
		framePtr = Tmp2;
		window.alert("Сначала кликнуть по городу на карте\n с каким надо работать.");
		lastJSError = prevJSError;
		} finally {
		framePtr = Tmp2;
		}

	
}

function name_343796(s_343798) {
	var result_343799 = null;

		result_343799 = nimCopy(null, nsuJoinSep([(s_343798.postalCode || []).concat(makeNimstrLit("-") || [],cstrToNimstr((s_343798.pFix)+"") || []), nimCopy(null, s_343798.city, NTI45040), nimCopy(null, s_343798.district, NTI45040)], makeNimstrLit(" ")), NTI45040);

	return result_343799;

}

function id_343824(s_343826) {
	var result_343827 = null;

		result_343827 = nimCopy(null, (s_343826.postalCode || []).concat(makeNimstrLit("-") || [],cstrToNimstr((s_343826.pFix)+"") || []), NTI45040);

	return result_343827;

}

function raw_get_372609(t_372613, key_372614, hc_372615, hc_372615_Idx) {
						var Tmp3;

	var result_372616 = 0;

	BeforeRet: do {
		hc_372615[hc_372615_Idx] = hash_229014(key_372614);
		if ((hc_372615[hc_372615_Idx] == 0)) {
		hc_372615[hc_372615_Idx] = 314159265;
		}
		
		if (((t_372613.data != null ? t_372613.data.length : 0) == 0)) {
		result_372616 = -1;
		break BeforeRet;
		}
		
		var h_372758 = (hc_372615[hc_372615_Idx] & (t_372613.data != null ? (t_372613.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_232018(t_372613.data[chckIndx(h_372758, 0, t_372613.data.length+0-1)-0].Field0)) break L2;
						if (!(t_372613.data[chckIndx(h_372758, 0, t_372613.data.length+0-1)-0].Field0 == hc_372615[hc_372615_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_372613.data[chckIndx(h_372758, 0, t_372613.data.length+0-1)-0].Field2, key_372614);						}					if (Tmp3) {
					result_372616 = h_372758;
					break BeforeRet;
					}
					
					h_372758 = next_try_232035(h_372758, (t_372613.data != null ? (t_372613.data.length-1) : -1));
				}
		} while(false);
		result_372616 = subInt(-1, h_372758);
	} while (false);

	return result_372616;

}

function HEX5BHEX5D_372597(t_372603, key_372604) {
	var result_372606 = null;
	var result_372606_Idx = 0;

		var hc_372607 = [0];
		var index_372608 = raw_get_372609(t_372603, key_372604, hc_372607, 0);
		if ((0 <= index_372608)) {
		result_372606 = t_372603.data[chckIndx(index_372608, 0, t_372603.data.length+0-1)-0]; result_372606_Idx = "Field3";
		}
		else {
			var e_373603 = null;
			e_373603 = {m_type: NTI48454, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			e_373603.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(key_372604 || []), NTI45040);
			e_373603.parent = null;
			raiseException(e_373603, "KeyError");
		}
		

	return [result_372606, result_372606_Idx];

}

function raw_get_376421(t_376426, key_376427, hc_376428, hc_376428_Idx) {
						var Tmp3;

	var result_376429 = 0;

	BeforeRet: do {
		hc_376428[hc_376428_Idx] = hash_229014(key_376427);
		if ((hc_376428[hc_376428_Idx] == 0)) {
		hc_376428[hc_376428_Idx] = 314159265;
		}
		
		if (((t_376426.data != null ? t_376426.data.length : 0) == 0)) {
		result_376429 = -1;
		break BeforeRet;
		}
		
		var h_376571 = (hc_376428[hc_376428_Idx] & (t_376426.data != null ? (t_376426.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_232018(t_376426.data[chckIndx(h_376571, 0, t_376426.data.length+0-1)-0].Field0)) break L2;
						if (!(t_376426.data[chckIndx(h_376571, 0, t_376426.data.length+0-1)-0].Field0 == hc_376428[hc_376428_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_376426.data[chckIndx(h_376571, 0, t_376426.data.length+0-1)-0].Field2, key_376427);						}					if (Tmp3) {
					result_376429 = h_376571;
					break BeforeRet;
					}
					
					h_376571 = next_try_232035(h_376571, (t_376426.data != null ? (t_376426.data.length-1) : -1));
				}
		} while(false);
		result_376429 = subInt(-1, h_376571);
	} while (false);

	return result_376429;

}

function raw_insert_378907(t_378913, data_378916, data_378916_Idx, key_378917, val_378918, hc_378919, h_378920) {
		data_378916[data_378916_Idx][chckIndx(h_378920, 0, data_378916[data_378916_Idx].length+0-1)-0].Field2 = nimCopy(null, key_378917, NTI45040);
		data_378916[data_378916_Idx][chckIndx(h_378920, 0, data_378916[data_378916_Idx].length+0-1)-0].Field3 = nimCopy(null, val_378918, NTI341058);
		data_378916[data_378916_Idx][chckIndx(h_378920, 0, data_378916[data_378916_Idx].length+0-1)-0].Field0 = hc_378919;
		data_378916[data_378916_Idx][chckIndx(h_378920, 0, data_378916[data_378916_Idx].length+0-1)-0].Field1 = -1;
		if ((t_378913.first < 0)) {
		t_378913.first = h_378920;
		}
		
		if ((0 <= t_378913.last)) {
		data_378916[data_378916_Idx][chckIndx(t_378913.last, 0, data_378916[data_378916_Idx].length+0-1)-0].Field1 = h_378920;
		}
		
		t_378913.last = h_378920;

	
}

function enlarge_377767(t_377773) {
		var n_377781 = null;
		n_377781 = new Array(chckRange(mulInt((t_377773.data != null ? t_377773.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_377773.data != null ? t_377773.data.length : 0), 2), 0, 2147483647);++i) {n_377781[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		var h_377920 = t_377773.first;
		t_377773.first = -1;
		t_377773.last = -1;
		var Tmp1 = t_377773.data; t_377773.data = n_377781; n_377781 = Tmp1;		L2: do {
				L3: while (true) {
				if (!(0 <= h_377920)) break L3;
					var nxt_378086 = n_377781[chckIndx(h_377920, 0, n_377781.length+0-1)-0].Field1;
					var eh_378242 = n_377781[chckIndx(h_377920, 0, n_377781.length+0-1)-0].Field0;
					if (is_filled_232018(eh_378242)) {
					var j_378249 = (eh_378242 & (t_377773.data != null ? (t_377773.data.length-1) : -1));
					L4: do {
							L5: while (true) {
							if (!is_filled_232018(t_377773.data[chckIndx(j_378249, 0, t_377773.data.length+0-1)-0].Field0)) break L5;
								j_378249 = next_try_232035(j_378249, (t_377773.data != null ? (t_377773.data.length-1) : -1));
							}
					} while(false);
					raw_insert_378907(t_377773, t_377773, "data", n_377781[chckIndx(h_377920, 0, n_377781.length+0-1)-0].Field2, n_377781[chckIndx(h_377920, 0, n_377781.length+0-1)-0].Field3, n_377781[chckIndx(h_377920, 0, n_377781.length+0-1)-0].Field0, j_378249);
					}
					
					h_377920 = nxt_378086;
				}
		} while(false);

	
}

function raw_get_known_hc_379759(t_379764, key_379765, hc_379766) {
	var result_379767 = 0;

	BeforeRet: do {
		if (((t_379764.data != null ? t_379764.data.length : 0) == 0)) {
		result_379767 = -1;
		break BeforeRet;
		}
		
		var h_379906 = (hc_379766 & (t_379764.data != null ? (t_379764.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_232018(t_379764.data[chckIndx(h_379906, 0, t_379764.data.length+0-1)-0].Field0)) break L2;
					if (((t_379764.data[chckIndx(h_379906, 0, t_379764.data.length+0-1)-0].Field0 == hc_379766) && eqStrings(t_379764.data[chckIndx(h_379906, 0, t_379764.data.length+0-1)-0].Field2, key_379765))) {
					result_379767 = h_379906;
					break BeforeRet;
					}
					
					h_379906 = next_try_232035(h_379906, (t_379764.data != null ? (t_379764.data.length-1) : -1));
				}
		} while(false);
		result_379767 = subInt(-1, h_379906);
	} while (false);

	return result_379767;

}

function has_key_or_put_375835(t_375841, key_375842, val_375843) {
	var result_375844 = false;

		if (((t_375841.data != null ? t_375841.data.length : 0) == 0)) {
		if (!(is_power_of_two_109062(64))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_375841.counter = 0;
		t_375841.data = new Array(64); for (var i=0;i<64;++i) {t_375841.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		t_375841.first = -1;
		t_375841.last = -1;
		}
		
		var hc_376401 = [0];
		var index_377060 = raw_get_376421(t_375841, key_375842, hc_376401, 0);
		if ((index_377060 < 0)) {
		result_375844 = false;
		if (((t_375841.data != null ? t_375841.data.length : 0) == 0)) {
		if (!(is_power_of_two_109062(64))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_375841.counter = 0;
		t_375841.data = new Array(64); for (var i=0;i<64;++i) {t_375841.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		t_375841.first = -1;
		t_375841.last = -1;
		}
		
		if (must_rehash_232053((t_375841.data != null ? t_375841.data.length : 0), t_375841.counter)) {
		enlarge_377767(t_375841);
		index_377060 = raw_get_known_hc_379759(t_375841, key_375842, hc_376401[0]);
		}
		
		index_377060 = subInt(-1, index_377060);
		raw_insert_378907(t_375841, t_375841, "data", key_375842, val_375843, hc_376401[0], index_377060);
		t_375841.counter = addInt(t_375841.counter, 1);
		}
		else {
			result_375844 = true;
		}
		

	return result_375844;

}

function raw_get_374727(t_374731, key_374732, hc_374733, hc_374733_Idx) {
						var Tmp3;

	var result_374734 = 0;

	BeforeRet: do {
		hc_374733[hc_374733_Idx] = hash_229014(key_374732);
		if ((hc_374733[hc_374733_Idx] == 0)) {
		hc_374733[hc_374733_Idx] = 314159265;
		}
		
		if (((t_374731.data != null ? t_374731.data.length : 0) == 0)) {
		result_374734 = -1;
		break BeforeRet;
		}
		
		var h_374876 = (hc_374733[hc_374733_Idx] & (t_374731.data != null ? (t_374731.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_232018(t_374731.data[chckIndx(h_374876, 0, t_374731.data.length+0-1)-0].Field0)) break L2;
						if (!(t_374731.data[chckIndx(h_374876, 0, t_374731.data.length+0-1)-0].Field0 == hc_374733[hc_374733_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_374731.data[chckIndx(h_374876, 0, t_374731.data.length+0-1)-0].Field2, key_374732);						}					if (Tmp3) {
					result_374734 = h_374876;
					break BeforeRet;
					}
					
					h_374876 = next_try_232035(h_374876, (t_374731.data != null ? (t_374731.data.length-1) : -1));
				}
		} while(false);
		result_374734 = subInt(-1, h_374876);
	} while (false);

	return result_374734;

}

function HEX5BHEX5D_374715(t_374721, key_374722) {
	var result_374724 = null;
	var result_374724_Idx = 0;

		var hc_374725 = [0];
		var index_374726 = raw_get_374727(t_374721, key_374722, hc_374725, 0);
		if ((0 <= index_374726)) {
		result_374724 = t_374721.data[chckIndx(index_374726, 0, t_374721.data.length+0-1)-0]; result_374724_Idx = "Field3";
		}
		else {
			var e_375603 = null;
			e_375603 = {m_type: NTI48454, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			e_375603.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(key_374722 || []), NTI45040);
			e_375603.parent = null;
			raiseException(e_375603, "KeyError");
		}
		

	return [result_374724, result_374724_Idx];

}

function del_384607(t_384613, key_384614) {
		var n_384622 = null;
		n_384622 = new Array(chckRange((t_384613.data != null ? t_384613.data.length : 0), 0, 2147483647)); for (var i=0;i<chckRange((t_384613.data != null ? t_384613.data.length : 0), 0, 2147483647);++i) {n_384622[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		var h_384761 = t_384613.first;
		t_384613.first = -1;
		t_384613.last = -1;
		var Tmp1 = t_384613.data; t_384613.data = n_384622; n_384622 = Tmp1;		var res_384771 = 0;
		res_384771 = hash_229014(key_384614);
		if ((res_384771 == 0)) {
		res_384771 = 314159265;
		}
		
		var hc_384775 = res_384771;
		L2: do {
				L3: while (true) {
				if (!(0 <= h_384761)) break L3;
					var nxt_384932 = n_384622[chckIndx(h_384761, 0, n_384622.length+0-1)-0].Field1;
					if (is_filled_232018(n_384622[chckIndx(h_384761, 0, n_384622.length+0-1)-0].Field0)) {
					if (((n_384622[chckIndx(h_384761, 0, n_384622.length+0-1)-0].Field0 == hc_384775) && eqStrings(n_384622[chckIndx(h_384761, 0, n_384622.length+0-1)-0].Field2, key_384614))) {
					t_384613.counter = subInt(t_384613.counter, 1);
					}
					else {
						var j_385744 = subInt(-1, raw_get_known_hc_379759(t_384613, n_384622[chckIndx(h_384761, 0, n_384622.length+0-1)-0].Field2, n_384622[chckIndx(h_384761, 0, n_384622.length+0-1)-0].Field0));
						raw_insert_378907(t_384613, t_384613, "data", n_384622[chckIndx(h_384761, 0, n_384622.length+0-1)-0].Field2, n_384622[chckIndx(h_384761, 0, n_384622.length+0-1)-0].Field3, n_384622[chckIndx(h_384761, 0, n_384622.length+0-1)-0].Field0, j_385744);
					}
					
					}
					
					h_384761 = nxt_384932;
				}
		} while(false);

	
}

function raw_get_344008(t_344012, key_344013, hc_344014, hc_344014_Idx) {
						var Tmp3;

	var result_344015 = 0;

	BeforeRet: do {
		hc_344014[hc_344014_Idx] = hash_229014(key_344013);
		if ((hc_344014[hc_344014_Idx] == 0)) {
		hc_344014[hc_344014_Idx] = 314159265;
		}
		
		if (((t_344012.data != null ? t_344012.data.length : 0) == 0)) {
		result_344015 = -1;
		break BeforeRet;
		}
		
		var h_344157 = (hc_344014[hc_344014_Idx] & (t_344012.data != null ? (t_344012.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_232018(t_344012.data[chckIndx(h_344157, 0, t_344012.data.length+0-1)-0].Field0)) break L2;
						if (!(t_344012.data[chckIndx(h_344157, 0, t_344012.data.length+0-1)-0].Field0 == hc_344014[hc_344014_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_344012.data[chckIndx(h_344157, 0, t_344012.data.length+0-1)-0].Field1, key_344013);						}					if (Tmp3) {
					result_344015 = h_344157;
					break BeforeRet;
					}
					
					h_344157 = next_try_232035(h_344157, (t_344012.data != null ? (t_344012.data.length-1) : -1));
				}
		} while(false);
		result_344015 = subInt(-1, h_344157);
	} while (false);

	return result_344015;

}

function HEX5BHEX5D_343996(t_344002, key_344003) {
	var result_344005 = null;
	var result_344005_Idx = 0;

		var hc_344006 = [0];
		var index_344007 = raw_get_344008(t_344002, key_344003, hc_344006, 0);
		if ((0 <= index_344007)) {
		result_344005 = t_344002.data[chckIndx(index_344007, 0, t_344002.data.length+0-1)-0]; result_344005_Idx = "Field2";
		}
		else {
			var e_345003 = null;
			e_345003 = {m_type: NTI48454, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			e_345003.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(key_344003 || []), NTI45040);
			e_345003.parent = null;
			raiseException(e_345003, "KeyError");
		}
		

	return [result_344005, result_344005_Idx];

}

function raw_get_known_hc_371744(t_371749, key_371750, hc_371751) {
	var result_371752 = 0;

	BeforeRet: do {
		if (((t_371749.data != null ? t_371749.data.length : 0) == 0)) {
		result_371752 = -1;
		break BeforeRet;
		}
		
		var h_371891 = (hc_371751 & (t_371749.data != null ? (t_371749.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_232018(t_371749.data[chckIndx(h_371891, 0, t_371749.data.length+0-1)-0].Field0)) break L2;
					if (((t_371749.data[chckIndx(h_371891, 0, t_371749.data.length+0-1)-0].Field0 == hc_371751) && eqStrings(t_371749.data[chckIndx(h_371891, 0, t_371749.data.length+0-1)-0].Field2, key_371750))) {
					result_371752 = h_371891;
					break BeforeRet;
					}
					
					h_371891 = next_try_232035(h_371891, (t_371749.data != null ? (t_371749.data.length-1) : -1));
				}
		} while(false);
		result_371752 = subInt(-1, h_371891);
	} while (false);

	return result_371752;

}

function raw_insert_370907(t_370913, data_370916, data_370916_Idx, key_370917, val_370918, hc_370919, h_370920) {
		data_370916[data_370916_Idx][chckIndx(h_370920, 0, data_370916[data_370916_Idx].length+0-1)-0].Field2 = nimCopy(null, key_370917, NTI45040);
		data_370916[data_370916_Idx][chckIndx(h_370920, 0, data_370916[data_370916_Idx].length+0-1)-0].Field3 = val_370918;
		data_370916[data_370916_Idx][chckIndx(h_370920, 0, data_370916[data_370916_Idx].length+0-1)-0].Field0 = hc_370919;
		data_370916[data_370916_Idx][chckIndx(h_370920, 0, data_370916[data_370916_Idx].length+0-1)-0].Field1 = -1;
		if ((t_370913.first < 0)) {
		t_370913.first = h_370920;
		}
		
		if ((0 <= t_370913.last)) {
		data_370916[data_370916_Idx][chckIndx(t_370913.last, 0, data_370916[data_370916_Idx].length+0-1)-0].Field1 = h_370920;
		}
		
		t_370913.last = h_370920;

	
}

function del_380859(t_380865, key_380866) {
		var n_380874 = null;
		n_380874 = new Array(chckRange((t_380865.data != null ? t_380865.data.length : 0), 0, 2147483647)); for (var i=0;i<chckRange((t_380865.data != null ? t_380865.data.length : 0), 0, 2147483647);++i) {n_380874[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		var h_381013 = t_380865.first;
		t_380865.first = -1;
		t_380865.last = -1;
		var Tmp1 = t_380865.data; t_380865.data = n_380874; n_380874 = Tmp1;		var res_381023 = 0;
		res_381023 = hash_229014(key_380866);
		if ((res_381023 == 0)) {
		res_381023 = 314159265;
		}
		
		var hc_381027 = res_381023;
		L2: do {
				L3: while (true) {
				if (!(0 <= h_381013)) break L3;
					var nxt_381184 = n_380874[chckIndx(h_381013, 0, n_380874.length+0-1)-0].Field1;
					if (is_filled_232018(n_380874[chckIndx(h_381013, 0, n_380874.length+0-1)-0].Field0)) {
					if (((n_380874[chckIndx(h_381013, 0, n_380874.length+0-1)-0].Field0 == hc_381027) && eqStrings(n_380874[chckIndx(h_381013, 0, n_380874.length+0-1)-0].Field2, key_380866))) {
					t_380865.counter = subInt(t_380865.counter, 1);
					}
					else {
						var j_381996 = subInt(-1, raw_get_known_hc_371744(t_380865, n_380874[chckIndx(h_381013, 0, n_380874.length+0-1)-0].Field2, n_380874[chckIndx(h_381013, 0, n_380874.length+0-1)-0].Field0));
						raw_insert_370907(t_380865, t_380865, "data", n_380874[chckIndx(h_381013, 0, n_380874.length+0-1)-0].Field2, n_380874[chckIndx(h_381013, 0, n_380874.length+0-1)-0].Field3, n_380874[chckIndx(h_381013, 0, n_380874.length+0-1)-0].Field0, j_381996);
					}
					
					}
					
					h_381013 = nxt_381184;
				}
		} while(false);

	
}

function len_366608(t_366613) {
	var result_366614 = 0;

		result_366614 = t_366613.counter;

	return result_366614;

}

function raw_get_367564(t_367569, key_367570, hc_367571, hc_367571_Idx) {
						var Tmp3;

	var result_367572 = 0;

	BeforeRet: do {
		hc_367571[hc_367571_Idx] = hash_229014(key_367570);
		if ((hc_367571[hc_367571_Idx] == 0)) {
		hc_367571[hc_367571_Idx] = 314159265;
		}
		
		if (((t_367569.data != null ? t_367569.data.length : 0) == 0)) {
		result_367572 = -1;
		break BeforeRet;
		}
		
		var h_367714 = (hc_367571[hc_367571_Idx] & (t_367569.data != null ? (t_367569.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_232018(t_367569.data[chckIndx(h_367714, 0, t_367569.data.length+0-1)-0].Field0)) break L2;
						if (!(t_367569.data[chckIndx(h_367714, 0, t_367569.data.length+0-1)-0].Field0 == hc_367571[hc_367571_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_367569.data[chckIndx(h_367714, 0, t_367569.data.length+0-1)-0].Field2, key_367570);						}					if (Tmp3) {
					result_367572 = h_367714;
					break BeforeRet;
					}
					
					h_367714 = next_try_232035(h_367714, (t_367569.data != null ? (t_367569.data.length-1) : -1));
				}
		} while(false);
		result_367572 = subInt(-1, h_367714);
	} while (false);

	return result_367572;

}

function has_key_367536(t_367541, key_367542) {
	var result_367543 = false;

		var hc_367544 = [0];
		result_367543 = (0 <= raw_get_367564(t_367541, key_367542, hc_367544, 0));

	return result_367543;

}

function enlarge_369767(t_369773) {
		var n_369781 = null;
		n_369781 = new Array(chckRange(mulInt((t_369773.data != null ? t_369773.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_369773.data != null ? t_369773.data.length : 0), 2), 0, 2147483647);++i) {n_369781[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		var h_369920 = t_369773.first;
		t_369773.first = -1;
		t_369773.last = -1;
		var Tmp1 = t_369773.data; t_369773.data = n_369781; n_369781 = Tmp1;		L2: do {
				L3: while (true) {
				if (!(0 <= h_369920)) break L3;
					var nxt_370086 = n_369781[chckIndx(h_369920, 0, n_369781.length+0-1)-0].Field1;
					var eh_370242 = n_369781[chckIndx(h_369920, 0, n_369781.length+0-1)-0].Field0;
					if (is_filled_232018(eh_370242)) {
					var j_370249 = (eh_370242 & (t_369773.data != null ? (t_369773.data.length-1) : -1));
					L4: do {
							L5: while (true) {
							if (!is_filled_232018(t_369773.data[chckIndx(j_370249, 0, t_369773.data.length+0-1)-0].Field0)) break L5;
								j_370249 = next_try_232035(j_370249, (t_369773.data != null ? (t_369773.data.length-1) : -1));
							}
					} while(false);
					raw_insert_370907(t_369773, t_369773, "data", n_369781[chckIndx(h_369920, 0, n_369781.length+0-1)-0].Field2, n_369781[chckIndx(h_369920, 0, n_369781.length+0-1)-0].Field3, n_369781[chckIndx(h_369920, 0, n_369781.length+0-1)-0].Field0, j_370249);
					}
					
					h_369920 = nxt_370086;
				}
		} while(false);

	
}

function HEX5BHEX5DHEX3D_368517(t_368523, key_368524, val_368525) {
		if (((t_368523.data != null ? t_368523.data.length : 0) == 0)) {
		if (!(is_power_of_two_109062(64))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_368523.counter = 0;
		t_368523.data = new Array(64); for (var i=0;i<64;++i) {t_368523.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		t_368523.first = -1;
		t_368523.last = -1;
		}
		
		var hc_369001 = [0];
		var index_369030 = raw_get_367564(t_368523, key_368524, hc_369001, 0);
		if ((0 <= index_369030)) {
		t_368523.data[chckIndx(index_369030, 0, t_368523.data.length+0-1)-0].Field3 = val_368525;
		}
		else {
			if (((t_368523.data != null ? t_368523.data.length : 0) == 0)) {
			if (!(is_power_of_two_109062(64))) {
			failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			t_368523.counter = 0;
			t_368523.data = new Array(64); for (var i=0;i<64;++i) {t_368523.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}			t_368523.first = -1;
			t_368523.last = -1;
			}
			
			if (must_rehash_232053((t_368523.data != null ? t_368523.data.length : 0), t_368523.counter)) {
			enlarge_369767(t_368523);
			index_369030 = raw_get_known_hc_371744(t_368523, key_368524, hc_369001[0]);
			}
			
			index_369030 = subInt(-1, index_369030);
			raw_insert_370907(t_368523, t_368523, "data", key_368524, val_368525, hc_369001[0], index_369030);
			t_368523.counter = addInt(t_368523.counter, 1);
		}
		

	
}

function reindex_sect_366470() {
															var Tmp10;
														var Tmp11;
														var Tmp12;
														var Tmp13;
															var Tmp15;
																		var Tmp18;
																		var Tmp19;
																		var Tmp20;
																		var Tmp21;

		var moved_366472 = true;
		L1: do {
				L2: while (true) {
				if (!moved_366472) break L2;
					moved_366472 = false;
					L3: do {
						var k_367415 = null;
						var val_367416 = null;
						var val_367416_Idx = 0;
						var l_389456 = len_366608(last_postfix_343229[0]);
						L4: do {
							var h_389458 = 0;
							var colontmp__389459 = 0;
							colontmp__389459 = (last_postfix_343229[0].data != null ? (last_postfix_343229[0].data.length-1) : -1);
							var res_389460 = 0;
							L5: do {
									L6: while (true) {
									if (!(res_389460 <= colontmp__389459)) break L6;
										h_389458 = res_389460;
										if (is_filled_232018(last_postfix_343229[0].data[chckIndx(h_389458, 0, last_postfix_343229[0].data.length+0-1)-0].Field0)) {
										k_367415 = last_postfix_343229[0].data[chckIndx(h_389458, 0, last_postfix_343229[0].data.length+0-1)-0].Field1;
										val_367416 = last_postfix_343229[0].data[chckIndx(h_389458, 0, last_postfix_343229[0].data.length+0-1)-0]; val_367416_Idx = "Field2";
										L7: do {
											var v_367423 = 0;
											var colontmp__389439 = 0;
											colontmp__389439 = val_367416[val_367416_Idx];
											var res_389444 = colontmp__389439;
											L8: do {
													L9: while (true) {
													if (!(1 <= res_389444)) break L9;
														v_367423 = res_389444;
														var from_sect_367424 = (k_367415 || []).concat(makeNimstrLit("-") || [],cstrToNimstr((v_367423)+"") || []);
														var prev_v_367425 = subInt(v_367423, 1);
														var to_sect_367426 = (k_367415 || []).concat(makeNimstrLit("-") || [],cstrToNimstr((prev_v_367425)+"") || []);
															if (!!((prev_v_367425 == 0))) Tmp10 = false; else {																Tmp10 = !(has_key_367536(all_sectors_342829[0], to_sect_367426));															}														if (Tmp10) {
														moved_366472 = true;
														HEX5BHEX5DHEX3D_368517(all_sectors_342829[0], to_sect_367426, {postalCode: null, district: null, city: null, pFix: 0, streets: {data: null, counter: 0, first: 0, last: 0}, shownOnMap: false, exclude: false});
														(Tmp11 = HEX5BHEX5D_372597(all_sectors_342829[0], to_sect_367426), Tmp11)[0][Tmp11[1]] = (Tmp12 = HEX5BHEX5D_372597(all_sectors_342829[0], from_sect_367424), Tmp12)[0][Tmp12[1]];
														(Tmp13 = HEX5BHEX5D_372597(all_sectors_342829[0], to_sect_367426), Tmp13)[0][Tmp13[1]].pFix = prev_v_367425;
														L14: do {
															var name_374325 = null;
															var m_v_374326 = null;
															var colontmp__389434 = {data: null, counter: 0, first: 0, last: 0};
															nimCopy(colontmp__389434, (Tmp15 = HEX5BHEX5D_372597(all_sectors_342829[0], from_sect_367424), Tmp15)[0][Tmp15[1]].streets, NTI341066);
															var l_389435 = len_356748(colontmp__389434);
															if ((0 < colontmp__389434.counter)) {
															var h_389436 = colontmp__389434.first;
															L16: do {
																	L17: while (true) {
																	if (!(0 <= h_389436)) break L17;
																		var nxt_389438 = colontmp__389434.data[chckIndx(h_389436, 0, colontmp__389434.data.length+0-1)-0].Field1;
																		if (is_filled_232018(colontmp__389434.data[chckIndx(h_389436, 0, colontmp__389434.data.length+0-1)-0].Field0)) {
																		name_374325 = colontmp__389434.data[chckIndx(h_389436, 0, colontmp__389434.data.length+0-1)-0].Field2;
																		m_v_374326 = colontmp__389434.data[chckIndx(h_389436, 0, colontmp__389434.data.length+0-1)-0].Field3;
																		has_key_or_put_375835((Tmp18 = HEX5BHEX5D_372597(all_sectors_342829[0], to_sect_367426), Tmp18)[0][Tmp18[1]].streets, name_374325, (Tmp19 = HEX5BHEX5D_374715(all_streets_342029[0], name_374325), Tmp19)[0][Tmp19[1]].links);
																		(Tmp20 = HEX5BHEX5D_374715(all_streets_342029[0], name_374325), Tmp20)[0][Tmp20[1]].sector = (Tmp21 = HEX5BHEX5D_372597(all_sectors_342829[0], to_sect_367426), Tmp21)[0][Tmp21[1]];
																		if (!((len_356748(colontmp__389434) == l_389435))) {
																		failed_assert_impl_60066(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
																		}
																		
																		}
																		
																		h_389436 = nxt_389438;
																	}
															} while(false);
															}
															
														} while(false);
														del_380859(all_sectors_342829[0], from_sect_367424);
														if ((v_367423 == val_367416[val_367416_Idx])) {
														val_367416[val_367416_Idx] = subInt(val_367416[val_367416_Idx], 1);
														}
														
														}
														
														res_389444 = subInt(res_389444, 1);
													}
											} while(false);
										} while(false);
										if (!((len_366608(last_postfix_343229[0]) == l_389456))) {
										failed_assert_impl_60066(makeNimstrLit("tables.nim(691, 13) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
										}
										
										}
										
										res_389460 = addInt(res_389460, 1);
									}
							} while(false);
						} while(false);
					} while(false);
				}
		} while(false);

	
}

function len_387753(t_387758) {
	var result_387759 = 0;

		result_387759 = t_387758.counter;

	return result_387759;

}

function create_dom_382568() {

		function HEX3Aanonymous_382822(ev_382824, n_382825) {
				save_360814();

			
		}

		function HEX3Aanonymous_382844(ev_382846, n_382847) {

				function HEX3Aanonymous_382850(e_382852) {
						var data_382860 = e_382852.target.result;
						var a_382865 = JSON.parse(data_382860);
						var x_382866 = a_382865;
						load_345269(x_382866);

					
				}

				var f_reader_382848 = function(){return new FileReader();}();
				f_reader_382848.addEventListener("load", HEX3Aanonymous_382850, false);
				var inp_file_383014 = ev_382846.target;
				f_reader_382848.readAsText(inp_file_383014.files[0]);

			
		}

										function clck_on_str_382571(ev_382573, n_382574) {
												var trgt_382575 = ev_382573.target;
												map.setZoom(20, true);
												map.setCenter({lat: nimCopy(null, chckRange(parseFloat(trgt_382575.getAttribute("data-lat")), -9.0000000000000000e+001, 9.0000000000000000e+001), NTI246016), lng: nimCopy(null, chckRange(parseFloat(trgt_382575.getAttribute("data-lng")), -1.8000000000000000e+002, 1.8000000000000000e+002), NTI246018), m_type: NTI246036}, false);

											
										}

						function HEX3Aanonymous_383234(ev_383236, n_383237) {
								var ev_clck_383238 = ev_383236;
								var t_383242 = ev_clck_383238.target;
								var chckd_383252 = (t_383242.checked);
								var s_n_383262 = (t_383242.value);
								t_383242.checkd = nimBoolToStr((t_383242.checked));
								if (chckd_383252) {
								display_sector_366233(cstrToNimstr(s_n_383262), true);
								}
								else {
								display_sector_366233(cstrToNimstr(s_n_383262), false);
								}
								

							
						}

						function HEX3Aanonymous_383446(ev_383448, n_383449) {
								var Tmp1;
												var Tmp5;
												var Tmp6;
												var Tmp7;
												var Tmp8;
									var Tmp9;
								var Tmp10;

								var id_383450 = cstrToNimstr(ev_383448.target.id);
								var from_sect_383451 = nsuReplaceStr(id_383450, makeNimstrLit("_"), makeNimstrLit(" "));
								var el_sel_383452 = document.querySelectorAll(toJSStr((makeNimstrLit("select[id=\'") || []).concat(id_383450 || [],makeNimstrLit("\']") || [])));
								var to_sect_383453 = cstrToNimstr(el_sel_383452[chckIndx(0, 0, el_sel_383452.length+0-1)-0].value);
								var from_sector_383615 = (Tmp1 = HEX5BHEX5D_372597(all_sectors_342829[0], from_sect_383451), Tmp1)[0][Tmp1[1]];
								L2: do {
									var name_383623 = null;
									var m_v_383624 = null;
									var colontmp__389414 = {data: null, counter: 0, first: 0, last: 0};
									nimCopy(colontmp__389414, from_sector_383615.streets, NTI341066);
									var l_389415 = len_356748(colontmp__389414);
									if ((0 < colontmp__389414.counter)) {
									var h_389416 = colontmp__389414.first;
									L3: do {
											L4: while (true) {
											if (!(0 <= h_389416)) break L4;
												var nxt_389418 = colontmp__389414.data[chckIndx(h_389416, 0, colontmp__389414.data.length+0-1)-0].Field1;
												if (is_filled_232018(colontmp__389414.data[chckIndx(h_389416, 0, colontmp__389414.data.length+0-1)-0].Field0)) {
												name_383623 = colontmp__389414.data[chckIndx(h_389416, 0, colontmp__389414.data.length+0-1)-0].Field2;
												m_v_383624 = colontmp__389414.data[chckIndx(h_389416, 0, colontmp__389414.data.length+0-1)-0].Field3;
												has_key_or_put_375835((Tmp5 = HEX5BHEX5D_372597(all_sectors_342829[0], to_sect_383453), Tmp5)[0][Tmp5[1]].streets, name_383623, (Tmp6 = HEX5BHEX5D_374715(all_streets_342029[0], name_383623), Tmp6)[0][Tmp6[1]].links);
												(Tmp7 = HEX5BHEX5D_374715(all_streets_342029[0], name_383623), Tmp7)[0][Tmp7[1]].sector = (Tmp8 = HEX5BHEX5D_372597(all_sectors_342829[0], to_sect_383453), Tmp8)[0][Tmp8[1]];
												del_384607(from_sector_383615.streets, name_383623);
												if (!((len_356748(colontmp__389414) == l_389415))) {
												failed_assert_impl_60066(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
												}
												
												}
												
												h_389416 = nxt_389418;
											}
									} while(false);
									}
									
								} while(false);
								if (!(from_sector_383615.exclude)) {
								if ((from_sector_383615.pFix == (Tmp9 = HEX5BHEX5D_343996(last_postfix_343229[0], from_sector_383615.postalCode), Tmp9)[0][Tmp9[1]])) {
								(Tmp10 = HEX5BHEX5D_343996(last_postfix_343229[0], from_sector_383615.postalCode), Tmp10)[0][Tmp10[1]] = subInt(Tmp10[0][Tmp10[1]], 1);
								}
								
								del_380859(all_sectors_342829[0], from_sect_383451);
								}
								
								reindex_sect_366470();

							
						}

	var result_382570 = null;

		var tmp_382651 = tree_302046(43, []);
		tmp_382651.class = "main-root";
		add_event_handler_321547(tmp_382651, 11, chckd_check_366237, kxi_311324[0]);
		var tmp_382657 = tree_302046(43, []);
		if (!((len_354740(all_sectors_342829[0]) == 0))) {
		var tmp_382658 = tree_302046(106, []);
		add_300786(tmp_382658, text_302164(makeNimstrLit("\xD0\xA1\xD0\xBE\xD1\x85\xD1\x80\xD0\xB0\xD0\xBD\xD0\xB8\xD1\x82\xD1\x8C")));
		add_event_handler_321547(tmp_382658, 0, HEX3Aanonymous_382822, kxi_311324[0]);
		add_300786(tmp_382657, tmp_382658);
		}
		
		var tmp_382659 = tree_302046(105, []);
		set_attr_300568(tmp_382659, "type", "file");
		set_attr_300568(tmp_382659, "name", "fileArea");
		add_event_handler_321547(tmp_382659, 8, HEX3Aanonymous_382844, kxi_311324[0]);
		add_300786(tmp_382657, tmp_382659);
		L1: do {
			var k_383055 = null;
			var v_383056 = null;
			var l_389217 = len_354740(all_sectors_342829[0]);
			if ((0 < all_sectors_342829[0].counter)) {
			var h_389218 = all_sectors_342829[0].first;
			L2: do {
					L3: while (true) {
					if (!(0 <= h_389218)) break L3;
						var nxt_389220 = all_sectors_342829[0].data[chckIndx(h_389218, 0, all_sectors_342829[0].data.length+0-1)-0].Field1;
						if (is_filled_232018(all_sectors_342829[0].data[chckIndx(h_389218, 0, all_sectors_342829[0].data.length+0-1)-0].Field0)) {
						k_383055 = all_sectors_342829[0].data[chckIndx(h_389218, 0, all_sectors_342829[0].data.length+0-1)-0].Field2;
						v_383056 = all_sectors_342829[0].data[chckIndx(h_389218, 0, all_sectors_342829[0].data.length+0-1)-0].Field3;
						var id4move_383057 = nsuReplaceStr(k_383055, makeNimstrLit(" "), makeNimstrLit("_"));
						var tmp_382660 = tree_302046(43, []);
						tmp_382660.class = "sector";
						var tmp_382661 = tree_302046(70, []);
						tmp_382661.class = "sect-name";
						add_300786(tmp_382661, text_302164(name_343796(v_383056)));
						add_300786(tmp_382660, tmp_382661);
						var tmp_382662 = tree_302046(43, []);
						tmp_382662.class = "streets";
						L4: do {
							var n_street_383077 = null;
							var links_383078 = null;
							var colontmp__389196 = {data: null, counter: 0, first: 0, last: 0};
							nimCopy(colontmp__389196, v_383056.streets, NTI341066);
							var l_389198 = len_356748(colontmp__389196);
							if ((0 < colontmp__389196.counter)) {
							var h_389199 = colontmp__389196.first;
							L5: do {
									L6: while (true) {
									if (!(0 <= h_389199)) break L6;
										var nxt_389201 = colontmp__389196.data[chckIndx(h_389199, 0, colontmp__389196.data.length+0-1)-0].Field1;
										if (is_filled_232018(colontmp__389196.data[chckIndx(h_389199, 0, colontmp__389196.data.length+0-1)-0].Field0)) {
										n_street_383077 = colontmp__389196.data[chckIndx(h_389199, 0, colontmp__389196.data.length+0-1)-0].Field2;
										links_383078 = colontmp__389196.data[chckIndx(h_389199, 0, colontmp__389196.data.length+0-1)-0].Field3;
										var coord_383079 = links_383078[chckIndx(0, 0, links_383078.length+0-1)-0].geometry[chckIndx(0, 0, links_383078[chckIndx(0, 0, links_383078.length+0-1)-0].geometry.length+0-1)-0];
										var tmp_382663 = tree_302046(43, []);
										tmp_382663.class = "street";
										var tmp_382664 = tree_302046(70, []);
										set_attr_300568(tmp_382664, "data-lat", toJSStr(cstrToNimstr((coord_383079.lat)+"")));
										set_attr_300568(tmp_382664, "data-lng", toJSStr(cstrToNimstr((coord_383079.lng)+"")));
										add_event_handler_321547(tmp_382664, 0, clck_on_str_382571, kxi_311324[0]);
										add_300786(tmp_382664, text_302164(n_street_383077));
										add_300786(tmp_382663, tmp_382664);
										add_300786(tmp_382662, tmp_382663);
										if (!((len_356748(colontmp__389196) == l_389198))) {
										failed_assert_impl_60066(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
										}
										
										}
										
										h_389199 = nxt_389201;
									}
							} while(false);
							}
							
						} while(false);
						add_300786(tmp_382660, tmp_382662);
						var tmp_382665 = tree_302046(43, []);
						tmp_382665.class = "show-sector-box";
						var tmp_382666 = tree_302046(104, []);
						set_attr_300568(tmp_382666, "for", toJSStr(k_383055));
						add_300786(tmp_382666, text_302164((makeNimstrLit("\xD0\x9F\xD0\xBE\xD0\xBA\xD0\xB0\xD0\xB7. \xD0\xBD\xD0\xB0 \xD0\xBA\xD0\xB0\xD1\x80\xD1\x82\xD0\xB5 (") || []).concat(cstrToNimstr((len_356748(v_383056.streets))+"") || [],makeNimstrLit(")") || [])));
						add_300786(tmp_382665, tmp_382666);
						var tmp_382667 = tree_302046(105, []);
						set_attr_300568(tmp_382667, "type", "checkbox");
						set_attr_300568(tmp_382667, "name", "showSector");
						tmp_382667.class = "show-sector";
						valueHEX3D_299839(tmp_382667, toJSStr(k_383055));
						tmp_382667.id = toJSStr(k_383055);
						set_attr_300568(tmp_382667, "checkd", toJSStr(nimBoolToStr(v_383056.shownOnMap)));
						add_event_handler_321547(tmp_382667, 0, HEX3Aanonymous_383234, kxi_311324[0]);
						add_300786(tmp_382665, tmp_382667);
						add_300786(tmp_382660, tmp_382665);
						var tmp_382668 = tree_302046(43, []);
						tmp_382668.class = "for-select";
						var tmp_382669 = tree_302046(107, []);
						tmp_382669.id = toJSStr(id4move_383057);
						var tmp_382670 = tree_302046(110, []);
						valueHEX3D_299839(tmp_382670, "");
						add_300786(tmp_382670, text_302164(makeNimstrLit("\xD0\x94\xD0\xB2\xD0\xB8\xD0\xBD\xD1\x83\xD1\x82\xD1\x8C \xD0\xB2\xD1\x81\xD0\xB5 \xD1\x83\xD0\xBB\xD0\xB8\xD1\x86\xD1\x8B \xD0\xB2")));
						add_300786(tmp_382669, tmp_382670);
						L7: do {
							var k_opt_383433 = null;
							var v_opt_383434 = null;
							var l_389212 = len_354740(all_sectors_342829[0]);
							if ((0 < all_sectors_342829[0].counter)) {
							var h_389213 = all_sectors_342829[0].first;
							L8: do {
									L9: while (true) {
									if (!(0 <= h_389213)) break L9;
										var nxt_389215 = all_sectors_342829[0].data[chckIndx(h_389213, 0, all_sectors_342829[0].data.length+0-1)-0].Field1;
										if (is_filled_232018(all_sectors_342829[0].data[chckIndx(h_389213, 0, all_sectors_342829[0].data.length+0-1)-0].Field0)) {
										k_opt_383433 = all_sectors_342829[0].data[chckIndx(h_389213, 0, all_sectors_342829[0].data.length+0-1)-0].Field2;
										v_opt_383434 = all_sectors_342829[0].data[chckIndx(h_389213, 0, all_sectors_342829[0].data.length+0-1)-0].Field3;
										L10: do {
											if (eqStrings(k_opt_383433, id_343824(v_383056))) {
											break L10;
											}
											
											var tmp_382671 = tree_302046(110, []);
											valueHEX3D_299839(tmp_382671, toJSStr(k_opt_383433));
											add_300786(tmp_382671, text_302164(k_opt_383433));
											add_300786(tmp_382669, tmp_382671);
										} while(false);
										if (!((len_354740(all_sectors_342829[0]) == l_389212))) {
										failed_assert_impl_60066(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
										}
										
										}
										
										h_389213 = nxt_389215;
									}
							} while(false);
							}
							
						} while(false);
						add_300786(tmp_382668, tmp_382669);
						var tmp_382672 = tree_302046(106, []);
						tmp_382672.id = toJSStr(id4move_383057);
						add_300786(tmp_382672, text_302164(makeNimstrLit("\xD0\x9E\xD0\xBA !")));
						add_event_handler_321547(tmp_382672, 0, HEX3Aanonymous_383446, kxi_311324[0]);
						add_300786(tmp_382668, tmp_382672);
						add_300786(tmp_382660, tmp_382668);
						add_300786(tmp_382657, tmp_382660);
						if (!((len_354740(all_sectors_342829[0]) == l_389217))) {
						failed_assert_impl_60066(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
						}
						
						}
						
						h_389218 = nxt_389220;
					}
			} while(false);
			}
			
		} while(false);
		L11: do {
			var k_387614 = null;
			var v_387615 = 0;
			var l_389230 = len_366608(last_postfix_343229[0]);
			L12: do {
				var h_389232 = 0;
				var colontmp__389233 = 0;
				colontmp__389233 = (last_postfix_343229[0].data != null ? (last_postfix_343229[0].data.length-1) : -1);
				var res_389234 = 0;
				L13: do {
						L14: while (true) {
						if (!(res_389234 <= colontmp__389233)) break L14;
							h_389232 = res_389234;
							if (is_filled_232018(last_postfix_343229[0].data[chckIndx(h_389232, 0, last_postfix_343229[0].data.length+0-1)-0].Field0)) {
							k_387614 = last_postfix_343229[0].data[chckIndx(h_389232, 0, last_postfix_343229[0].data.length+0-1)-0].Field1;
							v_387615 = last_postfix_343229[0].data[chckIndx(h_389232, 0, last_postfix_343229[0].data.length+0-1)-0].Field2;
							var tmp_382673 = tree_302046(43, []);
							add_300786(tmp_382673, text_302164((k_387614 || []).concat(makeNimstrLit(" : ") || [],cstrToNimstr((v_387615)+"") || [])));
							add_300786(tmp_382657, tmp_382673);
							if (!((len_366608(last_postfix_343229[0]) == l_389230))) {
							failed_assert_impl_60066(makeNimstrLit("tables.nim(669, 13) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
							}
							
							}
							
							res_389234 = addInt(res_389234, 1);
						}
				} while(false);
			} while(false);
		} while(false);
		L15: do {
			var k_388614 = null;
			var v_388615 = null;
			var l_389243 = len_387753(all_streets_342029[0]);
			if ((0 < all_streets_342029[0].counter)) {
			var h_389244 = all_streets_342029[0].first;
			L16: do {
					L17: while (true) {
					if (!(0 <= h_389244)) break L17;
						var nxt_389246 = all_streets_342029[0].data[chckIndx(h_389244, 0, all_streets_342029[0].data.length+0-1)-0].Field1;
						if (is_filled_232018(all_streets_342029[0].data[chckIndx(h_389244, 0, all_streets_342029[0].data.length+0-1)-0].Field0)) {
						k_388614 = all_streets_342029[0].data[chckIndx(h_389244, 0, all_streets_342029[0].data.length+0-1)-0].Field2;
						v_388615 = all_streets_342029[0].data[chckIndx(h_389244, 0, all_streets_342029[0].data.length+0-1)-0].Field3;
						L18: do {
							if (!((v_388615.sector == null))) {
							break L18;
							}
							
							var coord_388624 = v_388615.links[chckIndx(0, 0, v_388615.links.length+0-1)-0].geometry[chckIndx(0, 0, v_388615.links[chckIndx(0, 0, v_388615.links.length+0-1)-0].geometry.length+0-1)-0];
							var tmp_382674 = tree_302046(43, []);
							tmp_382674.class = "street";
							var tmp_382675 = tree_302046(70, []);
							set_attr_300568(tmp_382675, "data-lat", toJSStr(cstrToNimstr((coord_388624.lat)+"")));
							set_attr_300568(tmp_382675, "data-lng", toJSStr(cstrToNimstr((coord_388624.lng)+"")));
							add_event_handler_321547(tmp_382675, 0, clck_on_str_382571, kxi_311324[0]);
							add_300786(tmp_382675, text_302164(k_388614));
							add_300786(tmp_382674, tmp_382675);
							add_300786(tmp_382657, tmp_382674);
						} while(false);
						if (!((len_387753(all_streets_342029[0]) == l_389243))) {
						failed_assert_impl_60066(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
						}
						
						}
						
						h_389244 = nxt_389246;
					}
			} while(false);
			}
			
		} while(false);
		add_300786(tmp_382651, tmp_382657);
		result_382570 = tmp_382651;

	return result_382570;

}
var Tmp2;
var Tmp3;
var Tmp4;
var Tmp5;
var loc_search_388707 = [cstrToNimstr((window.location.search))];
loc_search_388707[0] = nimCopy(null, nsuReplaceStr(loc_search_388707[0], makeNimstrLit("?"), []), NTI45040);
var arr_ls_388708 = nsuSplitString(loc_search_388707[0], makeNimstrLit("&"), -1);
var app_id_388709 = nimCopy(null, (Tmp2 = nsuSplitString(arr_ls_388708[0], makeNimstrLit("="), -1), Tmp2)[1], NTI45040);
var app_code_388710 = nimCopy(null, (Tmp3 = nsuSplitString(arr_ls_388708[1], makeNimstrLit("="), -1), Tmp3)[1], NTI45040);
var opts_388712 = {app_id: toJSStr(app_id_388709), app_code: toJSStr(app_code_388710), useHTTPS: true, m_type: NTI325030, useCIT: false};
var pixel_ratio_388713 = window.devicePixelRatio;
var hidpi_388714 = (1.0000000000000000e+000 < pixel_ratio_388713);
if (hidpi_388714) {
Tmp4 = 512;
}
else {
Tmp4 = 256;
}

var layer_opts_388717 = [{tileSize: Tmp4, pois: true, m_type: NTI329081, ppi: 0, lg: null, lg2: null, style: null, crossOrigin: null}];
if (hidpi_388714) {
layer_opts_388717[0].ppi = 320;
}

var platform_388719 = function(o){return new H.service.Platform(o)}(opts_388712);
var def_layers_388720 = platform_388719.createDefaultLayers(layer_opts_388717[0]);
if (hidpi_388714) {
Tmp5 = 2;
}
else {
Tmp5 = 1;
}

var map_opts_388723 = [{pixelRatio: Tmp5, noWrap: true, m_type: NTI334035}];
map = function(element, baseLayer, opt_options){return new H.Map(element, baseLayer, opt_options)}(document.getElementById("map"), def_layers_388720.normal.map, map_opts_388723[0]);
var map_evts_388730 = function(map){return new H.mapevents.MapEvents(map)}(map);
var behavior = function(mapE){return new H.mapevents.Behavior(mapE)}(map_evts_388730);
var ui_def_388732 = [function(map, mapTypes){return H.ui.UI.createDefault(map, mapTypes);}(map, def_layers_388720)];
set_renderer_321400(create_dom_382568, "main-control-container", null);
map.setZoom(9, true);
map.setCenter({lat: 5.0151851800000003e+001, lng: 8.9302924000000008e+000, m_type: NTI246036}, false);
var main_group_388734 = [function(){return new H.map.Group()}()];
var main_sector_group_388735 = [function(){return new H.map.Group()}()];
main_group_388734[0].setZIndex(99);
map.addObject(main_group_388734[0]);
map.addObject(main_sector_group_388735[0]);
var mrk_388748 = function(position){return new H.map.Marker(position)}({lat: 5.2000000000000000e+001, lng: 8.0000000000000000e+000, m_type: NTI246036});
var p_388750 = {lat: 3.4000000000000000e+001, lng: 1.2300000000000000e+002, m_type: NTI246036};
var scr_point_388751 = function(x,y){return new H.math.Point(x, y)}(1, 1);
var check_388754 = isPointInPolygon(scr_point_388751, [function(x,y){return new H.math.Point(x, y)}(0, 0), function(x,y){return new H.math.Point(x, y)}(0, 3), function(x,y){return new H.math.Point(x, y)}(3, 3)]);
rawEcho(makeNimstrLit("check: "), nimBoolToStr(check_388754));
var cle_388758 = platform_388719.getCustomLocationService();
var geocoder_388759 = platform_388719.getGeocodingService();
var pde_service_388760 = [platform_388719.getPlatformDataService()];
map.addObject(mv_street_grp_343230[0]);
var str_ggeo_point_445480 = [new_seq_85233(0)];

function len_347215(t_347220) {
	var result_347221 = 0;

		result_347221 = t_347220.counter;

	return result_347221;

}

function len_433146(t_433151) {
	var result_433152 = 0;

		result_433152 = t_433151.counter;

	return result_433152;

}

function hash_227826(x_227828) {
	var result_227829 = 0;

		result_227829 = x_227828;

	return result_227829;

}

function raw_get_398147(t_398151, key_398152, hc_398153, hc_398153_Idx) {
						var Tmp3;

	var result_398154 = 0;

	BeforeRet: do {
		hc_398153[hc_398153_Idx] = hash_227826(key_398152);
		if ((hc_398153[hc_398153_Idx] == 0)) {
		hc_398153[hc_398153_Idx] = 314159265;
		}
		
		if (((t_398151.data != null ? t_398151.data.length : 0) == 0)) {
		result_398154 = -1;
		break BeforeRet;
		}
		
		var h_398294 = (hc_398153[hc_398153_Idx] & (t_398151.data != null ? (t_398151.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_232018(t_398151.data[chckIndx(h_398294, 0, t_398151.data.length+0-1)-0].Field0)) break L2;
						if (!(t_398151.data[chckIndx(h_398294, 0, t_398151.data.length+0-1)-0].Field0 == hc_398153[hc_398153_Idx])) Tmp3 = false; else {							Tmp3 = (t_398151.data[chckIndx(h_398294, 0, t_398151.data.length+0-1)-0].Field1 == key_398152);						}					if (Tmp3) {
					result_398154 = h_398294;
					break BeforeRet;
					}
					
					h_398294 = next_try_232035(h_398294, (t_398151.data != null ? (t_398151.data.length-1) : -1));
				}
		} while(false);
		result_398154 = subInt(-1, h_398294);
	} while (false);

	return result_398154;

}

function raw_insert_411722(t_411728, data_411731, data_411731_Idx, key_411732, val_411733, hc_411734, h_411735) {
		data_411731[data_411731_Idx][chckIndx(h_411735, 0, data_411731[data_411731_Idx].length+0-1)-0].Field1 = key_411732;
		data_411731[data_411731_Idx][chckIndx(h_411735, 0, data_411731[data_411731_Idx].length+0-1)-0].Field2 = val_411733;
		data_411731[data_411731_Idx][chckIndx(h_411735, 0, data_411731[data_411731_Idx].length+0-1)-0].Field0 = hc_411734;

	
}

function enlarge_410748(t_410754) {
		var n_410762 = null;
		n_410762 = new Array(chckRange(mulInt((t_410754.data != null ? t_410754.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_410754.data != null ? t_410754.data.length : 0), 2), 0, 2147483647);++i) {n_410762[i]={Field0: 0, Field1: 0, Field2: null};}		var Tmp1 = t_410754.data; t_410754.data = n_410762; n_410762 = Tmp1;		L2: do {
			var i_410921 = 0;
			var colontmp__446588 = 0;
			colontmp__446588 = (n_410762 != null ? (n_410762.length-1) : -1);
			var res_446589 = 0;
			L3: do {
					L4: while (true) {
					if (!(res_446589 <= colontmp__446588)) break L4;
						i_410921 = res_446589;
						var eh_411077 = n_410762[chckIndx(i_410921, 0, n_410762.length+0-1)-0].Field0;
						if (is_filled_232018(eh_411077)) {
						var j_411084 = (eh_411077 & (t_410754.data != null ? (t_410754.data.length-1) : -1));
						L5: do {
								L6: while (true) {
								if (!is_filled_232018(t_410754.data[chckIndx(j_411084, 0, t_410754.data.length+0-1)-0].Field0)) break L6;
									j_411084 = next_try_232035(j_411084, (t_410754.data != null ? (t_410754.data.length-1) : -1));
								}
						} while(false);
						raw_insert_411722(t_410754, t_410754, "data", n_410762[chckIndx(i_410921, 0, n_410762.length+0-1)-0].Field1, n_410762[chckIndx(i_410921, 0, n_410762.length+0-1)-0].Field2, eh_411077, j_411084);
						}
						
						res_446589 = addInt(res_446589, 1);
					}
			} while(false);
		} while(false);

	
}

function raw_get_known_hc_412228(t_412232, key_412233, hc_412234) {
	var result_412235 = 0;

	BeforeRet: do {
		if (((t_412232.data != null ? t_412232.data.length : 0) == 0)) {
		result_412235 = -1;
		break BeforeRet;
		}
		
		var h_412374 = (hc_412234 & (t_412232.data != null ? (t_412232.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_232018(t_412232.data[chckIndx(h_412374, 0, t_412232.data.length+0-1)-0].Field0)) break L2;
					if (((t_412232.data[chckIndx(h_412374, 0, t_412232.data.length+0-1)-0].Field0 == hc_412234) && (t_412232.data[chckIndx(h_412374, 0, t_412232.data.length+0-1)-0].Field1 == key_412233))) {
					result_412235 = h_412374;
					break BeforeRet;
					}
					
					h_412374 = next_try_232035(h_412374, (t_412232.data != null ? (t_412232.data.length-1) : -1));
				}
		} while(false);
		result_412235 = subInt(-1, h_412374);
	} while (false);

	return result_412235;

}

function has_key_or_put_409494(t_409500, key_409501, val_409502) {
	var result_409503 = false;

		if (((t_409500.data != null ? t_409500.data.length : 0) == 0)) {
		if (!(is_power_of_two_109062(64))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_409500.counter = 0;
		t_409500.data = new Array(64); for (var i=0;i<64;++i) {t_409500.data[i]={Field0: 0, Field1: 0, Field2: null};}		}
		
		var hc_410001 = [0];
		var index_410010 = raw_get_398147(t_409500, key_409501, hc_410001, 0);
		if ((index_410010 < 0)) {
		result_409503 = false;
		if (((t_409500.data != null ? t_409500.data.length : 0) == 0)) {
		if (!(is_power_of_two_109062(64))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_409500.counter = 0;
		t_409500.data = new Array(64); for (var i=0;i<64;++i) {t_409500.data[i]={Field0: 0, Field1: 0, Field2: null};}		}
		
		if (must_rehash_232053((t_409500.data != null ? t_409500.data.length : 0), t_409500.counter)) {
		enlarge_410748(t_409500);
		index_410010 = raw_get_known_hc_412228(t_409500, key_409501, hc_410001[0]);
		}
		
		index_410010 = subInt(-1, index_410010);
		raw_insert_411722(t_409500, t_409500, "data", key_409501, val_409502, hc_410001[0], index_410010);
		t_409500.counter = addInt(t_409500.counter, 1);
		}
		else {
			result_409503 = true;
		}
		

	return result_409503;

}

function HEX5BHEX5D_398946(t_398952, key_398953) {
	var result_398955 = null;
	var result_398955_Idx = 0;

		var hc_398956 = [0];
		var index_398957 = raw_get_398147(t_398952, key_398953, hc_398956, 0);
		if ((0 <= index_398957)) {
		result_398955 = t_398952.data[chckIndx(index_398957, 0, t_398952.data.length+0-1)-0]; result_398955_Idx = "Field2";
		}
		else {
			var e_399202 = null;
			e_399202 = {m_type: NTI48454, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			e_399202.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(cstrToNimstr((key_398953)+"") || []), NTI45040);
			e_399202.parent = null;
			raiseException(e_399202, "KeyError");
		}
		

	return [result_398955, result_398955_Idx];

}

function nsuStrip(s_205277, leading_205278, trailing_205279, chars_205281) {
					var Tmp5;

	var result_205282 = null;

		var first_205284 = 0;
		var last_205285 = subInt((s_205277 != null ? s_205277.length : 0), 1);
		if (leading_205278) {
		L1: do {
				L2: while (true) {
				if (!((first_205284 <= last_205285) && (chars_205281[s_205277[chckIndx(first_205284, 0, s_205277.length+0-1)-0]] != undefined))) break L2;
					first_205284 = addInt(first_205284, 1);
				}
		} while(false);
		}
		
		if (trailing_205279) {
		L3: do {
				L4: while (true) {
					if (!(0 <= last_205285)) Tmp5 = false; else {						Tmp5 = (chars_205281[s_205277[chckIndx(last_205285, 0, s_205277.length+0-1)-0]] != undefined);					}				if (!Tmp5) break L4;
					last_205285 = subInt(last_205285, 1);
				}
		} while(false);
		}
		
		result_205282 = nimCopy(null, substr_75222(s_205277, first_205284, last_205285), NTI45040);

	return result_205282;

}

function new_seq_414381(len_414384) {
	var result_414386 = null;

		result_414386 = new Array(len_414384); for (var i=0;i<len_414384;++i) {result_414386[i]=null;}
	return result_414386;

}

function map_415621(s_415626, op_415629) {
	var result_415631 = null;

		result_415631 = new Array(chckRange((s_415626 != null ? s_415626.length : 0), 0, 2147483647)); for (var i=0;i<chckRange((s_415626 != null ? s_415626.length : 0), 0, 2147483647);++i) {result_415631[i]=0;}		L1: do {
			var i_415654 = 0;
			var colontmp__446598 = 0;
			colontmp__446598 = (s_415626 != null ? s_415626.length : 0);
			var i_446599 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_446599 < colontmp__446598)) break L3;
						i_415654 = i_446599;
						result_415631[chckIndx(i_415654, 0, result_415631.length+0-1)-0] = op_415629(s_415626[chckIndx(i_415654, 0, s_415626.length+0-1)-0]);
						i_446599 = addInt(i_446599, 1);
					}
			} while(false);
		} while(false);

	return result_415631;

}

function new_seq_415683(len_415686) {
	var result_415688 = null;

		result_415688 = new Array(len_415686); for (var i=0;i<len_415686;++i) {result_415688[i]=0;}
	return result_415688;

}

function concat_415910(seqs_415915) {
	var result_415917 = null;

		var l_415919 = 0;
		L1: do {
			var seqitm_415950 = null;
			var i_446604 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_446604 < (seqs_415915 != null ? seqs_415915.length : 0))) break L3;
						seqitm_415950 = seqs_415915[chckIndx(i_446604, 0, seqs_415915.length+0-1)-0];
						l_415919 = addInt(l_415919, (seqitm_415950 != null ? seqitm_415950.length : 0));
						i_446604 = addInt(i_446604, 1);
					}
			} while(false);
		} while(false);
		result_415917 = new Array(chckRange(l_415919, 0, 2147483647)); for (var i=0;i<chckRange(l_415919, 0, 2147483647);++i) {result_415917[i]=0;}		var i_415970 = 0;
		L4: do {
			var s_415976 = null;
			var i_446612 = 0;
			L5: do {
					L6: while (true) {
					if (!(i_446612 < (seqs_415915 != null ? seqs_415915.length : 0))) break L6;
						s_415976 = seqs_415915[chckIndx(i_446612, 0, seqs_415915.length+0-1)-0];
						L7: do {
							var itm_415983 = 0;
							var i_446609 = 0;
							var l_446610 = (s_415976 != null ? s_415976.length : 0);
							L8: do {
									L9: while (true) {
									if (!(i_446609 < l_446610)) break L9;
										itm_415983 = s_415976[chckIndx(i_446609, 0, s_415976.length+0-1)-0];
										result_415917[chckIndx(i_415970, 0, result_415917.length+0-1)-0] = itm_415983;
										i_415970 = addInt(i_415970, 1);
										i_446609 = addInt(i_446609, 1);
										if (!(((s_415976 != null ? s_415976.length : 0) == l_446610))) {
										failed_assert_impl_60066(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						i_446612 = addInt(i_446612, 1);
					}
			} while(false);
		} while(false);

	return result_415917;

}

function raw_get_394338(t_394343, key_394344, hc_394345, hc_394345_Idx) {
						var Tmp3;

	var result_394346 = 0;

	BeforeRet: do {
		hc_394345[hc_394345_Idx] = hash_229014(key_394344);
		if ((hc_394345[hc_394345_Idx] == 0)) {
		hc_394345[hc_394345_Idx] = 314159265;
		}
		
		if (((t_394343.data != null ? t_394343.data.length : 0) == 0)) {
		result_394346 = -1;
		break BeforeRet;
		}
		
		var h_394488 = (hc_394345[hc_394345_Idx] & (t_394343.data != null ? (t_394343.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_232018(t_394343.data[chckIndx(h_394488, 0, t_394343.data.length+0-1)-0].Field0)) break L2;
						if (!(t_394343.data[chckIndx(h_394488, 0, t_394343.data.length+0-1)-0].Field0 == hc_394345[hc_394345_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_394343.data[chckIndx(h_394488, 0, t_394343.data.length+0-1)-0].Field2, key_394344);						}					if (Tmp3) {
					result_394346 = h_394488;
					break BeforeRet;
					}
					
					h_394488 = next_try_232035(h_394488, (t_394343.data != null ? (t_394343.data.length-1) : -1));
				}
		} while(false);
		result_394346 = subInt(-1, h_394488);
	} while (false);

	return result_394346;

}

function raw_insert_418907(t_418913, data_418916, data_418916_Idx, key_418917, val_418918, hc_418919, h_418920) {
		data_418916[data_418916_Idx][chckIndx(h_418920, 0, data_418916[data_418916_Idx].length+0-1)-0].Field2 = nimCopy(null, key_418917, NTI45040);
		data_418916[data_418916_Idx][chckIndx(h_418920, 0, data_418916[data_418916_Idx].length+0-1)-0].Field3 = val_418918;
		data_418916[data_418916_Idx][chckIndx(h_418920, 0, data_418916[data_418916_Idx].length+0-1)-0].Field0 = hc_418919;
		data_418916[data_418916_Idx][chckIndx(h_418920, 0, data_418916[data_418916_Idx].length+0-1)-0].Field1 = -1;
		if ((t_418913.first < 0)) {
		t_418913.first = h_418920;
		}
		
		if ((0 <= t_418913.last)) {
		data_418916[data_418916_Idx][chckIndx(t_418913.last, 0, data_418916[data_418916_Idx].length+0-1)-0].Field1 = h_418920;
		}
		
		t_418913.last = h_418920;

	
}

function enlarge_417767(t_417773) {
		var n_417781 = null;
		n_417781 = new Array(chckRange(mulInt((t_417773.data != null ? t_417773.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_417773.data != null ? t_417773.data.length : 0), 2), 0, 2147483647);++i) {n_417781[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		var h_417920 = t_417773.first;
		t_417773.first = -1;
		t_417773.last = -1;
		var Tmp1 = t_417773.data; t_417773.data = n_417781; n_417781 = Tmp1;		L2: do {
				L3: while (true) {
				if (!(0 <= h_417920)) break L3;
					var nxt_418086 = n_417781[chckIndx(h_417920, 0, n_417781.length+0-1)-0].Field1;
					var eh_418242 = n_417781[chckIndx(h_417920, 0, n_417781.length+0-1)-0].Field0;
					if (is_filled_232018(eh_418242)) {
					var j_418249 = (eh_418242 & (t_417773.data != null ? (t_417773.data.length-1) : -1));
					L4: do {
							L5: while (true) {
							if (!is_filled_232018(t_417773.data[chckIndx(j_418249, 0, t_417773.data.length+0-1)-0].Field0)) break L5;
								j_418249 = next_try_232035(j_418249, (t_417773.data != null ? (t_417773.data.length-1) : -1));
							}
					} while(false);
					raw_insert_418907(t_417773, t_417773, "data", n_417781[chckIndx(h_417920, 0, n_417781.length+0-1)-0].Field2, n_417781[chckIndx(h_417920, 0, n_417781.length+0-1)-0].Field3, n_417781[chckIndx(h_417920, 0, n_417781.length+0-1)-0].Field0, j_418249);
					}
					
					h_417920 = nxt_418086;
				}
		} while(false);

	
}

function raw_get_known_hc_419744(t_419749, key_419750, hc_419751) {
	var result_419752 = 0;

	BeforeRet: do {
		if (((t_419749.data != null ? t_419749.data.length : 0) == 0)) {
		result_419752 = -1;
		break BeforeRet;
		}
		
		var h_419891 = (hc_419751 & (t_419749.data != null ? (t_419749.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_232018(t_419749.data[chckIndx(h_419891, 0, t_419749.data.length+0-1)-0].Field0)) break L2;
					if (((t_419749.data[chckIndx(h_419891, 0, t_419749.data.length+0-1)-0].Field0 == hc_419751) && eqStrings(t_419749.data[chckIndx(h_419891, 0, t_419749.data.length+0-1)-0].Field2, key_419750))) {
					result_419752 = h_419891;
					break BeforeRet;
					}
					
					h_419891 = next_try_232035(h_419891, (t_419749.data != null ? (t_419749.data.length-1) : -1));
				}
		} while(false);
		result_419752 = subInt(-1, h_419891);
	} while (false);

	return result_419752;

}

function has_key_or_put_416443(t_416449, key_416450, val_416451) {
	var result_416452 = false;

		if (((t_416449.data != null ? t_416449.data.length : 0) == 0)) {
		if (!(is_power_of_two_109062(64))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_416449.counter = 0;
		t_416449.data = new Array(64); for (var i=0;i<64;++i) {t_416449.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		t_416449.first = -1;
		t_416449.last = -1;
		}
		
		var hc_417001 = [0];
		var index_417030 = raw_get_394338(t_416449, key_416450, hc_417001, 0);
		if ((index_417030 < 0)) {
		result_416452 = false;
		if (((t_416449.data != null ? t_416449.data.length : 0) == 0)) {
		if (!(is_power_of_two_109062(64))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_416449.counter = 0;
		t_416449.data = new Array(64); for (var i=0;i<64;++i) {t_416449.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		t_416449.first = -1;
		t_416449.last = -1;
		}
		
		if (must_rehash_232053((t_416449.data != null ? t_416449.data.length : 0), t_416449.counter)) {
		enlarge_417767(t_416449);
		index_417030 = raw_get_known_hc_419744(t_416449, key_416450, hc_417001[0]);
		}
		
		index_417030 = subInt(-1, index_417030);
		raw_insert_418907(t_416449, t_416449, "data", key_416450, val_416451, hc_417001[0], index_417030);
		t_416449.counter = addInt(t_416449.counter, 1);
		}
		else {
			result_416452 = true;
		}
		

	return result_416452;

}

function new_seq_416416(len_416419) {
	var result_416421 = null;

		result_416421 = new Array(len_416419); for (var i=0;i<len_416419;++i) {result_416421[i]=null;}
	return result_416421;

}

function raw_get_421402(t_421406, key_421407, hc_421408, hc_421408_Idx) {
						var Tmp3;

	var result_421409 = 0;

	BeforeRet: do {
		hc_421408[hc_421408_Idx] = hash_229014(key_421407);
		if ((hc_421408[hc_421408_Idx] == 0)) {
		hc_421408[hc_421408_Idx] = 314159265;
		}
		
		if (((t_421406.data != null ? t_421406.data.length : 0) == 0)) {
		result_421409 = -1;
		break BeforeRet;
		}
		
		var h_421551 = (hc_421408[hc_421408_Idx] & (t_421406.data != null ? (t_421406.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_232018(t_421406.data[chckIndx(h_421551, 0, t_421406.data.length+0-1)-0].Field0)) break L2;
						if (!(t_421406.data[chckIndx(h_421551, 0, t_421406.data.length+0-1)-0].Field0 == hc_421408[hc_421408_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_421406.data[chckIndx(h_421551, 0, t_421406.data.length+0-1)-0].Field1, key_421407);						}					if (Tmp3) {
					result_421409 = h_421551;
					break BeforeRet;
					}
					
					h_421551 = next_try_232035(h_421551, (t_421406.data != null ? (t_421406.data.length-1) : -1));
				}
		} while(false);
		result_421409 = subInt(-1, h_421551);
	} while (false);

	return result_421409;

}

function raw_insert_423722(t_423728, data_423731, data_423731_Idx, key_423732, val_423733, hc_423734, h_423735) {
		data_423731[data_423731_Idx][chckIndx(h_423735, 0, data_423731[data_423731_Idx].length+0-1)-0].Field1 = nimCopy(null, key_423732, NTI45040);
		data_423731[data_423731_Idx][chckIndx(h_423735, 0, data_423731[data_423731_Idx].length+0-1)-0].Field2 = val_423733;
		data_423731[data_423731_Idx][chckIndx(h_423735, 0, data_423731[data_423731_Idx].length+0-1)-0].Field0 = hc_423734;

	
}

function enlarge_422748(t_422754) {
		var n_422762 = null;
		n_422762 = new Array(chckRange(mulInt((t_422754.data != null ? t_422754.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_422754.data != null ? t_422754.data.length : 0), 2), 0, 2147483647);++i) {n_422762[i]={Field0: 0, Field1: null, Field2: null};}		var Tmp1 = t_422754.data; t_422754.data = n_422762; n_422762 = Tmp1;		L2: do {
			var i_422921 = 0;
			var colontmp__446621 = 0;
			colontmp__446621 = (n_422762 != null ? (n_422762.length-1) : -1);
			var res_446622 = 0;
			L3: do {
					L4: while (true) {
					if (!(res_446622 <= colontmp__446621)) break L4;
						i_422921 = res_446622;
						var eh_423077 = n_422762[chckIndx(i_422921, 0, n_422762.length+0-1)-0].Field0;
						if (is_filled_232018(eh_423077)) {
						var j_423084 = (eh_423077 & (t_422754.data != null ? (t_422754.data.length-1) : -1));
						L5: do {
								L6: while (true) {
								if (!is_filled_232018(t_422754.data[chckIndx(j_423084, 0, t_422754.data.length+0-1)-0].Field0)) break L6;
									j_423084 = next_try_232035(j_423084, (t_422754.data != null ? (t_422754.data.length-1) : -1));
								}
						} while(false);
						raw_insert_423722(t_422754, t_422754, "data", n_422762[chckIndx(i_422921, 0, n_422762.length+0-1)-0].Field1, n_422762[chckIndx(i_422921, 0, n_422762.length+0-1)-0].Field2, eh_423077, j_423084);
						}
						
						res_446622 = addInt(res_446622, 1);
					}
			} while(false);
		} while(false);

	
}

function raw_get_known_hc_424228(t_424232, key_424233, hc_424234) {
	var result_424235 = 0;

	BeforeRet: do {
		if (((t_424232.data != null ? t_424232.data.length : 0) == 0)) {
		result_424235 = -1;
		break BeforeRet;
		}
		
		var h_424374 = (hc_424234 & (t_424232.data != null ? (t_424232.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_232018(t_424232.data[chckIndx(h_424374, 0, t_424232.data.length+0-1)-0].Field0)) break L2;
					if (((t_424232.data[chckIndx(h_424374, 0, t_424232.data.length+0-1)-0].Field0 == hc_424234) && eqStrings(t_424232.data[chckIndx(h_424374, 0, t_424232.data.length+0-1)-0].Field1, key_424233))) {
					result_424235 = h_424374;
					break BeforeRet;
					}
					
					h_424374 = next_try_232035(h_424374, (t_424232.data != null ? (t_424232.data.length-1) : -1));
				}
		} while(false);
		result_424235 = subInt(-1, h_424374);
	} while (false);

	return result_424235;

}

function has_key_or_put_420851(t_420857, key_420858, val_420859) {
	var result_420860 = false;

		if (((t_420857.data != null ? t_420857.data.length : 0) == 0)) {
		if (!(is_power_of_two_109062(64))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_420857.counter = 0;
		t_420857.data = new Array(64); for (var i=0;i<64;++i) {t_420857.data[i]={Field0: 0, Field1: null, Field2: null};}		}
		
		var hc_421401 = [0];
		var index_422040 = raw_get_421402(t_420857, key_420858, hc_421401, 0);
		if ((index_422040 < 0)) {
		result_420860 = false;
		if (((t_420857.data != null ? t_420857.data.length : 0) == 0)) {
		if (!(is_power_of_two_109062(64))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_420857.counter = 0;
		t_420857.data = new Array(64); for (var i=0;i<64;++i) {t_420857.data[i]={Field0: 0, Field1: null, Field2: null};}		}
		
		if (must_rehash_232053((t_420857.data != null ? t_420857.data.length : 0), t_420857.counter)) {
		enlarge_422748(t_420857);
		index_422040 = raw_get_known_hc_424228(t_420857, key_420858, hc_421401[0]);
		}
		
		index_422040 = subInt(-1, index_422040);
		raw_insert_423722(t_420857, t_420857, "data", key_420858, val_420859, hc_421401[0], index_422040);
		t_420857.counter = addInt(t_420857.counter, 1);
		}
		else {
			result_420860 = true;
		}
		

	return result_420860;

}

function HEX2A_99019(x_99021, order_99022) {
	var result_99023 = 0;

		var y_99028 = subInt(order_99022, 1);
		result_99023 = subInt((x_99021 ^ y_99028), y_99028);

	return result_99023;

}

function sort_425113(t_425119, cmp_425129, order_425130) {
											var Tmp9;
												var Tmp10;

	BeforeRet: do {
		var list_425131 = t_425119.first;
		var p_425132 = 0;
		var q_425133 = 0;
		var e_425134 = 0;
		var tail_425135 = 0;
		var oldhead_425136 = 0;
		var nmerges_425137 = 0;
		var psize_425138 = 0;
		var qsize_425139 = 0;
		var i_425140 = 0;
		if ((t_425119.counter == 0)) {
		break BeforeRet;
		}
		
		var insize_425142 = 1;
		L1: do {
				L2: while (true) {
				if (!true) break L2;
					p_425132 = list_425131;
					oldhead_425136 = list_425131;
					list_425131 = -1;
					tail_425135 = -1;
					nmerges_425137 = 0;
					L3: do {
							L4: while (true) {
							if (!(0 <= p_425132)) break L4;
								nmerges_425137 = addInt(nmerges_425137, 1);
								q_425133 = p_425132;
								psize_425138 = 0;
								i_425140 = 0;
								L5: do {
										L6: while (true) {
										if (!(i_425140 < insize_425142)) break L6;
											psize_425138 = addInt(psize_425138, 1);
											q_425133 = t_425119.data[chckIndx(q_425133, 0, t_425119.data.length+0-1)-0].Field1;
											if ((q_425133 < 0)) {
											break L5;
											}
											
											i_425140 = addInt(i_425140, 1);
										}
								} while(false);
								qsize_425139 = insize_425142;
								L7: do {
										L8: while (true) {
											if ((0 < psize_425138)) Tmp9 = true; else {												if (!(0 < qsize_425139)) Tmp10 = false; else {													Tmp10 = (0 <= q_425133);												}												Tmp9 = Tmp10;											}										if (!Tmp9) break L8;
											if ((psize_425138 == 0)) {
											e_425134 = q_425133;
											q_425133 = t_425119.data[chckIndx(q_425133, 0, t_425119.data.length+0-1)-0].Field1;
											qsize_425139 = subInt(qsize_425139, 1);
											}
											else {
											if (((qsize_425139 == 0) || (q_425133 < 0))) {
											e_425134 = p_425132;
											p_425132 = t_425119.data[chckIndx(p_425132, 0, t_425119.data.length+0-1)-0].Field1;
											psize_425138 = subInt(psize_425138, 1);
											}
											else {
											if ((HEX2A_99019(cmp_425129({Field0: nimCopy(null, t_425119.data[chckIndx(p_425132, 0, t_425119.data.length+0-1)-0].Field2, NTI45040), Field1: t_425119.data[chckIndx(p_425132, 0, t_425119.data.length+0-1)-0].Field3}, {Field0: nimCopy(null, t_425119.data[chckIndx(q_425133, 0, t_425119.data.length+0-1)-0].Field2, NTI45040), Field1: t_425119.data[chckIndx(q_425133, 0, t_425119.data.length+0-1)-0].Field3}), order_425130) <= 0)) {
											e_425134 = p_425132;
											p_425132 = t_425119.data[chckIndx(p_425132, 0, t_425119.data.length+0-1)-0].Field1;
											psize_425138 = subInt(psize_425138, 1);
											}
											else {
												e_425134 = q_425133;
												q_425133 = t_425119.data[chckIndx(q_425133, 0, t_425119.data.length+0-1)-0].Field1;
												qsize_425139 = subInt(qsize_425139, 1);
											}
											}}
											if ((0 <= tail_425135)) {
											t_425119.data[chckIndx(tail_425135, 0, t_425119.data.length+0-1)-0].Field1 = e_425134;
											}
											else {
												list_425131 = e_425134;
											}
											
											tail_425135 = e_425134;
										}
								} while(false);
								p_425132 = q_425133;
							}
					} while(false);
					t_425119.data[chckIndx(tail_425135, 0, t_425119.data.length+0-1)-0].Field1 = -1;
					if ((nmerges_425137 <= 1)) {
					break L1;
					}
					
					insize_425142 = mulInt(insize_425142, 2);
				}
		} while(false);
		t_425119.first = list_425131;
		t_425119.last = tail_425135;
	} while (false);

	
}

function sort_street_tbl_425044(x_425049, y_425051) {
		var Tmp1;
			var Tmp2;

	var result_425052 = 0;

		var k_x_425053 = nimCopy(null, x_425049["Field0"], NTI45040);
		var k_y_425054 = nimCopy(null, y_425051["Field0"], NTI45040);
			if ((cmpStrings(k_y_425054, k_x_425053) < 0)) Tmp2 = true; else {				Tmp2 = eqStrings(k_x_425053, k_y_425054);			}		if (Tmp2) {
		Tmp1 = 1;
		}
		else {
		Tmp1 = -1;
		}
		
		result_425052 = Tmp1;

	return result_425052;

}

function has_key_394310(t_394315, key_394316) {
	var result_394317 = false;

		var hc_394318 = [0];
		result_394317 = (0 <= raw_get_394338(t_394315, key_394316, hc_394318, 0));

	return result_394317;

}

function has_key_or_put_395418(t_395424, key_395425, val_395426) {
	var result_395427 = false;

		if (((t_395424.data != null ? t_395424.data.length : 0) == 0)) {
		if (!(is_power_of_two_109062(64))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_395424.counter = 0;
		t_395424.data = new Array(64); for (var i=0;i<64;++i) {t_395424.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		t_395424.first = -1;
		t_395424.last = -1;
		}
		
		var hc_396001 = [0];
		var index_396030 = raw_get_367564(t_395424, key_395425, hc_396001, 0);
		if ((index_396030 < 0)) {
		result_395427 = false;
		if (((t_395424.data != null ? t_395424.data.length : 0) == 0)) {
		if (!(is_power_of_two_109062(64))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_395424.counter = 0;
		t_395424.data = new Array(64); for (var i=0;i<64;++i) {t_395424.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		t_395424.first = -1;
		t_395424.last = -1;
		}
		
		if (must_rehash_232053((t_395424.data != null ? t_395424.data.length : 0), t_395424.counter)) {
		enlarge_369767(t_395424);
		index_396030 = raw_get_known_hc_371744(t_395424, key_395425, hc_396001[0]);
		}
		
		index_396030 = subInt(-1, index_396030);
		raw_insert_370907(t_395424, t_395424, "data", key_395425, val_395426, hc_396001[0], index_396030);
		t_395424.counter = addInt(t_395424.counter, 1);
		}
		else {
			result_395427 = true;
		}
		

	return result_395427;

}

function init_ordered_table_390007(initial_size_390011) {
	var result_390013 = {data: null, counter: 0, first: 0, last: 0};

		if (!(is_power_of_two_109062(initial_size_390011))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_390013.counter = 0;
		result_390013.data = new Array(chckRange(initial_size_390011, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_390011, 0, 2147483647);++i) {result_390013.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		result_390013.first = -1;
		result_390013.last = -1;

	return result_390013;

}

function next_id_343841(s_343843) {
		var Tmp1;
			var Tmp2;

	var result_343844 = null;

		if (s_343843.exclude) {
		Tmp1 = [];
		}
		else {
		Tmp1 = (s_343843.postalCode || []).concat(makeNimstrLit("-") || [],cstrToNimstr((addInt((Tmp2 = HEX5BHEX5D_343996(last_postfix_343229[0], s_343843.postalCode), Tmp2)[0][Tmp2[1]], 1))+"") || []);
		}
		
		result_343844 = nimCopy(null, Tmp1, NTI45040);

	return result_343844;

}

function HEX5BHEX5DHEX3D_390926(t_390932, key_390933, val_390934) {
		if (((t_390932.data != null ? t_390932.data.length : 0) == 0)) {
		if (!(is_power_of_two_109062(64))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_390932.counter = 0;
		t_390932.data = new Array(64); for (var i=0;i<64;++i) {t_390932.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		t_390932.first = -1;
		t_390932.last = -1;
		}
		
		var hc_391401 = [0];
		var index_391430 = raw_get_376421(t_390932, key_390933, hc_391401, 0);
		if ((0 <= index_391430)) {
		t_390932.data[chckIndx(index_391430, 0, t_390932.data.length+0-1)-0].Field3 = nimCopy(null, val_390934, NTI341058);
		}
		else {
			if (((t_390932.data != null ? t_390932.data.length : 0) == 0)) {
			if (!(is_power_of_two_109062(64))) {
			failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			t_390932.counter = 0;
			t_390932.data = new Array(64); for (var i=0;i<64;++i) {t_390932.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}			t_390932.first = -1;
			t_390932.last = -1;
			}
			
			if (must_rehash_232053((t_390932.data != null ? t_390932.data.length : 0), t_390932.counter)) {
			enlarge_377767(t_390932);
			index_391430 = raw_get_known_hc_379759(t_390932, key_390933, hc_391401[0]);
			}
			
			index_391430 = subInt(-1, index_391430);
			raw_insert_378907(t_390932, t_390932, "data", key_390933, val_390934, hc_391401[0], index_391430);
			t_390932.counter = addInt(t_390932.counter, 1);
		}
		

	
}

function on_grp_street_389467(e_389469) {

		function HEX3Aanonymous_389500(e_389502) {
				var Tmp1;
				var Tmp2;
				var Tmp3;
				var Tmp4;
				var Tmp5;
				var Tmp6;
				var Tmp7;
					var Tmp8;
						var Tmp9;
					var Tmp10;
				var Tmp11;

				mv_street_grp_343230[0].removeAll();
				var trgt_btn_389503 = e_389502.target;
				var to_sect_id_389504 = cstrToNimstr((Tmp1 = trgt_btn_389503.parentNode.getElementsByTagName("select"), Tmp1)[chckIndx(0, 0, Tmp1.length+0-1)-0].value);
				var sect_from_id_389505 = id_343824(street_389478.sector);
				var post_code_389506 = nimCopy(null, street_389478.sector.postalCode, NTI45040);
				if (!(has_key_367536(all_sectors_342829[0], to_sect_id_389504))) {
				(Tmp2 = HEX5BHEX5D_343996(last_postfix_343229[0], post_code_389506), Tmp2)[0][Tmp2[1]] = addInt(Tmp2[0][Tmp2[1]], 1);
				HEX5BHEX5DHEX3D_368517(all_sectors_342829[0], to_sect_id_389504, {city: nimCopy(null, addr_city_343633[0], NTI45040), postalCode: nimCopy(null, post_code_389506, NTI45040), district: nimCopy(null, street_389478.sector.district, NTI45040), pFix: (Tmp3 = HEX5BHEX5D_343996(last_postfix_343229[0], post_code_389506), Tmp3)[0][Tmp3[1]], streets: init_ordered_table_390007(64), shownOnMap: false, exclude: false});
				}
				
				street_389478.sector = (Tmp4 = HEX5BHEX5D_372597(all_sectors_342829[0], to_sect_id_389504), Tmp4)[0][Tmp4[1]];
				HEX5BHEX5DHEX3D_390926((Tmp5 = HEX5BHEX5D_372597(all_sectors_342829[0], to_sect_id_389504), Tmp5)[0][Tmp5[1]].streets, street_389478.name, street_389478.links);
				del_384607((Tmp6 = HEX5BHEX5D_372597(all_sectors_342829[0], sect_from_id_389505), Tmp6)[0][Tmp6[1]].streets, street_389478.name);
				var from_sector_392675 = (Tmp7 = HEX5BHEX5D_372597(all_sectors_342829[0], sect_from_id_389505), Tmp7)[0][Tmp7[1]];
					if (!!(from_sector_392675.exclude)) Tmp8 = false; else {						Tmp8 = (len_356748((Tmp9 = HEX5BHEX5D_372597(all_sectors_342829[0], sect_from_id_389505), Tmp9)[0][Tmp9[1]].streets) == 0);					}				if (Tmp8) {
				if ((from_sector_392675.pFix == (Tmp10 = HEX5BHEX5D_343996(last_postfix_343229[0], from_sector_392675.postalCode), Tmp10)[0][Tmp10[1]])) {
				(Tmp11 = HEX5BHEX5D_343996(last_postfix_343229[0], from_sector_392675.postalCode), Tmp11)[0][Tmp11[1]] = subInt(Tmp11[0][Tmp11[1]], 1);
				}
				
				del_380859(all_sectors_342829[0], sect_from_id_389505);
				}
				
				reindex_sect_366470();
				redraw_320814(kxi_311324[0]);

			
		}

		function HEX3Aanonymous_393616(el_393618, di_393619, dm_393620) {
				var Tmp1;
				var Tmp2;

				function HEX3Aanonymous_393623(e_393625) {
						mv_street_grp_343230[0].removeAll();

					
				}

				function HEX3Aanonymous_393639(e_393641) {
						map.removeEventListener("tap", load_links_343793);

					
				}

				var btn_393621 = (Tmp1 = el_393618.getElementsByClassName("ok-str-mv"), Tmp1)[chckIndx(0, 0, Tmp1.length+0-1)-0];
				var btn_close_393622 = (Tmp2 = el_393618.getElementsByClassName("close-str-mv"), Tmp2)[chckIndx(0, 0, Tmp2.length+0-1)-0];
				btn_393621.addEventListener("click", mv_btn_hndl_393614, false);
				btn_close_393622.addEventListener("click", HEX3Aanonymous_393623, false);
				el_393618.addEventListener("mouseenter", HEX3Aanonymous_393639, false);

			
		}

		function HEX3Aanonymous_393686(el_393688, di_393689, dm_393690) {
				var Tmp1;

				var btn_393691 = (Tmp1 = el_393688.getElementsByClassName("ok-str-mv"), Tmp1)[chckIndx(0, 0, Tmp1.length+0-1)-0];
				btn_393691.removeEventListener("click", mv_btn_hndl_393614);
				map.addEventListener("tap", load_links_343793, false);

			
		}

		mv_street_grp_343230[0].removeAll();
		var trgt_grp_389473 = e_389469.currentTarget;
		var street_389478 = trgt_grp_389473.getData();
		var sect_id_389479 = id_343824(street_389478.sector);
		var sect_next_id_389480 = next_id_343841(street_389478.sector);
		var sect_exclude_389481 = street_389478.sector.exclude;
		var el_move_street_389482 = document.createElement("div");
		el_move_street_389482.className = "move-str-marker";
		el_move_street_389482.appendChild(document.createElement("span"));
		var el_txt_389483 = document.createTextNode(toJSStr(street_389478.name));
		el_move_street_389482.childNodes[0].appendChild(el_txt_389483);
		el_move_street_389482.appendChild(document.createElement("div"));
		var sel_el_389484 = document.createElement("select");
		var mv_opt_389485 = document.createElement("option");
		mv_opt_389485.appendChild(document.createTextNode("Двинуть в"));
		sel_el_389484.appendChild(mv_opt_389485);
		if (!(sect_exclude_389481)) {
		var mv_opt_new_389486 = document.createElement("option");
		mv_opt_new_389486.appendChild(document.createTextNode(toJSStr((sect_next_id_389480 || []).concat(makeNimstrLit("(\xD0\xBD\xD0\xBE\xD0\xB2\xD1\x8B\xD0\xB9)") || []))));
		mv_opt_new_389486.value = toJSStr(sect_next_id_389480);
		mv_opt_new_389486.setAttribute("data-new", "1");
		sel_el_389484.appendChild(mv_opt_new_389486);
		}
		
		L1: do {
			var k_opt_389494 = null;
			var v_opt_389495 = null;
			var l_446657 = len_354740(all_sectors_342829[0]);
			if ((0 < all_sectors_342829[0].counter)) {
			var h_446658 = all_sectors_342829[0].first;
			L2: do {
					L3: while (true) {
					if (!(0 <= h_446658)) break L3;
						var nxt_446660 = all_sectors_342829[0].data[chckIndx(h_446658, 0, all_sectors_342829[0].data.length+0-1)-0].Field1;
						if (is_filled_232018(all_sectors_342829[0].data[chckIndx(h_446658, 0, all_sectors_342829[0].data.length+0-1)-0].Field0)) {
						k_opt_389494 = all_sectors_342829[0].data[chckIndx(h_446658, 0, all_sectors_342829[0].data.length+0-1)-0].Field2;
						v_opt_389495 = all_sectors_342829[0].data[chckIndx(h_446658, 0, all_sectors_342829[0].data.length+0-1)-0].Field3;
						L4: do {
							if (eqStrings(k_opt_389494, sect_id_389479)) {
							break L4;
							}
							
							var mv_opt_389498 = document.createElement("option");
							mv_opt_389498.appendChild(document.createTextNode(toJSStr(k_opt_389494)));
							mv_opt_389498.value = toJSStr(k_opt_389494);
							sel_el_389484.appendChild(mv_opt_389498);
						} while(false);
						if (!((len_354740(all_sectors_342829[0]) == l_446657))) {
						failed_assert_impl_60066(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
						}
						
						}
						
						h_446658 = nxt_446660;
					}
			} while(false);
			}
			
		} while(false);
		el_move_street_389482.childNodes[1].appendChild(sel_el_389484);
		var btn_ok_389499 = document.createElement("button");
		btn_ok_389499.appendChild(document.createTextNode("Ok !"));
		btn_ok_389499.className = "ok-str-mv";
		var mv_btn_hndl_393614 = HEX3Aanonymous_389500;
		var btn_close_393615 = document.createElement("button");
		btn_close_393615.appendChild(document.createTextNode("закрыть"));
		btn_close_393615.className = "close-str-mv";
		el_move_street_389482.childNodes[1].appendChild(btn_ok_389499);
		el_move_street_389482.childNodes[1].appendChild(btn_close_393615);
		var di_opt_393815 = {onAttach: HEX3Aanonymous_393616, onDetach: HEX3Aanonymous_393686, m_type: NTI247089};
		var icon_move_street_393816 = function(element, opt){return new H.map.DomIcon(element, opt)}(el_move_street_389482, di_opt_393815);
		var geo_point_393817 = map.screenToGeo(e_389469.currentPointer.viewportX, e_389469.currentPointer.viewportY);
		var mv_street_marker_393818 = function(position){return new H.map.DomMarker(position)}(geo_point_393817);
		mv_street_marker_393818.setIcon(icon_move_street_393816);
		mv_street_grp_343230[0].addObject(mv_street_marker_393818);
		rawEcho(makeNimstrLit("mvStreet: "));

	
}

function has_key_398138(t_398143, key_398144) {
	var result_398145 = false;

		var hc_398146 = [0];
		result_398145 = (0 <= raw_get_398147(t_398143, key_398144, hc_398146, 0));

	return result_398145;

}

function display_street_394092(name_394094, tree_394095) {
			var Tmp1;
		var Tmp2;
		var Tmp3;
		var Tmp4;
		var Tmp5;
		var Tmp6;
			var Tmp8;
						var Tmp11;

						function HEX3Aanonymous_397934(e_397936) {
								map.removeEventListener("tap", load_links_343793);

							
						}

						function HEX3Aanonymous_397967(e_397969) {
								map.addEventListener("tap", load_links_343793, false);

							
						}
							var Tmp15;
								var Tmp16;
						var Tmp17;
										var Tmp21;
										var Tmp22;

	BeforeRet: do {
		if (!(has_key_394310(all_streets_342029[0], name_394094))) {
		break BeforeRet;
		}
		
		if (((Tmp1 = HEX5BHEX5D_374715(all_streets_342029[0], name_394094), Tmp1)[0][Tmp1[1]].sector == null)) {
		var p_fix_395331 = (Tmp2 = HEX5BHEX5D_343996(last_postfix_343229[0], postal_code_343635[0]), Tmp2)[0][Tmp2[1]];
		has_key_or_put_395418(all_sectors_342829[0], sect_name_343636[0], {city: nimCopy(null, addr_city_343633[0], NTI45040), postalCode: nimCopy(null, postal_code_343635[0], NTI45040), district: nimCopy(null, addr_distr_343632[0], NTI45040), pFix: p_fix_395331, streets: init_ordered_table_390007(64), shownOnMap: false, exclude: false});
		has_key_or_put_375835((Tmp3 = HEX5BHEX5D_372597(all_sectors_342829[0], sect_name_343636[0]), Tmp3)[0][Tmp3[1]].streets, name_394094, (Tmp4 = HEX5BHEX5D_374715(all_streets_342029[0], name_394094), Tmp4)[0][Tmp4[1]].links);
		(Tmp5 = HEX5BHEX5D_374715(all_streets_342029[0], name_394094), Tmp5)[0][Tmp5[1]].sector = (Tmp6 = HEX5BHEX5D_372597(all_sectors_342829[0], sect_name_343636[0]), Tmp6)[0][Tmp6[1]];
		}
		
		L7: do {
			var link_397765 = null;
			var colontmp__446648 = null;
			colontmp__446648 = (Tmp8 = HEX5BHEX5D_374715(all_streets_342029[0], name_394094), Tmp8)[0][Tmp8[1]].links;
			var i_446649 = 0;
			var l_446650 = (colontmp__446648 != null ? colontmp__446648.length : 0);
			L9: do {
					L10: while (true) {
					if (!(i_446649 < l_446650)) break L10;
						link_397765 = colontmp__446648[chckIndx(i_446649, 0, colontmp__446648.length+0-1)-0];
						var grp_street_397766 = function(){return new H.map.Group()}();
						grp_street_397766.setZIndex(99);
						grp_street_397766.setData((Tmp11 = HEX5BHEX5D_374715(all_streets_342029[0], name_394094), Tmp11)[0][Tmp11[1]]);
						grp_street_397766.addEventListener("pointerenter", HEX3Aanonymous_397934, true, null);
						grp_street_397766.addEventListener("pointerleave", HEX3Aanonymous_397967, true, null);
						grp_street_397766.addEventListener("tap", on_grp_street_389467, true, null);
						main_group_388734[0].addObject(grp_street_397766);
						var ln_str_398021 = function(){return new H.geo.LineString();}();
						L12: do {
							var c_398028 = null;
							var colontmp__446637 = null;
							colontmp__446637 = link_397765.geometry;
							var i_446638 = 0;
							var l_446639 = (colontmp__446637 != null ? colontmp__446637.length : 0);
							L13: do {
									L14: while (true) {
									if (!(i_446638 < l_446639)) break L14;
										c_398028 = colontmp__446637[chckIndx(i_446638, 0, colontmp__446637.length+0-1)-0];
										ln_str_398021.pushLatLngAlt(c_398028.lat, c_398028.lng, 1.0000000000000000e+000);
										i_446638 = addInt(i_446638, 1);
										if (!(((colontmp__446637 != null ? colontmp__446637.length : 0) == l_446639))) {
										failed_assert_impl_60066(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
							if (!has_key_398138(all_links_341629[0], link_397765.linkId)) Tmp15 = false; else {								Tmp15 = !((Tmp16 = HEX5BHEX5D_398946(all_links_341629[0], link_397765.linkId), Tmp16)[0][Tmp16[1]].addedToMap);							}						if (Tmp15) {
						var p_opt_399436 = {style: {strokeColor: "rgba(0, 0, 255, 0.3)", fillColor: "rgba(255, 0, 0, 0.4)", lineWidth: 10, m_type: NTI247076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, zIndex: 99, m_type: NTI247081};
						var pl_399437 = function(ls, options){return new H.map.Polyline(ls, options)}(ln_str_398021, p_opt_399436);
						grp_street_397766.addObject(pl_399437);
						(Tmp17 = HEX5BHEX5D_398946(all_links_341629[0], link_397765.linkId), Tmp17)[0][Tmp17[1]].addedToMap = true;
						}
						
						if (tree_394095) {
						L18: do {
							var n_link_399807 = 0;
							var colontmp__446644 = null;
							colontmp__446644 = link_397765.neighborLinks;
							var i_446645 = 0;
							var l_446646 = (colontmp__446644 != null ? colontmp__446644.length : 0);
							L19: do {
									L20: while (true) {
									if (!(i_446645 < l_446646)) break L20;
										n_link_399807 = colontmp__446644[chckIndx(i_446645, 0, colontmp__446644.length+0-1)-0];
										if ((0 < n_link_399807)) {
										Tmp21 = n_link_399807;
										}
										else {
										Tmp21 = mulInt(n_link_399807, -1);
										}
										
										var n_lnk_399811 = Tmp21;
										if (has_key_398138(all_links_341629[0], n_lnk_399811)) {
										display_street_394092((Tmp22 = HEX5BHEX5D_398946(all_links_341629[0], n_lnk_399811), Tmp22)[0][Tmp22[1]].name, false);
										}
										else {
										}
										
										i_446645 = addInt(i_446645, 1);
										if (!(((colontmp__446644 != null ? colontmp__446644.length : 0) == l_446646))) {
										failed_assert_impl_60066(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						}
						
						i_446649 = addInt(i_446649, 1);
						if (!(((colontmp__446648 != null ? colontmp__446648.length : 0) == l_446650))) {
						failed_assert_impl_60066(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
	} while (false);

	
}

function raw_insert_429722(t_429728, data_429731, data_429731_Idx, key_429732, val_429733, hc_429734, h_429735) {
		data_429731[data_429731_Idx][chckIndx(h_429735, 0, data_429731[data_429731_Idx].length+0-1)-0].Field1 = nimCopy(null, key_429732, NTI45040);
		data_429731[data_429731_Idx][chckIndx(h_429735, 0, data_429731[data_429731_Idx].length+0-1)-0].Field2 = val_429733;
		data_429731[data_429731_Idx][chckIndx(h_429735, 0, data_429731[data_429731_Idx].length+0-1)-0].Field0 = hc_429734;

	
}

function enlarge_428748(t_428754) {
		var n_428762 = null;
		n_428762 = new Array(chckRange(mulInt((t_428754.data != null ? t_428754.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_428754.data != null ? t_428754.data.length : 0), 2), 0, 2147483647);++i) {n_428762[i]={Field0: 0, Field1: null, Field2: 0};}		var Tmp1 = t_428754.data; t_428754.data = n_428762; n_428762 = Tmp1;		L2: do {
			var i_428921 = 0;
			var colontmp__446666 = 0;
			colontmp__446666 = (n_428762 != null ? (n_428762.length-1) : -1);
			var res_446667 = 0;
			L3: do {
					L4: while (true) {
					if (!(res_446667 <= colontmp__446666)) break L4;
						i_428921 = res_446667;
						var eh_429077 = n_428762[chckIndx(i_428921, 0, n_428762.length+0-1)-0].Field0;
						if (is_filled_232018(eh_429077)) {
						var j_429084 = (eh_429077 & (t_428754.data != null ? (t_428754.data.length-1) : -1));
						L5: do {
								L6: while (true) {
								if (!is_filled_232018(t_428754.data[chckIndx(j_429084, 0, t_428754.data.length+0-1)-0].Field0)) break L6;
									j_429084 = next_try_232035(j_429084, (t_428754.data != null ? (t_428754.data.length-1) : -1));
								}
						} while(false);
						raw_insert_429722(t_428754, t_428754, "data", n_428762[chckIndx(i_428921, 0, n_428762.length+0-1)-0].Field1, n_428762[chckIndx(i_428921, 0, n_428762.length+0-1)-0].Field2, eh_429077, j_429084);
						}
						
						res_446667 = addInt(res_446667, 1);
					}
			} while(false);
		} while(false);

	
}

function raw_get_known_hc_430228(t_430232, key_430233, hc_430234) {
	var result_430235 = 0;

	BeforeRet: do {
		if (((t_430232.data != null ? t_430232.data.length : 0) == 0)) {
		result_430235 = -1;
		break BeforeRet;
		}
		
		var h_430374 = (hc_430234 & (t_430232.data != null ? (t_430232.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_232018(t_430232.data[chckIndx(h_430374, 0, t_430232.data.length+0-1)-0].Field0)) break L2;
					if (((t_430232.data[chckIndx(h_430374, 0, t_430232.data.length+0-1)-0].Field0 == hc_430234) && eqStrings(t_430232.data[chckIndx(h_430374, 0, t_430232.data.length+0-1)-0].Field1, key_430233))) {
					result_430235 = h_430374;
					break BeforeRet;
					}
					
					h_430374 = next_try_232035(h_430374, (t_430232.data != null ? (t_430232.data.length-1) : -1));
				}
		} while(false);
		result_430235 = subInt(-1, h_430374);
	} while (false);

	return result_430235;

}

function HEX5BHEX5DHEX3D_427470(t_427476, key_427477, val_427478) {
		if (((t_427476.data != null ? t_427476.data.length : 0) == 0)) {
		if (!(is_power_of_two_109062(64))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_427476.counter = 0;
		t_427476.data = new Array(64); for (var i=0;i<64;++i) {t_427476.data[i]={Field0: 0, Field1: null, Field2: 0};}		}
		
		var hc_428001 = [0];
		var index_428010 = raw_get_344008(t_427476, key_427477, hc_428001, 0);
		if ((0 <= index_428010)) {
		t_427476.data[chckIndx(index_428010, 0, t_427476.data.length+0-1)-0].Field2 = val_427478;
		}
		else {
			if (((t_427476.data != null ? t_427476.data.length : 0) == 0)) {
			if (!(is_power_of_two_109062(64))) {
			failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			t_427476.counter = 0;
			t_427476.data = new Array(64); for (var i=0;i<64;++i) {t_427476.data[i]={Field0: 0, Field1: null, Field2: 0};}			}
			
			if (must_rehash_232053((t_427476.data != null ? t_427476.data.length : 0), t_427476.counter)) {
			enlarge_428748(t_427476);
			index_428010 = raw_get_known_hc_430228(t_427476, key_427477, hc_428001[0]);
			}
			
			index_428010 = subInt(-1, index_428010);
			raw_insert_429722(t_427476, t_427476, "data", key_427477, val_427478, hc_428001[0], index_428010);
			t_427476.counter = addInt(t_427476.counter, 1);
		}
		

	
}

function sort_431073(t_431079, cmp_431089, order_431090) {
											var Tmp9;
												var Tmp10;

	BeforeRet: do {
		var list_431091 = t_431079.first;
		var p_431092 = 0;
		var q_431093 = 0;
		var e_431094 = 0;
		var tail_431095 = 0;
		var oldhead_431096 = 0;
		var nmerges_431097 = 0;
		var psize_431098 = 0;
		var qsize_431099 = 0;
		var i_431100 = 0;
		if ((t_431079.counter == 0)) {
		break BeforeRet;
		}
		
		var insize_431102 = 1;
		L1: do {
				L2: while (true) {
				if (!true) break L2;
					p_431092 = list_431091;
					oldhead_431096 = list_431091;
					list_431091 = -1;
					tail_431095 = -1;
					nmerges_431097 = 0;
					L3: do {
							L4: while (true) {
							if (!(0 <= p_431092)) break L4;
								nmerges_431097 = addInt(nmerges_431097, 1);
								q_431093 = p_431092;
								psize_431098 = 0;
								i_431100 = 0;
								L5: do {
										L6: while (true) {
										if (!(i_431100 < insize_431102)) break L6;
											psize_431098 = addInt(psize_431098, 1);
											q_431093 = t_431079.data[chckIndx(q_431093, 0, t_431079.data.length+0-1)-0].Field1;
											if ((q_431093 < 0)) {
											break L5;
											}
											
											i_431100 = addInt(i_431100, 1);
										}
								} while(false);
								qsize_431099 = insize_431102;
								L7: do {
										L8: while (true) {
											if ((0 < psize_431098)) Tmp9 = true; else {												if (!(0 < qsize_431099)) Tmp10 = false; else {													Tmp10 = (0 <= q_431093);												}												Tmp9 = Tmp10;											}										if (!Tmp9) break L8;
											if ((psize_431098 == 0)) {
											e_431094 = q_431093;
											q_431093 = t_431079.data[chckIndx(q_431093, 0, t_431079.data.length+0-1)-0].Field1;
											qsize_431099 = subInt(qsize_431099, 1);
											}
											else {
											if (((qsize_431099 == 0) || (q_431093 < 0))) {
											e_431094 = p_431092;
											p_431092 = t_431079.data[chckIndx(p_431092, 0, t_431079.data.length+0-1)-0].Field1;
											psize_431098 = subInt(psize_431098, 1);
											}
											else {
											if ((HEX2A_99019(cmp_431089({Field0: nimCopy(null, t_431079.data[chckIndx(p_431092, 0, t_431079.data.length+0-1)-0].Field2, NTI45040), Field1: t_431079.data[chckIndx(p_431092, 0, t_431079.data.length+0-1)-0].Field3}, {Field0: nimCopy(null, t_431079.data[chckIndx(q_431093, 0, t_431079.data.length+0-1)-0].Field2, NTI45040), Field1: t_431079.data[chckIndx(q_431093, 0, t_431079.data.length+0-1)-0].Field3}), order_431090) <= 0)) {
											e_431094 = p_431092;
											p_431092 = t_431079.data[chckIndx(p_431092, 0, t_431079.data.length+0-1)-0].Field1;
											psize_431098 = subInt(psize_431098, 1);
											}
											else {
												e_431094 = q_431093;
												q_431093 = t_431079.data[chckIndx(q_431093, 0, t_431079.data.length+0-1)-0].Field1;
												qsize_431099 = subInt(qsize_431099, 1);
											}
											}}
											if ((0 <= tail_431095)) {
											t_431079.data[chckIndx(tail_431095, 0, t_431079.data.length+0-1)-0].Field1 = e_431094;
											}
											else {
												list_431091 = e_431094;
											}
											
											tail_431095 = e_431094;
										}
								} while(false);
								p_431092 = q_431093;
							}
					} while(false);
					t_431079.data[chckIndx(tail_431095, 0, t_431079.data.length+0-1)-0].Field1 = -1;
					if ((nmerges_431097 <= 1)) {
					break L1;
					}
					
					insize_431102 = mulInt(insize_431102, 2);
				}
		} while(false);
		t_431079.first = list_431091;
		t_431079.last = tail_431095;
	} while (false);

	
}

function nsuRepeatStr(s_200482, n_200483) {
	var result_200484 = null;

		result_200484 = nimCopy(null, mnewString(0), NTI45040);
		L1: do {
			var i_200493 = 0;
			var colontmp__446678 = 0;
			colontmp__446678 = n_200483;
			var res_446679 = 1;
			L2: do {
					L3: while (true) {
					if (!(res_446679 <= colontmp__446678)) break L3;
						i_200493 = res_446679;
						if (result_200484 != null) { result_200484 = (result_200484).concat(s_200482); } else { result_200484 = s_200482.slice(); };
						res_446679 = addInt(res_446679, 1);
					}
			} while(false);
		} while(false);

	return result_200484;

}

function sort_sector_tbl_430952(x_430957, y_430959) {
		var Tmp1;
		var Tmp2;
		var Tmp3;
			var Tmp4;

	var result_430960 = 0;

		var ak_x_430961 = nsuSplitString(x_430957["Field0"], makeNimstrLit("-"), -1);
		var ak_y_430962 = nsuSplitString(y_430959["Field0"], makeNimstrLit("-"), -1);
		var k_x_430988 = (ak_x_430961[chckIndx(0, 0, ak_x_430961.length+0-1)-0] || []).concat(makeNimstrLit("-") || [],nsuRepeatStr(makeNimstrLit("0"), chckRange(subInt(4, ((Tmp1 = ak_x_430961[chckIndx((ak_x_430961 != null ? (ak_x_430961.length-1) : -1), 0, ak_x_430961.length+0-1)-0], Tmp1) != null ? Tmp1.length : 0)), 0, 2147483647)) || [],ak_x_430961[chckIndx((ak_x_430961 != null ? (ak_x_430961.length-1) : -1), 0, ak_x_430961.length+0-1)-0] || []);
		var k_y_431014 = (ak_y_430962[chckIndx(0, 0, ak_y_430962.length+0-1)-0] || []).concat(makeNimstrLit("-") || [],nsuRepeatStr(makeNimstrLit("0"), chckRange(subInt(4, ((Tmp2 = ak_y_430962[chckIndx((ak_y_430962 != null ? (ak_y_430962.length-1) : -1), 0, ak_y_430962.length+0-1)-0], Tmp2) != null ? Tmp2.length : 0)), 0, 2147483647)) || [],ak_y_430962[chckIndx((ak_y_430962 != null ? (ak_y_430962.length-1) : -1), 0, ak_y_430962.length+0-1)-0] || []);
			if ((cmpStrings(k_y_431014, k_x_430988) < 0)) Tmp4 = true; else {				Tmp4 = eqStrings(k_x_430988, k_y_431014);			}		if (Tmp4) {
		Tmp3 = 1;
		}
		else {
		Tmp3 = -1;
		}
		
		result_430960 = Tmp3;

	return result_430960;

}

function new_seq_434100(len_434103) {
	var result_434105 = null;

		result_434105 = new Array(len_434103); for (var i=0;i<len_434103;++i) {result_434105[i]={Field0: 0.0, Field1: 0.0};}
	return result_434105;

}

function init_table_434133(initial_size_434137) {
	var result_434153 = {data: null, counter: 0};

		if (!(is_power_of_two_109062(initial_size_434137))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_434153.counter = 0;
		result_434153.data = new Array(chckRange(initial_size_434137, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_434137, 0, 2147483647);++i) {result_434153.data[i]={Field0: 0, Field1: null, Field2: {Field0: 0, Field1: 0, Field2: 0}};}
	return result_434153;

}

function HEX2AHEX3D_219787(x_219791, x_219791_Idx, y_219792) {
		x_219791[x_219791_Idx] = HEX2A_210019(x_219791[x_219791_Idx], y_219792);

	
}

function HEX5E_219778(x_219781, y_219782) {
	var result_219783 = [0];

		switch (y_219782) {
		case 0:
			result_219783[0] = 1;
			break;
		case 1:
			result_219783[0] = x_219781;
			break;
		case 2:
			result_219783[0] = HEX2A_210019(x_219781, x_219781);
			break;
		case 3:
			result_219783[0] = HEX2A_210019(HEX2A_210019(x_219781, x_219781), x_219781);
			break;
		default: 
			var colontmp__446687 = {Field0: 0, Field1: 0};
			var x_219785 = [0];
			var y_219786 = 0;
			nimCopy(colontmp__446687, {Field0: x_219781, Field1: nimCopy(null, y_219782, NTI48404)}, NTI219784);
			x_219785[0] = colontmp__446687["Field0"];
			y_219786 = colontmp__446687["Field1"];
			result_219783[0] = 1;
			L1: do {
					L2: while (true) {
					if (!true) break L2;
						if (!(((y_219786 & 1) == 0))) {
						HEX2AHEX3D_219787(result_219783, 0, x_219785[0]);
						}
						
						y_219786 = chckRange((y_219786 >> 1), 0, 2147483647);
						if ((y_219786 == 0)) {
						break L1;
						}
						
						HEX2AHEX3D_219787(x_219785, 0, x_219785[0]);
					}
			} while(false);
			break;
		}

	return result_219783[0];

}

function get_coord_249015(level_249017, tile_x_249018, tile_y_249019) {
	var result_249021 = {Field0: 0.0, Field1: 0.0};

		var tile_size_249029 = HEX2F_71817(180, HEX5E_219778(2, chckRange(level_249017, 0, 2147483647)));
		nimCopy(result_249021, {Field0: ((tile_y_249019 * tile_size_249029) - 9.0000000000000000e+001), Field1: ((tile_x_249018 * tile_size_249029) - 1.8000000000000000e+002)}, NTI249020);

	return result_249021;

}

function raw_get_435002(t_435006, key_435007, hc_435008, hc_435008_Idx) {
						var Tmp3;

	var result_435009 = 0;

	BeforeRet: do {
		hc_435008[hc_435008_Idx] = hash_229014(key_435007);
		if ((hc_435008[hc_435008_Idx] == 0)) {
		hc_435008[hc_435008_Idx] = 314159265;
		}
		
		if (((t_435006.data != null ? t_435006.data.length : 0) == 0)) {
		result_435009 = -1;
		break BeforeRet;
		}
		
		var h_435151 = (hc_435008[hc_435008_Idx] & (t_435006.data != null ? (t_435006.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_232018(t_435006.data[chckIndx(h_435151, 0, t_435006.data.length+0-1)-0].Field0)) break L2;
						if (!(t_435006.data[chckIndx(h_435151, 0, t_435006.data.length+0-1)-0].Field0 == hc_435008[hc_435008_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_435006.data[chckIndx(h_435151, 0, t_435006.data.length+0-1)-0].Field1, key_435007);						}					if (Tmp3) {
					result_435009 = h_435151;
					break BeforeRet;
					}
					
					h_435151 = next_try_232035(h_435151, (t_435006.data != null ? (t_435006.data.length-1) : -1));
				}
		} while(false);
		result_435009 = subInt(-1, h_435151);
	} while (false);

	return result_435009;

}

function raw_insert_437322(t_437328, data_437331, data_437331_Idx, key_437332, val_437333, hc_437334, h_437335) {
		data_437331[data_437331_Idx][chckIndx(h_437335, 0, data_437331[data_437331_Idx].length+0-1)-0].Field1 = nimCopy(null, key_437332, NTI45040);
		nimCopy(data_437331[data_437331_Idx][chckIndx(h_437335, 0, data_437331[data_437331_Idx].length+0-1)-0].Field2, val_437333, NTI434128);
		data_437331[data_437331_Idx][chckIndx(h_437335, 0, data_437331[data_437331_Idx].length+0-1)-0].Field0 = hc_437334;

	
}

function enlarge_436348(t_436354) {
		var n_436362 = null;
		n_436362 = new Array(chckRange(mulInt((t_436354.data != null ? t_436354.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_436354.data != null ? t_436354.data.length : 0), 2), 0, 2147483647);++i) {n_436362[i]={Field0: 0, Field1: null, Field2: {Field0: 0, Field1: 0, Field2: 0}};}		var Tmp1 = t_436354.data; t_436354.data = n_436362; n_436362 = Tmp1;		L2: do {
			var i_436521 = 0;
			var colontmp__446691 = 0;
			colontmp__446691 = (n_436362 != null ? (n_436362.length-1) : -1);
			var res_446692 = 0;
			L3: do {
					L4: while (true) {
					if (!(res_446692 <= colontmp__446691)) break L4;
						i_436521 = res_446692;
						var eh_436677 = n_436362[chckIndx(i_436521, 0, n_436362.length+0-1)-0].Field0;
						if (is_filled_232018(eh_436677)) {
						var j_436684 = (eh_436677 & (t_436354.data != null ? (t_436354.data.length-1) : -1));
						L5: do {
								L6: while (true) {
								if (!is_filled_232018(t_436354.data[chckIndx(j_436684, 0, t_436354.data.length+0-1)-0].Field0)) break L6;
									j_436684 = next_try_232035(j_436684, (t_436354.data != null ? (t_436354.data.length-1) : -1));
								}
						} while(false);
						raw_insert_437322(t_436354, t_436354, "data", n_436362[chckIndx(i_436521, 0, n_436362.length+0-1)-0].Field1, n_436362[chckIndx(i_436521, 0, n_436362.length+0-1)-0].Field2, eh_436677, j_436684);
						}
						
						res_446692 = addInt(res_446692, 1);
					}
			} while(false);
		} while(false);

	
}

function raw_get_known_hc_437828(t_437832, key_437833, hc_437834) {
	var result_437835 = 0;

	BeforeRet: do {
		if (((t_437832.data != null ? t_437832.data.length : 0) == 0)) {
		result_437835 = -1;
		break BeforeRet;
		}
		
		var h_437974 = (hc_437834 & (t_437832.data != null ? (t_437832.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_232018(t_437832.data[chckIndx(h_437974, 0, t_437832.data.length+0-1)-0].Field0)) break L2;
					if (((t_437832.data[chckIndx(h_437974, 0, t_437832.data.length+0-1)-0].Field0 == hc_437834) && eqStrings(t_437832.data[chckIndx(h_437974, 0, t_437832.data.length+0-1)-0].Field1, key_437833))) {
					result_437835 = h_437974;
					break BeforeRet;
					}
					
					h_437974 = next_try_232035(h_437974, (t_437832.data != null ? (t_437832.data.length-1) : -1));
				}
		} while(false);
		result_437835 = subInt(-1, h_437974);
	} while (false);

	return result_437835;

}

function HEX5BHEX5DHEX3D_434589(t_434595, key_434596, val_434597) {
		if (((t_434595.data != null ? t_434595.data.length : 0) == 0)) {
		if (!(is_power_of_two_109062(64))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_434595.counter = 0;
		t_434595.data = new Array(64); for (var i=0;i<64;++i) {t_434595.data[i]={Field0: 0, Field1: null, Field2: {Field0: 0, Field1: 0, Field2: 0}};}		}
		
		var hc_435001 = [0];
		var index_435640 = raw_get_435002(t_434595, key_434596, hc_435001, 0);
		if ((0 <= index_435640)) {
		nimCopy(t_434595.data[chckIndx(index_435640, 0, t_434595.data.length+0-1)-0].Field2, val_434597, NTI434128);
		}
		else {
			if (((t_434595.data != null ? t_434595.data.length : 0) == 0)) {
			if (!(is_power_of_two_109062(64))) {
			failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			t_434595.counter = 0;
			t_434595.data = new Array(64); for (var i=0;i<64;++i) {t_434595.data[i]={Field0: 0, Field1: null, Field2: {Field0: 0, Field1: 0, Field2: 0}};}			}
			
			if (must_rehash_232053((t_434595.data != null ? t_434595.data.length : 0), t_434595.counter)) {
			enlarge_436348(t_434595);
			index_435640 = raw_get_known_hc_437828(t_434595, key_434596, hc_435001[0]);
			}
			
			index_435640 = subInt(-1, index_435640);
			raw_insert_437322(t_434595, t_434595, "data", key_434596, val_434597, hc_435001[0], index_435640);
			t_434595.counter = addInt(t_434595.counter, 1);
		}
		

	
}

function get_tile_xy_249061(level_249063, lat_249064, lng_249065) {
	var result_249067 = {Field0: 0, Field1: 0};

		var tile_size_249075 = HEX2F_71817(180, HEX5E_219778(2, chckRange(level_249063, 0, 2147483647)));
		nimCopy(result_249067, {Field0: ((Math.trunc(((lng_249065 + 1.8000000000000000e+002) / tile_size_249075)))|0), Field1: ((Math.trunc(((lat_249064 + 9.0000000000000000e+001) / tile_size_249075)))|0)}, NTI249066);

	return result_249067;

}

function has_key_or_put_439081(t_439087, key_439088, val_439089) {
	var result_439090 = false;

		if (((t_439087.data != null ? t_439087.data.length : 0) == 0)) {
		if (!(is_power_of_two_109062(64))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_439087.counter = 0;
		t_439087.data = new Array(64); for (var i=0;i<64;++i) {t_439087.data[i]={Field0: 0, Field1: null, Field2: {Field0: 0, Field1: 0, Field2: 0}};}		}
		
		var hc_439601 = [0];
		var index_439610 = raw_get_435002(t_439087, key_439088, hc_439601, 0);
		if ((index_439610 < 0)) {
		result_439090 = false;
		if (((t_439087.data != null ? t_439087.data.length : 0) == 0)) {
		if (!(is_power_of_two_109062(64))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_439087.counter = 0;
		t_439087.data = new Array(64); for (var i=0;i<64;++i) {t_439087.data[i]={Field0: 0, Field1: null, Field2: {Field0: 0, Field1: 0, Field2: 0}};}		}
		
		if (must_rehash_232053((t_439087.data != null ? t_439087.data.length : 0), t_439087.counter)) {
		enlarge_436348(t_439087);
		index_439610 = raw_get_known_hc_437828(t_439087, key_439088, hc_439601[0]);
		}
		
		index_439610 = subInt(-1, index_439610);
		raw_insert_437322(t_439087, t_439087, "data", key_439088, val_439089, hc_439601[0], index_439610);
		t_439087.counter = addInt(t_439087.counter, 1);
		}
		else {
			result_439090 = true;
		}
		

	return result_439090;

}

function len_440548(t_440553) {
	var result_440554 = 0;

		result_440554 = t_440553.counter;

	return result_440554;

}

function has_key_441339(t_441344, key_441345) {
	var result_441346 = false;

		var hc_441347 = [0];
		result_441346 = (0 <= raw_get_421402(t_441344, key_441345, hc_441347, 0));

	return result_441346;

}

function has_key_or_put_442931(t_442937, key_442938, val_442939) {
	var result_442940 = false;

		if (((t_442937.data != null ? t_442937.data.length : 0) == 0)) {
		if (!(is_power_of_two_109062(64))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_442937.counter = 0;
		t_442937.data = new Array(64); for (var i=0;i<64;++i) {t_442937.data[i]={Field0: 0, Field1: null, Field2: 0};}		}
		
		var hc_443401 = [0];
		var index_443410 = raw_get_344008(t_442937, key_442938, hc_443401, 0);
		if ((index_443410 < 0)) {
		result_442940 = false;
		if (((t_442937.data != null ? t_442937.data.length : 0) == 0)) {
		if (!(is_power_of_two_109062(64))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_442937.counter = 0;
		t_442937.data = new Array(64); for (var i=0;i<64;++i) {t_442937.data[i]={Field0: 0, Field1: null, Field2: 0};}		}
		
		if (must_rehash_232053((t_442937.data != null ? t_442937.data.length : 0), t_442937.counter)) {
		enlarge_428748(t_442937);
		index_443410 = raw_get_known_hc_430228(t_442937, key_442938, hc_443401[0]);
		}
		
		index_443410 = subInt(-1, index_443410);
		raw_insert_429722(t_442937, t_442937, "data", key_442938, val_442939, hc_443401[0], index_443410);
		t_442937.counter = addInt(t_442937.counter, 1);
		}
		else {
			result_442940 = true;
		}
		

	return result_442940;

}

function load_links_343793(e_343795) {

function parse_tiles_408882(tiles_408885) {
												var Tmp8;
													var Tmp9;
												var Tmp10;
															var Tmp16;
																var Tmp17;
															var Tmp18;
															var Tmp19;
															var Tmp20;
															var Tmp21;
															var Tmp22;
											var Tmp28;
															var Tmp32;
															var Tmp33;
															var Tmp34;
															var Tmp35;
											var Tmp36;
											var Tmp37;
											var Tmp38;
											var Tmp39;
											var Tmp40;
												var Tmp41;
											var Tmp42;
											var Tmp43;
											var Tmp44;
											var Tmp45;

											function HEX3Aanonymous_415601(x_415603) {
												var result_415604 = 0;

													result_415604 = parseInt(toJSStr(x_415603), 10);

												return result_415604;

											}
											var Tmp46;

												function HEX3Aanonymous_415710(x_415712) {
													var result_415713 = 0;

														result_415713 = parseInt(toJSStr(x_415712), 10);

													return result_415713;

												}
											var Tmp47;
											var Tmp48;
												var Tmp49;
													var Tmp50;
											var Tmp51;
											var Tmp52;
											var Tmp53;
		var Tmp58;
		var Tmp59;

		L1: do {
			var t_409214 = null;
			var i_446573 = 0;
			var l_446574 = (tiles_408885 != null ? tiles_408885.length : 0);
			L2: do {
					L3: while (true) {
					if (!(i_446573 < l_446574)) break L3;
						t_409214 = tiles_408885[chckIndx(i_446573, 0, tiles_408885.length+0-1)-0];
						var rows_409226 = (t_409214.Rows);
						var meta_409236 = (t_409214.Meta);
						var tile_id_409284 = nsuJoinSep([cstrToNimstr((meta_409236.tileX)), cstrToNimstr((meta_409236.tileY)), cstrToNimstr((meta_409236.level)), cstrToNimstr((meta_409236.layerName))], makeNimstrLit("_"));
						L4: do {
							var r_409407 = null;
							var i_446570 = 0;
							var l_446571 = (rows_409226 != null ? rows_409226.length : 0);
							L5: do {
									L6: while (true) {
									if (!(i_446570 < l_446571)) break L6;
										r_409407 = rows_409226[chckIndx(i_446570, 0, rows_409226.length+0-1)-0];
										L7: do {
											var link_id_409417 = parseInt(toJSStr(cstrToNimstr((r_409407.LINK_ID))), 10);
												if (!has_key_or_put_409494(all_links_341629[0], link_id_409417, {linkId: link_id_409417, name: null, cityId: 0, districtId: 0, postalCode: null, neighborLinks: null, geometry: null, readOnly: false, addedToMap: false, addedToSector: false})) Tmp8 = false; else {													Tmp8 = (Tmp9 = HEX5BHEX5D_398946(all_links_341629[0], link_id_409417), Tmp9)[0][Tmp9[1]].readOnly;												}											if (Tmp8) {
											break L7;
											}
											
												if (!(r_409407.NAMES)) Tmp10 = false; else {													Tmp10 = !((r_409407.NAME));												}											if (Tmp10) {
											var str_name_413228 = cstrToNimstr((r_409407.NAMES));
											L11: do {
												var seq_names_413229 = null;
												var last_446544 = 0;
												var splits_446545 = -1;
												L12: do {
														L13: while (true) {
														if (!(last_446544 <= (str_name_413228 != null ? str_name_413228.length : 0))) break L13;
															var first_446547 = last_446544;
															L14: do {
																	L15: while (true) {
																	if (!((last_446544 < (str_name_413228 != null ? str_name_413228.length : 0)) && !(substr_eq_196702(str_name_413228, last_446544, makeNimstrLit("\x1D"))))) break L15;
																		last_446544 = addInt(last_446544, 1);
																	}
															} while(false);
															if ((splits_446545 == 0)) {
															last_446544 = (str_name_413228 != null ? str_name_413228.length : 0);
															}
															
															seq_names_413229 = substr_75222(str_name_413228, first_446547, subInt(last_446544, 1));
															var txt_413401 = nsuReplaceStr((Tmp16 = nsuSplitString(seq_names_413229, makeNimstrLit("\x1E"), -1), Tmp16)[chckIndx(0, 0, Tmp16.length+0-1)-0], makeNimstrLit("GERBN"), []);
																if (!!((ConstSet14[txt_413401[chckIndx(0, 0, txt_413401.length+0-1)-0]] != undefined))) Tmp17 = false; else {																	Tmp17 = !((ConstSet15[txt_413401[chckIndx(1, 0, txt_413401.length+0-1)-0]] != undefined));																}															if (Tmp17) {
															(Tmp18 = HEX5BHEX5D_398946(all_links_341629[0], link_id_409417), Tmp18)[0][Tmp18[1]].name = nimCopy(null, ((Tmp19 = HEX5BHEX5D_398946(all_links_341629[0], link_id_409417), Tmp19)[0][Tmp19[1]].name || []).concat(makeNimstrLit(" ") || [],nsuReplaceStr((Tmp20 = nsuSplitString(seq_names_413229, makeNimstrLit("\x1E"), -1), Tmp20)[chckIndx(0, 0, Tmp20.length+0-1)-0], makeNimstrLit("GERBN"), []) || []), NTI45040);
															(Tmp21 = HEX5BHEX5D_398946(all_links_341629[0], link_id_409417), Tmp21)[0][Tmp21[1]].name = nimCopy(null, nsuStrip((Tmp22 = HEX5BHEX5D_398946(all_links_341629[0], link_id_409417), Tmp22)[0][Tmp22[1]].name, true, true, ConstSet16), NTI45040);
															break L11;
															}
															
															L23: do {
																var seq_text_414058 = null;
																var last_446539 = 0;
																var splits_446540 = -1;
																L24: do {
																		L25: while (true) {
																		if (!(last_446539 <= (seq_names_413229 != null ? seq_names_413229.length : 0))) break L25;
																			var first_446542 = last_446539;
																			L26: do {
																					L27: while (true) {
																					if (!((last_446539 < (seq_names_413229 != null ? seq_names_413229.length : 0)) && !(substr_eq_196702(seq_names_413229, last_446539, makeNimstrLit("\x1E"))))) break L27;
																						last_446539 = addInt(last_446539, 1);
																					}
																			} while(false);
																			if ((splits_446540 == 0)) {
																			last_446539 = (seq_names_413229 != null ? seq_names_413229.length : 0);
																			}
																			
																			seq_text_414058 = substr_75222(seq_names_413229, first_446542, subInt(last_446539, 1));
																			if ((splits_446540 == 0)) {
																			break L24;
																			}
																			
																			splits_446540 = subInt(splits_446540, 1);
																			last_446539 = addInt(last_446539, 1);
																		}
																} while(false);
															} while(false);
															if ((splits_446545 == 0)) {
															break L12;
															}
															
															splits_446545 = subInt(splits_446545, 1);
															last_446544 = addInt(last_446544, 1);
														}
												} while(false);
											} while(false);
											}
											else {
											if ((r_409407.NAME)) {
											(Tmp28 = HEX5BHEX5D_398946(all_links_341629[0], link_id_409417), Tmp28)[0][Tmp28[1]].geometry = nimCopy(null, new_seq_414381(0), NTI414385);
											var lats_414417 = nsuSplitString(cstrToNimstr((r_409407.LAT)), makeNimstrLit(","), -1);
											var lngs_414427 = nsuSplitString(cstrToNimstr((r_409407.LON)), makeNimstrLit(","), -1);
											var lat0_414428 = 0.0;
											var lng0_414429 = 0.0;
											L29: do {
												var i_414444 = 0;
												var colontmp__446556 = 0;
												colontmp__446556 = (lats_414417 != null ? (lats_414417.length-1) : -1);
												var res_446557 = 0;
												L30: do {
														L31: while (true) {
														if (!(res_446557 <= colontmp__446556)) break L31;
															i_414444 = res_446557;
															if (eqStrings(nsuStrip(lats_414417[chckIndx(i_414444, 0, lats_414417.length+0-1)-0], true, true, ConstSet17), [])) {
															Tmp32 = lat0_414428;
															}
															else {
															Tmp32 = (lat0_414428 + parseFloat(toJSStr(nsuStrip(lats_414417[chckIndx(i_414444, 0, lats_414417.length+0-1)-0], true, true, ConstSet18))));
															}
															
															var str_lat_414447 = Tmp32;
															if (eqStrings(nsuStrip(lngs_414427[chckIndx(i_414444, 0, lngs_414427.length+0-1)-0], true, true, ConstSet19), [])) {
															Tmp33 = lng0_414429;
															}
															else {
															Tmp33 = (lng0_414429 + parseFloat(toJSStr(nsuStrip(lngs_414427[chckIndx(i_414444, 0, lngs_414427.length+0-1)-0], true, true, ConstSet20))));
															}
															
															var str_lng_414450 = Tmp33;
															if ((Tmp35 = (Tmp34 = HEX5BHEX5D_398946(all_links_341629[0], link_id_409417), Tmp34)[0][Tmp34[1]].geometry, Tmp35) != null) { Tmp35.push({lat: nimCopy(null, (str_lat_414447 / 1.0000000000000000e+005), NTI246016), lng: nimCopy(null, (str_lng_414450 / 1.0000000000000000e+005), NTI246018)}); } else { Tmp35 = [{lat: nimCopy(null, (str_lat_414447 / 1.0000000000000000e+005), NTI246016), lng: nimCopy(null, (str_lng_414450 / 1.0000000000000000e+005), NTI246018)}]; };
															lat0_414428 = str_lat_414447;
															lng0_414429 = str_lng_414450;
															res_446557 = addInt(res_446557, 1);
														}
												} while(false);
											} while(false);
											}
											else {
											if ((r_409407.POSTAL_CODES)) {
											(Tmp36 = HEX5BHEX5D_398946(all_links_341629[0], link_id_409417), Tmp36)[0][Tmp36[1]].cityId = parseInt(toJSStr((Tmp38 = nsuSplitString((Tmp37 = nsuSplitString(cstrToNimstr((r_409407.ADMIN_PLACE_IDS)), makeNimstrLit(","), -1), Tmp37)[chckIndx(3, 0, Tmp37.length+0-1)-0], makeNimstrLit(";"), -1), Tmp38)[chckIndx(0, 0, Tmp38.length+0-1)-0]), 10);
											var distr_prt_414807 = nimCopy(null, (Tmp39 = nsuSplitString(cstrToNimstr((r_409407.ADMIN_PLACE_IDS)), makeNimstrLit(","), -1), Tmp39)[chckIndx(4, 0, Tmp39.length+0-1)-0], NTI45040);
											if ((eqStrings(distr_prt_414807, []) || (distr_prt_414807[chckIndx(0, 0, distr_prt_414807.length+0-1)-0] == 59))) {
											Tmp40 = 0;
											}
											else {
											Tmp40 = parseInt(toJSStr((Tmp41 = nsuSplitString(distr_prt_414807, makeNimstrLit(";"), -1), Tmp41)[chckIndx(0, 0, Tmp41.length+0-1)-0]), 10);
											}
											
											var district_id_415004 = Tmp40;
											(Tmp42 = HEX5BHEX5D_398946(all_links_341629[0], link_id_409417), Tmp42)[0][Tmp42[1]].districtId = addInt(district_id_415004, (Tmp43 = HEX5BHEX5D_398946(all_links_341629[0], link_id_409417), Tmp43)[0][Tmp43[1]].cityId);
											(Tmp44 = HEX5BHEX5D_398946(all_links_341629[0], link_id_409417), Tmp44)[0][Tmp44[1]].postalCode = nimCopy(null, (Tmp45 = nsuSplitString(cstrToNimstr((r_409407.POSTAL_CODES)), makeNimstrLit(";"), -1), Tmp45)[chckIndx(0, 0, Tmp45.length+0-1)-0], NTI45040);
											}
											else {
											if ((r_409407.REF_NODE_NEIGHBOR_LINKS)) {
											var r_links_415515 = cstrToNimstr((r_409407.REF_NODE_NEIGHBOR_LINKS));
											var non_rlinks_415525 = cstrToNimstr((r_409407.NONREF_NODE_NEIGHBOR_LINKS));
											var ref_links_415526 = nsuSplitString(r_links_415515, makeNimstrLit(","), -1);
											var non_ref_links_415527 = nsuSplitString(non_rlinks_415525, makeNimstrLit(","), -1);
											var ref_links_int_415670 = map_415621(ref_links_415526, HEX3Aanonymous_415601);
											if (eqStrings(non_rlinks_415525, [])) {
											Tmp46 = new_seq_415683(0);
											}
											else {
											Tmp46 = map_415621(non_ref_links_415527, HEX3Aanonymous_415710);
											}
											
											var non_ref_links_int_415740 = nimCopy(null, Tmp46, NTI415687);
											(Tmp47 = HEX5BHEX5D_398946(all_links_341629[0], link_id_409417), Tmp47)[0][Tmp47[1]].neighborLinks = nimCopy(null, concat_415910([nimCopy(null, ref_links_int_415670, NTI415902), nimCopy(null, non_ref_links_int_415740, NTI415907)]), NTI415916);
											}
											}}}
											var street_416166 = nimCopy(null, (Tmp48 = HEX5BHEX5D_398946(all_links_341629[0], link_id_409417), Tmp48)[0][Tmp48[1]].name, NTI45040);
												if (!!(eqStrings(street_416166, []))) Tmp49 = false; else {													Tmp49 = ((Tmp50 = HEX5BHEX5D_398946(all_links_341629[0], link_id_409417), Tmp50)[0][Tmp50[1]].cityId == city_id_343630[0]);												}											if (Tmp49) {
											if (!(has_key_or_put_416443(all_streets_342029[0], street_416166, {name: nimCopy(null, street_416166, NTI45040), links: new_seq_416416(0), sector: null}))) {
											}
											
											if ((Tmp53 = (Tmp51 = HEX5BHEX5D_374715(all_streets_342029[0], street_416166), Tmp51)[0][Tmp51[1]].links, Tmp53) != null) { Tmp53.push((Tmp52 = HEX5BHEX5D_398946(all_links_341629[0], link_id_409417), Tmp52)[0][Tmp52[1]]); } else { Tmp53 = [(Tmp52 = HEX5BHEX5D_398946(all_links_341629[0], link_id_409417), Tmp52)[0][Tmp52[1]]]; };
											}
											
											has_key_or_put_420851(cached_tiles_342429[0], tile_id_409284, t_409214);
										} while(false);
										i_446570 = addInt(i_446570, 1);
										if (!(((rows_409226 != null ? rows_409226.length : 0) == l_446571))) {
										failed_assert_impl_60066(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						i_446573 = addInt(i_446573, 1);
						if (!(((tiles_408885 != null ? tiles_408885.length : 0) == l_446574))) {
						failed_assert_impl_60066(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		L54: do {
			var k_424919 = 0;
			var v_424920 = null;
			var v_424920_Idx = 0;
			var l_446577 = len_347215(all_links_341629[0]);
			L55: do {
				var h_446579 = 0;
				var colontmp__446580 = 0;
				colontmp__446580 = (all_links_341629[0].data != null ? (all_links_341629[0].data.length-1) : -1);
				var res_446581 = 0;
				L56: do {
						L57: while (true) {
						if (!(res_446581 <= colontmp__446580)) break L57;
							h_446579 = res_446581;
							if (is_filled_232018(all_links_341629[0].data[chckIndx(h_446579, 0, all_links_341629[0].data.length+0-1)-0].Field0)) {
							k_424919 = all_links_341629[0].data[chckIndx(h_446579, 0, all_links_341629[0].data.length+0-1)-0].Field1;
							v_424920 = all_links_341629[0].data[chckIndx(h_446579, 0, all_links_341629[0].data.length+0-1)-0]; v_424920_Idx = "Field2";
							v_424920[v_424920_Idx].readOnly = true;
							if (eqStrings(v_424920[v_424920_Idx].name, [])) {
							v_424920[v_424920_Idx].name = nimCopy(null, makeNimstrLit("uknown!!!"), NTI45040);
							}
							
							if (!((len_347215(all_links_341629[0]) == l_446577))) {
							failed_assert_impl_60066(makeNimstrLit("tables.nim(691, 13) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
							}
							
							}
							
							res_446581 = addInt(res_446581, 1);
						}
				} while(false);
			} while(false);
		} while(false);
		sort_425113(all_streets_342029[0], sort_street_tbl_425044, 1);
		display_street_394092((Tmp58 = HEX5BHEX5D_398946(all_links_341629[0], clck_link_id_343634[0]), Tmp58)[0][Tmp58[1]].name, true);
		if (!(has_key_367536(all_sectors_342829[0], sect_name_343636[0]))) {
		HEX5BHEX5DHEX3D_427470(last_postfix_343229[0], postal_code_343635[0], subInt((Tmp59 = HEX5BHEX5D_343996(last_postfix_343229[0], postal_code_343635[0]), Tmp59)[0][Tmp59[1]], 1));
		}
		
		sort_431073(all_sectors_342829[0], sort_sector_tbl_430952, 1);
		redraw_320814(kxi_311324[0]);

	
}

		function HEX3Aanonymous_432916(res_432918) {
				var tiles_433012 = (res_432918.Tiles);
				L1: do {
					var k_433814 = null;
					var v_433815 = null;
					var l_446515 = len_433146(cached_tiles_342429[0]);
					L2: do {
						var h_446517 = 0;
						var colontmp__446518 = 0;
						colontmp__446518 = (cached_tiles_342429[0].data != null ? (cached_tiles_342429[0].data.length-1) : -1);
						var res_446519 = 0;
						L3: do {
								L4: while (true) {
								if (!(res_446519 <= colontmp__446518)) break L4;
									h_446517 = res_446519;
									if (is_filled_232018(cached_tiles_342429[0].data[chckIndx(h_446517, 0, cached_tiles_342429[0].data.length+0-1)-0].Field0)) {
									k_433814 = cached_tiles_342429[0].data[chckIndx(h_446517, 0, cached_tiles_342429[0].data.length+0-1)-0].Field1;
									v_433815 = cached_tiles_342429[0].data[chckIndx(h_446517, 0, cached_tiles_342429[0].data.length+0-1)-0].Field2;
									if (tiles_433012 != null) { tiles_433012.push(v_433815); } else { tiles_433012 = [v_433815]; };
									if (!((len_433146(cached_tiles_342429[0]) == l_446515))) {
									failed_assert_impl_60066(makeNimstrLit("tables.nim(669, 13) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
									}
									
									}
									
									res_446519 = addInt(res_446519, 1);
								}
						} while(false);
					} while(false);
				} while(false);
				parse_tiles_408882(tiles_433012);

			
		}

		function HEX3Aanonymous_433852(e_433854) {
			
		}

		function HEX3Aanonymous_433869(res_433871) {
			BeforeRet: do {
				var layer_obj_433875 = res_433871.Layers[0];
				var e_pnt_433876 = function(){return H.service.extension.platformData.Service.EntryPoint}();
				var e_pnt_type_433877 = function(){return H.service.extension.platformData.Service.EntryPointType}();
				var prms_pde_434001 = {};
				var t_xys_434018 = new_seq_85233(0);
				var layers_434030 = [makeNimstrLit("ROAD_ADMIN_FC"), makeNimstrLit("ROAD_GEOM_FC"), makeNimstrLit("ROAD_NAME_FC"), makeNimstrLit("LINK_FC")];
				var r_layers_434047 = new_seq_85233(0);
				var levels_434064 = new_seq_85233(0);
				var tile_xys_434076 = (layer_obj_433875.tileXYs);
				var level_434086 = (layer_obj_433875.level);
				var all_crds_434126 = new_seq_434100(0);
				var prev_txys_434429 = [init_table_434133(64)];
				L1: do {
					var xy_434436 = null;
					var i_446439 = 0;
					var l_446440 = (tile_xys_434076 != null ? tile_xys_434076.length : 0);
					L2: do {
							L3: while (true) {
							if (!(i_446439 < l_446440)) break L3;
								xy_434436 = tile_xys_434076[chckIndx(i_446439, 0, tile_xys_434076.length+0-1)-0];
								var tx_434446 = (xy_434436.x);
								var ty_434456 = (xy_434436.y);
								var latlng_434457 = get_coord_249015(level_434086, tx_434446, ty_434456);
								HEX5BHEX5DHEX3D_434589(prev_txys_434429[0], nsuJoinSep([cstrToNimstr((level_434086)+""), cstrToNimstr((tx_434446)+""), cstrToNimstr((ty_434456)+"")], makeNimstrLit("_")), {Field0: level_434086, Field1: tx_434446, Field2: ty_434456});
								if (all_crds_434126 != null) { all_crds_434126.push({Field0: latlng_434457["Field0"], Field1: latlng_434457["Field1"]}); } else { all_crds_434126 = [{Field0: latlng_434457["Field0"], Field1: latlng_434457["Field1"]}]; };
								i_446439 = addInt(i_446439, 1);
								if (!(((tile_xys_434076 != null ? tile_xys_434076.length : 0) == l_446440))) {
								failed_assert_impl_60066(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);
				L4: do {
					var lvl_438610 = 0;
					var res_446448 = 10;
					L5: do {
							L6: while (true) {
							if (!(res_446448 <= 13)) break L6;
								lvl_438610 = res_446448;
								L7: do {
									var crd_438814 = {Field0: 0.0, Field1: 0.0};
									var i_446445 = 0;
									var l_446446 = (all_crds_434126 != null ? all_crds_434126.length : 0);
									L8: do {
											L9: while (true) {
											if (!(i_446445 < l_446446)) break L9;
												nimCopy(crd_438814, all_crds_434126[chckIndx(i_446445, 0, all_crds_434126.length+0-1)-0], NTI434089);
												var txy_438815 = get_tile_xy_249061(lvl_438610, crd_438814["Field0"], crd_438814["Field1"]);
												var k_438827 = nsuJoinSep([cstrToNimstr((lvl_438610)+""), cstrToNimstr((txy_438815["Field0"])+""), cstrToNimstr((txy_438815["Field1"])+"")], makeNimstrLit("_"));
												has_key_or_put_439081(prev_txys_434429[0], k_438827, {Field0: lvl_438610, Field1: txy_438815["Field0"], Field2: txy_438815["Field1"]});
												i_446445 = addInt(i_446445, 1);
												if (!(((all_crds_434126 != null ? all_crds_434126.length : 0) == l_446446))) {
												failed_assert_impl_60066(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
												}
												
											}
									} while(false);
								} while(false);
								res_446448 = addInt(res_446448, 1);
							}
					} while(false);
				} while(false);
				L10: do {
					var lr_440415 = null;
					var i_446472 = 0;
					var l_446473 = (layers_434030 != null ? layers_434030.length : 0);
					L11: do {
							L12: while (true) {
							if (!(i_446472 < l_446473)) break L12;
								lr_440415 = layers_434030[chckIndx(i_446472, 0, layers_434030.length+0-1)-0];
								L13: do {
									var lvl_tx_ty_441214 = {Field0: 0, Field1: 0, Field2: 0};
									var l_446463 = len_440548(prev_txys_434429[0]);
									L14: do {
										var h_446465 = 0;
										var colontmp__446466 = 0;
										colontmp__446466 = (prev_txys_434429[0].data != null ? (prev_txys_434429[0].data.length-1) : -1);
										var res_446467 = 0;
										L15: do {
												L16: while (true) {
												if (!(res_446467 <= colontmp__446466)) break L16;
													h_446465 = res_446467;
													if (is_filled_232018(prev_txys_434429[0].data[chckIndx(h_446465, 0, prev_txys_434429[0].data.length+0-1)-0].Field0)) {
													nimCopy(lvl_tx_ty_441214, prev_txys_434429[0].data[chckIndx(h_446465, 0, prev_txys_434429[0].data.length+0-1)-0].Field2, NTI434128);
													L17: do {
														var x_str_441215 = cstrToNimstr((lvl_tx_ty_441214.Field1)+"");
														var y_str_441216 = cstrToNimstr((lvl_tx_ty_441214.Field2)+"");
														var level_441217 = lvl_tx_ty_441214.Field0;
														var layer_name_441218 = (lr_440415 || []).concat(cstrToNimstr((subInt(level_441217, 8))+"") || []);
														if (has_key_441339(cached_tiles_342429[0], nsuJoinSep([nimCopy(null, x_str_441215, NTI45040), nimCopy(null, y_str_441216, NTI45040), cstrToNimstr((level_441217)+""), nimCopy(null, layer_name_441218, NTI45040)], makeNimstrLit("_")))) {
														break L17;
														}
														
														if (t_xys_434018 != null) { t_xys_434018.push((x_str_441215 || []).concat(makeNimstrLit(",") || [],y_str_441216 || [])); } else { t_xys_434018 = [(x_str_441215 || []).concat(makeNimstrLit(",") || [],y_str_441216 || [])]; };
														if (levels_434064 != null) { levels_434064.push(cstrToNimstr((level_441217)+"")); } else { levels_434064 = [cstrToNimstr((level_441217)+"")]; };
														var Tmp18 = nimCopy(null, layer_name_441218, NTI45040);
														if (r_layers_434047 != null) { r_layers_434047.push(Tmp18); } else { r_layers_434047 = [Tmp18]; };
													} while(false);
													if (!((len_440548(prev_txys_434429[0]) == l_446463))) {
													failed_assert_impl_60066(makeNimstrLit("tables.nim(733, 13) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
													}
													
													}
													
													res_446467 = addInt(res_446467, 1);
												}
										} while(false);
									} while(false);
								} while(false);
								i_446472 = addInt(i_446472, 1);
								if (!(((layers_434030 != null ? layers_434030.length : 0) == l_446473))) {
								failed_assert_impl_60066(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);
				if (((r_layers_434047 != null ? r_layers_434047.length : 0) == 0)) {
				var tiles_441412 = new_seq_357626(0);
				L19: do {
					var k_441420 = null;
					var v_441421 = null;
					var l_446483 = len_433146(cached_tiles_342429[0]);
					L20: do {
						var h_446485 = 0;
						var colontmp__446486 = 0;
						colontmp__446486 = (cached_tiles_342429[0].data != null ? (cached_tiles_342429[0].data.length-1) : -1);
						var res_446487 = 0;
						L21: do {
								L22: while (true) {
								if (!(res_446487 <= colontmp__446486)) break L22;
									h_446485 = res_446487;
									if (is_filled_232018(cached_tiles_342429[0].data[chckIndx(h_446485, 0, cached_tiles_342429[0].data.length+0-1)-0].Field0)) {
									k_441420 = cached_tiles_342429[0].data[chckIndx(h_446485, 0, cached_tiles_342429[0].data.length+0-1)-0].Field1;
									v_441421 = cached_tiles_342429[0].data[chckIndx(h_446485, 0, cached_tiles_342429[0].data.length+0-1)-0].Field2;
									if (tiles_441412 != null) { tiles_441412.push(v_441421); } else { tiles_441412 = [v_441421]; };
									if (!((len_433146(cached_tiles_342429[0]) == l_446483))) {
									failed_assert_impl_60066(makeNimstrLit("tables.nim(669, 13) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
									}
									
									}
									
									res_446487 = addInt(res_446487, 1);
								}
						} while(false);
					} while(false);
				} while(false);
				parse_tiles_408882(tiles_441412);
				break BeforeRet;
				}
				
				prms_pde_434001.layers = toJSStr(nsuJoinSep(r_layers_434047, makeNimstrLit(",")));
				prms_pde_434001.levels = toJSStr(nsuJoinSep(levels_434064, makeNimstrLit(",")));
				prms_pde_434001.tilexy = toJSStr(nsuJoinSep(t_xys_434018, makeNimstrLit(",")));
				prms_pde_434001.meta = 1;
				pde_service_388760[0].request(e_pnt_433876.TILES, e_pnt_type_433877.JSON, prms_pde_434001, on_res_road_geom_433851, on_err_road_geom_433868);
			} while (false);

			
		}

		function HEX3Aanonymous_441690(e_441692) {
			
		}

		function HEX3Aanonymous_441707(r_441709) {
				var Tmp1;
					var Tmp5;
				var Tmp6;
				var Tmp7;
					var Tmp8;
				var Tmp9;
				var Tmp10;

			BeforeRet: do {
				var res_441710 = r_441709;
				var map_reference_441726 = res_441710.response.view[0].result[0].location.mapReference;
				var city_shape_441751 = (res_441710.response.view[0].result[0].location.shape.value);
				var city_geo_441752 = function(wkt){return new H.util.wkt.toGeometry(wkt)}(city_shape_441751);
				var address_441768 = res_441710.response.view[0].result[0].location.address;
				var link_id_441772 = map_reference_441726.referenceId;
				clck_link_id_343634[0] = (link_id_441772);
				if ((city_geo_441752.getExterior === undefined)) {
				Tmp1 = city_geo_441752.getGeometries();
				}
				else {
				Tmp1 = [city_geo_441752];
				}
				
				var geoms_441797 = nimCopy(null, Tmp1, NTI246143);
				L2: do {
					var g_442214 = null;
					var i_446501 = 0;
					var l_446502 = (geoms_441797 != null ? geoms_441797.length : 0);
					L3: do {
							L4: while (true) {
							if (!(i_446501 < l_446502)) break L4;
								g_442214 = geoms_441797[chckIndx(i_446501, 0, geoms_441797.length+0-1)-0];
								var ln_str_442219 = g_442214.getExterior();
								var p_opt_442401 = {style: {strokeColor: "rgba(0, 255, 255, 1)", fillColor: "rgba(0, 255, 255, 1)", lineWidth: 10, m_type: NTI247076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, m_type: NTI247081, zIndex: 0};
								var pl_442402 = function(ls, options){return new H.map.Polyline(ls, options)}(ln_str_442219, p_opt_442401);
								if ((city_id_343630[0] == 0)) {
								map.addObject(pl_442402);
								}
								
								i_446501 = addInt(i_446501, 1);
								if (!(((geoms_441797 != null ? geoms_441797.length : 0) == l_446502))) {
								failed_assert_impl_60066(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);
				var rev_city_id_442615 = parseInt(toJSStr(cstrToNimstr((map_reference_441726.cityId))), 10);
				var rev_postal_code_442625 = cstrToNimstr((address_441768.postalCode));
					if (!!((city_id_343630[0] == 0))) Tmp5 = false; else {						Tmp5 = !((rev_city_id_442615 == city_id_343630[0]));					}				if (Tmp5) {
				break BeforeRet;
				}
				
				city_id_343630[0] = rev_city_id_442615;
				postal_code_343635[0] = nimCopy(null, rev_postal_code_442625, NTI45040);
				if ((map_reference_441726.districtId)) {
				Tmp6 = parseInt(toJSStr(cstrToNimstr((map_reference_441726.districtId))), 10);
				}
				else {
				Tmp6 = 0;
				}
				
				district_id_343631[0] = Tmp6;
				addr_city_343633[0] = nimCopy(null, cstrToNimstr((address_441768.city)), NTI45040);
					if ((address_441768.district === undefined)) Tmp8 = true; else {						Tmp8 = eqStrings(cstrToNimstr((address_441768.district)), addr_city_343633[0]);					}				if (Tmp8) {
				Tmp7 = [];
				}
				else {
				Tmp7 = cstrToNimstr((address_441768.district));
				}
				
				addr_distr_343632[0] = nimCopy(null, Tmp7, NTI45040);
				has_key_or_put_442931(last_postfix_343229[0], postal_code_343635[0], 0);
				HEX5BHEX5DHEX3D_427470(last_postfix_343229[0], postal_code_343635[0], addInt((Tmp9 = HEX5BHEX5D_343996(last_postfix_343229[0], postal_code_343635[0]), Tmp9)[0][Tmp9[1]], 1));
				var p_fix_444657 = (Tmp10 = HEX5BHEX5D_343996(last_postfix_343229[0], postal_code_343635[0]), Tmp10)[0][Tmp10[1]];
				var seq_sect_name_444674 = new_seq_85233(0);
				if (seq_sect_name_444674 != null) { seq_sect_name_444674.push((postal_code_343635[0] || []).concat(makeNimstrLit("-") || [],cstrToNimstr((p_fix_444657)+"") || [])); } else { seq_sect_name_444674 = [(postal_code_343635[0] || []).concat(makeNimstrLit("-") || [],cstrToNimstr((p_fix_444657)+"") || [])]; };
				sect_name_343636[0] = nimCopy(null, nsuJoinSep(seq_sect_name_444674, makeNimstrLit(" ")), NTI45040);
				var e_pnt_444801 = function(){return H.service.extension.platformData.Service.EntryPoint}();
				var e_pnt_type_444802 = function(){return H.service.extension.platformData.Service.EntryPointType}();
				var prms_pde_444803 = {};
				prms_pde_444803.layer = "ROAD_GEOM_FCn";
				prms_pde_444803.attributes = "LINK_ID";
				prms_pde_444803.values = (link_id_441772);
				var z_key_444843 = (makeNimstrLit("z") || []).concat(addr_city_343633[0] || [],makeNimstrLit("-1") || []);
				if (!(has_key_367536(all_sectors_342829[0], z_key_444843))) {
				HEX5BHEX5DHEX3D_368517(all_sectors_342829[0], z_key_444843, {exclude: true, pFix: 1, city: [], postalCode: (makeNimstrLit("z") || []).concat(addr_city_343633[0] || []), district: [], streets: {data: null, counter: 0, first: 0, last: 0}, shownOnMap: false});
				}
				
				pde_service_388760[0].request(e_pnt_444801.INDEX, e_pnt_type_444802.JSON, prms_pde_444803, on_res_index_road_geom_441689, on_err_index_road_geom_441706);
			} while (false);

			
		}

		function HEX3Aanonymous_445245(e_445247) {
			
		}

		var p_e_407904 = e_343795;
		main_group_388734[0].removeAll();
		L1: do {
			var k_408815 = 0;
			var v_408816 = null;
			var v_408816_Idx = 0;
			var l_446423 = len_347215(all_links_341629[0]);
			L2: do {
				var h_446425 = 0;
				var colontmp__446426 = 0;
				colontmp__446426 = (all_links_341629[0].data != null ? (all_links_341629[0].data.length-1) : -1);
				var res_446427 = 0;
				L3: do {
						L4: while (true) {
						if (!(res_446427 <= colontmp__446426)) break L4;
							h_446425 = res_446427;
							if (is_filled_232018(all_links_341629[0].data[chckIndx(h_446425, 0, all_links_341629[0].data.length+0-1)-0].Field0)) {
							k_408815 = all_links_341629[0].data[chckIndx(h_446425, 0, all_links_341629[0].data.length+0-1)-0].Field1;
							v_408816 = all_links_341629[0].data[chckIndx(h_446425, 0, all_links_341629[0].data.length+0-1)-0]; v_408816_Idx = "Field2";
							v_408816[v_408816_Idx].addedToMap = false;
							if (!((len_347215(all_links_341629[0]) == l_446423))) {
							failed_assert_impl_60066(makeNimstrLit("tables.nim(691, 13) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
							}
							
							}
							
							res_446427 = addInt(res_446427, 1);
						}
				} while(false);
			} while(false);
		} while(false);
		var geo_point_408817 = map.screenToGeo(p_e_407904.currentPointer.viewportX, p_e_407904.currentPointer.viewportY);
		var reverse_geocoding_parameters_408818 = {m_type: NTI329123, jsonattributes: 0, mode: null, prox: null, maxResults: 0, additionaldata: null, locationattributes: null};
		reverse_geocoding_parameters_408818.jsonattributes = 1;
		reverse_geocoding_parameters_408818.prox = toJSStr((cstrToNimstr((geo_point_408817.lat)+"") || []).concat(makeNimstrLit(",") || [],cstrToNimstr((geo_point_408817.lng)+"") || [],makeNimstrLit(",1") || []));
		reverse_geocoding_parameters_408818.mode = "retrieveAddresses";
		reverse_geocoding_parameters_408818.maxResults = 1;
		reverse_geocoding_parameters_408818.additionaldata = "SuppressStreetType,Unnamed";
		reverse_geocoding_parameters_408818.locationattributes = "linkInfo";
		reverse_geocoding_parameters_408818.additionaldata = "IncludeShapeLevel,city";
		var rgcp_408819 = reverse_geocoding_parameters_408818;
		var on_res_road_geom_433851 = HEX3Aanonymous_432916;
		var on_err_road_geom_433868 = HEX3Aanonymous_433852;
		var on_res_index_road_geom_441689 = HEX3Aanonymous_433869;
		var on_err_index_road_geom_441706 = HEX3Aanonymous_441690;
		var on_res_rev_geo_445244 = HEX3Aanonymous_441707;
		var on_err_rev_geo_445261 = HEX3Aanonymous_445245;
		geocoder_388759.reverseGeocode(reverse_geocoding_parameters_408818, on_res_rev_geo_445244, on_err_rev_geo_445261);

	
}

function map_406009(s_406014, op_406017) {
	var result_406019 = null;

		result_406019 = new Array(chckRange((s_406014 != null ? s_406014.length : 0), 0, 2147483647)); for (var i=0;i<chckRange((s_406014 != null ? s_406014.length : 0), 0, 2147483647);++i) {result_406019[i]=null;}		L1: do {
			var i_406042 = 0;
			var colontmp__446712 = 0;
			colontmp__446712 = (s_406014 != null ? s_406014.length : 0);
			var i_446713 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_446713 < colontmp__446712)) break L3;
						i_406042 = i_446713;
						result_406019[chckIndx(i_406042, 0, result_406019.length+0-1)-0] = nimCopy(null, op_406017(s_406014[chckIndx(i_406042, 0, s_406014.length+0-1)-0]), NTI45040);
						i_446713 = addInt(i_446713, 1);
					}
			} while(false);
		} while(false);

	return result_406019;

}

function show_border_405980(hr_coord_405982, s_col_405983, latlon_405984) {

		function HEX3Aanonymous_405985(item_405987) {

				function HEX3Aanonymous_405989(item_405991) {
					var result_405992 = null;

						result_405992 = nimCopy(null, nsuStrip(item_405991, true, true, ConstSet21), NTI45040);

					return result_405992;

				}

			var result_405988 = null;

				result_405988 = nimCopy(null, nsuJoinSep(map_406009(nsuSplitString(item_405987, makeNimstrLit(","), -1), HEX3Aanonymous_405989), makeNimstrLit(",")), NTI45040);

			return result_405988;

		}

		var hr_arr_area_406084 = nsuSplitString(nsuJoinSep(map_406009(nsuSplitString(hr_coord_405982, makeNimstrLit(" "), -1), HEX3Aanonymous_405985), makeNimstrLit(",")), makeNimstrLit(","), -1);
		var hr_ln_str_406085 = function(){return new H.geo.LineString();}();
		var i_lat_406087 = 0;
		var i_lng_406089 = 1;
		if (latlon_405984) {
		i_lat_406087 = 1;
		i_lng_406089 = 0;
		}
		
		L1: do {
			var i_406103 = 0;
			var colontmp__446702 = 0;
			colontmp__446702 = subInt((hr_arr_area_406084 != null ? (hr_arr_area_406084.length-1) : -1), 3);
			var res_446703 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_446703 <= colontmp__446702)) break L3;
						i_406103 = res_446703;
						hr_ln_str_406085.pushLatLngAlt(chckRange(parseFloat(toJSStr(hr_arr_area_406084[chckIndx(addInt(i_406103, i_lng_406089), 0, hr_arr_area_406084.length+0-1)-0])), -9.0000000000000000e+001, 9.0000000000000000e+001), chckRange(parseFloat(toJSStr(hr_arr_area_406084[chckIndx(addInt(i_406103, i_lat_406087), 0, hr_arr_area_406084.length+0-1)-0])), -1.8000000000000000e+002, 1.8000000000000000e+002), parseFloat(toJSStr(hr_arr_area_406084[chckIndx(addInt(i_406103, 3), 0, hr_arr_area_406084.length+0-1)-0])));
						res_446703 = addInt(res_446703, 3);
					}
			} while(false);
		} while(false);
		hr_ln_str_406085.pushLatLngAlt(chckRange(parseFloat(toJSStr(hr_arr_area_406084[chckIndx(i_lng_406089, 0, hr_arr_area_406084.length+0-1)-0])), -9.0000000000000000e+001, 9.0000000000000000e+001), chckRange(parseFloat(toJSStr(hr_arr_area_406084[chckIndx(i_lat_406087, 0, hr_arr_area_406084.length+0-1)-0])), -1.8000000000000000e+002, 1.8000000000000000e+002), parseFloat(toJSStr(hr_arr_area_406084[chckIndx(2, 0, hr_arr_area_406084.length+0-1)-0])));
		var p_opt_406201 = {style: {strokeColor: toJSStr(s_col_405983), fillColor: toJSStr(s_col_405983), lineWidth: 10, m_type: NTI247076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, m_type: NTI247081, zIndex: 0};
		var pl_406202 = function(ls, options){return new H.map.Polyline(ls, options)}(hr_ln_str_406085, p_opt_406201);
		map.addObject(pl_406202);

	
}

function nsuSplitCharSet(s_197298, seps_197300, maxsplit_197302) {
	var result_197304 = null;

		result_197304 = nimCopy(null, [], NTI197320);
		L1: do {
			var x_197305 = null;
			var last_446728 = 0;
			var splits_446729 = maxsplit_197302;
			L2: do {
					L3: while (true) {
					if (!(last_446728 <= (s_197298 != null ? s_197298.length : 0))) break L3;
						var first_446731 = last_446728;
						L4: do {
								L5: while (true) {
								if (!((last_446728 < (s_197298 != null ? s_197298.length : 0)) && !((seps_197300[s_197298[chckIndx(last_446728, 0, s_197298.length+0-1)-0]] != undefined)))) break L5;
									last_446728 = addInt(last_446728, 1);
								}
						} while(false);
						if ((splits_446729 == 0)) {
						last_446728 = (s_197298 != null ? s_197298.length : 0);
						}
						
						x_197305 = substr_75222(s_197298, first_446731, subInt(last_446728, 1));
						var Tmp6 = nimCopy(null, x_197305, NTI45040);
						if (result_197304 != null) { result_197304.push(Tmp6); } else { result_197304 = [Tmp6]; };
						if ((splits_446729 == 0)) {
						break L2;
						}
						
						splits_446729 = subInt(splits_446729, 1);
						last_446728 = addInt(last_446728, 1);
					}
			} while(false);
		} while(false);

	return result_197304;

}

function geo_area_406414() {

		function show_border_district_406601(border_data_406603, stroke_color_406604, fill_color_406605) {

				function HEX3Aanonymous_406801(item_406803) {

						function HEX3Aanonymous_406805(item_406807) {
							var result_406808 = null;

								result_406808 = nimCopy(null, nsuStrip(item_406807, true, true, ConstSet23), NTI45040);

							return result_406808;

						}

					var result_406804 = null;

						result_406804 = nimCopy(null, nsuJoinSep(map_406009(nsuSplitString(item_406803, makeNimstrLit(","), -1), HEX3Aanonymous_406805), makeNimstrLit(",")), NTI45040);

					return result_406804;

				}

				function HEX3Aanonymous_407001(e_407003) {
					
				}
				stroke_color_406604 = nimCopy(null, stroke_color_406604, NTI45040);
				fill_color_406605 = nimCopy(null, fill_color_406605, NTI45040);

				function HEX3Aanonymous_407018(r_407020) {
						var res_407030 = r_407020.Response.View[0].Result[0];
						var loc_407031 = res_407030["Location"];
						var shp_407044 = cstrToNimstr((loc_407031.Shape.Value));
						var p_opt_407048 = {style: {strokeColor: toJSStr(stroke_color_406604), fillColor: toJSStr(fill_color_406605), lineWidth: 1, m_type: NTI247076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, zIndex: -999, m_type: NTI247085};
						var pl_407054 = function(ls, opt){return new H.map.Polygon(ls, opt)}(function(wkt){return new H.util.wkt.toGeometry(wkt)}(toJSStr(shp_407044)), p_opt_407048);
						map.addObject(pl_407054);

					
				}

								function HEX3Aanonymous_407415() {

										function HEX3Aanonymous_407418(r_407420) {
												var Tmp1;

												var res_407430 = r_407420.Response.View[0].Result[0];
												var match_lvl_407440 = cstrToNimstr((res_407430.MatchLevel));
												var loc_407601 = res_407430["Location"];
												if ((loc_407601.Shape === undefined)) {
												Tmp1 = makeNimstrLit("city");
												}
												else {
												Tmp1 = makeNimstrLit("district");
												}
												
												var type_shp_407801 = nimCopy(null, Tmp1, NTI45040);
												geocoding_parameters_406606.searchtext = toJSStr(c_407417);
												geocoding_parameters_406606.additionaldata = toJSStr((makeNimstrLit("IncludeShapeLevel,") || []).concat(type_shp_407801 || []));
												geocoder_388759.geocode(geocoding_parameters_406606, on_res_geo_for_map_407244, on_err_geo_407017);

											
										}

										var c_407417 = nimCopy(null, city_407414, NTI45040);
										var on_res_geo_407815 = HEX3Aanonymous_407418;
										geocoding_parameters_406606.searchtext = toJSStr(city_407414);
										geocoder_388759.geocode(geocoding_parameters_406606, on_res_geo_407815, on_err_geo_407017);

									
								}

				var geocoding_parameters_406606 = {m_type: NTI329131, searchtext: null, country: null, state: null, additionaldata: null};
				geocoding_parameters_406606.searchtext = "";
				geocoding_parameters_406606.country = "DEU";
				geocoding_parameters_406606.state = "Hessen";
				geocoding_parameters_406606.additionaldata = "IncludeShapeLevel,district";
				var borders_str_406607 = nimCopy(null, border_data_406603, NTI45040);
				var arr_area_406861 = nsuSplitString(nsuJoinSep(map_406009(nsuSplitCharSet(borders_str_406607, ConstSet22, -1), HEX3Aanonymous_406801), makeNimstrLit(",")), makeNimstrLit(","), -1);
				var on_err_geo_407017 = HEX3Aanonymous_407001;
				var on_res_geo_for_map_407244 = HEX3Aanonymous_407018;
				L1: do {
					var city_407414 = null;
					var i_446722 = 0;
					var l_446723 = (arr_area_406861 != null ? arr_area_406861.length : 0);
					L2: do {
							L3: while (true) {
							if (!(i_446722 < l_446723)) break L3;
								city_407414 = arr_area_406861[chckIndx(i_446722, 0, arr_area_406861.length+0-1)-0];
								HEX3Aanonymous_407415();
								i_446722 = addInt(i_446722, 1);
								if (!(((arr_area_406861 != null ? arr_area_406861.length : 0) == l_446723))) {
								failed_assert_impl_60066(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);

			
		}

		var hr_coord_real_406416 = makeNimstrLit("49.95904181908018,8.850935273809228,0 49.95837229749924,8.849427872342858,0 49.95778559567659,8.849229388875756,0 49.95578385330093,8.847823911351952,0 49.95545252239804,8.847308927221093,0 49.954496481908954,8.843854242009911,0 49.954254880224994,8.841982060117516,0 49.95423417145281,8.841568999929223,0 49.95381654264659,8.839605622930321,0 49.95375096424056,8.83937495295504,0 49.95231857151512,8.835775428457055,0 49.951210595147934,8.833259516401085,0 49.95064796810658,8.831430249852929,0 49.9500128474752,8.827310376806054,0 49.949519242504806,8.823447995824523,0 49.94900837329215,8.818169408483215,0 49.94863557341978,8.816560083074279,0 49.9475861953235,8.814328485173888,0 49.946453945946494,8.812075429601379,0 49.94641252168413,8.811710649175353,0 49.95301233813149,8.805423551244445,0 49.95310898144414,8.800981813115783,0 49.95339891021844,8.80079942290277,0 49.95450683623976,8.798015289945312,0 49.954717373816415,8.79680829588861,0 49.95474843665964,8.795612030667968,0 49.954675956660964,8.794501596135802,0 49.95419275388177,8.792087608022399,0 49.95494171612277,8.791873031301208,0 49.95532482133721,8.792146616620727,0 49.956194562401365,8.791889124555297,0 49.95683995533862,8.790891342801757,0 49.95712641039451,8.790006213826842,0 49.957581973961105,8.789019160909362,0 49.958323475233655,8.786170910766941,0 49.95926218423155,8.781128357818943,0 49.95906892211046,8.780591916015965,0 49.95902750869786,8.778295945099217,0 49.95592140123064,8.773296307495457,0 49.95258038643044,8.769584130218817,0 49.95042655153455,8.763575982025458,0 49.94810692930535,8.756666611603094,0 49.94816215970436,8.755937050751044,0 49.957771284920895,8.741517495086981,0 49.95895848626439,8.741345833710028,0 49.96064260539336,8.751388024261786,0 49.95898609524966,8.756108712127997,0 49.95887565921357,8.757095765045477,0 49.959400228128835,8.75851197140534,0 49.95981435744582,8.759799431732489,0 49.96809619574408,8.75825447933994,0 49.97030444532241,8.759198616913181,0 49.9741686382908,8.757911156586033,0 49.97444464020134,8.758597802093846,0 49.97975736843787,8.759777974060398,0 49.98189609340527,8.759327362945896,0 49.98254459122235,8.760035466125828,0 49.98285946959106,8.7597368483313,0 49.98316991554748,8.75999434039673,0 49.98323890326572,8.760605884052126,0 49.98381839619305,8.760444951511232,0 49.98431509886027,8.761035037494509,0 49.98506014324478,8.761185241199342,0 49.98577758248639,8.760906291461794,0 49.98654329910248,8.760917020297853,0 49.98666746821594,8.760380578494875,0 49.98661228198287,8.75975830600342,0 49.98697788959725,8.757891488529054,0 49.988012613066005,8.756196332431642,0 49.98793673410131,8.755863738513796,0 49.993292092207646,8.755792570698787,0 49.998285496266995,8.757595015156795,0 49.99980272626717,8.757165861714412,0 50.0003820196365,8.757595015156795,0 50.002423283493556,8.756779623616268,0 50.00512644547626,8.756607962239315,0 50.00725025182523,8.755363417256405,0 50.00942912444818,8.754805517781307,0 50.01091842358343,8.755449247944881,0 50.049182301224214,8.743452323492022,0 50.05913894304469,8.777145528148395,0 50.06668746128062,8.784355305980426,0 50.06800467465507,8.819138192485724,0 50.06770166316004,8.82396616871253,0 50.06807770132477,8.82432798439217,0 50.068325618019315,8.825003901063923,0 50.06891097179635,8.825347223817829,0 50.06917265705641,8.825411596834186,0 50.070136748325304,8.825518885194782,0 50.0701505209173,8.827010193407062,0 50.06959272777753,8.827267685472492,0 50.07065321781843,8.83553961807442,0 50.071210998623734,8.835346499025349,0 50.07140416774087,8.836743216574092,0 50.073936232779715,8.83771648934595,0 50.07602945551526,8.838660626919193,0 50.07900387800023,8.839862256557865,0 50.08056722240694,8.840680069125881,0 50.083100761542376,8.84145254532217,0 50.08334860057205,8.841774410403957,0 50.08492741254222,8.842509335674038,0 50.08513049521381,8.842664903796901,0 50.08607868631057,8.83959953110758,0 50.08691164399132,8.834460418635047,0 50.08779343421183,8.828789005798626,0 50.08878468558929,8.824754963440228,0 50.09024399058544,8.821364651245432,0 50.090525363498216,8.821492078590751,0 50.09095213047077,8.822393300819755,0 50.09100719690007,8.822682979393363,0 50.09640882095173,8.818963018502956,0 50.096604972478865,8.819665757264858,0 50.096993831904285,8.820271936502223,0 50.11217681163167,8.798985301906214,0 50.113938125422486,8.800358592921839,0 50.11521942843101,8.803628713545748,0 50.11964982839633,8.806804449019381,0 50.12096843847371,8.80766614841852,0 50.121986518947494,8.808266963237855,0 50.1228670035181,8.80989774631891,0 50.1232797250855,8.812558497661684,0 50.12289451839999,8.814618434185121,0 50.12292203326604,8.816463793987367,0 50.123197181056725,8.817236270183656,0 50.12322469574879,8.818223323101137,0 50.12641629270504,8.817665423626039,0 50.12669142040987,8.818223323101137,0 50.12928849190947,8.817365016216428,0 50.134212743072176,8.809511508220908,0 50.134377792993135,8.801529254192587,0 50.13646837604697,8.790542926067587,0 50.137513633319706,8.785135592693564,0 50.13723856783036,8.779814090008017,0 50.13839383225836,8.780071582073447,0 50.13932902588707,8.784792269939658,0 50.14054001453705,8.784496040670803,0 50.14114511476699,8.783466072409084,0 50.142630328335684,8.78230735811465,0 50.1535754800216,8.782779426901271,0 50.15550024768244,8.78256485018008,0 50.15583020007308,8.78406688722842,0 50.1584422427989,8.783337326376369,0 50.15885465755254,8.78604099306338,0 50.15951451375825,8.787199707357814,0 50.158827163346295,8.789474220602443,0 50.15899212834644,8.789860458700588,0 50.15888215174293,8.790632934896877,0 50.15987193206685,8.790461273519924,0 50.16113662154801,8.790976257650783,0 50.1614940277288,8.789431305258205,0 50.16363840869707,8.790590019552639,0 50.17122544585152,8.800460548727443,0 50.172627266527776,8.795739860861147,0 50.17573311485688,8.790246696798647,0 50.179855610511744,8.789774628012026,0 50.183812871672245,8.792821617452944,0 50.18774524967272,8.792723002999992,0 50.188514615702445,8.79203635749218,0 50.197196601646944,8.790062251657105,0 50.20631648134646,8.821390452950965,0 50.20840021167392,8.828061857775708,0 50.21032277151685,8.85475520189192,0 50.224217829202246,8.860248365954448,0 50.236736390725085,8.844627180651713,0 50.24628781880627,8.843082228259135,0 50.25144698945728,8.883594313220073,0 50.275917996066944,8.925308027819682,0 50.281403043384294,8.948997297839213,0 50.29609985378827,8.975433149889994,0 50.30081503249643,8.987449446276713,0 50.31320385569571,9.030193129138041,0 50.34043430149288,9.030360868259919,0 50.369033493137515,9.032398305674747,0 50.375274158062865,9.035831533213809,0 50.37538363608576,9.05986412598736,0 50.38764357598806,9.091964803477595,0 50.4163107018737,9.11805733277447,0 50.428560061063166,9.089389882823298,0 50.438401000429685,9.10054787232525,0 50.444607937260805,9.145445894340781,0 50.424270408049146,9.243292879204063,0 50.41674475532919,9.307751726249961,0 50.41783856689898,9.339680742363242,0 50.41499460428282,9.353756975273399,0 50.379321195694146,9.354443620781211,0 50.23504141054232,9.466023515800686,0 50.23020990271532,9.496579240898342,0 50.20978039216624,9.523015092949123,0 50.17999915339515,9.509968828300686,0 50.155118411100375,9.518613909561964,0 50.14576873912996,9.509859179337354,0 50.106861454912746,9.524186609521053,0 50.09915408998494,9.512170313134334,0 50.095850553954655,9.505990503564021,0 50.09761246818392,9.496377466454646,0 50.095850553954655,9.481271265282771,0 50.0910049557353,9.452775476708553,0 50.08439653211338,9.43286275698199,0 50.083955938140406,9.414666651024959,0 50.12601438979774,9.376214502587459,0 50.13085644703369,9.376901148095271,0 50.13195684626589,9.34771871401324,0 50.14097916552506,9.327462671532771,0 50.13371743240557,9.310296533837459,0 50.14185930070402,9.280084131493709,0 50.13899880216461,9.261888025536678,0 50.14911979805772,9.22137594057574,0 50.14273941968956,9.211419580712459,0 50.13767851437947,9.183610437646053,0 50.128655572656974,9.192193506493709,0 50.124033407001285,9.186700342431209,0 50.118750385375044,9.175370691552303,0 50.11786982508587,9.154084680810115,0 50.11346678069959,9.143441675439021,0 50.125574178483916,9.122155664696834,0 50.125574178483916,9.102242944970271,0 50.11698924860077,9.089196680321834,0 50.11632880560831,9.078210352196834,0 50.11831010725494,9.071343897118709,0 50.11632880560831,9.052117822899959,0 50.112586123233655,9.029801843896053,0 50.11170544957124,9.020188806786678,0 50.09320756112447,8.998216150536678,0 50.07949469607378,8.99941778017535,0 50.078503252565355,8.998301981225154,0 50.069799701897765,8.999503610863826,0 50.069083516630094,8.99864530397906,0 50.068808057910076,8.99641370607867,0 50.065502429864196,8.99040555788531,0 50.056649591833974,8.982507682601181,0 50.05157958417609,8.976842857161728,0 50.04573738943162,8.9780444868004,0 50.041878946410264,8.987142539778915,0 50.0454066778966,9.006711936751572,0 50.045627152506455,9.012720084944931,0 50.04441452962,9.01872823313829,0 50.04287114709482,9.026109672347275,0 50.038902221309996,9.031431175032822,0 50.03603557084246,9.032289481917587,0 50.03239688338311,9.031774497786728,0 50.02699347514931,9.030401206771103,0 50.021037994565475,9.030916190901962,0 50.015853919721614,9.033834434310165,0 50.0107796027006,9.038297630110947,0 50.007580301366,9.042932487288681,0 50.00327745688426,9.053060508528915,0 50.00007765616361,9.058210349837509,0 49.99389812790324,9.063531852523056,0 49.98970442426975,9.052030540267197,0 49.98683483738531,9.046022392073837,0 49.98871112510759,9.025938010970322,0 49.98683483738531,8.960363364974228,0 49.969591302596605,8.908376108388524,0 49.94639928497898,8.891553293447117,0 49.94585146164708,8.891355032112727,0 49.95904181908018,8.850935273809228,0");
		var hr_coord_406417 = makeNimstrLit("8.74344999062572,50.04918999904961,0 8.751160000623477,50.0240599912103,0 8.754709994364463,50.01274999536513,0 8.757490069155791,50.00470163525198,0 8.762733428456755,50.00328437886608,0 8.764625619546589,50.00285518138227,0 8.770820082372893,50.00139911723744,0 8.772673791350965,50.00094266817716,0 8.77914111075552,49.99943225272401,0 8.799229992240086,49.99467000542582,0 8.806542356164457,49.99340340620989,0 8.809790356707138,49.99206374565822,0 8.826786125387034,49.98576635583486,0 8.828778769472731,49.98395187720181,0 8.831507689809753,49.98097186169272,0 8.830959149889964,49.97966245881608,0 8.829928960125969,49.9778595543125,0 8.830465197667758,49.9768960693446,0 8.830997048231009,49.97595153004782,0 8.83394675737425,49.97397788936575,0 8.836460977629683,49.97217362668664,0 8.83910802473485,49.96908500881526,0 8.840122212590229,49.96799437118023,0 8.841363208739749,49.9668289258026,0 8.842263170839054,49.96603842183582,0 8.843115976927399,49.96501359037988,0 8.846351833332184,49.9627537294549,0 8.849460013049532,49.95986999442856,0 8.850210000098501,49.95926998619805,0 8.850310012566743,49.95926999267505,0 8.865430008710506,49.95390999382382,0 8.891260000848778,49.94599000213314,0 8.908000004981322,49.96970998840088,0 8.960089986326672,49.98685999774121,0 9.028550004173386,49.98896999905399,0 9.051090005623092,49.98967000446294,0 9.063509599805697,49.99349370576994,0 9.058420003685276,50.00014000125238,0 9.053349983587822,50.00350000123728,0 9.043370001095513,50.00774999264858,0 9.039590003958708,50.01043999620001,0 9.037680002386232,50.0117099996073,0 9.035770000347792,50.01386000058577,0 9.035669991374673,50.01396999599814,0 9.033520003630585,50.01612999279517,0 9.03276999394412,50.01722999549925,0 9.031890007343058,50.01854999140686,0 9.031080010354554,50.02017000106182,0 9.030590017083911,50.02186000123651,0 9.030160003507783,50.02427999548287,0 9.030019994132037,50.02558000112721,0 9.03012998938997,50.02655999787962,0 9.030250000259972,50.02768999624666,0 9.03161000235999,50.03279999301565,0 9.032170004807355,50.0358999942769,0 9.032050012345229,50.03739999588439,0 9.031490007969513,50.03882000226924,0 9.030510014244126,50.04000000228209,0 9.029080001550227,50.04103999783368,0 9.029060008563725,50.04106000232493,0 9.028230008798136,50.04156999577097,0 9.026240009262718,50.04279999711334,0 9.024160016072742,50.04365000084064,0 9.023260013005588,50.04386000537015,0 9.019740018159242,50.04436999886058,0 9.017760016210493,50.04465999781608,0 9.013460007365307,50.04553999270155,0 9.011000004708681,50.04575999839583,0 9.00992999888183,50.04561998877342,0 9.008480008624115,50.04557998927629,0 9.005680013424682,50.04550000056366,0 8.986750005661659,50.04149000275402,0 8.978420013141989,50.04530999078934,0 8.976519982950132,50.0514200003693,0 8.982709988738773,50.05690999839843,0 8.986820008613575,50.06226000595279,0 8.987800012679832,50.06321000762544,0 8.989760009887313,50.06513000580236,0 8.990918897321578,50.0669106073983,0 8.9955775301496,50.06892022836311,0 8.998568988963262,50.06893433107653,0 8.999404770882135,50.06967750682338,0 8.99907863971808,50.070980702649,0 8.998540008233778,50.07845000669163,0 8.999480727122569,50.07942879191786,0 8.998936147196799,50.08570047236539,0 8.997979981825159,50.09309999923527,0 9.009470009726822,50.10552999340482,0 9.014060011409995,50.1093099951841,0 9.018390009198136,50.11148999968705,0 9.022280002796611,50.11211998982098,0 9.030180002730933,50.11276999957308,0 9.036709983650752,50.11439000225139,0 9.03690999604585,50.11440999933917,0 9.03949998805237,50.11470999733926,0 9.041409993836245,50.11494000056713,0 9.043569987178085,50.11518999631258,0 9.047210001617215,50.1158499945509,0 9.05294999694393,50.11569999345475,0 9.055779984887241,50.11657998906307,0 9.062110001201511,50.11675000135271,0 9.065399990762362,50.11700000561905,0 9.071007549127517,50.11922371673292,0 9.076630005563471,50.1161700007584,0 9.077190003068765,50.115860002529,0 9.090149996865359,50.11705999751791,0 9.097210008411061,50.12491999822693,0 9.097229998645521,50.12493000896303,0 9.097450000598039,50.12500001156322,0 9.100480005609697,50.12522999907779,0 9.101720017827175,50.12503999964554,0 9.104050013666759,50.12524999543405,0 9.106250000414615,50.1255599977141,0 9.106320013833074,50.12556999995883,0 9.11103000773252,50.12645000491829,0 9.112480002104718,50.12650000158009,0 9.118190018941625,50.12683999405951,0 9.11824001589531,50.12684999758118,0 9.119370021092625,50.12667000066124,0 9.120230000806123,50.12640000226687,0 9.121240007930481,50.12608999931724,0 9.122669997795143,50.1251799912294,0 9.125470008557192,50.12341000006478,0 9.129070017631035,50.12185001116103,0 9.134449996804847,50.11918999923478,0 9.134810008978569,50.11920999602372,0 9.134890001642818,50.11917000907523,0 9.138790008249355,50.11738000700088,0 9.143799995794254,50.11436000115628,0 9.153480013609004,50.1177800012857,0 9.174246170565004,50.11909431140469,0 9.178573419936008,50.12093255348469,0 9.187279993149794,50.12424999394975,0 9.190869996641968,50.12840999555607,0 9.190140006470225,50.12852999126118,0 9.189239992099489,50.12886999244492,0 9.18859001078415,50.13008000182714,0 9.188529991233642,50.13068000290921,0 9.188270001636816,50.13122999393559,0 9.187689999246999,50.13169000225765,0 9.186230008527531,50.13220000137167,0 9.184630011698792,50.13358999951587,0 9.184889997736651,50.13418000049787,0 9.184539995171448,50.13461999983619,0 9.183930004443509,50.13530000248941,0 9.183950002803973,50.135519998149,0 9.183550012978392,50.13613999783406,0 9.183569996231322,50.13690999406499,0 9.18340000738119,50.13743999921365,0 9.183380014260379,50.13787000106181,0 9.190900001716518,50.139159993859,0 9.193700011750751,50.13930999759451,0 9.19464001127551,50.13981000038044,0 9.195470000586393,50.14028998889953,0 9.196120007766066,50.14010998828039,0 9.196500004917223,50.14001998961674,0 9.197040001756861,50.14030999242293,0 9.199190010294648,50.14073999922731,0 9.200440003999781,50.14084998669727,0 9.201030013515277,50.14057999207999,0 9.203099982949214,50.14095000662204,0 9.205299986371029,50.14180000860304,0 9.206359985346644,50.142070008102,0 9.207580000543322,50.14207999782826,0 9.209859987405412,50.14242999853374,0 9.210280003353484,50.1423899976447,0 9.210799991009644,50.14220999766564,0 9.21077998816282,50.1435000057295,0 9.211479992867652,50.14477000460019,0 9.214099996581536,50.14445000468506,0 9.218959999344854,50.14661000455769,0 9.221479995862085,50.14939999389495,0 9.225630001631478,50.14855000094843,0 9.23032000616189,50.14765999014259,0 9.232970002625747,50.14675999789494,0 9.233769992622126,50.14662999691726,0 9.235819988502438,50.14626998818617,0 9.240770008871321,50.14369999990418,0 9.250599997697448,50.14088999946022,0 9.253009998704444,50.13936000061953,0 9.257409988922282,50.13877999779094,0 9.258539987369192,50.13882999185971,0 9.261029985191303,50.13894999352718,0 9.26667000168456,50.13956998800712,0 9.270219998473655,50.14184999133448,0 9.271399995864714,50.14201999982645,0 9.276349996686779,50.14272000476213,0 9.281169993334959,50.14154000700376,0 9.281790004285499,50.14151999702619,0 9.28505000417664,50.14177000501881,0 9.294040000079619,50.13933999639883,0 9.298069993519123,50.13708999386204,0 9.304220003766982,50.13527001045085,0 9.307460002912588,50.13401000172517,0 9.3099899963248,50.13394000197258,0 9.313210010638157,50.13483999891268,0 9.317820007007097,50.13657000315733,0 9.32087000656426,50.13792000208673,0 9.327880001083775,50.14102000396739,0 9.332359997806428,50.13920999562789,0 9.335839993928891,50.13698998995007,0 9.336390008811645,50.13671999110127,0 9.339360000403303,50.13273000018819,0 9.341829993133189,50.1314900069315,0 9.349580011888042,50.13060000490764,0 9.357900000002719,50.1309800011009,0 9.364500003588615,50.1308599976779,0 9.373790012600809,50.13085001035299,0 9.374940014378062,50.13078000272372,0 9.376428136780461,50.13060459037479,0 9.375980001360301,50.12583000875451,0 9.380379996288745,50.12133000326065,0 9.382299998223088,50.11936999839725,0 9.384039990002806,50.11687999723922,0 9.386960003003646,50.1104799943284,0 9.392690004434337,50.10208999192354,0 9.39389999043634,50.09908999048587,0 9.39441999471242,50.09769998717655,0 9.395280005887983,50.09654000569314,0 9.398049991407143,50.09346000849757,0 9.399579989575344,50.09215000204925,0 9.401979985879303,50.08986000850655,0 9.404899991283124,50.08774999576386,0 9.408080014793335,50.08628000072305,0 9.410360008182412,50.08474000191088,0 9.412109999917282,50.08400999347561,0 9.414540018844249,50.08372999722369,0 9.416490008385686,50.08366999838898,0 9.419320007524787,50.08447000100686,0 9.421189997530622,50.08477000057801,0 9.421729983690359,50.0848199989533,0 9.422609992020972,50.0848999888351,0 9.424210000439418,50.08487999332674,0 9.426209991743331,50.08466000872539,0 9.426650001161059,50.08445000438933,0 9.427099982830001,50.08406000313204,0 9.427139990696315,50.08406000087415,0 9.427652721408091,50.08399998652941,0 9.433353179705726,50.08402470953537,0 9.435354143826626,50.08505389047933,0 9.436088619491672,50.08522879361796,0 9.438430526576967,50.08697187563428,0 9.440104382080714,50.08699613917442,0 9.445369991346254,50.08990999762638,0 9.447630008726817,50.08999999740072,0 9.450919994621692,50.09031000114513,0 9.452070007349786,50.0907899928403,0 9.454410007723135,50.09108999360934,0 9.460950000938215,50.09060999515631,0 9.462300008199286,50.0910400032701,0 9.463400013428359,50.09106000139991,0 9.464200003484436,50.09124000726924,0 9.465530012619313,50.09153000694008,0 9.468800008351925,50.09136999634158,0 9.470470017914517,50.09143000256835,0 9.472329999587991,50.09161000390467,0 9.473620019051696,50.09215000133324,0 9.474920003056653,50.09292999912699,0 9.476870017014669,50.09377000009614,0 9.478919993936698,50.09430999575569,0 9.481419984146658,50.0947799948108,0 9.483559984403359,50.09436999910113,0 9.485509981915525,50.09412999558609,0 9.48570999585527,50.09412000396971,0 9.487359987494594,50.09400999892856,0 9.490429987404328,50.09412999491645,0 9.493209983692267,50.09459999267533,0 9.495159986345893,50.09531999217066,0 9.496829992324216,50.09657999894574,0 9.498319988002368,50.09723999301944,0 9.49989998994757,50.09718000287389,0 9.501569988519432,50.09664000069188,0 9.502680008048856,50.09603999797577,0 9.504629999438921,50.09574000956214,0 9.506760006872188,50.09622000084823,0 9.507140003812562,50.09742000406875,0 9.507229996886643,50.09819000714014,0 9.50669001130621,50.09907000222062,0 9.507150006893196,50.09931999902311,0 9.50923999463094,50.09956000551333,0 9.512149998788429,50.09941000120356,0 9.512820008669731,50.0990800014653,0 9.513100009864747,50.09966999606637,0 9.518980005320945,50.10612000219624,0 9.523749987770032,50.10609999798064,0 9.509789996972424,50.14568999412518,0 9.510159999038692,50.17993000361417,0 9.523900010995279,50.20862999333181,0 9.497610010511844,50.23025999464183,0 9.465759992135864,50.23500999995167,0 9.427309998664841,50.28948999496187,0 9.39269000551494,50.33608999941583,0 9.354189991318192,50.3790699957637,0 9.352780014398681,50.43896001016936,0 9.340660001490294,50.4547299998002,0 9.312470000603268,50.45978998838441,0 9.299499989859983,50.45929999898711,0 9.289360011907432,50.45382000673616,0 9.262010012800003,50.40678999774384,0 9.261579990204883,50.37911000208434,0 9.163230003564165,50.3586100105654,0 9.131989998719183,50.34574999621018,0 9.062800000324119,50.32285000000135,0 9.054520002404079,50.31968000467632,0 9.043719996102452,50.32165000058219,0 9.029761680801087,50.32841918451295,0 9.031495109187416,50.31272183455483,0 8.995839452582921,50.30250677011594,0 8.987631336027818,50.30006956026648,0 8.975659492935346,50.29547621167906,0 8.958677331367527,50.28630458701393,0 8.94929415829554,50.28125262914848,0 8.925608601416379,50.27595619488345,0 8.912707196248872,50.26838770369456,0 8.900321281931532,50.26109642163877,0 8.883946027953995,50.2514976812132,0 8.857519269942278,50.24799938088881,0 8.843243933535447,50.24615324039392,0 8.843337919829239,50.24519622029486,0 8.844352709690199,50.23641778130721,0 8.848844132593994,50.23205190395576,0 8.859845616898108,50.22335260208263,0 8.858916319673716,50.22092275483271,0 8.854913957622637,50.21029795607451,0 8.828012506624319,50.20845601508016,0 8.792170003634453,50.19689999140842,0 8.792079997664727,50.19360999114326,0 8.792090007857588,50.19360999589294,0 8.792080005707826,50.1933399969401,0 8.792139995449546,50.18931998969914,0 8.792109992014069,50.18893999697589,0 8.792080000426376,50.18849999434099,0 8.792679986357536,50.18761999891223,0 8.792780002183326,50.18624999797653,0 8.792809992943038,50.1838499994514,0 8.78973001669163,50.17977998885446,0 8.789990009297167,50.17618999887759,0 8.790029994197257,50.17608999350487,0 8.790400013363707,50.1756399975125,0 8.795660002988884,50.17271001146669,0 8.800430009638776,50.17120000991109,0 8.800030003318794,50.17109000869478,0 8.80016999786298,50.17019999937831,0 8.800160007579409,50.16933000575472,0 8.798210009160762,50.16943000004811,0 8.798119992086578,50.16853000305719,0 8.797839987310598,50.16741000349072,0 8.795570001629894,50.16727000126137,0 8.794420002285929,50.16686998641285,0 8.794869986905674,50.16460000764227,0 8.794839990093175,50.16445000317964,0 8.795069987661732,50.1639400006493,0 8.794959989515347,50.16379001174276,0 8.794649984336918,50.1638499933831,0 8.793969990776221,50.1630399881526,0 8.791709999964247,50.16336999710949,0 8.790470002191894,50.16343999740508,0 8.790340002022822,50.16295999319533,0 8.789559999991919,50.16145999765807,0 8.790999987988663,50.16111999166834,0 8.790610009406777,50.15989999880812,0 8.790650015217244,50.1588999906634,0 8.789859999743616,50.15894999130114,0 8.789490009437273,50.1588699891094,0 8.787180014898484,50.1593899986436,0 8.786940002233044,50.15923998964287,0 8.786050003904881,50.15883999909401,0 8.785669999219367,50.15878999189965,0 8.785020015562498,50.15871999044146,0 8.783420004936072,50.15842000281186,0 8.783420004789116,50.15770999268128,0 8.783470016746801,50.15722999454914,0 8.783580009619461,50.15699999220811,0 8.784100012663544,50.15583999017743,0 8.782219996826949,50.15551999603872,0 8.782360012243217,50.15504999142234,0 8.782400002741433,50.15412000308445,0 8.782440000873432,50.1538799934948,0 8.782640002335953,50.15348999380655,0 8.782690004419679,50.15288999409114,0 8.782599997613589,50.15168999527978,0 8.782499994394218,50.15002000083744,0 8.782429997799444,50.14841999909195,0 8.782339993684557,50.14642999456324,0 8.782259999824177,50.14484999042134,0 8.782299991382095,50.14447000212288,0 8.782329990151951,50.14413999428914,0 8.782350006299202,50.14389999847396,0 8.782369988407282,50.14374000265145,0 8.78239000173469,50.14349999358076,0 8.782439996314656,50.14299999406526,0 8.782439988694478,50.1429199972104,0 8.782470000856153,50.14267999368212,0 8.782480003228939,50.14251999070935,0 8.782579988275536,50.14241999306769,0 8.783599991220438,50.14111999489931,0 8.784448782893042,50.1405347806952,0 8.784710985537078,50.14005921419489,0 8.784836043163592,50.13976715250182,0 8.784909988556111,50.13939000291317,0 8.784920000629107,50.13928999326227,0 8.784719982911794,50.13919999095377,0 8.77993000857648,50.13822000388137,0 8.779900001379451,50.13804999861398,0 8.779870002850776,50.13781999822846,0 8.779780007883684,50.13723999143221,0 8.781680019517596,50.13739999790258,0 8.785470012109293,50.13728999853527,0 8.790470012031696,50.13658999710204,0 8.795220001648541,50.13552000122132,0 8.796740008487991,50.13528000323189,0 8.79849000489105,50.13476000552564,0 8.801570014121655,50.13428000627525,0 8.809370015405136,50.13413999475548,0 8.806000008358936,50.12600000470178,0 8.800339551601194,50.11398120331311,0 8.798730684364719,50.11222326889193,0 8.803275711144671,50.10682728967874,0 8.806256200740775,50.10212970751106,0 8.809628959422538,50.09681686079544,0 8.812426567410549,50.0923736430835,0 8.814529068369041,50.08870301933311,0 8.815564740819466,50.08674190292712,0 8.816983190135087,50.08430003950284,0 8.816736771584527,50.08396773922301,0 8.819257293064814,50.08161630263398,0 8.825500005361317,50.07011000106249,0 8.825430011347251,50.06916000981824,0 8.825340007617122,50.06887000547547,0 8.825010007651045,50.06831000400231,0 8.824340007935508,50.06807000324666,0 8.824190003312365,50.0678600107172,0 8.823980000479738,50.06767000416784,0 8.823560009647329,50.06769000265334,0 8.819140000891526,50.06794999086822,0 8.784360013267232,50.06681998757962,0 8.778350008752462,50.05852000117123,0 8.769430002590275,50.05571000525481,0 8.74344999062572,50.04918999904961,0");
		show_border_405980(hr_coord_406417, makeNimstrLit("rgba(0, 0, 255, 1)"), false);
		show_border_405980(hr_coord_real_406416, makeNimstrLit("rgba(255, 0, 0, 1)"), true);
		show_border_district_406601(makeNimstrLit("63110 Rodgau Rollwald,63322 R\xC3\xB6dermark Waldacker,63128 Dietzenbach ,63150 Heusenstamm ,63179 Obertshausen ,63073 Offenbach am Main Bieber,63075 Offenbach am Main Waldheim,63075 Offenbach am Main Biebernsee,63477 Maintal Bischofsheim,61138 Niederdorfelden ,61137 Sch\xC3\xB6neck Oberdorfelden,61137 Sch\xC3\xB6neck Kilianst\xC3\xA4dten,61130 Nidderau Heldenbergen,61130 Nidderau Eichen,63674 Altenstadt H\xC3\xB6chst,63674 Altenstadt Oberau,63674 Altenstadt Waldsiedlung,63674 Altenstadt Lindheim,63674 Altenstadt Enzheim,63654 B\xC3\xBCdingen D\xC3\xBCdelsheim,63654 B\xC3\xBCdingen Rohrbach,63654 B\xC3\xBCdingen Aulendiebach,63654 B\xC3\xBCdingen Dudenrod,63699 Kefenrod Bindsachsen,63699 Kefenrod ,63699 Kefenrod Burgbracht,63633 Birstein B\xC3\xB6ssges\xC3\xA4\xC3\x9F,63633 Birstein Illnhausen,63633 Birstein Kirchbracht,63633 Birstein V\xC3\xB6lzberg,63633 Birstein Lichenroth,63633 Birstein Wettges,63628 Bad Soden-Salm\xC3\xBCnster Sch\xC3\xB6nhof,63628 Bad Soden-Salm\xC3\xBCnster Kerbersdorf,63628 Bad Soden-Salm\xC3\xBCnster Ahl,63628 Bad Soden-Salm\xC3\xBCnster Alsberg,63637 Jossgrund Burgjo\xC3\x9F,63637 Jossgrund Oberndorf,63637 Jossgrund Pfaffenhausen,63639 Fl\xC3\xB6rsbachtal Lohrhaupten,63639 Fl\xC3\xB6rsbachtal Kempfenbrunn,63639 Fl\xC3\xB6rsbachtal Mosborn,63639 Fl\xC3\xB6rsbachtal Fl\xC3\xB6rsbach,63599 Biebergem\xC3\xBCnd Ro\xC3\x9Fbach,63599 Biebergem\xC3\xBCnd L\xC3\xBCtzel,63589 Linsengericht Waldrode,63579 Freigericht Horbach,63579 Freigericht Neuses,63579 Freigericht Somborn,63538 Gro\xC3\x9Fkrotzenburg ,63512 Hainburg Klein-Krotzenburg,63500 Seligenstadt ,63533 Mainhausen Mainflingen,63533 Mainhausen Zellhausen,63110 Rodgau Nieder-Roden,63517 Rodenbach Oberrodenbach,63599 Biebergem\xC3\xBCnd Bieber"), makeNimstrLit("rgba(0, 0, 255, 1)"), makeNimstrLit("rgba(0, 0, 255, 0.1)"));
		show_border_district_406601(makeNimstrLit("63688 Gedern Ober-Seemen, Hirzenhain, Merkenfritz, Eckartsborn, Bobenhausen, Wippenbach, Selters (Ortenberg), Bleichenbach, 63654 Rohrbach, Enzheim, Lindheim, Oberau, 63674 H\xC3\xB6chst, Eichen, Nidderau Heldenbergen, Windecken, Sch\xC3\xB6neck, Niederdorfelden, Wettges, Sch\xC3\xB6nhof, Alsberg, Burgioss, Jossgrund, Lohrhaupten, Kempfenbrunn, Mosborn, L\xC3\xBCtzel, Waldrode, Horbach, Neuses, Rodenbach, Gro\xC3\x9Fkrotzenburg, Froschhausen, Mainhausen, Zellhausen, R\xC3\xB6dermark, Waldacker, Dietzenbach, Heusenstamm, Obertshausen, Waldheim, M\xC3\xBChlheim, 63477 Bischofsheim, Niederdorfelden"), makeNimstrLit("rgba(255, 0, 0, 1)"), makeNimstrLit("rgba(255, 0, 0, 0.1)"));

	
}

function HEX3Aanonymous_445616(e_445618) {
		map.getViewPort().resize();

	
}
map.addEventListener("tap", load_links_343793, false);
geo_area_406414();
window.addEventListener("resize", HEX3Aanonymous_445616, false);

function HEX21HEX26_227244(h_227246, val_227247) {
	var result_227248 = 0;

		var h_227249 = (h_227246 >>> 0);
		var val_227250 = (val_227247 >>> 0);
		var res_227256 = ((h_227249 + val_227250) >>> 0);
		res_227256 = ((res_227256 + (res_227256 << 10)) >>> 0);
		res_227256 = (res_227256 ^ ((res_227256 >>> 0) >>> 6));
		result_227248 = (res_227256|0);

	return result_227248;

}

function HEX21HEX24_227294(h_227296) {
	var result_227297 = 0;

		var h_227298 = (h_227296 >>> 0);
		var res_227311 = ((h_227298 + (h_227298 << 3)) >>> 0);
		res_227311 = (res_227311 ^ ((res_227311 >>> 0) >>> 11));
		res_227311 = ((res_227311 + (res_227311 << 15)) >>> 0);
		result_227297 = (res_227311|0);

	return result_227297;

}

function hash_345248(x_345250) {
	var result_345251 = 0;

		result_345251 = HEX21HEX26_227244(hash_229014(id_343824(x_345250)), hash_229014(name_343796(x_345250)));
		result_345251 = HEX21HEX24_227294(result_345251);

	return result_345251;

}

function raw_get_400590(t_400594, key_400595, hc_400596, hc_400596_Idx) {
						var Tmp3;

	var result_400597 = 0;

	BeforeRet: do {
		hc_400596[hc_400596_Idx] = hash_345248(key_400595);
		if ((hc_400596[hc_400596_Idx] == 0)) {
		hc_400596[hc_400596_Idx] = 314159265;
		}
		
		if (((t_400594.data != null ? t_400594.data.length : 0) == 0)) {
		result_400597 = -1;
		break BeforeRet;
		}
		
		var h_400737 = (hc_400596[hc_400596_Idx] & (t_400594.data != null ? (t_400594.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_232018(t_400594.data[chckIndx(h_400737, 0, t_400594.data.length+0-1)-0].Field0)) break L2;
						if (!(t_400594.data[chckIndx(h_400737, 0, t_400594.data.length+0-1)-0].Field0 == hc_400596[hc_400596_Idx])) Tmp3 = false; else {							Tmp3 = (t_400594.data[chckIndx(h_400737, 0, t_400594.data.length+0-1)-0].Field1 == key_400595);						}					if (Tmp3) {
					result_400597 = h_400737;
					break BeforeRet;
					}
					
					h_400737 = next_try_232035(h_400737, (t_400594.data != null ? (t_400594.data.length-1) : -1));
				}
		} while(false);
		result_400597 = subInt(-1, h_400737);
	} while (false);

	return result_400597;

}

function HEX5BHEX5D_400578(t_400584, key_400585) {
	var result_400587 = null;
	var result_400587_Idx = 0;

		var hc_400588 = [0];
		var index_400589 = raw_get_400590(t_400584, key_400585, hc_400588, 0);
		if ((0 <= index_400589)) {
		result_400587 = t_400584.data[chckIndx(index_400589, 0, t_400584.data.length+0-1)-0]; result_400587_Idx = "Field2";
		}
		else {
			var e_401402 = null;
			e_401402 = {m_type: NTI48454, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			e_401402.message = nimCopy(null, makeNimstrLit("key not found"), NTI45040);
			e_401402.parent = null;
			raiseException(e_401402, "KeyError");
		}
		

	return [result_400587, result_400587_Idx];

}

function raw_insert_404122(t_404128, data_404131, data_404131_Idx, key_404132, val_404133, hc_404134, h_404135) {
		data_404131[data_404131_Idx][chckIndx(h_404135, 0, data_404131[data_404131_Idx].length+0-1)-0].Field1 = key_404132;
		data_404131[data_404131_Idx][chckIndx(h_404135, 0, data_404131[data_404131_Idx].length+0-1)-0].Field2 = val_404133;
		data_404131[data_404131_Idx][chckIndx(h_404135, 0, data_404131[data_404131_Idx].length+0-1)-0].Field0 = hc_404134;

	
}

function enlarge_403148(t_403154) {
		var n_403162 = null;
		n_403162 = new Array(chckRange(mulInt((t_403154.data != null ? t_403154.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_403154.data != null ? t_403154.data.length : 0), 2), 0, 2147483647);++i) {n_403162[i]={Field0: 0, Field1: null, Field2: null};}		var Tmp1 = t_403154.data; t_403154.data = n_403162; n_403162 = Tmp1;		L2: do {
			var i_403321 = 0;
			var colontmp__446773 = 0;
			colontmp__446773 = (n_403162 != null ? (n_403162.length-1) : -1);
			var res_446774 = 0;
			L3: do {
					L4: while (true) {
					if (!(res_446774 <= colontmp__446773)) break L4;
						i_403321 = res_446774;
						var eh_403477 = n_403162[chckIndx(i_403321, 0, n_403162.length+0-1)-0].Field0;
						if (is_filled_232018(eh_403477)) {
						var j_403484 = (eh_403477 & (t_403154.data != null ? (t_403154.data.length-1) : -1));
						L5: do {
								L6: while (true) {
								if (!is_filled_232018(t_403154.data[chckIndx(j_403484, 0, t_403154.data.length+0-1)-0].Field0)) break L6;
									j_403484 = next_try_232035(j_403484, (t_403154.data != null ? (t_403154.data.length-1) : -1));
								}
						} while(false);
						raw_insert_404122(t_403154, t_403154, "data", n_403162[chckIndx(i_403321, 0, n_403162.length+0-1)-0].Field1, n_403162[chckIndx(i_403321, 0, n_403162.length+0-1)-0].Field2, eh_403477, j_403484);
						}
						
						res_446774 = addInt(res_446774, 1);
					}
			} while(false);
		} while(false);

	
}

function raw_get_known_hc_404628(t_404632, key_404633, hc_404634) {
	var result_404635 = 0;

	BeforeRet: do {
		if (((t_404632.data != null ? t_404632.data.length : 0) == 0)) {
		result_404635 = -1;
		break BeforeRet;
		}
		
		var h_404774 = (hc_404634 & (t_404632.data != null ? (t_404632.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_232018(t_404632.data[chckIndx(h_404774, 0, t_404632.data.length+0-1)-0].Field0)) break L2;
					if (((t_404632.data[chckIndx(h_404774, 0, t_404632.data.length+0-1)-0].Field0 == hc_404634) && (t_404632.data[chckIndx(h_404774, 0, t_404632.data.length+0-1)-0].Field1 == key_404633))) {
					result_404635 = h_404774;
					break BeforeRet;
					}
					
					h_404774 = next_try_232035(h_404774, (t_404632.data != null ? (t_404632.data.length-1) : -1));
				}
		} while(false);
		result_404635 = subInt(-1, h_404774);
	} while (false);

	return result_404635;

}

function HEX5BHEX5DHEX3D_401917(t_401923, key_401924, val_401925) {
		if (((t_401923.data != null ? t_401923.data.length : 0) == 0)) {
		if (!(is_power_of_two_109062(64))) {
		failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_401923.counter = 0;
		t_401923.data = new Array(64); for (var i=0;i<64;++i) {t_401923.data[i]={Field0: 0, Field1: null, Field2: null};}		}
		
		var hc_402401 = [0];
		var index_402410 = raw_get_400590(t_401923, key_401924, hc_402401, 0);
		if ((0 <= index_402410)) {
		t_401923.data[chckIndx(index_402410, 0, t_401923.data.length+0-1)-0].Field2 = val_401925;
		}
		else {
			if (((t_401923.data != null ? t_401923.data.length : 0) == 0)) {
			if (!(is_power_of_two_109062(64))) {
			failed_assert_impl_60066(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			t_401923.counter = 0;
			t_401923.data = new Array(64); for (var i=0;i<64;++i) {t_401923.data[i]={Field0: 0, Field1: null, Field2: null};}			}
			
			if (must_rehash_232053((t_401923.data != null ? t_401923.data.length : 0), t_401923.counter)) {
			enlarge_403148(t_401923);
			index_402410 = raw_get_known_hc_404628(t_401923, key_401924, hc_402401[0]);
			}
			
			index_402410 = subInt(-1, index_402410);
			raw_insert_404122(t_401923, t_401923, "data", key_401924, val_401925, hc_402401[0], index_402410);
			t_401923.counter = addInt(t_401923.counter, 1);
		}
		

	
}

function display_sector_366233(sect_name_366235, show_366236) {
		var Tmp1;
		var Tmp2;
		var Tmp3;
		var Tmp4;
										var Tmp14;
		var Tmp15;

	BeforeRet: do {
		var sector_400426 = (Tmp1 = HEX5BHEX5D_372597(all_sectors_342829[0], sect_name_366235), Tmp1)[0][Tmp1[1]];
		if (!(show_366236)) {
		main_sector_group_388735[0].removeObject((Tmp2 = HEX5BHEX5D_400578(sector_grp_343629[0], sector_400426), Tmp2)[0][Tmp2[1]]);
		(Tmp3 = HEX5BHEX5D_400578(sector_grp_343629[0], sector_400426), Tmp3)[0][Tmp3[1]].removeAll();
		sector_400426.shownOnMap = false;
		break BeforeRet;
		}
		
		HEX5BHEX5DHEX3D_401917(sector_grp_343629[0], sector_400426, function(){return new H.map.Group()}());
		(Tmp4 = HEX5BHEX5D_400578(sector_grp_343629[0], sector_400426), Tmp4)[0][Tmp4[1]].setZIndex(-99);
		sector_400426.shownOnMap = true;
		L5: do {
			var n_405485 = null;
			var links_405486 = null;
			var colontmp__446760 = {data: null, counter: 0, first: 0, last: 0};
			nimCopy(colontmp__446760, sector_400426.streets, NTI341066);
			var l_446761 = len_356748(colontmp__446760);
			if ((0 < colontmp__446760.counter)) {
			var h_446762 = colontmp__446760.first;
			L6: do {
					L7: while (true) {
					if (!(0 <= h_446762)) break L7;
						var nxt_446764 = colontmp__446760.data[chckIndx(h_446762, 0, colontmp__446760.data.length+0-1)-0].Field1;
						if (is_filled_232018(colontmp__446760.data[chckIndx(h_446762, 0, colontmp__446760.data.length+0-1)-0].Field0)) {
						n_405485 = colontmp__446760.data[chckIndx(h_446762, 0, colontmp__446760.data.length+0-1)-0].Field2;
						links_405486 = colontmp__446760.data[chckIndx(h_446762, 0, colontmp__446760.data.length+0-1)-0].Field3;
						L8: do {
							var link_405493 = null;
							var i_446757 = 0;
							var l_446758 = (links_405486 != null ? links_405486.length : 0);
							L9: do {
									L10: while (true) {
									if (!(i_446757 < l_446758)) break L10;
										link_405493 = links_405486[chckIndx(i_446757, 0, links_405486.length+0-1)-0];
										var ln_str_405494 = function(){return new H.geo.LineString();}();
										L11: do {
											var c_405501 = null;
											var colontmp__446751 = null;
											colontmp__446751 = link_405493.geometry;
											var i_446752 = 0;
											var l_446753 = (colontmp__446751 != null ? colontmp__446751.length : 0);
											L12: do {
													L13: while (true) {
													if (!(i_446752 < l_446753)) break L13;
														c_405501 = colontmp__446751[chckIndx(i_446752, 0, colontmp__446751.length+0-1)-0];
														ln_str_405494.pushLatLngAlt(c_405501.lat, c_405501.lng, 1.0000000000000000e+000);
														i_446752 = addInt(i_446752, 1);
														if (!(((colontmp__446751 != null ? colontmp__446751.length : 0) == l_446753))) {
														failed_assert_impl_60066(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
														}
														
													}
											} while(false);
										} while(false);
										var p_opt_405505 = {style: {strokeColor: "rgba(255, 0, 0, 0.2)", fillColor: "rgba(255, 0, 0, 0.4)", lineWidth: 10, m_type: NTI247076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, zIndex: -99, m_type: NTI247081};
										var pl_405506 = function(ls, options){return new H.map.Polyline(ls, options)}(ln_str_405494, p_opt_405505);
										(Tmp14 = HEX5BHEX5D_400578(sector_grp_343629[0], sector_400426), Tmp14)[0][Tmp14[1]].addObject(pl_405506);
										i_446757 = addInt(i_446757, 1);
										if (!(((links_405486 != null ? links_405486.length : 0) == l_446758))) {
										failed_assert_impl_60066(makeNimstrLit("iterators.nim(189, 11) `len(a) == L` the length of the seq changed while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						if (!((len_356748(colontmp__446760) == l_446761))) {
						failed_assert_impl_60066(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
						}
						
						}
						
						h_446762 = nxt_446764;
					}
			} while(false);
			}
			
		} while(false);
		main_sector_group_388735[0].addObject((Tmp15 = HEX5BHEX5D_400578(sector_grp_343629[0], sector_400426), Tmp15)[0][Tmp15[1]]);
	} while (false);

	
}

function sys_fatal_69241(message_69245) {
		var e_69403 = null;
		e_69403 = {m_type: NTI48486, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_69403.message = nimCopy(null, message_69245, NTI45040);
		raiseException(e_69403, "NilAccessError");

	
}

function chckNilDisp(p_69239, p_69239_Idx) {
		if ((p_69239 == null && p_69239_Idx == 0)) {
		sys_fatal_69241(makeNimstrLit("cannot dispatch; dispatcher is nil"));
		}
		

	
}

function nsuToLowerAsciiChar(c_196380) {
	var result_196381 = 0;

		if ((ConstSet25[c_196380] != undefined)) {
		result_196381 = chckRange(addInt(c_196380, 32), 0, 255);
		}
		else {
			result_196381 = c_196380;
		}
		

	return result_196381;

}

function ntgetDateStr(dt_216348) {
	var result_216349 = null;

		result_216349 = nimCopy(null, (cstrToNimstr((dt_216348.year)+"") || []).concat([45],nsuIntToStr(dt_216348.month, 2) || [],[45],nsuIntToStr(dt_216348.monthday, 2) || []), NTI45040);

	return result_216349;

}

function ntgetClockStr(dt_216369) {
	var result_216370 = null;

		result_216370 = nimCopy(null, (nsuIntToStr(dt_216369.hour, 2) || []).concat([58],nsuIntToStr(dt_216369.minute, 2) || [],[58],nsuIntToStr(dt_216369.second, 2) || []), NTI45040);

	return result_216370;

}

function substitute_log_223447(frmt_223449, level_223450, args_223452) {
	var result_223453 = null;

		var msg_len_223455 = 0;
		L1: do {
			var arg_223461 = null;
			var i_446783 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_446783 < (args_223452 != null ? args_223452.length : 0))) break L3;
						arg_223461 = args_223452[chckIndx(i_446783, 0, args_223452.length+0-1)-0];
						msg_len_223455 = addInt(msg_len_223455, (arg_223461 != null ? arg_223461.length : 0));
						i_446783 = addInt(i_446783, 1);
					}
			} while(false);
		} while(false);
		result_223453 = nimCopy(null, mnewString(0), NTI45040);
		var i_223469 = 0;
		L4: do {
				L5: while (true) {
				if (!(i_223469 < (frmt_223449 != null ? frmt_223449.length : 0))) break L5;
					if (!((frmt_223449[chckIndx(i_223469, 0, frmt_223449.length+0-1)-0] == 36))) {
					if (result_223453 != null) { addChar(result_223453, frmt_223449[chckIndx(i_223469, 0, frmt_223449.length+0-1)-0]); } else { result_223453 = [frmt_223449[chckIndx(i_223469, 0, frmt_223449.length+0-1)-0]]; };
					i_223469 = addInt(i_223469, 1);
					}
					else {
						i_223469 = addInt(i_223469, 1);
						var v_223482 = [];
						var app_223601 = [];
						L6: do {
								L7: while (true) {
								if (!(ConstSet24[frmt_223449[chckIndx(i_223469, 0, frmt_223449.length+0-1)-0]] != undefined)) break L7;
									if (v_223482 != null) { addChar(v_223482, nsuToLowerAsciiChar(frmt_223449[chckIndx(i_223469, 0, frmt_223449.length+0-1)-0])); } else { v_223482 = [nsuToLowerAsciiChar(frmt_223449[chckIndx(i_223469, 0, frmt_223449.length+0-1)-0])]; };
									i_223469 = addInt(i_223469, 1);
								}
						} while(false);
						switch (toJSStr(v_223482)) {
						case "date":
							if (result_223453 != null) { result_223453 = (result_223453).concat(ntgetDateStr(now_216236())); } else { result_223453 = ntgetDateStr(now_216236()).slice(); };
							break;
						case "time":
							if (result_223453 != null) { result_223453 = (result_223453).concat(ntgetClockStr(now_216236())); } else { result_223453 = ntgetClockStr(now_216236()).slice(); };
							break;
						case "datetime":
							if (result_223453 != null) { result_223453 = (result_223453).concat((ntgetDateStr(now_216236()) || []).concat(makeNimstrLit("T") || [],ntgetClockStr(now_216236()) || [])); } else { result_223453 = (ntgetDateStr(now_216236()) || []).concat(makeNimstrLit("T") || [],ntgetClockStr(now_216236()) || []).slice(); };
							break;
						case "app":
							if (result_223453 != null) { result_223453 = (result_223453).concat(app_223601); } else { result_223453 = app_223601.slice(); };
							break;
						case "appdir":
							break;
						case "appname":
							break;
						case "levelid":
							if (result_223453 != null) { addChar(result_223453, level_names_223216[chckIndx(level_223450, 0, level_names_223216.length+0-1)-0][chckIndx(0, 0, level_names_223216[chckIndx(level_223450, 0, level_names_223216.length+0-1)-0].length+0-1)-0]); } else { result_223453 = [level_names_223216[chckIndx(level_223450, 0, level_names_223216.length+0-1)-0][chckIndx(0, 0, level_names_223216[chckIndx(level_223450, 0, level_names_223216.length+0-1)-0].length+0-1)-0]]; };
							break;
						case "levelname":
							if (result_223453 != null) { result_223453 = (result_223453).concat(level_names_223216[chckIndx(level_223450, 0, level_names_223216.length+0-1)-0]); } else { result_223453 = level_names_223216[chckIndx(level_223450, 0, level_names_223216.length+0-1)-0].slice(); };
							break;
						default: 
							break;
						}
					}
					
				}
		} while(false);
		L8: do {
			var arg_224006 = null;
			var i_446788 = 0;
			L9: do {
					L10: while (true) {
					if (!(i_446788 < (args_223452 != null ? args_223452.length : 0))) break L10;
						arg_224006 = args_223452[chckIndx(i_446788, 0, args_223452.length+0-1)-0];
						if (result_223453 != null) { result_223453 = (result_223453).concat(arg_224006); } else { result_223453 = arg_224006.slice(); };
						i_446788 = addInt(i_446788, 1);
					}
			} while(false);
		} while(false);

	return result_223453;

}

function log_224041(logger_224043, level_224044, args_224046) {
			var Tmp1;

			if (!(level_223401[0] <= level_224044)) Tmp1 = false; else {				Tmp1 = (logger_224043.levelThreshold <= level_224044);			}		if (Tmp1) {
		var ln_224057 = substitute_log_223447(logger_224043.fmtStr, level_224044, args_224046);
		var cln_224201 = toJSStr(ln_224057);
		console.log(cln_224201);
		}
		

	
}

function log_224020(logger_224022, level_224023, args_224025) {
	
}

function log_224039(logger_224022, level_224023, args_224025) {
		chckNilDisp(logger_224022);
		if (isObj(logger_224022.m_type, NTI223227)) {
		log_224041(logger_224022, level_224023, args_224025);
		}
		else {
		if (isObj(logger_224022.m_type, NTI223223)) {
		log_224020(logger_224022, level_224023, args_224025);
		}
		}

	
}
