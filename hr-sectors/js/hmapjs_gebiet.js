/* Generated by the Nim Compiler v0.20.2 */
/*   (c) 2019 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI221202 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI221223 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI221227 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47886 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI244085 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI196716 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI288131 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI243040 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI243024 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI243143 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI246066 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI381288 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI381327 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI246020 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI217376 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI217384 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI47894 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI47804 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI244048 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI244081 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI93289 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI242100 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI244056 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI244076 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI244096 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI244090 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI244089 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI363116 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI363107 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI363102 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI362887 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI361585 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI288121 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI288123 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI243036 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47830 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47852 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47854 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI258587 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI97907 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI209628 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI212020 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI212083 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI209618 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI44014 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI209614 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI209697 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI209693 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI209692 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI209626 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI209649 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI209610 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI209204 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI209202 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI209636 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI209602 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI209639 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI209604 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI209642 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI209606 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI209645 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI209608 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI209653 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI209612 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI209616 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47844 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI300229 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI300226 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI300223 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI300203 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI300200 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI300197 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI47938 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI232542 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI232530 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI300180 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI300177 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI300174 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI300058 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI300072 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI300069 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI300066 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI300050 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI300021 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI300046 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI300044 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI300019 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI300154 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI300151 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI300148 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI243018 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI243016 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI300026 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI300015 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI300038 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI300036 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI300030 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI300017 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI300131 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI300128 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI300125 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI300115 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI300025 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI224256 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI300103 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI300100 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI300097 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI300086 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI269211 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI252297 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI252298 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI257761 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI257757 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI257150 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI257713 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI257701 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI257722 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI257720 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI257028 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI257714 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI257705 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI93448 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93444 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93440 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93436 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93432 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93428 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93424 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93420 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93416 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93412 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93400 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93392 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93388 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93384 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93380 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93376 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93372 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI93205 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI93281 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI93227 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI93565 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI93563 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI93561 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI93231 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI93229 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI269207 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI269209 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI93283 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI44026 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI293035 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI44006 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI288081 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI223055 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI44032 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI284030 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI196814 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI47862 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47850 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47842 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47846 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47808 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47914 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI44016 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI44040 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI44042 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI47908 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI47826 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47828 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47858 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI47858 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47858.node = NNI47858;
var NNI47828 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47828.node = NNI47828;
NTI47908.base = NTI47826;
NTI47914.base = NTI47826;
var NNI47826 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI47908, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI44042, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI44040, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI44040, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI44016, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI47914, name: "up", sons: null}]};
NTI47826.node = NNI47826;
var NNI47808 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47808.node = NNI47808;
NTI47826.base = NTI47808;
NTI47828.base = NTI47826;
NTI47858.base = NTI47828;
var NNI47846 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47846.node = NNI47846;
var NNI47842 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47842.node = NNI47842;
NTI47842.base = NTI47828;
NTI47846.base = NTI47842;
var NNI47850 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47850.node = NNI47850;
NTI47850.base = NTI47828;
var NNI47862 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47862.node = NNI47862;
NTI47862.base = NTI47828;
NTI196814.base = NTI44040;
var NNI284030 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "app_id", len: 0, typ: NTI44042, name: "app_id", sons: null}, 
{kind: 1, offset: "app_code", len: 0, typ: NTI44042, name: "app_code", sons: null}, 
{kind: 1, offset: "useHTTPS", len: 0, typ: NTI44032, name: "useHTTPS", sons: null}, 
{kind: 1, offset: "useCIT", len: 0, typ: NTI44032, name: "useCIT", sons: null}]};
NTI284030.node = NNI284030;
var NNI223055 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI223055.node = NNI223055;
NTI223055.base = NTI47808;
NTI284030.base = NTI223055;
var NNI288081 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "tileSize", len: 0, typ: NTI44006, name: "tileSize", sons: null}, 
{kind: 1, offset: "ppi", len: 0, typ: NTI44006, name: "ppi", sons: null}, 
{kind: 1, offset: "lg", len: 0, typ: NTI44042, name: "lg", sons: null}, 
{kind: 1, offset: "lg2", len: 0, typ: NTI44042, name: "lg2", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI44042, name: "style", sons: null}, 
{kind: 1, offset: "pois", len: 0, typ: NTI44032, name: "pois", sons: null}, 
{kind: 1, offset: "crossOrigin", len: 0, typ: NTI44040, name: "crossOrigin", sons: null}]};
NTI288081.node = NNI288081;
NTI288081.base = NTI223055;
var NNI293035 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "pixelRatio", len: 0, typ: NTI44026, name: "pixelRatio", sons: null}, 
{kind: 1, offset: "noWrap", len: 0, typ: NTI44032, name: "noWrap", sons: null}]};
NTI293035.node = NNI293035;
NTI293035.base = NTI223055;
var NNI93283 = {kind: 2, len: 91, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI44042, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI44042, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI44042, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI44042, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI44042, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI44042, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI44042, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI44042, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI44042, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI44042, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI44042, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI44042, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI44042, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI44042, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI44042, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI44042, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI44042, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI44042, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI44042, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI44042, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI44042, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI44042, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI44042, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI44042, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI44042, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI44042, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI44042, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI44042, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI44042, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI44042, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI44042, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI44042, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI44042, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI44042, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI44042, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI44042, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI44042, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI44042, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI44042, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI44042, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI44042, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI44042, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI44042, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI44042, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI44042, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI44042, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI44042, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI44042, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI44042, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI44042, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI44042, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI44042, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI44042, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI44042, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI44042, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI44042, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI44042, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI44042, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI44042, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI44042, name: "minWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI44042, name: "overflow", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI44042, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI44042, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI44042, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI44042, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI44042, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI44042, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI44042, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI44042, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI44042, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI44042, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI44042, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI44042, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI44042, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI44042, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI44042, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI44042, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI44042, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI44042, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI44042, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI44042, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI44042, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI44042, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI44042, name: "textTransform", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI44042, name: "transform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI44042, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI44042, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI44042, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI44042, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI44042, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI44006, name: "zIndex", sons: null}]};
NTI93283.node = NNI93283;
NTI93283.base = NTI47808;
var NNI269207 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI269207, name: "pkReplace", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI269207, name: "pkRemove", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI269207, name: "pkAppend", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI269207, name: "pkInsertBefore", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI269207, name: "pkDetach", len: 0, sons: null}}};
NTI269207.node = NNI269207;
NTI93561.base = NTI93229;
NTI93563.base = NTI93229;
NTI93565.base = NTI93229;
var NNI93227 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI93227, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI93227, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI93227, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI93227, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI93227, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI93227, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI93227, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI93227, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI93227, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI93227, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI93227, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI93227, name: "NotationNode", len: 0, sons: null}}};
NTI93227.node = NNI93227;
NTI93281.base = NTI93283;
var NNI93231 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI93561, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI93563, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI93565, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI44042, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI93229, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI93229, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI93229, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI44042, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI93227, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI44042, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI93229, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI93229, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI44042, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI93281, name: "style", sons: null}]};
NTI93231.node = NNI93231;
var NNI93205 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI93372, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI93376, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI93380, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI93384, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI93388, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI93392, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI93396, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI93400, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI93404, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI93408, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI93412, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI93416, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI93420, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI93424, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI93428, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI93432, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI93436, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI93440, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI93444, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI93448, name: "onunload", sons: null}]};
NTI93205.node = NNI93205;
NTI93205.base = NTI47808;
NTI93231.base = NTI93205;
NTI93229.base = NTI93231;
var NNI257028 = {kind: 2, offset: 0, typ: null, name: null, len: 120, sons: {"0": {kind: 1, offset: 0, typ: NTI257028, name: "#text", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI257028, name: "#int", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI257028, name: "#bool", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI257028, name: "#vthunk", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI257028, name: "#dthunk", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI257028, name: "#component", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI257028, name: "#verbatim", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI257028, name: "html", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI257028, name: "head", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI257028, name: "title", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI257028, name: "base", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI257028, name: "link", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI257028, name: "meta", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI257028, name: "style", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI257028, name: "script", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI257028, name: "noscript", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI257028, name: "body", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI257028, name: "section", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI257028, name: "nav", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI257028, name: "article", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI257028, name: "aside", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI257028, name: "h1", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI257028, name: "h2", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI257028, name: "h3", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI257028, name: "h4", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI257028, name: "h5", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI257028, name: "h6", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI257028, name: "header", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI257028, name: "footer", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI257028, name: "address", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI257028, name: "main", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI257028, name: "p", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI257028, name: "hr", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI257028, name: "pre", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI257028, name: "blockquote", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI257028, name: "ol", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI257028, name: "ul", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI257028, name: "li", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI257028, name: "dl", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI257028, name: "dt", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI257028, name: "dd", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI257028, name: "figure", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI257028, name: "figcaption", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI257028, name: "div", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI257028, name: "a", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI257028, name: "em", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI257028, name: "strong", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI257028, name: "small", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI257028, name: "s", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI257028, name: "cite", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI257028, name: "quote", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI257028, name: "dfn", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI257028, name: "abbr", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI257028, name: "data", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI257028, name: "time", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI257028, name: "code", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI257028, name: "var", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI257028, name: "samp", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI257028, name: "kdb", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI257028, name: "sub", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI257028, name: "sup", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI257028, name: "i", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI257028, name: "b", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI257028, name: "u", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI257028, name: "mark", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI257028, name: "ruby", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI257028, name: "rt", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI257028, name: "rp", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI257028, name: "bdi", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI257028, name: "dbo", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI257028, name: "span", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI257028, name: "br", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI257028, name: "wbr", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI257028, name: "ins", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI257028, name: "del", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI257028, name: "img", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI257028, name: "iframe", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI257028, name: "embed", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI257028, name: "object", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI257028, name: "param", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI257028, name: "video", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI257028, name: "audio", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI257028, name: "source", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI257028, name: "track", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI257028, name: "canvas", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI257028, name: "map", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI257028, name: "area", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI257028, name: "svg", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI257028, name: "math", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI257028, name: "path", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI257028, name: "circle", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI257028, name: "table", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI257028, name: "caption", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI257028, name: "colgroup", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI257028, name: "col", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI257028, name: "tbody", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI257028, name: "thead", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI257028, name: "tfoot", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI257028, name: "tr", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI257028, name: "td", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI257028, name: "th", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI257028, name: "form", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI257028, name: "fieldset", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI257028, name: "legend", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI257028, name: "label", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI257028, name: "input", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI257028, name: "button", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI257028, name: "select", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI257028, name: "datalist", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI257028, name: "optgroup", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI257028, name: "option", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI257028, name: "textarea", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI257028, name: "keygen", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI257028, name: "output", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI257028, name: "progress", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI257028, name: "meter", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI257028, name: "details", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI257028, name: "summary", len: 0, sons: null}, 
"118": {kind: 1, offset: 118, typ: NTI257028, name: "command", len: 0, sons: null}, 
"119": {kind: 1, offset: 119, typ: NTI257028, name: "menu", len: 0, sons: null}}};
NTI257028.node = NNI257028;
NTI257720.base = NTI257705;
NTI257722.base = NTI44042;
var NNI257150 = {kind: 2, offset: 0, typ: null, name: null, len: 31, sons: {"0": {kind: 1, offset: 0, typ: NTI257150, name: "onclick", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI257150, name: "oncontextmenu", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI257150, name: "ondblclick", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI257150, name: "onkeyup", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI257150, name: "onkeydown", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI257150, name: "onkeypressed", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI257150, name: "onfocus", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI257150, name: "onblur", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI257150, name: "onchange", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI257150, name: "onscroll", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI257150, name: "onmousedown", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI257150, name: "onmouseenter", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI257150, name: "onmouseleave", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI257150, name: "onmousemove", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI257150, name: "onmouseout", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI257150, name: "onmouseover", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI257150, name: "onmouseup", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI257150, name: "ondrag", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI257150, name: "ondragend", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI257150, name: "ondragenter", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI257150, name: "ondragleave", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI257150, name: "ondragover", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI257150, name: "ondragstart", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI257150, name: "ondrop", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI257150, name: "onsubmit", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI257150, name: "oninput", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI257150, name: "onanimationstart", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI257150, name: "onanimationend", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI257150, name: "onanimationiteration", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI257150, name: "onkeyupenter", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI257150, name: "onkeyuplater", len: 0, sons: null}}};
NTI257150.node = NNI257150;
var NNI257713 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI257150, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI257757, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI257761, name: "Field2", sons: null}]};
NTI257713.node = NNI257713;
NTI257701.base = NTI257713;
var NNI252297 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI252297.node = NNI252297;
NTI252298.base = NTI252297;
var NNI257714 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI257028, name: "kind", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI44006, name: "index", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI44042, name: "id", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI44042, name: "class", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI44042, name: "text", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI257720, name: "kids", sons: null}, 
{kind: 1, offset: "attrs", len: 0, typ: NTI257722, name: "attrs", sons: null}, 
{kind: 1, offset: "events", len: 0, typ: NTI257701, name: "events", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI252298, name: "style", sons: null}, 
{kind: 1, offset: "dom", len: 0, typ: NTI93229, name: "dom", sons: null}]};
NTI257714.node = NNI257714;
NTI257714.base = NTI47808;
NTI257705.base = NTI257714;
var NNI269209 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "k", len: 0, typ: NTI269207, name: "k", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI93229, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI93229, name: "current", sons: null}, 
{kind: 1, offset: "n", len: 0, typ: NTI257705, name: "n", sons: null}]};
NTI269209.node = NNI269209;
var NNI269211 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI257705, name: "parent", sons: null}, 
{kind: 1, offset: "newChild", len: 0, typ: NTI257705, name: "newChild", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI44006, name: "pos", sons: null}]};
NTI269211.node = NNI269211;
NTI300036.base = NTI44006;
NTI243016.base = NTI44026;
NTI243018.base = NTI44026;
var NNI300026 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "lat", len: 0, typ: NTI243016, name: "lat", sons: null}, 
{kind: 1, offset: "lng", len: 0, typ: NTI243018, name: "lng", sons: null}]};
NTI300026.node = NNI300026;
NTI300026.base = NTI223055;
NTI300015.base = NTI300026;
NTI300038.base = NTI300015;
var NNI300030 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "linkId", len: 0, typ: NTI44006, name: "linkId", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI44040, name: "name", sons: null}, 
{kind: 1, offset: "cityId", len: 0, typ: NTI44006, name: "cityId", sons: null}, 
{kind: 1, offset: "districtId", len: 0, typ: NTI44006, name: "districtId", sons: null}, 
{kind: 1, offset: "postalCode", len: 0, typ: NTI44040, name: "postalCode", sons: null}, 
{kind: 1, offset: "neighborLinks", len: 0, typ: NTI300036, name: "neighborLinks", sons: null}, 
{kind: 1, offset: "geometry", len: 0, typ: NTI300038, name: "geometry", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI44032, name: "readOnly", sons: null}, 
{kind: 1, offset: "addedToMap", len: 0, typ: NTI44032, name: "addedToMap", sons: null}, 
{kind: 1, offset: "addedToSector", len: 0, typ: NTI44032, name: "addedToSector", sons: null}]};
NTI300030.node = NNI300030;
NTI300030.base = NTI223055;
NTI300017.base = NTI300030;
var NNI300131 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI224256, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI44006, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI300017, name: "Field2", sons: null}]};
NTI300131.node = NNI300131;
NTI300128.base = NTI300131;
var NNI300125 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI300128, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI44006, name: "counter", sons: null}]};
NTI300125.node = NNI300125;
NTI300046.base = NTI300017;
NTI300058.base = NTI300017;
var NNI300072 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI224256, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI44006, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI44040, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI300058, name: "Field3", sons: null}]};
NTI300072.node = NNI300072;
NTI300069.base = NTI300072;
var NNI300066 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI300069, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI44006, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI44006, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI44006, name: "last", sons: null}]};
NTI300066.node = NNI300066;
var NNI300050 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "postalCode", len: 0, typ: NTI44040, name: "postalCode", sons: null}, 
{kind: 1, offset: "district", len: 0, typ: NTI44040, name: "district", sons: null}, 
{kind: 1, offset: "city", len: 0, typ: NTI44040, name: "city", sons: null}, 
{kind: 1, offset: "pFix", len: 0, typ: NTI44006, name: "pFix", sons: null}, 
{kind: 1, offset: "streets", len: 0, typ: NTI300066, name: "streets", sons: null}, 
{kind: 1, offset: "shownOnMap", len: 0, typ: NTI44032, name: "shownOnMap", sons: null}, 
{kind: 1, offset: "exclude", len: 0, typ: NTI44032, name: "exclude", sons: null}]};
NTI300050.node = NNI300050;
NTI300050.base = NTI223055;
NTI300021.base = NTI300050;
var NNI300044 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI44040, name: "name", sons: null}, 
{kind: 1, offset: "links", len: 0, typ: NTI300046, name: "links", sons: null}, 
{kind: 1, offset: "sector", len: 0, typ: NTI300021, name: "sector", sons: null}]};
NTI300044.node = NNI300044;
NTI300044.base = NTI223055;
NTI300019.base = NTI300044;
var NNI300154 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI224256, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI44006, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI44040, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI300019, name: "Field3", sons: null}]};
NTI300154.node = NNI300154;
NTI300151.base = NTI300154;
var NNI300148 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI300151, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI44006, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI44006, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI44006, name: "last", sons: null}]};
NTI300148.node = NNI300148;
var NNI232542 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI232542.node = NNI232542;
var NNI47938 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47938.node = NNI47938;
NTI47938.base = NTI47808;
NTI232542.base = NTI47938;
NTI232530.base = NTI232542;
var NNI300180 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI224256, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI44040, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI232530, name: "Field2", sons: null}]};
NTI300180.node = NNI300180;
NTI300177.base = NTI300180;
var NNI300174 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI300177, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI44006, name: "counter", sons: null}]};
NTI300174.node = NNI300174;
var NNI300203 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI224256, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI44006, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI44040, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI300021, name: "Field3", sons: null}]};
NTI300203.node = NNI300203;
NTI300200.base = NTI300203;
var NNI300197 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI300200, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI44006, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI44006, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI44006, name: "last", sons: null}]};
NTI300197.node = NNI300197;
var NNI300229 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI224256, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI44040, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI44006, name: "Field2", sons: null}]};
NTI300229.node = NNI300229;
NTI300226.base = NTI300229;
var NNI300223 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI300226, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI44006, name: "counter", sons: null}]};
NTI300223.node = NNI300223;
var NNI300115 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "allLinks", len: 0, typ: NTI300125, name: "allLinks", sons: null}, 
{kind: 1, offset: "allStreets", len: 0, typ: NTI300148, name: "allStreets", sons: null}, 
{kind: 1, offset: "cachedTiles", len: 0, typ: NTI300174, name: "cachedTiles", sons: null}, 
{kind: 1, offset: "allSectors", len: 0, typ: NTI300197, name: "allSectors", sons: null}, 
{kind: 1, offset: "lastPostfix", len: 0, typ: NTI300223, name: "lastPostfix", sons: null}]};
NTI300115.node = NNI300115;
NTI300115.base = NTI223055;
NTI300025.base = NTI300115;
var NNI300103 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI224256, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI44006, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI44040, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI300025, name: "Field3", sons: null}]};
NTI300103.node = NNI300103;
NTI300100.base = NTI300103;
var NNI300097 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI300100, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI44006, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI44006, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI44006, name: "last", sons: null}]};
NTI300097.node = NNI300097;
var NNI300086 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI44040, name: "name", sons: null}, 
{kind: 1, offset: "cities", len: 0, typ: NTI300097, name: "cities", sons: null}]};
NTI300086.node = NNI300086;
NTI300086.base = NTI223055;
var NNI47844 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47844.node = NNI47844;
NTI47844.base = NTI47842;
NTI209612.base = NTI209653;
NTI209608.base = NTI209645;
NTI209606.base = NTI209642;
NTI209604.base = NTI209639;
NTI209602.base = NTI209636;
var NNI209202 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI209202, name: "January", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI209202, name: "February", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI209202, name: "March", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI209202, name: "April", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI209202, name: "May", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI209202, name: "June", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI209202, name: "July", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI209202, name: "August", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI209202, name: "September", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI209202, name: "October", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI209202, name: "November", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI209202, name: "December", len: 0, sons: null}}};
NTI209202.node = NNI209202;
var NNI209204 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI209204, name: "Monday", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI209204, name: "Tuesday", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI209204, name: "Wednesday", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI209204, name: "Thursday", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI209204, name: "Friday", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI209204, name: "Saturday", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI209204, name: "Sunday", len: 0, sons: null}}};
NTI209204.node = NNI209204;
NTI209610.base = NTI209649;
var NNI209692 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "zonedTimeFromTimeImpl", len: 0, typ: NTI209693, name: "zonedTimeFromTimeImpl", sons: null}, 
{kind: 1, offset: "zonedTimeFromAdjTimeImpl", len: 0, typ: NTI209697, name: "zonedTimeFromAdjTimeImpl", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI44040, name: "name", sons: null}]};
NTI209692.node = NNI209692;
NTI209626.base = NTI209692;
var NNI209616 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nanosecond", len: 0, typ: NTI209612, name: "nanosecond", sons: null}, 
{kind: 1, offset: "second", len: 0, typ: NTI209608, name: "second", sons: null}, 
{kind: 1, offset: "minute", len: 0, typ: NTI209606, name: "minute", sons: null}, 
{kind: 1, offset: "hour", len: 0, typ: NTI209604, name: "hour", sons: null}, 
{kind: 1, offset: "monthday", len: 0, typ: NTI209602, name: "monthday", sons: null}, 
{kind: 1, offset: "month", len: 0, typ: NTI209202, name: "month", sons: null}, 
{kind: 1, offset: "year", len: 0, typ: NTI44006, name: "year", sons: null}, 
{kind: 1, offset: "weekday", len: 0, typ: NTI209204, name: "weekday", sons: null}, 
{kind: 1, offset: "yearday", len: 0, typ: NTI209610, name: "yearday", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI44032, name: "isDst", sons: null}, 
{kind: 1, offset: "timezone", len: 0, typ: NTI209626, name: "timezone", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI44006, name: "utcOffset", sons: null}]};
NTI209616.node = NNI209616;
NTI209616.base = NTI47808;
var NNI209614 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI44014, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI209612, name: "nanosecond", sons: null}]};
NTI209614.node = NNI209614;
var NNI209618 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI44014, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI209612, name: "nanosecond", sons: null}]};
NTI209618.node = NNI209618;
var NNI212083 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI209602, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI209202, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI44006, name: "Field2", sons: null}]};
NTI212083.node = NNI212083;
var NNI212020 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI44006, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI44006, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI44006, name: "Field2", sons: null}]};
NTI212020.node = NNI212020;
var NNI209628 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "time", len: 0, typ: NTI209614, name: "time", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI44006, name: "utcOffset", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI44032, name: "isDst", sons: null}]};
NTI209628.node = NNI209628;
var NNI97907 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI44006, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI44006, name: "b", sons: null}]};
NTI97907.node = NNI97907;
NTI258587.base = NTI44042;
var NNI47854 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47854.node = NNI47854;
var NNI47852 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47852.node = NNI47852;
var NNI47830 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47830.node = NNI47830;
NTI47830.base = NTI47826;
NTI47852.base = NTI47830;
NTI47854.base = NTI47852;
var NNI243036 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "lat", len: 0, typ: NTI243016, name: "lat", sons: null}, 
{kind: 1, offset: "lng", len: 0, typ: NTI243018, name: "lng", sons: null}]};
NTI243036.node = NNI243036;
NTI243036.base = NTI223055;
var NNI288123 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "jsonattributes", len: 0, typ: NTI44006, name: "jsonattributes", sons: null}, 
{kind: 1, offset: "mode", len: 0, typ: NTI44042, name: "mode", sons: null}, 
{kind: 1, offset: "prox", len: 0, typ: NTI44042, name: "prox", sons: null}, 
{kind: 1, offset: "maxResults", len: 0, typ: NTI44006, name: "maxResults", sons: null}, 
{kind: 1, offset: "additionaldata", len: 0, typ: NTI44042, name: "additionaldata", sons: null}, 
{kind: 1, offset: "locationattributes", len: 0, typ: NTI44042, name: "locationattributes", sons: null}]};
NTI288123.node = NNI288123;
var NNI288121 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI288121.node = NNI288121;
NTI288121.base = NTI223055;
NTI288123.base = NTI288121;
NTI361585.base = NTI300015;
NTI362887.base = NTI44006;
NTI363102.base = NTI44006;
NTI363107.base = NTI44006;
NTI363116.base = NTI44006;
var NNI244089 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onAttach", len: 0, typ: NTI244090, name: "onAttach", sons: null}, 
{kind: 1, offset: "onDetach", len: 0, typ: NTI244096, name: "onDetach", sons: null}]};
NTI244089.node = NNI244089;
NTI244089.base = NTI223055;
var NNI244076 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "strokeColor", len: 0, typ: NTI44042, name: "strokeColor", sons: null}, 
{kind: 1, offset: "fillColor", len: 0, typ: NTI44042, name: "fillColor", sons: null}, 
{kind: 1, offset: "lineWidth", len: 0, typ: NTI44006, name: "lineWidth", sons: null}]};
NTI244076.node = NNI244076;
var NNI244056 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI244056.node = NNI244056;
var NNI242100 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI242100.node = NNI242100;
var NNI93289 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "bubbles", len: 0, typ: NTI44032, name: "bubbles", sons: null}, 
{kind: 1, offset: "cancelBubble", len: 0, typ: NTI44032, name: "cancelBubble", sons: null}, 
{kind: 1, offset: "cancelable", len: 0, typ: NTI44032, name: "cancelable", sons: null}, 
{kind: 1, offset: "composed", len: 0, typ: NTI44032, name: "composed", sons: null}, 
{kind: 1, offset: "currentTarget", len: 0, typ: NTI93229, name: "currentTarget", sons: null}, 
{kind: 1, offset: "defaultPrevented", len: 0, typ: NTI44032, name: "defaultPrevented", sons: null}, 
{kind: 1, offset: "eventPhase", len: 0, typ: NTI44006, name: "eventPhase", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI93229, name: "target", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI44042, name: "type", sons: null}, 
{kind: 1, offset: "isTrusted", len: 0, typ: NTI44032, name: "isTrusted", sons: null}]};
NTI93289.node = NNI93289;
NTI93289.base = NTI47808;
NTI242100.base = NTI93289;
NTI244056.base = NTI242100;
NTI244076.base = NTI244056;
NTI244048.base = NTI244076;
var NNI244081 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "style", len: 0, typ: NTI244048, name: "style", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI44006, name: "zIndex", sons: null}]};
NTI244081.node = NNI244081;
NTI244081.base = NTI223055;
NTI47804.base = NTI47894;
var NNI217384 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI217376, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI47804, name: "Field1", sons: null}]};
NTI217384.node = NNI217384;
var NNI246020 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI44026, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI44026, name: "Field1", sons: null}]};
NTI246020.node = NNI246020;
var NNI381327 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI44006, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI44006, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI44006, name: "Field2", sons: null}]};
NTI381327.node = NNI381327;
var NNI381288 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI44026, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI44026, name: "Field1", sons: null}]};
NTI381288.node = NNI381288;
var NNI246066 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI44006, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI44006, name: "Field1", sons: null}]};
NTI246066.node = NNI246066;
var NNI243040 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI243040.node = NNI243040;
NTI243040.base = NTI223055;
NTI243024.base = NTI243040;
NTI243143.base = NTI243024;
var NNI288131 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "searchtext", len: 0, typ: NTI44042, name: "searchtext", sons: null}, 
{kind: 1, offset: "country", len: 0, typ: NTI44042, name: "country", sons: null}, 
{kind: 1, offset: "state", len: 0, typ: NTI44042, name: "state", sons: null}, 
{kind: 1, offset: "additionaldata", len: 0, typ: NTI44042, name: "additionaldata", sons: null}]};
NTI288131.node = NNI288131;
NTI288131.base = NTI288121;
NTI196716.base = NTI44040;
var NNI244085 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "style", len: 0, typ: NTI244048, name: "style", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI44006, name: "zIndex", sons: null}]};
NTI244085.node = NNI244085;
NTI244085.base = NTI223055;
var NNI47886 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47886.node = NNI47886;
NTI47886.base = NTI47828;
var NNI221227 = {kind: 1, offset: "useStderr", len: 0, typ: NTI44032, name: "useStderr", sons: null};
NTI221227.node = NNI221227;
var NNI221202 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI221202, name: "lvlAll", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI221202, name: "lvlDebug", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI221202, name: "lvlInfo", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI221202, name: "lvlNotice", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI221202, name: "lvlWarn", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI221202, name: "lvlError", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI221202, name: "lvlFatal", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI221202, name: "lvlNone", len: 0, sons: null}}};
NTI221202.node = NNI221202;
var NNI221223 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "levelThreshold", len: 0, typ: NTI221202, name: "levelThreshold", sons: null}, 
{kind: 1, offset: "fmtStr", len: 0, typ: NTI44040, name: "fmtStr", sons: null}]};
NTI221223.node = NNI221223;
NTI221223.base = NTI47808;
NTI221227.base = NTI221223;

function makeNimstrLit(c_66254) {
		  var ln = c_66254.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_66254.charCodeAt(i);
  }
  return result;
  

	
}

function cstrToNimstr(c_66271) {
		  var ln = c_66271.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_66271.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_66271.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_67427, src_67428, ti_67429) {
	var result_67619 = null;

		switch (ti_67429.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_67401(ti_67429))) {
			result_67619 = src_67428;
			}
			else {
				result_67619 = [src_67428[0], src_67428[1]];
			}
			
			break;
		case 19:
			      if (dest_67427 === null || dest_67427 === undefined) {
        dest_67427 = {};
      }
      else {
        for (var key in dest_67427) { delete dest_67427[key]; }
      }
      for (var key in src_67428) { dest_67427[key] = src_67428[key]; }
      result_67619 = dest_67427;
    
			break;
		case 18:
		case 17:
			if (!((ti_67429.base == null))) {
			result_67619 = nimCopy(dest_67427, src_67428, ti_67429.base);
			}
			else {
			if ((ti_67429.kind == 17)) {
			result_67619 = (dest_67427 === null || dest_67427 === undefined) ? {m_type: ti_67429} : dest_67427;
			}
			else {
				result_67619 = (dest_67427 === null || dest_67427 === undefined) ? {} : dest_67427;
			}
			}
			nimCopyAux(result_67619, src_67428, ti_67429.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_67428 === null) {
        result_67619 = null;
      }
      else {
        if (dest_67427 === null || dest_67427 === undefined) {
          dest_67427 = new Array(src_67428.length);
        }
        else {
          dest_67427.length = src_67428.length;
        }
        result_67619 = dest_67427;
        for (var i = 0; i < src_67428.length; ++i) {
          result_67619[i] = nimCopy(result_67619[i], src_67428[i], ti_67429.base);
        }
      }
    
			break;
		case 28:
			      if (src_67428 !== null) {
        result_67619 = src_67428.slice(0);
      }
    
			break;
		default: 
			result_67619 = src_67428;
			break;
		}

	return result_67619;

}

function toJSStr(s_66288) {
		  if (s_66288 === null) return "";
  var len = s_66288.length;
  var asciiPart = new Array(len);
  var fcc = String.fromCharCode;
  var nonAsciiPart = null;
  var nonAsciiOffset = 0;
  for (var i = 0; i < len; ++i) {
    if (nonAsciiPart !== null) {
      var offset = (i - nonAsciiOffset) * 2;
      var code = s_66288[i].toString(16);
      if (code.length == 1) {
        code = "0"+code;
      }
      nonAsciiPart[offset] = "%";
      nonAsciiPart[offset + 1] = code;
    }
    else if (s_66288[i] < 128)
      asciiPart[i] = fcc(s_66288[i]);
    else {
      asciiPart.length = i;
      nonAsciiOffset = i;
      nonAsciiPart = new Array((len - i) * 2);
      --i;
    }
  }
  asciiPart = asciiPart.join("");
  return (nonAsciiPart === null) ?
      asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  

	
}

function raiseException(e_64618, ename_64619) {
		e_64618.name = ename_64619;
		if ((excHandler == 0)) {
		unhandledException(e_64618);
		}
		
		throw e_64618;

	
}

function chckIndx(i_67705, a_67706, b_67707) {
			var Tmp1;

	var result_67708 = 0;

	BeforeRet: do {
			if (!(a_67706 <= i_67705)) Tmp1 = false; else {				Tmp1 = (i_67705 <= b_67707);			}		if (Tmp1) {
		result_67708 = i_67705;
		break BeforeRet;
		}
		else {
		raiseIndexError(i_67705, a_67706, b_67707);
		}
		
	} while (false);

	return result_67708;

}

function subInt(a_66621, b_66622) {
		    var result = a_66621 - b_66622;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function addInt(a_66603, b_66604) {
		    var result = a_66603 + b_66604;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function chckRange(i_67724, a_67725, b_67726) {
			var Tmp1;

	var result_67727 = 0;

	BeforeRet: do {
			if (!(a_67725 <= i_67724)) Tmp1 = false; else {				Tmp1 = (i_67724 <= b_67726);			}		if (Tmp1) {
		result_67727 = i_67724;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_67727;

}

function nimMax(a_67021, b_67022) {
		var Tmp1;

	var result_67023 = 0;

	BeforeRet: do {
		if ((b_67022 <= a_67021)) {
		Tmp1 = a_67021;
		}
		else {
		Tmp1 = b_67022;
		}
		
		result_67023 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_67023;

}

function nimMin(a_67003, b_67004) {
		var Tmp1;

	var result_67005 = 0;

	BeforeRet: do {
		if ((a_67003 <= b_67004)) {
		Tmp1 = a_67003;
		}
		else {
		Tmp1 = b_67004;
		}
		
		result_67005 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_67005;

}

function mnewString(len_66305) {
		    return new Array(len_66305);
  

	
}
			var to_tag_257689 = ["#text", "#int", "#bool", "#vthunk", "#dthunk", "#component", "#verbatim", "HTML", "HEAD", "TITLE", "BASE", "LINK", "META", "STYLE", "SCRIPT", "NOSCRIPT", "BODY", "SECTION", "NAV", "ARTICLE", "ASIDE", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "FOOTER", "ADDRESS", "MAIN", "P", "HR", "PRE", "BLOCKQUOTE", "OL", "UL", "LI", "DL", "DT", "DD", "FIGURE", "FIGCAPTION", "DIV", "A", "EM", "STRONG", "SMALL", "S", "CITE", "QUOTE", "DFN", "ABBR", "DATA", "TIME", "CODE", "VAR", "SAMP", "KDB", "SUB", "SUP", "I", "B", "U", "MARK", "RUBY", "RT", "RP", "BDI", "DBO", "SPAN", "BR", "WBR", "INS", "DEL", "IMG", "IFRAME", "EMBED", "OBJECT", "PARAM", "VIDEO", "AUDIO", "SOURCE", "TRACK", "CANVAS", "MAP", "AREA", "SVG", "MATH", "PATH", "CIRCLE", "TABLE", "CAPTION", "COLGROUP", "COL", "TBODY", "THEAD", "TFOOT", "TR", "TD", "TH", "FORM", "FIELDSET", "LEGEND", "LABEL", "INPUT", "BUTTON", "SELECT", "DATALIST", "OPTGROUP", "OPTION", "TEXTAREA", "KEYGEN", "OUTPUT", "PROGRESS", "METER", "DETAILS", "SUMMARY", "COMMAND", "MENU"];
			var to_event_name_257695 = ["click", "contextmenu", "dblclick", "keyup", "keydown", "keypressed", "focus", "blur", "change", "scroll", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseout", "mouseover", "mouseup", "drag", "dragend", "dragenter", "dragleave", "dragover", "dragstart", "drop", "submit", "input", "animationstart", "animationend", "animationiteration", "keyupenter", "keyuplater"];

function rawEcho() {
		      var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

	
}

function divInt(a_66657, b_66658) {
		    if (b_66658 == 0) raiseDivByZero();
    if (b_66658 == -1 && a_66657 == 2147483647) raiseOverflow();
    return Math.trunc(a_66657 / b_66658);
  

	
}

function eqStrings(a_66483, b_66484) {
		    if (a_66483 == b_66484) return true;
    if (a_66483 === null && b_66484.length == 0) return true;
    if (b_66484 === null && a_66483.length == 0) return true;
    if ((!a_66483) || (!b_66484)) return false;
    var alen = a_66483.length;
    if (alen != b_66484.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_66483[i] != b_66484[i]) return false;
    return true;
  

	
}

function mulInt(a_66639, b_66640) {
		    var result = a_66639 * b_66640;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function addChar(x_67895, c_67896) {
		x_67895.push(c_67896);

	
}

function absInt(a_66819) {
		var Tmp1;

	var result_66820 = 0;

		if ((a_66819 < 0)) {
		Tmp1 = (a_66819 * -1);
		}
		else {
		Tmp1 = a_66819;
		}
		
		result_66820 = Tmp1;

	return result_66820;

}
		var unit_weights_209777 = [1, 1000, 1000000, 1000000000, 60000000000, 3600000000000, 86400000000000, 604800000000000];

function modInt(a_66675, b_66676) {
		    if (b_66676 == 0) raiseDivByZero();
    if (b_66676 == -1 && a_66675 == 2147483647) raiseOverflow();
    return Math.trunc(a_66675 % b_66676);
  

	
}

function negInt(a_66783) {
	var result_66784 = 0;

		result_66784 = (a_66783 * -1);

	return result_66784;

}
		var days_until_month_leap_212187 = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];
			var days_until_month_212171 = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];

function nimBoolToStr(x_64045) {
	var result_64046 = null;

		if (x_64045) {
		result_64046 = nimCopy(null, makeNimstrLit("true"), NTI44040);
		}
		else {
			result_64046 = nimCopy(null, makeNimstrLit("false"), NTI44040);
		}
		

	return result_64046;

}
var ConstSet2 = setConstr([48, 57]);
var ConstSet3 = setConstr([48, 57]);
var ConstSet4 = setConstr([48, 57]);
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet7 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet8 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet9 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet10 = setConstr([48, 57]);
var ConstSet11 = setConstr([48, 57]);
var ConstSet12 = setConstr(101, 69);
var ConstSet13 = setConstr([48, 57]);
var ConstSet14 = setConstr([48, 57]);

function nimParseBiggestFloat(s_67940, number_67942, number_67942_Idx, start_67943) {
	var result_67945 = 0;

	BeforeRet: do {
		var esign_67946 = 1.0000000000000000e+000;
		var sign_67947 = 1.0000000000000000e+000;
		var i_67948 = start_67943;
		var exponent_67949 = 0;
		var flags_67950 = 0;
		number_67942[number_67942_Idx] = 0.0;
		if ((s_67940[i_67948] == 43)) {
		i_67948 += 1;
		}
		else {
		if ((s_67940[i_67948] == 45)) {
		sign_67947 = -1.0000000000000000e+000;
		i_67948 += 1;
		}
		}
		if (((s_67940[i_67948] == 78) || (s_67940[i_67948] == 110))) {
		if (((s_67940[(i_67948 + 1)] == 65) || (s_67940[(i_67948 + 1)] == 97))) {
		if (((s_67940[(i_67948 + 2)] == 78) || (s_67940[(i_67948 + 2)] == 110))) {
		if (!((ConstSet8[s_67940[(i_67948 + 3)]] != undefined))) {
		number_67942[number_67942_Idx] = NaN;
		result_67945 = ((i_67948 + 3) - start_67943);
		break BeforeRet;
		}
		
		}
		
		}
		
		result_67945 = 0;
		break BeforeRet;
		}
		
		if (((s_67940[i_67948] == 73) || (s_67940[i_67948] == 105))) {
		if (((s_67940[(i_67948 + 1)] == 78) || (s_67940[(i_67948 + 1)] == 110))) {
		if (((s_67940[(i_67948 + 2)] == 70) || (s_67940[(i_67948 + 2)] == 102))) {
		if (!((ConstSet9[s_67940[(i_67948 + 3)]] != undefined))) {
		number_67942[number_67942_Idx] = (Infinity * sign_67947);
		result_67945 = ((i_67948 + 3) - start_67943);
		break BeforeRet;
		}
		
		}
		
		}
		
		result_67945 = 0;
		break BeforeRet;
		}
		
		L1: do {
				L2: while (true) {
				if (!(ConstSet10[s_67940[i_67948]] != undefined)) break L2;
					flags_67950 = (flags_67950 | 1);
					number_67942[number_67942_Idx] = ((number_67942[number_67942_Idx] * 1.0000000000000000e+001) + (s_67940[i_67948] - 48));
					i_67948 += 1;
					L3: do {
							L4: while (true) {
							if (!(s_67940[i_67948] == 95)) break L4;
								i_67948 += 1;
							}
					} while(false);
				}
		} while(false);
		if ((s_67940[i_67948] == 46)) {
		var hd_68004 = 1.0000000000000000e+000;
		i_67948 += 1;
		L5: do {
				L6: while (true) {
				if (!(ConstSet11[s_67940[i_67948]] != undefined)) break L6;
					flags_67950 = (flags_67950 | 2);
					number_67942[number_67942_Idx] = ((number_67942[number_67942_Idx] * 1.0000000000000000e+001) + (s_67940[i_67948] - 48));
					hd_68004 = (hd_68004 * 1.0000000000000000e+001);
					i_67948 += 1;
					L7: do {
							L8: while (true) {
							if (!(s_67940[i_67948] == 95)) break L8;
								i_67948 += 1;
							}
					} while(false);
				}
		} while(false);
		number_67942[number_67942_Idx] = (number_67942[number_67942_Idx] / hd_68004);
		}
		
		if ((flags_67950 == 0)) {
		result_67945 = 0;
		break BeforeRet;
		}
		
		if ((ConstSet12[s_67940[i_67948]] != undefined)) {
		i_67948 += 1;
		if ((s_67940[i_67948] == 43)) {
		i_67948 += 1;
		}
		else {
		if ((s_67940[i_67948] == 45)) {
		esign_67946 = -1.0000000000000000e+000;
		i_67948 += 1;
		}
		}
		if (!((ConstSet13[s_67940[i_67948]] != undefined))) {
		result_67945 = 0;
		break BeforeRet;
		}
		
		L9: do {
				L10: while (true) {
				if (!(ConstSet14[s_67940[i_67948]] != undefined)) break L10;
					exponent_67949 = (((exponent_67949 * 10) + s_67940[i_67948]) - 48);
					i_67948 += 1;
					L11: do {
							L12: while (true) {
							if (!(s_67940[i_67948] == 95)) break L12;
								i_67948 += 1;
							}
					} while(false);
				}
		} while(false);
		}
		
		var hd_68098 = ten_to_the_power_of_67910(exponent_67949);
		if ((0.0 < esign_67946)) {
		number_67942[number_67942_Idx] = (number_67942[number_67942_Idx] * hd_68098);
		}
		else {
			number_67942[number_67942_Idx] = (number_67942[number_67942_Idx] / hd_68098);
		}
		
		number_67942[number_67942_Idx] = (number_67942[number_67942_Idx] * sign_67947);
		result_67945 = (i_67948 - start_67943);
	} while (false);

	return result_67945;

}
var ConstSet15 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet16 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet17 = setConstr(32, 9, 11, 13, 10, 12);

function cmpStrings(a_66447, b_66448) {
		    if (a_66447 == b_66448) return 0;
    if (!a_66447) return -1;
    if (!b_66448) return 1;
    for (var i = 0; i < a_66447.length && i < b_66448.length; i++) {
      var result = a_66447[i] - b_66448[i];
      if (result != 0) return result;
    }
    return a_66447.length - b_66448.length;
  

	
}
var ConstSet18 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet19 = setConstr(13, 10);
var ConstSet20 = setConstr(32, 9, 11, 13, 10, 12);

function isObj(obj_67854, subclass_67855) {
	var result_67856 = false;

	BeforeRet: do {
		var x_67857 = obj_67854;
		if ((x_67857 == subclass_67855)) {
		result_67856 = true;
		break BeforeRet;
		}
		
		L1: do {
				L2: while (true) {
				if (!!((x_67857 == subclass_67855))) break L2;
					if ((x_67857 == null)) {
					result_67856 = false;
					break BeforeRet;
					}
					
					x_67857 = x_67857.base;
				}
		} while(false);
		result_67856 = true;
		break BeforeRet;
	} while (false);

	return result_67856;

}
var ConstSet21 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet22 = setConstr([65, 90]);
							var level_names_221216 = [makeNimstrLit("DEBUG"), makeNimstrLit("DEBUG"), makeNimstrLit("INFO"), makeNimstrLit("NOTICE"), makeNimstrLit("WARN"), makeNimstrLit("ERROR"), makeNimstrLit("FATAL"), makeNimstrLit("NONE")];
var nim_program_result = 0;
var global_raise_hook_61618 = [null];
var local_raise_hook_61623 = [null];
var out_of_mem_hook_61626 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var utc_instance_213631 = [null];
var local_instance_213632 = [null];
var level_221401 = [0];
var handlers_221403 = [null];
var object_id_224437 = [0];
var gid_258495 = [0];
var vcomponents_262239 = [{}];
var kxi_269324 = [null];
var lc_282233 = [{}];

function is_fat_pointer_67401(ti_67403) {
	var result_67404 = false;

	BeforeRet: do {
		result_67404 = !((ConstSet1[ti_67403.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_67404;

}

function nimCopyAux(dest_67432, src_67433, n_67435) {
		switch (n_67435.kind) {
		case 0:
			break;
		case 1:
			      dest_67432[n_67435.offset] = nimCopy(dest_67432[n_67435.offset], src_67433[n_67435.offset], n_67435.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_67435.sons.length; i++) {
      nimCopyAux(dest_67432, src_67433, n_67435.sons[i]);
    }
    
			break;
		case 3:
			      dest_67432[n_67435.offset] = nimCopy(dest_67432[n_67435.offset], src_67433[n_67435.offset], n_67435.typ);
      for (var i = 0; i < n_67435.sons.length; ++i) {
        nimCopyAux(dest_67432, src_67433, n_67435.sons[i][1]);
      }
    
			break;
		}

	
}

function add_61638(x_61641, x_61641_Idx, y_61642) {
		      if (x_61641[x_61641_Idx] === null) { x_61641[x_61641_Idx] = []; }
      var off = x_61641[x_61641_Idx].length;
      x_61641[x_61641_Idx].length += y_61642.length;
      for (var i = 0; i < y_61642.length; ++i) {
        x_61641[x_61641_Idx][off+i] = y_61642.charCodeAt(i);
      }
    

	
}

function unhandledException(e_64529) {
		var buf_64530 = [[]];
		if (!(((e_64529.message != null ? e_64529.message.length : 0) == 0))) {
		if (buf_64530[0] != null) { buf_64530[0] = (buf_64530[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_64530[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_64530[0] != null) { buf_64530[0] = (buf_64530[0]).concat(e_64529.message); } else { buf_64530[0] = e_64529.message.slice(); };
		}
		else {
		if (buf_64530[0] != null) { buf_64530[0] = (buf_64530[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_64530[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_64530[0] != null) { buf_64530[0] = (buf_64530[0]).concat(makeNimstrLit(" [")); } else { buf_64530[0] = makeNimstrLit(" ["); };
		add_61638(buf_64530, 0, e_64529.name);
		if (buf_64530[0] != null) { buf_64530[0] = (buf_64530[0]).concat(makeNimstrLit("]\x0A")); } else { buf_64530[0] = makeNimstrLit("]\x0A"); };
		var cbuf_64601 = toJSStr(buf_64530[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_64601);
  }
  else {
    throw cbuf_64601;
  }
  

	
}

function raiseIndexError(i_65639, a_65640, b_65641) {
		var Tmp1;

		var e_65802 = null;
		e_65802 = {m_type: NTI47858, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		if ((b_65641 < a_65640)) {
		Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
		}
		else {
		Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_65639)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_65640)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_65641)+"") || []);
		}
		
		e_65802.message = nimCopy(null, Tmp1, NTI44040);
		e_65802.parent = null;
		raiseException(e_65802, "IndexError");

	
}

function HEX2F_69417(x_69419, y_69420) {
	var result_69421 = 0.0;

		result_69421 = (x_69419 / y_69420);

	return result_69421;

}

function raiseOverflow() {
		var e_65042 = null;
		e_65042 = {m_type: NTI47846, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_65042.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI44040);
		e_65042.parent = null;
		raiseException(e_65042, "OverflowError");

	
}

function isPointInPolygon(test_point_289070, polyg_points_289072) {
							var Tmp4;
							var Tmp5;
								var Tmp6;

	var result_289073 = false;

		result_289073 = false;
		var j_289079 = (polyg_points_289072 != null ? (polyg_points_289072.length-1) : -1);
		L1: do {
			var i_289114 = 0;
			var p_289115 = null;
			var i_289165 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_289165 < (polyg_points_289072 != null ? polyg_points_289072.length : 0))) break L3;
						i_289114 = i_289165;
						p_289115 = polyg_points_289072[chckIndx(i_289165, 0, polyg_points_289072.length+0-1)-0];
						var l_p_289116 = polyg_points_289072[chckIndx(j_289079, 0, polyg_points_289072.length+0-1)-0];
							if (!(p_289115.y < test_point_289070.y)) Tmp5 = false; else {								Tmp5 = (test_point_289070.y <= l_p_289116.y);							}							if (Tmp5) Tmp4 = true; else {								if (!(l_p_289116.y < test_point_289070.y)) Tmp6 = false; else {									Tmp6 = (test_point_289070.y <= p_289115.y);								}								Tmp4 = Tmp6;							}						if (Tmp4) {
						if (((p_289115.x + (HEX2F_69417(subInt(test_point_289070.y, p_289115.y), subInt(l_p_289116.y, p_289115.y)) * subInt(l_p_289116.x, p_289115.x))) < test_point_289070.x)) {
						result_289073 = !(result_289073);
						}
						
						}
						
						j_289079 = i_289114;
						i_289165 = addInt(i_289165, 1);
					}
			} while(false);
		} while(false);

	return result_289073;

}

function is_power_of_two_108062(x_108064) {
		var Tmp1;

	var result_108065 = false;

	BeforeRet: do {
		if (!(0 < x_108064)) Tmp1 = false; else {			Tmp1 = ((x_108064 & (x_108064 - 1)) == 0);		}		result_108065 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_108065;

}

function sys_fatal_58662(message_58666) {
		var e_58803 = null;
		e_58803 = {m_type: NTI47850, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_58803.message = nimCopy(null, message_58666, NTI44040);
		raiseException(e_58803, "AssertionError");

	
}

function raise_assert_58658(msg_58660) {
		sys_fatal_58662(msg_58660);

	
}

function failed_assert_impl_58851(msg_58853) {
		raise_assert_58658(msg_58853);

	
}

function raiseRangeError() {
		var e_65441 = null;
		e_65441 = {m_type: NTI47862, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_65441.message = nimCopy(null, makeNimstrLit("value out of range"), NTI44040);
		e_65441.parent = null;
		raiseException(e_65441, "RangeError");

	
}

function init_table_300319(initial_size_300323) {
	var result_300325 = {data: null, counter: 0};

		if (!(is_power_of_two_108062(initial_size_300323))) {
		failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_300325.counter = 0;
		result_300325.data = new Array(chckRange(initial_size_300323, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_300323, 0, 2147483647);++i) {result_300325.data[i]={Field0: 0, Field1: 0, Field2: null};}
	return result_300325;

}

function init_ordered_table_300617(initial_size_300621) {
	var result_300623 = {data: null, counter: 0, first: 0, last: 0};

		if (!(is_power_of_two_108062(initial_size_300621))) {
		failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_300623.counter = 0;
		result_300623.data = new Array(chckRange(initial_size_300621, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_300621, 0, 2147483647);++i) {result_300623.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		result_300623.first = -1;
		result_300623.last = -1;

	return result_300623;

}

function init_table_301017(initial_size_301021) {
	var result_301023 = {data: null, counter: 0};

		if (!(is_power_of_two_108062(initial_size_301021))) {
		failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_301023.counter = 0;
		result_301023.data = new Array(chckRange(initial_size_301021, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_301021, 0, 2147483647);++i) {result_301023.data[i]={Field0: 0, Field1: null, Field2: null};}
	return result_301023;

}

function init_ordered_table_301417(initial_size_301421) {
	var result_301423 = {data: null, counter: 0, first: 0, last: 0};

		if (!(is_power_of_two_108062(initial_size_301421))) {
		failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_301423.counter = 0;
		result_301423.data = new Array(chckRange(initial_size_301421, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_301421, 0, 2147483647);++i) {result_301423.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		result_301423.first = -1;
		result_301423.last = -1;

	return result_301423;

}

function init_table_301817(initial_size_301821) {
	var result_301823 = {data: null, counter: 0};

		if (!(is_power_of_two_108062(initial_size_301821))) {
		failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_301823.counter = 0;
		result_301823.data = new Array(chckRange(initial_size_301821, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_301821, 0, 2147483647);++i) {result_301823.data[i]={Field0: 0, Field1: null, Field2: 0};}
	return result_301823;

}

function init_table_302220(initial_size_302224) {
	var result_302240 = {data: null, counter: 0};

		if (!(is_power_of_two_108062(initial_size_302224))) {
		failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_302240.counter = 0;
		result_302240.data = new Array(chckRange(initial_size_302224, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_302224, 0, 2147483647);++i) {result_302240.data[i]={Field0: 0, Field1: null, Field2: null};}
	return result_302240;

}
var all_links_300614 = [init_table_300319(8)];
var all_streets_301014 = [init_ordered_table_300617(8)];
var cached_tiles_301414 = [init_table_301017(8)];
var all_sectors_301814 = [init_ordered_table_301417(8)];
var last_postfix_302214 = [init_table_301817(8)];
var mv_street_grp_302215 = [function(){return new H.map.Group()}()];
var ministry_area_302216 = [null];
var name_area_302217 = [makeNimstrLit("Hanau-Russisch")];
var sector_grp_302614 = [init_table_302220(8)];
var city_id_302615 = [0];
var district_id_302616 = [0];
var addr_distr_302617 = [null];
var addr_city_302618 = [null];
var clck_link_id_302619 = [0];
var postal_code_302620 = [null];
var sect_name_302621 = [null];
var border_distr_302623 = [null];
var map = null;

function nsuFindChar(s_201416, sub_201417, start_201418, last_201419) {
		var Tmp1;

	var result_201421 = 0;

	BeforeRet: do {
		if ((last_201419 == 0)) {
		Tmp1 = (s_201416 != null ? (s_201416.length-1) : -1);
		}
		else {
		Tmp1 = last_201419;
		}
		
		var last_201423 = Tmp1;
		L2: do {
			var i_201806 = 0;
			var colontmp__335831 = 0;
			colontmp__335831 = start_201418;
			var res_335832 = colontmp__335831;
			L3: do {
					L4: while (true) {
					if (!(res_335832 <= last_201423)) break L4;
						i_201806 = res_335832;
						if ((sub_201417 == s_201416[chckIndx(i_201806, 0, s_201416.length+0-1)-0])) {
						result_201421 = i_201806;
						break BeforeRet;
						}
						
						res_335832 = addInt(res_335832, 1);
					}
			} while(false);
		} while(false);
		result_201421 = -1;
		break BeforeRet;
	} while (false);

	return result_201421;

}

function substr_72822(s_72824, first_72825, last_72826) {
	var result_72827 = null;

		var first_72828 = nimMax(first_72825, 0);
		var l_72830 = nimMax(addInt(subInt(nimMin(last_72826, (s_72824 != null ? (s_72824.length-1) : -1)), first_72828), 1), 0);
		result_72827 = nimCopy(null, mnewString(chckRange(l_72830, 0, 2147483647)), NTI44040);
		L1: do {
			var i_72839 = 0;
			var colontmp__257678 = 0;
			colontmp__257678 = subInt(l_72830, 1);
			var res_257679 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_257679 <= colontmp__257678)) break L3;
						i_72839 = res_257679;
						result_72827[chckIndx(i_72839, 0, result_72827.length+0-1)-0] = s_72824[chckIndx(addInt(i_72839, first_72828), 0, s_72824.length+0-1)-0];
						res_257679 = addInt(res_257679, 1);
					}
			} while(false);
		} while(false);

	return result_72827;

}

function substr_72853(s_72855, first_72856) {
	var result_72858 = null;

		result_72858 = nimCopy(null, substr_72822(s_72855, first_72856, (s_72855 != null ? (s_72855.length-1) : -1)), NTI44040);

	return result_72858;

}

function nsuInitSkipTable(a_201144, sub_201145) {
		var m_201146 = (sub_201145 != null ? sub_201145.length : 0);
		var i_201148 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_201148 <= 248)) break L2;
					a_201144[chckIndx(chckRange(addInt(i_201148, 0), 0, 255), 0, a_201144.length+0-1)-0] = m_201146;
					a_201144[chckIndx(chckRange(addInt(i_201148, 1), 0, 255), 0, a_201144.length+0-1)-0] = m_201146;
					a_201144[chckIndx(chckRange(addInt(i_201148, 2), 0, 255), 0, a_201144.length+0-1)-0] = m_201146;
					a_201144[chckIndx(chckRange(addInt(i_201148, 3), 0, 255), 0, a_201144.length+0-1)-0] = m_201146;
					a_201144[chckIndx(chckRange(addInt(i_201148, 4), 0, 255), 0, a_201144.length+0-1)-0] = m_201146;
					a_201144[chckIndx(chckRange(addInt(i_201148, 5), 0, 255), 0, a_201144.length+0-1)-0] = m_201146;
					a_201144[chckIndx(chckRange(addInt(i_201148, 6), 0, 255), 0, a_201144.length+0-1)-0] = m_201146;
					a_201144[chckIndx(chckRange(addInt(i_201148, 7), 0, 255), 0, a_201144.length+0-1)-0] = m_201146;
					i_201148 = addInt(i_201148, 8);
				}
		} while(false);
		L3: do {
			var i_201165 = 0;
			var colontmp__335839 = 0;
			colontmp__335839 = subInt(m_201146, 1);
			var i_335840 = 0;
			L4: do {
					L5: while (true) {
					if (!(i_335840 < colontmp__335839)) break L5;
						i_201165 = i_335840;
						a_201144[chckIndx(sub_201145[chckIndx(i_201165, 0, sub_201145.length+0-1)-0], 0, a_201144.length+0-1)-0] = subInt(subInt(m_201146, 1), i_201165);
						i_335840 = addInt(i_335840, 1);
					}
			} while(false);
		} while(false);

	
}

function nsuFindStrA(a_201181, s_201182, sub_201183, start_201184, last_201185) {
		var Tmp1;

	var result_201187 = 0;

	BeforeRet: do {
		if ((last_201185 == 0)) {
		Tmp1 = (s_201182 != null ? (s_201182.length-1) : -1);
		}
		else {
		Tmp1 = last_201185;
		}
		
		var last_201189 = Tmp1;
		var sub_last_201190 = subInt((sub_201183 != null ? sub_201183.length : 0), 1);
		if ((sub_last_201190 == -1)) {
		result_201187 = start_201184;
		break BeforeRet;
		}
		
		var skip_201192 = start_201184;
		L2: do {
				L3: while (true) {
				if (!(sub_last_201190 <= subInt(last_201189, skip_201192))) break L3;
					var i_201193 = sub_last_201190;
					L4: do {
							L5: while (true) {
							if (!(s_201182[chckIndx(addInt(skip_201192, i_201193), 0, s_201182.length+0-1)-0] == sub_201183[chckIndx(i_201193, 0, sub_201183.length+0-1)-0])) break L5;
								if ((i_201193 == 0)) {
								result_201187 = skip_201192;
								break BeforeRet;
								}
								
								i_201193 = subInt(i_201193, 1);
							}
					} while(false);
					skip_201192 = addInt(skip_201192, a_201181[chckIndx(s_201182[chckIndx(addInt(skip_201192, sub_last_201190), 0, s_201182.length+0-1)-0], 0, a_201181.length+0-1)-0]);
				}
		} while(false);
		result_201187 = -1;
		break BeforeRet;
	} while (false);

	return result_201187;

}

function nsuReplaceStr(s_202718, sub_202719, by_202720) {
	var result_202721 = null;

		result_202721 = nimCopy(null, [], NTI44040);
		var sub_len_202722 = (sub_202719 != null ? sub_202719.length : 0);
		if ((sub_len_202722 == 0)) {
		result_202721 = nimCopy(null, s_202718, NTI44040);
		}
		else {
		if ((sub_len_202722 == 1)) {
		var c_202723 = sub_202719[chckIndx(0, 0, sub_202719.length+0-1)-0];
		var last_202725 = (s_202718 != null ? (s_202718.length-1) : -1);
		var i_202727 = 0;
		L1: do {
				L2: while (true) {
				if (!true) break L2;
					var j_202728 = nsuFindChar(s_202718, c_202723, chckRange(i_202727, 0, 2147483647), last_202725);
					if ((j_202728 < 0)) {
					break L1;
					}
					
					if (result_202721 != null) { result_202721 = (result_202721).concat(substr_72822(s_202718, i_202727, subInt(j_202728, 1))); } else { result_202721 = substr_72822(s_202718, i_202727, subInt(j_202728, 1)).slice(); };
					if (result_202721 != null) { result_202721 = (result_202721).concat(by_202720); } else { result_202721 = by_202720.slice(); };
					i_202727 = addInt(j_202728, sub_len_202722);
				}
		} while(false);
		if (result_202721 != null) { result_202721 = (result_202721).concat(substr_72853(s_202718, i_202727)); } else { result_202721 = substr_72853(s_202718, i_202727).slice(); };
		}
		else {
			var a_202729 = [new Int32Array(256)];
			nsuInitSkipTable(a_202729[0], sub_202719);
			var last_202732 = (s_202718 != null ? (s_202718.length-1) : -1);
			var i_202734 = 0;
			L3: do {
					L4: while (true) {
					if (!true) break L4;
						var j_202735 = nsuFindStrA(a_202729[0], s_202718, sub_202719, chckRange(i_202734, 0, 2147483647), last_202732);
						if ((j_202735 < 0)) {
						break L3;
						}
						
						if (result_202721 != null) { result_202721 = (result_202721).concat(substr_72822(s_202718, i_202734, subInt(j_202735, 1))); } else { result_202721 = substr_72822(s_202718, i_202734, subInt(j_202735, 1)).slice(); };
						if (result_202721 != null) { result_202721 = (result_202721).concat(by_202720); } else { result_202721 = by_202720.slice(); };
						i_202734 = addInt(j_202735, sub_len_202722);
					}
			} while(false);
			if (result_202721 != null) { result_202721 = (result_202721).concat(substr_72853(s_202718, i_202734)); } else { result_202721 = substr_72853(s_202718, i_202734).slice(); };
		}
		}

	return result_202721;

}

function substr_eq_196102(s_196104, pos_196105, substr_196106) {
	var result_196107 = false;

	BeforeRet: do {
		var i_196109 = 0;
		var length_196110 = (substr_196106 != null ? substr_196106.length : 0);
		L1: do {
				L2: while (true) {
				if (!(((i_196109 < length_196110) && (addInt(pos_196105, i_196109) < (s_196104 != null ? s_196104.length : 0))) && (s_196104[chckIndx(addInt(pos_196105, i_196109), 0, s_196104.length+0-1)-0] == substr_196106[chckIndx(i_196109, 0, substr_196106.length+0-1)-0]))) break L2;
					i_196109 = addInt(i_196109, 1);
				}
		} while(false);
		result_196107 = (i_196109 == length_196110);
		break BeforeRet;
	} while (false);

	return result_196107;

}

function nsuSplitString(s_196739, sep_196740, maxsplit_196742) {
	var result_196744 = null;

		if (!((0 < (sep_196740 != null ? sep_196740.length : 0)))) {
		failed_assert_impl_58851(makeNimstrLit("strutils.nim(768, 11) `sep.len > 0` "));
		}
		
		result_196744 = nimCopy(null, [], NTI196814);
		L1: do {
			var x_196801 = null;
			var last_335848 = 0;
			var splits_335849 = maxsplit_196742;
			L2: do {
					L3: while (true) {
					if (!(last_335848 <= (s_196739 != null ? s_196739.length : 0))) break L3;
						var first_335851 = last_335848;
						L4: do {
								L5: while (true) {
								if (!((last_335848 < (s_196739 != null ? s_196739.length : 0)) && !(substr_eq_196102(s_196739, last_335848, sep_196740)))) break L5;
									last_335848 = addInt(last_335848, 1);
								}
						} while(false);
						if ((splits_335849 == 0)) {
						last_335848 = (s_196739 != null ? s_196739.length : 0);
						}
						
						x_196801 = substr_72822(s_196739, first_335851, subInt(last_335848, 1));
						var Tmp6 = nimCopy(null, x_196801, NTI44040);
						if (result_196744 != null) { result_196744.push(Tmp6); } else { result_196744 = [Tmp6]; };
						if ((splits_335849 == 0)) {
						break L2;
						}
						
						splits_335849 = subInt(splits_335849, 1);
						last_335848 = addInt(last_335848, (sep_196740 != null ? sep_196740.length : 0));
					}
			} while(false);
		} while(false);

	return result_196744;

}

function new_seq_279212(len_279215) {
	var result_279217 = null;

		result_279217 = new Array(len_279215); for (var i=0;i<len_279215;++i) {result_279217[i]={k: 0, parent: null, current: null, n: null};}
	return result_279217;

}

function new_seq_279249(len_279252) {
	var result_279254 = null;

		result_279254 = new Array(len_279252); for (var i=0;i<len_279252;++i) {result_279254[i]={parent: null, newChild: null, pos: 0};}
	return result_279254;

}

function valueHEX3D_257839(n_257841, v_257842) {
		n_257841.text = v_257842;

	
}

function value_257822(n_257824) {
	var result_257825 = null;

		result_257825 = n_257824.text;

	return result_257825;

}

function wrap_event_269390(d_269392, n_269393, k_269394, action_269395) {

			function later_wrapper_269827() {

					function HEX3Aanonymous_269833(ev_269835) {

							function wrapper_269836() {
									var v_269838 = ev_269835.target.value;
									valueHEX3D_257839(n_269831, v_269838);
									if (!(!((action_269830 == null)))) {
									failed_assert_impl_58851(makeNimstrLit("karax.nim(75, 10) `action != nil` "));
									}
									
									action_269830(ev_269835, n_269831);
									if (!((value_257822(n_269831) == v_269838))) {
									ev_269835.target.value = value_257822(n_269831);
									}
									

								
							}

							if (!((timer_269832 == null))) {
							clearTimeout(timer_269832);
							}
							
							timer_269832 = setTimeout(wrapper_269836, 400);

						
					}

				var result_269829 = null;

					var action_269830 = action_269395;
					var n_269831 = n_269393;
					var timer_269832 = null;
					result_269829 = HEX3Aanonymous_269833;

				return result_269829;

			}

			function enter_wrapper_269657() {

					function HEX3Aanonymous_269662(ev_269664) {
							if ((ev_269664.keyCode == 13)) {
							var v_269665 = ev_269664.target.value;
							valueHEX3D_257839(n_269661, v_269665);
							if (!(!((action_269660 == null)))) {
							failed_assert_impl_58851(makeNimstrLit("karax.nim(75, 10) `action != nil` "));
							}
							
							action_269660(ev_269664, n_269661);
							if (!((value_257822(n_269661) == v_269665))) {
							ev_269664.target.value = value_257822(n_269661);
							}
							
							}
							

						
					}

				var result_269659 = null;

					var action_269660 = action_269395;
					var n_269661 = n_269393;
					result_269659 = HEX3Aanonymous_269662;

				return result_269659;

			}

			function std_wrapper_269397() {

					function HEX3Aanonymous_269402(ev_269404) {
								var Tmp1;
								var Tmp2;

								if ((n_269401.kind == 111)) Tmp2 = true; else {									Tmp2 = (n_269401.kind == 105);								}								if (Tmp2) Tmp1 = true; else {									Tmp1 = (n_269401.kind == 107);								}							if (Tmp1) {
							var v_269423 = ev_269404.target.value;
							valueHEX3D_257839(n_269401, v_269423);
							if (!(!((action_269400 == null)))) {
							failed_assert_impl_58851(makeNimstrLit("karax.nim(75, 10) `action != nil` "));
							}
							
							action_269400(ev_269404, n_269401);
							if (!((value_257822(n_269401) == v_269423))) {
							ev_269404.target.value = value_257822(n_269401);
							}
							
							}
							else {
							action_269400(ev_269404, n_269401);
							}
							

						
					}

				var result_269399 = null;

					var action_269400 = action_269395;
					var n_269401 = n_269393;
					result_269399 = HEX3Aanonymous_269402;

				return result_269399;

			}

	var result_269396 = null;

		switch (k_269394) {
		case 30:
			result_269396 = later_wrapper_269827();
			d_269392.addEventListener("keyup", result_269396, false);
			break;
		case 29:
			result_269396 = enter_wrapper_269657();
			d_269392.addEventListener("keyup", result_269396, false);
			break;
		default: 
			result_269396 = std_wrapper_269397();
			d_269392.addEventListener(to_event_name_257695[chckIndx(k_269394, 0, to_event_name_257695.length+0-1)-0], result_269396, false);
			break;
		}

	return result_269396;

}

function apply_events_270086(n_270088) {
		var dest_270089 = n_270088.dom;
		L1: do {
			var i_270102 = 0;
			var colontmp__335883 = 0;
			colontmp__335883 = (n_270088.events != null ? n_270088.events.length : 0);
			var i_335884 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_335884 < colontmp__335883)) break L3;
						i_270102 = i_335884;
						n_270088.events[chckIndx(i_270102, 0, n_270088.events.length+0-1)-0]["Field2"] = wrap_event_269390(dest_270089, n_270088, n_270088.events[chckIndx(i_270102, 0, n_270088.events.length+0-1)-0]["Field0"], n_270088.events[chckIndx(i_270102, 0, n_270088.events.length+0-1)-0]["Field1"]);
						i_335884 = addInt(i_335884, 1);
					}
			} while(false);
		} while(false);

	
}

function apply_style_255025(n_255027, s_255028) {
		n_255027.style = {};
		L1: do {
			var i_255061 = 0;
			var colontmp__335895 = 0;
			colontmp__335895 = subInt(s_255028.length, 1);
			var res_335896 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_335896 <= colontmp__335895)) break L3;
						i_255061 = res_335896;
						n_255027.style[s_255028[i_255061]] = s_255028[addInt(i_255061, 1)];
						res_335896 = addInt(res_335896, 2);
					}
			} while(false);
		} while(false);

	
}

function vnode_to_dom_270167(n_270169, kxi_270170) {
			var Tmp9;
			var Tmp10;

	var result_270171 = null;

	BeforeRet: do {
		if ((n_270169.kind == 0)) {
		result_270171 = document.createTextNode(n_270169.text);
		n_270169.dom = result_270171;
		if (!((n_270169.id == null))) {
		kxi_269324[0].byId[n_270169.id] = n_270169;
		}
		
		}
		else {
		if ((n_270169.kind == 6)) {
		result_270171 = document.createElement("div");
		result_270171.innerHTML = n_270169.text;
		n_270169.dom = result_270171;
		if (!((n_270169.id == null))) {
		kxi_269324[0].byId[n_270169.id] = n_270169;
		}
		
		break BeforeRet;
		}
		else {
		if ((n_270169.kind == 3)) {
		var x_270234 = vcomponents_262239[0][n_270169.text](n_270169.kids);
		result_270171 = vnode_to_dom_270167(x_270234, kxi_270170);
		n_270169.dom = result_270171;
		if (!((n_270169.id == null))) {
		kxi_269324[0].byId[n_270169.id] = n_270169;
		}
		
		break BeforeRet;
		}
		else {
		if ((n_270169.kind == 4)) {
		result_270171 = n_270169.dom;
		if (!(!((result_270171 == null)))) {
		failed_assert_impl_58851(makeNimstrLit("karax.nim(155, 12) `result != nil` "));
		}
		
		n_270169.dom = result_270171;
		if (!((n_270169.id == null))) {
		kxi_269324[0].byId[n_270169.id] = n_270169;
		}
		
		break BeforeRet;
		}
		else {
		if ((n_270169.kind == 5)) {
		var x_270422 = n_270169;
		if (!((x_270422.onAttachImpl == null))) {
		x_270422.onAttachImpl(x_270422);
		}
		
		if (!(!((x_270422.renderImpl == null)))) {
		failed_assert_impl_58851(makeNimstrLit("karax.nim(162, 12) `x.renderImpl != nil` "));
		}
		
		if ((x_270422.expanded == null)) {
		x_270422.expanded = x_270422.renderImpl(x_270422);
		}
		
		if (!(!((x_270422.expanded == null)))) {
		failed_assert_impl_58851(makeNimstrLit("karax.nim(166, 12) `x.expanded != nil` "));
		}
		
		result_270171 = vnode_to_dom_270167(x_270422.expanded, kxi_270170);
		n_270169.dom = result_270171;
		if (!((n_270169.id == null))) {
		kxi_269324[0].byId[n_270169.id] = n_270169;
		}
		
		break BeforeRet;
		}
		else {
			result_270171 = document.createElement(to_tag_257689[chckIndx(n_270169.kind, 0, to_tag_257689.length+0-1)-0]);
			n_270169.dom = result_270171;
			if (!((n_270169.id == null))) {
			kxi_269324[0].byId[n_270169.id] = n_270169;
			}
			
			L1: do {
				var k_270831 = null;
				L2: do {
					var i_335863 = 0;
					var colontmp__335864 = 0;
					colontmp__335864 = (n_270169.kids != null ? n_270169.kids.length : 0);
					var i_335865 = 0;
					L3: do {
							L4: while (true) {
							if (!(i_335865 < colontmp__335864)) break L4;
								i_335863 = i_335865;
								k_270831 = n_270169.kids[chckIndx(i_335863, 0, n_270169.kids.length+0-1)-0];
								result_270171.appendChild(vnode_to_dom_270167(k_270831, kxi_270170));
								i_335865 = addInt(i_335865, 1);
							}
					} while(false);
				} while(false);
			} while(false);
			if (!((n_270169.text == null))) {
			result_270171.value = n_270169.text;
			}
			
		}
		}}}}
		if (!((n_270169.id == null))) {
		result_270171.id = n_270169.id;
		}
		
		if (!((n_270169.class == null))) {
		result_270171.className = n_270169.class;
		}
		
		L5: do {
			var k_270832 = null;
			var v_270833 = null;
			L6: do {
				var i_335876 = 0;
				var colontmp__335877 = 0;
				colontmp__335877 = subInt((n_270169.attrs != null ? n_270169.attrs.length : 0), 2);
				var res_335878 = 0;
				L7: do {
						L8: while (true) {
						if (!(res_335878 <= colontmp__335877)) break L8;
							i_335876 = res_335878;
							k_270832 = n_270169.attrs[chckIndx(i_335876, 0, n_270169.attrs.length+0-1)-0];
							v_270833 = n_270169.attrs[chckIndx(addInt(i_335876, 1), 0, n_270169.attrs.length+0-1)-0];
							if (!((v_270833 == null))) {
							result_270171.setAttribute(k_270832, v_270833);
							}
							
							res_335878 = addInt(res_335878, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		apply_events_270086(n_270169);
			if (!!((kxi_270170 == null))) Tmp10 = false; else {				Tmp10 = (n_270169 == kxi_270170.toFocusV);			}			if (!Tmp10) Tmp9 = false; else {				Tmp9 = (kxi_270170.toFocus == null);			}		if (Tmp9) {
		kxi_270170.toFocus = result_270171;
		}
		
		if (!((n_270169.style == null))) {
		apply_style_255025(result_270171, n_270169.style);
		}
		
	} while (false);

	return result_270171;

}

function replace_by_id_271012(id_271014, new_tree_271015) {
		var x_271016 = document.getElementById(id_271014);
		x_271016.parentNode.replaceChild(new_tree_271015, x_271016);
		new_tree_271015.id = id_271014;

	
}

function len_258742(x_258744) {
	var result_258745 = 0;

		result_258745 = (x_258744.kids != null ? x_258744.kids.length : 0);

	return result_258745;

}

function HEX5BHEX5D_258764(x_258766, idx_258767) {
	var result_258768 = null;

		result_258768 = x_258766.kids[chckIndx(idx_258767, 0, x_258766.kids.length+0-1)-0];

	return result_258768;

}

function same_270920(n_270922, e_270923, nesting_270924) {
			var Tmp1;
			var Tmp2;

	var result_270926 = false;

	BeforeRet: do {
		if (kxi_269324[0].orphans.hasOwnProperty(n_270922.id)) {
		result_270926 = true;
		break BeforeRet;
		}
		
		if ((n_270922.kind == 5)) {
		result_270926 = same_270920(n_270922.expanded, e_270923, addInt(nesting_270924, 1));
		}
		else {
		if ((n_270922.kind == 6)) {
		result_270926 = true;
		}
		else {
			if ((n_270922.kind == 3)) Tmp1 = true; else {				Tmp1 = (n_270922.kind == 4);			}		if (Tmp1) {
		result_270926 = true;
		}
		else {
		if ((to_tag_257689[chckIndx(n_270922.kind, 0, to_tag_257689.length+0-1)-0] == e_270923.nodeName)) {
		result_270926 = true;
		if (!((n_270922.kind == 0))) {
			if (!!((e_270923.childNodes.length == len_258742(n_270922)))) Tmp2 = false; else {				Tmp2 = !((n_270922.kind == 111));			}		if (Tmp2) {
		rawEcho(makeNimstrLit("expected "), cstrToNimstr((len_258742(n_270922))+""), makeNimstrLit(" real "), cstrToNimstr((e_270923.childNodes.length)+""), makeNimstrLit(" "), cstrToNimstr(to_tag_257689[chckIndx(n_270922.kind, 0, to_tag_257689.length+0-1)-0]), makeNimstrLit(" nesting "), cstrToNimstr((nesting_270924)+""));
		result_270926 = false;
		break BeforeRet;
		}
		
		L3: do {
			var i_270994 = 0;
			var colontmp__335902 = 0;
			colontmp__335902 = len_258742(n_270922);
			var i_335903 = 0;
			L4: do {
					L5: while (true) {
					if (!(i_335903 < colontmp__335902)) break L5;
						i_270994 = i_335903;
						if (!(same_270920(HEX5BHEX5D_258764(n_270922, i_270994), e_270923.childNodes[i_270994], addInt(nesting_270924, 1)))) {
						result_270926 = false;
						break BeforeRet;
						}
						
						i_335903 = addInt(i_335903, 1);
					}
			} while(false);
		} while(false);
		}
		
		}
		else {
		rawEcho(makeNimstrLit("VDOM: "), cstrToNimstr(to_tag_257689[chckIndx(n_270922.kind, 0, to_tag_257689.length+0-1)-0]), makeNimstrLit(" DOM: "), cstrToNimstr(e_270923.nodeName));
		}
		}}}
	} while (false);

	return result_270926;

}

function eq_253814(a_253816, b_253817) {
	var result_253818 = false;

	BeforeRet: do {
		if ((a_253816 == null)) {
		if ((b_253817 == null)) {
		result_253818 = true;
		break BeforeRet;
		}
		else {
			result_253818 = false;
			break BeforeRet;
		}
		
		}
		else {
		if ((b_253817 == null)) {
		result_253818 = false;
		break BeforeRet;
		}
		}
		if (!((a_253816.length == b_253817.length))) {
		result_253818 = false;
		break BeforeRet;
		}
		
		L1: do {
			var i_253916 = 0;
			var colontmp__335940 = 0;
			colontmp__335940 = a_253816.length;
			var i_335941 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_335941 < colontmp__335940)) break L3;
						i_253916 = i_335941;
						if (!((a_253816[i_253916] == b_253817[i_253916]))) {
						result_253818 = false;
						break BeforeRet;
						}
						
						i_335941 = addInt(i_335941, 1);
					}
			} while(false);
		} while(false);
		result_253818 = true;
		break BeforeRet;
	} while (false);

	return result_253818;

}

function same_attrs_260680(a_260682, b_260683) {
	var result_260684 = false;

	BeforeRet: do {
		if (((a_260682.attrs != null ? a_260682.attrs.length : 0) == (b_260683.attrs != null ? b_260683.attrs.length : 0))) {
		result_260684 = true;
		L1: do {
			var i_260707 = 0;
			var colontmp__335945 = 0;
			colontmp__335945 = (a_260682.attrs != null ? a_260682.attrs.length : 0);
			var i_335946 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_335946 < colontmp__335945)) break L3;
						i_260707 = i_335946;
						if (!((a_260682.attrs[chckIndx(i_260707, 0, a_260682.attrs.length+0-1)-0] == b_260683.attrs[chckIndx(i_260707, 0, b_260683.attrs.length+0-1)-0]))) {
						result_260684 = false;
						break BeforeRet;
						}
						
						i_335946 = addInt(i_335946, 1);
					}
			} while(false);
		} while(false);
		}
		
	} while (false);

	return result_260684;

}

function eq_271214(a_271216, b_271217) {
			var Tmp4;
			var Tmp5;

	var result_271218 = 0;

	BeforeRet: do {
		if (!((a_271216.kind == b_271217.kind))) {
		result_271218 = 1;
		break BeforeRet;
		}
		
		if (!((a_271216.id == b_271217.id))) {
		result_271218 = 1;
		break BeforeRet;
		}
		
		result_271218 = 3;
		if (!((a_271216.index == b_271217.index))) {
		result_271218 = 1;
		break BeforeRet;
		}
		
		if ((a_271216.kind == 0)) {
		if (!((a_271216.text == b_271217.text))) {
		result_271218 = 1;
		break BeforeRet;
		}
		
		}
		else {
		if ((a_271216.kind == 3)) {
		if (!((a_271216.text == b_271217.text))) {
		result_271218 = 1;
		break BeforeRet;
		}
		
		if (!((len_258742(a_271216) == len_258742(b_271217)))) {
		result_271218 = 1;
		break BeforeRet;
		}
		
		L1: do {
			var i_272014 = 0;
			var colontmp__335935 = 0;
			colontmp__335935 = len_258742(a_271216);
			var i_335936 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_335936 < colontmp__335935)) break L3;
						i_272014 = i_335936;
						if ((eq_271214(HEX5BHEX5D_258764(a_271216, i_272014), HEX5BHEX5D_258764(b_271217, i_272014)) == 1)) {
						result_271218 = 1;
						break BeforeRet;
						}
						
						i_335936 = addInt(i_335936, 1);
					}
			} while(false);
		} while(false);
		}
		else {
		if ((a_271216.kind == 4)) {
		result_271218 = 3;
		break BeforeRet;
		}
		else {
		if ((a_271216.kind == 6)) {
		if (!((a_271216.text == b_271217.text))) {
		result_271218 = 1;
		break BeforeRet;
		}
		
		}
		else {
		if ((b_271217.kind == 5)) {
		if (!((a_271216.text == b_271217.text))) {
		result_271218 = 1;
		break BeforeRet;
		}
		
		if (!((a_271216.key == b_271217.key))) {
		result_271218 = 1;
		break BeforeRet;
		}
		
		result_271218 = 0;
		break BeforeRet;
		}
		}}}}
			if (!((a_271216.class == b_271217.class))) Tmp5 = true; else {				Tmp5 = !(eq_253814(a_271216.style, b_271217.style));			}			if (Tmp5) Tmp4 = true; else {				Tmp4 = !(same_attrs_260680(a_271216, b_271217));			}		if (Tmp4) {
		result_271218 = 2;
		break BeforeRet;
		}
		
		break BeforeRet;
	} while (false);

	return result_271218;

}

function update_styles_272629(new_node_272631, old_node_272632) {
		if (!((old_node_272632.dom == null))) {
		if (!((new_node_272631.style == null))) {
		apply_style_255025(old_node_272632.dom, new_node_272631.style);
		}
		else {
			old_node_272632.dom.style = {m_type: NTI93283, background: null, backgroundAttachment: null, backgroundColor: null, backgroundImage: null, backgroundPosition: null, backgroundRepeat: null, border: null, borderBottom: null, borderBottomColor: null, borderBottomStyle: null, borderBottomWidth: null, borderColor: null, borderLeft: null, borderLeftColor: null, borderLeftStyle: null, borderLeftWidth: null, borderRight: null, borderRightColor: null, borderRightStyle: null, borderRightWidth: null, borderStyle: null, borderTop: null, borderTopColor: null, borderTopStyle: null, borderTopWidth: null, borderWidth: null, bottom: null, captionSide: null, clear: null, clip: null, color: null, cursor: null, direction: null, display: null, emptyCells: null, cssFloat: null, font: null, fontFamily: null, fontSize: null, fontStretch: null, fontStyle: null, fontVariant: null, fontWeight: null, height: null, left: null, letterSpacing: null, lineHeight: null, listStyle: null, listStyleImage: null, listStylePosition: null, listStyleType: null, margin: null, marginBottom: null, marginLeft: null, marginRight: null, marginTop: null, maxHeight: null, maxWidth: null, minHeight: null, minWidth: null, overflow: null, padding: null, paddingBottom: null, paddingLeft: null, paddingRight: null, paddingTop: null, pageBreakAfter: null, pageBreakBefore: null, pointerEvents: null, position: null, right: null, scrollbar3dLightColor: null, scrollbarArrowColor: null, scrollbarBaseColor: null, scrollbarDarkshadowColor: null, scrollbarFaceColor: null, scrollbarHighlightColor: null, scrollbarShadowColor: null, scrollbarTrackColor: null, tableLayout: null, textAlign: null, textDecoration: null, textIndent: null, textTransform: null, transform: null, top: null, verticalAlign: null, visibility: null, width: null, wordSpacing: null, zIndex: 0};
		}
		
		old_node_272632.dom.className = new_node_272631.class;
		}
		
		old_node_272632.style = new_node_272631.style;
		old_node_272632.class = new_node_272631.class;

	
}

function take_over_attr_258674(new_node_258676, old_node_258677) {
		old_node_258677.attrs = new_node_258676.attrs;

	
}

function update_attributes_272677(new_node_272679, old_node_272680) {
		if (!((old_node_272680.dom == null))) {
		L1: do {
			var k_272689 = null;
			var __272690 = null;
			L2: do {
				var i_335952 = 0;
				var colontmp__335953 = 0;
				colontmp__335953 = subInt((old_node_272680.attrs != null ? old_node_272680.attrs.length : 0), 2);
				var res_335954 = 0;
				L3: do {
						L4: while (true) {
						if (!(res_335954 <= colontmp__335953)) break L4;
							i_335952 = res_335954;
							k_272689 = old_node_272680.attrs[chckIndx(i_335952, 0, old_node_272680.attrs.length+0-1)-0];
							__272690 = old_node_272680.attrs[chckIndx(addInt(i_335952, 1), 0, old_node_272680.attrs.length+0-1)-0];
							old_node_272680.dom.removeAttribute(k_272689);
							res_335954 = addInt(res_335954, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		L5: do {
			var k_272691 = null;
			var v_272692 = null;
			L6: do {
				var i_335960 = 0;
				var colontmp__335961 = 0;
				colontmp__335961 = subInt((new_node_272679.attrs != null ? new_node_272679.attrs.length : 0), 2);
				var res_335962 = 0;
				L7: do {
						L8: while (true) {
						if (!(res_335962 <= colontmp__335961)) break L8;
							i_335960 = res_335962;
							k_272691 = new_node_272679.attrs[chckIndx(i_335960, 0, new_node_272679.attrs.length+0-1)-0];
							v_272692 = new_node_272679.attrs[chckIndx(addInt(i_335960, 1), 0, new_node_272679.attrs.length+0-1)-0];
							if (!((v_272692 == null))) {
							old_node_272680.dom.setAttribute(k_272691, v_272692);
							}
							
							res_335962 = addInt(res_335962, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		}
		
		take_over_attr_258674(new_node_272679, old_node_272680);

	
}

function merge_events_272706(new_node_272708, old_node_272709, kxi_272710) {
						var Tmp4;

		var d_272711 = old_node_272709.dom;
		L1: do {
			var i_272724 = 0;
			var colontmp__335967 = 0;
			colontmp__335967 = (old_node_272709.events != null ? old_node_272709.events.length : 0);
			var i_335968 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_335968 < colontmp__335967)) break L3;
						i_272724 = i_335968;
						var k_272725 = old_node_272709.events[chckIndx(i_272724, 0, old_node_272709.events.length+0-1)-0]["Field0"];
						switch (k_272725) {
						case 30:
						case 29:
							Tmp4 = "keyup";
							break;
						default: 
							Tmp4 = to_event_name_257695[chckIndx(k_272725, 0, to_event_name_257695.length+0-1)-0];
							break;
						}
						var name_272728 = Tmp4;
						d_272711.removeEventListener(name_272728, old_node_272709.events[chckIndx(i_272724, 0, old_node_272709.events.length+0-1)-0]["Field2"]);
						i_335968 = addInt(i_335968, 1);
					}
			} while(false);
		} while(false);
		old_node_272709.events = new_node_272708.events;
		apply_events_270086(old_node_272709);

	
}

function HEX5BHEX5DHEX3D_258782(x_258784, idx_258785, y_258786) {
		x_258784.kids[chckIndx(idx_258785, 0, x_258784.kids.length+0-1)-0] = y_258786;

	
}

function add_patch_v_272868(kxi_272870, parent_272871, pos_272872, new_child_272873) {
		var l_272874 = kxi_272870.patchLenV;
		if (((kxi_272870.patchesV != null ? kxi_272870.patchesV.length : 0) <= l_272874)) {
		if (kxi_272870.patchesV != null) { kxi_272870.patchesV.push({parent: parent_272871, newChild: new_child_272873, pos: pos_272872}); } else { kxi_272870.patchesV = [{parent: parent_272871, newChild: new_child_272873, pos: pos_272872}]; };
		}
		else {
			kxi_272870.patchesV[chckIndx(l_272874, 0, kxi_272870.patchesV.length+0-1)-0].parent = parent_272871;
			kxi_272870.patchesV[chckIndx(l_272874, 0, kxi_272870.patchesV.length+0-1)-0].newChild = new_child_272873;
			kxi_272870.patchesV[chckIndx(l_272874, 0, kxi_272870.patchesV.length+0-1)-0].pos = pos_272872;
		}
		
		kxi_272870.patchLenV = addInt(kxi_272870.patchLenV, 1);

	
}

function add_patch_272814(kxi_272816, ka_272817, parenta_272818, currenta_272819, na_272820) {
		var l_272821 = kxi_272816.patchLen;
		if (((kxi_272816.patches != null ? kxi_272816.patches.length : 0) <= l_272821)) {
		if (kxi_272816.patches != null) { kxi_272816.patches.push({k: ka_272817, parent: parenta_272818, current: currenta_272819, n: na_272820}); } else { kxi_272816.patches = [{k: ka_272817, parent: parenta_272818, current: currenta_272819, n: na_272820}]; };
		}
		else {
			kxi_272816.patches[chckIndx(l_272821, 0, kxi_272816.patches.length+0-1)-0].k = ka_272817;
			kxi_272816.patches[chckIndx(l_272821, 0, kxi_272816.patches.length+0-1)-0].parent = parenta_272818;
			kxi_272816.patches[chckIndx(l_272821, 0, kxi_272816.patches.length+0-1)-0].current = currenta_272819;
			kxi_272816.patches[chckIndx(l_272821, 0, kxi_272816.patches.length+0-1)-0].n = na_272820;
		}
		
		kxi_272816.patchLen = addInt(kxi_272816.patchLen, 1);

	
}

function diff_273045(new_node_273047, old_node_273048, parent_273049, current_273050, kxi_273051) {
				var Tmp1;
			var Tmp2;
			var Tmp3;
						var Tmp6;
						var Tmp9;
						var Tmp10;

	var result_273052 = 0;

	BeforeRet: do {
		result_273052 = eq_271214(new_node_273047, old_node_273048);
		switch (result_273052) {
		case 0:
			if (kxi_273051.components != null) { kxi_273051.components.push({oldNode: old_node_273048, newNode: new_node_273047, parent: parent_273049, current: current_273050}); } else { kxi_273051.components = [{oldNode: old_node_273048, newNode: new_node_273047, parent: parent_273049, current: current_273050}]; };
			break;
		case 3:
		case 2:
			new_node_273047.dom = old_node_273048.dom;
			if ((result_273052 == 2)) {
			update_styles_272629(new_node_273047, old_node_273048);
			update_attributes_272677(new_node_273047, old_node_273048);
			if ((old_node_273048.kind == 0)) {
			old_node_273048.text = new_node_273047.text;
			old_node_273048.dom.nodeValue = new_node_273047.text;
			}
			
			}
			
				if (!(((new_node_273047.events != null ? new_node_273047.events.length : 0) == 0))) Tmp1 = true; else {					Tmp1 = !(((old_node_273048.events != null ? old_node_273048.events.length : 0) == 0));				}			if (Tmp1) {
			merge_events_272706(new_node_273047, old_node_273048, kxi_273051);
			}
			
			var new_length_273401 = len_258742(new_node_273047);
			var old_length_273402 = len_258742(old_node_273048);
			if (((new_length_273401 == 0) && (old_length_273402 == 0))) {
			break BeforeRet;
			}
			
			var min_length_273403 = nimMin(new_length_273401, old_length_273402);
			if (!((old_node_273048.kind == new_node_273047.kind))) {
			failed_assert_impl_58851(makeNimstrLit("karax.nim(419, 12) `oldNode.kind == newNode.kind` "));
			}
			
			var common_prefix_273602 = 0;
			if ((old_node_273048.kind == 5)) Tmp3 = true; else {				Tmp3 = (old_node_273048.kind == 3);			}			if (Tmp3) Tmp2 = true; else {				Tmp2 = (old_node_273048.kind == 4);			}			var is_special_273621 = Tmp2;
			L4: do {
					L5: while (true) {
					if (!(common_prefix_273602 < min_length_273403)) break L5;
						var old_len_273645 = kxi_273051.patchLen;
						var old_len_v_273646 = kxi_273051.patchLenV;
						if (!((common_prefix_273602 < len_258742(new_node_273047)))) {
						failed_assert_impl_58851(makeNimstrLit("karax.nim(428, 14) `commonPrefix <\x0A    newNode.len` "));
						}
						
						if (!((common_prefix_273602 < len_258742(old_node_273048)))) {
						failed_assert_impl_58851(makeNimstrLit("karax.nim(429, 14) `commonPrefix <\x0A    oldNode.len` "));
						}
						
						if (is_special_273621) {
						Tmp6 = diff_273045(HEX5BHEX5D_258764(new_node_273047, common_prefix_273602), HEX5BHEX5D_258764(old_node_273048, common_prefix_273602), parent_273049, current_273050, kxi_273051);
						}
						else {
						Tmp6 = diff_273045(HEX5BHEX5D_258764(new_node_273047, common_prefix_273602), HEX5BHEX5D_258764(old_node_273048, common_prefix_273602), current_273050, current_273050.childNodes[chckIndx(common_prefix_273602, 0, current_273050.childNodes.length+0-1)-0], kxi_273051);
						}
						
						var r_273647 = Tmp6;
						switch (r_273647) {
						case 3:
						case 0:
						case 2:
							HEX5BHEX5DHEX3D_258782(new_node_273047, common_prefix_273602, HEX5BHEX5D_258764(old_node_273048, common_prefix_273602));
							common_prefix_273602 = addInt(common_prefix_273602, 1);
							break;
						case 4:
							add_patch_v_272868(kxi_273051, old_node_273048, common_prefix_273602, HEX5BHEX5D_258764(new_node_273047, common_prefix_273602));
							common_prefix_273602 = addInt(common_prefix_273602, 1);
							result_273052 = 4;
							break;
						case 1:
							kxi_273051.patchLen = old_len_273645;
							kxi_273051.patchLenV = old_len_v_273646;
							if (!((result_273052 == 1))) {
							result_273052 = r_273647;
							}
							
							break L4;
							break;
						}
					}
			} while(false);
			var old_pos_274022 = subInt(old_length_273402, 1);
			var new_pos_274023 = subInt(new_length_273401, 1);
			L7: do {
					L8: while (true) {
						if (!(common_prefix_273602 <= old_pos_274022)) Tmp9 = false; else {							Tmp9 = (common_prefix_273602 <= new_pos_274023);						}					if (!Tmp9) break L8;
						var old_len_274024 = kxi_273051.patchLen;
						var old_len_v_274025 = kxi_273051.patchLenV;
						if (!((new_pos_274023 < len_258742(new_node_273047)))) {
						failed_assert_impl_58851(makeNimstrLit("karax.nim(428, 14) `newPos <\x0A    newNode.len` "));
						}
						
						if (!((old_pos_274022 < len_258742(old_node_273048)))) {
						failed_assert_impl_58851(makeNimstrLit("karax.nim(429, 14) `oldPos <\x0A    oldNode.len` "));
						}
						
						if (is_special_273621) {
						Tmp10 = diff_273045(HEX5BHEX5D_258764(new_node_273047, new_pos_274023), HEX5BHEX5D_258764(old_node_273048, old_pos_274022), parent_273049, current_273050, kxi_273051);
						}
						else {
						Tmp10 = diff_273045(HEX5BHEX5D_258764(new_node_273047, new_pos_274023), HEX5BHEX5D_258764(old_node_273048, old_pos_274022), current_273050, current_273050.childNodes[chckIndx(old_pos_274022, 0, current_273050.childNodes.length+0-1)-0], kxi_273051);
						}
						
						var r_274026 = Tmp10;
						switch (r_274026) {
						case 3:
						case 0:
						case 2:
							HEX5BHEX5DHEX3D_258782(new_node_273047, new_pos_274023, HEX5BHEX5D_258764(old_node_273048, old_pos_274022));
							old_pos_274022 = subInt(old_pos_274022, 1);
							new_pos_274023 = subInt(new_pos_274023, 1);
							break;
						case 4:
							add_patch_v_272868(kxi_273051, old_node_273048, old_pos_274022, HEX5BHEX5D_258764(new_node_273047, new_pos_274023));
							old_pos_274022 = subInt(old_pos_274022, 1);
							new_pos_274023 = subInt(new_pos_274023, 1);
							result_273052 = 4;
							break;
						case 1:
							kxi_273051.patchLen = old_len_274024;
							kxi_273051.patchLenV = old_len_v_274025;
							if (!((result_273052 == 1))) {
							result_273052 = r_274026;
							}
							
							break L7;
							break;
						}
					}
			} while(false);
			var pos_274434 = addInt(nimMin(old_pos_274022, new_pos_274023), 1);
			L11: do {
				var i_274440 = 0;
				var colontmp__335910 = 0;
				colontmp__335910 = subInt(pos_274434, 1);
				var res_335911 = common_prefix_273602;
				L12: do {
						L13: while (true) {
						if (!(res_335911 <= colontmp__335910)) break L13;
							i_274440 = res_335911;
							var r_274441 = diff_273045(HEX5BHEX5D_258764(new_node_273047, i_274440), HEX5BHEX5D_258764(old_node_273048, i_274440), current_273050, current_273050.childNodes[chckIndx(i_274440, 0, current_273050.childNodes.length+0-1)-0], kxi_273051);
							if ((r_274441 == 4)) {
							add_patch_v_272868(kxi_273051, old_node_273048, i_274440, HEX5BHEX5D_258764(new_node_273047, i_274440));
							}
							else {
							if (!((r_274441 == 1))) {
							HEX5BHEX5DHEX3D_258782(new_node_273047, i_274440, HEX5BHEX5D_258764(old_node_273048, i_274440));
							}
							}
							res_335911 = addInt(res_335911, 1);
						}
				} while(false);
			} while(false);
			if ((addInt(old_pos_274022, 1) == old_length_273402)) {
			L14: do {
				var i_274457 = 0;
				var res_335917 = pos_274434;
				L15: do {
						L16: while (true) {
						if (!(res_335917 <= new_pos_274023)) break L16;
							i_274457 = res_335917;
							add_patch_272814(kxi_273051, 2, current_273050, null, HEX5BHEX5D_258764(new_node_273047, i_274457));
							result_273052 = 4;
							res_335917 = addInt(res_335917, 1);
						}
				} while(false);
			} while(false);
			}
			else {
				var before_274458 = current_273050.childNodes[chckIndx(addInt(old_pos_274022, 1), 0, current_273050.childNodes.length+0-1)-0];
				L17: do {
					var i_274464 = 0;
					var res_335923 = pos_274434;
					L18: do {
							L19: while (true) {
							if (!(res_335923 <= new_pos_274023)) break L19;
								i_274464 = res_335923;
								add_patch_272814(kxi_273051, 3, current_273050, before_274458, HEX5BHEX5D_258764(new_node_273047, i_274464));
								result_273052 = 4;
								res_335923 = addInt(res_335923, 1);
							}
					} while(false);
				} while(false);
			}
			
			L20: do {
				var i_274470 = 0;
				var res_335929 = pos_274434;
				L21: do {
						L22: while (true) {
						if (!(res_335929 <= old_pos_274022)) break L22;
							i_274470 = res_335929;
							add_patch_272814(kxi_269324[0], 4, null, null, HEX5BHEX5D_258764(old_node_273048, i_274470));
							add_patch_272814(kxi_273051, 1, current_273050, current_273050.childNodes[chckIndx(i_274470, 0, current_273050.childNodes.length+0-1)-0], null);
							result_273052 = 4;
							res_335929 = addInt(res_335929, 1);
						}
				} while(false);
			} while(false);
			break;
		case 1:
			add_patch_272814(kxi_269324[0], 4, null, null, old_node_273048);
			add_patch_272814(kxi_273051, 0, parent_273049, current_273050, new_node_273047);
			break;
		case 4:
			if (true) {
			failed_assert_impl_58851(makeNimstrLit("karax.nim(492, 26) `false` eq returned usenewNode"));
			}
			
			break;
		}
	} while (false);

	return result_273052;

}

function apply_components_274814(kxi_274816) {
						var Tmp3;

		var i_274818 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_274818 < (kxi_274816.components != null ? kxi_274816.components.length : 0))) break L2;
					var x_274824 = kxi_274816.components[chckIndx(i_274818, 0, kxi_274816.components.length+0-1)-0].oldNode;
					var new_node_274825 = kxi_274816.components[chckIndx(i_274818, 0, kxi_274816.components.length+0-1)-0].newNode;
						if (!!((x_274824.changedImpl == null))) Tmp3 = false; else {							Tmp3 = x_274824.changedImpl(x_274824, new_node_274825);						}					if (Tmp3) {
					var current_275201 = kxi_274816.components[chckIndx(i_274818, 0, kxi_274816.components.length+0-1)-0].current;
					var parent_275202 = kxi_274816.components[chckIndx(i_274818, 0, kxi_274816.components.length+0-1)-0].parent;
					x_274824.updatedImpl(x_274824, new_node_274825);
					var old_expanded_275203 = x_274824.expanded;
					x_274824.expanded = x_274824.renderImpl(x_274824);
					x_274824.renderedVersion = x_274824.version;
					if ((old_expanded_275203 == null)) {
					add_patch_272814(kxi_269324[0], 4, null, null, x_274824);
					add_patch_272814(kxi_274816, 0, parent_275202, current_275201, x_274824.expanded);
					}
					else {
						var res_275601 = diff_273045(x_274824.expanded, old_expanded_275203, parent_275202, current_275201, kxi_274816);
						if ((res_275601 == 4)) {
						}
						else {
						if (!((res_275601 == 1))) {
						x_274824.expanded = old_expanded_275203;
						if (!(!((old_expanded_275203.dom == null)))) {
						failed_assert_impl_58851(makeNimstrLit("karax.nim(534, 18) `oldExpanded.dom != nil` old expanded.dom is nil"));
						}
						
						}
						else {
							if (!(!((x_274824.expanded.dom == null)))) {
							failed_assert_impl_58851(makeNimstrLit("karax.nim(538, 18) `x.expanded.dom != nil` expanded.dom is nil"));
							}
							
						}
						}
					}
					
					}
					
					i_274818 = addInt(i_274818, 1);
				}
		} while(false);
		if (kxi_274816.components === null) kxi_274816.components = [];
               if (kxi_274816.components.length < 0) { for (var i=kxi_274816.components.length;i<0;++i) kxi_274816.components.push({oldNode: null, newNode: null, parent: null, current: null}); }
               else { kxi_274816.components.length = 0; };

	
}

function apply_patch_272906(kxi_272908) {
		L1: do {
			var i_272916 = 0;
			var colontmp__335975 = 0;
			colontmp__335975 = kxi_272908.patchLen;
			var i_335976 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_335976 < colontmp__335975)) break L3;
						i_272916 = i_335976;
						var p_272917 = nimCopy(null, kxi_272908.patches[chckIndx(i_272916, 0, kxi_272908.patches.length+0-1)-0], NTI269209);
						switch (p_272917.k) {
						case 0:
							var nn_272918 = vnode_to_dom_270167(p_272917.n, kxi_272908);
							if ((p_272917.parent == null)) {
							replace_by_id_271012(kxi_272908.rootId, nn_272918);
							}
							else {
							p_272917.parent.replaceChild(nn_272918, p_272917.current);
							}
							
							break;
						case 1:
							p_272917.parent.removeChild(p_272917.current);
							break;
						case 2:
							var nn_272927 = vnode_to_dom_270167(p_272917.n, kxi_272908);
							p_272917.parent.appendChild(nn_272927);
							break;
						case 3:
							var nn_272928 = vnode_to_dom_270167(p_272917.n, kxi_272908);
							p_272917.parent.insertBefore(nn_272928, p_272917.current);
							break;
						case 4:
							var n_272929 = p_272917.n;
							if (!((n_272929.id == null))) {
							delete kxi_272908.byId[n_272929.id];
							}
							
							if ((n_272929.kind == 5)) {
							var x_272947 = n_272929;
							if (!((x_272947.onDetachImpl == null))) {
							x_272947.onDetachImpl(x_272947);
							}
							
							}
							
							if (!(kxi_272908.surpressRedraws)) {
							n_272929.dom = null;
							}
							
							break;
						}
						i_335976 = addInt(i_335976, 1);
					}
			} while(false);
		} while(false);
		kxi_272908.patchLen = 0;
		L4: do {
			var i_272960 = 0;
			var colontmp__335980 = 0;
			colontmp__335980 = kxi_272908.patchLenV;
			var i_335981 = 0;
			L5: do {
					L6: while (true) {
					if (!(i_335981 < colontmp__335980)) break L6;
						i_272960 = i_335981;
						var p_272961 = nimCopy(null, kxi_272908.patchesV[chckIndx(i_272960, 0, kxi_272908.patchesV.length+0-1)-0], NTI269211);
						HEX5BHEX5DHEX3D_258782(p_272961.parent, p_272961.pos, p_272961.newChild);
						if (!(!((p_272961.newChild.dom == null)))) {
						failed_assert_impl_58851(makeNimstrLit("karax.nim(378, 12) `p.newChild.dom != nil` "));
						}
						
						i_335981 = addInt(i_335981, 1);
					}
			} while(false);
		} while(false);
		kxi_272908.patchLenV = 0;

	
}

function dodraw_277646(kxi_277648) {
	BeforeRet: do {
		if ((kxi_277648.renderer == null)) {
		break BeforeRet;
		}
		
		var rdata_277653 = {hashPart: window.location.hash};
		var newtree_277654 = kxi_277648.renderer(rdata_277653);
		kxi_277648.runCount = addInt(kxi_277648.runCount, 1);
		newtree_277654.id = kxi_277648.rootId;
		kxi_277648.toFocus = null;
		if ((kxi_277648.currentTree == null)) {
		var asdom_277669 = vnode_to_dom_270167(newtree_277654, kxi_277648);
		replace_by_id_271012(kxi_277648.rootId, asdom_277669);
		}
		else {
			if (!(same_270920(kxi_277648.currentTree, document.getElementById(kxi_277648.rootId), 0))) {
			failed_assert_impl_58851(makeNimstrLit("karax.nim(598, 14) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
			}
			
			var olddom_277801 = document.getElementById(kxi_277648.rootId);
			diff_273045(newtree_277654, kxi_277648.currentTree, null, olddom_277801, kxi_277648);
		}
		
		apply_components_274814(kxi_277648);
		apply_patch_272906(kxi_277648);
		kxi_277648.currentTree = newtree_277654;
		if (!(same_270920(kxi_277648.currentTree, document.getElementById(kxi_277648.rootId), 0))) {
		failed_assert_impl_58851(makeNimstrLit("karax.nim(612, 12) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
		}
		
		if (!((kxi_277648.postRenderCallback == null))) {
		kxi_277648.postRenderCallback(rdata_277653);
		}
		
		if (!((kxi_277648.toFocus == null))) {
		kxi_277648.toFocus.focus();
		}
		
		kxi_277648.renderId = 0;
	} while (false);

	
}

function init_279046(ev_279048) {

		function HEX3Aanonymous_279049() {
				dodraw_277646(kxi_269324[0]);

			
		}

		kxi_269324[0].renderId = window.requestAnimationFrame(HEX3Aanonymous_279049);

	
}

function redraw_278814(kxi_278816) {

		function HEX3Aanonymous_279001() {
				dodraw_277646(kxi_278816);

			
		}

		if ((kxi_278816.renderId == 0)) {
		kxi_278816.renderId = window.requestAnimationFrame(HEX3Aanonymous_279001);
		}
		

	
}

function set_renderer_279078(renderer_279083, root_279084, client_post_render_callback_279088) {

		function HEX3Aanonymous_279310() {
				redraw_278814(kxi_269324[0]);

			
		}

	var result_279089 = null;

		if ((document.getElementById(root_279084) == null)) {
		var msg_279095 = (("Could not find a <div> with id=" + root_279084) + ". Karax needs it as its rendering target.");
		var e_279098 = null;
		e_279098 = {m_type: NTI47826, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_279098.message = nimCopy(null, cstrToNimstr(msg_279095), NTI44040);
		e_279098.parent = null;
		raiseException(e_279098, "Exception");
		}
		
		result_279089 = {rootId: root_279084, renderer: renderer_279083, postRenderCallback: client_post_render_callback_279088, patches: new_seq_279212(60), patchesV: new_seq_279249(30), components: [], surpressRedraws: false, byId: {}, orphans: {}, currentTree: null, toFocus: null, toFocusV: null, renderId: 0, patchLen: 0, patchLenV: 0, runCount: 0};
		kxi_269324[0] = result_279089;
		window.onload = init_279046;
		window.onhashchange = HEX3Aanonymous_279310;

	return result_279089;

}

function set_renderer_279383(renderer_279387, root_279388, client_post_render_callback_279391) {

		function wrap_renderer_279393(data_279395) {
			var result_279396 = null;

				result_279396 = renderer_279387();

			return result_279396;

		}

		function wrap_post_render_279410(data_279412) {
				if (!((client_post_render_callback_279391 == null))) {
				client_post_render_callback_279391();
				}
				

			
		}

	var result_279392 = null;

		result_279392 = set_renderer_279078(wrap_renderer_279393, root_279388, wrap_post_render_279410);

	return result_279392;

}

function new_vnode_260228(kind_260230) {
	var result_260231 = null;

		result_260231 = {kind: kind_260230, index: -1, m_type: NTI257714, id: null, class: null, text: null, kids: null, attrs: null, events: null, style: null, dom: null};

	return result_260231;

}

function add_258800(parent_258802, kid_258803) {
		if (parent_258802.kids != null) { parent_258802.kids.push(kid_258803); } else { parent_258802.kids = [kid_258803]; };

	
}

function tree_260246(kind_260248, kids_260250) {
	var result_260251 = null;

		result_260251 = new_vnode_260228(kind_260248);
		L1: do {
			var k_260282 = null;
			var i_336048 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_336048 < (kids_260250 != null ? kids_260250.length : 0))) break L3;
						k_260282 = kids_260250[chckIndx(i_336048, 0, kids_260250.length+0-1)-0];
						add_258800(result_260251, k_260282);
						i_336048 = addInt(i_336048, 1);
					}
			} while(false);
		} while(false);

	return result_260251;

}

function add_event_listener_260721(n_260723, event_260724, handler_260725) {
		if (n_260723.events != null) { n_260723.events.push({Field0: event_260724, Field1: handler_260725, Field2: null}); } else { n_260723.events = [{Field0: event_260724, Field1: handler_260725, Field2: null}]; };

	
}

function add_event_handler_279528(n_279530, k_279531, action_279532, kxi_279533) {

		function wrapper_279534(ev_279536, n_279537) {
				action_279532(ev_279536, n_279537);
				if (!(kxi_279533.surpressRedraws)) {
				redraw_278814(kxi_279533);
				}
				

			
		}

		add_event_listener_260721(n_279530, k_279531, wrapper_279534);

	
}

function chckd_check_310894(ev_310896, n_310897) {
		L1: do {
			var inp_chck_311014 = null;
			var colontmp__336052 = null;
			colontmp__336052 = document.querySelectorAll(".show-sector");
			var i_336054 = 0;
			var l_336055 = (colontmp__336052 != null ? colontmp__336052.length : 0);
			L2: do {
					L3: while (true) {
					if (!(i_336054 < l_336055)) break L3;
						inp_chck_311014 = colontmp__336052[chckIndx(i_336054, 0, colontmp__336052.length+0-1)-0];
						if ((inp_chck_311014.getAttribute("checkd") == "true")) {
						inp_chck_311014.setAttribute("checked", "true");
						}
						else {
						inp_chck_311014.removeAttribute("checked");
						}
						
						i_336054 = addInt(i_336054, 1);
						if (!(((colontmp__336052 != null ? colontmp__336052.length : 0) == l_336055))) {
						failed_assert_impl_58851(makeNimstrLit("iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);

	
}

function len_311180(t_311185) {
	var result_311186 = 0;

		result_311186 = t_311185.counter;

	return result_311186;

}

function text_260364(s_260366) {
	var result_260367 = null;

		result_260367 = {kind: 0, text: toJSStr(s_260366), index: -1, m_type: NTI257714, id: null, class: null, kids: null, attrs: null, events: null, style: null, dom: null};

	return result_260367;

}

function init_ordered_table_305473(initial_size_305477) {
	var result_305479 = {data: null, counter: 0, first: 0, last: 0};

		if (!(is_power_of_two_108062(initial_size_305477))) {
		failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_305479.counter = 0;
		result_305479.data = new Array(chckRange(initial_size_305477, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_305477, 0, 2147483647);++i) {result_305479.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		result_305479.first = -1;
		result_305479.last = -1;

	return result_305479;

}

function raiseDivByZero() {
		var e_65241 = null;
		e_65241 = {m_type: NTI47844, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_65241.message = nimCopy(null, makeNimstrLit("division by zero"), NTI44040);
		e_65241.parent = null;
		raiseException(e_65241, "DivByZeroError");

	
}

function HEX21HEX26_224272(h_224274, val_224275) {
	var result_224276 = 0;

		var h_224277 = (h_224274 >>> 0);
		var val_224278 = (val_224275 >>> 0);
		var res_224284 = ((h_224277 + val_224278) >>> 0);
		res_224284 = ((res_224284 + (res_224284 << 10)) >>> 0);
		res_224284 = (res_224284 ^ ((res_224284 >>> 0) >>> 6));
		result_224276 = (res_224284|0);

	return result_224276;

}

function hash_225069(x_225071) {
	var result_225072 = 0;

		result_225072 = x_225071;

	return result_225072;

}

function HEX21HEX24_224322(h_224324) {
	var result_224325 = 0;

		var h_224326 = (h_224324 >>> 0);
		var res_224339 = ((h_224326 + (h_224326 << 3)) >>> 0);
		res_224339 = (res_224339 ^ ((res_224339 >>> 0) >>> 11));
		res_224339 = ((res_224339 + (res_224339 << 15)) >>> 0);
		result_224325 = (res_224339|0);

	return result_224325;

}

function hash_225180(x_225182) {
	var result_225183 = 0;

		var element_size_225185 = 1;
		var step_size_225186 = divInt(4, element_size_225185);
		var i_225187 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_225187 <= subInt(addInt((x_225182 != null ? (x_225182.length-1) : -1), 1), step_size_225186))) break L2;
					var n_225188 = 0;
					n_225188 = x_225182[chckIndx(i_225187, 0, x_225182.length+0-1)-0];
					result_225183 = HEX21HEX26_224272(result_225183, n_225188);
					i_225187 = addInt(i_225187, step_size_225186);
				}
		} while(false);
		L3: do {
			var i_225407 = 0;
			var colontmp__267566 = 0;
			colontmp__267566 = (x_225182 != null ? (x_225182.length-1) : -1);
			var res_267567 = i_225187;
			L4: do {
					L5: while (true) {
					if (!(res_267567 <= colontmp__267566)) break L5;
						i_225407 = res_267567;
						result_225183 = HEX21HEX26_224272(result_225183, hash_225069(x_225182[chckIndx(i_225407, 0, x_225182.length+0-1)-0]));
						res_267567 = addInt(res_267567, 1);
					}
			} while(false);
		} while(false);
		result_225183 = HEX21HEX24_224322(result_225183);

	return result_225183;

}

function is_filled_228418(hcode_228420) {
	var result_228421 = false;

		result_228421 = !((hcode_228420 == 0));

	return result_228421;

}

function next_try_228435(h_228437, max_hash_228438) {
	var result_228439 = 0;

		result_228439 = (addInt(h_228437, 1) & max_hash_228438);

	return result_228439;

}

function raw_get_306421(t_306426, key_306427, hc_306428, hc_306428_Idx) {
						var Tmp3;

	var result_306429 = 0;

	BeforeRet: do {
		hc_306428[hc_306428_Idx] = hash_225180(key_306427);
		if ((hc_306428[hc_306428_Idx] == 0)) {
		hc_306428[hc_306428_Idx] = 314159265;
		}
		
		if (((t_306426.data != null ? t_306426.data.length : 0) == 0)) {
		result_306429 = -1;
		break BeforeRet;
		}
		
		var h_306571 = (hc_306428[hc_306428_Idx] & (t_306426.data != null ? (t_306426.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_228418(t_306426.data[chckIndx(h_306571, 0, t_306426.data.length+0-1)-0].Field0)) break L2;
						if (!(t_306426.data[chckIndx(h_306571, 0, t_306426.data.length+0-1)-0].Field0 == hc_306428[hc_306428_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_306426.data[chckIndx(h_306571, 0, t_306426.data.length+0-1)-0].Field2, key_306427);						}					if (Tmp3) {
					result_306429 = h_306571;
					break BeforeRet;
					}
					
					h_306571 = next_try_228435(h_306571, (t_306426.data != null ? (t_306426.data.length-1) : -1));
				}
		} while(false);
		result_306429 = subInt(-1, h_306571);
	} while (false);

	return result_306429;

}

function must_rehash_228453(length_228455, counter_228456) {
	var result_228457 = false;

		if (!((counter_228456 < length_228455))) {
		failed_assert_impl_58851(makeNimstrLit("hashcommon.nim(33, 9) `length > counter` "));
		}
		
		result_228457 = ((mulInt(length_228455, 2) < mulInt(counter_228456, 3)) || (subInt(length_228455, counter_228456) < 4));

	return result_228457;

}

function raw_insert_309107(t_309113, data_309116, data_309116_Idx, key_309117, val_309118, hc_309119, h_309120) {
		data_309116[data_309116_Idx][chckIndx(h_309120, 0, data_309116[data_309116_Idx].length+0-1)-0].Field2 = nimCopy(null, key_309117, NTI44040);
		data_309116[data_309116_Idx][chckIndx(h_309120, 0, data_309116[data_309116_Idx].length+0-1)-0].Field3 = val_309118;
		data_309116[data_309116_Idx][chckIndx(h_309120, 0, data_309116[data_309116_Idx].length+0-1)-0].Field0 = hc_309119;
		data_309116[data_309116_Idx][chckIndx(h_309120, 0, data_309116[data_309116_Idx].length+0-1)-0].Field1 = -1;
		if ((t_309113.first < 0)) {
		t_309113.first = h_309120;
		}
		
		if ((0 <= t_309113.last)) {
		data_309116[data_309116_Idx][chckIndx(t_309113.last, 0, data_309116[data_309116_Idx].length+0-1)-0].Field1 = h_309120;
		}
		
		t_309113.last = h_309120;

	
}

function enlarge_307967(t_307973) {
		var n_307981 = null;
		n_307981 = new Array(chckRange(mulInt((t_307973.data != null ? t_307973.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_307973.data != null ? t_307973.data.length : 0), 2), 0, 2147483647);++i) {n_307981[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		var h_308120 = t_307973.first;
		t_307973.first = -1;
		t_307973.last = -1;
		var Tmp1 = t_307973.data; t_307973.data = n_307981; n_307981 = Tmp1;		L2: do {
				L3: while (true) {
				if (!(0 <= h_308120)) break L3;
					var nxt_308286 = n_307981[chckIndx(h_308120, 0, n_307981.length+0-1)-0].Field1;
					var eh_308442 = n_307981[chckIndx(h_308120, 0, n_307981.length+0-1)-0].Field0;
					if (is_filled_228418(eh_308442)) {
					var j_308449 = (eh_308442 & (t_307973.data != null ? (t_307973.data.length-1) : -1));
					L4: do {
							L5: while (true) {
							if (!is_filled_228418(t_307973.data[chckIndx(j_308449, 0, t_307973.data.length+0-1)-0].Field0)) break L5;
								j_308449 = next_try_228435(j_308449, (t_307973.data != null ? (t_307973.data.length-1) : -1));
							}
					} while(false);
					raw_insert_309107(t_307973, t_307973, "data", n_307981[chckIndx(h_308120, 0, n_307981.length+0-1)-0].Field2, n_307981[chckIndx(h_308120, 0, n_307981.length+0-1)-0].Field3, n_307981[chckIndx(h_308120, 0, n_307981.length+0-1)-0].Field0, j_308449);
					}
					
					h_308120 = nxt_308286;
				}
		} while(false);

	
}

function raw_get_known_hc_309959(t_309964, key_309965, hc_309966) {
	var result_309967 = 0;

	BeforeRet: do {
		if (((t_309964.data != null ? t_309964.data.length : 0) == 0)) {
		result_309967 = -1;
		break BeforeRet;
		}
		
		var h_310106 = (hc_309966 & (t_309964.data != null ? (t_309964.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_228418(t_309964.data[chckIndx(h_310106, 0, t_309964.data.length+0-1)-0].Field0)) break L2;
					if (((t_309964.data[chckIndx(h_310106, 0, t_309964.data.length+0-1)-0].Field0 == hc_309966) && eqStrings(t_309964.data[chckIndx(h_310106, 0, t_309964.data.length+0-1)-0].Field2, key_309965))) {
					result_309967 = h_310106;
					break BeforeRet;
					}
					
					h_310106 = next_try_228435(h_310106, (t_309964.data != null ? (t_309964.data.length-1) : -1));
				}
		} while(false);
		result_309967 = subInt(-1, h_310106);
	} while (false);

	return result_309967;

}

function HEX5BHEX5DHEX3D_305930(t_305936, key_305937, val_305938) {
		if (((t_305936.data != null ? t_305936.data.length : 0) == 0)) {
		if (!(is_power_of_two_108062(64))) {
		failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_305936.counter = 0;
		t_305936.data = new Array(64); for (var i=0;i<64;++i) {t_305936.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		t_305936.first = -1;
		t_305936.last = -1;
		}
		
		var hc_306401 = [0];
		var index_307060 = raw_get_306421(t_305936, key_305937, hc_306401, 0);
		if ((0 <= index_307060)) {
		t_305936.data[chckIndx(index_307060, 0, t_305936.data.length+0-1)-0].Field3 = val_305938;
		}
		else {
			if (((t_305936.data != null ? t_305936.data.length : 0) == 0)) {
			if (!(is_power_of_two_108062(64))) {
			failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			t_305936.counter = 0;
			t_305936.data = new Array(64); for (var i=0;i<64;++i) {t_305936.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}			t_305936.first = -1;
			t_305936.last = -1;
			}
			
			if (must_rehash_228453((t_305936.data != null ? t_305936.data.length : 0), t_305936.counter)) {
			enlarge_307967(t_305936);
			index_307060 = raw_get_known_hc_309959(t_305936, key_305937, hc_306401[0]);
			}
			
			index_307060 = subInt(-1, index_307060);
			raw_insert_309107(t_305936, t_305936, "data", key_305937, val_305938, hc_306401[0], index_307060);
			t_305936.counter = addInt(t_305936.counter, 1);
		}
		

	
}

function nsuIntToStr(x_197615, minchars_197616) {
	var result_197617 = null;

		result_197617 = nimCopy(null, cstrToNimstr((absInt(x_197615))+""), NTI44040);
		L1: do {
			var i_197626 = 0;
			var colontmp__336076 = 0;
			colontmp__336076 = subInt(minchars_197616, (result_197617 != null ? result_197617.length : 0));
			var res_336077 = 1;
			L2: do {
					L3: while (true) {
					if (!(res_336077 <= colontmp__336076)) break L3;
						i_197626 = res_336077;
						result_197617 = nimCopy(null, [48].concat(result_197617 || []), NTI44040);
						res_336077 = addInt(res_336077, 1);
					}
			} while(false);
		} while(false);
		if ((x_197615 < 0)) {
		result_197617 = nimCopy(null, [45].concat(result_197617 || []), NTI44040);
		}
		

	return result_197617;

}

function HEX2D_209091(a_209093, b_209094) {
	var result_209095 = 0;

		result_209095 = (a_209093 - b_209094);

	return result_209095;

}

function HEX2A_209001(a_209003, b_209004) {
	var result_209005 = 0;

		result_209005 = (a_209003 * b_209004);

	return result_209005;

}

function convert_211226(unit_from_211229, unit_to_211230, quantity_211231) {
		var Tmp1;

	var result_211232 = 0;

		if ((unit_from_211229 < unit_to_211230)) {
		Tmp1 = chckRange(divInt(quantity_211231, divInt(unit_weights_209777[chckIndx(unit_to_211230, 0, unit_weights_209777.length+0-1)-0], unit_weights_209777[chckIndx(unit_from_211229, 0, unit_weights_209777.length+0-1)-0])), 0, 999999999);
		}
		else {
		Tmp1 = chckRange(HEX2A_209001(divInt(unit_weights_209777[chckIndx(unit_from_211229, 0, unit_weights_209777.length+0-1)-0], unit_weights_209777[chckIndx(unit_to_211230, 0, unit_weights_209777.length+0-1)-0]), quantity_211231), 0, 999999999);
		}
		
		result_211232 = Tmp1;

	return result_211232;

}

function HEX2B_209055(a_209057, b_209058) {
	var result_209059 = 0;

		result_209059 = (a_209057 + b_209058);

	return result_209059;

}

function HEX3DHEX3D_213392(zone1_213394, zone2_213395) {
	var result_213396 = false;

	BeforeRet: do {
		if ((zone1_213394 == zone2_213395)) {
		result_213396 = true;
		break BeforeRet;
		}
		
		if (((zone1_213394 == null) || (zone2_213395 == null))) {
		result_213396 = false;
		break BeforeRet;
		}
		
		result_213396 = eqStrings(zone1_213394.name, zone2_213395.name);
	} while (false);

	return result_213396;

}

function format_pattern_216090(dt_216092, pattern_216093, result_216095, result_216095_Idx, loc_216096) {
			var Tmp1;
			var Tmp2;
			var Tmp3;
			var Tmp4;
			var Tmp5;
			var Tmp6;
			var Tmp7;
			var Tmp8;
			var Tmp9;
				var Tmp10;
				var Tmp11;
			var Tmp12;

		switch (pattern_216093) {
		case 0:
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(cstrToNimstr((dt_216092.monthday)+"")); } else { result_216095[result_216095_Idx] = cstrToNimstr((dt_216092.monthday)+"").slice(); };
			break;
		case 1:
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(nsuIntToStr(dt_216092.monthday, 2)); } else { result_216095[result_216095_Idx] = nsuIntToStr(dt_216092.monthday, 2).slice(); };
			break;
		case 2:
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(loc_216096.ddd[chckIndx(dt_216092.weekday, 0, loc_216096.ddd.length+0-1)-0]); } else { result_216095[result_216095_Idx] = loc_216096.ddd[chckIndx(dt_216092.weekday, 0, loc_216096.ddd.length+0-1)-0].slice(); };
			break;
		case 3:
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(loc_216096.dddd[chckIndx(dt_216092.weekday, 0, loc_216096.dddd.length+0-1)-0]); } else { result_216095[result_216095_Idx] = loc_216096.dddd[chckIndx(dt_216092.weekday, 0, loc_216096.dddd.length+0-1)-0].slice(); };
			break;
		case 4:
			if ((dt_216092.hour == 0)) {
			Tmp1 = makeNimstrLit("12");
			}
			else {
			if ((12 < dt_216092.hour)) {
			Tmp1 = cstrToNimstr((HEX2D_209091(dt_216092.hour, 12))+"");
			}
			else {
			Tmp1 = cstrToNimstr((dt_216092.hour)+"");
			}
			}
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(Tmp1); } else { result_216095[result_216095_Idx] = Tmp1.slice(); };
			break;
		case 5:
			if ((dt_216092.hour == 0)) {
			Tmp2 = makeNimstrLit("12");
			}
			else {
			if ((12 < dt_216092.hour)) {
			Tmp2 = nsuIntToStr(HEX2D_209091(dt_216092.hour, 12), 2);
			}
			else {
			Tmp2 = nsuIntToStr(dt_216092.hour, 2);
			}
			}
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(Tmp2); } else { result_216095[result_216095_Idx] = Tmp2.slice(); };
			break;
		case 6:
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(cstrToNimstr((dt_216092.hour)+"")); } else { result_216095[result_216095_Idx] = cstrToNimstr((dt_216092.hour)+"").slice(); };
			break;
		case 7:
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(nsuIntToStr(dt_216092.hour, 2)); } else { result_216095[result_216095_Idx] = nsuIntToStr(dt_216092.hour, 2).slice(); };
			break;
		case 8:
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(cstrToNimstr((dt_216092.minute)+"")); } else { result_216095[result_216095_Idx] = cstrToNimstr((dt_216092.minute)+"").slice(); };
			break;
		case 9:
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(nsuIntToStr(dt_216092.minute, 2)); } else { result_216095[result_216095_Idx] = nsuIntToStr(dt_216092.minute, 2).slice(); };
			break;
		case 10:
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(cstrToNimstr((dt_216092.month)+"")); } else { result_216095[result_216095_Idx] = cstrToNimstr((dt_216092.month)+"").slice(); };
			break;
		case 11:
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(nsuIntToStr(dt_216092.month, 2)); } else { result_216095[result_216095_Idx] = nsuIntToStr(dt_216092.month, 2).slice(); };
			break;
		case 12:
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(loc_216096.MMM[chckIndx(dt_216092.month, 1, loc_216096.MMM.length+1-1)-1]); } else { result_216095[result_216095_Idx] = loc_216096.MMM[chckIndx(dt_216092.month, 1, loc_216096.MMM.length+1-1)-1].slice(); };
			break;
		case 13:
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(loc_216096.MMMM[chckIndx(dt_216092.month, 1, loc_216096.MMMM.length+1-1)-1]); } else { result_216095[result_216095_Idx] = loc_216096.MMMM[chckIndx(dt_216092.month, 1, loc_216096.MMMM.length+1-1)-1].slice(); };
			break;
		case 14:
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(cstrToNimstr((dt_216092.second)+"")); } else { result_216095[result_216095_Idx] = cstrToNimstr((dt_216092.second)+"").slice(); };
			break;
		case 15:
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(nsuIntToStr(dt_216092.second, 2)); } else { result_216095[result_216095_Idx] = nsuIntToStr(dt_216092.second, 2).slice(); };
			break;
		case 16:
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(nsuIntToStr(convert_211226(0, 2, dt_216092.nanosecond), 3)); } else { result_216095[result_216095_Idx] = nsuIntToStr(convert_211226(0, 2, dt_216092.nanosecond), 3).slice(); };
			break;
		case 17:
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(nsuIntToStr(convert_211226(0, 1, dt_216092.nanosecond), 6)); } else { result_216095[result_216095_Idx] = nsuIntToStr(convert_211226(0, 1, dt_216092.nanosecond), 6).slice(); };
			break;
		case 18:
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(nsuIntToStr(dt_216092.nanosecond, 9)); } else { result_216095[result_216095_Idx] = nsuIntToStr(dt_216092.nanosecond, 9).slice(); };
			break;
		case 19:
			if ((12 <= dt_216092.hour)) {
			Tmp3 = makeNimstrLit("P");
			}
			else {
			Tmp3 = makeNimstrLit("A");
			}
			
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(Tmp3); } else { result_216095[result_216095_Idx] = Tmp3.slice(); };
			break;
		case 20:
			if ((12 <= dt_216092.hour)) {
			Tmp4 = makeNimstrLit("PM");
			}
			else {
			Tmp4 = makeNimstrLit("AM");
			}
			
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(Tmp4); } else { result_216095[result_216095_Idx] = Tmp4.slice(); };
			break;
		case 21:
			if ((dt_216092.year <= 0)) {
			Tmp5 = HEX2B_209055(absInt(dt_216092.year), 1);
			}
			else {
			Tmp5 = dt_216092.year;
			}
			
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(cstrToNimstr((modInt(Tmp5, 10))+"")); } else { result_216095[result_216095_Idx] = cstrToNimstr((modInt(Tmp5, 10))+"").slice(); };
			break;
		case 22:
			if ((dt_216092.year <= 0)) {
			Tmp6 = HEX2B_209055(absInt(dt_216092.year), 1);
			}
			else {
			Tmp6 = dt_216092.year;
			}
			
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(nsuIntToStr(modInt(Tmp6, 100), 2)); } else { result_216095[result_216095_Idx] = nsuIntToStr(modInt(Tmp6, 100), 2).slice(); };
			break;
		case 23:
			if ((dt_216092.year <= 0)) {
			Tmp7 = HEX2B_209055(absInt(dt_216092.year), 1);
			}
			else {
			Tmp7 = dt_216092.year;
			}
			
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(nsuIntToStr(modInt(Tmp7, 1000), 3)); } else { result_216095[result_216095_Idx] = nsuIntToStr(modInt(Tmp7, 1000), 3).slice(); };
			break;
		case 24:
			if ((dt_216092.year <= 0)) {
			Tmp8 = HEX2B_209055(absInt(dt_216092.year), 1);
			}
			else {
			Tmp8 = dt_216092.year;
			}
			
			var year_216131 = Tmp8;
			if ((year_216131 < 10000)) {
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(nsuIntToStr(year_216131, 4)); } else { result_216095[result_216095_Idx] = nsuIntToStr(year_216131, 4).slice(); };
			}
			else {
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat([43].concat(cstrToNimstr((year_216131)+"") || [])); } else { result_216095[result_216095_Idx] = [43].concat(cstrToNimstr((year_216131)+"") || []).slice(); };
			}
			
			break;
		case 25:
			if ((dt_216092.year <= 0)) {
			Tmp9 = HEX2B_209055(absInt(dt_216092.year), 1);
			}
			else {
			Tmp9 = dt_216092.year;
			}
			
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(nsuIntToStr(modInt(Tmp9, 100000), 5)); } else { result_216095[result_216095_Idx] = nsuIntToStr(modInt(Tmp9, 100000), 5).slice(); };
			break;
		case 26:
			if ((dt_216092.year < 1)) {
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(cstrToNimstr((HEX2B_209055(absInt(dt_216092.year), 1))+"")); } else { result_216095[result_216095_Idx] = cstrToNimstr((HEX2B_209055(absInt(dt_216092.year), 1))+"").slice(); };
			}
			else {
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(cstrToNimstr((dt_216092.year)+"")); } else { result_216095[result_216095_Idx] = cstrToNimstr((dt_216092.year)+"").slice(); };
			}
			
			break;
		case 27:
			var year_216134 = dt_216092.year;
			if (((year_216134 < 10000) || (year_216134 < 0))) {
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(nsuIntToStr(year_216134, 4)); } else { result_216095[result_216095_Idx] = nsuIntToStr(year_216134, 4).slice(); };
			}
			else {
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat([43].concat(cstrToNimstr((year_216134)+"") || [])); } else { result_216095[result_216095_Idx] = [43].concat(cstrToNimstr((year_216134)+"") || []).slice(); };
			}
			
			break;
		case 28:
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(cstrToNimstr((dt_216092.year)+"")); } else { result_216095[result_216095_Idx] = cstrToNimstr((dt_216092.year)+"").slice(); };
			break;
		case 29:
		case 30:
		case 31:
		case 32:
				if (!!(HEX3DHEX3D_213392(dt_216092.timezone, null))) Tmp10 = false; else {					Tmp10 = eqStrings(dt_216092.timezone.name, makeNimstrLit("Etc/UTC"));				}			if (Tmp10) {
			if (result_216095[result_216095_Idx] != null) { addChar(result_216095[result_216095_Idx], 90); } else { result_216095[result_216095_Idx] = [90]; };
			}
			else {
				if ((0 <= negInt(dt_216092.utcOffset))) {
				Tmp11 = 43;
				}
				else {
				Tmp11 = 45;
				}
				
				if (result_216095[result_216095_Idx] != null) { addChar(result_216095[result_216095_Idx], Tmp11); } else { result_216095[result_216095_Idx] = [Tmp11]; };
				var abs_offset_216140 = absInt(dt_216092.utcOffset);
				switch (pattern_216093) {
				case 29:
					if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(cstrToNimstr((divInt(abs_offset_216140, 3600))+"")); } else { result_216095[result_216095_Idx] = cstrToNimstr((divInt(abs_offset_216140, 3600))+"").slice(); };
					break;
				case 30:
					if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(nsuIntToStr(divInt(abs_offset_216140, 3600), 2)); } else { result_216095[result_216095_Idx] = nsuIntToStr(divInt(abs_offset_216140, 3600), 2).slice(); };
					break;
				case 31:
					var h_216144 = nsuIntToStr(divInt(abs_offset_216140, 3600), 2);
					var m_216145 = nsuIntToStr(modInt(divInt(abs_offset_216140, 60), 60), 2);
					if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat((h_216144 || []).concat(makeNimstrLit(":") || [],m_216145 || [])); } else { result_216095[result_216095_Idx] = (h_216144 || []).concat(makeNimstrLit(":") || [],m_216145 || []).slice(); };
					break;
				case 32:
					var abs_offset_216146 = absInt(dt_216092.utcOffset);
					var h_216148 = nsuIntToStr(divInt(abs_offset_216146, 3600), 2);
					var m_216149 = nsuIntToStr(modInt(divInt(abs_offset_216146, 60), 60), 2);
					var s_216150 = nsuIntToStr(modInt(abs_offset_216146, 60), 2);
					if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat((h_216148 || []).concat(makeNimstrLit(":") || [],m_216149 || [],makeNimstrLit(":") || [],s_216150 || [])); } else { result_216095[result_216095_Idx] = (h_216148 || []).concat(makeNimstrLit(":") || [],m_216149 || [],makeNimstrLit(":") || [],s_216150 || []).slice(); };
					break;
				default: 
					if (true) {
					failed_assert_impl_58851(makeNimstrLit("times.nim(2018, 20) `false` "));
					}
					
					break;
				}
			}
			
			break;
		case 33:
			if ((dt_216092.year < 1)) {
			Tmp12 = makeNimstrLit("BC");
			}
			else {
			Tmp12 = makeNimstrLit("AD");
			}
			
			if (result_216095[result_216095_Idx] != null) { result_216095[result_216095_Idx] = (result_216095[result_216095_Idx]).concat(Tmp12); } else { result_216095[result_216095_Idx] = Tmp12.slice(); };
			break;
		case 34:
			if (true) {
			failed_assert_impl_58851(makeNimstrLit("times.nim(2021, 18) `false` "));
			}
			
			break;
		}

	
}

function format_219068(dt_219070, f_219071, loc_219072) {
	var result_219073 = [null];

		var idx_219075 = 0;
		L1: do {
				L2: while (true) {
				if (!(idx_219075 <= (f_219071.patterns != null ? (f_219071.patterns.length-1) : -1))) break L2;
					switch (chckRange(f_219071.patterns[chckIndx(idx_219075, 0, f_219071.patterns.length+0-1)-0], 0, 34)) {
					case 34:
						idx_219075 = addInt(idx_219075, 1);
						var len_219088 = f_219071.patterns[chckIndx(idx_219075, 0, f_219071.patterns.length+0-1)-0];
						L3: do {
							var i_219221 = 0;
							var res_336071 = 1;
							L4: do {
									L5: while (true) {
									if (!(res_336071 <= ((len_219088)|0))) break L5;
										i_219221 = chckRange(res_336071, 0, 255);
										idx_219075 = addInt(idx_219075, 1);
										if (result_219073[0] != null) { addChar(result_219073[0], f_219071.patterns[chckIndx(idx_219075, 0, f_219071.patterns.length+0-1)-0]); } else { result_219073[0] = [f_219071.patterns[chckIndx(idx_219075, 0, f_219071.patterns.length+0-1)-0]]; };
										res_336071 = addInt(res_336071, 1);
									}
							} while(false);
						} while(false);
						idx_219075 = addInt(idx_219075, 1);
						break;
					default: 
						format_pattern_216090(dt_219070, chckRange(f_219071.patterns[chckIndx(idx_219075, 0, f_219071.patterns.length+0-1)-0], 0, 34), result_219073, 0, loc_219072);
						idx_219075 = addInt(idx_219075, 1);
						break;
					}
				}
		} while(false);

	return result_219073[0];

}

function format_219515(dt_219518) {
	var result_219520 = null;

		result_219520 = nimCopy(null, format_219068(dt_219518, {patterns: [24, 34, 1, 45, 11, 34, 1, 45, 1, 34, 1, 84, 7, 34, 1, 58, 9, 34, 1, 58, 15, 31], formatStr: makeNimstrLit("yyyy-MM-dd\'T\'HH:mm:sszzz")}, {MMM: [makeNimstrLit("Jan"), makeNimstrLit("Feb"), makeNimstrLit("Mar"), makeNimstrLit("Apr"), makeNimstrLit("May"), makeNimstrLit("Jun"), makeNimstrLit("Jul"), makeNimstrLit("Aug"), makeNimstrLit("Sep"), makeNimstrLit("Oct"), makeNimstrLit("Nov"), makeNimstrLit("Dec")], MMMM: [makeNimstrLit("January"), makeNimstrLit("February"), makeNimstrLit("March"), makeNimstrLit("April"), makeNimstrLit("May"), makeNimstrLit("June"), makeNimstrLit("July"), makeNimstrLit("August"), makeNimstrLit("September"), makeNimstrLit("October"), makeNimstrLit("November"), makeNimstrLit("December")], ddd: [makeNimstrLit("Mon"), makeNimstrLit("Tue"), makeNimstrLit("Wed"), makeNimstrLit("Thu"), makeNimstrLit("Fri"), makeNimstrLit("Sat"), makeNimstrLit("Sun")], dddd: [makeNimstrLit("Monday"), makeNimstrLit("Tuesday"), makeNimstrLit("Wednesday"), makeNimstrLit("Thursday"), makeNimstrLit("Friday"), makeNimstrLit("Saturday"), makeNimstrLit("Sunday")]}), NTI44040);

	return result_219520;

}

function HEX24_219510(dt_219512) {
	var result_219513 = null;

		result_219513 = nimCopy(null, format_219515(dt_219512), NTI44040);

	return result_219513;

}

function HEX2B_209037(a_209039, b_209040) {
	var result_209041 = 0;

		result_209041 = (a_209039 + b_209040);

	return result_209041;

}

function convert_209888(unit_from_209891, unit_to_209892, quantity_209893) {
		var Tmp1;

	var result_209894 = 0;

		if ((unit_from_209891 < unit_to_209892)) {
		Tmp1 = divInt(quantity_209893, divInt(unit_weights_209777[chckIndx(unit_to_209892, 0, unit_weights_209777.length+0-1)-0], unit_weights_209777[chckIndx(unit_from_209891, 0, unit_weights_209777.length+0-1)-0]));
		}
		else {
		Tmp1 = HEX2A_209001(divInt(unit_weights_209777[chckIndx(unit_from_209891, 0, unit_weights_209777.length+0-1)-0], unit_weights_209777[chckIndx(unit_to_209892, 0, unit_weights_209777.length+0-1)-0]), quantity_209893);
		}
		
		result_209894 = Tmp1;

	return result_209894;

}

function convert_210004(unit_from_210007, unit_to_210008, quantity_210009) {
		var Tmp1;

	var result_210010 = 0;

		if ((unit_from_210007 < unit_to_210008)) {
		Tmp1 = chckRange(divInt(quantity_210009, divInt(unit_weights_209777[chckIndx(unit_to_210008, 0, unit_weights_209777.length+0-1)-0], unit_weights_209777[chckIndx(unit_from_210007, 0, unit_weights_209777.length+0-1)-0])), -2147483648, 2147483647);
		}
		else {
		Tmp1 = chckRange(HEX2A_209001(divInt(unit_weights_209777[chckIndx(unit_from_210007, 0, unit_weights_209777.length+0-1)-0], unit_weights_209777[chckIndx(unit_to_210008, 0, unit_weights_209777.length+0-1)-0]), quantity_210009), -2147483648, 2147483647);
		}
		
		result_210010 = Tmp1;

	return result_210010;

}

function normalize_212955(seconds_212958, nanoseconds_212959) {
	var result_212960 = {seconds: 0, nanosecond: 0};

		result_212960.seconds = HEX2B_209037(seconds_212958, convert_209888(0, 3, nanoseconds_212959));
		var nanosecond_212974 = modInt(nanoseconds_212959, convert_210004(3, 0, 1));
		if ((nanosecond_212974 < 0)) {
		nanosecond_212974 = addInt(nanosecond_212974, convert_210004(3, 0, 1));
		result_212960.seconds = subInt(result_212960.seconds, 1);
		}
		
		result_212960.nanosecond = chckRange(chckRange(nanosecond_212974, -2147483648, 2147483647), 0, 999999999);

	return result_212960;

}

function HEX2D_209073(a_209075, b_209076) {
	var result_209077 = 0;

		result_209077 = (a_209075 - b_209076);

	return result_209077;

}

function ntSubTime(a_213022, b_213023) {
	var result_213024 = {seconds: 0, nanosecond: 0};

		nimCopy(result_213024, normalize_212955(HEX2D_209073(a_213022.seconds, b_213023.seconds), HEX2D_209091(a_213022.nanosecond, b_213023.nanosecond)), NTI209614);

	return result_213024;

}

function normalize_209991(seconds_209994, nanoseconds_209995) {
	var result_209996 = {seconds: 0, nanosecond: 0};

		result_209996.seconds = HEX2B_209037(seconds_209994, convert_209888(0, 3, nanoseconds_209995));
		var nanosecond_210045 = modInt(nanoseconds_209995, convert_210004(3, 0, 1));
		if ((nanosecond_210045 < 0)) {
		nanosecond_210045 = addInt(nanosecond_210045, convert_210004(3, 0, 1));
		result_209996.seconds = subInt(result_209996.seconds, 1);
		}
		
		result_209996.nanosecond = chckRange(chckRange(nanosecond_210045, -2147483648, 2147483647), 0, 999999999);

	return result_209996;

}

function init_duration_209877(nanoseconds_209879, microseconds_209880, milliseconds_209881, seconds_209882, minutes_209883, hours_209884, days_209885, weeks_209886) {
	var result_209887 = {seconds: 0, nanosecond: 0};

		var seconds_209971 = HEX2B_209037(HEX2B_209037(HEX2B_209037(HEX2B_209037(HEX2B_209037(HEX2B_209037(HEX2B_209037(convert_209888(7, 3, weeks_209886), convert_209888(6, 3, days_209885)), convert_209888(4, 3, minutes_209883)), convert_209888(5, 3, hours_209884)), convert_209888(3, 3, seconds_209882)), convert_209888(2, 3, milliseconds_209881)), convert_209888(1, 3, microseconds_209880)), convert_209888(0, 3, nanoseconds_209879));
		var nanoseconds_209987 = chckRange(HEX2B_209037(HEX2B_209037(convert_209888(2, 0, modInt(milliseconds_209881, 1000)), convert_209888(1, 0, modInt(microseconds_209880, 1000000))), modInt(nanoseconds_209879, 1000000000)), -2147483648, 2147483647);
		nimCopy(result_209887, normalize_209991(seconds_209971, nanoseconds_209987), NTI209618);

	return result_209887;

}

function floor_div_211738(x_211741, y_211742) {
			var Tmp1;
			var Tmp2;
				var Tmp3;

	var result_211743 = 0;

		result_211743 = Math.trunc(x_211741 / y_211742);
		var r_211744 = Math.trunc(x_211741 % y_211742);
			if (!(0 < r_211744)) Tmp2 = false; else {				Tmp2 = (y_211742 < 0);			}			if (Tmp2) Tmp1 = true; else {				if (!(r_211744 < 0)) Tmp3 = false; else {					Tmp3 = (0 < y_211742);				}				Tmp1 = Tmp3;			}		if (Tmp1) {
		result_211743 -= 1;
		}
		

	return result_211743;

}

function inc_209133(a_209136, a_209136_Idx, b_209137) {
		a_209136[a_209136_Idx] += b_209137;

	
}

function from_epoch_day_212080(epochday_212082) {
		var Tmp1;
		var Tmp2;

	var result_212087 = {Field0: 0, Field1: 0, Field2: 0};

	BeforeRet: do {
		var z_212088 = [epochday_212082];
		inc_209133(z_212088, 0, 719468);
		if ((0 <= z_212088[0])) {
		Tmp1 = z_212088[0];
		}
		else {
		Tmp1 = HEX2D_209073(z_212088[0], 146096);
		}
		
		var era_212094 = divInt(Tmp1, 146097);
		var doe_212096 = HEX2D_209073(z_212088[0], HEX2A_209001(era_212094, 146097));
		var yoe_212101 = divInt(HEX2D_209073(HEX2B_209037(HEX2D_209073(doe_212096, divInt(doe_212096, 1460)), divInt(doe_212096, 36524)), divInt(doe_212096, 146096)), 365);
		var y_212103 = HEX2B_209037(yoe_212101, HEX2A_209001(era_212094, 400));
		var doy_212107 = HEX2D_209073(doe_212096, HEX2D_209073(HEX2B_209037(HEX2A_209001(365, yoe_212101), divInt(yoe_212101, 4)), divInt(yoe_212101, 100)));
		var mp_212110 = divInt(HEX2B_209037(HEX2A_209001(5, doy_212107), 2), 153);
		var d_212113 = HEX2B_209037(HEX2D_209073(doy_212107, divInt(HEX2B_209037(HEX2A_209001(153, mp_212110), 2), 5)), 1);
		if ((mp_212110 < 10)) {
		Tmp2 = 3;
		}
		else {
		Tmp2 = -9;
		}
		
		var m_212116 = HEX2B_209037(mp_212110, Tmp2);
		var colontmp__336084 = chckRange(d_212113, 1, 31);
		var colontmp__336085 = chckRange(m_212116, 1, 12);
		var colontmp__336086 = chckRange(HEX2B_209037(y_212103, ((m_212116 <= 2) ? 1:0)), -2147483648, 2147483647);
		nimCopy(result_212087, {Field0: nimCopy(null, colontmp__336084, NTI209602), Field1: colontmp__336085, Field2: colontmp__336086}, NTI212083);
		break BeforeRet;
	} while (false);

	return result_212087;

}

function is_leap_year_211800(year_211802) {
		var Tmp1;
			var Tmp2;

	var result_211803 = false;

		if (!(modInt(year_211802, 4) == 0)) Tmp1 = false; else {			if (!((modInt(year_211802, 100) == 0))) Tmp2 = true; else {				Tmp2 = (modInt(year_211802, 400) == 0);			}			Tmp1 = Tmp2;		}		result_211803 = Tmp1;

	return result_211803;

}

function get_days_in_month_211819(month_211821, year_211822) {
			var Tmp1;

	var result_211823 = 0;

		switch (month_211821) {
		case 2:
			if (is_leap_year_211800(year_211822)) {
			Tmp1 = 29;
			}
			else {
			Tmp1 = 28;
			}
			
			result_211823 = Tmp1;
			break;
		case 4:
		case 6:
		case 9:
		case 11:
			result_211823 = 30;
			break;
		default: 
			result_211823 = 31;
			break;
		}

	return result_211823;

}

function assert_valid_date_211856(monthday_211858, month_211859, year_211860) {
		if (!((monthday_211858 <= get_days_in_month_211819(month_211859, year_211860)))) {
		failed_assert_impl_58851((makeNimstrLit("times.nim(627, 10) `monthday <= getDaysInMonth(month, year)` ") || []).concat(cstrToNimstr((year_211860)+"") || [],makeNimstrLit("-") || [],nsuIntToStr(month_211859, 2) || [],makeNimstrLit("-") || [],cstrToNimstr((monthday_211858)+"") || [],makeNimstrLit(" is not a valid date") || []));
		}
		

	
}

function HEX2A_209019(a_209021, b_209022) {
	var result_209023 = 0;

		result_209023 = (a_209021 * b_209022);

	return result_209023;

}

function to_epoch_day_212014(monthday_212016, month_212017, year_212018) {
		var Tmp1;
		var Tmp2;

	var result_212019 = 0;

	BeforeRet: do {
		assert_valid_date_211856(monthday_212016, month_212017, year_212018);
		var colontmp__336088 = {Field0: 0, Field1: 0, Field2: 0};
		var y_212025 = 0;
		var m_212026 = 0;
		var d_212027 = 0;
		nimCopy(colontmp__336088, {Field0: year_212018, Field1: month_212017, Field2: monthday_212016}, NTI212020);
		y_212025 = colontmp__336088["Field0"];
		m_212026 = colontmp__336088["Field1"];
		d_212027 = colontmp__336088["Field2"];
		if ((m_212026 <= 2)) {
		y_212025 = subInt(y_212025, 1);
		}
		
		if ((0 <= y_212025)) {
		Tmp1 = y_212025;
		}
		else {
		Tmp1 = HEX2D_209091(y_212025, 399);
		}
		
		var era_212037 = divInt(Tmp1, 400);
		var yoe_212039 = HEX2D_209091(y_212025, HEX2A_209019(era_212037, 400));
		if ((2 < m_212026)) {
		Tmp2 = -3;
		}
		else {
		Tmp2 = 9;
		}
		
		var doy_212046 = HEX2D_209091(HEX2B_209055(divInt(HEX2B_209055(HEX2A_209019(153, HEX2B_209055(m_212026, Tmp2)), 2), 5), d_212027), 1);
		var doe_212049 = HEX2B_209055(HEX2D_209091(HEX2B_209055(HEX2A_209019(yoe_212039, 365), divInt(yoe_212039, 4)), divInt(yoe_212039, 100)), doy_212046);
		result_212019 = HEX2D_209091(HEX2B_209055(HEX2A_209019(era_212037, 146097), doe_212049), 719468);
		break BeforeRet;
	} while (false);

	return result_212019;

}

function get_day_of_week_212216(monthday_212218, month_212219, year_212220) {
		var Tmp1;

	var result_212221 = 0;

		assert_valid_date_211856(monthday_212218, month_212219, year_212220);
		var days_212222 = HEX2D_209073(to_epoch_day_212014(monthday_212218, month_212219, year_212220), 3);
		var weeks_212228 = floor_div_211738(days_212222, 7);
		var wd_212229 = HEX2D_209073(days_212222, HEX2A_209001(weeks_212228, 7));
		if ((wd_212229 == 0)) {
		Tmp1 = 6;
		}
		else {
		Tmp1 = chckRange(HEX2D_209073(wd_212229, 1), 0, 6);
		}
		
		result_212221 = Tmp1;

	return result_212221;

}

function get_day_of_year_212150(monthday_212152, month_212153, year_212154) {
	var result_212155 = 0;

		assert_valid_date_211856(monthday_212152, month_212153, year_212154);
		if (is_leap_year_211800(year_212154)) {
		result_212155 = chckRange(HEX2D_209091(HEX2B_209055(days_until_month_leap_212187[chckIndx(month_212153, 1, days_until_month_leap_212187.length+1-1)-1], monthday_212152), 1), 0, 365);
		}
		else {
			result_212155 = chckRange(HEX2D_209091(HEX2B_209055(days_until_month_212171[chckIndx(month_212153, 1, days_until_month_212171.length+1-1)-1], monthday_212152), 1), 0, 365);
		}
		

	return result_212155;

}

function init_date_time_213188(zt_213190, zone_213191) {
	var result_213192 = {m_type: NTI209616, nanosecond: 0, second: 0, minute: 0, hour: 0, monthday: 0, month: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0};

		var adj_time_213193 = ntSubTime(zt_213190.time, init_duration_209877(0, 0, 0, zt_213190.utcOffset, 0, 0, 0, 0));
		var s_213194 = adj_time_213193.seconds;
		var epochday_213200 = floor_div_211738(s_213194, 86400);
		var rem_213201 = HEX2D_209073(s_213194, HEX2A_209001(epochday_213200, 86400));
		var hour_213202 = divInt(rem_213201, 3600);
		rem_213201 = HEX2D_209073(rem_213201, HEX2A_209001(hour_213202, 3600));
		var minute_213203 = divInt(rem_213201, 60);
		rem_213201 = HEX2D_209073(rem_213201, HEX2A_209001(minute_213203, 60));
		var second_213204 = rem_213201;
		var colontmp__336083 = {Field0: 0, Field1: 0, Field2: 0};
		var d_213205 = 0;
		var m_213206 = 0;
		var y_213207 = 0;
		nimCopy(colontmp__336083, from_epoch_day_212080(epochday_213200), NTI212083);
		d_213205 = colontmp__336083["Field0"];
		m_213206 = colontmp__336083["Field1"];
		y_213207 = colontmp__336083["Field2"];
		nimCopy(result_213192, {year: y_213207, month: m_213206, monthday: nimCopy(null, d_213205, NTI209602), hour: nimCopy(null, chckRange(hour_213202, 0, 23), NTI209604), minute: nimCopy(null, chckRange(minute_213203, 0, 59), NTI209606), second: nimCopy(null, chckRange(second_213204, 0, 60), NTI209608), nanosecond: nimCopy(null, zt_213190.time.nanosecond, NTI209612), weekday: get_day_of_week_212216(d_213205, m_213206, y_213207), yearday: get_day_of_year_212150(d_213205, m_213206, y_213207), isDst: zt_213190.isDst, timezone: zone_213191, utcOffset: zt_213190.utcOffset, m_type: NTI209616}, NTI209616);

	return result_213192;

}

function zoned_time_from_time_213324(zone_213326, time_213327) {
	var result_213328 = {time: {seconds: 0, nanosecond: 0}, utcOffset: 0, isDst: false};

		nimCopy(result_213328, zone_213326.zonedTimeFromTimeImpl(time_213327), NTI209628);

	return result_213328;

}

function in_zone_213429(time_213431, zone_213432) {
	var result_213433 = {m_type: NTI209616, nanosecond: 0, second: 0, minute: 0, hour: 0, monthday: 0, month: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0};

		nimCopy(result_213433, init_date_time_213188(zoned_time_from_time_213324(zone_213432, time_213431), zone_213432), NTI209616);

	return result_213433;

}

function new_timezone_213266(name_213268, zoned_time_from_time_impl_213272, zoned_time_from_adj_time_impl_213276) {
	var result_213278 = null;

		result_213278 = {name: nimCopy(null, name_213268, NTI44040), zonedTimeFromTimeImpl: zoned_time_from_time_impl_213272, zonedTimeFromAdjTimeImpl: zoned_time_from_adj_time_impl_213276};

	return result_213278;

}

function local_zoned_time_from_time_209835(time_209837) {
	var result_213490 = {time: {seconds: 0, nanosecond: 0}, utcOffset: 0, isDst: false};

		var js_date_213496 = new Date(HEX2A_209001(time_209837.seconds, 1000));
		var offset_213497 = HEX2A_209019(js_date_213496.getTimezoneOffset(), 60);
		nimCopy(result_213490.time, time_209837, NTI209614);
		result_213490.utcOffset = offset_213497;
		result_213490.isDst = false;

	return result_213490;

}

function contains_213555(s_213561, value_213562) {
	var result_213563 = false;

		result_213563 = ((s_213561.a <= value_213562) && (value_213562 <= s_213561.b));

	return result_213563;

}

function HEX2EHEX2E_121620(a_121624, b_121625) {
	var result_121627 = {a: 0, b: 0};

		nimCopy(result_121627, {a: a_121624, b: b_121625}, NTI97907);

	return result_121627;

}

function ntAddTime(a_212947, b_212948) {
	var result_212949 = {seconds: 0, nanosecond: 0};

		nimCopy(result_212949, normalize_212955(HEX2B_209037(a_212947.seconds, b_212948.seconds), HEX2B_209055(a_212947.nanosecond, b_212948.nanosecond)), NTI209614);

	return result_212949;

}

function local_zoned_time_from_adj_time_209838(adj_time_209840) {
	var result_213529 = {time: {seconds: 0, nanosecond: 0}, utcOffset: 0, isDst: false};

		var utc_date_213535 = new Date(HEX2A_209001(adj_time_209840.seconds, 1000));
		var local_date_213536 = new Date(utc_date_213535.getUTCFullYear(),utc_date_213535.getUTCMonth(),utc_date_213535.getUTCDate(),utc_date_213535.getUTCHours(),utc_date_213535.getUTCMinutes(),utc_date_213535.getUTCSeconds(),0);
		if (contains_213555(HEX2EHEX2E_121620(0, 99), utc_date_213535.getUTCFullYear())) {
		local_date_213536.setFullYear(utc_date_213535.getUTCFullYear());
		}
		
		result_213529.utcOffset = HEX2A_209019(local_date_213536.getTimezoneOffset(), 60);
		nimCopy(result_213529.time, ntAddTime(adj_time_209840, init_duration_209877(0, 0, 0, result_213529.utcOffset, 0, 0, 0, 0)), NTI209614);
		result_213529.isDst = false;

	return result_213529;

}

function local_213667() {
	var result_213669 = null;

		if ((local_instance_213632[0] == null)) {
		local_instance_213632[0] = new_timezone_213266(makeNimstrLit("LOCAL"), local_zoned_time_from_time_209835, local_zoned_time_from_adj_time_209838);
		}
		
		result_213669 = local_instance_213632[0];

	return result_213669;

}

function local_213739(t_213741) {
	var result_213742 = {m_type: NTI209616, nanosecond: 0, second: 0, minute: 0, hour: 0, monthday: 0, month: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0};

		nimCopy(result_213742, in_zone_213429(t_213741, local_213667()), NTI209616);

	return result_213742;

}

function init_time_209841(unix_209843, nanosecond_209844) {
	var result_212903 = {seconds: 0, nanosecond: 0};

		result_212903.seconds = unix_209843;
		result_212903.nanosecond = nanosecond_209844;

	return result_212903;

}

function get_time_213756() {
	var result_213758 = {seconds: 0, nanosecond: 0};

		var millis_213801 = new Date().getTime();
		var seconds_213808 = convert_210004(2, 3, millis_213801);
		var nanos_213822 = convert_210004(2, 0, modInt(millis_213801, convert_210004(3, 2, 1)));
		nimCopy(result_213758, init_time_209841(seconds_213808, chckRange(nanos_213822, 0, 999999999)), NTI209614);

	return result_213758;

}

function now_213836() {
	var result_213838 = {m_type: NTI209616, nanosecond: 0, second: 0, minute: 0, hour: 0, monthday: 0, month: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0};

		nimCopy(result_213838, local_213739(get_time_213756()), NTI209616);

	return result_213838;

}

function save_305464() {

		function inner_310682() {
			var result_310684 = null;

			BeforeRet: do {
				var a_310685 = null;
				a_310685 = {};
				a_310685.type = makeNimstrLit("application/json");
				result_310684 = a_310685;
				break BeforeRet;
			} while (false);

			return result_310684;

		}

		if ((ministry_area_302216[0] == null)) {
		ministry_area_302216[0] = {name: nimCopy(null, name_area_302217[0], NTI44040), cities: init_ordered_table_305473(64), m_type: NTI300086};
		}
		
		HEX5BHEX5DHEX3D_305930(ministry_area_302216[0].cities, addr_city_302618[0], {allLinks: nimCopy(null, all_links_300614[0], NTI300125), allStreets: nimCopy(null, all_streets_301014[0], NTI300148), cachedTiles: nimCopy(null, cached_tiles_301414[0], NTI300174), allSectors: nimCopy(null, all_sectors_301814[0], NTI300197), lastPostfix: nimCopy(null, last_postfix_302214[0], NTI300223), m_type: NTI300115});
		var ser_310665 = JSON.stringify(ministry_area_302216[0]);
		var blb_310829 = function(o,opt){return new Blob([o], opt);}(ser_310665, inner_310682());
		var b_url_310830 = function(b){return URL.createObjectURL(b);}(blb_310829);
		var el_a_310831 = document.createElement("a");
		el_a_310831.setAttribute("href", b_url_310830);
		el_a_310831.setAttribute("download", toJSStr((addr_city_302618[0] || []).concat(makeNimstrLit("_") || [],HEX24_219510(now_213836()) || [],makeNimstrLit(".json") || [])));
		document.body.appendChild(el_a_310831);
		el_a_310831.click();
		document.body.removeChild(el_a_310831);
		(function(uk){return URL.revokeObjectURL(uk);})(b_url_310830);

	
}

function set_attr_258568(n_258570, key_258571, val_258572) {
	BeforeRet: do {
		if (((n_258570.attrs != null ? n_258570.attrs.length : 0) == 0)) {
		n_258570.attrs = nimCopy(null, [key_258571, val_258572], NTI258587);
		}
		else {
			L1: do {
				var i_258600 = 0;
				var colontmp__336094 = 0;
				colontmp__336094 = subInt((n_258570.attrs != null ? n_258570.attrs.length : 0), 2);
				var res_336095 = 0;
				L2: do {
						L3: while (true) {
						if (!(res_336095 <= colontmp__336094)) break L3;
							i_258600 = res_336095;
							if ((n_258570.attrs[chckIndx(i_258600, 0, n_258570.attrs.length+0-1)-0] == key_258571)) {
							n_258570.attrs[chckIndx(addInt(i_258600, 1), 0, n_258570.attrs.length+0-1)-0] = val_258572;
							break BeforeRet;
							}
							
							res_336095 = addInt(res_336095, 2);
						}
				} while(false);
			} while(false);
			if (n_258570.attrs != null) { n_258570.attrs.push(key_258571); } else { n_258570.attrs = [key_258571]; };
			if (n_258570.attrs != null) { n_258570.attrs.push(val_258572); } else { n_258570.attrs = [val_258572]; };
		}
		
	} while (false);

	
}

function raw_get_304235(t_304239, key_304240, hc_304241, hc_304241_Idx) {
						var Tmp3;

	var result_304242 = 0;

	BeforeRet: do {
		hc_304241[hc_304241_Idx] = hash_225180(key_304240);
		if ((hc_304241[hc_304241_Idx] == 0)) {
		hc_304241[hc_304241_Idx] = 314159265;
		}
		
		if (((t_304239.data != null ? t_304239.data.length : 0) == 0)) {
		result_304242 = -1;
		break BeforeRet;
		}
		
		var h_304384 = (hc_304241[hc_304241_Idx] & (t_304239.data != null ? (t_304239.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_228418(t_304239.data[chckIndx(h_304384, 0, t_304239.data.length+0-1)-0].Field0)) break L2;
						if (!(t_304239.data[chckIndx(h_304384, 0, t_304239.data.length+0-1)-0].Field0 == hc_304241[hc_304241_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_304239.data[chckIndx(h_304384, 0, t_304239.data.length+0-1)-0].Field2, key_304240);						}					if (Tmp3) {
					result_304242 = h_304384;
					break BeforeRet;
					}
					
					h_304384 = next_try_228435(h_304384, (t_304239.data != null ? (t_304239.data.length-1) : -1));
				}
		} while(false);
		result_304242 = subInt(-1, h_304384);
	} while (false);

	return result_304242;

}

function HEX5BHEX5D_304223(t_304229, key_304230) {
	var result_304232 = null;
	var result_304232_Idx = 0;

		var hc_304233 = [0];
		var index_304234 = raw_get_304235(t_304229, key_304230, hc_304233, 0);
		if ((0 <= index_304234)) {
		result_304232 = t_304229.data[chckIndx(index_304234, 0, t_304229.data.length+0-1)-0]; result_304232_Idx = "Field3";
		}
		else {
			var e_305203 = null;
			e_305203 = {m_type: NTI47854, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			e_305203.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(key_304230 || []), NTI44040);
			e_305203.parent = null;
			raiseException(e_305203, "KeyError");
		}
		

	return [result_304232, result_304232_Idx];

}

function load_304069(d_304071) {
		var Tmp2;
		var Tmp3;

++excHandler;
		Tmp2 = framePtr;
		try {
		var city_305435 = (Tmp3 = HEX5BHEX5D_304223(d_304071.cities, addr_city_302618[0]), Tmp3)[0][Tmp3[1]];
		nimCopy(all_links_300614[0], city_305435.allLinks, NTI300125);
		nimCopy(all_streets_301014[0], city_305435.allStreets, NTI300148);
		nimCopy(cached_tiles_301414[0], city_305435.cachedTiles, NTI300174);
		nimCopy(all_sectors_301814[0], city_305435.allSectors, NTI300197);
		nimCopy(last_postfix_302214[0], city_305435.lastPostfix, NTI300223);
		redraw_278814(kxi_269324[0]);
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
		framePtr = Tmp2;
		window.alert("Сначала кликнуть по городу на карте\n с каким надо работать.");
		lastJSError = prevJSError;
		} finally {
		framePtr = Tmp2;
		}

	
}

function nsuJoinSep(a_201059, sep_201060) {
	var result_201061 = null;

		if ((0 < (a_201059 != null ? a_201059.length : 0))) {
		var l_201072 = mulInt((sep_201060 != null ? sep_201060.length : 0), subInt((a_201059 != null ? a_201059.length : 0), 1));
		L1: do {
			var i_201086 = 0;
			var colontmp__336105 = 0;
			colontmp__336105 = (a_201059 != null ? (a_201059.length-1) : -1);
			var res_336106 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_336106 <= colontmp__336105)) break L3;
						i_201086 = res_336106;
						l_201072 = addInt(l_201072, (a_201059[chckIndx(i_201086, 0, a_201059.length+0-1)-0] != null ? a_201059[chckIndx(i_201086, 0, a_201059.length+0-1)-0].length : 0));
						res_336106 = addInt(res_336106, 1);
					}
			} while(false);
		} while(false);
		result_201061 = nimCopy(null, mnewString(0), NTI44040);
		if (result_201061 != null) { result_201061 = (result_201061).concat(a_201059[chckIndx(0, 0, a_201059.length+0-1)-0]); } else { result_201061 = a_201059[chckIndx(0, 0, a_201059.length+0-1)-0].slice(); };
		L4: do {
			var i_201106 = 0;
			var colontmp__336112 = 0;
			colontmp__336112 = (a_201059 != null ? (a_201059.length-1) : -1);
			var res_336113 = 1;
			L5: do {
					L6: while (true) {
					if (!(res_336113 <= colontmp__336112)) break L6;
						i_201106 = res_336113;
						if (result_201061 != null) { result_201061 = (result_201061).concat(sep_201060); } else { result_201061 = sep_201060.slice(); };
						if (result_201061 != null) { result_201061 = (result_201061).concat(a_201059[chckIndx(i_201106, 0, a_201059.length+0-1)-0]); } else { result_201061 = a_201059[chckIndx(i_201106, 0, a_201059.length+0-1)-0].slice(); };
						res_336113 = addInt(res_336113, 1);
					}
			} while(false);
		} while(false);
		}
		else {
			result_201061 = nimCopy(null, [], NTI44040);
		}
		

	return result_201061;

}

function name_302783(s_302785) {
	var result_302786 = null;

		result_302786 = nimCopy(null, nsuJoinSep([(s_302785.postalCode || []).concat(makeNimstrLit("-") || [],cstrToNimstr((s_302785.pFix)+"") || []), nimCopy(null, s_302785.city, NTI44040), nimCopy(null, s_302785.district, NTI44040)], makeNimstrLit(" ")), NTI44040);

	return result_302786;

}

function len_320051(t_320056) {
	var result_320057 = 0;

		result_320057 = t_320056.counter;

	return result_320057;

}

function id_302802(s_302804) {
	var result_302805 = null;

		result_302805 = nimCopy(null, (s_302804.postalCode || []).concat(makeNimstrLit("-") || [],cstrToNimstr((s_302804.pFix)+"") || []), NTI44040);

	return result_302805;

}

function raw_get_318224(t_318228, key_318229, hc_318230, hc_318230_Idx) {
						var Tmp3;

	var result_318231 = 0;

	BeforeRet: do {
		hc_318230[hc_318230_Idx] = hash_225180(key_318229);
		if ((hc_318230[hc_318230_Idx] == 0)) {
		hc_318230[hc_318230_Idx] = 314159265;
		}
		
		if (((t_318228.data != null ? t_318228.data.length : 0) == 0)) {
		result_318231 = -1;
		break BeforeRet;
		}
		
		var h_318373 = (hc_318230[hc_318230_Idx] & (t_318228.data != null ? (t_318228.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_228418(t_318228.data[chckIndx(h_318373, 0, t_318228.data.length+0-1)-0].Field0)) break L2;
						if (!(t_318228.data[chckIndx(h_318373, 0, t_318228.data.length+0-1)-0].Field0 == hc_318230[hc_318230_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_318228.data[chckIndx(h_318373, 0, t_318228.data.length+0-1)-0].Field2, key_318229);						}					if (Tmp3) {
					result_318231 = h_318373;
					break BeforeRet;
					}
					
					h_318373 = next_try_228435(h_318373, (t_318228.data != null ? (t_318228.data.length-1) : -1));
				}
		} while(false);
		result_318231 = subInt(-1, h_318373);
	} while (false);

	return result_318231;

}

function HEX5BHEX5D_318212(t_318218, key_318219) {
	var result_318221 = null;
	var result_318221_Idx = 0;

		var hc_318222 = [0];
		var index_318223 = raw_get_318224(t_318218, key_318219, hc_318222, 0);
		if ((0 <= index_318223)) {
		result_318221 = t_318218.data[chckIndx(index_318223, 0, t_318218.data.length+0-1)-0]; result_318221_Idx = "Field3";
		}
		else {
			var e_319203 = null;
			e_319203 = {m_type: NTI47854, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			e_319203.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(key_318219 || []), NTI44040);
			e_319203.parent = null;
			raiseException(e_319203, "KeyError");
		}
		

	return [result_318221, result_318221_Idx];

}

function raw_get_323221(t_323226, key_323227, hc_323228, hc_323228_Idx) {
						var Tmp3;

	var result_323229 = 0;

	BeforeRet: do {
		hc_323228[hc_323228_Idx] = hash_225180(key_323227);
		if ((hc_323228[hc_323228_Idx] == 0)) {
		hc_323228[hc_323228_Idx] = 314159265;
		}
		
		if (((t_323226.data != null ? t_323226.data.length : 0) == 0)) {
		result_323229 = -1;
		break BeforeRet;
		}
		
		var h_323371 = (hc_323228[hc_323228_Idx] & (t_323226.data != null ? (t_323226.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_228418(t_323226.data[chckIndx(h_323371, 0, t_323226.data.length+0-1)-0].Field0)) break L2;
						if (!(t_323226.data[chckIndx(h_323371, 0, t_323226.data.length+0-1)-0].Field0 == hc_323228[hc_323228_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_323226.data[chckIndx(h_323371, 0, t_323226.data.length+0-1)-0].Field2, key_323227);						}					if (Tmp3) {
					result_323229 = h_323371;
					break BeforeRet;
					}
					
					h_323371 = next_try_228435(h_323371, (t_323226.data != null ? (t_323226.data.length-1) : -1));
				}
		} while(false);
		result_323229 = subInt(-1, h_323371);
	} while (false);

	return result_323229;

}

function raw_insert_325707(t_325713, data_325716, data_325716_Idx, key_325717, val_325718, hc_325719, h_325720) {
		data_325716[data_325716_Idx][chckIndx(h_325720, 0, data_325716[data_325716_Idx].length+0-1)-0].Field2 = nimCopy(null, key_325717, NTI44040);
		data_325716[data_325716_Idx][chckIndx(h_325720, 0, data_325716[data_325716_Idx].length+0-1)-0].Field3 = nimCopy(null, val_325718, NTI300058);
		data_325716[data_325716_Idx][chckIndx(h_325720, 0, data_325716[data_325716_Idx].length+0-1)-0].Field0 = hc_325719;
		data_325716[data_325716_Idx][chckIndx(h_325720, 0, data_325716[data_325716_Idx].length+0-1)-0].Field1 = -1;
		if ((t_325713.first < 0)) {
		t_325713.first = h_325720;
		}
		
		if ((0 <= t_325713.last)) {
		data_325716[data_325716_Idx][chckIndx(t_325713.last, 0, data_325716[data_325716_Idx].length+0-1)-0].Field1 = h_325720;
		}
		
		t_325713.last = h_325720;

	
}

function enlarge_324567(t_324573) {
		var n_324581 = null;
		n_324581 = new Array(chckRange(mulInt((t_324573.data != null ? t_324573.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_324573.data != null ? t_324573.data.length : 0), 2), 0, 2147483647);++i) {n_324581[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		var h_324720 = t_324573.first;
		t_324573.first = -1;
		t_324573.last = -1;
		var Tmp1 = t_324573.data; t_324573.data = n_324581; n_324581 = Tmp1;		L2: do {
				L3: while (true) {
				if (!(0 <= h_324720)) break L3;
					var nxt_324886 = n_324581[chckIndx(h_324720, 0, n_324581.length+0-1)-0].Field1;
					var eh_325042 = n_324581[chckIndx(h_324720, 0, n_324581.length+0-1)-0].Field0;
					if (is_filled_228418(eh_325042)) {
					var j_325049 = (eh_325042 & (t_324573.data != null ? (t_324573.data.length-1) : -1));
					L4: do {
							L5: while (true) {
							if (!is_filled_228418(t_324573.data[chckIndx(j_325049, 0, t_324573.data.length+0-1)-0].Field0)) break L5;
								j_325049 = next_try_228435(j_325049, (t_324573.data != null ? (t_324573.data.length-1) : -1));
							}
					} while(false);
					raw_insert_325707(t_324573, t_324573, "data", n_324581[chckIndx(h_324720, 0, n_324581.length+0-1)-0].Field2, n_324581[chckIndx(h_324720, 0, n_324581.length+0-1)-0].Field3, n_324581[chckIndx(h_324720, 0, n_324581.length+0-1)-0].Field0, j_325049);
					}
					
					h_324720 = nxt_324886;
				}
		} while(false);

	
}

function raw_get_known_hc_326574(t_326579, key_326580, hc_326581) {
	var result_326582 = 0;

	BeforeRet: do {
		if (((t_326579.data != null ? t_326579.data.length : 0) == 0)) {
		result_326582 = -1;
		break BeforeRet;
		}
		
		var h_326721 = (hc_326581 & (t_326579.data != null ? (t_326579.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_228418(t_326579.data[chckIndx(h_326721, 0, t_326579.data.length+0-1)-0].Field0)) break L2;
					if (((t_326579.data[chckIndx(h_326721, 0, t_326579.data.length+0-1)-0].Field0 == hc_326581) && eqStrings(t_326579.data[chckIndx(h_326721, 0, t_326579.data.length+0-1)-0].Field2, key_326580))) {
					result_326582 = h_326721;
					break BeforeRet;
					}
					
					h_326721 = next_try_228435(h_326721, (t_326579.data != null ? (t_326579.data.length-1) : -1));
				}
		} while(false);
		result_326582 = subInt(-1, h_326721);
	} while (false);

	return result_326582;

}

function has_key_or_put_322635(t_322641, key_322642, val_322643) {
	var result_322644 = false;

		if (((t_322641.data != null ? t_322641.data.length : 0) == 0)) {
		if (!(is_power_of_two_108062(64))) {
		failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_322641.counter = 0;
		t_322641.data = new Array(64); for (var i=0;i<64;++i) {t_322641.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		t_322641.first = -1;
		t_322641.last = -1;
		}
		
		var hc_323201 = [0];
		var index_323860 = raw_get_323221(t_322641, key_322642, hc_323201, 0);
		if ((index_323860 < 0)) {
		result_322644 = false;
		if (((t_322641.data != null ? t_322641.data.length : 0) == 0)) {
		if (!(is_power_of_two_108062(64))) {
		failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_322641.counter = 0;
		t_322641.data = new Array(64); for (var i=0;i<64;++i) {t_322641.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		t_322641.first = -1;
		t_322641.last = -1;
		}
		
		if (must_rehash_228453((t_322641.data != null ? t_322641.data.length : 0), t_322641.counter)) {
		enlarge_324567(t_322641);
		index_323860 = raw_get_known_hc_326574(t_322641, key_322642, hc_323201[0]);
		}
		
		index_323860 = subInt(-1, index_323860);
		raw_insert_325707(t_322641, t_322641, "data", key_322642, val_322643, hc_323201[0], index_323860);
		t_322641.counter = addInt(t_322641.counter, 1);
		}
		else {
			result_322644 = true;
		}
		

	return result_322644;

}

function raw_get_321416(t_321420, key_321421, hc_321422, hc_321422_Idx) {
						var Tmp3;

	var result_321423 = 0;

	BeforeRet: do {
		hc_321422[hc_321422_Idx] = hash_225180(key_321421);
		if ((hc_321422[hc_321422_Idx] == 0)) {
		hc_321422[hc_321422_Idx] = 314159265;
		}
		
		if (((t_321420.data != null ? t_321420.data.length : 0) == 0)) {
		result_321423 = -1;
		break BeforeRet;
		}
		
		var h_321565 = (hc_321422[hc_321422_Idx] & (t_321420.data != null ? (t_321420.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_228418(t_321420.data[chckIndx(h_321565, 0, t_321420.data.length+0-1)-0].Field0)) break L2;
						if (!(t_321420.data[chckIndx(h_321565, 0, t_321420.data.length+0-1)-0].Field0 == hc_321422[hc_321422_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_321420.data[chckIndx(h_321565, 0, t_321420.data.length+0-1)-0].Field2, key_321421);						}					if (Tmp3) {
					result_321423 = h_321565;
					break BeforeRet;
					}
					
					h_321565 = next_try_228435(h_321565, (t_321420.data != null ? (t_321420.data.length-1) : -1));
				}
		} while(false);
		result_321423 = subInt(-1, h_321565);
	} while (false);

	return result_321423;

}

function HEX5BHEX5D_321404(t_321410, key_321411) {
	var result_321413 = null;
	var result_321413_Idx = 0;

		var hc_321414 = [0];
		var index_321415 = raw_get_321416(t_321410, key_321411, hc_321414, 0);
		if ((0 <= index_321415)) {
		result_321413 = t_321410.data[chckIndx(index_321415, 0, t_321410.data.length+0-1)-0]; result_321413_Idx = "Field3";
		}
		else {
			var e_322403 = null;
			e_322403 = {m_type: NTI47854, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			e_322403.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(key_321411 || []), NTI44040);
			e_322403.parent = null;
			raiseException(e_322403, "KeyError");
		}
		

	return [result_321413, result_321413_Idx];

}

function del_331407(t_331413, key_331414) {
		var n_331422 = null;
		n_331422 = new Array(chckRange((t_331413.data != null ? t_331413.data.length : 0), 0, 2147483647)); for (var i=0;i<chckRange((t_331413.data != null ? t_331413.data.length : 0), 0, 2147483647);++i) {n_331422[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		var h_331561 = t_331413.first;
		t_331413.first = -1;
		t_331413.last = -1;
		var Tmp1 = t_331413.data; t_331413.data = n_331422; n_331422 = Tmp1;		var res_331571 = 0;
		res_331571 = hash_225180(key_331414);
		if ((res_331571 == 0)) {
		res_331571 = 314159265;
		}
		
		var hc_331575 = res_331571;
		L2: do {
				L3: while (true) {
				if (!(0 <= h_331561)) break L3;
					var nxt_331732 = n_331422[chckIndx(h_331561, 0, n_331422.length+0-1)-0].Field1;
					if (is_filled_228418(n_331422[chckIndx(h_331561, 0, n_331422.length+0-1)-0].Field0)) {
					if (((n_331422[chckIndx(h_331561, 0, n_331422.length+0-1)-0].Field0 == hc_331575) && eqStrings(n_331422[chckIndx(h_331561, 0, n_331422.length+0-1)-0].Field2, key_331414))) {
					t_331413.counter = subInt(t_331413.counter, 1);
					}
					else {
						var j_332544 = subInt(-1, raw_get_known_hc_326574(t_331413, n_331422[chckIndx(h_331561, 0, n_331422.length+0-1)-0].Field2, n_331422[chckIndx(h_331561, 0, n_331422.length+0-1)-0].Field0));
						raw_insert_325707(t_331413, t_331413, "data", n_331422[chckIndx(h_331561, 0, n_331422.length+0-1)-0].Field2, n_331422[chckIndx(h_331561, 0, n_331422.length+0-1)-0].Field3, n_331422[chckIndx(h_331561, 0, n_331422.length+0-1)-0].Field0, j_332544);
					}
					
					}
					
					h_331561 = nxt_331732;
				}
		} while(false);

	
}

function raw_get_302986(t_302990, key_302991, hc_302992, hc_302992_Idx) {
						var Tmp3;

	var result_302993 = 0;

	BeforeRet: do {
		hc_302992[hc_302992_Idx] = hash_225180(key_302991);
		if ((hc_302992[hc_302992_Idx] == 0)) {
		hc_302992[hc_302992_Idx] = 314159265;
		}
		
		if (((t_302990.data != null ? t_302990.data.length : 0) == 0)) {
		result_302993 = -1;
		break BeforeRet;
		}
		
		var h_303135 = (hc_302992[hc_302992_Idx] & (t_302990.data != null ? (t_302990.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_228418(t_302990.data[chckIndx(h_303135, 0, t_302990.data.length+0-1)-0].Field0)) break L2;
						if (!(t_302990.data[chckIndx(h_303135, 0, t_302990.data.length+0-1)-0].Field0 == hc_302992[hc_302992_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_302990.data[chckIndx(h_303135, 0, t_302990.data.length+0-1)-0].Field1, key_302991);						}					if (Tmp3) {
					result_302993 = h_303135;
					break BeforeRet;
					}
					
					h_303135 = next_try_228435(h_303135, (t_302990.data != null ? (t_302990.data.length-1) : -1));
				}
		} while(false);
		result_302993 = subInt(-1, h_303135);
	} while (false);

	return result_302993;

}

function HEX5BHEX5D_302974(t_302980, key_302981) {
	var result_302983 = null;
	var result_302983_Idx = 0;

		var hc_302984 = [0];
		var index_302985 = raw_get_302986(t_302980, key_302981, hc_302984, 0);
		if ((0 <= index_302985)) {
		result_302983 = t_302980.data[chckIndx(index_302985, 0, t_302980.data.length+0-1)-0]; result_302983_Idx = "Field2";
		}
		else {
			var e_303803 = null;
			e_303803 = {m_type: NTI47854, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			e_303803.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(key_302981 || []), NTI44040);
			e_303803.parent = null;
			raiseException(e_303803, "KeyError");
		}
		

	return [result_302983, result_302983_Idx];

}

function raw_get_known_hc_317359(t_317364, key_317365, hc_317366) {
	var result_317367 = 0;

	BeforeRet: do {
		if (((t_317364.data != null ? t_317364.data.length : 0) == 0)) {
		result_317367 = -1;
		break BeforeRet;
		}
		
		var h_317506 = (hc_317366 & (t_317364.data != null ? (t_317364.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_228418(t_317364.data[chckIndx(h_317506, 0, t_317364.data.length+0-1)-0].Field0)) break L2;
					if (((t_317364.data[chckIndx(h_317506, 0, t_317364.data.length+0-1)-0].Field0 == hc_317366) && eqStrings(t_317364.data[chckIndx(h_317506, 0, t_317364.data.length+0-1)-0].Field2, key_317365))) {
					result_317367 = h_317506;
					break BeforeRet;
					}
					
					h_317506 = next_try_228435(h_317506, (t_317364.data != null ? (t_317364.data.length-1) : -1));
				}
		} while(false);
		result_317367 = subInt(-1, h_317506);
	} while (false);

	return result_317367;

}

function raw_insert_316507(t_316513, data_316516, data_316516_Idx, key_316517, val_316518, hc_316519, h_316520) {
		data_316516[data_316516_Idx][chckIndx(h_316520, 0, data_316516[data_316516_Idx].length+0-1)-0].Field2 = nimCopy(null, key_316517, NTI44040);
		data_316516[data_316516_Idx][chckIndx(h_316520, 0, data_316516[data_316516_Idx].length+0-1)-0].Field3 = val_316518;
		data_316516[data_316516_Idx][chckIndx(h_316520, 0, data_316516[data_316516_Idx].length+0-1)-0].Field0 = hc_316519;
		data_316516[data_316516_Idx][chckIndx(h_316520, 0, data_316516[data_316516_Idx].length+0-1)-0].Field1 = -1;
		if ((t_316513.first < 0)) {
		t_316513.first = h_316520;
		}
		
		if ((0 <= t_316513.last)) {
		data_316516[data_316516_Idx][chckIndx(t_316513.last, 0, data_316516[data_316516_Idx].length+0-1)-0].Field1 = h_316520;
		}
		
		t_316513.last = h_316520;

	
}

function del_327674(t_327680, key_327681) {
		var n_327689 = null;
		n_327689 = new Array(chckRange((t_327680.data != null ? t_327680.data.length : 0), 0, 2147483647)); for (var i=0;i<chckRange((t_327680.data != null ? t_327680.data.length : 0), 0, 2147483647);++i) {n_327689[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		var h_327828 = t_327680.first;
		t_327680.first = -1;
		t_327680.last = -1;
		var Tmp1 = t_327680.data; t_327680.data = n_327689; n_327689 = Tmp1;		var res_327838 = 0;
		res_327838 = hash_225180(key_327681);
		if ((res_327838 == 0)) {
		res_327838 = 314159265;
		}
		
		var hc_327842 = res_327838;
		L2: do {
				L3: while (true) {
				if (!(0 <= h_327828)) break L3;
					var nxt_327999 = n_327689[chckIndx(h_327828, 0, n_327689.length+0-1)-0].Field1;
					if (is_filled_228418(n_327689[chckIndx(h_327828, 0, n_327689.length+0-1)-0].Field0)) {
					if (((n_327689[chckIndx(h_327828, 0, n_327689.length+0-1)-0].Field0 == hc_327842) && eqStrings(n_327689[chckIndx(h_327828, 0, n_327689.length+0-1)-0].Field2, key_327681))) {
					t_327680.counter = subInt(t_327680.counter, 1);
					}
					else {
						var j_328811 = subInt(-1, raw_get_known_hc_317359(t_327680, n_327689[chckIndx(h_327828, 0, n_327689.length+0-1)-0].Field2, n_327689[chckIndx(h_327828, 0, n_327689.length+0-1)-0].Field0));
						raw_insert_316507(t_327680, t_327680, "data", n_327689[chckIndx(h_327828, 0, n_327689.length+0-1)-0].Field2, n_327689[chckIndx(h_327828, 0, n_327689.length+0-1)-0].Field3, n_327689[chckIndx(h_327828, 0, n_327689.length+0-1)-0].Field0, j_328811);
					}
					
					}
					
					h_327828 = nxt_327999;
				}
		} while(false);

	
}

function len_312198(t_312203) {
	var result_312204 = 0;

		result_312204 = t_312203.counter;

	return result_312204;

}

function raw_get_313164(t_313169, key_313170, hc_313171, hc_313171_Idx) {
						var Tmp3;

	var result_313172 = 0;

	BeforeRet: do {
		hc_313171[hc_313171_Idx] = hash_225180(key_313170);
		if ((hc_313171[hc_313171_Idx] == 0)) {
		hc_313171[hc_313171_Idx] = 314159265;
		}
		
		if (((t_313169.data != null ? t_313169.data.length : 0) == 0)) {
		result_313172 = -1;
		break BeforeRet;
		}
		
		var h_313314 = (hc_313171[hc_313171_Idx] & (t_313169.data != null ? (t_313169.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_228418(t_313169.data[chckIndx(h_313314, 0, t_313169.data.length+0-1)-0].Field0)) break L2;
						if (!(t_313169.data[chckIndx(h_313314, 0, t_313169.data.length+0-1)-0].Field0 == hc_313171[hc_313171_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_313169.data[chckIndx(h_313314, 0, t_313169.data.length+0-1)-0].Field2, key_313170);						}					if (Tmp3) {
					result_313172 = h_313314;
					break BeforeRet;
					}
					
					h_313314 = next_try_228435(h_313314, (t_313169.data != null ? (t_313169.data.length-1) : -1));
				}
		} while(false);
		result_313172 = subInt(-1, h_313314);
	} while (false);

	return result_313172;

}

function has_key_313136(t_313141, key_313142) {
	var result_313143 = false;

		var hc_313144 = [0];
		result_313143 = (0 <= raw_get_313164(t_313141, key_313142, hc_313144, 0));

	return result_313143;

}

function enlarge_315367(t_315373) {
		var n_315381 = null;
		n_315381 = new Array(chckRange(mulInt((t_315373.data != null ? t_315373.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_315373.data != null ? t_315373.data.length : 0), 2), 0, 2147483647);++i) {n_315381[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		var h_315520 = t_315373.first;
		t_315373.first = -1;
		t_315373.last = -1;
		var Tmp1 = t_315373.data; t_315373.data = n_315381; n_315381 = Tmp1;		L2: do {
				L3: while (true) {
				if (!(0 <= h_315520)) break L3;
					var nxt_315686 = n_315381[chckIndx(h_315520, 0, n_315381.length+0-1)-0].Field1;
					var eh_315842 = n_315381[chckIndx(h_315520, 0, n_315381.length+0-1)-0].Field0;
					if (is_filled_228418(eh_315842)) {
					var j_315849 = (eh_315842 & (t_315373.data != null ? (t_315373.data.length-1) : -1));
					L4: do {
							L5: while (true) {
							if (!is_filled_228418(t_315373.data[chckIndx(j_315849, 0, t_315373.data.length+0-1)-0].Field0)) break L5;
								j_315849 = next_try_228435(j_315849, (t_315373.data != null ? (t_315373.data.length-1) : -1));
							}
					} while(false);
					raw_insert_316507(t_315373, t_315373, "data", n_315381[chckIndx(h_315520, 0, n_315381.length+0-1)-0].Field2, n_315381[chckIndx(h_315520, 0, n_315381.length+0-1)-0].Field3, n_315381[chckIndx(h_315520, 0, n_315381.length+0-1)-0].Field0, j_315849);
					}
					
					h_315520 = nxt_315686;
				}
		} while(false);

	
}

function HEX5BHEX5DHEX3D_314117(t_314123, key_314124, val_314125) {
		if (((t_314123.data != null ? t_314123.data.length : 0) == 0)) {
		if (!(is_power_of_two_108062(64))) {
		failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_314123.counter = 0;
		t_314123.data = new Array(64); for (var i=0;i<64;++i) {t_314123.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		t_314123.first = -1;
		t_314123.last = -1;
		}
		
		var hc_314601 = [0];
		var index_314630 = raw_get_313164(t_314123, key_314124, hc_314601, 0);
		if ((0 <= index_314630)) {
		t_314123.data[chckIndx(index_314630, 0, t_314123.data.length+0-1)-0].Field3 = val_314125;
		}
		else {
			if (((t_314123.data != null ? t_314123.data.length : 0) == 0)) {
			if (!(is_power_of_two_108062(64))) {
			failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			t_314123.counter = 0;
			t_314123.data = new Array(64); for (var i=0;i<64;++i) {t_314123.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}			t_314123.first = -1;
			t_314123.last = -1;
			}
			
			if (must_rehash_228453((t_314123.data != null ? t_314123.data.length : 0), t_314123.counter)) {
			enlarge_315367(t_314123);
			index_314630 = raw_get_known_hc_317359(t_314123, key_314124, hc_314601[0]);
			}
			
			index_314630 = subInt(-1, index_314630);
			raw_insert_316507(t_314123, t_314123, "data", key_314124, val_314125, hc_314601[0], index_314630);
			t_314123.counter = addInt(t_314123.counter, 1);
		}
		

	
}

function reindex_sect_312060() {
															var Tmp10;
														var Tmp11;
														var Tmp12;
														var Tmp13;
															var Tmp15;
																		var Tmp18;
																		var Tmp19;
																		var Tmp20;
																		var Tmp21;

		var moved_312062 = true;
		L1: do {
				L2: while (true) {
				if (!moved_312062) break L2;
					moved_312062 = false;
					L3: do {
						var k_313015 = null;
						var val_313016 = null;
						var val_313016_Idx = 0;
						var l_336161 = len_312198(last_postfix_302214[0]);
						L4: do {
							var h_336163 = 0;
							var colontmp__336164 = 0;
							colontmp__336164 = (last_postfix_302214[0].data != null ? (last_postfix_302214[0].data.length-1) : -1);
							var res_336165 = 0;
							L5: do {
									L6: while (true) {
									if (!(res_336165 <= colontmp__336164)) break L6;
										h_336163 = res_336165;
										if (is_filled_228418(last_postfix_302214[0].data[chckIndx(h_336163, 0, last_postfix_302214[0].data.length+0-1)-0].Field0)) {
										k_313015 = last_postfix_302214[0].data[chckIndx(h_336163, 0, last_postfix_302214[0].data.length+0-1)-0].Field1;
										val_313016 = last_postfix_302214[0].data[chckIndx(h_336163, 0, last_postfix_302214[0].data.length+0-1)-0]; val_313016_Idx = "Field2";
										L7: do {
											var v_313023 = 0;
											var colontmp__336148 = 0;
											colontmp__336148 = val_313016[val_313016_Idx];
											var res_336149 = colontmp__336148;
											L8: do {
													L9: while (true) {
													if (!(1 <= res_336149)) break L9;
														v_313023 = res_336149;
														var from_sect_313024 = (k_313015 || []).concat(makeNimstrLit("-") || [],cstrToNimstr((v_313023)+"") || []);
														var prev_v_313025 = subInt(v_313023, 1);
														var to_sect_313026 = (k_313015 || []).concat(makeNimstrLit("-") || [],cstrToNimstr((prev_v_313025)+"") || []);
															if (!!((prev_v_313025 == 0))) Tmp10 = false; else {																Tmp10 = !(has_key_313136(all_sectors_301814[0], to_sect_313026));															}														if (Tmp10) {
														moved_312062 = true;
														HEX5BHEX5DHEX3D_314117(all_sectors_301814[0], to_sect_313026, {m_type: NTI300050, postalCode: null, district: null, city: null, pFix: 0, streets: {data: null, counter: 0, first: 0, last: 0}, shownOnMap: false, exclude: false});
														(Tmp11 = HEX5BHEX5D_318212(all_sectors_301814[0], to_sect_313026), Tmp11)[0][Tmp11[1]] = (Tmp12 = HEX5BHEX5D_318212(all_sectors_301814[0], from_sect_313024), Tmp12)[0][Tmp12[1]];
														(Tmp13 = HEX5BHEX5D_318212(all_sectors_301814[0], to_sect_313026), Tmp13)[0][Tmp13[1]].pFix = prev_v_313025;
														L14: do {
															var name_321014 = null;
															var m_v_321015 = null;
															var colontmp__336143 = {data: null, counter: 0, first: 0, last: 0};
															nimCopy(colontmp__336143, (Tmp15 = HEX5BHEX5D_318212(all_sectors_301814[0], from_sect_313024), Tmp15)[0][Tmp15[1]].streets, NTI300066);
															var l_336144 = len_320051(colontmp__336143);
															if ((0 < colontmp__336143.counter)) {
															var h_336145 = colontmp__336143.first;
															L16: do {
																	L17: while (true) {
																	if (!(0 <= h_336145)) break L17;
																		var nxt_336147 = colontmp__336143.data[chckIndx(h_336145, 0, colontmp__336143.data.length+0-1)-0].Field1;
																		if (is_filled_228418(colontmp__336143.data[chckIndx(h_336145, 0, colontmp__336143.data.length+0-1)-0].Field0)) {
																		name_321014 = colontmp__336143.data[chckIndx(h_336145, 0, colontmp__336143.data.length+0-1)-0].Field2;
																		m_v_321015 = colontmp__336143.data[chckIndx(h_336145, 0, colontmp__336143.data.length+0-1)-0].Field3;
																		has_key_or_put_322635((Tmp18 = HEX5BHEX5D_318212(all_sectors_301814[0], to_sect_313026), Tmp18)[0][Tmp18[1]].streets, name_321014, (Tmp19 = HEX5BHEX5D_321404(all_streets_301014[0], name_321014), Tmp19)[0][Tmp19[1]].links);
																		(Tmp20 = HEX5BHEX5D_321404(all_streets_301014[0], name_321014), Tmp20)[0][Tmp20[1]].sector = (Tmp21 = HEX5BHEX5D_318212(all_sectors_301814[0], to_sect_313026), Tmp21)[0][Tmp21[1]];
																		if (!((len_320051(colontmp__336143) == l_336144))) {
																		failed_assert_impl_58851(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
																		}
																		
																		}
																		
																		h_336145 = nxt_336147;
																	}
															} while(false);
															}
															
														} while(false);
														del_327674(all_sectors_301814[0], from_sect_313024);
														if ((v_313023 == val_313016[val_313016_Idx])) {
														val_313016[val_313016_Idx] = subInt(val_313016[val_313016_Idx], 1);
														}
														
														}
														
														res_336149 = subInt(res_336149, 1);
													}
											} while(false);
										} while(false);
										if (!((len_312198(last_postfix_302214[0]) == l_336161))) {
										failed_assert_impl_58851(makeNimstrLit("tables.nim(691, 13) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
										}
										
										}
										
										res_336165 = addInt(res_336165, 1);
									}
							} while(false);
						} while(false);
					} while(false);
				}
		} while(false);

	
}

function len_334553(t_334558) {
	var result_334559 = 0;

		result_334559 = t_334558.counter;

	return result_334559;

}

function create_dom_329413() {

		function HEX3Aanonymous_329822(ev_329824, n_329825) {
				save_305464();

			
		}

		function HEX3Aanonymous_329844(ev_329846, n_329847) {

				function HEX3Aanonymous_329850(e_329852) {
						var data_329860 = e_329852.target.result;
						var a_329865 = JSON.parse(data_329860);
						var x_329866 = a_329865;
						load_304069(x_329866);

					
				}

				var f_reader_329848 = function(){return new FileReader();}();
				f_reader_329848.addEventListener("load", HEX3Aanonymous_329850, false);
				var inp_file_330014 = ev_329846.target;
				f_reader_329848.readAsText(inp_file_330014.files[0]);

			
		}

										function clck_on_str_329416(ev_329418, n_329419) {
												var trgt_329420 = ev_329418.target;
												map.setZoom(20, true);
												map.setCenter({lat: nimCopy(null, chckRange(parseFloat(trgt_329420.getAttribute("data-lat")), -9.0000000000000000e+001, 9.0000000000000000e+001), NTI243016), lng: nimCopy(null, chckRange(parseFloat(trgt_329420.getAttribute("data-lng")), -1.8000000000000000e+002, 1.8000000000000000e+002), NTI243018), m_type: NTI243036}, false);

											
										}

						function HEX3Aanonymous_330102(ev_330104, n_330105) {
								var ev_clck_330106 = ev_330104;
								var t_330110 = ev_clck_330106.target;
								var chckd_330120 = (t_330110.checked);
								var s_n_330130 = (t_330110.value);
								t_330110.checkd = nimBoolToStr((t_330110.checked));
								if (chckd_330120) {
								display_sector_310890(cstrToNimstr(s_n_330130), true);
								}
								else {
								display_sector_310890(cstrToNimstr(s_n_330130), false);
								}
								

							
						}

						function HEX3Aanonymous_330246(ev_330248, n_330249) {
								var Tmp1;
												var Tmp5;
												var Tmp6;
												var Tmp7;
												var Tmp8;
									var Tmp9;
								var Tmp10;

								var id_330250 = cstrToNimstr(ev_330248.target.id);
								var from_sect_330251 = nsuReplaceStr(id_330250, makeNimstrLit("_"), makeNimstrLit(" "));
								var el_sel_330252 = document.querySelectorAll(toJSStr((makeNimstrLit("select[id=\'") || []).concat(id_330250 || [],makeNimstrLit("\']") || [])));
								var to_sect_330253 = cstrToNimstr(el_sel_330252[chckIndx(0, 0, el_sel_330252.length+0-1)-0].value);
								var from_sector_330415 = (Tmp1 = HEX5BHEX5D_318212(all_sectors_301814[0], from_sect_330251), Tmp1)[0][Tmp1[1]];
								L2: do {
									var name_330423 = null;
									var m_v_330424 = null;
									var colontmp__336123 = {data: null, counter: 0, first: 0, last: 0};
									nimCopy(colontmp__336123, from_sector_330415.streets, NTI300066);
									var l_336124 = len_320051(colontmp__336123);
									if ((0 < colontmp__336123.counter)) {
									var h_336125 = colontmp__336123.first;
									L3: do {
											L4: while (true) {
											if (!(0 <= h_336125)) break L4;
												var nxt_336127 = colontmp__336123.data[chckIndx(h_336125, 0, colontmp__336123.data.length+0-1)-0].Field1;
												if (is_filled_228418(colontmp__336123.data[chckIndx(h_336125, 0, colontmp__336123.data.length+0-1)-0].Field0)) {
												name_330423 = colontmp__336123.data[chckIndx(h_336125, 0, colontmp__336123.data.length+0-1)-0].Field2;
												m_v_330424 = colontmp__336123.data[chckIndx(h_336125, 0, colontmp__336123.data.length+0-1)-0].Field3;
												has_key_or_put_322635((Tmp5 = HEX5BHEX5D_318212(all_sectors_301814[0], to_sect_330253), Tmp5)[0][Tmp5[1]].streets, name_330423, (Tmp6 = HEX5BHEX5D_321404(all_streets_301014[0], name_330423), Tmp6)[0][Tmp6[1]].links);
												(Tmp7 = HEX5BHEX5D_321404(all_streets_301014[0], name_330423), Tmp7)[0][Tmp7[1]].sector = (Tmp8 = HEX5BHEX5D_318212(all_sectors_301814[0], to_sect_330253), Tmp8)[0][Tmp8[1]];
												del_331407(from_sector_330415.streets, name_330423);
												if (!((len_320051(colontmp__336123) == l_336124))) {
												failed_assert_impl_58851(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
												}
												
												}
												
												h_336125 = nxt_336127;
											}
									} while(false);
									}
									
								} while(false);
								if (!(from_sector_330415.exclude)) {
								if ((from_sector_330415.pFix == (Tmp9 = HEX5BHEX5D_302974(last_postfix_302214[0], from_sector_330415.postalCode), Tmp9)[0][Tmp9[1]])) {
								(Tmp10 = HEX5BHEX5D_302974(last_postfix_302214[0], from_sector_330415.postalCode), Tmp10)[0][Tmp10[1]] = subInt(Tmp10[0][Tmp10[1]], 1);
								}
								
								del_327674(all_sectors_301814[0], from_sect_330251);
								}
								
								reindex_sect_312060();

							
						}

	var result_329415 = null;

		var tmp_329651 = tree_260246(43, []);
		tmp_329651.class = "main-root";
		add_event_handler_279528(tmp_329651, 11, chckd_check_310894, kxi_269324[0]);
		var tmp_329657 = tree_260246(43, []);
		if (!((len_311180(all_sectors_301814[0]) == 0))) {
		var tmp_329658 = tree_260246(106, []);
		add_258800(tmp_329658, text_260364(makeNimstrLit("\xD0\xA1\xD0\xBE\xD1\x85\xD1\x80\xD0\xB0\xD0\xBD\xD0\xB8\xD1\x82\xD1\x8C")));
		add_event_handler_279528(tmp_329658, 0, HEX3Aanonymous_329822, kxi_269324[0]);
		add_258800(tmp_329657, tmp_329658);
		}
		
		var tmp_329659 = tree_260246(105, []);
		set_attr_258568(tmp_329659, "type", "file");
		set_attr_258568(tmp_329659, "name", "fileArea");
		add_event_handler_279528(tmp_329659, 8, HEX3Aanonymous_329844, kxi_269324[0]);
		add_258800(tmp_329657, tmp_329659);
		L1: do {
			var k_330055 = null;
			var v_330056 = null;
			var l_336016 = len_311180(all_sectors_301814[0]);
			if ((0 < all_sectors_301814[0].counter)) {
			var h_336017 = all_sectors_301814[0].first;
			L2: do {
					L3: while (true) {
					if (!(0 <= h_336017)) break L3;
						var nxt_336019 = all_sectors_301814[0].data[chckIndx(h_336017, 0, all_sectors_301814[0].data.length+0-1)-0].Field1;
						if (is_filled_228418(all_sectors_301814[0].data[chckIndx(h_336017, 0, all_sectors_301814[0].data.length+0-1)-0].Field0)) {
						k_330055 = all_sectors_301814[0].data[chckIndx(h_336017, 0, all_sectors_301814[0].data.length+0-1)-0].Field2;
						v_330056 = all_sectors_301814[0].data[chckIndx(h_336017, 0, all_sectors_301814[0].data.length+0-1)-0].Field3;
						var id4move_330057 = nsuReplaceStr(k_330055, makeNimstrLit(" "), makeNimstrLit("_"));
						var tmp_329660 = tree_260246(43, []);
						tmp_329660.class = "sector";
						var tmp_329661 = tree_260246(70, []);
						tmp_329661.class = "sect-name";
						add_258800(tmp_329661, text_260364(name_302783(v_330056)));
						add_258800(tmp_329660, tmp_329661);
						var tmp_329662 = tree_260246(43, []);
						tmp_329662.class = "streets";
						L4: do {
							var n_street_330077 = null;
							var links_330078 = null;
							var colontmp__335995 = {data: null, counter: 0, first: 0, last: 0};
							nimCopy(colontmp__335995, v_330056.streets, NTI300066);
							var l_335997 = len_320051(colontmp__335995);
							if ((0 < colontmp__335995.counter)) {
							var h_335998 = colontmp__335995.first;
							L5: do {
									L6: while (true) {
									if (!(0 <= h_335998)) break L6;
										var nxt_336000 = colontmp__335995.data[chckIndx(h_335998, 0, colontmp__335995.data.length+0-1)-0].Field1;
										if (is_filled_228418(colontmp__335995.data[chckIndx(h_335998, 0, colontmp__335995.data.length+0-1)-0].Field0)) {
										n_street_330077 = colontmp__335995.data[chckIndx(h_335998, 0, colontmp__335995.data.length+0-1)-0].Field2;
										links_330078 = colontmp__335995.data[chckIndx(h_335998, 0, colontmp__335995.data.length+0-1)-0].Field3;
										var coord_330079 = links_330078[chckIndx(0, 0, links_330078.length+0-1)-0].geometry[chckIndx(0, 0, links_330078[chckIndx(0, 0, links_330078.length+0-1)-0].geometry.length+0-1)-0];
										var tmp_329663 = tree_260246(43, []);
										tmp_329663.class = "street";
										var tmp_329664 = tree_260246(70, []);
										set_attr_258568(tmp_329664, "data-lat", toJSStr(cstrToNimstr((coord_330079.lat)+"")));
										set_attr_258568(tmp_329664, "data-lng", toJSStr(cstrToNimstr((coord_330079.lng)+"")));
										add_event_handler_279528(tmp_329664, 0, clck_on_str_329416, kxi_269324[0]);
										add_258800(tmp_329664, text_260364(n_street_330077));
										add_258800(tmp_329663, tmp_329664);
										add_258800(tmp_329662, tmp_329663);
										if (!((len_320051(colontmp__335995) == l_335997))) {
										failed_assert_impl_58851(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
										}
										
										}
										
										h_335998 = nxt_336000;
									}
							} while(false);
							}
							
						} while(false);
						add_258800(tmp_329660, tmp_329662);
						var tmp_329665 = tree_260246(43, []);
						tmp_329665.class = "show-sector-box";
						var tmp_329666 = tree_260246(104, []);
						set_attr_258568(tmp_329666, "for", toJSStr(k_330055));
						add_258800(tmp_329666, text_260364(makeNimstrLit("\xD0\x9F\xD0\xBE\xD0\xBA\xD0\xB0\xD0\xB7. \xD0\xBD\xD0\xB0 \xD0\xBA\xD0\xB0\xD1\x80\xD1\x82\xD0\xB5")));
						add_258800(tmp_329665, tmp_329666);
						var tmp_329667 = tree_260246(105, []);
						set_attr_258568(tmp_329667, "type", "checkbox");
						set_attr_258568(tmp_329667, "name", "showSector");
						tmp_329667.class = "show-sector";
						valueHEX3D_257839(tmp_329667, toJSStr(k_330055));
						tmp_329667.id = toJSStr(k_330055);
						set_attr_258568(tmp_329667, "checkd", toJSStr(nimBoolToStr(v_330056.shownOnMap)));
						add_event_handler_279528(tmp_329667, 0, HEX3Aanonymous_330102, kxi_269324[0]);
						add_258800(tmp_329665, tmp_329667);
						add_258800(tmp_329660, tmp_329665);
						var tmp_329668 = tree_260246(43, []);
						tmp_329668.class = "for-select";
						var tmp_329669 = tree_260246(107, []);
						tmp_329669.id = toJSStr(id4move_330057);
						var tmp_329670 = tree_260246(110, []);
						valueHEX3D_257839(tmp_329670, "");
						add_258800(tmp_329670, text_260364(makeNimstrLit("\xD0\x94\xD0\xB2\xD0\xB8\xD0\xBD\xD1\x83\xD1\x82\xD1\x8C \xD0\xB2\xD1\x81\xD0\xB5 \xD1\x83\xD0\xBB\xD0\xB8\xD1\x86\xD1\x8B \xD0\xB2")));
						add_258800(tmp_329669, tmp_329670);
						L7: do {
							var k_opt_330233 = null;
							var v_opt_330234 = null;
							var l_336011 = len_311180(all_sectors_301814[0]);
							if ((0 < all_sectors_301814[0].counter)) {
							var h_336012 = all_sectors_301814[0].first;
							L8: do {
									L9: while (true) {
									if (!(0 <= h_336012)) break L9;
										var nxt_336014 = all_sectors_301814[0].data[chckIndx(h_336012, 0, all_sectors_301814[0].data.length+0-1)-0].Field1;
										if (is_filled_228418(all_sectors_301814[0].data[chckIndx(h_336012, 0, all_sectors_301814[0].data.length+0-1)-0].Field0)) {
										k_opt_330233 = all_sectors_301814[0].data[chckIndx(h_336012, 0, all_sectors_301814[0].data.length+0-1)-0].Field2;
										v_opt_330234 = all_sectors_301814[0].data[chckIndx(h_336012, 0, all_sectors_301814[0].data.length+0-1)-0].Field3;
										L10: do {
											if (eqStrings(k_opt_330233, id_302802(v_330056))) {
											break L10;
											}
											
											var tmp_329671 = tree_260246(110, []);
											valueHEX3D_257839(tmp_329671, toJSStr(k_opt_330233));
											add_258800(tmp_329671, text_260364(k_opt_330233));
											add_258800(tmp_329669, tmp_329671);
										} while(false);
										if (!((len_311180(all_sectors_301814[0]) == l_336011))) {
										failed_assert_impl_58851(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
										}
										
										}
										
										h_336012 = nxt_336014;
									}
							} while(false);
							}
							
						} while(false);
						add_258800(tmp_329668, tmp_329669);
						var tmp_329672 = tree_260246(106, []);
						tmp_329672.id = toJSStr(id4move_330057);
						add_258800(tmp_329672, text_260364(makeNimstrLit("\xD0\x9E\xD0\xBA !")));
						add_event_handler_279528(tmp_329672, 0, HEX3Aanonymous_330246, kxi_269324[0]);
						add_258800(tmp_329668, tmp_329672);
						add_258800(tmp_329660, tmp_329668);
						add_258800(tmp_329657, tmp_329660);
						if (!((len_311180(all_sectors_301814[0]) == l_336016))) {
						failed_assert_impl_58851(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
						}
						
						}
						
						h_336017 = nxt_336019;
					}
			} while(false);
			}
			
		} while(false);
		L11: do {
			var k_334414 = null;
			var v_334415 = 0;
			var l_336029 = len_312198(last_postfix_302214[0]);
			L12: do {
				var h_336031 = 0;
				var colontmp__336032 = 0;
				colontmp__336032 = (last_postfix_302214[0].data != null ? (last_postfix_302214[0].data.length-1) : -1);
				var res_336033 = 0;
				L13: do {
						L14: while (true) {
						if (!(res_336033 <= colontmp__336032)) break L14;
							h_336031 = res_336033;
							if (is_filled_228418(last_postfix_302214[0].data[chckIndx(h_336031, 0, last_postfix_302214[0].data.length+0-1)-0].Field0)) {
							k_334414 = last_postfix_302214[0].data[chckIndx(h_336031, 0, last_postfix_302214[0].data.length+0-1)-0].Field1;
							v_334415 = last_postfix_302214[0].data[chckIndx(h_336031, 0, last_postfix_302214[0].data.length+0-1)-0].Field2;
							var tmp_329673 = tree_260246(43, []);
							add_258800(tmp_329673, text_260364((k_334414 || []).concat(makeNimstrLit(" : ") || [],cstrToNimstr((v_334415)+"") || [])));
							add_258800(tmp_329657, tmp_329673);
							if (!((len_312198(last_postfix_302214[0]) == l_336029))) {
							failed_assert_impl_58851(makeNimstrLit("tables.nim(669, 13) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
							}
							
							}
							
							res_336033 = addInt(res_336033, 1);
						}
				} while(false);
			} while(false);
		} while(false);
		L15: do {
			var k_335414 = null;
			var v_335415 = null;
			var l_336042 = len_334553(all_streets_301014[0]);
			if ((0 < all_streets_301014[0].counter)) {
			var h_336043 = all_streets_301014[0].first;
			L16: do {
					L17: while (true) {
					if (!(0 <= h_336043)) break L17;
						var nxt_336045 = all_streets_301014[0].data[chckIndx(h_336043, 0, all_streets_301014[0].data.length+0-1)-0].Field1;
						if (is_filled_228418(all_streets_301014[0].data[chckIndx(h_336043, 0, all_streets_301014[0].data.length+0-1)-0].Field0)) {
						k_335414 = all_streets_301014[0].data[chckIndx(h_336043, 0, all_streets_301014[0].data.length+0-1)-0].Field2;
						v_335415 = all_streets_301014[0].data[chckIndx(h_336043, 0, all_streets_301014[0].data.length+0-1)-0].Field3;
						L18: do {
							if (!((v_335415.sector == null))) {
							break L18;
							}
							
							var coord_335424 = v_335415.links[chckIndx(0, 0, v_335415.links.length+0-1)-0].geometry[chckIndx(0, 0, v_335415.links[chckIndx(0, 0, v_335415.links.length+0-1)-0].geometry.length+0-1)-0];
							var tmp_329674 = tree_260246(43, []);
							tmp_329674.class = "street";
							var tmp_329675 = tree_260246(70, []);
							set_attr_258568(tmp_329675, "data-lat", toJSStr(cstrToNimstr((coord_335424.lat)+"")));
							set_attr_258568(tmp_329675, "data-lng", toJSStr(cstrToNimstr((coord_335424.lng)+"")));
							add_event_handler_279528(tmp_329675, 0, clck_on_str_329416, kxi_269324[0]);
							add_258800(tmp_329675, text_260364(k_335414));
							add_258800(tmp_329674, tmp_329675);
							add_258800(tmp_329657, tmp_329674);
						} while(false);
						if (!((len_334553(all_streets_301014[0]) == l_336042))) {
						failed_assert_impl_58851(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
						}
						
						}
						
						h_336043 = nxt_336045;
					}
			} while(false);
			}
			
		} while(false);
		add_258800(tmp_329651, tmp_329657);
		result_329415 = tmp_329651;

	return result_329415;

}
var Tmp2;
var Tmp3;
var Tmp4;
var Tmp5;
var loc_search_335522 = [cstrToNimstr((window.location.search))];
loc_search_335522[0] = nimCopy(null, nsuReplaceStr(loc_search_335522[0], makeNimstrLit("?"), []), NTI44040);
var arr_ls_335523 = nsuSplitString(loc_search_335522[0], makeNimstrLit("&"), -1);
var app_id_335524 = nimCopy(null, (Tmp2 = nsuSplitString(arr_ls_335523[0], makeNimstrLit("="), -1), Tmp2)[1], NTI44040);
var app_code_335525 = nimCopy(null, (Tmp3 = nsuSplitString(arr_ls_335523[1], makeNimstrLit("="), -1), Tmp3)[1], NTI44040);
var opts_335527 = {app_id: toJSStr(app_id_335524), app_code: toJSStr(app_code_335525), useHTTPS: true, m_type: NTI284030, useCIT: false};
var pixel_ratio_335528 = window.devicePixelRatio;
var hidpi_335529 = (1.0000000000000000e+000 < pixel_ratio_335528);
if (hidpi_335529) {
Tmp4 = 512;
}
else {
Tmp4 = 256;
}

var layer_opts_335532 = [{tileSize: Tmp4, pois: true, m_type: NTI288081, ppi: 0, lg: null, lg2: null, style: null, crossOrigin: null}];
if (hidpi_335529) {
layer_opts_335532[0].ppi = 320;
}

var platform_335534 = function(o){return new H.service.Platform(o)}(opts_335527);
var def_layers_335535 = platform_335534.createDefaultLayers(layer_opts_335532[0]);
if (hidpi_335529) {
Tmp5 = 2;
}
else {
Tmp5 = 1;
}

var map_opts_335538 = [{pixelRatio: Tmp5, noWrap: true, m_type: NTI293035}];
map = function(element, baseLayer, opt_options){return new H.Map(element, baseLayer, opt_options)}(document.getElementById("map"), def_layers_335535.normal.map, map_opts_335538[0]);
var map_evts_335545 = function(map){return new H.mapevents.MapEvents(map)}(map);
var behavior = function(mapE){return new H.mapevents.Behavior(mapE)}(map_evts_335545);
var ui_def_335547 = [function(map, mapTypes){return H.ui.UI.createDefault(map, mapTypes);}(map, def_layers_335535)];
set_renderer_279383(create_dom_329413, "main-control-container", null);
map.setZoom(9, true);
map.setCenter({lat: 5.0151851800000003e+001, lng: 8.9302924000000008e+000, m_type: NTI243036}, false);
var main_group_335549 = [function(){return new H.map.Group()}()];
var main_sector_group_335550 = [function(){return new H.map.Group()}()];
map.addObject(main_group_335549[0]);
map.addObject(main_sector_group_335550[0]);
var mrk_335562 = function(position){return new H.map.Marker(position)}({lat: 5.2000000000000000e+001, lng: 8.0000000000000000e+000, m_type: NTI243036});
var p_335564 = {lat: 3.4000000000000000e+001, lng: 1.2300000000000000e+002, m_type: NTI243036};
var scr_point_335565 = function(x,y){return new H.math.Point(x, y)}(1, 1);
var check_335568 = isPointInPolygon(scr_point_335565, [function(x,y){return new H.math.Point(x, y)}(0, 0), function(x,y){return new H.math.Point(x, y)}(0, 3), function(x,y){return new H.math.Point(x, y)}(3, 3)]);
rawEcho(makeNimstrLit("check: "), nimBoolToStr(check_335568));
var cle_335572 = platform_335534.getCustomLocationService();
var geocoder_335573 = platform_335534.getGeocodingService();
var pde_service_335574 = [platform_335534.getPlatformDataService()];

function len_355336(t_355341) {
	var result_355342 = 0;

		result_355342 = t_355341.counter;

	return result_355342;

}

function len_380346(t_380351) {
	var result_380352 = 0;

		result_380352 = t_380351.counter;

	return result_380352;

}

function integer_out_of_range_error_100814() {
		var e_100818 = null;
		e_100818 = {m_type: NTI47852, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_100818.message = nimCopy(null, makeNimstrLit("Parsed integer outside of valid range"), NTI44040);
		e_100818.parent = null;
		raiseException(e_100818, "ValueError");

	
}

function raw_parse_int_101201(s_101203, b_101205, b_101205_Idx, start_101206) {
			var Tmp1;
					var Tmp4;
			var Tmp7;

	var result_101208 = 0;

		var sign_101210 = -1;
		var i_101211 = start_101206;
		if ((i_101211 < (s_101203 != null ? s_101203.length : 0))) {
		if ((s_101203[chckIndx(i_101211, 0, s_101203.length+0-1)-0] == 43)) {
		i_101211 += 1;
		}
		else {
		if ((s_101203[chckIndx(i_101211, 0, s_101203.length+0-1)-0] == 45)) {
		i_101211 += 1;
		sign_101210 = 1;
		}
		}
		}
		
			if (!(i_101211 < (s_101203 != null ? s_101203.length : 0))) Tmp1 = false; else {				Tmp1 = (ConstSet2[s_101203[chckIndx(i_101211, 0, s_101203.length+0-1)-0]] != undefined);			}		if (Tmp1) {
		b_101205[b_101205_Idx] = 0;
		L2: do {
				L3: while (true) {
					if (!(i_101211 < (s_101203 != null ? s_101203.length : 0))) Tmp4 = false; else {						Tmp4 = (ConstSet3[s_101203[chckIndx(i_101211, 0, s_101203.length+0-1)-0]] != undefined);					}				if (!Tmp4) break L3;
					var c_101246 = (s_101203[chckIndx(i_101211, 0, s_101203.length+0-1)-0] - 48);
					if ((Math.trunc((-9223372036854775808 + c_101246) / 10) <= b_101205[b_101205_Idx])) {
					b_101205[b_101205_Idx] = ((b_101205[b_101205_Idx] * 10) - c_101246);
					}
					else {
					integer_out_of_range_error_100814();
					}
					
					i_101211 += 1;
					L5: do {
							L6: while (true) {
							if (!((i_101211 < (s_101203 != null ? s_101203.length : 0)) && (s_101203[chckIndx(i_101211, 0, s_101203.length+0-1)-0] == 95))) break L6;
								i_101211 += 1;
							}
					} while(false);
				}
		} while(false);
			if (!(sign_101210 == -1)) Tmp7 = false; else {				Tmp7 = (b_101205[b_101205_Idx] == -9223372036854775808);			}		if (Tmp7) {
		integer_out_of_range_error_100814();
		}
		else {
			b_101205[b_101205_Idx] = (b_101205[b_101205_Idx] * sign_101210);
			result_101208 = (i_101211 - start_101206);
		}
		
		}
		

	return result_101208;

}

function npuParseBiggestInt(s_101403, number_101405, number_101405_Idx, start_101406) {
	var result_101408 = 0;

		var res_101409 = [0];
		result_101408 = raw_parse_int_101201(s_101403, res_101409, 0, start_101406);
		if (!((result_101408 == 0))) {
		number_101405[number_101405_Idx] = res_101409[0];
		}
		

	return result_101408;

}

function npuParseInt(s_101426, number_101428, number_101428_Idx, start_101429) {
			var Tmp1;

	var result_101431 = 0;

		var res_101432 = [0];
		result_101431 = npuParseBiggestInt(s_101426, res_101432, 0, start_101429);
			if ((res_101432[0] < -2147483648)) Tmp1 = true; else {				Tmp1 = (2147483647 < res_101432[0]);			}		if (Tmp1) {
		integer_out_of_range_error_100814();
		}
		
		if (!((result_101431 == 0))) {
		number_101428[number_101428_Idx] = chckRange(res_101432[0], -2147483648, 2147483647);
		}
		

	return result_101431;

}

function nsuParseInt(s_197642) {
			var Tmp1;

	var result_197643 = [0];

		var l_197645 = npuParseInt(s_197642, result_197643, 0, 0);
			if (!((l_197645 == (s_197642 != null ? s_197642.length : 0)))) Tmp1 = true; else {				Tmp1 = (l_197645 == 0);			}		if (Tmp1) {
		var e_197648 = null;
		e_197648 = {m_type: NTI47852, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_197648.message = nimCopy(null, (makeNimstrLit("invalid integer: ") || []).concat(s_197642 || []), NTI44040);
		e_197648.parent = null;
		raiseException(e_197648, "ValueError");
		}
		

	return result_197643[0];

}

function hash_225001(x_225003) {
	var result_225004 = 0;

		result_225004 = x_225003;

	return result_225004;

}

function raw_get_345133(t_345137, key_345138, hc_345139, hc_345139_Idx) {
						var Tmp3;

	var result_345140 = 0;

	BeforeRet: do {
		hc_345139[hc_345139_Idx] = hash_225001(key_345138);
		if ((hc_345139[hc_345139_Idx] == 0)) {
		hc_345139[hc_345139_Idx] = 314159265;
		}
		
		if (((t_345137.data != null ? t_345137.data.length : 0) == 0)) {
		result_345140 = -1;
		break BeforeRet;
		}
		
		var h_345280 = (hc_345139[hc_345139_Idx] & (t_345137.data != null ? (t_345137.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_228418(t_345137.data[chckIndx(h_345280, 0, t_345137.data.length+0-1)-0].Field0)) break L2;
						if (!(t_345137.data[chckIndx(h_345280, 0, t_345137.data.length+0-1)-0].Field0 == hc_345139[hc_345139_Idx])) Tmp3 = false; else {							Tmp3 = (t_345137.data[chckIndx(h_345280, 0, t_345137.data.length+0-1)-0].Field1 == key_345138);						}					if (Tmp3) {
					result_345140 = h_345280;
					break BeforeRet;
					}
					
					h_345280 = next_try_228435(h_345280, (t_345137.data != null ? (t_345137.data.length-1) : -1));
				}
		} while(false);
		result_345140 = subInt(-1, h_345280);
	} while (false);

	return result_345140;

}

function raw_insert_358922(t_358928, data_358931, data_358931_Idx, key_358932, val_358933, hc_358934, h_358935) {
		data_358931[data_358931_Idx][chckIndx(h_358935, 0, data_358931[data_358931_Idx].length+0-1)-0].Field1 = key_358932;
		data_358931[data_358931_Idx][chckIndx(h_358935, 0, data_358931[data_358931_Idx].length+0-1)-0].Field2 = val_358933;
		data_358931[data_358931_Idx][chckIndx(h_358935, 0, data_358931[data_358931_Idx].length+0-1)-0].Field0 = hc_358934;

	
}

function enlarge_357948(t_357954) {
		var n_357962 = null;
		n_357962 = new Array(chckRange(mulInt((t_357954.data != null ? t_357954.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_357954.data != null ? t_357954.data.length : 0), 2), 0, 2147483647);++i) {n_357962[i]={Field0: 0, Field1: 0, Field2: null};}		var Tmp1 = t_357954.data; t_357954.data = n_357962; n_357962 = Tmp1;		L2: do {
			var i_358121 = 0;
			var colontmp__393596 = 0;
			colontmp__393596 = (n_357962 != null ? (n_357962.length-1) : -1);
			var res_393597 = 0;
			L3: do {
					L4: while (true) {
					if (!(res_393597 <= colontmp__393596)) break L4;
						i_358121 = res_393597;
						var eh_358277 = n_357962[chckIndx(i_358121, 0, n_357962.length+0-1)-0].Field0;
						if (is_filled_228418(eh_358277)) {
						var j_358284 = (eh_358277 & (t_357954.data != null ? (t_357954.data.length-1) : -1));
						L5: do {
								L6: while (true) {
								if (!is_filled_228418(t_357954.data[chckIndx(j_358284, 0, t_357954.data.length+0-1)-0].Field0)) break L6;
									j_358284 = next_try_228435(j_358284, (t_357954.data != null ? (t_357954.data.length-1) : -1));
								}
						} while(false);
						raw_insert_358922(t_357954, t_357954, "data", n_357962[chckIndx(i_358121, 0, n_357962.length+0-1)-0].Field1, n_357962[chckIndx(i_358121, 0, n_357962.length+0-1)-0].Field2, eh_358277, j_358284);
						}
						
						res_393597 = addInt(res_393597, 1);
					}
			} while(false);
		} while(false);

	
}

function raw_get_known_hc_359443(t_359447, key_359448, hc_359449) {
	var result_359450 = 0;

	BeforeRet: do {
		if (((t_359447.data != null ? t_359447.data.length : 0) == 0)) {
		result_359450 = -1;
		break BeforeRet;
		}
		
		var h_359589 = (hc_359449 & (t_359447.data != null ? (t_359447.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_228418(t_359447.data[chckIndx(h_359589, 0, t_359447.data.length+0-1)-0].Field0)) break L2;
					if (((t_359447.data[chckIndx(h_359589, 0, t_359447.data.length+0-1)-0].Field0 == hc_359449) && (t_359447.data[chckIndx(h_359589, 0, t_359447.data.length+0-1)-0].Field1 == key_359448))) {
					result_359450 = h_359589;
					break BeforeRet;
					}
					
					h_359589 = next_try_228435(h_359589, (t_359447.data != null ? (t_359447.data.length-1) : -1));
				}
		} while(false);
		result_359450 = subInt(-1, h_359589);
	} while (false);

	return result_359450;

}

function has_key_or_put_356694(t_356700, key_356701, val_356702) {
	var result_356703 = false;

		if (((t_356700.data != null ? t_356700.data.length : 0) == 0)) {
		if (!(is_power_of_two_108062(64))) {
		failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_356700.counter = 0;
		t_356700.data = new Array(64); for (var i=0;i<64;++i) {t_356700.data[i]={Field0: 0, Field1: 0, Field2: null};}		}
		
		var hc_357201 = [0];
		var index_357210 = raw_get_345133(t_356700, key_356701, hc_357201, 0);
		if ((index_357210 < 0)) {
		result_356703 = false;
		if (((t_356700.data != null ? t_356700.data.length : 0) == 0)) {
		if (!(is_power_of_two_108062(64))) {
		failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_356700.counter = 0;
		t_356700.data = new Array(64); for (var i=0;i<64;++i) {t_356700.data[i]={Field0: 0, Field1: 0, Field2: null};}		}
		
		if (must_rehash_228453((t_356700.data != null ? t_356700.data.length : 0), t_356700.counter)) {
		enlarge_357948(t_356700);
		index_357210 = raw_get_known_hc_359443(t_356700, key_356701, hc_357201[0]);
		}
		
		index_357210 = subInt(-1, index_357210);
		raw_insert_358922(t_356700, t_356700, "data", key_356701, val_356702, hc_357201[0], index_357210);
		t_356700.counter = addInt(t_356700.counter, 1);
		}
		else {
			result_356703 = true;
		}
		

	return result_356703;

}

function HEX5BHEX5D_345932(t_345938, key_345939) {
	var result_345941 = null;
	var result_345941_Idx = 0;

		var hc_345942 = [0];
		var index_345943 = raw_get_345133(t_345938, key_345939, hc_345942, 0);
		if ((0 <= index_345943)) {
		result_345941 = t_345938.data[chckIndx(index_345943, 0, t_345938.data.length+0-1)-0]; result_345941_Idx = "Field2";
		}
		else {
			var e_346202 = null;
			e_346202 = {m_type: NTI47854, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			e_346202.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(cstrToNimstr((key_345939)+"") || []), NTI44040);
			e_346202.parent = null;
			raiseException(e_346202, "KeyError");
		}
		

	return [result_345941, result_345941_Idx];

}

function nsuStrip(s_204677, leading_204678, trailing_204679, chars_204681) {
					var Tmp5;

	var result_204682 = null;

		var first_204684 = 0;
		var last_204685 = subInt((s_204677 != null ? s_204677.length : 0), 1);
		if (leading_204678) {
		L1: do {
				L2: while (true) {
				if (!((first_204684 <= last_204685) && (chars_204681[s_204677[chckIndx(first_204684, 0, s_204677.length+0-1)-0]] != undefined))) break L2;
					first_204684 = addInt(first_204684, 1);
				}
		} while(false);
		}
		
		if (trailing_204679) {
		L3: do {
				L4: while (true) {
					if (!(0 <= last_204685)) Tmp5 = false; else {						Tmp5 = (chars_204681[s_204677[chckIndx(last_204685, 0, s_204677.length+0-1)-0]] != undefined);					}				if (!Tmp5) break L4;
					last_204685 = subInt(last_204685, 1);
				}
		} while(false);
		}
		
		result_204682 = nimCopy(null, substr_72822(s_204677, first_204684, last_204685), NTI44040);

	return result_204682;

}

function new_seq_361581(len_361584) {
	var result_361586 = null;

		result_361586 = new Array(len_361584); for (var i=0;i<len_361584;++i) {result_361586[i]=null;}
	return result_361586;

}

function ten_to_the_power_of_67910(b_67912) {
	var result_67913 = 0.0;

		var b_67914 = b_67912;
		var a_67915 = 1.0000000000000000e+001;
		result_67913 = 1.0000000000000000e+000;
		L1: do {
				L2: while (true) {
				if (!true) break L2;
					if (((b_67914 & 1) == 1)) {
					result_67913 = (result_67913 * a_67915);
					}
					
					b_67914 = (b_67914 >> 1);
					if ((b_67914 == 0)) {
					break L1;
					}
					
					a_67915 = (a_67915 * a_67915);
				}
		} while(false);

	return result_67913;

}

function npuParseFloat(s_102023, number_102025, number_102025_Idx, start_102026) {
	var result_102028 = 0;

		var bf_102029 = [0.0];
		result_102028 = nimParseBiggestFloat(s_102023, bf_102029, 0, start_102026);
		if (!((result_102028 == 0))) {
		number_102025[number_102025_Idx] = bf_102029[0];
		}
		

	return result_102028;

}

function nsuParseFloat(s_198424) {
			var Tmp1;

	var result_198425 = [0.0];

		var l_198427 = npuParseFloat(s_198424, result_198425, 0, 0);
			if (!((l_198427 == (s_198424 != null ? s_198424.length : 0)))) Tmp1 = true; else {				Tmp1 = (l_198427 == 0);			}		if (Tmp1) {
		var e_198430 = null;
		e_198430 = {m_type: NTI47852, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_198430.message = nimCopy(null, (makeNimstrLit("invalid float: ") || []).concat(s_198424 || []), NTI44040);
		e_198430.parent = null;
		raiseException(e_198430, "ValueError");
		}
		

	return result_198425[0];

}

function map_362821(s_362826, op_362829) {
	var result_362831 = null;

		result_362831 = new Array(chckRange((s_362826 != null ? s_362826.length : 0), 0, 2147483647)); for (var i=0;i<chckRange((s_362826 != null ? s_362826.length : 0), 0, 2147483647);++i) {result_362831[i]=0;}		L1: do {
			var i_362854 = 0;
			var colontmp__393613 = 0;
			colontmp__393613 = (s_362826 != null ? s_362826.length : 0);
			var i_393614 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_393614 < colontmp__393613)) break L3;
						i_362854 = i_393614;
						result_362831[chckIndx(i_362854, 0, result_362831.length+0-1)-0] = op_362829(s_362826[chckIndx(i_362854, 0, s_362826.length+0-1)-0]);
						i_393614 = addInt(i_393614, 1);
					}
			} while(false);
		} while(false);

	return result_362831;

}

function new_seq_362883(len_362886) {
	var result_362888 = null;

		result_362888 = new Array(len_362886); for (var i=0;i<len_362886;++i) {result_362888[i]=0;}
	return result_362888;

}

function concat_363110(seqs_363115) {
	var result_363117 = null;

		var l_363119 = 0;
		L1: do {
			var seqitm_363150 = null;
			var i_393619 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_393619 < (seqs_363115 != null ? seqs_363115.length : 0))) break L3;
						seqitm_363150 = seqs_363115[chckIndx(i_393619, 0, seqs_363115.length+0-1)-0];
						l_363119 = addInt(l_363119, (seqitm_363150 != null ? seqitm_363150.length : 0));
						i_393619 = addInt(i_393619, 1);
					}
			} while(false);
		} while(false);
		result_363117 = new Array(chckRange(l_363119, 0, 2147483647)); for (var i=0;i<chckRange(l_363119, 0, 2147483647);++i) {result_363117[i]=0;}		var i_363170 = 0;
		L4: do {
			var s_363176 = null;
			var i_393627 = 0;
			L5: do {
					L6: while (true) {
					if (!(i_393627 < (seqs_363115 != null ? seqs_363115.length : 0))) break L6;
						s_363176 = seqs_363115[chckIndx(i_393627, 0, seqs_363115.length+0-1)-0];
						L7: do {
							var itm_363183 = 0;
							var i_393624 = 0;
							var l_393625 = (s_363176 != null ? s_363176.length : 0);
							L8: do {
									L9: while (true) {
									if (!(i_393624 < l_393625)) break L9;
										itm_363183 = s_363176[chckIndx(i_393624, 0, s_363176.length+0-1)-0];
										result_363117[chckIndx(i_363170, 0, result_363117.length+0-1)-0] = itm_363183;
										i_363170 = addInt(i_363170, 1);
										i_393624 = addInt(i_393624, 1);
										if (!(((s_363176 != null ? s_363176.length : 0) == l_393625))) {
										failed_assert_impl_58851(makeNimstrLit("iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						i_393627 = addInt(i_393627, 1);
					}
			} while(false);
		} while(false);

	return result_363117;

}

function raw_get_340833(t_340838, key_340839, hc_340840, hc_340840_Idx) {
						var Tmp3;

	var result_340841 = 0;

	BeforeRet: do {
		hc_340840[hc_340840_Idx] = hash_225180(key_340839);
		if ((hc_340840[hc_340840_Idx] == 0)) {
		hc_340840[hc_340840_Idx] = 314159265;
		}
		
		if (((t_340838.data != null ? t_340838.data.length : 0) == 0)) {
		result_340841 = -1;
		break BeforeRet;
		}
		
		var h_340983 = (hc_340840[hc_340840_Idx] & (t_340838.data != null ? (t_340838.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_228418(t_340838.data[chckIndx(h_340983, 0, t_340838.data.length+0-1)-0].Field0)) break L2;
						if (!(t_340838.data[chckIndx(h_340983, 0, t_340838.data.length+0-1)-0].Field0 == hc_340840[hc_340840_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_340838.data[chckIndx(h_340983, 0, t_340838.data.length+0-1)-0].Field2, key_340839);						}					if (Tmp3) {
					result_340841 = h_340983;
					break BeforeRet;
					}
					
					h_340983 = next_try_228435(h_340983, (t_340838.data != null ? (t_340838.data.length-1) : -1));
				}
		} while(false);
		result_340841 = subInt(-1, h_340983);
	} while (false);

	return result_340841;

}

function raw_insert_366107(t_366113, data_366116, data_366116_Idx, key_366117, val_366118, hc_366119, h_366120) {
		data_366116[data_366116_Idx][chckIndx(h_366120, 0, data_366116[data_366116_Idx].length+0-1)-0].Field2 = nimCopy(null, key_366117, NTI44040);
		data_366116[data_366116_Idx][chckIndx(h_366120, 0, data_366116[data_366116_Idx].length+0-1)-0].Field3 = val_366118;
		data_366116[data_366116_Idx][chckIndx(h_366120, 0, data_366116[data_366116_Idx].length+0-1)-0].Field0 = hc_366119;
		data_366116[data_366116_Idx][chckIndx(h_366120, 0, data_366116[data_366116_Idx].length+0-1)-0].Field1 = -1;
		if ((t_366113.first < 0)) {
		t_366113.first = h_366120;
		}
		
		if ((0 <= t_366113.last)) {
		data_366116[data_366116_Idx][chckIndx(t_366113.last, 0, data_366116[data_366116_Idx].length+0-1)-0].Field1 = h_366120;
		}
		
		t_366113.last = h_366120;

	
}

function enlarge_364967(t_364973) {
		var n_364981 = null;
		n_364981 = new Array(chckRange(mulInt((t_364973.data != null ? t_364973.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_364973.data != null ? t_364973.data.length : 0), 2), 0, 2147483647);++i) {n_364981[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		var h_365120 = t_364973.first;
		t_364973.first = -1;
		t_364973.last = -1;
		var Tmp1 = t_364973.data; t_364973.data = n_364981; n_364981 = Tmp1;		L2: do {
				L3: while (true) {
				if (!(0 <= h_365120)) break L3;
					var nxt_365286 = n_364981[chckIndx(h_365120, 0, n_364981.length+0-1)-0].Field1;
					var eh_365442 = n_364981[chckIndx(h_365120, 0, n_364981.length+0-1)-0].Field0;
					if (is_filled_228418(eh_365442)) {
					var j_365449 = (eh_365442 & (t_364973.data != null ? (t_364973.data.length-1) : -1));
					L4: do {
							L5: while (true) {
							if (!is_filled_228418(t_364973.data[chckIndx(j_365449, 0, t_364973.data.length+0-1)-0].Field0)) break L5;
								j_365449 = next_try_228435(j_365449, (t_364973.data != null ? (t_364973.data.length-1) : -1));
							}
					} while(false);
					raw_insert_366107(t_364973, t_364973, "data", n_364981[chckIndx(h_365120, 0, n_364981.length+0-1)-0].Field2, n_364981[chckIndx(h_365120, 0, n_364981.length+0-1)-0].Field3, n_364981[chckIndx(h_365120, 0, n_364981.length+0-1)-0].Field0, j_365449);
					}
					
					h_365120 = nxt_365286;
				}
		} while(false);

	
}

function raw_get_known_hc_366959(t_366964, key_366965, hc_366966) {
	var result_366967 = 0;

	BeforeRet: do {
		if (((t_366964.data != null ? t_366964.data.length : 0) == 0)) {
		result_366967 = -1;
		break BeforeRet;
		}
		
		var h_367106 = (hc_366966 & (t_366964.data != null ? (t_366964.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_228418(t_366964.data[chckIndx(h_367106, 0, t_366964.data.length+0-1)-0].Field0)) break L2;
					if (((t_366964.data[chckIndx(h_367106, 0, t_366964.data.length+0-1)-0].Field0 == hc_366966) && eqStrings(t_366964.data[chckIndx(h_367106, 0, t_366964.data.length+0-1)-0].Field2, key_366965))) {
					result_366967 = h_367106;
					break BeforeRet;
					}
					
					h_367106 = next_try_228435(h_367106, (t_366964.data != null ? (t_366964.data.length-1) : -1));
				}
		} while(false);
		result_366967 = subInt(-1, h_367106);
	} while (false);

	return result_366967;

}

function has_key_or_put_363643(t_363649, key_363650, val_363651) {
	var result_363652 = false;

		if (((t_363649.data != null ? t_363649.data.length : 0) == 0)) {
		if (!(is_power_of_two_108062(64))) {
		failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_363649.counter = 0;
		t_363649.data = new Array(64); for (var i=0;i<64;++i) {t_363649.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		t_363649.first = -1;
		t_363649.last = -1;
		}
		
		var hc_364201 = [0];
		var index_364230 = raw_get_340833(t_363649, key_363650, hc_364201, 0);
		if ((index_364230 < 0)) {
		result_363652 = false;
		if (((t_363649.data != null ? t_363649.data.length : 0) == 0)) {
		if (!(is_power_of_two_108062(64))) {
		failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_363649.counter = 0;
		t_363649.data = new Array(64); for (var i=0;i<64;++i) {t_363649.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		t_363649.first = -1;
		t_363649.last = -1;
		}
		
		if (must_rehash_228453((t_363649.data != null ? t_363649.data.length : 0), t_363649.counter)) {
		enlarge_364967(t_363649);
		index_364230 = raw_get_known_hc_366959(t_363649, key_363650, hc_364201[0]);
		}
		
		index_364230 = subInt(-1, index_364230);
		raw_insert_366107(t_363649, t_363649, "data", key_363650, val_363651, hc_364201[0], index_364230);
		t_363649.counter = addInt(t_363649.counter, 1);
		}
		else {
			result_363652 = true;
		}
		

	return result_363652;

}

function new_seq_363616(len_363619) {
	var result_363621 = null;

		result_363621 = new Array(len_363619); for (var i=0;i<len_363619;++i) {result_363621[i]=null;}
	return result_363621;

}

function raw_get_368602(t_368606, key_368607, hc_368608, hc_368608_Idx) {
						var Tmp3;

	var result_368609 = 0;

	BeforeRet: do {
		hc_368608[hc_368608_Idx] = hash_225180(key_368607);
		if ((hc_368608[hc_368608_Idx] == 0)) {
		hc_368608[hc_368608_Idx] = 314159265;
		}
		
		if (((t_368606.data != null ? t_368606.data.length : 0) == 0)) {
		result_368609 = -1;
		break BeforeRet;
		}
		
		var h_368751 = (hc_368608[hc_368608_Idx] & (t_368606.data != null ? (t_368606.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_228418(t_368606.data[chckIndx(h_368751, 0, t_368606.data.length+0-1)-0].Field0)) break L2;
						if (!(t_368606.data[chckIndx(h_368751, 0, t_368606.data.length+0-1)-0].Field0 == hc_368608[hc_368608_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_368606.data[chckIndx(h_368751, 0, t_368606.data.length+0-1)-0].Field1, key_368607);						}					if (Tmp3) {
					result_368609 = h_368751;
					break BeforeRet;
					}
					
					h_368751 = next_try_228435(h_368751, (t_368606.data != null ? (t_368606.data.length-1) : -1));
				}
		} while(false);
		result_368609 = subInt(-1, h_368751);
	} while (false);

	return result_368609;

}

function raw_insert_370922(t_370928, data_370931, data_370931_Idx, key_370932, val_370933, hc_370934, h_370935) {
		data_370931[data_370931_Idx][chckIndx(h_370935, 0, data_370931[data_370931_Idx].length+0-1)-0].Field1 = nimCopy(null, key_370932, NTI44040);
		data_370931[data_370931_Idx][chckIndx(h_370935, 0, data_370931[data_370931_Idx].length+0-1)-0].Field2 = val_370933;
		data_370931[data_370931_Idx][chckIndx(h_370935, 0, data_370931[data_370931_Idx].length+0-1)-0].Field0 = hc_370934;

	
}

function enlarge_369948(t_369954) {
		var n_369962 = null;
		n_369962 = new Array(chckRange(mulInt((t_369954.data != null ? t_369954.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_369954.data != null ? t_369954.data.length : 0), 2), 0, 2147483647);++i) {n_369962[i]={Field0: 0, Field1: null, Field2: null};}		var Tmp1 = t_369954.data; t_369954.data = n_369962; n_369962 = Tmp1;		L2: do {
			var i_370121 = 0;
			var colontmp__393636 = 0;
			colontmp__393636 = (n_369962 != null ? (n_369962.length-1) : -1);
			var res_393637 = 0;
			L3: do {
					L4: while (true) {
					if (!(res_393637 <= colontmp__393636)) break L4;
						i_370121 = res_393637;
						var eh_370277 = n_369962[chckIndx(i_370121, 0, n_369962.length+0-1)-0].Field0;
						if (is_filled_228418(eh_370277)) {
						var j_370284 = (eh_370277 & (t_369954.data != null ? (t_369954.data.length-1) : -1));
						L5: do {
								L6: while (true) {
								if (!is_filled_228418(t_369954.data[chckIndx(j_370284, 0, t_369954.data.length+0-1)-0].Field0)) break L6;
									j_370284 = next_try_228435(j_370284, (t_369954.data != null ? (t_369954.data.length-1) : -1));
								}
						} while(false);
						raw_insert_370922(t_369954, t_369954, "data", n_369962[chckIndx(i_370121, 0, n_369962.length+0-1)-0].Field1, n_369962[chckIndx(i_370121, 0, n_369962.length+0-1)-0].Field2, eh_370277, j_370284);
						}
						
						res_393637 = addInt(res_393637, 1);
					}
			} while(false);
		} while(false);

	
}

function raw_get_known_hc_371443(t_371447, key_371448, hc_371449) {
	var result_371450 = 0;

	BeforeRet: do {
		if (((t_371447.data != null ? t_371447.data.length : 0) == 0)) {
		result_371450 = -1;
		break BeforeRet;
		}
		
		var h_371589 = (hc_371449 & (t_371447.data != null ? (t_371447.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_228418(t_371447.data[chckIndx(h_371589, 0, t_371447.data.length+0-1)-0].Field0)) break L2;
					if (((t_371447.data[chckIndx(h_371589, 0, t_371447.data.length+0-1)-0].Field0 == hc_371449) && eqStrings(t_371447.data[chckIndx(h_371589, 0, t_371447.data.length+0-1)-0].Field1, key_371448))) {
					result_371450 = h_371589;
					break BeforeRet;
					}
					
					h_371589 = next_try_228435(h_371589, (t_371447.data != null ? (t_371447.data.length-1) : -1));
				}
		} while(false);
		result_371450 = subInt(-1, h_371589);
	} while (false);

	return result_371450;

}

function has_key_or_put_368066(t_368072, key_368073, val_368074) {
	var result_368075 = false;

		if (((t_368072.data != null ? t_368072.data.length : 0) == 0)) {
		if (!(is_power_of_two_108062(64))) {
		failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_368072.counter = 0;
		t_368072.data = new Array(64); for (var i=0;i<64;++i) {t_368072.data[i]={Field0: 0, Field1: null, Field2: null};}		}
		
		var hc_368601 = [0];
		var index_369240 = raw_get_368602(t_368072, key_368073, hc_368601, 0);
		if ((index_369240 < 0)) {
		result_368075 = false;
		if (((t_368072.data != null ? t_368072.data.length : 0) == 0)) {
		if (!(is_power_of_two_108062(64))) {
		failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_368072.counter = 0;
		t_368072.data = new Array(64); for (var i=0;i<64;++i) {t_368072.data[i]={Field0: 0, Field1: null, Field2: null};}		}
		
		if (must_rehash_228453((t_368072.data != null ? t_368072.data.length : 0), t_368072.counter)) {
		enlarge_369948(t_368072);
		index_369240 = raw_get_known_hc_371443(t_368072, key_368073, hc_368601[0]);
		}
		
		index_369240 = subInt(-1, index_369240);
		raw_insert_370922(t_368072, t_368072, "data", key_368073, val_368074, hc_368601[0], index_369240);
		t_368072.counter = addInt(t_368072.counter, 1);
		}
		else {
			result_368075 = true;
		}
		

	return result_368075;

}

function HEX2A_97019(x_97021, order_97022) {
	var result_97023 = 0;

		var y_97028 = subInt(order_97022, 1);
		result_97023 = subInt((x_97021 ^ y_97028), y_97028);

	return result_97023;

}

function sort_372313(t_372319, cmp_372329, order_372330) {
											var Tmp9;
												var Tmp10;

	BeforeRet: do {
		var list_372331 = t_372319.first;
		var p_372332 = 0;
		var q_372333 = 0;
		var e_372334 = 0;
		var tail_372335 = 0;
		var oldhead_372336 = 0;
		var nmerges_372337 = 0;
		var psize_372338 = 0;
		var qsize_372339 = 0;
		var i_372340 = 0;
		if ((t_372319.counter == 0)) {
		break BeforeRet;
		}
		
		var insize_372342 = 1;
		L1: do {
				L2: while (true) {
				if (!true) break L2;
					p_372332 = list_372331;
					oldhead_372336 = list_372331;
					list_372331 = -1;
					tail_372335 = -1;
					nmerges_372337 = 0;
					L3: do {
							L4: while (true) {
							if (!(0 <= p_372332)) break L4;
								nmerges_372337 = addInt(nmerges_372337, 1);
								q_372333 = p_372332;
								psize_372338 = 0;
								i_372340 = 0;
								L5: do {
										L6: while (true) {
										if (!(i_372340 < insize_372342)) break L6;
											psize_372338 = addInt(psize_372338, 1);
											q_372333 = t_372319.data[chckIndx(q_372333, 0, t_372319.data.length+0-1)-0].Field1;
											if ((q_372333 < 0)) {
											break L5;
											}
											
											i_372340 = addInt(i_372340, 1);
										}
								} while(false);
								qsize_372339 = insize_372342;
								L7: do {
										L8: while (true) {
											if ((0 < psize_372338)) Tmp9 = true; else {												if (!(0 < qsize_372339)) Tmp10 = false; else {													Tmp10 = (0 <= q_372333);												}												Tmp9 = Tmp10;											}										if (!Tmp9) break L8;
											if ((psize_372338 == 0)) {
											e_372334 = q_372333;
											q_372333 = t_372319.data[chckIndx(q_372333, 0, t_372319.data.length+0-1)-0].Field1;
											qsize_372339 = subInt(qsize_372339, 1);
											}
											else {
											if (((qsize_372339 == 0) || (q_372333 < 0))) {
											e_372334 = p_372332;
											p_372332 = t_372319.data[chckIndx(p_372332, 0, t_372319.data.length+0-1)-0].Field1;
											psize_372338 = subInt(psize_372338, 1);
											}
											else {
											if ((HEX2A_97019(cmp_372329({Field0: nimCopy(null, t_372319.data[chckIndx(p_372332, 0, t_372319.data.length+0-1)-0].Field2, NTI44040), Field1: t_372319.data[chckIndx(p_372332, 0, t_372319.data.length+0-1)-0].Field3}, {Field0: nimCopy(null, t_372319.data[chckIndx(q_372333, 0, t_372319.data.length+0-1)-0].Field2, NTI44040), Field1: t_372319.data[chckIndx(q_372333, 0, t_372319.data.length+0-1)-0].Field3}), order_372330) <= 0)) {
											e_372334 = p_372332;
											p_372332 = t_372319.data[chckIndx(p_372332, 0, t_372319.data.length+0-1)-0].Field1;
											psize_372338 = subInt(psize_372338, 1);
											}
											else {
												e_372334 = q_372333;
												q_372333 = t_372319.data[chckIndx(q_372333, 0, t_372319.data.length+0-1)-0].Field1;
												qsize_372339 = subInt(qsize_372339, 1);
											}
											}}
											if ((0 <= tail_372335)) {
											t_372319.data[chckIndx(tail_372335, 0, t_372319.data.length+0-1)-0].Field1 = e_372334;
											}
											else {
												list_372331 = e_372334;
											}
											
											tail_372335 = e_372334;
										}
								} while(false);
								p_372332 = q_372333;
							}
					} while(false);
					t_372319.data[chckIndx(tail_372335, 0, t_372319.data.length+0-1)-0].Field1 = -1;
					if ((nmerges_372337 <= 1)) {
					break L1;
					}
					
					insize_372342 = mulInt(insize_372342, 2);
				}
		} while(false);
		t_372319.first = list_372331;
		t_372319.last = tail_372335;
	} while (false);

	
}

function sort_street_tbl_372244(x_372249, y_372251) {
		var Tmp1;
			var Tmp2;

	var result_372252 = 0;

		var k_x_372253 = nimCopy(null, x_372249["Field0"], NTI44040);
		var k_y_372254 = nimCopy(null, y_372251["Field0"], NTI44040);
			if ((cmpStrings(k_y_372254, k_x_372253) < 0)) Tmp2 = true; else {				Tmp2 = eqStrings(k_x_372253, k_y_372254);			}		if (Tmp2) {
		Tmp1 = 1;
		}
		else {
		Tmp1 = -1;
		}
		
		result_372252 = Tmp1;

	return result_372252;

}

function has_key_340805(t_340810, key_340811) {
	var result_340812 = false;

		var hc_340813 = [0];
		result_340812 = (0 <= raw_get_340833(t_340810, key_340811, hc_340813, 0));

	return result_340812;

}

function has_key_or_put_342353(t_342359, key_342360, val_342361) {
	var result_342362 = false;

		if (((t_342359.data != null ? t_342359.data.length : 0) == 0)) {
		if (!(is_power_of_two_108062(64))) {
		failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_342359.counter = 0;
		t_342359.data = new Array(64); for (var i=0;i<64;++i) {t_342359.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		t_342359.first = -1;
		t_342359.last = -1;
		}
		
		var hc_342801 = [0];
		var index_342830 = raw_get_313164(t_342359, key_342360, hc_342801, 0);
		if ((index_342830 < 0)) {
		result_342362 = false;
		if (((t_342359.data != null ? t_342359.data.length : 0) == 0)) {
		if (!(is_power_of_two_108062(64))) {
		failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_342359.counter = 0;
		t_342359.data = new Array(64); for (var i=0;i<64;++i) {t_342359.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		t_342359.first = -1;
		t_342359.last = -1;
		}
		
		if (must_rehash_228453((t_342359.data != null ? t_342359.data.length : 0), t_342359.counter)) {
		enlarge_315367(t_342359);
		index_342830 = raw_get_known_hc_317359(t_342359, key_342360, hc_342801[0]);
		}
		
		index_342830 = subInt(-1, index_342830);
		raw_insert_316507(t_342359, t_342359, "data", key_342360, val_342361, hc_342801[0], index_342830);
		t_342359.counter = addInt(t_342359.counter, 1);
		}
		else {
			result_342362 = true;
		}
		

	return result_342362;

}

function init_ordered_table_336719(initial_size_336723) {
	var result_336725 = {data: null, counter: 0, first: 0, last: 0};

		if (!(is_power_of_two_108062(initial_size_336723))) {
		failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_336725.counter = 0;
		result_336725.data = new Array(chckRange(initial_size_336723, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_336723, 0, 2147483647);++i) {result_336725.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		result_336725.first = -1;
		result_336725.last = -1;

	return result_336725;

}

function next_id_302819(s_302821) {
		var Tmp1;
			var Tmp2;

	var result_302822 = null;

		if (s_302821.exclude) {
		Tmp1 = [];
		}
		else {
		Tmp1 = (s_302821.postalCode || []).concat(makeNimstrLit("-") || [],cstrToNimstr((addInt((Tmp2 = HEX5BHEX5D_302974(last_postfix_302214[0], s_302821.postalCode), Tmp2)[0][Tmp2[1]], 1))+"") || []);
		}
		
		result_302822 = nimCopy(null, Tmp1, NTI44040);

	return result_302822;

}

function HEX5BHEX5DHEX3D_337519(t_337525, key_337526, val_337527) {
		if (((t_337525.data != null ? t_337525.data.length : 0) == 0)) {
		if (!(is_power_of_two_108062(64))) {
		failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_337525.counter = 0;
		t_337525.data = new Array(64); for (var i=0;i<64;++i) {t_337525.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		t_337525.first = -1;
		t_337525.last = -1;
		}
		
		var hc_338001 = [0];
		var index_338030 = raw_get_323221(t_337525, key_337526, hc_338001, 0);
		if ((0 <= index_338030)) {
		t_337525.data[chckIndx(index_338030, 0, t_337525.data.length+0-1)-0].Field3 = nimCopy(null, val_337527, NTI300058);
		}
		else {
			if (((t_337525.data != null ? t_337525.data.length : 0) == 0)) {
			if (!(is_power_of_two_108062(64))) {
			failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			t_337525.counter = 0;
			t_337525.data = new Array(64); for (var i=0;i<64;++i) {t_337525.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}			t_337525.first = -1;
			t_337525.last = -1;
			}
			
			if (must_rehash_228453((t_337525.data != null ? t_337525.data.length : 0), t_337525.counter)) {
			enlarge_324567(t_337525);
			index_338030 = raw_get_known_hc_326574(t_337525, key_337526, hc_338001[0]);
			}
			
			index_338030 = subInt(-1, index_338030);
			raw_insert_325707(t_337525, t_337525, "data", key_337526, val_337527, hc_338001[0], index_338030);
			t_337525.counter = addInt(t_337525.counter, 1);
		}
		

	
}

function on_grp_street_336172(e_336174) {

		function HEX3Aanonymous_336205(e_336207) {
				var Tmp1;
				var Tmp2;
				var Tmp3;
				var Tmp4;
				var Tmp5;
				var Tmp6;
				var Tmp7;
					var Tmp8;
						var Tmp9;
					var Tmp10;
				var Tmp11;

				mv_street_grp_302215[0].removeAll();
				var trgt_btn_336208 = e_336207.target;
				var to_sect_id_336209 = cstrToNimstr((Tmp1 = trgt_btn_336208.parentNode.getElementsByTagName("select"), Tmp1)[chckIndx(0, 0, Tmp1.length+0-1)-0].value);
				var sect_from_id_336210 = id_302802(street_336183.sector);
				var post_code_336211 = nimCopy(null, street_336183.sector.postalCode, NTI44040);
				if (!(has_key_313136(all_sectors_301814[0], to_sect_id_336209))) {
				(Tmp2 = HEX5BHEX5D_302974(last_postfix_302214[0], post_code_336211), Tmp2)[0][Tmp2[1]] = addInt(Tmp2[0][Tmp2[1]], 1);
				HEX5BHEX5DHEX3D_314117(all_sectors_301814[0], to_sect_id_336209, {city: nimCopy(null, addr_city_302618[0], NTI44040), postalCode: nimCopy(null, post_code_336211, NTI44040), district: nimCopy(null, street_336183.sector.district, NTI44040), pFix: (Tmp3 = HEX5BHEX5D_302974(last_postfix_302214[0], post_code_336211), Tmp3)[0][Tmp3[1]], streets: init_ordered_table_336719(64), shownOnMap: false, m_type: NTI300050, exclude: false});
				}
				
				street_336183.sector = (Tmp4 = HEX5BHEX5D_318212(all_sectors_301814[0], to_sect_id_336209), Tmp4)[0][Tmp4[1]];
				HEX5BHEX5DHEX3D_337519((Tmp5 = HEX5BHEX5D_318212(all_sectors_301814[0], to_sect_id_336209), Tmp5)[0][Tmp5[1]].streets, street_336183.name, street_336183.links);
				del_331407((Tmp6 = HEX5BHEX5D_318212(all_sectors_301814[0], sect_from_id_336210), Tmp6)[0][Tmp6[1]].streets, street_336183.name);
				var from_sector_339275 = (Tmp7 = HEX5BHEX5D_318212(all_sectors_301814[0], sect_from_id_336210), Tmp7)[0][Tmp7[1]];
					if (!!(from_sector_339275.exclude)) Tmp8 = false; else {						Tmp8 = (len_320051((Tmp9 = HEX5BHEX5D_318212(all_sectors_301814[0], sect_from_id_336210), Tmp9)[0][Tmp9[1]].streets) == 0);					}				if (Tmp8) {
				if ((from_sector_339275.pFix == (Tmp10 = HEX5BHEX5D_302974(last_postfix_302214[0], from_sector_339275.postalCode), Tmp10)[0][Tmp10[1]])) {
				(Tmp11 = HEX5BHEX5D_302974(last_postfix_302214[0], from_sector_339275.postalCode), Tmp11)[0][Tmp11[1]] = subInt(Tmp11[0][Tmp11[1]], 1);
				}
				
				del_327674(all_sectors_301814[0], sect_from_id_336210);
				}
				
				reindex_sect_312060();
				redraw_278814(kxi_269324[0]);

			
		}

		function HEX3Aanonymous_340216(el_340218, di_340219, dm_340220) {
				var Tmp1;
				var Tmp2;

				function HEX3Aanonymous_340223(e_340225) {
						mv_street_grp_302215[0].removeAll();

					
				}

				function HEX3Aanonymous_340239(e_340241) {
						map.removeEventListener("tap", load_links_302780);

					
				}

				var btn_340221 = (Tmp1 = el_340218.getElementsByClassName("ok-str-mv"), Tmp1)[chckIndx(0, 0, Tmp1.length+0-1)-0];
				var btn_close_340222 = (Tmp2 = el_340218.getElementsByClassName("close-str-mv"), Tmp2)[chckIndx(0, 0, Tmp2.length+0-1)-0];
				btn_340221.addEventListener("click", mv_btn_hndl_340214, false);
				btn_close_340222.addEventListener("click", HEX3Aanonymous_340223, false);
				el_340218.addEventListener("mouseenter", HEX3Aanonymous_340239, false);

			
		}

		function HEX3Aanonymous_340286(el_340288, di_340289, dm_340290) {
				var Tmp1;

				var btn_340291 = (Tmp1 = el_340288.getElementsByClassName("ok-str-mv"), Tmp1)[chckIndx(0, 0, Tmp1.length+0-1)-0];
				btn_340291.removeEventListener("click", mv_btn_hndl_340214);
				map.addEventListener("tap", load_links_302780, false);

			
		}

		mv_street_grp_302215[0].removeAll();
		var trgt_grp_336178 = e_336174.currentTarget;
		var street_336183 = trgt_grp_336178.getData();
		var sect_id_336184 = id_302802(street_336183.sector);
		var sect_next_id_336185 = next_id_302819(street_336183.sector);
		var sect_exclude_336186 = street_336183.sector.exclude;
		var el_move_street_336187 = document.createElement("div");
		el_move_street_336187.className = "move-str-marker";
		el_move_street_336187.appendChild(document.createElement("span"));
		var el_txt_336188 = document.createTextNode(toJSStr(street_336183.name));
		el_move_street_336187.childNodes[0].appendChild(el_txt_336188);
		el_move_street_336187.appendChild(document.createElement("div"));
		var sel_el_336189 = document.createElement("select");
		var mv_opt_336190 = document.createElement("option");
		mv_opt_336190.appendChild(document.createTextNode("Двинуть в"));
		sel_el_336189.appendChild(mv_opt_336190);
		if (!(sect_exclude_336186)) {
		var mv_opt_new_336191 = document.createElement("option");
		mv_opt_new_336191.appendChild(document.createTextNode(toJSStr((sect_next_id_336185 || []).concat(makeNimstrLit("(\xD0\xBD\xD0\xBE\xD0\xB2\xD1\x8B\xD0\xB9)") || []))));
		mv_opt_new_336191.value = toJSStr(sect_next_id_336185);
		mv_opt_new_336191.setAttribute("data-new", "1");
		sel_el_336189.appendChild(mv_opt_new_336191);
		}
		
		L1: do {
			var k_opt_336199 = null;
			var v_opt_336200 = null;
			var l_393673 = len_311180(all_sectors_301814[0]);
			if ((0 < all_sectors_301814[0].counter)) {
			var h_393674 = all_sectors_301814[0].first;
			L2: do {
					L3: while (true) {
					if (!(0 <= h_393674)) break L3;
						var nxt_393676 = all_sectors_301814[0].data[chckIndx(h_393674, 0, all_sectors_301814[0].data.length+0-1)-0].Field1;
						if (is_filled_228418(all_sectors_301814[0].data[chckIndx(h_393674, 0, all_sectors_301814[0].data.length+0-1)-0].Field0)) {
						k_opt_336199 = all_sectors_301814[0].data[chckIndx(h_393674, 0, all_sectors_301814[0].data.length+0-1)-0].Field2;
						v_opt_336200 = all_sectors_301814[0].data[chckIndx(h_393674, 0, all_sectors_301814[0].data.length+0-1)-0].Field3;
						L4: do {
							if (eqStrings(k_opt_336199, sect_id_336184)) {
							break L4;
							}
							
							var mv_opt_336203 = document.createElement("option");
							mv_opt_336203.appendChild(document.createTextNode(toJSStr(k_opt_336199)));
							mv_opt_336203.value = toJSStr(k_opt_336199);
							sel_el_336189.appendChild(mv_opt_336203);
						} while(false);
						if (!((len_311180(all_sectors_301814[0]) == l_393673))) {
						failed_assert_impl_58851(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
						}
						
						}
						
						h_393674 = nxt_393676;
					}
			} while(false);
			}
			
		} while(false);
		el_move_street_336187.childNodes[1].appendChild(sel_el_336189);
		var btn_ok_336204 = document.createElement("button");
		btn_ok_336204.appendChild(document.createTextNode("Ok !"));
		btn_ok_336204.className = "ok-str-mv";
		var mv_btn_hndl_340214 = HEX3Aanonymous_336205;
		var btn_close_340215 = document.createElement("button");
		btn_close_340215.appendChild(document.createTextNode("закрыть"));
		btn_close_340215.className = "close-str-mv";
		el_move_street_336187.childNodes[1].appendChild(btn_ok_336204);
		el_move_street_336187.childNodes[1].appendChild(btn_close_340215);
		var di_opt_340415 = {onAttach: HEX3Aanonymous_340216, onDetach: HEX3Aanonymous_340286, m_type: NTI244089};
		var icon_move_street_340416 = function(element, opt){return new H.map.DomIcon(element, opt)}(el_move_street_336187, di_opt_340415);
		var geo_point_340417 = map.screenToGeo(e_336174.currentPointer.viewportX, e_336174.currentPointer.viewportY);
		var mv_street_marker_340418 = function(position){return new H.map.DomMarker(position)}(geo_point_340417);
		mv_street_marker_340418.setIcon(icon_move_street_340416);
		mv_street_grp_302215[0].addObject(mv_street_marker_340418);
		rawEcho(makeNimstrLit("mvStreet: "));

	
}

function has_key_345124(t_345129, key_345130) {
	var result_345131 = false;

		var hc_345132 = [0];
		result_345131 = (0 <= raw_get_345133(t_345129, key_345130, hc_345132, 0));

	return result_345131;

}

function display_street_340692(name_340694, tree_340695) {
		var Tmp1;
			var Tmp2;
			var Tmp3;
		var Tmp4;
		var Tmp5;
			var Tmp6;
		var Tmp7;
		var Tmp8;
		var Tmp9;
		var Tmp10;
		var Tmp11;
			var Tmp13;
						var Tmp16;

						function HEX3Aanonymous_344782(e_344784) {
								map.removeEventListener("tap", load_links_302780);

							
						}

						function HEX3Aanonymous_344815(e_344817) {
								map.addEventListener("tap", load_links_302780, false);

							
						}
							var Tmp20;
								var Tmp21;
						var Tmp22;
										var Tmp26;
										var Tmp27;

	BeforeRet: do {
		if (!(has_key_340805(all_streets_301014[0], name_340694))) {
		break BeforeRet;
		}
		
		if ((0 < ((Tmp3 = (Tmp2 = HEX5BHEX5D_321404(all_streets_301014[0], name_340694), Tmp2)[0][Tmp2[1]].links, Tmp3) != null ? Tmp3.length : 0))) {
		Tmp1 = (Tmp5 = (Tmp4 = HEX5BHEX5D_321404(all_streets_301014[0], name_340694), Tmp4)[0][Tmp4[1]].links, Tmp5)[chckIndx(0, 0, Tmp5.length+0-1)-0];
		}
		else {
		Tmp1 = null;
		}
		
		var first_link_341935 = Tmp1;
		if (((Tmp6 = HEX5BHEX5D_321404(all_streets_301014[0], name_340694), Tmp6)[0][Tmp6[1]].sector == null)) {
		var p_fix_342266 = (Tmp7 = HEX5BHEX5D_302974(last_postfix_302214[0], postal_code_302620[0]), Tmp7)[0][Tmp7[1]];
		has_key_or_put_342353(all_sectors_301814[0], sect_name_302621[0], {city: nimCopy(null, addr_city_302618[0], NTI44040), postalCode: nimCopy(null, postal_code_302620[0], NTI44040), district: nimCopy(null, addr_distr_302617[0], NTI44040), pFix: p_fix_342266, streets: init_ordered_table_336719(64), shownOnMap: false, m_type: NTI300050, exclude: false});
		has_key_or_put_322635((Tmp8 = HEX5BHEX5D_318212(all_sectors_301814[0], sect_name_302621[0]), Tmp8)[0][Tmp8[1]].streets, name_340694, (Tmp9 = HEX5BHEX5D_321404(all_streets_301014[0], name_340694), Tmp9)[0][Tmp9[1]].links);
		(Tmp10 = HEX5BHEX5D_321404(all_streets_301014[0], name_340694), Tmp10)[0][Tmp10[1]].sector = (Tmp11 = HEX5BHEX5D_318212(all_sectors_301814[0], sect_name_302621[0]), Tmp11)[0][Tmp11[1]];
		}
		
		L12: do {
			var link_344614 = null;
			var colontmp__393663 = null;
			colontmp__393663 = (Tmp13 = HEX5BHEX5D_321404(all_streets_301014[0], name_340694), Tmp13)[0][Tmp13[1]].links;
			var i_393665 = 0;
			var l_393666 = (colontmp__393663 != null ? colontmp__393663.length : 0);
			L14: do {
					L15: while (true) {
					if (!(i_393665 < l_393666)) break L15;
						link_344614 = colontmp__393663[chckIndx(i_393665, 0, colontmp__393663.length+0-1)-0];
						var grp_street_344615 = function(){return new H.map.Group()}();
						grp_street_344615.setData((Tmp16 = HEX5BHEX5D_321404(all_streets_301014[0], name_340694), Tmp16)[0][Tmp16[1]]);
						grp_street_344615.addEventListener("pointerenter", HEX3Aanonymous_344782, true, null);
						grp_street_344615.addEventListener("pointerleave", HEX3Aanonymous_344815, true, null);
						grp_street_344615.addEventListener("tap", on_grp_street_336172, true, null);
						main_group_335549[0].addObject(grp_street_344615);
						var ln_str_344869 = function(){return new H.geo.LineString();}();
						L17: do {
							var c_345014 = null;
							var colontmp__393651 = null;
							colontmp__393651 = link_344614.geometry;
							var i_393653 = 0;
							var l_393654 = (colontmp__393651 != null ? colontmp__393651.length : 0);
							L18: do {
									L19: while (true) {
									if (!(i_393653 < l_393654)) break L19;
										c_345014 = colontmp__393651[chckIndx(i_393653, 0, colontmp__393651.length+0-1)-0];
										ln_str_344869.pushLatLngAlt(c_345014.lat, c_345014.lng, 1.0000000000000000e+000);
										i_393653 = addInt(i_393653, 1);
										if (!(((colontmp__393651 != null ? colontmp__393651.length : 0) == l_393654))) {
										failed_assert_impl_58851(makeNimstrLit("iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
							if (!has_key_345124(all_links_300614[0], link_344614.linkId)) Tmp20 = false; else {								Tmp20 = !((Tmp21 = HEX5BHEX5D_345932(all_links_300614[0], link_344614.linkId), Tmp21)[0][Tmp21[1]].addedToMap);							}						if (Tmp20) {
						var p_opt_346436 = {style: {strokeColor: "rgba(0, 0, 255, 0.4)", fillColor: "rgba(255, 0, 0, 0.4)", lineWidth: 10, m_type: NTI244076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, zIndex: 99, m_type: NTI244081};
						var pl_346437 = function(ls, options){return new H.map.Polyline(ls, options)}(ln_str_344869, p_opt_346436);
						grp_street_344615.addObject(pl_346437);
						(Tmp22 = HEX5BHEX5D_345932(all_links_300614[0], link_344614.linkId), Tmp22)[0][Tmp22[1]].addedToMap = true;
						}
						
						if (tree_340695) {
						L23: do {
							var n_link_347014 = 0;
							var colontmp__393659 = null;
							colontmp__393659 = link_344614.neighborLinks;
							var i_393660 = 0;
							var l_393661 = (colontmp__393659 != null ? colontmp__393659.length : 0);
							L24: do {
									L25: while (true) {
									if (!(i_393660 < l_393661)) break L25;
										n_link_347014 = colontmp__393659[chckIndx(i_393660, 0, colontmp__393659.length+0-1)-0];
										if ((0 < n_link_347014)) {
										Tmp26 = n_link_347014;
										}
										else {
										Tmp26 = mulInt(n_link_347014, -1);
										}
										
										var n_lnk_347018 = Tmp26;
										if (has_key_345124(all_links_300614[0], n_lnk_347018)) {
										display_street_340692((Tmp27 = HEX5BHEX5D_345932(all_links_300614[0], n_lnk_347018), Tmp27)[0][Tmp27[1]].name, false);
										}
										else {
										}
										
										i_393660 = addInt(i_393660, 1);
										if (!(((colontmp__393659 != null ? colontmp__393659.length : 0) == l_393661))) {
										failed_assert_impl_58851(makeNimstrLit("iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						}
						
						i_393665 = addInt(i_393665, 1);
						if (!(((colontmp__393663 != null ? colontmp__393663.length : 0) == l_393666))) {
						failed_assert_impl_58851(makeNimstrLit("iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
	} while (false);

	
}

function raw_insert_376922(t_376928, data_376931, data_376931_Idx, key_376932, val_376933, hc_376934, h_376935) {
		data_376931[data_376931_Idx][chckIndx(h_376935, 0, data_376931[data_376931_Idx].length+0-1)-0].Field1 = nimCopy(null, key_376932, NTI44040);
		data_376931[data_376931_Idx][chckIndx(h_376935, 0, data_376931[data_376931_Idx].length+0-1)-0].Field2 = val_376933;
		data_376931[data_376931_Idx][chckIndx(h_376935, 0, data_376931[data_376931_Idx].length+0-1)-0].Field0 = hc_376934;

	
}

function enlarge_375948(t_375954) {
		var n_375962 = null;
		n_375962 = new Array(chckRange(mulInt((t_375954.data != null ? t_375954.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_375954.data != null ? t_375954.data.length : 0), 2), 0, 2147483647);++i) {n_375962[i]={Field0: 0, Field1: null, Field2: 0};}		var Tmp1 = t_375954.data; t_375954.data = n_375962; n_375962 = Tmp1;		L2: do {
			var i_376121 = 0;
			var colontmp__393682 = 0;
			colontmp__393682 = (n_375962 != null ? (n_375962.length-1) : -1);
			var res_393683 = 0;
			L3: do {
					L4: while (true) {
					if (!(res_393683 <= colontmp__393682)) break L4;
						i_376121 = res_393683;
						var eh_376277 = n_375962[chckIndx(i_376121, 0, n_375962.length+0-1)-0].Field0;
						if (is_filled_228418(eh_376277)) {
						var j_376284 = (eh_376277 & (t_375954.data != null ? (t_375954.data.length-1) : -1));
						L5: do {
								L6: while (true) {
								if (!is_filled_228418(t_375954.data[chckIndx(j_376284, 0, t_375954.data.length+0-1)-0].Field0)) break L6;
									j_376284 = next_try_228435(j_376284, (t_375954.data != null ? (t_375954.data.length-1) : -1));
								}
						} while(false);
						raw_insert_376922(t_375954, t_375954, "data", n_375962[chckIndx(i_376121, 0, n_375962.length+0-1)-0].Field1, n_375962[chckIndx(i_376121, 0, n_375962.length+0-1)-0].Field2, eh_376277, j_376284);
						}
						
						res_393683 = addInt(res_393683, 1);
					}
			} while(false);
		} while(false);

	
}

function raw_get_known_hc_377443(t_377447, key_377448, hc_377449) {
	var result_377450 = 0;

	BeforeRet: do {
		if (((t_377447.data != null ? t_377447.data.length : 0) == 0)) {
		result_377450 = -1;
		break BeforeRet;
		}
		
		var h_377589 = (hc_377449 & (t_377447.data != null ? (t_377447.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_228418(t_377447.data[chckIndx(h_377589, 0, t_377447.data.length+0-1)-0].Field0)) break L2;
					if (((t_377447.data[chckIndx(h_377589, 0, t_377447.data.length+0-1)-0].Field0 == hc_377449) && eqStrings(t_377447.data[chckIndx(h_377589, 0, t_377447.data.length+0-1)-0].Field1, key_377448))) {
					result_377450 = h_377589;
					break BeforeRet;
					}
					
					h_377589 = next_try_228435(h_377589, (t_377447.data != null ? (t_377447.data.length-1) : -1));
				}
		} while(false);
		result_377450 = subInt(-1, h_377589);
	} while (false);

	return result_377450;

}

function HEX5BHEX5DHEX3D_374670(t_374676, key_374677, val_374678) {
		if (((t_374676.data != null ? t_374676.data.length : 0) == 0)) {
		if (!(is_power_of_two_108062(64))) {
		failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_374676.counter = 0;
		t_374676.data = new Array(64); for (var i=0;i<64;++i) {t_374676.data[i]={Field0: 0, Field1: null, Field2: 0};}		}
		
		var hc_375201 = [0];
		var index_375210 = raw_get_302986(t_374676, key_374677, hc_375201, 0);
		if ((0 <= index_375210)) {
		t_374676.data[chckIndx(index_375210, 0, t_374676.data.length+0-1)-0].Field2 = val_374678;
		}
		else {
			if (((t_374676.data != null ? t_374676.data.length : 0) == 0)) {
			if (!(is_power_of_two_108062(64))) {
			failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			t_374676.counter = 0;
			t_374676.data = new Array(64); for (var i=0;i<64;++i) {t_374676.data[i]={Field0: 0, Field1: null, Field2: 0};}			}
			
			if (must_rehash_228453((t_374676.data != null ? t_374676.data.length : 0), t_374676.counter)) {
			enlarge_375948(t_374676);
			index_375210 = raw_get_known_hc_377443(t_374676, key_374677, hc_375201[0]);
			}
			
			index_375210 = subInt(-1, index_375210);
			raw_insert_376922(t_374676, t_374676, "data", key_374677, val_374678, hc_375201[0], index_375210);
			t_374676.counter = addInt(t_374676.counter, 1);
		}
		

	
}

function sort_378236(t_378242, cmp_378252, order_378253) {
											var Tmp9;
												var Tmp10;

	BeforeRet: do {
		var list_378254 = t_378242.first;
		var p_378255 = 0;
		var q_378256 = 0;
		var e_378257 = 0;
		var tail_378258 = 0;
		var oldhead_378259 = 0;
		var nmerges_378260 = 0;
		var psize_378261 = 0;
		var qsize_378262 = 0;
		var i_378263 = 0;
		if ((t_378242.counter == 0)) {
		break BeforeRet;
		}
		
		var insize_378265 = 1;
		L1: do {
				L2: while (true) {
				if (!true) break L2;
					p_378255 = list_378254;
					oldhead_378259 = list_378254;
					list_378254 = -1;
					tail_378258 = -1;
					nmerges_378260 = 0;
					L3: do {
							L4: while (true) {
							if (!(0 <= p_378255)) break L4;
								nmerges_378260 = addInt(nmerges_378260, 1);
								q_378256 = p_378255;
								psize_378261 = 0;
								i_378263 = 0;
								L5: do {
										L6: while (true) {
										if (!(i_378263 < insize_378265)) break L6;
											psize_378261 = addInt(psize_378261, 1);
											q_378256 = t_378242.data[chckIndx(q_378256, 0, t_378242.data.length+0-1)-0].Field1;
											if ((q_378256 < 0)) {
											break L5;
											}
											
											i_378263 = addInt(i_378263, 1);
										}
								} while(false);
								qsize_378262 = insize_378265;
								L7: do {
										L8: while (true) {
											if ((0 < psize_378261)) Tmp9 = true; else {												if (!(0 < qsize_378262)) Tmp10 = false; else {													Tmp10 = (0 <= q_378256);												}												Tmp9 = Tmp10;											}										if (!Tmp9) break L8;
											if ((psize_378261 == 0)) {
											e_378257 = q_378256;
											q_378256 = t_378242.data[chckIndx(q_378256, 0, t_378242.data.length+0-1)-0].Field1;
											qsize_378262 = subInt(qsize_378262, 1);
											}
											else {
											if (((qsize_378262 == 0) || (q_378256 < 0))) {
											e_378257 = p_378255;
											p_378255 = t_378242.data[chckIndx(p_378255, 0, t_378242.data.length+0-1)-0].Field1;
											psize_378261 = subInt(psize_378261, 1);
											}
											else {
											if ((HEX2A_97019(cmp_378252({Field0: nimCopy(null, t_378242.data[chckIndx(p_378255, 0, t_378242.data.length+0-1)-0].Field2, NTI44040), Field1: t_378242.data[chckIndx(p_378255, 0, t_378242.data.length+0-1)-0].Field3}, {Field0: nimCopy(null, t_378242.data[chckIndx(q_378256, 0, t_378242.data.length+0-1)-0].Field2, NTI44040), Field1: t_378242.data[chckIndx(q_378256, 0, t_378242.data.length+0-1)-0].Field3}), order_378253) <= 0)) {
											e_378257 = p_378255;
											p_378255 = t_378242.data[chckIndx(p_378255, 0, t_378242.data.length+0-1)-0].Field1;
											psize_378261 = subInt(psize_378261, 1);
											}
											else {
												e_378257 = q_378256;
												q_378256 = t_378242.data[chckIndx(q_378256, 0, t_378242.data.length+0-1)-0].Field1;
												qsize_378262 = subInt(qsize_378262, 1);
											}
											}}
											if ((0 <= tail_378258)) {
											t_378242.data[chckIndx(tail_378258, 0, t_378242.data.length+0-1)-0].Field1 = e_378257;
											}
											else {
												list_378254 = e_378257;
											}
											
											tail_378258 = e_378257;
										}
								} while(false);
								p_378255 = q_378256;
							}
					} while(false);
					t_378242.data[chckIndx(tail_378258, 0, t_378242.data.length+0-1)-0].Field1 = -1;
					if ((nmerges_378260 <= 1)) {
					break L1;
					}
					
					insize_378265 = mulInt(insize_378265, 2);
				}
		} while(false);
		t_378242.first = list_378254;
		t_378242.last = tail_378258;
	} while (false);

	
}

function sort_sector_tbl_378167(x_378172, y_378174) {
		var Tmp1;
			var Tmp2;

	var result_378175 = 0;

		var k_x_378176 = nimCopy(null, x_378172["Field0"], NTI44040);
		var k_y_378177 = nimCopy(null, y_378174["Field0"], NTI44040);
			if ((cmpStrings(k_y_378177, k_x_378176) < 0)) Tmp2 = true; else {				Tmp2 = eqStrings(k_x_378176, k_y_378177);			}		if (Tmp2) {
		Tmp1 = 1;
		}
		else {
		Tmp1 = -1;
		}
		
		result_378175 = Tmp1;

	return result_378175;

}

function new_seq_82833(len_82836) {
	var result_82838 = null;

		result_82838 = new Array(len_82836); for (var i=0;i<len_82836;++i) {result_82838[i]=null;}
	return result_82838;

}

function new_seq_381299(len_381302) {
	var result_381304 = null;

		result_381304 = new Array(len_381302); for (var i=0;i<len_381302;++i) {result_381304[i]={Field0: 0.0, Field1: 0.0};}
	return result_381304;

}

function init_table_381332(initial_size_381336) {
	var result_381352 = {data: null, counter: 0};

		if (!(is_power_of_two_108062(initial_size_381336))) {
		failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(initialSize)` "));
		}
		
		result_381352.counter = 0;
		result_381352.data = new Array(chckRange(initial_size_381336, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_381336, 0, 2147483647);++i) {result_381352.data[i]={Field0: 0, Field1: null, Field2: {Field0: 0, Field1: 0, Field2: 0}};}
	return result_381352;

}

function HEX2AHEX3D_217387(x_217391, x_217391_Idx, y_217392) {
		x_217391[x_217391_Idx] = HEX2A_209019(x_217391[x_217391_Idx], y_217392);

	
}

function HEX5E_217378(x_217381, y_217382) {
	var result_217383 = [0];

		switch (y_217382) {
		case 0:
			result_217383[0] = 1;
			break;
		case 1:
			result_217383[0] = x_217381;
			break;
		case 2:
			result_217383[0] = HEX2A_209019(x_217381, x_217381);
			break;
		case 3:
			result_217383[0] = HEX2A_209019(HEX2A_209019(x_217381, x_217381), x_217381);
			break;
		default: 
			var colontmp__393696 = {Field0: 0, Field1: 0};
			var x_217385 = [0];
			var y_217386 = 0;
			nimCopy(colontmp__393696, {Field0: x_217381, Field1: nimCopy(null, y_217382, NTI47804)}, NTI217384);
			x_217385[0] = colontmp__393696["Field0"];
			y_217386 = colontmp__393696["Field1"];
			result_217383[0] = 1;
			L1: do {
					L2: while (true) {
					if (!true) break L2;
						if (!(((y_217386 & 1) == 0))) {
						HEX2AHEX3D_217387(result_217383, 0, x_217385[0]);
						}
						
						y_217386 = chckRange((y_217386 >> 1), 0, 2147483647);
						if ((y_217386 == 0)) {
						break L1;
						}
						
						HEX2AHEX3D_217387(x_217385, 0, x_217385[0]);
					}
			} while(false);
			break;
		}

	return result_217383[0];

}

function get_coord_246015(level_246017, tile_x_246018, tile_y_246019) {
	var result_246021 = {Field0: 0.0, Field1: 0.0};

		var tile_size_246029 = HEX2F_69417(180, HEX5E_217378(2, chckRange(level_246017, 0, 2147483647)));
		nimCopy(result_246021, {Field0: ((tile_y_246019 * tile_size_246029) - 9.0000000000000000e+001), Field1: ((tile_x_246018 * tile_size_246029) - 1.8000000000000000e+002)}, NTI246020);

	return result_246021;

}

function raw_get_382202(t_382206, key_382207, hc_382208, hc_382208_Idx) {
						var Tmp3;

	var result_382209 = 0;

	BeforeRet: do {
		hc_382208[hc_382208_Idx] = hash_225180(key_382207);
		if ((hc_382208[hc_382208_Idx] == 0)) {
		hc_382208[hc_382208_Idx] = 314159265;
		}
		
		if (((t_382206.data != null ? t_382206.data.length : 0) == 0)) {
		result_382209 = -1;
		break BeforeRet;
		}
		
		var h_382351 = (hc_382208[hc_382208_Idx] & (t_382206.data != null ? (t_382206.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_228418(t_382206.data[chckIndx(h_382351, 0, t_382206.data.length+0-1)-0].Field0)) break L2;
						if (!(t_382206.data[chckIndx(h_382351, 0, t_382206.data.length+0-1)-0].Field0 == hc_382208[hc_382208_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_382206.data[chckIndx(h_382351, 0, t_382206.data.length+0-1)-0].Field1, key_382207);						}					if (Tmp3) {
					result_382209 = h_382351;
					break BeforeRet;
					}
					
					h_382351 = next_try_228435(h_382351, (t_382206.data != null ? (t_382206.data.length-1) : -1));
				}
		} while(false);
		result_382209 = subInt(-1, h_382351);
	} while (false);

	return result_382209;

}

function raw_insert_384522(t_384528, data_384531, data_384531_Idx, key_384532, val_384533, hc_384534, h_384535) {
		data_384531[data_384531_Idx][chckIndx(h_384535, 0, data_384531[data_384531_Idx].length+0-1)-0].Field1 = nimCopy(null, key_384532, NTI44040);
		nimCopy(data_384531[data_384531_Idx][chckIndx(h_384535, 0, data_384531[data_384531_Idx].length+0-1)-0].Field2, val_384533, NTI381327);
		data_384531[data_384531_Idx][chckIndx(h_384535, 0, data_384531[data_384531_Idx].length+0-1)-0].Field0 = hc_384534;

	
}

function enlarge_383548(t_383554) {
		var n_383562 = null;
		n_383562 = new Array(chckRange(mulInt((t_383554.data != null ? t_383554.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_383554.data != null ? t_383554.data.length : 0), 2), 0, 2147483647);++i) {n_383562[i]={Field0: 0, Field1: null, Field2: {Field0: 0, Field1: 0, Field2: 0}};}		var Tmp1 = t_383554.data; t_383554.data = n_383562; n_383562 = Tmp1;		L2: do {
			var i_383721 = 0;
			var colontmp__393700 = 0;
			colontmp__393700 = (n_383562 != null ? (n_383562.length-1) : -1);
			var res_393701 = 0;
			L3: do {
					L4: while (true) {
					if (!(res_393701 <= colontmp__393700)) break L4;
						i_383721 = res_393701;
						var eh_383877 = n_383562[chckIndx(i_383721, 0, n_383562.length+0-1)-0].Field0;
						if (is_filled_228418(eh_383877)) {
						var j_383884 = (eh_383877 & (t_383554.data != null ? (t_383554.data.length-1) : -1));
						L5: do {
								L6: while (true) {
								if (!is_filled_228418(t_383554.data[chckIndx(j_383884, 0, t_383554.data.length+0-1)-0].Field0)) break L6;
									j_383884 = next_try_228435(j_383884, (t_383554.data != null ? (t_383554.data.length-1) : -1));
								}
						} while(false);
						raw_insert_384522(t_383554, t_383554, "data", n_383562[chckIndx(i_383721, 0, n_383562.length+0-1)-0].Field1, n_383562[chckIndx(i_383721, 0, n_383562.length+0-1)-0].Field2, eh_383877, j_383884);
						}
						
						res_393701 = addInt(res_393701, 1);
					}
			} while(false);
		} while(false);

	
}

function raw_get_known_hc_385043(t_385047, key_385048, hc_385049) {
	var result_385050 = 0;

	BeforeRet: do {
		if (((t_385047.data != null ? t_385047.data.length : 0) == 0)) {
		result_385050 = -1;
		break BeforeRet;
		}
		
		var h_385189 = (hc_385049 & (t_385047.data != null ? (t_385047.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_228418(t_385047.data[chckIndx(h_385189, 0, t_385047.data.length+0-1)-0].Field0)) break L2;
					if (((t_385047.data[chckIndx(h_385189, 0, t_385047.data.length+0-1)-0].Field0 == hc_385049) && eqStrings(t_385047.data[chckIndx(h_385189, 0, t_385047.data.length+0-1)-0].Field1, key_385048))) {
					result_385050 = h_385189;
					break BeforeRet;
					}
					
					h_385189 = next_try_228435(h_385189, (t_385047.data != null ? (t_385047.data.length-1) : -1));
				}
		} while(false);
		result_385050 = subInt(-1, h_385189);
	} while (false);

	return result_385050;

}

function HEX5BHEX5DHEX3D_381773(t_381779, key_381780, val_381781) {
		if (((t_381779.data != null ? t_381779.data.length : 0) == 0)) {
		if (!(is_power_of_two_108062(64))) {
		failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_381779.counter = 0;
		t_381779.data = new Array(64); for (var i=0;i<64;++i) {t_381779.data[i]={Field0: 0, Field1: null, Field2: {Field0: 0, Field1: 0, Field2: 0}};}		}
		
		var hc_382201 = [0];
		var index_382840 = raw_get_382202(t_381779, key_381780, hc_382201, 0);
		if ((0 <= index_382840)) {
		nimCopy(t_381779.data[chckIndx(index_382840, 0, t_381779.data.length+0-1)-0].Field2, val_381781, NTI381327);
		}
		else {
			if (((t_381779.data != null ? t_381779.data.length : 0) == 0)) {
			if (!(is_power_of_two_108062(64))) {
			failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			t_381779.counter = 0;
			t_381779.data = new Array(64); for (var i=0;i<64;++i) {t_381779.data[i]={Field0: 0, Field1: null, Field2: {Field0: 0, Field1: 0, Field2: 0}};}			}
			
			if (must_rehash_228453((t_381779.data != null ? t_381779.data.length : 0), t_381779.counter)) {
			enlarge_383548(t_381779);
			index_382840 = raw_get_known_hc_385043(t_381779, key_381780, hc_382201[0]);
			}
			
			index_382840 = subInt(-1, index_382840);
			raw_insert_384522(t_381779, t_381779, "data", key_381780, val_381781, hc_382201[0], index_382840);
			t_381779.counter = addInt(t_381779.counter, 1);
		}
		

	
}

function get_tile_xy_246061(level_246063, lat_246064, lng_246065) {
	var result_246067 = {Field0: 0, Field1: 0};

		var tile_size_246075 = HEX2F_69417(180, HEX5E_217378(2, chckRange(level_246063, 0, 2147483647)));
		nimCopy(result_246067, {Field0: ((Math.trunc(((lng_246065 + 1.8000000000000000e+002) / tile_size_246075)))|0), Field1: ((Math.trunc(((lat_246064 + 9.0000000000000000e+001) / tile_size_246075)))|0)}, NTI246066);

	return result_246067;

}

function has_key_or_put_386281(t_386287, key_386288, val_386289) {
	var result_386290 = false;

		if (((t_386287.data != null ? t_386287.data.length : 0) == 0)) {
		if (!(is_power_of_two_108062(64))) {
		failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_386287.counter = 0;
		t_386287.data = new Array(64); for (var i=0;i<64;++i) {t_386287.data[i]={Field0: 0, Field1: null, Field2: {Field0: 0, Field1: 0, Field2: 0}};}		}
		
		var hc_386801 = [0];
		var index_386810 = raw_get_382202(t_386287, key_386288, hc_386801, 0);
		if ((index_386810 < 0)) {
		result_386290 = false;
		if (((t_386287.data != null ? t_386287.data.length : 0) == 0)) {
		if (!(is_power_of_two_108062(64))) {
		failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_386287.counter = 0;
		t_386287.data = new Array(64); for (var i=0;i<64;++i) {t_386287.data[i]={Field0: 0, Field1: null, Field2: {Field0: 0, Field1: 0, Field2: 0}};}		}
		
		if (must_rehash_228453((t_386287.data != null ? t_386287.data.length : 0), t_386287.counter)) {
		enlarge_383548(t_386287);
		index_386810 = raw_get_known_hc_385043(t_386287, key_386288, hc_386801[0]);
		}
		
		index_386810 = subInt(-1, index_386810);
		raw_insert_384522(t_386287, t_386287, "data", key_386288, val_386289, hc_386801[0], index_386810);
		t_386287.counter = addInt(t_386287.counter, 1);
		}
		else {
			result_386290 = true;
		}
		

	return result_386290;

}

function len_387748(t_387753) {
	var result_387754 = 0;

		result_387754 = t_387753.counter;

	return result_387754;

}

function has_key_388538(t_388543, key_388544) {
	var result_388545 = false;

		var hc_388546 = [0];
		result_388545 = (0 <= raw_get_368602(t_388543, key_388544, hc_388546, 0));

	return result_388545;

}

function new_seq_388605(len_388608) {
	var result_388610 = null;

		result_388610 = new Array(len_388608); for (var i=0;i<len_388608;++i) {result_388610[i]=null;}
	return result_388610;

}

function has_key_or_put_390131(t_390137, key_390138, val_390139) {
	var result_390140 = false;

		if (((t_390137.data != null ? t_390137.data.length : 0) == 0)) {
		if (!(is_power_of_two_108062(64))) {
		failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_390137.counter = 0;
		t_390137.data = new Array(64); for (var i=0;i<64;++i) {t_390137.data[i]={Field0: 0, Field1: null, Field2: 0};}		}
		
		var hc_390601 = [0];
		var index_390610 = raw_get_302986(t_390137, key_390138, hc_390601, 0);
		if ((index_390610 < 0)) {
		result_390140 = false;
		if (((t_390137.data != null ? t_390137.data.length : 0) == 0)) {
		if (!(is_power_of_two_108062(64))) {
		failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_390137.counter = 0;
		t_390137.data = new Array(64); for (var i=0;i<64;++i) {t_390137.data[i]={Field0: 0, Field1: null, Field2: 0};}		}
		
		if (must_rehash_228453((t_390137.data != null ? t_390137.data.length : 0), t_390137.counter)) {
		enlarge_375948(t_390137);
		index_390610 = raw_get_known_hc_377443(t_390137, key_390138, hc_390601[0]);
		}
		
		index_390610 = subInt(-1, index_390610);
		raw_insert_376922(t_390137, t_390137, "data", key_390138, val_390139, hc_390601[0], index_390610);
		t_390137.counter = addInt(t_390137.counter, 1);
		}
		else {
			result_390140 = true;
		}
		

	return result_390140;

}

function load_links_302780(e_302782) {

function parse_tiles_356056(tiles_356059) {
												var Tmp8;
													var Tmp9;
												var Tmp10;
															var Tmp16;
																var Tmp17;
															var Tmp18;
															var Tmp19;
															var Tmp20;
															var Tmp21;
															var Tmp22;
											var Tmp28;
															var Tmp32;
															var Tmp33;
															var Tmp34;
															var Tmp35;
											var Tmp36;
											var Tmp37;
											var Tmp38;
											var Tmp39;
											var Tmp40;
												var Tmp41;
											var Tmp42;
											var Tmp43;
											var Tmp44;
											var Tmp45;

											function HEX3Aanonymous_362801(x_362803) {
												var result_362804 = 0;

													result_362804 = nsuParseInt(x_362803);

												return result_362804;

											}
											var Tmp46;

												function HEX3Aanonymous_362910(x_362912) {
													var result_362913 = 0;

														result_362913 = nsuParseInt(x_362912);

													return result_362913;

												}
											var Tmp47;
											var Tmp48;
												var Tmp49;
													var Tmp50;
											var Tmp51;
											var Tmp52;
											var Tmp53;
		var Tmp58;
		var Tmp59;

		L1: do {
			var t_356414 = null;
			var i_393573 = 0;
			var l_393574 = (tiles_356059 != null ? tiles_356059.length : 0);
			L2: do {
					L3: while (true) {
					if (!(i_393573 < l_393574)) break L3;
						t_356414 = tiles_356059[chckIndx(i_393573, 0, tiles_356059.length+0-1)-0];
						var rows_356426 = (t_356414.Rows);
						var meta_356436 = (t_356414.Meta);
						var tile_id_356483 = nsuJoinSep([cstrToNimstr((meta_356436.tileX)), cstrToNimstr((meta_356436.tileY)), cstrToNimstr((meta_356436.level)), cstrToNimstr((meta_356436.layerName))], makeNimstrLit("_"));
						L4: do {
							var r_356607 = null;
							var i_393570 = 0;
							var l_393571 = (rows_356426 != null ? rows_356426.length : 0);
							L5: do {
									L6: while (true) {
									if (!(i_393570 < l_393571)) break L6;
										r_356607 = rows_356426[chckIndx(i_393570, 0, rows_356426.length+0-1)-0];
										L7: do {
											var link_id_356617 = nsuParseInt(cstrToNimstr((r_356607.LINK_ID)));
												if (!has_key_or_put_356694(all_links_300614[0], link_id_356617, {linkId: link_id_356617, m_type: NTI300030, name: null, cityId: 0, districtId: 0, postalCode: null, neighborLinks: null, geometry: null, readOnly: false, addedToMap: false, addedToSector: false})) Tmp8 = false; else {													Tmp8 = (Tmp9 = HEX5BHEX5D_345932(all_links_300614[0], link_id_356617), Tmp9)[0][Tmp9[1]].readOnly;												}											if (Tmp8) {
											break L7;
											}
											
												if (!(r_356607.NAMES)) Tmp10 = false; else {													Tmp10 = !((r_356607.NAME));												}											if (Tmp10) {
											var str_name_360428 = cstrToNimstr((r_356607.NAMES));
											L11: do {
												var seq_names_360429 = null;
												var last_393544 = 0;
												var splits_393545 = -1;
												L12: do {
														L13: while (true) {
														if (!(last_393544 <= (str_name_360428 != null ? str_name_360428.length : 0))) break L13;
															var first_393547 = last_393544;
															L14: do {
																	L15: while (true) {
																	if (!((last_393544 < (str_name_360428 != null ? str_name_360428.length : 0)) && !(substr_eq_196102(str_name_360428, last_393544, makeNimstrLit("\x1D"))))) break L15;
																		last_393544 = addInt(last_393544, 1);
																	}
															} while(false);
															if ((splits_393545 == 0)) {
															last_393544 = (str_name_360428 != null ? str_name_360428.length : 0);
															}
															
															seq_names_360429 = substr_72822(str_name_360428, first_393547, subInt(last_393544, 1));
															var txt_360601 = nsuReplaceStr((Tmp16 = nsuSplitString(seq_names_360429, makeNimstrLit("\x1E"), -1), Tmp16)[chckIndx(0, 0, Tmp16.length+0-1)-0], makeNimstrLit("GERBN"), []);
																if (!!((ConstSet4[txt_360601[chckIndx(0, 0, txt_360601.length+0-1)-0]] != undefined))) Tmp17 = false; else {																	Tmp17 = !((ConstSet5[txt_360601[chckIndx(1, 0, txt_360601.length+0-1)-0]] != undefined));																}															if (Tmp17) {
															(Tmp18 = HEX5BHEX5D_345932(all_links_300614[0], link_id_356617), Tmp18)[0][Tmp18[1]].name = nimCopy(null, ((Tmp19 = HEX5BHEX5D_345932(all_links_300614[0], link_id_356617), Tmp19)[0][Tmp19[1]].name || []).concat(makeNimstrLit(" ") || [],nsuReplaceStr((Tmp20 = nsuSplitString(seq_names_360429, makeNimstrLit("\x1E"), -1), Tmp20)[chckIndx(0, 0, Tmp20.length+0-1)-0], makeNimstrLit("GERBN"), []) || []), NTI44040);
															(Tmp21 = HEX5BHEX5D_345932(all_links_300614[0], link_id_356617), Tmp21)[0][Tmp21[1]].name = nimCopy(null, nsuStrip((Tmp22 = HEX5BHEX5D_345932(all_links_300614[0], link_id_356617), Tmp22)[0][Tmp22[1]].name, true, true, ConstSet6), NTI44040);
															break L11;
															}
															
															L23: do {
																var seq_text_361258 = null;
																var last_393539 = 0;
																var splits_393540 = -1;
																L24: do {
																		L25: while (true) {
																		if (!(last_393539 <= (seq_names_360429 != null ? seq_names_360429.length : 0))) break L25;
																			var first_393542 = last_393539;
																			L26: do {
																					L27: while (true) {
																					if (!((last_393539 < (seq_names_360429 != null ? seq_names_360429.length : 0)) && !(substr_eq_196102(seq_names_360429, last_393539, makeNimstrLit("\x1E"))))) break L27;
																						last_393539 = addInt(last_393539, 1);
																					}
																			} while(false);
																			if ((splits_393540 == 0)) {
																			last_393539 = (seq_names_360429 != null ? seq_names_360429.length : 0);
																			}
																			
																			seq_text_361258 = substr_72822(seq_names_360429, first_393542, subInt(last_393539, 1));
																			if ((splits_393540 == 0)) {
																			break L24;
																			}
																			
																			splits_393540 = subInt(splits_393540, 1);
																			last_393539 = addInt(last_393539, 1);
																		}
																} while(false);
															} while(false);
															if ((splits_393545 == 0)) {
															break L12;
															}
															
															splits_393545 = subInt(splits_393545, 1);
															last_393544 = addInt(last_393544, 1);
														}
												} while(false);
											} while(false);
											}
											else {
											if ((r_356607.NAME)) {
											(Tmp28 = HEX5BHEX5D_345932(all_links_300614[0], link_id_356617), Tmp28)[0][Tmp28[1]].geometry = nimCopy(null, new_seq_361581(0), NTI361585);
											var lats_361617 = nsuSplitString(cstrToNimstr((r_356607.LAT)), makeNimstrLit(","), -1);
											var lngs_361627 = nsuSplitString(cstrToNimstr((r_356607.LON)), makeNimstrLit(","), -1);
											var lat0_361628 = 0.0;
											var lng0_361629 = 0.0;
											L29: do {
												var i_361644 = 0;
												var colontmp__393556 = 0;
												colontmp__393556 = (lats_361617 != null ? (lats_361617.length-1) : -1);
												var res_393557 = 0;
												L30: do {
														L31: while (true) {
														if (!(res_393557 <= colontmp__393556)) break L31;
															i_361644 = res_393557;
															if (eqStrings(nsuStrip(lats_361617[chckIndx(i_361644, 0, lats_361617.length+0-1)-0], true, true, ConstSet7), [])) {
															Tmp32 = lat0_361628;
															}
															else {
															Tmp32 = (lat0_361628 + nsuParseFloat(nsuStrip(lats_361617[chckIndx(i_361644, 0, lats_361617.length+0-1)-0], true, true, ConstSet15)));
															}
															
															var str_lat_361647 = Tmp32;
															if (eqStrings(nsuStrip(lngs_361627[chckIndx(i_361644, 0, lngs_361627.length+0-1)-0], true, true, ConstSet16), [])) {
															Tmp33 = lng0_361629;
															}
															else {
															Tmp33 = (lng0_361629 + nsuParseFloat(nsuStrip(lngs_361627[chckIndx(i_361644, 0, lngs_361627.length+0-1)-0], true, true, ConstSet17)));
															}
															
															var str_lng_361650 = Tmp33;
															if ((Tmp35 = (Tmp34 = HEX5BHEX5D_345932(all_links_300614[0], link_id_356617), Tmp34)[0][Tmp34[1]].geometry, Tmp35) != null) { Tmp35.push({lat: nimCopy(null, (str_lat_361647 / 1.0000000000000000e+005), NTI243016), lng: nimCopy(null, (str_lng_361650 / 1.0000000000000000e+005), NTI243018), m_type: NTI300026}); } else { Tmp35 = [{lat: nimCopy(null, (str_lat_361647 / 1.0000000000000000e+005), NTI243016), lng: nimCopy(null, (str_lng_361650 / 1.0000000000000000e+005), NTI243018), m_type: NTI300026}]; };
															lat0_361628 = str_lat_361647;
															lng0_361629 = str_lng_361650;
															res_393557 = addInt(res_393557, 1);
														}
												} while(false);
											} while(false);
											}
											else {
											if ((r_356607.POSTAL_CODES)) {
											(Tmp36 = HEX5BHEX5D_345932(all_links_300614[0], link_id_356617), Tmp36)[0][Tmp36[1]].cityId = nsuParseInt((Tmp38 = nsuSplitString((Tmp37 = nsuSplitString(cstrToNimstr((r_356607.ADMIN_PLACE_IDS)), makeNimstrLit(","), -1), Tmp37)[chckIndx(3, 0, Tmp37.length+0-1)-0], makeNimstrLit(";"), -1), Tmp38)[chckIndx(0, 0, Tmp38.length+0-1)-0]);
											var distr_prt_362007 = nimCopy(null, (Tmp39 = nsuSplitString(cstrToNimstr((r_356607.ADMIN_PLACE_IDS)), makeNimstrLit(","), -1), Tmp39)[chckIndx(4, 0, Tmp39.length+0-1)-0], NTI44040);
											if ((eqStrings(distr_prt_362007, []) || (distr_prt_362007[chckIndx(0, 0, distr_prt_362007.length+0-1)-0] == 59))) {
											Tmp40 = 0;
											}
											else {
											Tmp40 = nsuParseInt((Tmp41 = nsuSplitString(distr_prt_362007, makeNimstrLit(";"), -1), Tmp41)[chckIndx(0, 0, Tmp41.length+0-1)-0]);
											}
											
											var district_id_362204 = Tmp40;
											(Tmp42 = HEX5BHEX5D_345932(all_links_300614[0], link_id_356617), Tmp42)[0][Tmp42[1]].districtId = addInt(district_id_362204, (Tmp43 = HEX5BHEX5D_345932(all_links_300614[0], link_id_356617), Tmp43)[0][Tmp43[1]].cityId);
											(Tmp44 = HEX5BHEX5D_345932(all_links_300614[0], link_id_356617), Tmp44)[0][Tmp44[1]].postalCode = nimCopy(null, (Tmp45 = nsuSplitString(cstrToNimstr((r_356607.POSTAL_CODES)), makeNimstrLit(";"), -1), Tmp45)[chckIndx(0, 0, Tmp45.length+0-1)-0], NTI44040);
											}
											else {
											if ((r_356607.REF_NODE_NEIGHBOR_LINKS)) {
											var r_links_362715 = cstrToNimstr((r_356607.REF_NODE_NEIGHBOR_LINKS));
											var non_rlinks_362725 = cstrToNimstr((r_356607.NONREF_NODE_NEIGHBOR_LINKS));
											var ref_links_362726 = nsuSplitString(r_links_362715, makeNimstrLit(","), -1);
											var non_ref_links_362727 = nsuSplitString(non_rlinks_362725, makeNimstrLit(","), -1);
											var ref_links_int_362870 = map_362821(ref_links_362726, HEX3Aanonymous_362801);
											if (eqStrings(non_rlinks_362725, [])) {
											Tmp46 = new_seq_362883(0);
											}
											else {
											Tmp46 = map_362821(non_ref_links_362727, HEX3Aanonymous_362910);
											}
											
											var non_ref_links_int_362940 = nimCopy(null, Tmp46, NTI362887);
											(Tmp47 = HEX5BHEX5D_345932(all_links_300614[0], link_id_356617), Tmp47)[0][Tmp47[1]].neighborLinks = nimCopy(null, concat_363110([nimCopy(null, ref_links_int_362870, NTI363102), nimCopy(null, non_ref_links_int_362940, NTI363107)]), NTI363116);
											}
											}}}
											var street_363366 = nimCopy(null, (Tmp48 = HEX5BHEX5D_345932(all_links_300614[0], link_id_356617), Tmp48)[0][Tmp48[1]].name, NTI44040);
												if (!!(eqStrings(street_363366, []))) Tmp49 = false; else {													Tmp49 = ((Tmp50 = HEX5BHEX5D_345932(all_links_300614[0], link_id_356617), Tmp50)[0][Tmp50[1]].cityId == city_id_302615[0]);												}											if (Tmp49) {
											if (!(has_key_or_put_363643(all_streets_301014[0], street_363366, {name: nimCopy(null, street_363366, NTI44040), links: new_seq_363616(0), m_type: NTI300044, sector: null}))) {
											}
											
											if ((Tmp53 = (Tmp51 = HEX5BHEX5D_321404(all_streets_301014[0], street_363366), Tmp51)[0][Tmp51[1]].links, Tmp53) != null) { Tmp53.push((Tmp52 = HEX5BHEX5D_345932(all_links_300614[0], link_id_356617), Tmp52)[0][Tmp52[1]]); } else { Tmp53 = [(Tmp52 = HEX5BHEX5D_345932(all_links_300614[0], link_id_356617), Tmp52)[0][Tmp52[1]]]; };
											}
											
											has_key_or_put_368066(cached_tiles_301414[0], tile_id_356483, t_356414);
										} while(false);
										i_393570 = addInt(i_393570, 1);
										if (!(((rows_356426 != null ? rows_356426.length : 0) == l_393571))) {
										failed_assert_impl_58851(makeNimstrLit("iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						i_393573 = addInt(i_393573, 1);
						if (!(((tiles_356059 != null ? tiles_356059.length : 0) == l_393574))) {
						failed_assert_impl_58851(makeNimstrLit("iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		L54: do {
			var k_372134 = 0;
			var v_372135 = null;
			var v_372135_Idx = 0;
			var l_393577 = len_355336(all_links_300614[0]);
			L55: do {
				var h_393579 = 0;
				var colontmp__393580 = 0;
				colontmp__393580 = (all_links_300614[0].data != null ? (all_links_300614[0].data.length-1) : -1);
				var res_393581 = 0;
				L56: do {
						L57: while (true) {
						if (!(res_393581 <= colontmp__393580)) break L57;
							h_393579 = res_393581;
							if (is_filled_228418(all_links_300614[0].data[chckIndx(h_393579, 0, all_links_300614[0].data.length+0-1)-0].Field0)) {
							k_372134 = all_links_300614[0].data[chckIndx(h_393579, 0, all_links_300614[0].data.length+0-1)-0].Field1;
							v_372135 = all_links_300614[0].data[chckIndx(h_393579, 0, all_links_300614[0].data.length+0-1)-0]; v_372135_Idx = "Field2";
							v_372135[v_372135_Idx].readOnly = true;
							if (!((len_355336(all_links_300614[0]) == l_393577))) {
							failed_assert_impl_58851(makeNimstrLit("tables.nim(691, 13) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
							}
							
							}
							
							res_393581 = addInt(res_393581, 1);
						}
				} while(false);
			} while(false);
		} while(false);
		sort_372313(all_streets_301014[0], sort_street_tbl_372244, 1);
		display_street_340692((Tmp58 = HEX5BHEX5D_345932(all_links_300614[0], clck_link_id_302619[0]), Tmp58)[0][Tmp58[1]].name, true);
		if (!(has_key_313136(all_sectors_301814[0], sect_name_302621[0]))) {
		HEX5BHEX5DHEX3D_374670(last_postfix_302214[0], postal_code_302620[0], subInt((Tmp59 = HEX5BHEX5D_302974(last_postfix_302214[0], postal_code_302620[0]), Tmp59)[0][Tmp59[1]], 1));
		}
		
		sort_378236(all_sectors_301814[0], sort_sector_tbl_378167, 1);
		redraw_278814(kxi_269324[0]);

	
}

		function HEX3Aanonymous_380094(res_380096) {
				var tiles_380212 = (res_380096.Tiles);
				L1: do {
					var k_381014 = null;
					var v_381015 = null;
					var l_393515 = len_380346(cached_tiles_301414[0]);
					L2: do {
						var h_393517 = 0;
						var colontmp__393518 = 0;
						colontmp__393518 = (cached_tiles_301414[0].data != null ? (cached_tiles_301414[0].data.length-1) : -1);
						var res_393519 = 0;
						L3: do {
								L4: while (true) {
								if (!(res_393519 <= colontmp__393518)) break L4;
									h_393517 = res_393519;
									if (is_filled_228418(cached_tiles_301414[0].data[chckIndx(h_393517, 0, cached_tiles_301414[0].data.length+0-1)-0].Field0)) {
									k_381014 = cached_tiles_301414[0].data[chckIndx(h_393517, 0, cached_tiles_301414[0].data.length+0-1)-0].Field1;
									v_381015 = cached_tiles_301414[0].data[chckIndx(h_393517, 0, cached_tiles_301414[0].data.length+0-1)-0].Field2;
									if (tiles_380212 != null) { tiles_380212.push(v_381015); } else { tiles_380212 = [v_381015]; };
									if (!((len_380346(cached_tiles_301414[0]) == l_393515))) {
									failed_assert_impl_58851(makeNimstrLit("tables.nim(669, 13) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
									}
									
									}
									
									res_393519 = addInt(res_393519, 1);
								}
						} while(false);
					} while(false);
				} while(false);
				parse_tiles_356056(tiles_380212);

			
		}

		function HEX3Aanonymous_381052(e_381054) {
			
		}

		function HEX3Aanonymous_381069(res_381071) {
			BeforeRet: do {
				var layer_obj_381075 = res_381071.Layers[0];
				var e_pnt_381076 = function(){return H.service.extension.platformData.Service.EntryPoint}();
				var e_pnt_type_381077 = function(){return H.service.extension.platformData.Service.EntryPointType}();
				var prms_pde_381201 = {};
				var t_xys_381218 = new_seq_82833(0);
				var layers_381229 = [makeNimstrLit("ROAD_ADMIN_FC"), makeNimstrLit("ROAD_GEOM_FC"), makeNimstrLit("ROAD_NAME_FC"), makeNimstrLit("LINK_FC")];
				var r_layers_381246 = new_seq_82833(0);
				var levels_381263 = new_seq_82833(0);
				var tile_xys_381275 = (layer_obj_381075.tileXYs);
				var level_381285 = (layer_obj_381075.level);
				var all_crds_381325 = new_seq_381299(0);
				var prev_txys_381614 = [init_table_381332(64)];
				L1: do {
					var xy_381621 = null;
					var i_393439 = 0;
					var l_393440 = (tile_xys_381275 != null ? tile_xys_381275.length : 0);
					L2: do {
							L3: while (true) {
							if (!(i_393439 < l_393440)) break L3;
								xy_381621 = tile_xys_381275[chckIndx(i_393439, 0, tile_xys_381275.length+0-1)-0];
								var tx_381631 = (xy_381621.x);
								var ty_381641 = (xy_381621.y);
								var latlng_381642 = get_coord_246015(level_381285, tx_381631, ty_381641);
								HEX5BHEX5DHEX3D_381773(prev_txys_381614[0], nsuJoinSep([cstrToNimstr((level_381285)+""), cstrToNimstr((tx_381631)+""), cstrToNimstr((ty_381641)+"")], makeNimstrLit("_")), {Field0: level_381285, Field1: tx_381631, Field2: ty_381641});
								if (all_crds_381325 != null) { all_crds_381325.push({Field0: latlng_381642["Field0"], Field1: latlng_381642["Field1"]}); } else { all_crds_381325 = [{Field0: latlng_381642["Field0"], Field1: latlng_381642["Field1"]}]; };
								i_393439 = addInt(i_393439, 1);
								if (!(((tile_xys_381275 != null ? tile_xys_381275.length : 0) == l_393440))) {
								failed_assert_impl_58851(makeNimstrLit("iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);
				L4: do {
					var lvl_385810 = 0;
					var res_393448 = 10;
					L5: do {
							L6: while (true) {
							if (!(res_393448 <= 13)) break L6;
								lvl_385810 = res_393448;
								L7: do {
									var crd_386014 = {Field0: 0.0, Field1: 0.0};
									var i_393445 = 0;
									var l_393446 = (all_crds_381325 != null ? all_crds_381325.length : 0);
									L8: do {
											L9: while (true) {
											if (!(i_393445 < l_393446)) break L9;
												nimCopy(crd_386014, all_crds_381325[chckIndx(i_393445, 0, all_crds_381325.length+0-1)-0], NTI381288);
												var txy_386015 = get_tile_xy_246061(lvl_385810, crd_386014["Field0"], crd_386014["Field1"]);
												var k_386026 = nsuJoinSep([cstrToNimstr((lvl_385810)+""), cstrToNimstr((txy_386015["Field0"])+""), cstrToNimstr((txy_386015["Field1"])+"")], makeNimstrLit("_"));
												has_key_or_put_386281(prev_txys_381614[0], k_386026, {Field0: lvl_385810, Field1: txy_386015["Field0"], Field2: txy_386015["Field1"]});
												i_393445 = addInt(i_393445, 1);
												if (!(((all_crds_381325 != null ? all_crds_381325.length : 0) == l_393446))) {
												failed_assert_impl_58851(makeNimstrLit("iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
												}
												
											}
									} while(false);
								} while(false);
								res_393448 = addInt(res_393448, 1);
							}
					} while(false);
				} while(false);
				L10: do {
					var lr_387615 = null;
					var i_393472 = 0;
					var l_393473 = (layers_381229 != null ? layers_381229.length : 0);
					L11: do {
							L12: while (true) {
							if (!(i_393472 < l_393473)) break L12;
								lr_387615 = layers_381229[chckIndx(i_393472, 0, layers_381229.length+0-1)-0];
								L13: do {
									var lvl_tx_ty_388414 = {Field0: 0, Field1: 0, Field2: 0};
									var l_393463 = len_387748(prev_txys_381614[0]);
									L14: do {
										var h_393465 = 0;
										var colontmp__393466 = 0;
										colontmp__393466 = (prev_txys_381614[0].data != null ? (prev_txys_381614[0].data.length-1) : -1);
										var res_393467 = 0;
										L15: do {
												L16: while (true) {
												if (!(res_393467 <= colontmp__393466)) break L16;
													h_393465 = res_393467;
													if (is_filled_228418(prev_txys_381614[0].data[chckIndx(h_393465, 0, prev_txys_381614[0].data.length+0-1)-0].Field0)) {
													nimCopy(lvl_tx_ty_388414, prev_txys_381614[0].data[chckIndx(h_393465, 0, prev_txys_381614[0].data.length+0-1)-0].Field2, NTI381327);
													L17: do {
														var x_str_388415 = cstrToNimstr((lvl_tx_ty_388414.Field1)+"");
														var y_str_388416 = cstrToNimstr((lvl_tx_ty_388414.Field2)+"");
														var level_388417 = lvl_tx_ty_388414.Field0;
														var layer_name_388418 = (lr_387615 || []).concat(cstrToNimstr((subInt(level_388417, 8))+"") || []);
														if (has_key_388538(cached_tiles_301414[0], nsuJoinSep([nimCopy(null, x_str_388415, NTI44040), nimCopy(null, y_str_388416, NTI44040), cstrToNimstr((level_388417)+""), nimCopy(null, layer_name_388418, NTI44040)], makeNimstrLit("_")))) {
														break L17;
														}
														
														if (t_xys_381218 != null) { t_xys_381218.push((x_str_388415 || []).concat(makeNimstrLit(",") || [],y_str_388416 || [])); } else { t_xys_381218 = [(x_str_388415 || []).concat(makeNimstrLit(",") || [],y_str_388416 || [])]; };
														if (levels_381263 != null) { levels_381263.push(cstrToNimstr((level_388417)+"")); } else { levels_381263 = [cstrToNimstr((level_388417)+"")]; };
														var Tmp18 = nimCopy(null, layer_name_388418, NTI44040);
														if (r_layers_381246 != null) { r_layers_381246.push(Tmp18); } else { r_layers_381246 = [Tmp18]; };
													} while(false);
													if (!((len_387748(prev_txys_381614[0]) == l_393463))) {
													failed_assert_impl_58851(makeNimstrLit("tables.nim(733, 13) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
													}
													
													}
													
													res_393467 = addInt(res_393467, 1);
												}
										} while(false);
									} while(false);
								} while(false);
								i_393472 = addInt(i_393472, 1);
								if (!(((layers_381229 != null ? layers_381229.length : 0) == l_393473))) {
								failed_assert_impl_58851(makeNimstrLit("iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);
				if (((r_layers_381246 != null ? r_layers_381246.length : 0) == 0)) {
				var tiles_388632 = new_seq_388605(0);
				L19: do {
					var k_388640 = null;
					var v_388641 = null;
					var l_393483 = len_380346(cached_tiles_301414[0]);
					L20: do {
						var h_393485 = 0;
						var colontmp__393486 = 0;
						colontmp__393486 = (cached_tiles_301414[0].data != null ? (cached_tiles_301414[0].data.length-1) : -1);
						var res_393487 = 0;
						L21: do {
								L22: while (true) {
								if (!(res_393487 <= colontmp__393486)) break L22;
									h_393485 = res_393487;
									if (is_filled_228418(cached_tiles_301414[0].data[chckIndx(h_393485, 0, cached_tiles_301414[0].data.length+0-1)-0].Field0)) {
									k_388640 = cached_tiles_301414[0].data[chckIndx(h_393485, 0, cached_tiles_301414[0].data.length+0-1)-0].Field1;
									v_388641 = cached_tiles_301414[0].data[chckIndx(h_393485, 0, cached_tiles_301414[0].data.length+0-1)-0].Field2;
									if (tiles_388632 != null) { tiles_388632.push(v_388641); } else { tiles_388632 = [v_388641]; };
									if (!((len_380346(cached_tiles_301414[0]) == l_393483))) {
									failed_assert_impl_58851(makeNimstrLit("tables.nim(669, 13) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
									}
									
									}
									
									res_393487 = addInt(res_393487, 1);
								}
						} while(false);
					} while(false);
				} while(false);
				parse_tiles_356056(tiles_388632);
				break BeforeRet;
				}
				
				prms_pde_381201.layers = toJSStr(nsuJoinSep(r_layers_381246, makeNimstrLit(",")));
				prms_pde_381201.levels = toJSStr(nsuJoinSep(levels_381263, makeNimstrLit(",")));
				prms_pde_381201.tilexy = toJSStr(nsuJoinSep(t_xys_381218, makeNimstrLit(",")));
				prms_pde_381201.meta = 1;
				pde_service_335574[0].request(e_pnt_381076.TILES, e_pnt_type_381077.JSON, prms_pde_381201, on_res_road_geom_381051, on_err_road_geom_381068);
			} while (false);

			
		}

		function HEX3Aanonymous_388890(e_388892) {
			
		}

		function HEX3Aanonymous_388907(r_388909) {
				var Tmp1;
					var Tmp5;
				var Tmp6;
				var Tmp7;
					var Tmp8;
				var Tmp9;
				var Tmp10;

			BeforeRet: do {
				var res_388910 = r_388909;
				var map_reference_388926 = res_388910.response.view[0].result[0].location.mapReference;
				var city_shape_388951 = (res_388910.response.view[0].result[0].location.shape.value);
				var city_geo_388952 = function(wkt){return new H.util.wkt.toGeometry(wkt)}(city_shape_388951);
				var address_388968 = res_388910.response.view[0].result[0].location.address;
				var link_id_388972 = map_reference_388926.referenceId;
				clck_link_id_302619[0] = (link_id_388972);
				if ((city_geo_388952.getExterior === undefined)) {
				Tmp1 = city_geo_388952.getGeometries();
				}
				else {
				Tmp1 = [city_geo_388952];
				}
				
				var geoms_388996 = nimCopy(null, Tmp1, NTI243143);
				L2: do {
					var g_389414 = null;
					var i_393501 = 0;
					var l_393502 = (geoms_388996 != null ? geoms_388996.length : 0);
					L3: do {
							L4: while (true) {
							if (!(i_393501 < l_393502)) break L4;
								g_389414 = geoms_388996[chckIndx(i_393501, 0, geoms_388996.length+0-1)-0];
								var ln_str_389419 = g_389414.getExterior();
								var p_opt_389601 = {style: {strokeColor: "rgba(0, 255, 255, 1)", fillColor: "rgba(0, 255, 255, 1)", lineWidth: 10, m_type: NTI244076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, m_type: NTI244081, zIndex: 0};
								var pl_389602 = function(ls, options){return new H.map.Polyline(ls, options)}(ln_str_389419, p_opt_389601);
								if ((city_id_302615[0] == 0)) {
								map.addObject(pl_389602);
								}
								
								i_393501 = addInt(i_393501, 1);
								if (!(((geoms_388996 != null ? geoms_388996.length : 0) == l_393502))) {
								failed_assert_impl_58851(makeNimstrLit("iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
								}
								
							}
					} while(false);
				} while(false);
				var rev_city_id_389815 = nsuParseInt(cstrToNimstr((map_reference_388926.cityId)));
				var rev_postal_code_389825 = cstrToNimstr((address_388968.postalCode));
					if (!!((city_id_302615[0] == 0))) Tmp5 = false; else {						Tmp5 = !((rev_city_id_389815 == city_id_302615[0]));					}				if (Tmp5) {
				break BeforeRet;
				}
				
				city_id_302615[0] = rev_city_id_389815;
				postal_code_302620[0] = nimCopy(null, rev_postal_code_389825, NTI44040);
				if ((map_reference_388926.districtId)) {
				Tmp6 = nsuParseInt(cstrToNimstr((map_reference_388926.districtId)));
				}
				else {
				Tmp6 = 0;
				}
				
				district_id_302616[0] = Tmp6;
				addr_city_302618[0] = nimCopy(null, cstrToNimstr((address_388968.city)), NTI44040);
					if ((address_388968.district === undefined)) Tmp8 = true; else {						Tmp8 = eqStrings(cstrToNimstr((address_388968.district)), addr_city_302618[0]);					}				if (Tmp8) {
				Tmp7 = [];
				}
				else {
				Tmp7 = cstrToNimstr((address_388968.district));
				}
				
				addr_distr_302617[0] = nimCopy(null, Tmp7, NTI44040);
				has_key_or_put_390131(last_postfix_302214[0], postal_code_302620[0], 0);
				HEX5BHEX5DHEX3D_374670(last_postfix_302214[0], postal_code_302620[0], addInt((Tmp9 = HEX5BHEX5D_302974(last_postfix_302214[0], postal_code_302620[0]), Tmp9)[0][Tmp9[1]], 1));
				var p_fix_391857 = (Tmp10 = HEX5BHEX5D_302974(last_postfix_302214[0], postal_code_302620[0]), Tmp10)[0][Tmp10[1]];
				var seq_sect_name_391874 = new_seq_82833(0);
				if (seq_sect_name_391874 != null) { seq_sect_name_391874.push((postal_code_302620[0] || []).concat(makeNimstrLit("-") || [],cstrToNimstr((p_fix_391857)+"") || [])); } else { seq_sect_name_391874 = [(postal_code_302620[0] || []).concat(makeNimstrLit("-") || [],cstrToNimstr((p_fix_391857)+"") || [])]; };
				sect_name_302621[0] = nimCopy(null, nsuJoinSep(seq_sect_name_391874, makeNimstrLit(" ")), NTI44040);
				var e_pnt_392001 = function(){return H.service.extension.platformData.Service.EntryPoint}();
				var e_pnt_type_392002 = function(){return H.service.extension.platformData.Service.EntryPointType}();
				var prms_pde_392003 = {};
				prms_pde_392003.layer = "ROAD_GEOM_FCn";
				prms_pde_392003.attributes = "LINK_ID";
				prms_pde_392003.values = (link_id_388972);
				var z_key_392043 = (makeNimstrLit("z") || []).concat(addr_city_302618[0] || [],makeNimstrLit("-1") || []);
				if (!(has_key_313136(all_sectors_301814[0], z_key_392043))) {
				HEX5BHEX5DHEX3D_314117(all_sectors_301814[0], z_key_392043, {exclude: true, pFix: 1, city: [], postalCode: (makeNimstrLit("z") || []).concat(addr_city_302618[0] || []), district: [], m_type: NTI300050, streets: {data: null, counter: 0, first: 0, last: 0}, shownOnMap: false});
				}
				
				pde_service_335574[0].request(e_pnt_392001.INDEX, e_pnt_type_392002.JSON, prms_pde_392003, on_res_index_road_geom_388889, on_err_index_road_geom_388906);
			} while (false);

			
		}

		function HEX3Aanonymous_392445(e_392447) {
			
		}

		var p_e_355106 = e_302782;
		main_group_335549[0].removeAll();
		L1: do {
			var k_356015 = 0;
			var v_356016 = null;
			var v_356016_Idx = 0;
			var l_393423 = len_355336(all_links_300614[0]);
			L2: do {
				var h_393425 = 0;
				var colontmp__393426 = 0;
				colontmp__393426 = (all_links_300614[0].data != null ? (all_links_300614[0].data.length-1) : -1);
				var res_393427 = 0;
				L3: do {
						L4: while (true) {
						if (!(res_393427 <= colontmp__393426)) break L4;
							h_393425 = res_393427;
							if (is_filled_228418(all_links_300614[0].data[chckIndx(h_393425, 0, all_links_300614[0].data.length+0-1)-0].Field0)) {
							k_356015 = all_links_300614[0].data[chckIndx(h_393425, 0, all_links_300614[0].data.length+0-1)-0].Field1;
							v_356016 = all_links_300614[0].data[chckIndx(h_393425, 0, all_links_300614[0].data.length+0-1)-0]; v_356016_Idx = "Field2";
							v_356016[v_356016_Idx].addedToMap = false;
							if (!((len_355336(all_links_300614[0]) == l_393423))) {
							failed_assert_impl_58851(makeNimstrLit("tables.nim(691, 13) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
							}
							
							}
							
							res_393427 = addInt(res_393427, 1);
						}
				} while(false);
			} while(false);
		} while(false);
		var geo_point_356017 = map.screenToGeo(p_e_355106.currentPointer.viewportX, p_e_355106.currentPointer.viewportY);
		var reverse_geocoding_parameters_356018 = {m_type: NTI288123, jsonattributes: 0, mode: null, prox: null, maxResults: 0, additionaldata: null, locationattributes: null};
		reverse_geocoding_parameters_356018.jsonattributes = 1;
		reverse_geocoding_parameters_356018.prox = toJSStr((cstrToNimstr((geo_point_356017.lat)+"") || []).concat(makeNimstrLit(",") || [],cstrToNimstr((geo_point_356017.lng)+"") || [],makeNimstrLit(",1") || []));
		reverse_geocoding_parameters_356018.mode = "retrieveAddresses";
		reverse_geocoding_parameters_356018.maxResults = 1;
		reverse_geocoding_parameters_356018.additionaldata = "SuppressStreetType,Unnamed";
		reverse_geocoding_parameters_356018.locationattributes = "linkInfo";
		reverse_geocoding_parameters_356018.additionaldata = "IncludeShapeLevel,city";
		var rgcp_356019 = reverse_geocoding_parameters_356018;
		var on_res_road_geom_381051 = HEX3Aanonymous_380094;
		var on_err_road_geom_381068 = HEX3Aanonymous_381052;
		var on_res_index_road_geom_388889 = HEX3Aanonymous_381069;
		var on_err_index_road_geom_388906 = HEX3Aanonymous_388890;
		var on_res_rev_geo_392444 = HEX3Aanonymous_388907;
		var on_err_rev_geo_392461 = HEX3Aanonymous_392445;
		geocoder_335573.reverseGeocode(reverse_geocoding_parameters_356018, on_res_rev_geo_392444, on_err_rev_geo_392461);

	
}

function map_353207(s_353212, op_353215) {
	var result_353217 = null;

		result_353217 = new Array(chckRange((s_353212 != null ? s_353212.length : 0), 0, 2147483647)); for (var i=0;i<chckRange((s_353212 != null ? s_353212.length : 0), 0, 2147483647);++i) {result_353217[i]=null;}		L1: do {
			var i_353240 = 0;
			var colontmp__393727 = 0;
			colontmp__393727 = (s_353212 != null ? s_353212.length : 0);
			var i_393728 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_393728 < colontmp__393727)) break L3;
						i_353240 = i_393728;
						result_353217[chckIndx(i_353240, 0, result_353217.length+0-1)-0] = nimCopy(null, op_353215(s_353212[chckIndx(i_353240, 0, s_353212.length+0-1)-0]), NTI44040);
						i_393728 = addInt(i_393728, 1);
					}
			} while(false);
		} while(false);

	return result_353217;

}

function nsuSplitCharSet(s_196696, seps_196698, maxsplit_196700) {
	var result_196702 = null;

		result_196702 = nimCopy(null, [], NTI196716);
		L1: do {
			var x_196703 = null;
			var last_393734 = 0;
			var splits_393735 = maxsplit_196700;
			L2: do {
					L3: while (true) {
					if (!(last_393734 <= (s_196696 != null ? s_196696.length : 0))) break L3;
						var first_393737 = last_393734;
						L4: do {
								L5: while (true) {
								if (!((last_393734 < (s_196696 != null ? s_196696.length : 0)) && !((seps_196698[s_196696[chckIndx(last_393734, 0, s_196696.length+0-1)-0]] != undefined)))) break L5;
									last_393734 = addInt(last_393734, 1);
								}
						} while(false);
						if ((splits_393735 == 0)) {
						last_393734 = (s_196696 != null ? s_196696.length : 0);
						}
						
						x_196703 = substr_72822(s_196696, first_393737, subInt(last_393734, 1));
						var Tmp6 = nimCopy(null, x_196703, NTI44040);
						if (result_196702 != null) { result_196702.push(Tmp6); } else { result_196702 = [Tmp6]; };
						if ((splits_393735 == 0)) {
						break L2;
						}
						
						splits_393735 = subInt(splits_393735, 1);
						last_393734 = addInt(last_393734, 1);
					}
			} while(false);
		} while(false);

	return result_196702;

}

function geo_area_353180() {

		function HEX3Aanonymous_353183(item_353185) {

				function HEX3Aanonymous_353187(item_353189) {
					var result_353190 = null;

						result_353190 = nimCopy(null, nsuStrip(item_353189, true, true, ConstSet18), NTI44040);

					return result_353190;

				}

			var result_353186 = null;

				result_353186 = nimCopy(null, nsuJoinSep(map_353207(nsuSplitString(item_353185, makeNimstrLit(","), -1), HEX3Aanonymous_353187), makeNimstrLit(",")), NTI44040);

			return result_353186;

		}

		function HEX3Aanonymous_354001(item_354003) {

				function HEX3Aanonymous_354005(item_354007) {
					var result_354008 = null;

						result_354008 = nimCopy(null, nsuStrip(item_354007, true, true, ConstSet20), NTI44040);

					return result_354008;

				}

			var result_354004 = null;

				result_354004 = nimCopy(null, nsuJoinSep(map_353207(nsuSplitString(item_354003, makeNimstrLit(","), -1), HEX3Aanonymous_354005), makeNimstrLit(",")), NTI44040);

			return result_354004;

		}

		function HEX3Aanonymous_354201(e_354203) {
			
		}

		function HEX3Aanonymous_354218(r_354220) {
				var res_354230 = r_354220.Response.View[0].Result[0];
				var loc_354231 = res_354230["Location"];
				var shp_354244 = cstrToNimstr((loc_354231.Shape.Value));
				var p_opt_354248 = {style: {strokeColor: "rgba(0, 0, 255, 1)", fillColor: "rgba(0, 0, 255, 0.1)", lineWidth: 1, m_type: NTI244076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, zIndex: -99, m_type: NTI244085};
				var pl_354254 = function(ls, opt){return new H.map.Polygon(ls, opt)}(function(wkt){return new H.util.wkt.toGeometry(wkt)}(toJSStr(shp_354244)), p_opt_354248);
				map.addObject(pl_354254);

			
		}

						function HEX3Aanonymous_354615() {

								function HEX3Aanonymous_354618(r_354620) {
										var Tmp1;

										var res_354630 = r_354620.Response.View[0].Result[0];
										var match_lvl_354640 = cstrToNimstr((res_354630.MatchLevel));
										var loc_354801 = res_354630["Location"];
										if ((loc_354801.Shape === undefined)) {
										Tmp1 = makeNimstrLit("city");
										}
										else {
										Tmp1 = makeNimstrLit("district");
										}
										
										var type_shp_355001 = nimCopy(null, Tmp1, NTI44040);
										geocoding_parameters_353801.searchtext = toJSStr(c_354617);
										geocoding_parameters_353801.additionaldata = toJSStr((makeNimstrLit("IncludeShapeLevel,") || []).concat(type_shp_355001 || []));
										geocoder_335573.geocode(geocoding_parameters_353801, on_res_geo_for_map_354459, on_err_geo_354217);

									
								}

								var c_354617 = nimCopy(null, city_354614, NTI44040);
								var on_res_geo_355015 = HEX3Aanonymous_354618;
								geocoding_parameters_353801.searchtext = toJSStr(city_354614);
								geocoder_335573.geocode(geocoding_parameters_353801, on_res_geo_355015, on_err_geo_354217);

							
						}

		var hr_coord_353182 = makeNimstrLit("8.74344999062572,50.04918999904961,0 8.751160000623477,50.0240599912103,0 8.754709994364463,50.01274999536513,0 8.757490069155791,50.00470163525198,0 8.762733428456755,50.00328437886608,0 8.764625619546589,50.00285518138227,0 8.770820082372893,50.00139911723744,0 8.772673791350965,50.00094266817716,0 8.77914111075552,49.99943225272401,0 8.799229992240086,49.99467000542582,0 8.806542356164457,49.99340340620989,0 8.809790356707138,49.99206374565822,0 8.826786125387034,49.98576635583486,0 8.828778769472731,49.98395187720181,0 8.831507689809753,49.98097186169272,0 8.830959149889964,49.97966245881608,0 8.829928960125969,49.9778595543125,0 8.830465197667758,49.9768960693446,0 8.830997048231009,49.97595153004782,0 8.83394675737425,49.97397788936575,0 8.836460977629683,49.97217362668664,0 8.83910802473485,49.96908500881526,0 8.840122212590229,49.96799437118023,0 8.841363208739749,49.9668289258026,0 8.842263170839054,49.96603842183582,0 8.843115976927399,49.96501359037988,0 8.846351833332184,49.9627537294549,0 8.849460013049532,49.95986999442856,0 8.850210000098501,49.95926998619805,0 8.850310012566743,49.95926999267505,0 8.865430008710506,49.95390999382382,0 8.891260000848778,49.94599000213314,0 8.908000004981322,49.96970998840088,0 8.960089986326672,49.98685999774121,0 9.028550004173386,49.98896999905399,0 9.051090005623092,49.98967000446294,0 9.063509599805697,49.99349370576994,0 9.058420003685276,50.00014000125238,0 9.053349983587822,50.00350000123728,0 9.043370001095513,50.00774999264858,0 9.039590003958708,50.01043999620001,0 9.037680002386232,50.0117099996073,0 9.035770000347792,50.01386000058577,0 9.035669991374673,50.01396999599814,0 9.033520003630585,50.01612999279517,0 9.03276999394412,50.01722999549925,0 9.031890007343058,50.01854999140686,0 9.031080010354554,50.02017000106182,0 9.030590017083911,50.02186000123651,0 9.030160003507783,50.02427999548287,0 9.030019994132037,50.02558000112721,0 9.03012998938997,50.02655999787962,0 9.030250000259972,50.02768999624666,0 9.03161000235999,50.03279999301565,0 9.032170004807355,50.0358999942769,0 9.032050012345229,50.03739999588439,0 9.031490007969513,50.03882000226924,0 9.030510014244126,50.04000000228209,0 9.029080001550227,50.04103999783368,0 9.029060008563725,50.04106000232493,0 9.028230008798136,50.04156999577097,0 9.026240009262718,50.04279999711334,0 9.024160016072742,50.04365000084064,0 9.023260013005588,50.04386000537015,0 9.019740018159242,50.04436999886058,0 9.017760016210493,50.04465999781608,0 9.013460007365307,50.04553999270155,0 9.011000004708681,50.04575999839583,0 9.00992999888183,50.04561998877342,0 9.008480008624115,50.04557998927629,0 9.005680013424682,50.04550000056366,0 8.986750005661659,50.04149000275402,0 8.978420013141989,50.04530999078934,0 8.976519982950132,50.0514200003693,0 8.982709988738773,50.05690999839843,0 8.986820008613575,50.06226000595279,0 8.987800012679832,50.06321000762544,0 8.989760009887313,50.06513000580236,0 8.990918897321578,50.0669106073983,0 8.9955775301496,50.06892022836311,0 8.998568988963262,50.06893433107653,0 8.999404770882135,50.06967750682338,0 8.99907863971808,50.070980702649,0 8.998540008233778,50.07845000669163,0 8.999480727122569,50.07942879191786,0 8.998936147196799,50.08570047236539,0 8.997979981825159,50.09309999923527,0 9.009470009726822,50.10552999340482,0 9.014060011409995,50.1093099951841,0 9.018390009198136,50.11148999968705,0 9.022280002796611,50.11211998982098,0 9.030180002730933,50.11276999957308,0 9.036709983650752,50.11439000225139,0 9.03690999604585,50.11440999933917,0 9.03949998805237,50.11470999733926,0 9.041409993836245,50.11494000056713,0 9.043569987178085,50.11518999631258,0 9.047210001617215,50.1158499945509,0 9.05294999694393,50.11569999345475,0 9.055779984887241,50.11657998906307,0 9.062110001201511,50.11675000135271,0 9.065399990762362,50.11700000561905,0 9.071007549127517,50.11922371673292,0 9.076630005563471,50.1161700007584,0 9.077190003068765,50.115860002529,0 9.090149996865359,50.11705999751791,0 9.097210008411061,50.12491999822693,0 9.097229998645521,50.12493000896303,0 9.097450000598039,50.12500001156322,0 9.100480005609697,50.12522999907779,0 9.101720017827175,50.12503999964554,0 9.104050013666759,50.12524999543405,0 9.106250000414615,50.1255599977141,0 9.106320013833074,50.12556999995883,0 9.11103000773252,50.12645000491829,0 9.112480002104718,50.12650000158009,0 9.118190018941625,50.12683999405951,0 9.11824001589531,50.12684999758118,0 9.119370021092625,50.12667000066124,0 9.120230000806123,50.12640000226687,0 9.121240007930481,50.12608999931724,0 9.122669997795143,50.1251799912294,0 9.125470008557192,50.12341000006478,0 9.129070017631035,50.12185001116103,0 9.134449996804847,50.11918999923478,0 9.134810008978569,50.11920999602372,0 9.134890001642818,50.11917000907523,0 9.138790008249355,50.11738000700088,0 9.143799995794254,50.11436000115628,0 9.153480013609004,50.1177800012857,0 9.174246170565004,50.11909431140469,0 9.178573419936008,50.12093255348469,0 9.187279993149794,50.12424999394975,0 9.190869996641968,50.12840999555607,0 9.190140006470225,50.12852999126118,0 9.189239992099489,50.12886999244492,0 9.18859001078415,50.13008000182714,0 9.188529991233642,50.13068000290921,0 9.188270001636816,50.13122999393559,0 9.187689999246999,50.13169000225765,0 9.186230008527531,50.13220000137167,0 9.184630011698792,50.13358999951587,0 9.184889997736651,50.13418000049787,0 9.184539995171448,50.13461999983619,0 9.183930004443509,50.13530000248941,0 9.183950002803973,50.135519998149,0 9.183550012978392,50.13613999783406,0 9.183569996231322,50.13690999406499,0 9.18340000738119,50.13743999921365,0 9.183380014260379,50.13787000106181,0 9.190900001716518,50.139159993859,0 9.193700011750751,50.13930999759451,0 9.19464001127551,50.13981000038044,0 9.195470000586393,50.14028998889953,0 9.196120007766066,50.14010998828039,0 9.196500004917223,50.14001998961674,0 9.197040001756861,50.14030999242293,0 9.199190010294648,50.14073999922731,0 9.200440003999781,50.14084998669727,0 9.201030013515277,50.14057999207999,0 9.203099982949214,50.14095000662204,0 9.205299986371029,50.14180000860304,0 9.206359985346644,50.142070008102,0 9.207580000543322,50.14207999782826,0 9.209859987405412,50.14242999853374,0 9.210280003353484,50.1423899976447,0 9.210799991009644,50.14220999766564,0 9.21077998816282,50.1435000057295,0 9.211479992867652,50.14477000460019,0 9.214099996581536,50.14445000468506,0 9.218959999344854,50.14661000455769,0 9.221479995862085,50.14939999389495,0 9.225630001631478,50.14855000094843,0 9.23032000616189,50.14765999014259,0 9.232970002625747,50.14675999789494,0 9.233769992622126,50.14662999691726,0 9.235819988502438,50.14626998818617,0 9.240770008871321,50.14369999990418,0 9.250599997697448,50.14088999946022,0 9.253009998704444,50.13936000061953,0 9.257409988922282,50.13877999779094,0 9.258539987369192,50.13882999185971,0 9.261029985191303,50.13894999352718,0 9.26667000168456,50.13956998800712,0 9.270219998473655,50.14184999133448,0 9.271399995864714,50.14201999982645,0 9.276349996686779,50.14272000476213,0 9.281169993334959,50.14154000700376,0 9.281790004285499,50.14151999702619,0 9.28505000417664,50.14177000501881,0 9.294040000079619,50.13933999639883,0 9.298069993519123,50.13708999386204,0 9.304220003766982,50.13527001045085,0 9.307460002912588,50.13401000172517,0 9.3099899963248,50.13394000197258,0 9.313210010638157,50.13483999891268,0 9.317820007007097,50.13657000315733,0 9.32087000656426,50.13792000208673,0 9.327880001083775,50.14102000396739,0 9.332359997806428,50.13920999562789,0 9.335839993928891,50.13698998995007,0 9.336390008811645,50.13671999110127,0 9.339360000403303,50.13273000018819,0 9.341829993133189,50.1314900069315,0 9.349580011888042,50.13060000490764,0 9.357900000002719,50.1309800011009,0 9.364500003588615,50.1308599976779,0 9.373790012600809,50.13085001035299,0 9.374940014378062,50.13078000272372,0 9.376428136780461,50.13060459037479,0 9.375980001360301,50.12583000875451,0 9.380379996288745,50.12133000326065,0 9.382299998223088,50.11936999839725,0 9.384039990002806,50.11687999723922,0 9.386960003003646,50.1104799943284,0 9.392690004434337,50.10208999192354,0 9.39389999043634,50.09908999048587,0 9.39441999471242,50.09769998717655,0 9.395280005887983,50.09654000569314,0 9.398049991407143,50.09346000849757,0 9.399579989575344,50.09215000204925,0 9.401979985879303,50.08986000850655,0 9.404899991283124,50.08774999576386,0 9.408080014793335,50.08628000072305,0 9.410360008182412,50.08474000191088,0 9.412109999917282,50.08400999347561,0 9.414540018844249,50.08372999722369,0 9.416490008385686,50.08366999838898,0 9.419320007524787,50.08447000100686,0 9.421189997530622,50.08477000057801,0 9.421729983690359,50.0848199989533,0 9.422609992020972,50.0848999888351,0 9.424210000439418,50.08487999332674,0 9.426209991743331,50.08466000872539,0 9.426650001161059,50.08445000438933,0 9.427099982830001,50.08406000313204,0 9.427139990696315,50.08406000087415,0 9.427652721408091,50.08399998652941,0 9.433353179705726,50.08402470953537,0 9.435354143826626,50.08505389047933,0 9.436088619491672,50.08522879361796,0 9.438430526576967,50.08697187563428,0 9.440104382080714,50.08699613917442,0 9.445369991346254,50.08990999762638,0 9.447630008726817,50.08999999740072,0 9.450919994621692,50.09031000114513,0 9.452070007349786,50.0907899928403,0 9.454410007723135,50.09108999360934,0 9.460950000938215,50.09060999515631,0 9.462300008199286,50.0910400032701,0 9.463400013428359,50.09106000139991,0 9.464200003484436,50.09124000726924,0 9.465530012619313,50.09153000694008,0 9.468800008351925,50.09136999634158,0 9.470470017914517,50.09143000256835,0 9.472329999587991,50.09161000390467,0 9.473620019051696,50.09215000133324,0 9.474920003056653,50.09292999912699,0 9.476870017014669,50.09377000009614,0 9.478919993936698,50.09430999575569,0 9.481419984146658,50.0947799948108,0 9.483559984403359,50.09436999910113,0 9.485509981915525,50.09412999558609,0 9.48570999585527,50.09412000396971,0 9.487359987494594,50.09400999892856,0 9.490429987404328,50.09412999491645,0 9.493209983692267,50.09459999267533,0 9.495159986345893,50.09531999217066,0 9.496829992324216,50.09657999894574,0 9.498319988002368,50.09723999301944,0 9.49989998994757,50.09718000287389,0 9.501569988519432,50.09664000069188,0 9.502680008048856,50.09603999797577,0 9.504629999438921,50.09574000956214,0 9.506760006872188,50.09622000084823,0 9.507140003812562,50.09742000406875,0 9.507229996886643,50.09819000714014,0 9.50669001130621,50.09907000222062,0 9.507150006893196,50.09931999902311,0 9.50923999463094,50.09956000551333,0 9.512149998788429,50.09941000120356,0 9.512820008669731,50.0990800014653,0 9.513100009864747,50.09966999606637,0 9.518980005320945,50.10612000219624,0 9.523749987770032,50.10609999798064,0 9.509789996972424,50.14568999412518,0 9.510159999038692,50.17993000361417,0 9.523900010995279,50.20862999333181,0 9.497610010511844,50.23025999464183,0 9.465759992135864,50.23500999995167,0 9.427309998664841,50.28948999496187,0 9.39269000551494,50.33608999941583,0 9.354189991318192,50.3790699957637,0 9.352780014398681,50.43896001016936,0 9.340660001490294,50.4547299998002,0 9.312470000603268,50.45978998838441,0 9.299499989859983,50.45929999898711,0 9.289360011907432,50.45382000673616,0 9.262010012800003,50.40678999774384,0 9.261579990204883,50.37911000208434,0 9.163230003564165,50.3586100105654,0 9.131989998719183,50.34574999621018,0 9.062800000324119,50.32285000000135,0 9.054520002404079,50.31968000467632,0 9.043719996102452,50.32165000058219,0 9.029761680801087,50.32841918451295,0 9.031495109187416,50.31272183455483,0 8.995839452582921,50.30250677011594,0 8.987631336027818,50.30006956026648,0 8.975659492935346,50.29547621167906,0 8.958677331367527,50.28630458701393,0 8.94929415829554,50.28125262914848,0 8.925608601416379,50.27595619488345,0 8.912707196248872,50.26838770369456,0 8.900321281931532,50.26109642163877,0 8.883946027953995,50.2514976812132,0 8.857519269942278,50.24799938088881,0 8.843243933535447,50.24615324039392,0 8.843337919829239,50.24519622029486,0 8.844352709690199,50.23641778130721,0 8.848844132593994,50.23205190395576,0 8.859845616898108,50.22335260208263,0 8.858916319673716,50.22092275483271,0 8.854913957622637,50.21029795607451,0 8.828012506624319,50.20845601508016,0 8.792170003634453,50.19689999140842,0 8.792079997664727,50.19360999114326,0 8.792090007857588,50.19360999589294,0 8.792080005707826,50.1933399969401,0 8.792139995449546,50.18931998969914,0 8.792109992014069,50.18893999697589,0 8.792080000426376,50.18849999434099,0 8.792679986357536,50.18761999891223,0 8.792780002183326,50.18624999797653,0 8.792809992943038,50.1838499994514,0 8.78973001669163,50.17977998885446,0 8.789990009297167,50.17618999887759,0 8.790029994197257,50.17608999350487,0 8.790400013363707,50.1756399975125,0 8.795660002988884,50.17271001146669,0 8.800430009638776,50.17120000991109,0 8.800030003318794,50.17109000869478,0 8.80016999786298,50.17019999937831,0 8.800160007579409,50.16933000575472,0 8.798210009160762,50.16943000004811,0 8.798119992086578,50.16853000305719,0 8.797839987310598,50.16741000349072,0 8.795570001629894,50.16727000126137,0 8.794420002285929,50.16686998641285,0 8.794869986905674,50.16460000764227,0 8.794839990093175,50.16445000317964,0 8.795069987661732,50.1639400006493,0 8.794959989515347,50.16379001174276,0 8.794649984336918,50.1638499933831,0 8.793969990776221,50.1630399881526,0 8.791709999964247,50.16336999710949,0 8.790470002191894,50.16343999740508,0 8.790340002022822,50.16295999319533,0 8.789559999991919,50.16145999765807,0 8.790999987988663,50.16111999166834,0 8.790610009406777,50.15989999880812,0 8.790650015217244,50.1588999906634,0 8.789859999743616,50.15894999130114,0 8.789490009437273,50.1588699891094,0 8.787180014898484,50.1593899986436,0 8.786940002233044,50.15923998964287,0 8.786050003904881,50.15883999909401,0 8.785669999219367,50.15878999189965,0 8.785020015562498,50.15871999044146,0 8.783420004936072,50.15842000281186,0 8.783420004789116,50.15770999268128,0 8.783470016746801,50.15722999454914,0 8.783580009619461,50.15699999220811,0 8.784100012663544,50.15583999017743,0 8.782219996826949,50.15551999603872,0 8.782360012243217,50.15504999142234,0 8.782400002741433,50.15412000308445,0 8.782440000873432,50.1538799934948,0 8.782640002335953,50.15348999380655,0 8.782690004419679,50.15288999409114,0 8.782599997613589,50.15168999527978,0 8.782499994394218,50.15002000083744,0 8.782429997799444,50.14841999909195,0 8.782339993684557,50.14642999456324,0 8.782259999824177,50.14484999042134,0 8.782299991382095,50.14447000212288,0 8.782329990151951,50.14413999428914,0 8.782350006299202,50.14389999847396,0 8.782369988407282,50.14374000265145,0 8.78239000173469,50.14349999358076,0 8.782439996314656,50.14299999406526,0 8.782439988694478,50.1429199972104,0 8.782470000856153,50.14267999368212,0 8.782480003228939,50.14251999070935,0 8.782579988275536,50.14241999306769,0 8.783599991220438,50.14111999489931,0 8.784448782893042,50.1405347806952,0 8.784710985537078,50.14005921419489,0 8.784836043163592,50.13976715250182,0 8.784909988556111,50.13939000291317,0 8.784920000629107,50.13928999326227,0 8.784719982911794,50.13919999095377,0 8.77993000857648,50.13822000388137,0 8.779900001379451,50.13804999861398,0 8.779870002850776,50.13781999822846,0 8.779780007883684,50.13723999143221,0 8.781680019517596,50.13739999790258,0 8.785470012109293,50.13728999853527,0 8.790470012031696,50.13658999710204,0 8.795220001648541,50.13552000122132,0 8.796740008487991,50.13528000323189,0 8.79849000489105,50.13476000552564,0 8.801570014121655,50.13428000627525,0 8.809370015405136,50.13413999475548,0 8.806000008358936,50.12600000470178,0 8.800339551601194,50.11398120331311,0 8.798730684364719,50.11222326889193,0 8.803275711144671,50.10682728967874,0 8.806256200740775,50.10212970751106,0 8.809628959422538,50.09681686079544,0 8.812426567410549,50.0923736430835,0 8.814529068369041,50.08870301933311,0 8.815564740819466,50.08674190292712,0 8.816983190135087,50.08430003950284,0 8.816736771584527,50.08396773922301,0 8.819257293064814,50.08161630263398,0 8.825500005361317,50.07011000106249,0 8.825430011347251,50.06916000981824,0 8.825340007617122,50.06887000547547,0 8.825010007651045,50.06831000400231,0 8.824340007935508,50.06807000324666,0 8.824190003312365,50.0678600107172,0 8.823980000479738,50.06767000416784,0 8.823560009647329,50.06769000265334,0 8.819140000891526,50.06794999086822,0 8.784360013267232,50.06681998757962,0 8.778350008752462,50.05852000117123,0 8.769430002590275,50.05571000525481,0 8.74344999062572,50.04918999904961,0");
		var hr_arr_area_353282 = nsuSplitString(nsuJoinSep(map_353207(nsuSplitString(hr_coord_353182, makeNimstrLit(" "), -1), HEX3Aanonymous_353183), makeNimstrLit(",")), makeNimstrLit(","), -1);
		var hr_ln_str_353283 = function(){return new H.geo.LineString();}();
		L1: do {
			var i_353297 = 0;
			var colontmp__393711 = 0;
			colontmp__393711 = subInt((hr_arr_area_353282 != null ? (hr_arr_area_353282.length-1) : -1), 3);
			var res_393712 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_393712 <= colontmp__393711)) break L3;
						i_353297 = res_393712;
						hr_ln_str_353283.pushLatLngAlt(chckRange(nsuParseFloat(hr_arr_area_353282[chckIndx(addInt(i_353297, 1), 0, hr_arr_area_353282.length+0-1)-0]), -9.0000000000000000e+001, 9.0000000000000000e+001), chckRange(nsuParseFloat(hr_arr_area_353282[chckIndx(i_353297, 0, hr_arr_area_353282.length+0-1)-0]), -1.8000000000000000e+002, 1.8000000000000000e+002), nsuParseFloat(hr_arr_area_353282[chckIndx(addInt(i_353297, 3), 0, hr_arr_area_353282.length+0-1)-0]));
						res_393712 = addInt(res_393712, 3);
					}
			} while(false);
		} while(false);
		hr_ln_str_353283.pushLatLngAlt(chckRange(nsuParseFloat(hr_arr_area_353282[chckIndx(1, 0, hr_arr_area_353282.length+0-1)-0]), -9.0000000000000000e+001, 9.0000000000000000e+001), chckRange(nsuParseFloat(hr_arr_area_353282[chckIndx(0, 0, hr_arr_area_353282.length+0-1)-0]), -1.8000000000000000e+002, 1.8000000000000000e+002), nsuParseFloat(hr_arr_area_353282[chckIndx(2, 0, hr_arr_area_353282.length+0-1)-0]));
		var p_opt_353401 = {style: {strokeColor: "rgba(255, 255, 0, 1)", fillColor: "rgba(255, 255, 0, 1)", lineWidth: 10, m_type: NTI244076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, m_type: NTI244081, zIndex: 0};
		var pl_353402 = function(ls, options){return new H.map.Polyline(ls, options)}(hr_ln_str_353283, p_opt_353401);
		map.addObject(pl_353402);
		var geocoding_parameters_353801 = {m_type: NTI288131, searchtext: null, country: null, state: null, additionaldata: null};
		geocoding_parameters_353801.searchtext = "";
		geocoding_parameters_353801.country = "DEU";
		geocoding_parameters_353801.state = "Hessen";
		geocoding_parameters_353801.additionaldata = "IncludeShapeLevel,district";
		var borders_str_353802 = makeNimstrLit("63110 Rodgau Rollwald,63322 R\xC3\xB6dermark Waldacker,63128 Dietzenbach ,63150 Heusenstamm ,63179 Obertshausen ,63073 Offenbach am Main Bieber,63075 Offenbach am Main Waldheim,63075 Offenbach am Main Biebernsee,63477 Maintal Bischofsheim,61138 Niederdorfelden ,61137 Sch\xC3\xB6neck Oberdorfelden,61137 Sch\xC3\xB6neck Kilianst\xC3\xA4dten,61130 Nidderau Heldenbergen,61130 Nidderau Eichen,63674 Altenstadt H\xC3\xB6chst,63674 Altenstadt Oberau,63674 Altenstadt Waldsiedlung,63674 Altenstadt Lindheim,63674 Altenstadt Enzheim,63654 B\xC3\xBCdingen D\xC3\xBCdelsheim,63654 B\xC3\xBCdingen Rohrbach,63654 B\xC3\xBCdingen Aulendiebach,63654 B\xC3\xBCdingen Dudenrod,63699 Kefenrod Bindsachsen,63699 Kefenrod ,63699 Kefenrod Burgbracht,63633 Birstein B\xC3\xB6ssges\xC3\xA4\xC3\x9F,63633 Birstein Illnhausen,63633 Birstein Kirchbracht,63633 Birstein V\xC3\xB6lzberg,63633 Birstein Lichenroth,63633 Birstein Wettges,63628 Bad Soden-Salm\xC3\xBCnster Sch\xC3\xB6nhof,63628 Bad Soden-Salm\xC3\xBCnster Kerbersdorf,63628 Bad Soden-Salm\xC3\xBCnster Ahl,63628 Bad Soden-Salm\xC3\xBCnster Alsberg,63637 Jossgrund Burgjo\xC3\x9F,63637 Jossgrund Oberndorf,63637 Jossgrund Pfaffenhausen,63639 Fl\xC3\xB6rsbachtal Lohrhaupten,63639 Fl\xC3\xB6rsbachtal Kempfenbrunn,63639 Fl\xC3\xB6rsbachtal Mosborn,63639 Fl\xC3\xB6rsbachtal Fl\xC3\xB6rsbach,63599 Biebergem\xC3\xBCnd Ro\xC3\x9Fbach,63599 Biebergem\xC3\xBCnd L\xC3\xBCtzel,63589 Linsengericht Waldrode,63579 Freigericht Horbach,63579 Freigericht Neuses,63579 Freigericht Somborn,63538 Gro\xC3\x9Fkrotzenburg ,63512 Hainburg Klein-Krotzenburg,63500 Seligenstadt ,63533 Mainhausen Mainflingen,63533 Mainhausen Zellhausen,63110 Rodgau Nieder-Roden,63517 Rodenbach Oberrodenbach,63599 Biebergem\xC3\xBCnd Bieber");
		var arr_area_354061 = nsuSplitString(nsuJoinSep(map_353207(nsuSplitCharSet(borders_str_353802, ConstSet19, -1), HEX3Aanonymous_354001), makeNimstrLit(",")), makeNimstrLit(","), -1);
		var on_err_geo_354217 = HEX3Aanonymous_354201;
		var on_res_geo_for_map_354459 = HEX3Aanonymous_354218;
		L4: do {
			var city_354614 = null;
			var i_393723 = 0;
			var l_393724 = (arr_area_354061 != null ? arr_area_354061.length : 0);
			L5: do {
					L6: while (true) {
					if (!(i_393723 < l_393724)) break L6;
						city_354614 = arr_area_354061[chckIndx(i_393723, 0, arr_area_354061.length+0-1)-0];
						HEX3Aanonymous_354615();
						i_393723 = addInt(i_393723, 1);
						if (!(((arr_area_354061 != null ? arr_area_354061.length : 0) == l_393724))) {
						failed_assert_impl_58851(makeNimstrLit("iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);

	
}

function HEX3Aanonymous_392651(e_392653) {
		map.getViewPort().resize();

	
}
map.addObject(mv_street_grp_302215[0]);
map.addEventListener("tap", load_links_302780, false);
geo_area_353180();
window.addEventListener("resize", HEX3Aanonymous_392651, false);

function hash_304048(x_304050) {
	var result_304051 = 0;

		result_304051 = HEX21HEX26_224272(hash_225180(id_302802(x_304050)), hash_225180(name_302783(x_304050)));
		result_304051 = HEX21HEX24_224322(result_304051);

	return result_304051;

}

function raw_get_347820(t_347824, key_347825, hc_347826, hc_347826_Idx) {
						var Tmp3;

	var result_347827 = 0;

	BeforeRet: do {
		hc_347826[hc_347826_Idx] = hash_304048(key_347825);
		if ((hc_347826[hc_347826_Idx] == 0)) {
		hc_347826[hc_347826_Idx] = 314159265;
		}
		
		if (((t_347824.data != null ? t_347824.data.length : 0) == 0)) {
		result_347827 = -1;
		break BeforeRet;
		}
		
		var h_347967 = (hc_347826[hc_347826_Idx] & (t_347824.data != null ? (t_347824.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_228418(t_347824.data[chckIndx(h_347967, 0, t_347824.data.length+0-1)-0].Field0)) break L2;
						if (!(t_347824.data[chckIndx(h_347967, 0, t_347824.data.length+0-1)-0].Field0 == hc_347826[hc_347826_Idx])) Tmp3 = false; else {							Tmp3 = (t_347824.data[chckIndx(h_347967, 0, t_347824.data.length+0-1)-0].Field1 == key_347825);						}					if (Tmp3) {
					result_347827 = h_347967;
					break BeforeRet;
					}
					
					h_347967 = next_try_228435(h_347967, (t_347824.data != null ? (t_347824.data.length-1) : -1));
				}
		} while(false);
		result_347827 = subInt(-1, h_347967);
	} while (false);

	return result_347827;

}

function HEX5BHEX5D_347808(t_347814, key_347815) {
	var result_347817 = null;
	var result_347817_Idx = 0;

		var hc_347818 = [0];
		var index_347819 = raw_get_347820(t_347814, key_347815, hc_347818, 0);
		if ((0 <= index_347819)) {
		result_347817 = t_347814.data[chckIndx(index_347819, 0, t_347814.data.length+0-1)-0]; result_347817_Idx = "Field2";
		}
		else {
			var e_348802 = null;
			e_348802 = {m_type: NTI47854, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			e_348802.message = nimCopy(null, makeNimstrLit("key not found"), NTI44040);
			e_348802.parent = null;
			raiseException(e_348802, "KeyError");
		}
		

	return [result_347817, result_347817_Idx];

}

function raw_insert_351522(t_351528, data_351531, data_351531_Idx, key_351532, val_351533, hc_351534, h_351535) {
		data_351531[data_351531_Idx][chckIndx(h_351535, 0, data_351531[data_351531_Idx].length+0-1)-0].Field1 = key_351532;
		data_351531[data_351531_Idx][chckIndx(h_351535, 0, data_351531[data_351531_Idx].length+0-1)-0].Field2 = val_351533;
		data_351531[data_351531_Idx][chckIndx(h_351535, 0, data_351531[data_351531_Idx].length+0-1)-0].Field0 = hc_351534;

	
}

function enlarge_350548(t_350554) {
		var n_350562 = null;
		n_350562 = new Array(chckRange(mulInt((t_350554.data != null ? t_350554.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_350554.data != null ? t_350554.data.length : 0), 2), 0, 2147483647);++i) {n_350562[i]={Field0: 0, Field1: null, Field2: null};}		var Tmp1 = t_350554.data; t_350554.data = n_350562; n_350562 = Tmp1;		L2: do {
			var i_350721 = 0;
			var colontmp__393777 = 0;
			colontmp__393777 = (n_350562 != null ? (n_350562.length-1) : -1);
			var res_393778 = 0;
			L3: do {
					L4: while (true) {
					if (!(res_393778 <= colontmp__393777)) break L4;
						i_350721 = res_393778;
						var eh_350877 = n_350562[chckIndx(i_350721, 0, n_350562.length+0-1)-0].Field0;
						if (is_filled_228418(eh_350877)) {
						var j_350884 = (eh_350877 & (t_350554.data != null ? (t_350554.data.length-1) : -1));
						L5: do {
								L6: while (true) {
								if (!is_filled_228418(t_350554.data[chckIndx(j_350884, 0, t_350554.data.length+0-1)-0].Field0)) break L6;
									j_350884 = next_try_228435(j_350884, (t_350554.data != null ? (t_350554.data.length-1) : -1));
								}
						} while(false);
						raw_insert_351522(t_350554, t_350554, "data", n_350562[chckIndx(i_350721, 0, n_350562.length+0-1)-0].Field1, n_350562[chckIndx(i_350721, 0, n_350562.length+0-1)-0].Field2, eh_350877, j_350884);
						}
						
						res_393778 = addInt(res_393778, 1);
					}
			} while(false);
		} while(false);

	
}

function raw_get_known_hc_352043(t_352047, key_352048, hc_352049) {
	var result_352050 = 0;

	BeforeRet: do {
		if (((t_352047.data != null ? t_352047.data.length : 0) == 0)) {
		result_352050 = -1;
		break BeforeRet;
		}
		
		var h_352189 = (hc_352049 & (t_352047.data != null ? (t_352047.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_228418(t_352047.data[chckIndx(h_352189, 0, t_352047.data.length+0-1)-0].Field0)) break L2;
					if (((t_352047.data[chckIndx(h_352189, 0, t_352047.data.length+0-1)-0].Field0 == hc_352049) && (t_352047.data[chckIndx(h_352189, 0, t_352047.data.length+0-1)-0].Field1 == key_352048))) {
					result_352050 = h_352189;
					break BeforeRet;
					}
					
					h_352189 = next_try_228435(h_352189, (t_352047.data != null ? (t_352047.data.length-1) : -1));
				}
		} while(false);
		result_352050 = subInt(-1, h_352189);
	} while (false);

	return result_352050;

}

function HEX5BHEX5DHEX3D_349317(t_349323, key_349324, val_349325) {
		if (((t_349323.data != null ? t_349323.data.length : 0) == 0)) {
		if (!(is_power_of_two_108062(64))) {
		failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
		}
		
		t_349323.counter = 0;
		t_349323.data = new Array(64); for (var i=0;i<64;++i) {t_349323.data[i]={Field0: 0, Field1: null, Field2: null};}		}
		
		var hc_349801 = [0];
		var index_349810 = raw_get_347820(t_349323, key_349324, hc_349801, 0);
		if ((0 <= index_349810)) {
		t_349323.data[chckIndx(index_349810, 0, t_349323.data.length+0-1)-0].Field2 = val_349325;
		}
		else {
			if (((t_349323.data != null ? t_349323.data.length : 0) == 0)) {
			if (!(is_power_of_two_108062(64))) {
			failed_assert_impl_58851(makeNimstrLit("tableimpl.nim(118, 10) `isPowerOfTwo(defaultInitialSize)` "));
			}
			
			t_349323.counter = 0;
			t_349323.data = new Array(64); for (var i=0;i<64;++i) {t_349323.data[i]={Field0: 0, Field1: null, Field2: null};}			}
			
			if (must_rehash_228453((t_349323.data != null ? t_349323.data.length : 0), t_349323.counter)) {
			enlarge_350548(t_349323);
			index_349810 = raw_get_known_hc_352043(t_349323, key_349324, hc_349801[0]);
			}
			
			index_349810 = subInt(-1, index_349810);
			raw_insert_351522(t_349323, t_349323, "data", key_349324, val_349325, hc_349801[0], index_349810);
			t_349323.counter = addInt(t_349323.counter, 1);
		}
		

	
}

function display_sector_310890(sect_name_310892, show_310893) {
		var Tmp1;
		var Tmp2;
		var Tmp3;
										var Tmp13;
		var Tmp14;

	BeforeRet: do {
		var sector_347656 = (Tmp1 = HEX5BHEX5D_318212(all_sectors_301814[0], sect_name_310892), Tmp1)[0][Tmp1[1]];
		if (!(show_310893)) {
		main_sector_group_335550[0].removeObject((Tmp2 = HEX5BHEX5D_347808(sector_grp_302614[0], sector_347656), Tmp2)[0][Tmp2[1]]);
		(Tmp3 = HEX5BHEX5D_347808(sector_grp_302614[0], sector_347656), Tmp3)[0][Tmp3[1]].removeAll();
		sector_347656.shownOnMap = false;
		break BeforeRet;
		}
		
		HEX5BHEX5DHEX3D_349317(sector_grp_302614[0], sector_347656, function(){return new H.map.Group()}());
		sector_347656.shownOnMap = true;
		L4: do {
			var n_352736 = null;
			var links_352737 = null;
			var colontmp__393769 = {data: null, counter: 0, first: 0, last: 0};
			nimCopy(colontmp__393769, sector_347656.streets, NTI300066);
			var l_393770 = len_320051(colontmp__393769);
			if ((0 < colontmp__393769.counter)) {
			var h_393771 = colontmp__393769.first;
			L5: do {
					L6: while (true) {
					if (!(0 <= h_393771)) break L6;
						var nxt_393773 = colontmp__393769.data[chckIndx(h_393771, 0, colontmp__393769.data.length+0-1)-0].Field1;
						if (is_filled_228418(colontmp__393769.data[chckIndx(h_393771, 0, colontmp__393769.data.length+0-1)-0].Field0)) {
						n_352736 = colontmp__393769.data[chckIndx(h_393771, 0, colontmp__393769.data.length+0-1)-0].Field2;
						links_352737 = colontmp__393769.data[chckIndx(h_393771, 0, colontmp__393769.data.length+0-1)-0].Field3;
						L7: do {
							var link_352744 = null;
							var i_393766 = 0;
							var l_393767 = (links_352737 != null ? links_352737.length : 0);
							L8: do {
									L9: while (true) {
									if (!(i_393766 < l_393767)) break L9;
										link_352744 = links_352737[chckIndx(i_393766, 0, links_352737.length+0-1)-0];
										var ln_str_352745 = function(){return new H.geo.LineString();}();
										L10: do {
											var c_352752 = null;
											var colontmp__393760 = null;
											colontmp__393760 = link_352744.geometry;
											var i_393761 = 0;
											var l_393762 = (colontmp__393760 != null ? colontmp__393760.length : 0);
											L11: do {
													L12: while (true) {
													if (!(i_393761 < l_393762)) break L12;
														c_352752 = colontmp__393760[chckIndx(i_393761, 0, colontmp__393760.length+0-1)-0];
														ln_str_352745.pushLatLngAlt(c_352752.lat, c_352752.lng, 1.0000000000000000e+000);
														i_393761 = addInt(i_393761, 1);
														if (!(((colontmp__393760 != null ? colontmp__393760.length : 0) == l_393762))) {
														failed_assert_impl_58851(makeNimstrLit("iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
														}
														
													}
											} while(false);
										} while(false);
										var p_opt_352753 = {style: {strokeColor: "rgba(255, 0, 0, 0.2)", fillColor: "rgba(255, 0, 0, 0.4)", lineWidth: 10, m_type: NTI244076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, m_type: NTI244081, zIndex: 0};
										var pl_352754 = function(ls, options){return new H.map.Polyline(ls, options)}(ln_str_352745, p_opt_352753);
										(Tmp13 = HEX5BHEX5D_347808(sector_grp_302614[0], sector_347656), Tmp13)[0][Tmp13[1]].addObject(pl_352754);
										i_393766 = addInt(i_393766, 1);
										if (!(((links_352737 != null ? links_352737.length : 0) == l_393767))) {
										failed_assert_impl_58851(makeNimstrLit("iterators.nim(190, 11) `len(a) == L` the length of the seq changed while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						if (!((len_320051(colontmp__393769) == l_393770))) {
						failed_assert_impl_58851(makeNimstrLit("tables.nim(1648, 11) `len(t) ==\x0A    L` the length of the table changed while iterating over it"));
						}
						
						}
						
						h_393771 = nxt_393773;
					}
			} while(false);
			}
			
		} while(false);
		main_sector_group_335550[0].addObject((Tmp14 = HEX5BHEX5D_347808(sector_grp_302614[0], sector_347656), Tmp14)[0][Tmp14[1]]);
	} while (false);

	
}

function sys_fatal_67041(message_67045) {
		var e_67203 = null;
		e_67203 = {m_type: NTI47886, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_67203.message = nimCopy(null, message_67045, NTI44040);
		raiseException(e_67203, "NilAccessError");

	
}

function chckNilDisp(p_67039, p_67039_Idx) {
		if ((p_67039 == null && p_67039_Idx == 0)) {
		sys_fatal_67041(makeNimstrLit("cannot dispatch; dispatcher is nil"));
		}
		

	
}

function nsuToLowerAsciiChar(c_195780) {
	var result_195781 = 0;

		if ((ConstSet22[c_195780] != undefined)) {
		result_195781 = chckRange(addInt(c_195780, 32), 0, 255);
		}
		else {
			result_195781 = c_195780;
		}
		

	return result_195781;

}

function ntgetDateStr(dt_213948) {
	var result_213949 = null;

		result_213949 = nimCopy(null, (cstrToNimstr((dt_213948.year)+"") || []).concat([45],nsuIntToStr(dt_213948.month, 2) || [],[45],nsuIntToStr(dt_213948.monthday, 2) || []), NTI44040);

	return result_213949;

}

function ntgetClockStr(dt_213969) {
	var result_213970 = null;

		result_213970 = nimCopy(null, (nsuIntToStr(dt_213969.hour, 2) || []).concat([58],nsuIntToStr(dt_213969.minute, 2) || [],[58],nsuIntToStr(dt_213969.second, 2) || []), NTI44040);

	return result_213970;

}

function substitute_log_221447(frmt_221449, level_221450, args_221452) {
	var result_221453 = null;

		var msg_len_221455 = 0;
		L1: do {
			var arg_221461 = null;
			var i_393787 = 0;
			L2: do {
					L3: while (true) {
					if (!(i_393787 < (args_221452 != null ? args_221452.length : 0))) break L3;
						arg_221461 = args_221452[chckIndx(i_393787, 0, args_221452.length+0-1)-0];
						msg_len_221455 = addInt(msg_len_221455, (arg_221461 != null ? arg_221461.length : 0));
						i_393787 = addInt(i_393787, 1);
					}
			} while(false);
		} while(false);
		result_221453 = nimCopy(null, mnewString(0), NTI44040);
		var i_221469 = 0;
		L4: do {
				L5: while (true) {
				if (!(i_221469 < (frmt_221449 != null ? frmt_221449.length : 0))) break L5;
					if (!((frmt_221449[chckIndx(i_221469, 0, frmt_221449.length+0-1)-0] == 36))) {
					if (result_221453 != null) { addChar(result_221453, frmt_221449[chckIndx(i_221469, 0, frmt_221449.length+0-1)-0]); } else { result_221453 = [frmt_221449[chckIndx(i_221469, 0, frmt_221449.length+0-1)-0]]; };
					i_221469 = addInt(i_221469, 1);
					}
					else {
						i_221469 = addInt(i_221469, 1);
						var v_221482 = [];
						var app_221601 = [];
						L6: do {
								L7: while (true) {
								if (!(ConstSet21[frmt_221449[chckIndx(i_221469, 0, frmt_221449.length+0-1)-0]] != undefined)) break L7;
									if (v_221482 != null) { addChar(v_221482, nsuToLowerAsciiChar(frmt_221449[chckIndx(i_221469, 0, frmt_221449.length+0-1)-0])); } else { v_221482 = [nsuToLowerAsciiChar(frmt_221449[chckIndx(i_221469, 0, frmt_221449.length+0-1)-0])]; };
									i_221469 = addInt(i_221469, 1);
								}
						} while(false);
						switch (toJSStr(v_221482)) {
						case "date":
							if (result_221453 != null) { result_221453 = (result_221453).concat(ntgetDateStr(now_213836())); } else { result_221453 = ntgetDateStr(now_213836()).slice(); };
							break;
						case "time":
							if (result_221453 != null) { result_221453 = (result_221453).concat(ntgetClockStr(now_213836())); } else { result_221453 = ntgetClockStr(now_213836()).slice(); };
							break;
						case "datetime":
							if (result_221453 != null) { result_221453 = (result_221453).concat((ntgetDateStr(now_213836()) || []).concat(makeNimstrLit("T") || [],ntgetClockStr(now_213836()) || [])); } else { result_221453 = (ntgetDateStr(now_213836()) || []).concat(makeNimstrLit("T") || [],ntgetClockStr(now_213836()) || []).slice(); };
							break;
						case "app":
							if (result_221453 != null) { result_221453 = (result_221453).concat(app_221601); } else { result_221453 = app_221601.slice(); };
							break;
						case "appdir":
							break;
						case "appname":
							break;
						case "levelid":
							if (result_221453 != null) { addChar(result_221453, level_names_221216[chckIndx(level_221450, 0, level_names_221216.length+0-1)-0][chckIndx(0, 0, level_names_221216[chckIndx(level_221450, 0, level_names_221216.length+0-1)-0].length+0-1)-0]); } else { result_221453 = [level_names_221216[chckIndx(level_221450, 0, level_names_221216.length+0-1)-0][chckIndx(0, 0, level_names_221216[chckIndx(level_221450, 0, level_names_221216.length+0-1)-0].length+0-1)-0]]; };
							break;
						case "levelname":
							if (result_221453 != null) { result_221453 = (result_221453).concat(level_names_221216[chckIndx(level_221450, 0, level_names_221216.length+0-1)-0]); } else { result_221453 = level_names_221216[chckIndx(level_221450, 0, level_names_221216.length+0-1)-0].slice(); };
							break;
						default: 
							break;
						}
					}
					
				}
		} while(false);
		L8: do {
			var arg_222006 = null;
			var i_393792 = 0;
			L9: do {
					L10: while (true) {
					if (!(i_393792 < (args_221452 != null ? args_221452.length : 0))) break L10;
						arg_222006 = args_221452[chckIndx(i_393792, 0, args_221452.length+0-1)-0];
						if (result_221453 != null) { result_221453 = (result_221453).concat(arg_222006); } else { result_221453 = arg_222006.slice(); };
						i_393792 = addInt(i_393792, 1);
					}
			} while(false);
		} while(false);

	return result_221453;

}

function log_222041(logger_222043, level_222044, args_222046) {
			var Tmp1;

			if (!(level_221401[0] <= level_222044)) Tmp1 = false; else {				Tmp1 = (logger_222043.levelThreshold <= level_222044);			}		if (Tmp1) {
		var ln_222057 = substitute_log_221447(logger_222043.fmtStr, level_222044, args_222046);
		var cln_222201 = toJSStr(ln_222057);
		console.log(cln_222201);
		}
		

	
}

function log_222020(logger_222022, level_222023, args_222025) {
	
}

function log_222039(logger_222022, level_222023, args_222025) {
		chckNilDisp(logger_222022);
		if (isObj(logger_222022.m_type, NTI221227)) {
		log_222041(logger_222022, level_222023, args_222025);
		}
		else {
		if (isObj(logger_222022.m_type, NTI221223)) {
		log_222020(logger_222022, level_222023, args_222025);
		}
		}

	
}
