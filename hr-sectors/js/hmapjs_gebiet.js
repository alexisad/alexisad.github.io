/* Generated by the Nim Compiler v1.4.8 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI11816085 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI15940055 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI9690043 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11721040 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11721024 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI11805004 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12016118 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI18170067 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12016020 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11816048 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI11816081 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11357299 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11706098 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11816056 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11816076 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11816096 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11816090 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11816089 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI17920477 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI17920468 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12345032 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI17920463 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI17920248 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI17865185 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI15940045 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI15940047 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI17300011 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11721036 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI15000125 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI5210232 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI5465011 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1194651 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI13051098 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13051087 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13051084 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI13051081 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1188080 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI13051054 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI13051058 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13051056 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI13618253 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13618202 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI13640039 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13618259 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI13618227 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI13618243 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1188052 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI13618239 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13618320 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI13618316 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI13618315 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13618251 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI13618272 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI13618235 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI13618204 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI13618262 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI13618229 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI13618265 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI13618231 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI13618268 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI13618233 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI13618276 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI13618237 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI13618241 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI16211233 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI16211230 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI16211227 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI16211207 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI16211204 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI16211201 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1194754 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11600097 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11600085 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI16211184 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI16211181 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI16211178 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI16211062 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI16211076 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI16211073 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI16211070 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI16211053 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI16211023 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI16211048 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI16211046 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI16211021 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI16211158 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI16211155 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI16211152 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11721018 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI11721016 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI16211028 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI16211017 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI16211040 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI16211038 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI16211032 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI16211019 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI16211135 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI16211132 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI16211129 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI16211119 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI16211027 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI15227211 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI14918323 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI14918324 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI14965077 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI14965075 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI14962246 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI14965030 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI14965018 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14965039 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14965037 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14962028 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI14965031 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI14965022 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI11357476 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11357472 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11357468 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11357464 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11357460 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11357456 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11357452 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11357448 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11357444 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11357440 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11357436 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11357432 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11357428 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11357424 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11357420 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11357416 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11357412 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11357408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11357404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11357400 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11357396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11357392 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11357388 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11357205 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11357291 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI11358628 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11358619 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI11358618 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11357385 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI11358626 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11357387 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI11357269 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11357267 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI11357661 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11357273 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11357271 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI11357659 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11357657 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11357289 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11357287 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI11357655 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11357653 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11357277 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11357275 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI11357651 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11357675 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11357281 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11357279 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI11357673 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11357767 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11357285 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11357283 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI11357231 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11357229 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI11357245 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11357243 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI11357241 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11357239 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI11357233 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI11357614 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11357612 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11357610 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI11357237 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11357235 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI15227207 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI15227209 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI11357293 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1188005 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI16097035 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI15940014 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11356070 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1188064 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI15872030 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2136734 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1194621 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194643 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194645 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI9710015 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1194641 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI9690015 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1188044 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1194418 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1194404 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI11407269 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI16290854 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI16290851 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI16290848 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1194653 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194635 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194633 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194637 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194408 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194728 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1188015 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI1194723 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1194617 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194619 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1194649 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1188013 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NNI1194649 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194649.node = NNI1194649;
var NNI1194619 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194619.node = NNI1194619;
NTI1194723.base = NTI1194617;
NTI1194728.base = NTI1194617;
var NNI1194617 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI1194723, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI1188015, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI1188013, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI1188013, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI1194728, name: "up", sons: null}]};
NTI1194617.node = NNI1194617;
var NNI1194408 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194408.node = NNI1194408;
NTI1194617.base = NTI1194408;
NTI1194619.base = NTI1194617;
NTI1194649.base = NTI1194619;
var NNI1194637 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194637.node = NNI1194637;
var NNI1194633 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194633.node = NNI1194633;
NTI1194633.base = NTI1194619;
NTI1194637.base = NTI1194633;
var NNI1194635 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194635.node = NNI1194635;
NTI1194635.base = NTI1194633;
var NNI1194653 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194653.node = NNI1194653;
NTI1194653.base = NTI1194619;
NTI1194404.base = NTI1194418;
var NNI16290854 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI11407269, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI11407269, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1194404, name: "Field2", sons: null}]};
NTI16290854.node = NNI16290854;
NTI16290851.base = NTI16290854;
var NNI16290848 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI16290851, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI1188044, name: "counter", sons: null}]};
NTI16290848.node = NNI16290848;
NTI9690015.base = NTI1188013;
var NNI1194641 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194641.node = NNI1194641;
NTI1194641.base = NTI1194619;
NTI9710015.base = NTI1188013;
var NNI1194645 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194645.node = NNI1194645;
var NNI1194643 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194643.node = NNI1194643;
var NNI1194621 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194621.node = NNI1194621;
NTI1194621.base = NTI1194617;
NTI1194643.base = NTI1194621;
NTI1194645.base = NTI1194643;
var NNI2136734 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1188044, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI1188044, name: "b", sons: null}]};
NTI2136734.node = NNI2136734;
var NNI15872030 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "apikey", len: 0, typ: NTI1188015, name: "apikey", sons: null}, 
{kind: 1, offset: "app_id", len: 0, typ: NTI1188015, name: "app_id", sons: null}, 
{kind: 1, offset: "app_code", len: 0, typ: NTI1188015, name: "app_code", sons: null}, 
{kind: 1, offset: "useHTTPS", len: 0, typ: NTI1188064, name: "useHTTPS", sons: null}, 
{kind: 1, offset: "useCIT", len: 0, typ: NTI1188064, name: "useCIT", sons: null}]};
NTI15872030.node = NNI15872030;
var NNI11356070 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI11356070.node = NNI11356070;
NTI11356070.base = NTI1194408;
NTI15872030.base = NTI11356070;
var NNI15940014 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "tileSize", len: 0, typ: NTI1188044, name: "tileSize", sons: null}, 
{kind: 1, offset: "ppi", len: 0, typ: NTI1188044, name: "ppi", sons: null}, 
{kind: 1, offset: "lg", len: 0, typ: NTI1188015, name: "lg", sons: null}, 
{kind: 1, offset: "lg2", len: 0, typ: NTI1188015, name: "lg2", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI1188015, name: "style", sons: null}, 
{kind: 1, offset: "pois", len: 0, typ: NTI1188064, name: "pois", sons: null}, 
{kind: 1, offset: "crossOrigin", len: 0, typ: NTI1188013, name: "crossOrigin", sons: null}]};
NTI15940014.node = NNI15940014;
NTI15940014.base = NTI11356070;
var NNI16097035 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "pixelRatio", len: 0, typ: NTI1188005, name: "pixelRatio", sons: null}, 
{kind: 1, offset: "noWrap", len: 0, typ: NTI1188064, name: "noWrap", sons: null}]};
NTI16097035.node = NNI16097035;
NTI16097035.base = NTI11356070;
var NNI11357293 = {kind: 2, len: 368, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "alignContent", len: 0, typ: NTI1188015, name: "alignContent", sons: null}, 
{kind: 1, offset: "alignItems", len: 0, typ: NTI1188015, name: "alignItems", sons: null}, 
{kind: 1, offset: "alignSelf", len: 0, typ: NTI1188015, name: "alignSelf", sons: null}, 
{kind: 1, offset: "all", len: 0, typ: NTI1188015, name: "all", sons: null}, 
{kind: 1, offset: "animation", len: 0, typ: NTI1188015, name: "animation", sons: null}, 
{kind: 1, offset: "animationDelay", len: 0, typ: NTI1188015, name: "animationDelay", sons: null}, 
{kind: 1, offset: "animationDirection", len: 0, typ: NTI1188015, name: "animationDirection", sons: null}, 
{kind: 1, offset: "animationDuration", len: 0, typ: NTI1188015, name: "animationDuration", sons: null}, 
{kind: 1, offset: "animationFillMode", len: 0, typ: NTI1188015, name: "animationFillMode", sons: null}, 
{kind: 1, offset: "animationIterationCount", len: 0, typ: NTI1188015, name: "animationIterationCount", sons: null}, 
{kind: 1, offset: "animationName", len: 0, typ: NTI1188015, name: "animationName", sons: null}, 
{kind: 1, offset: "animationPlayState", len: 0, typ: NTI1188015, name: "animationPlayState", sons: null}, 
{kind: 1, offset: "animationTimingFunction", len: 0, typ: NTI1188015, name: "animationTimingFunction", sons: null}, 
{kind: 1, offset: "backdropFilter", len: 0, typ: NTI1188015, name: "backdropFilter", sons: null}, 
{kind: 1, offset: "backfaceVisibility", len: 0, typ: NTI1188015, name: "backfaceVisibility", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI1188015, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI1188015, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundBlendMode", len: 0, typ: NTI1188015, name: "backgroundBlendMode", sons: null}, 
{kind: 1, offset: "backgroundClip", len: 0, typ: NTI1188015, name: "backgroundClip", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI1188015, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI1188015, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundOrigin", len: 0, typ: NTI1188015, name: "backgroundOrigin", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI1188015, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI1188015, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "backgroundSize", len: 0, typ: NTI1188015, name: "backgroundSize", sons: null}, 
{kind: 1, offset: "blockSize", len: 0, typ: NTI1188015, name: "blockSize", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI1188015, name: "border", sons: null}, 
{kind: 1, offset: "borderBlock", len: 0, typ: NTI1188015, name: "borderBlock", sons: null}, 
{kind: 1, offset: "borderBlockColor", len: 0, typ: NTI1188015, name: "borderBlockColor", sons: null}, 
{kind: 1, offset: "borderBlockEnd", len: 0, typ: NTI1188015, name: "borderBlockEnd", sons: null}, 
{kind: 1, offset: "borderBlockEndColor", len: 0, typ: NTI1188015, name: "borderBlockEndColor", sons: null}, 
{kind: 1, offset: "borderBlockEndStyle", len: 0, typ: NTI1188015, name: "borderBlockEndStyle", sons: null}, 
{kind: 1, offset: "borderBlockEndWidth", len: 0, typ: NTI1188015, name: "borderBlockEndWidth", sons: null}, 
{kind: 1, offset: "borderBlockStart", len: 0, typ: NTI1188015, name: "borderBlockStart", sons: null}, 
{kind: 1, offset: "borderBlockStartColor", len: 0, typ: NTI1188015, name: "borderBlockStartColor", sons: null}, 
{kind: 1, offset: "borderBlockStartStyle", len: 0, typ: NTI1188015, name: "borderBlockStartStyle", sons: null}, 
{kind: 1, offset: "borderBlockStartWidth", len: 0, typ: NTI1188015, name: "borderBlockStartWidth", sons: null}, 
{kind: 1, offset: "borderBlockStyle", len: 0, typ: NTI1188015, name: "borderBlockStyle", sons: null}, 
{kind: 1, offset: "borderBlockWidth", len: 0, typ: NTI1188015, name: "borderBlockWidth", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI1188015, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI1188015, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomLeftRadius", len: 0, typ: NTI1188015, name: "borderBottomLeftRadius", sons: null}, 
{kind: 1, offset: "borderBottomRightRadius", len: 0, typ: NTI1188015, name: "borderBottomRightRadius", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI1188015, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI1188015, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderCollapse", len: 0, typ: NTI1188015, name: "borderCollapse", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI1188015, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderEndEndRadius", len: 0, typ: NTI1188015, name: "borderEndEndRadius", sons: null}, 
{kind: 1, offset: "borderEndStartRadius", len: 0, typ: NTI1188015, name: "borderEndStartRadius", sons: null}, 
{kind: 1, offset: "borderImage", len: 0, typ: NTI1188015, name: "borderImage", sons: null}, 
{kind: 1, offset: "borderImageOutset", len: 0, typ: NTI1188015, name: "borderImageOutset", sons: null}, 
{kind: 1, offset: "borderImageRepeat", len: 0, typ: NTI1188015, name: "borderImageRepeat", sons: null}, 
{kind: 1, offset: "borderImageSlice", len: 0, typ: NTI1188015, name: "borderImageSlice", sons: null}, 
{kind: 1, offset: "borderImageSource", len: 0, typ: NTI1188015, name: "borderImageSource", sons: null}, 
{kind: 1, offset: "borderImageWidth", len: 0, typ: NTI1188015, name: "borderImageWidth", sons: null}, 
{kind: 1, offset: "borderInline", len: 0, typ: NTI1188015, name: "borderInline", sons: null}, 
{kind: 1, offset: "borderInlineColor", len: 0, typ: NTI1188015, name: "borderInlineColor", sons: null}, 
{kind: 1, offset: "borderInlineEnd", len: 0, typ: NTI1188015, name: "borderInlineEnd", sons: null}, 
{kind: 1, offset: "borderInlineEndColor", len: 0, typ: NTI1188015, name: "borderInlineEndColor", sons: null}, 
{kind: 1, offset: "borderInlineEndStyle", len: 0, typ: NTI1188015, name: "borderInlineEndStyle", sons: null}, 
{kind: 1, offset: "borderInlineEndWidth", len: 0, typ: NTI1188015, name: "borderInlineEndWidth", sons: null}, 
{kind: 1, offset: "borderInlineStart", len: 0, typ: NTI1188015, name: "borderInlineStart", sons: null}, 
{kind: 1, offset: "borderInlineStartColor", len: 0, typ: NTI1188015, name: "borderInlineStartColor", sons: null}, 
{kind: 1, offset: "borderInlineStartStyle", len: 0, typ: NTI1188015, name: "borderInlineStartStyle", sons: null}, 
{kind: 1, offset: "borderInlineStartWidth", len: 0, typ: NTI1188015, name: "borderInlineStartWidth", sons: null}, 
{kind: 1, offset: "borderInlineStyle", len: 0, typ: NTI1188015, name: "borderInlineStyle", sons: null}, 
{kind: 1, offset: "borderInlineWidth", len: 0, typ: NTI1188015, name: "borderInlineWidth", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI1188015, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI1188015, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI1188015, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI1188015, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRadius", len: 0, typ: NTI1188015, name: "borderRadius", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI1188015, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI1188015, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI1188015, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI1188015, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderSpacing", len: 0, typ: NTI1188015, name: "borderSpacing", sons: null}, 
{kind: 1, offset: "borderStartEndRadius", len: 0, typ: NTI1188015, name: "borderStartEndRadius", sons: null}, 
{kind: 1, offset: "borderStartStartRadius", len: 0, typ: NTI1188015, name: "borderStartStartRadius", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI1188015, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI1188015, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI1188015, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopLeftRadius", len: 0, typ: NTI1188015, name: "borderTopLeftRadius", sons: null}, 
{kind: 1, offset: "borderTopRightRadius", len: 0, typ: NTI1188015, name: "borderTopRightRadius", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI1188015, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI1188015, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI1188015, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI1188015, name: "bottom", sons: null}, 
{kind: 1, offset: "boxDecorationBreak", len: 0, typ: NTI1188015, name: "boxDecorationBreak", sons: null}, 
{kind: 1, offset: "boxShadow", len: 0, typ: NTI1188015, name: "boxShadow", sons: null}, 
{kind: 1, offset: "boxSizing", len: 0, typ: NTI1188015, name: "boxSizing", sons: null}, 
{kind: 1, offset: "breakAfter", len: 0, typ: NTI1188015, name: "breakAfter", sons: null}, 
{kind: 1, offset: "breakBefore", len: 0, typ: NTI1188015, name: "breakBefore", sons: null}, 
{kind: 1, offset: "breakInside", len: 0, typ: NTI1188015, name: "breakInside", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI1188015, name: "captionSide", sons: null}, 
{kind: 1, offset: "caretColor", len: 0, typ: NTI1188015, name: "caretColor", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI1188015, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI1188015, name: "clip", sons: null}, 
{kind: 1, offset: "clipPath", len: 0, typ: NTI1188015, name: "clipPath", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI1188015, name: "color", sons: null}, 
{kind: 1, offset: "colorAdjust", len: 0, typ: NTI1188015, name: "colorAdjust", sons: null}, 
{kind: 1, offset: "columnCount", len: 0, typ: NTI1188015, name: "columnCount", sons: null}, 
{kind: 1, offset: "columnFill", len: 0, typ: NTI1188015, name: "columnFill", sons: null}, 
{kind: 1, offset: "columnGap", len: 0, typ: NTI1188015, name: "columnGap", sons: null}, 
{kind: 1, offset: "columnRule", len: 0, typ: NTI1188015, name: "columnRule", sons: null}, 
{kind: 1, offset: "columnRuleColor", len: 0, typ: NTI1188015, name: "columnRuleColor", sons: null}, 
{kind: 1, offset: "columnRuleStyle", len: 0, typ: NTI1188015, name: "columnRuleStyle", sons: null}, 
{kind: 1, offset: "columnRuleWidth", len: 0, typ: NTI1188015, name: "columnRuleWidth", sons: null}, 
{kind: 1, offset: "columnSpan", len: 0, typ: NTI1188015, name: "columnSpan", sons: null}, 
{kind: 1, offset: "columnWidth", len: 0, typ: NTI1188015, name: "columnWidth", sons: null}, 
{kind: 1, offset: "columns", len: 0, typ: NTI1188015, name: "columns", sons: null}, 
{kind: 1, offset: "contain", len: 0, typ: NTI1188015, name: "contain", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI1188015, name: "content", sons: null}, 
{kind: 1, offset: "counterIncrement", len: 0, typ: NTI1188015, name: "counterIncrement", sons: null}, 
{kind: 1, offset: "counterReset", len: 0, typ: NTI1188015, name: "counterReset", sons: null}, 
{kind: 1, offset: "counterSet", len: 0, typ: NTI1188015, name: "counterSet", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI1188015, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI1188015, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI1188015, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI1188015, name: "emptyCells", sons: null}, 
{kind: 1, offset: "filter", len: 0, typ: NTI1188015, name: "filter", sons: null}, 
{kind: 1, offset: "flex", len: 0, typ: NTI1188015, name: "flex", sons: null}, 
{kind: 1, offset: "flexBasis", len: 0, typ: NTI1188015, name: "flexBasis", sons: null}, 
{kind: 1, offset: "flexDirection", len: 0, typ: NTI1188015, name: "flexDirection", sons: null}, 
{kind: 1, offset: "flexFlow", len: 0, typ: NTI1188015, name: "flexFlow", sons: null}, 
{kind: 1, offset: "flexGrow", len: 0, typ: NTI1188015, name: "flexGrow", sons: null}, 
{kind: 1, offset: "flexShrink", len: 0, typ: NTI1188015, name: "flexShrink", sons: null}, 
{kind: 1, offset: "flexWrap", len: 0, typ: NTI1188015, name: "flexWrap", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI1188015, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI1188015, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI1188015, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontFeatureSettings", len: 0, typ: NTI1188015, name: "fontFeatureSettings", sons: null}, 
{kind: 1, offset: "fontKerning", len: 0, typ: NTI1188015, name: "fontKerning", sons: null}, 
{kind: 1, offset: "fontLanguageOverride", len: 0, typ: NTI1188015, name: "fontLanguageOverride", sons: null}, 
{kind: 1, offset: "fontOpticalSizing", len: 0, typ: NTI1188015, name: "fontOpticalSizing", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI1188015, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontSizeAdjust", len: 0, typ: NTI1188015, name: "fontSizeAdjust", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI1188015, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI1188015, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontSynthesis", len: 0, typ: NTI1188015, name: "fontSynthesis", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI1188015, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontVariantAlternates", len: 0, typ: NTI1188015, name: "fontVariantAlternates", sons: null}, 
{kind: 1, offset: "fontVariantCaps", len: 0, typ: NTI1188015, name: "fontVariantCaps", sons: null}, 
{kind: 1, offset: "fontVariantEastAsian", len: 0, typ: NTI1188015, name: "fontVariantEastAsian", sons: null}, 
{kind: 1, offset: "fontVariantLigatures", len: 0, typ: NTI1188015, name: "fontVariantLigatures", sons: null}, 
{kind: 1, offset: "fontVariantNumeric", len: 0, typ: NTI1188015, name: "fontVariantNumeric", sons: null}, 
{kind: 1, offset: "fontVariantPosition", len: 0, typ: NTI1188015, name: "fontVariantPosition", sons: null}, 
{kind: 1, offset: "fontVariationSettings", len: 0, typ: NTI1188015, name: "fontVariationSettings", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI1188015, name: "fontWeight", sons: null}, 
{kind: 1, offset: "gap", len: 0, typ: NTI1188015, name: "gap", sons: null}, 
{kind: 1, offset: "grid", len: 0, typ: NTI1188015, name: "grid", sons: null}, 
{kind: 1, offset: "gridArea", len: 0, typ: NTI1188015, name: "gridArea", sons: null}, 
{kind: 1, offset: "gridAutoColumns", len: 0, typ: NTI1188015, name: "gridAutoColumns", sons: null}, 
{kind: 1, offset: "gridAutoFlow", len: 0, typ: NTI1188015, name: "gridAutoFlow", sons: null}, 
{kind: 1, offset: "gridAutoRows", len: 0, typ: NTI1188015, name: "gridAutoRows", sons: null}, 
{kind: 1, offset: "gridColumn", len: 0, typ: NTI1188015, name: "gridColumn", sons: null}, 
{kind: 1, offset: "gridColumnEnd", len: 0, typ: NTI1188015, name: "gridColumnEnd", sons: null}, 
{kind: 1, offset: "gridColumnStart", len: 0, typ: NTI1188015, name: "gridColumnStart", sons: null}, 
{kind: 1, offset: "gridRow", len: 0, typ: NTI1188015, name: "gridRow", sons: null}, 
{kind: 1, offset: "gridRowEnd", len: 0, typ: NTI1188015, name: "gridRowEnd", sons: null}, 
{kind: 1, offset: "gridRowStart", len: 0, typ: NTI1188015, name: "gridRowStart", sons: null}, 
{kind: 1, offset: "gridTemplate", len: 0, typ: NTI1188015, name: "gridTemplate", sons: null}, 
{kind: 1, offset: "gridTemplateAreas", len: 0, typ: NTI1188015, name: "gridTemplateAreas", sons: null}, 
{kind: 1, offset: "gridTemplateColumns", len: 0, typ: NTI1188015, name: "gridTemplateColumns", sons: null}, 
{kind: 1, offset: "gridTemplateRows", len: 0, typ: NTI1188015, name: "gridTemplateRows", sons: null}, 
{kind: 1, offset: "hangingPunctuation", len: 0, typ: NTI1188015, name: "hangingPunctuation", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI1188015, name: "height", sons: null}, 
{kind: 1, offset: "hyphens", len: 0, typ: NTI1188015, name: "hyphens", sons: null}, 
{kind: 1, offset: "imageOrientation", len: 0, typ: NTI1188015, name: "imageOrientation", sons: null}, 
{kind: 1, offset: "imageRendering", len: 0, typ: NTI1188015, name: "imageRendering", sons: null}, 
{kind: 1, offset: "inlineSize", len: 0, typ: NTI1188015, name: "inlineSize", sons: null}, 
{kind: 1, offset: "inset", len: 0, typ: NTI1188015, name: "inset", sons: null}, 
{kind: 1, offset: "insetBlock", len: 0, typ: NTI1188015, name: "insetBlock", sons: null}, 
{kind: 1, offset: "insetBlockEnd", len: 0, typ: NTI1188015, name: "insetBlockEnd", sons: null}, 
{kind: 1, offset: "insetBlockStart", len: 0, typ: NTI1188015, name: "insetBlockStart", sons: null}, 
{kind: 1, offset: "insetInline", len: 0, typ: NTI1188015, name: "insetInline", sons: null}, 
{kind: 1, offset: "insetInlineEnd", len: 0, typ: NTI1188015, name: "insetInlineEnd", sons: null}, 
{kind: 1, offset: "insetInlineStart", len: 0, typ: NTI1188015, name: "insetInlineStart", sons: null}, 
{kind: 1, offset: "isolation", len: 0, typ: NTI1188015, name: "isolation", sons: null}, 
{kind: 1, offset: "justifyContent", len: 0, typ: NTI1188015, name: "justifyContent", sons: null}, 
{kind: 1, offset: "justifyItems", len: 0, typ: NTI1188015, name: "justifyItems", sons: null}, 
{kind: 1, offset: "justifySelf", len: 0, typ: NTI1188015, name: "justifySelf", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI1188015, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI1188015, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineBreak", len: 0, typ: NTI1188015, name: "lineBreak", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI1188015, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI1188015, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI1188015, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI1188015, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI1188015, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI1188015, name: "margin", sons: null}, 
{kind: 1, offset: "marginBlock", len: 0, typ: NTI1188015, name: "marginBlock", sons: null}, 
{kind: 1, offset: "marginBlockEnd", len: 0, typ: NTI1188015, name: "marginBlockEnd", sons: null}, 
{kind: 1, offset: "marginBlockStart", len: 0, typ: NTI1188015, name: "marginBlockStart", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI1188015, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginInline", len: 0, typ: NTI1188015, name: "marginInline", sons: null}, 
{kind: 1, offset: "marginInlineEnd", len: 0, typ: NTI1188015, name: "marginInlineEnd", sons: null}, 
{kind: 1, offset: "marginInlineStart", len: 0, typ: NTI1188015, name: "marginInlineStart", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI1188015, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI1188015, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI1188015, name: "marginTop", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI1188015, name: "mask", sons: null}, 
{kind: 1, offset: "maskBorder", len: 0, typ: NTI1188015, name: "maskBorder", sons: null}, 
{kind: 1, offset: "maskBorderMode", len: 0, typ: NTI1188015, name: "maskBorderMode", sons: null}, 
{kind: 1, offset: "maskBorderOutset", len: 0, typ: NTI1188015, name: "maskBorderOutset", sons: null}, 
{kind: 1, offset: "maskBorderRepeat", len: 0, typ: NTI1188015, name: "maskBorderRepeat", sons: null}, 
{kind: 1, offset: "maskBorderSlice", len: 0, typ: NTI1188015, name: "maskBorderSlice", sons: null}, 
{kind: 1, offset: "maskBorderSource", len: 0, typ: NTI1188015, name: "maskBorderSource", sons: null}, 
{kind: 1, offset: "maskBorderWidth", len: 0, typ: NTI1188015, name: "maskBorderWidth", sons: null}, 
{kind: 1, offset: "maskClip", len: 0, typ: NTI1188015, name: "maskClip", sons: null}, 
{kind: 1, offset: "maskComposite", len: 0, typ: NTI1188015, name: "maskComposite", sons: null}, 
{kind: 1, offset: "maskImage", len: 0, typ: NTI1188015, name: "maskImage", sons: null}, 
{kind: 1, offset: "maskMode", len: 0, typ: NTI1188015, name: "maskMode", sons: null}, 
{kind: 1, offset: "maskOrigin", len: 0, typ: NTI1188015, name: "maskOrigin", sons: null}, 
{kind: 1, offset: "maskPosition", len: 0, typ: NTI1188015, name: "maskPosition", sons: null}, 
{kind: 1, offset: "maskRepeat", len: 0, typ: NTI1188015, name: "maskRepeat", sons: null}, 
{kind: 1, offset: "maskSize", len: 0, typ: NTI1188015, name: "maskSize", sons: null}, 
{kind: 1, offset: "maskType", len: 0, typ: NTI1188015, name: "maskType", sons: null}, 
{kind: 1, offset: "maxBlockSize", len: 0, typ: NTI1188015, name: "maxBlockSize", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI1188015, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxInlineSize", len: 0, typ: NTI1188015, name: "maxInlineSize", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI1188015, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minBlockSize", len: 0, typ: NTI1188015, name: "minBlockSize", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI1188015, name: "minHeight", sons: null}, 
{kind: 1, offset: "minInlineSize", len: 0, typ: NTI1188015, name: "minInlineSize", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI1188015, name: "minWidth", sons: null}, 
{kind: 1, offset: "mixBlendMode", len: 0, typ: NTI1188015, name: "mixBlendMode", sons: null}, 
{kind: 1, offset: "objectFit", len: 0, typ: NTI1188015, name: "objectFit", sons: null}, 
{kind: 1, offset: "objectPosition", len: 0, typ: NTI1188015, name: "objectPosition", sons: null}, 
{kind: 1, offset: "offset", len: 0, typ: NTI1188015, name: "offset", sons: null}, 
{kind: 1, offset: "offsetAnchor", len: 0, typ: NTI1188015, name: "offsetAnchor", sons: null}, 
{kind: 1, offset: "offsetDistance", len: 0, typ: NTI1188015, name: "offsetDistance", sons: null}, 
{kind: 1, offset: "offsetPath", len: 0, typ: NTI1188015, name: "offsetPath", sons: null}, 
{kind: 1, offset: "offsetRotate", len: 0, typ: NTI1188015, name: "offsetRotate", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI1188015, name: "opacity", sons: null}, 
{kind: 1, offset: "order", len: 0, typ: NTI1188015, name: "order", sons: null}, 
{kind: 1, offset: "orphans", len: 0, typ: NTI1188015, name: "orphans", sons: null}, 
{kind: 1, offset: "outline", len: 0, typ: NTI1188015, name: "outline", sons: null}, 
{kind: 1, offset: "outlineColor", len: 0, typ: NTI1188015, name: "outlineColor", sons: null}, 
{kind: 1, offset: "outlineOffset", len: 0, typ: NTI1188015, name: "outlineOffset", sons: null}, 
{kind: 1, offset: "outlineStyle", len: 0, typ: NTI1188015, name: "outlineStyle", sons: null}, 
{kind: 1, offset: "outlineWidth", len: 0, typ: NTI1188015, name: "outlineWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI1188015, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowAnchor", len: 0, typ: NTI1188015, name: "overflowAnchor", sons: null}, 
{kind: 1, offset: "overflowBlock", len: 0, typ: NTI1188015, name: "overflowBlock", sons: null}, 
{kind: 1, offset: "overflowInline", len: 0, typ: NTI1188015, name: "overflowInline", sons: null}, 
{kind: 1, offset: "overflowWrap", len: 0, typ: NTI1188015, name: "overflowWrap", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI1188015, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI1188015, name: "overflowY", sons: null}, 
{kind: 1, offset: "overscrollBehavior", len: 0, typ: NTI1188015, name: "overscrollBehavior", sons: null}, 
{kind: 1, offset: "overscrollBehaviorBlock", len: 0, typ: NTI1188015, name: "overscrollBehaviorBlock", sons: null}, 
{kind: 1, offset: "overscrollBehaviorInline", len: 0, typ: NTI1188015, name: "overscrollBehaviorInline", sons: null}, 
{kind: 1, offset: "overscrollBehaviorX", len: 0, typ: NTI1188015, name: "overscrollBehaviorX", sons: null}, 
{kind: 1, offset: "overscrollBehaviorY", len: 0, typ: NTI1188015, name: "overscrollBehaviorY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI1188015, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBlock", len: 0, typ: NTI1188015, name: "paddingBlock", sons: null}, 
{kind: 1, offset: "paddingBlockEnd", len: 0, typ: NTI1188015, name: "paddingBlockEnd", sons: null}, 
{kind: 1, offset: "paddingBlockStart", len: 0, typ: NTI1188015, name: "paddingBlockStart", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI1188015, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingInline", len: 0, typ: NTI1188015, name: "paddingInline", sons: null}, 
{kind: 1, offset: "paddingInlineEnd", len: 0, typ: NTI1188015, name: "paddingInlineEnd", sons: null}, 
{kind: 1, offset: "paddingInlineStart", len: 0, typ: NTI1188015, name: "paddingInlineStart", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI1188015, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI1188015, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI1188015, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI1188015, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI1188015, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pageBreakInside", len: 0, typ: NTI1188015, name: "pageBreakInside", sons: null}, 
{kind: 1, offset: "paintOrder", len: 0, typ: NTI1188015, name: "paintOrder", sons: null}, 
{kind: 1, offset: "perspective", len: 0, typ: NTI1188015, name: "perspective", sons: null}, 
{kind: 1, offset: "perspectiveOrigin", len: 0, typ: NTI1188015, name: "perspectiveOrigin", sons: null}, 
{kind: 1, offset: "placeContent", len: 0, typ: NTI1188015, name: "placeContent", sons: null}, 
{kind: 1, offset: "placeItems", len: 0, typ: NTI1188015, name: "placeItems", sons: null}, 
{kind: 1, offset: "placeSelf", len: 0, typ: NTI1188015, name: "placeSelf", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI1188015, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI1188015, name: "position", sons: null}, 
{kind: 1, offset: "quotes", len: 0, typ: NTI1188015, name: "quotes", sons: null}, 
{kind: 1, offset: "resize", len: 0, typ: NTI1188015, name: "resize", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI1188015, name: "right", sons: null}, 
{kind: 1, offset: "rotate", len: 0, typ: NTI1188015, name: "rotate", sons: null}, 
{kind: 1, offset: "rowGap", len: 0, typ: NTI1188015, name: "rowGap", sons: null}, 
{kind: 1, offset: "scale", len: 0, typ: NTI1188015, name: "scale", sons: null}, 
{kind: 1, offset: "scrollBehavior", len: 0, typ: NTI1188015, name: "scrollBehavior", sons: null}, 
{kind: 1, offset: "scrollMargin", len: 0, typ: NTI1188015, name: "scrollMargin", sons: null}, 
{kind: 1, offset: "scrollMarginBlock", len: 0, typ: NTI1188015, name: "scrollMarginBlock", sons: null}, 
{kind: 1, offset: "scrollMarginBlockEnd", len: 0, typ: NTI1188015, name: "scrollMarginBlockEnd", sons: null}, 
{kind: 1, offset: "scrollMarginBlockStart", len: 0, typ: NTI1188015, name: "scrollMarginBlockStart", sons: null}, 
{kind: 1, offset: "scrollMarginBottom", len: 0, typ: NTI1188015, name: "scrollMarginBottom", sons: null}, 
{kind: 1, offset: "scrollMarginInline", len: 0, typ: NTI1188015, name: "scrollMarginInline", sons: null}, 
{kind: 1, offset: "scrollMarginInlineEnd", len: 0, typ: NTI1188015, name: "scrollMarginInlineEnd", sons: null}, 
{kind: 1, offset: "scrollMarginInlineStart", len: 0, typ: NTI1188015, name: "scrollMarginInlineStart", sons: null}, 
{kind: 1, offset: "scrollMarginLeft", len: 0, typ: NTI1188015, name: "scrollMarginLeft", sons: null}, 
{kind: 1, offset: "scrollMarginRight", len: 0, typ: NTI1188015, name: "scrollMarginRight", sons: null}, 
{kind: 1, offset: "scrollMarginTop", len: 0, typ: NTI1188015, name: "scrollMarginTop", sons: null}, 
{kind: 1, offset: "scrollPadding", len: 0, typ: NTI1188015, name: "scrollPadding", sons: null}, 
{kind: 1, offset: "scrollPaddingBlock", len: 0, typ: NTI1188015, name: "scrollPaddingBlock", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockEnd", len: 0, typ: NTI1188015, name: "scrollPaddingBlockEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockStart", len: 0, typ: NTI1188015, name: "scrollPaddingBlockStart", sons: null}, 
{kind: 1, offset: "scrollPaddingBottom", len: 0, typ: NTI1188015, name: "scrollPaddingBottom", sons: null}, 
{kind: 1, offset: "scrollPaddingInline", len: 0, typ: NTI1188015, name: "scrollPaddingInline", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineEnd", len: 0, typ: NTI1188015, name: "scrollPaddingInlineEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineStart", len: 0, typ: NTI1188015, name: "scrollPaddingInlineStart", sons: null}, 
{kind: 1, offset: "scrollPaddingLeft", len: 0, typ: NTI1188015, name: "scrollPaddingLeft", sons: null}, 
{kind: 1, offset: "scrollPaddingRight", len: 0, typ: NTI1188015, name: "scrollPaddingRight", sons: null}, 
{kind: 1, offset: "scrollPaddingTop", len: 0, typ: NTI1188015, name: "scrollPaddingTop", sons: null}, 
{kind: 1, offset: "scrollSnapAlign", len: 0, typ: NTI1188015, name: "scrollSnapAlign", sons: null}, 
{kind: 1, offset: "scrollSnapStop", len: 0, typ: NTI1188015, name: "scrollSnapStop", sons: null}, 
{kind: 1, offset: "scrollSnapType", len: 0, typ: NTI1188015, name: "scrollSnapType", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI1188015, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI1188015, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI1188015, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarColor", len: 0, typ: NTI1188015, name: "scrollbarColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI1188015, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI1188015, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI1188015, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI1188015, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI1188015, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "scrollbarWidth", len: 0, typ: NTI1188015, name: "scrollbarWidth", sons: null}, 
{kind: 1, offset: "shapeImageThreshold", len: 0, typ: NTI1188015, name: "shapeImageThreshold", sons: null}, 
{kind: 1, offset: "shapeMargin", len: 0, typ: NTI1188015, name: "shapeMargin", sons: null}, 
{kind: 1, offset: "shapeOutside", len: 0, typ: NTI1188015, name: "shapeOutside", sons: null}, 
{kind: 1, offset: "tabSize", len: 0, typ: NTI1188015, name: "tabSize", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI1188015, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI1188015, name: "textAlign", sons: null}, 
{kind: 1, offset: "textAlignLast", len: 0, typ: NTI1188015, name: "textAlignLast", sons: null}, 
{kind: 1, offset: "textCombineUpright", len: 0, typ: NTI1188015, name: "textCombineUpright", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI1188015, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textDecorationColor", len: 0, typ: NTI1188015, name: "textDecorationColor", sons: null}, 
{kind: 1, offset: "textDecorationLine", len: 0, typ: NTI1188015, name: "textDecorationLine", sons: null}, 
{kind: 1, offset: "textDecorationSkipInk", len: 0, typ: NTI1188015, name: "textDecorationSkipInk", sons: null}, 
{kind: 1, offset: "textDecorationStyle", len: 0, typ: NTI1188015, name: "textDecorationStyle", sons: null}, 
{kind: 1, offset: "textDecorationThickness", len: 0, typ: NTI1188015, name: "textDecorationThickness", sons: null}, 
{kind: 1, offset: "textEmphasis", len: 0, typ: NTI1188015, name: "textEmphasis", sons: null}, 
{kind: 1, offset: "textEmphasisColor", len: 0, typ: NTI1188015, name: "textEmphasisColor", sons: null}, 
{kind: 1, offset: "textEmphasisPosition", len: 0, typ: NTI1188015, name: "textEmphasisPosition", sons: null}, 
{kind: 1, offset: "textEmphasisStyle", len: 0, typ: NTI1188015, name: "textEmphasisStyle", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI1188015, name: "textIndent", sons: null}, 
{kind: 1, offset: "textJustify", len: 0, typ: NTI1188015, name: "textJustify", sons: null}, 
{kind: 1, offset: "textOrientation", len: 0, typ: NTI1188015, name: "textOrientation", sons: null}, 
{kind: 1, offset: "textOverflow", len: 0, typ: NTI1188015, name: "textOverflow", sons: null}, 
{kind: 1, offset: "textRendering", len: 0, typ: NTI1188015, name: "textRendering", sons: null}, 
{kind: 1, offset: "textShadow", len: 0, typ: NTI1188015, name: "textShadow", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI1188015, name: "textTransform", sons: null}, 
{kind: 1, offset: "textUnderlineOffset", len: 0, typ: NTI1188015, name: "textUnderlineOffset", sons: null}, 
{kind: 1, offset: "textUnderlinePosition", len: 0, typ: NTI1188015, name: "textUnderlinePosition", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI1188015, name: "top", sons: null}, 
{kind: 1, offset: "touchAction", len: 0, typ: NTI1188015, name: "touchAction", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI1188015, name: "transform", sons: null}, 
{kind: 1, offset: "transformBox", len: 0, typ: NTI1188015, name: "transformBox", sons: null}, 
{kind: 1, offset: "transformOrigin", len: 0, typ: NTI1188015, name: "transformOrigin", sons: null}, 
{kind: 1, offset: "transformStyle", len: 0, typ: NTI1188015, name: "transformStyle", sons: null}, 
{kind: 1, offset: "transition", len: 0, typ: NTI1188015, name: "transition", sons: null}, 
{kind: 1, offset: "transitionDelay", len: 0, typ: NTI1188015, name: "transitionDelay", sons: null}, 
{kind: 1, offset: "transitionDuration", len: 0, typ: NTI1188015, name: "transitionDuration", sons: null}, 
{kind: 1, offset: "transitionProperty", len: 0, typ: NTI1188015, name: "transitionProperty", sons: null}, 
{kind: 1, offset: "transitionTimingFunction", len: 0, typ: NTI1188015, name: "transitionTimingFunction", sons: null}, 
{kind: 1, offset: "translate", len: 0, typ: NTI1188015, name: "translate", sons: null}, 
{kind: 1, offset: "unicodeBidi", len: 0, typ: NTI1188015, name: "unicodeBidi", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI1188015, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI1188015, name: "visibility", sons: null}, 
{kind: 1, offset: "whiteSpace", len: 0, typ: NTI1188015, name: "whiteSpace", sons: null}, 
{kind: 1, offset: "widows", len: 0, typ: NTI1188015, name: "widows", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI1188015, name: "width", sons: null}, 
{kind: 1, offset: "willChange", len: 0, typ: NTI1188015, name: "willChange", sons: null}, 
{kind: 1, offset: "wordBreak", len: 0, typ: NTI1188015, name: "wordBreak", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI1188015, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "writingMode", len: 0, typ: NTI1188015, name: "writingMode", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI1188015, name: "zIndex", sons: null}]};
NTI11357293.node = NNI11357293;
NTI11357293.base = NTI1194408;
var NNI15227207 = {kind: 2, offset: 0, typ: null, name: null, len: 6, sons: {"0": {kind: 1, offset: 0, typ: NTI15227207, name: "pkReplace", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI15227207, name: "pkRemove", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI15227207, name: "pkAppend", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI15227207, name: "pkInsertBefore", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI15227207, name: "pkDetach", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI15227207, name: "pkSame", len: 0, sons: null}}};
NTI15227207.node = NNI15227207;
NTI11357610.base = NTI11357235;
NTI11357612.base = NTI11357235;
NTI11357614.base = NTI11357235;
var NNI11357233 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI11357233, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI11357233, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI11357233, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI11357233, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI11357233, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI11357233, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI11357233, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI11357233, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI11357233, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI11357233, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI11357233, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI11357233, name: "NotationNode", len: 0, sons: null}}};
NTI11357233.node = NNI11357233;
var NNI11357231 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI11357231.node = NNI11357231;
NTI11357231.base = NTI1194408;
NTI11357229.base = NTI11357231;
NTI11357767.base = NTI11357243;
var NNI11357285 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "acceptCharset", len: 0, typ: NTI1188015, name: "acceptCharset", sons: null}, 
{kind: 1, offset: "action", len: 0, typ: NTI1188015, name: "action", sons: null}, 
{kind: 1, offset: "autocomplete", len: 0, typ: NTI1188015, name: "autocomplete", sons: null}, 
{kind: 1, offset: "elements", len: 0, typ: NTI11357767, name: "elements", sons: null}, 
{kind: 1, offset: "encoding", len: 0, typ: NTI1188015, name: "encoding", sons: null}, 
{kind: 1, offset: "enctype", len: 0, typ: NTI1188015, name: "enctype", sons: null}, 
{kind: 1, offset: "length", len: 0, typ: NTI1188044, name: "length", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI1188015, name: "method", sons: null}, 
{kind: 1, offset: "noValidate", len: 0, typ: NTI1188064, name: "noValidate", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI1188015, name: "target", sons: null}]};
NTI11357285.node = NNI11357285;
NTI11357285.base = NTI11357245;
NTI11357283.base = NTI11357285;
var NNI11357281 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defaultSelected", len: 0, typ: NTI1188064, name: "defaultSelected", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI1188064, name: "selected", sons: null}, 
{kind: 1, offset: "selectedIndex", len: 0, typ: NTI1188044, name: "selectedIndex", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI1188015, name: "text", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI1188015, name: "value", sons: null}]};
NTI11357281.node = NNI11357281;
NTI11357281.base = NTI11357245;
NTI11357279.base = NTI11357281;
NTI11357673.base = NTI11357279;
NTI11357675.base = NTI11357279;
var NNI11357245 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "className", len: 0, typ: NTI1188015, name: "className", sons: null}, 
{kind: 1, offset: "classList", len: 0, typ: NTI11357229, name: "classList", sons: null}, 
{kind: 1, offset: "checked", len: 0, typ: NTI1188064, name: "checked", sons: null}, 
{kind: 1, offset: "defaultChecked", len: 0, typ: NTI1188064, name: "defaultChecked", sons: null}, 
{kind: 1, offset: "defaultValue", len: 0, typ: NTI1188015, name: "defaultValue", sons: null}, 
{kind: 1, offset: "disabled", len: 0, typ: NTI1188064, name: "disabled", sons: null}, 
{kind: 1, offset: "form", len: 0, typ: NTI11357283, name: "form", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI1188015, name: "name", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI1188064, name: "readOnly", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI11357673, name: "options", sons: null}, 
{kind: 1, offset: "selectedOptions", len: 0, typ: NTI11357675, name: "selectedOptions", sons: null}, 
{kind: 1, offset: "clientWidth", len: 0, typ: NTI1188044, name: "clientWidth", sons: null}, 
{kind: 1, offset: "clientHeight", len: 0, typ: NTI1188044, name: "clientHeight", sons: null}, 
{kind: 1, offset: "contentEditable", len: 0, typ: NTI1188015, name: "contentEditable", sons: null}, 
{kind: 1, offset: "isContentEditable", len: 0, typ: NTI1188064, name: "isContentEditable", sons: null}, 
{kind: 1, offset: "dir", len: 0, typ: NTI1188015, name: "dir", sons: null}, 
{kind: 1, offset: "offsetHeight", len: 0, typ: NTI1188044, name: "offsetHeight", sons: null}, 
{kind: 1, offset: "offsetWidth", len: 0, typ: NTI1188044, name: "offsetWidth", sons: null}, 
{kind: 1, offset: "offsetLeft", len: 0, typ: NTI1188044, name: "offsetLeft", sons: null}, 
{kind: 1, offset: "offsetTop", len: 0, typ: NTI1188044, name: "offsetTop", sons: null}]};
NTI11357245.node = NNI11357245;
NTI11357245.base = NTI11357237;
NTI11357243.base = NTI11357245;
var NNI11357277 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI1188015, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI1188044, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI1188044, name: "y", sons: null}]};
NTI11357277.node = NNI11357277;
NTI11357277.base = NTI11357245;
NTI11357275.base = NTI11357277;
NTI11357651.base = NTI11357275;
NTI11357653.base = NTI11357283;
var NNI11357289 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "border", len: 0, typ: NTI1188044, name: "border", sons: null}, 
{kind: 1, offset: "complete", len: 0, typ: NTI1188064, name: "complete", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI1188044, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI1188044, name: "hspace", sons: null}, 
{kind: 1, offset: "lowsrc", len: 0, typ: NTI1188015, name: "lowsrc", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI1188015, name: "src", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI1188044, name: "vspace", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI1188044, name: "width", sons: null}]};
NTI11357289.node = NNI11357289;
NTI11357289.base = NTI11357245;
NTI11357287.base = NTI11357289;
NTI11357655.base = NTI11357287;
NTI11357657.base = NTI11357243;
var NNI11357273 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "height", len: 0, typ: NTI1188044, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI1188044, name: "hspace", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI1188015, name: "src", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI1188044, name: "width", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI1188015, name: "type", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI1188044, name: "vspace", sons: null}]};
NTI11357273.node = NNI11357273;
NTI11357273.base = NTI11357245;
NTI11357271.base = NTI11357273;
NTI11357659.base = NTI11357271;
var NNI11357269 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "target", len: 0, typ: NTI1188015, name: "target", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI1188015, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI1188044, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI1188044, name: "y", sons: null}]};
NTI11357269.node = NNI11357269;
NTI11357269.base = NTI11357245;
NTI11357267.base = NTI11357269;
NTI11357661.base = NTI11357267;
var NNI11358618 = {kind: 1, offset: "then", len: 0, typ: NTI11358619, name: "then", sons: null};
NTI11358618.node = NNI11358618;
NTI11357385.base = NTI11358618;
var NNI11358626 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ready", len: 0, typ: NTI11357385, name: "ready", sons: null}, 
{kind: 1, offset: "onloadingdone", len: 0, typ: NTI11358628, name: "onloadingdone", sons: null}]};
NTI11358626.node = NNI11358626;
NTI11357387.base = NTI11358626;
var NNI11357241 = {kind: 2, len: 23, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "activeElement", len: 0, typ: NTI11357243, name: "activeElement", sons: null}, 
{kind: 1, offset: "documentElement", len: 0, typ: NTI11357243, name: "documentElement", sons: null}, 
{kind: 1, offset: "alinkColor", len: 0, typ: NTI1188015, name: "alinkColor", sons: null}, 
{kind: 1, offset: "bgColor", len: 0, typ: NTI1188015, name: "bgColor", sons: null}, 
{kind: 1, offset: "body", len: 0, typ: NTI11357243, name: "body", sons: null}, 
{kind: 1, offset: "charset", len: 0, typ: NTI1188015, name: "charset", sons: null}, 
{kind: 1, offset: "cookie", len: 0, typ: NTI1188015, name: "cookie", sons: null}, 
{kind: 1, offset: "defaultCharset", len: 0, typ: NTI1188015, name: "defaultCharset", sons: null}, 
{kind: 1, offset: "fgColor", len: 0, typ: NTI1188015, name: "fgColor", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI11357243, name: "head", sons: null}, 
{kind: 1, offset: "lastModified", len: 0, typ: NTI1188015, name: "lastModified", sons: null}, 
{kind: 1, offset: "linkColor", len: 0, typ: NTI1188015, name: "linkColor", sons: null}, 
{kind: 1, offset: "referrer", len: 0, typ: NTI1188015, name: "referrer", sons: null}, 
{kind: 1, offset: "title", len: 0, typ: NTI1188015, name: "title", sons: null}, 
{kind: 1, offset: "URL", len: 0, typ: NTI1188015, name: "URL", sons: null}, 
{kind: 1, offset: "vlinkColor", len: 0, typ: NTI1188015, name: "vlinkColor", sons: null}, 
{kind: 1, offset: "anchors", len: 0, typ: NTI11357651, name: "anchors", sons: null}, 
{kind: 1, offset: "forms", len: 0, typ: NTI11357653, name: "forms", sons: null}, 
{kind: 1, offset: "images", len: 0, typ: NTI11357655, name: "images", sons: null}, 
{kind: 1, offset: "applets", len: 0, typ: NTI11357657, name: "applets", sons: null}, 
{kind: 1, offset: "embeds", len: 0, typ: NTI11357659, name: "embeds", sons: null}, 
{kind: 1, offset: "links", len: 0, typ: NTI11357661, name: "links", sons: null}, 
{kind: 1, offset: "fonts", len: 0, typ: NTI11357387, name: "fonts", sons: null}]};
NTI11357241.node = NNI11357241;
NTI11357241.base = NTI11357237;
NTI11357239.base = NTI11357241;
NTI11357291.base = NTI11357293;
var NNI11357237 = {kind: 2, len: 22, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI11357610, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI11357612, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI11357614, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI1188015, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI11357235, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI11357235, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI11357235, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI1188015, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI11357233, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI1188015, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI11357235, name: "parentNode", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI11357235, name: "content", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI11357235, name: "previousSibling", sons: null}, 
{kind: 1, offset: "ownerDocument", len: 0, typ: NTI11357239, name: "ownerDocument", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI1188015, name: "innerHTML", sons: null}, 
{kind: 1, offset: "outerHTML", len: 0, typ: NTI1188015, name: "outerHTML", sons: null}, 
{kind: 1, offset: "innerText", len: 0, typ: NTI1188015, name: "innerText", sons: null}, 
{kind: 1, offset: "textContent", len: 0, typ: NTI1188015, name: "textContent", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI11357291, name: "style", sons: null}, 
{kind: 1, offset: "baseURI", len: 0, typ: NTI1188015, name: "baseURI", sons: null}, 
{kind: 1, offset: "parentElement", len: 0, typ: NTI11357243, name: "parentElement", sons: null}, 
{kind: 1, offset: "isConnected", len: 0, typ: NTI1188064, name: "isConnected", sons: null}]};
NTI11357237.node = NNI11357237;
var NNI11357205 = {kind: 2, len: 23, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI11357388, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI11357392, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI11357396, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI11357400, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI11357404, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI11357408, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI11357412, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI11357416, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI11357420, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI11357424, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI11357428, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI11357432, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI11357436, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI11357440, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI11357444, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI11357448, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI11357452, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI11357456, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI11357460, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI11357464, name: "onunload", sons: null}, 
{kind: 1, offset: "onloadstart", len: 0, typ: NTI11357468, name: "onloadstart", sons: null}, 
{kind: 1, offset: "onprogress", len: 0, typ: NTI11357472, name: "onprogress", sons: null}, 
{kind: 1, offset: "onloadend", len: 0, typ: NTI11357476, name: "onloadend", sons: null}]};
NTI11357205.node = NNI11357205;
NTI11357205.base = NTI1194408;
NTI11357237.base = NTI11357205;
NTI11357235.base = NTI11357237;
var NNI14962028 = {kind: 2, offset: 0, typ: null, name: null, len: 214, sons: {"0": {kind: 1, offset: 0, typ: NTI14962028, name: "#text", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI14962028, name: "#int", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI14962028, name: "#bool", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI14962028, name: "#vthunk", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI14962028, name: "#dthunk", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI14962028, name: "#component", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI14962028, name: "#verbatim", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI14962028, name: "html", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI14962028, name: "head", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI14962028, name: "title", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI14962028, name: "base", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI14962028, name: "link", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI14962028, name: "meta", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI14962028, name: "style", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI14962028, name: "script", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI14962028, name: "noscript", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI14962028, name: "body", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI14962028, name: "section", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI14962028, name: "nav", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI14962028, name: "article", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI14962028, name: "aside", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI14962028, name: "h1", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI14962028, name: "h2", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI14962028, name: "h3", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI14962028, name: "h4", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI14962028, name: "h5", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI14962028, name: "h6", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI14962028, name: "hgroup", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI14962028, name: "header", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI14962028, name: "footer", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI14962028, name: "address", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI14962028, name: "main", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI14962028, name: "p", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI14962028, name: "hr", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI14962028, name: "pre", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI14962028, name: "blockquote", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI14962028, name: "ol", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI14962028, name: "ul", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI14962028, name: "li", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI14962028, name: "dl", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI14962028, name: "dt", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI14962028, name: "dd", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI14962028, name: "figure", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI14962028, name: "figcaption", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI14962028, name: "div", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI14962028, name: "a", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI14962028, name: "em", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI14962028, name: "strong", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI14962028, name: "small", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI14962028, name: "s", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI14962028, name: "cite", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI14962028, name: "quote", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI14962028, name: "dfn", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI14962028, name: "abbr", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI14962028, name: "data", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI14962028, name: "time", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI14962028, name: "code", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI14962028, name: "var", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI14962028, name: "samp", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI14962028, name: "kdb", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI14962028, name: "sub", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI14962028, name: "sup", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI14962028, name: "i", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI14962028, name: "b", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI14962028, name: "u", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI14962028, name: "mark", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI14962028, name: "ruby", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI14962028, name: "rt", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI14962028, name: "rp", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI14962028, name: "bdi", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI14962028, name: "dbo", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI14962028, name: "span", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI14962028, name: "br", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI14962028, name: "wbr", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI14962028, name: "ins", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI14962028, name: "del", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI14962028, name: "img", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI14962028, name: "iframe", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI14962028, name: "embed", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI14962028, name: "object", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI14962028, name: "param", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI14962028, name: "video", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI14962028, name: "audio", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI14962028, name: "source", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI14962028, name: "track", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI14962028, name: "canvas", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI14962028, name: "map", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI14962028, name: "area", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI14962028, name: "animate", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI14962028, name: "animateMotion", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI14962028, name: "animateTransform", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI14962028, name: "circle", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI14962028, name: "clipPath", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI14962028, name: "defs", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI14962028, name: "desc", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI14962028, name: "discard", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI14962028, name: "ellipse", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI14962028, name: "feBlend", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI14962028, name: "feColorMatrix", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI14962028, name: "feComponentTransfer", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI14962028, name: "feComposite", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI14962028, name: "feConvolveMatrix", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI14962028, name: "feDiffuseLighting", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI14962028, name: "feDisplacementMap", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI14962028, name: "feDistantLight", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI14962028, name: "feDropShadow", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI14962028, name: "feFlood", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI14962028, name: "feFuncA", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI14962028, name: "feFuncB", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI14962028, name: "feFuncG", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI14962028, name: "feFuncR", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI14962028, name: "feGaussianBlur", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI14962028, name: "feImage", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI14962028, name: "feMerge", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI14962028, name: "feMergeNode", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI14962028, name: "feMorphology", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI14962028, name: "feOffset", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI14962028, name: "fePointLight", len: 0, sons: null}, 
"118": {kind: 1, offset: 118, typ: NTI14962028, name: "feSpecularLighting", len: 0, sons: null}, 
"119": {kind: 1, offset: 119, typ: NTI14962028, name: "feSpotLight", len: 0, sons: null}, 
"120": {kind: 1, offset: 120, typ: NTI14962028, name: "feTile", len: 0, sons: null}, 
"121": {kind: 1, offset: 121, typ: NTI14962028, name: "feTurbulence", len: 0, sons: null}, 
"122": {kind: 1, offset: 122, typ: NTI14962028, name: "filter", len: 0, sons: null}, 
"123": {kind: 1, offset: 123, typ: NTI14962028, name: "foreignObject", len: 0, sons: null}, 
"124": {kind: 1, offset: 124, typ: NTI14962028, name: "g", len: 0, sons: null}, 
"125": {kind: 1, offset: 125, typ: NTI14962028, name: "image", len: 0, sons: null}, 
"126": {kind: 1, offset: 126, typ: NTI14962028, name: "line", len: 0, sons: null}, 
"127": {kind: 1, offset: 127, typ: NTI14962028, name: "linearGradient", len: 0, sons: null}, 
"128": {kind: 1, offset: 128, typ: NTI14962028, name: "marker", len: 0, sons: null}, 
"129": {kind: 1, offset: 129, typ: NTI14962028, name: "mask", len: 0, sons: null}, 
"130": {kind: 1, offset: 130, typ: NTI14962028, name: "metadata", len: 0, sons: null}, 
"131": {kind: 1, offset: 131, typ: NTI14962028, name: "mpath", len: 0, sons: null}, 
"132": {kind: 1, offset: 132, typ: NTI14962028, name: "path", len: 0, sons: null}, 
"133": {kind: 1, offset: 133, typ: NTI14962028, name: "pattern", len: 0, sons: null}, 
"134": {kind: 1, offset: 134, typ: NTI14962028, name: "polygon", len: 0, sons: null}, 
"135": {kind: 1, offset: 135, typ: NTI14962028, name: "polyline", len: 0, sons: null}, 
"136": {kind: 1, offset: 136, typ: NTI14962028, name: "radialGradient", len: 0, sons: null}, 
"137": {kind: 1, offset: 137, typ: NTI14962028, name: "rect", len: 0, sons: null}, 
"138": {kind: 1, offset: 138, typ: NTI14962028, name: "set", len: 0, sons: null}, 
"139": {kind: 1, offset: 139, typ: NTI14962028, name: "stop", len: 0, sons: null}, 
"140": {kind: 1, offset: 140, typ: NTI14962028, name: "svg", len: 0, sons: null}, 
"141": {kind: 1, offset: 141, typ: NTI14962028, name: "switch", len: 0, sons: null}, 
"142": {kind: 1, offset: 142, typ: NTI14962028, name: "symbol", len: 0, sons: null}, 
"143": {kind: 1, offset: 143, typ: NTI14962028, name: "text", len: 0, sons: null}, 
"144": {kind: 1, offset: 144, typ: NTI14962028, name: "textPath", len: 0, sons: null}, 
"145": {kind: 1, offset: 145, typ: NTI14962028, name: "tspan", len: 0, sons: null}, 
"146": {kind: 1, offset: 146, typ: NTI14962028, name: "unknown", len: 0, sons: null}, 
"147": {kind: 1, offset: 147, typ: NTI14962028, name: "use", len: 0, sons: null}, 
"148": {kind: 1, offset: 148, typ: NTI14962028, name: "view", len: 0, sons: null}, 
"149": {kind: 1, offset: 149, typ: NTI14962028, name: "maction", len: 0, sons: null}, 
"150": {kind: 1, offset: 150, typ: NTI14962028, name: "math", len: 0, sons: null}, 
"151": {kind: 1, offset: 151, typ: NTI14962028, name: "menclose", len: 0, sons: null}, 
"152": {kind: 1, offset: 152, typ: NTI14962028, name: "merror", len: 0, sons: null}, 
"153": {kind: 1, offset: 153, typ: NTI14962028, name: "mfenced", len: 0, sons: null}, 
"154": {kind: 1, offset: 154, typ: NTI14962028, name: "mfrac", len: 0, sons: null}, 
"155": {kind: 1, offset: 155, typ: NTI14962028, name: "mglyph", len: 0, sons: null}, 
"156": {kind: 1, offset: 156, typ: NTI14962028, name: "mi", len: 0, sons: null}, 
"157": {kind: 1, offset: 157, typ: NTI14962028, name: "mlabeledtr", len: 0, sons: null}, 
"158": {kind: 1, offset: 158, typ: NTI14962028, name: "mmultiscripts", len: 0, sons: null}, 
"159": {kind: 1, offset: 159, typ: NTI14962028, name: "mn", len: 0, sons: null}, 
"160": {kind: 1, offset: 160, typ: NTI14962028, name: "mo", len: 0, sons: null}, 
"161": {kind: 1, offset: 161, typ: NTI14962028, name: "mover", len: 0, sons: null}, 
"162": {kind: 1, offset: 162, typ: NTI14962028, name: "mpadded", len: 0, sons: null}, 
"163": {kind: 1, offset: 163, typ: NTI14962028, name: "mphantom", len: 0, sons: null}, 
"164": {kind: 1, offset: 164, typ: NTI14962028, name: "mroot", len: 0, sons: null}, 
"165": {kind: 1, offset: 165, typ: NTI14962028, name: "mrow", len: 0, sons: null}, 
"166": {kind: 1, offset: 166, typ: NTI14962028, name: "ms", len: 0, sons: null}, 
"167": {kind: 1, offset: 167, typ: NTI14962028, name: "mspace", len: 0, sons: null}, 
"168": {kind: 1, offset: 168, typ: NTI14962028, name: "msqrt", len: 0, sons: null}, 
"169": {kind: 1, offset: 169, typ: NTI14962028, name: "mstyle", len: 0, sons: null}, 
"170": {kind: 1, offset: 170, typ: NTI14962028, name: "msub", len: 0, sons: null}, 
"171": {kind: 1, offset: 171, typ: NTI14962028, name: "msubsup", len: 0, sons: null}, 
"172": {kind: 1, offset: 172, typ: NTI14962028, name: "msup", len: 0, sons: null}, 
"173": {kind: 1, offset: 173, typ: NTI14962028, name: "mtable", len: 0, sons: null}, 
"174": {kind: 1, offset: 174, typ: NTI14962028, name: "mtd", len: 0, sons: null}, 
"175": {kind: 1, offset: 175, typ: NTI14962028, name: "mtext", len: 0, sons: null}, 
"176": {kind: 1, offset: 176, typ: NTI14962028, name: "mtr", len: 0, sons: null}, 
"177": {kind: 1, offset: 177, typ: NTI14962028, name: "munder", len: 0, sons: null}, 
"178": {kind: 1, offset: 178, typ: NTI14962028, name: "munderover", len: 0, sons: null}, 
"179": {kind: 1, offset: 179, typ: NTI14962028, name: "semantics", len: 0, sons: null}, 
"180": {kind: 1, offset: 180, typ: NTI14962028, name: "table", len: 0, sons: null}, 
"181": {kind: 1, offset: 181, typ: NTI14962028, name: "caption", len: 0, sons: null}, 
"182": {kind: 1, offset: 182, typ: NTI14962028, name: "colgroup", len: 0, sons: null}, 
"183": {kind: 1, offset: 183, typ: NTI14962028, name: "col", len: 0, sons: null}, 
"184": {kind: 1, offset: 184, typ: NTI14962028, name: "tbody", len: 0, sons: null}, 
"185": {kind: 1, offset: 185, typ: NTI14962028, name: "thead", len: 0, sons: null}, 
"186": {kind: 1, offset: 186, typ: NTI14962028, name: "tfoot", len: 0, sons: null}, 
"187": {kind: 1, offset: 187, typ: NTI14962028, name: "tr", len: 0, sons: null}, 
"188": {kind: 1, offset: 188, typ: NTI14962028, name: "td", len: 0, sons: null}, 
"189": {kind: 1, offset: 189, typ: NTI14962028, name: "th", len: 0, sons: null}, 
"190": {kind: 1, offset: 190, typ: NTI14962028, name: "form", len: 0, sons: null}, 
"191": {kind: 1, offset: 191, typ: NTI14962028, name: "fieldset", len: 0, sons: null}, 
"192": {kind: 1, offset: 192, typ: NTI14962028, name: "legend", len: 0, sons: null}, 
"193": {kind: 1, offset: 193, typ: NTI14962028, name: "label", len: 0, sons: null}, 
"194": {kind: 1, offset: 194, typ: NTI14962028, name: "input", len: 0, sons: null}, 
"195": {kind: 1, offset: 195, typ: NTI14962028, name: "button", len: 0, sons: null}, 
"196": {kind: 1, offset: 196, typ: NTI14962028, name: "select", len: 0, sons: null}, 
"197": {kind: 1, offset: 197, typ: NTI14962028, name: "datalist", len: 0, sons: null}, 
"198": {kind: 1, offset: 198, typ: NTI14962028, name: "optgroup", len: 0, sons: null}, 
"199": {kind: 1, offset: 199, typ: NTI14962028, name: "option", len: 0, sons: null}, 
"200": {kind: 1, offset: 200, typ: NTI14962028, name: "textarea", len: 0, sons: null}, 
"201": {kind: 1, offset: 201, typ: NTI14962028, name: "keygen", len: 0, sons: null}, 
"202": {kind: 1, offset: 202, typ: NTI14962028, name: "output", len: 0, sons: null}, 
"203": {kind: 1, offset: 203, typ: NTI14962028, name: "progress", len: 0, sons: null}, 
"204": {kind: 1, offset: 204, typ: NTI14962028, name: "meter", len: 0, sons: null}, 
"205": {kind: 1, offset: 205, typ: NTI14962028, name: "details", len: 0, sons: null}, 
"206": {kind: 1, offset: 206, typ: NTI14962028, name: "summary", len: 0, sons: null}, 
"207": {kind: 1, offset: 207, typ: NTI14962028, name: "command", len: 0, sons: null}, 
"208": {kind: 1, offset: 208, typ: NTI14962028, name: "menu", len: 0, sons: null}, 
"209": {kind: 1, offset: 209, typ: NTI14962028, name: "bdo", len: 0, sons: null}, 
"210": {kind: 1, offset: 210, typ: NTI14962028, name: "dialog", len: 0, sons: null}, 
"211": {kind: 1, offset: 211, typ: NTI14962028, name: "kbd", len: 0, sons: null}, 
"212": {kind: 1, offset: 212, typ: NTI14962028, name: "slot", len: 0, sons: null}, 
"213": {kind: 1, offset: 213, typ: NTI14962028, name: "template", len: 0, sons: null}}};
NTI14962028.node = NNI14962028;
NTI14965037.base = NTI14965022;
NTI14965039.base = NTI1188015;
var NNI14962246 = {kind: 2, offset: 0, typ: null, name: null, len: 37, sons: {"0": {kind: 1, offset: 0, typ: NTI14962246, name: "onclick", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI14962246, name: "oncontextmenu", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI14962246, name: "ondblclick", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI14962246, name: "onkeyup", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI14962246, name: "onkeydown", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI14962246, name: "onkeypressed", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI14962246, name: "onfocus", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI14962246, name: "onblur", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI14962246, name: "onchange", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI14962246, name: "onscroll", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI14962246, name: "onmousedown", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI14962246, name: "onmouseenter", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI14962246, name: "onmouseleave", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI14962246, name: "onmousemove", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI14962246, name: "onmouseout", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI14962246, name: "onmouseover", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI14962246, name: "onmouseup", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI14962246, name: "ondrag", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI14962246, name: "ondragend", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI14962246, name: "ondragenter", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI14962246, name: "ondragleave", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI14962246, name: "ondragover", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI14962246, name: "ondragstart", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI14962246, name: "ondrop", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI14962246, name: "onsubmit", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI14962246, name: "oninput", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI14962246, name: "onanimationstart", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI14962246, name: "onanimationend", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI14962246, name: "onanimationiteration", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI14962246, name: "onkeyupenter", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI14962246, name: "onkeyuplater", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI14962246, name: "onload", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI14962246, name: "ontransitioncancel", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI14962246, name: "ontransitionend", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI14962246, name: "ontransitionrun", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI14962246, name: "ontransitionstart", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI14962246, name: "onwheel", len: 0, sons: null}}};
NTI14962246.node = NNI14962246;
var NNI14965030 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI14962246, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI14965075, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI14965077, name: "Field2", sons: null}]};
NTI14965030.node = NNI14965030;
NTI14965018.base = NTI14965030;
var NNI14918323 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI14918323.node = NNI14918323;
NTI14918324.base = NTI14918323;
var NNI14965031 = {kind: 2, len: 11, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI14962028, name: "kind", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI1188044, name: "index", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI1188015, name: "id", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI1188015, name: "class", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI1188015, name: "text", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI14965037, name: "kids", sons: null}, 
{kind: 1, offset: "attrs", len: 0, typ: NTI14965039, name: "attrs", sons: null}, 
{kind: 1, offset: "events", len: 0, typ: NTI14965018, name: "events", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI14918324, name: "style", sons: null}, 
{kind: 1, offset: "styleVersion", len: 0, typ: NTI1188044, name: "styleVersion", sons: null}, 
{kind: 1, offset: "dom", len: 0, typ: NTI11357235, name: "dom", sons: null}]};
NTI14965031.node = NNI14965031;
NTI14965031.base = NTI1194408;
NTI14965022.base = NTI14965031;
var NNI15227209 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "k", len: 0, typ: NTI15227207, name: "k", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI11357235, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI11357235, name: "current", sons: null}, 
{kind: 1, offset: "newNode", len: 0, typ: NTI14965022, name: "newNode", sons: null}, 
{kind: 1, offset: "oldNode", len: 0, typ: NTI14965022, name: "oldNode", sons: null}]};
NTI15227209.node = NNI15227209;
var NNI15227211 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI14965022, name: "parent", sons: null}, 
{kind: 1, offset: "newChild", len: 0, typ: NTI14965022, name: "newChild", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI1188044, name: "pos", sons: null}]};
NTI15227211.node = NNI15227211;
NTI16211038.base = NTI1188044;
NTI11721016.base = NTI1188005;
NTI11721018.base = NTI1188005;
var NNI16211028 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "lat", len: 0, typ: NTI11721016, name: "lat", sons: null}, 
{kind: 1, offset: "lng", len: 0, typ: NTI11721018, name: "lng", sons: null}]};
NTI16211028.node = NNI16211028;
NTI16211017.base = NTI16211028;
NTI16211040.base = NTI16211017;
var NNI16211032 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "linkId", len: 0, typ: NTI1188044, name: "linkId", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI1188013, name: "name", sons: null}, 
{kind: 1, offset: "cityId", len: 0, typ: NTI1188044, name: "cityId", sons: null}, 
{kind: 1, offset: "districtId", len: 0, typ: NTI1188044, name: "districtId", sons: null}, 
{kind: 1, offset: "postalCode", len: 0, typ: NTI1188013, name: "postalCode", sons: null}, 
{kind: 1, offset: "neighborLinks", len: 0, typ: NTI16211038, name: "neighborLinks", sons: null}, 
{kind: 1, offset: "geometry", len: 0, typ: NTI16211040, name: "geometry", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI1188064, name: "readOnly", sons: null}, 
{kind: 1, offset: "addedToMap", len: 0, typ: NTI1188064, name: "addedToMap", sons: null}, 
{kind: 1, offset: "addedToSector", len: 0, typ: NTI1188064, name: "addedToSector", sons: null}]};
NTI16211032.node = NNI16211032;
NTI16211019.base = NTI16211032;
var NNI16211135 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI11407269, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1188044, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI16211019, name: "Field2", sons: null}]};
NTI16211135.node = NNI16211135;
NTI16211132.base = NTI16211135;
var NNI16211129 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI16211132, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI1188044, name: "counter", sons: null}]};
NTI16211129.node = NNI16211129;
NTI16211048.base = NTI16211019;
NTI16211062.base = NTI16211019;
var NNI16211076 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI11407269, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1188044, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1188013, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI16211062, name: "Field3", sons: null}]};
NTI16211076.node = NNI16211076;
NTI16211073.base = NTI16211076;
var NNI16211070 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI16211073, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI1188044, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI1188044, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI1188044, name: "last", sons: null}]};
NTI16211070.node = NNI16211070;
var NNI16211053 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "postalCode", len: 0, typ: NTI1188013, name: "postalCode", sons: null}, 
{kind: 1, offset: "district", len: 0, typ: NTI1188013, name: "district", sons: null}, 
{kind: 1, offset: "folkDistrict", len: 0, typ: NTI1188013, name: "folkDistrict", sons: null}, 
{kind: 1, offset: "city", len: 0, typ: NTI1188013, name: "city", sons: null}, 
{kind: 1, offset: "pFix", len: 0, typ: NTI1188044, name: "pFix", sons: null}, 
{kind: 1, offset: "streets", len: 0, typ: NTI16211070, name: "streets", sons: null}, 
{kind: 1, offset: "shownOnMap", len: 0, typ: NTI1188064, name: "shownOnMap", sons: null}, 
{kind: 1, offset: "exclude", len: 0, typ: NTI1188064, name: "exclude", sons: null}]};
NTI16211053.node = NNI16211053;
NTI16211023.base = NTI16211053;
var NNI16211046 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI1188013, name: "name", sons: null}, 
{kind: 1, offset: "links", len: 0, typ: NTI16211048, name: "links", sons: null}, 
{kind: 1, offset: "sector", len: 0, typ: NTI16211023, name: "sector", sons: null}, 
{kind: 1, offset: "totalFamilies", len: 0, typ: NTI1194404, name: "totalFamilies", sons: null}]};
NTI16211046.node = NNI16211046;
NTI16211021.base = NTI16211046;
var NNI16211158 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI11407269, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1188044, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1188013, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI16211021, name: "Field3", sons: null}]};
NTI16211158.node = NNI16211158;
NTI16211155.base = NTI16211158;
var NNI16211152 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI16211155, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI1188044, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI1188044, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI1188044, name: "last", sons: null}]};
NTI16211152.node = NNI16211152;
var NNI11600097 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI11600097.node = NNI11600097;
var NNI1194754 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194754.node = NNI1194754;
NTI1194754.base = NTI1194408;
NTI11600097.base = NTI1194754;
NTI11600085.base = NTI11600097;
var NNI16211184 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI11407269, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1188013, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI11600085, name: "Field2", sons: null}]};
NTI16211184.node = NNI16211184;
NTI16211181.base = NTI16211184;
var NNI16211178 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI16211181, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI1188044, name: "counter", sons: null}]};
NTI16211178.node = NNI16211178;
var NNI16211207 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI11407269, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1188044, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1188013, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI16211023, name: "Field3", sons: null}]};
NTI16211207.node = NNI16211207;
NTI16211204.base = NTI16211207;
var NNI16211201 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI16211204, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI1188044, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI1188044, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI1188044, name: "last", sons: null}]};
NTI16211201.node = NNI16211201;
var NNI16211233 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI11407269, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1188013, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1188044, name: "Field2", sons: null}]};
NTI16211233.node = NNI16211233;
NTI16211230.base = NTI16211233;
var NNI16211227 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI16211230, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI1188044, name: "counter", sons: null}]};
NTI16211227.node = NNI16211227;
var NNI16211119 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "allLinks", len: 0, typ: NTI16211129, name: "allLinks", sons: null}, 
{kind: 1, offset: "allStreets", len: 0, typ: NTI16211152, name: "allStreets", sons: null}, 
{kind: 1, offset: "cachedTiles", len: 0, typ: NTI16211178, name: "cachedTiles", sons: null}, 
{kind: 1, offset: "allSectors", len: 0, typ: NTI16211201, name: "allSectors", sons: null}, 
{kind: 1, offset: "lastPostfix", len: 0, typ: NTI16211227, name: "lastPostfix", sons: null}]};
NTI16211119.node = NNI16211119;
NTI16211027.base = NTI16211119;
NTI13618237.base = NTI13618276;
NTI13618233.base = NTI13618268;
NTI13618231.base = NTI13618265;
NTI13618229.base = NTI13618262;
var NNI13618204 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI13618204, name: "Monday", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI13618204, name: "Tuesday", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI13618204, name: "Wednesday", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI13618204, name: "Thursday", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI13618204, name: "Friday", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI13618204, name: "Saturday", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI13618204, name: "Sunday", len: 0, sons: null}}};
NTI13618204.node = NNI13618204;
NTI13618235.base = NTI13618272;
var NNI13618315 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "zonedTimeFromTimeImpl", len: 0, typ: NTI13618316, name: "zonedTimeFromTimeImpl", sons: null}, 
{kind: 1, offset: "zonedTimeFromAdjTimeImpl", len: 0, typ: NTI13618320, name: "zonedTimeFromAdjTimeImpl", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI1188013, name: "name", sons: null}]};
NTI13618315.node = NNI13618315;
NTI13618251.base = NTI13618315;
var NNI13618241 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nanosecond", len: 0, typ: NTI13618237, name: "nanosecond", sons: null}, 
{kind: 1, offset: "second", len: 0, typ: NTI13618233, name: "second", sons: null}, 
{kind: 1, offset: "minute", len: 0, typ: NTI13618231, name: "minute", sons: null}, 
{kind: 1, offset: "hour", len: 0, typ: NTI13618229, name: "hour", sons: null}, 
{kind: 1, offset: "monthdayZero", len: 0, typ: NTI1188044, name: "monthdayZero", sons: null}, 
{kind: 1, offset: "monthZero", len: 0, typ: NTI1188044, name: "monthZero", sons: null}, 
{kind: 1, offset: "year", len: 0, typ: NTI1188044, name: "year", sons: null}, 
{kind: 1, offset: "weekday", len: 0, typ: NTI13618204, name: "weekday", sons: null}, 
{kind: 1, offset: "yearday", len: 0, typ: NTI13618235, name: "yearday", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI1188064, name: "isDst", sons: null}, 
{kind: 1, offset: "timezone", len: 0, typ: NTI13618251, name: "timezone", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI1188044, name: "utcOffset", sons: null}]};
NTI13618241.node = NNI13618241;
NTI13618241.base = NTI1194408;
var NNI13618239 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI1188052, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI13618237, name: "nanosecond", sons: null}]};
NTI13618239.node = NNI13618239;
var NNI13618243 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI1188052, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI13618237, name: "nanosecond", sons: null}]};
NTI13618243.node = NNI13618243;
NTI13618227.base = NTI13618259;
var NNI13618202 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI13618202, name: "January", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI13618202, name: "February", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI13618202, name: "March", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI13618202, name: "April", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI13618202, name: "May", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI13618202, name: "June", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI13618202, name: "July", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI13618202, name: "August", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI13618202, name: "September", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI13618202, name: "October", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI13618202, name: "November", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI13618202, name: "December", len: 0, sons: null}}};
NTI13618202.node = NNI13618202;
var NNI13640039 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI13618227, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI13618202, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1188044, name: "Field2", sons: null}]};
NTI13640039.node = NNI13640039;
var NNI13618253 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "time", len: 0, typ: NTI13618239, name: "time", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI1188044, name: "utcOffset", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI1188064, name: "isDst", sons: null}]};
NTI13618253.node = NNI13618253;
var NNI13051054 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI13051054, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI13051054, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI13051054, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI13051054, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI13051054, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI13051054, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI13051054, name: "JArray", len: 0, sons: null}}};
NTI13051054.node = NNI13051054;
var NNI13051087 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI11407269, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1188044, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1188013, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI13051056, name: "Field3", sons: null}]};
NTI13051087.node = NNI13051087;
NTI13051084.base = NTI13051087;
var NNI13051081 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI13051084, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI1188044, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI1188044, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI1188044, name: "last", sons: null}]};
NTI13051081.node = NNI13051081;
NTI13051098.base = NTI13051056;
var NNI13051058 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "isUnquoted", len: 0, typ: NTI1188064, name: "isUnquoted", sons: null}, 
{kind: 3, offset: "kind", len: 7, typ: NTI13051054, name: "kind", sons: [[setConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI1188013, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI1188080, name: "num", sons: null}], 
[setConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI1188005, name: "fnum", sons: null}], 
[setConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI1188064, name: "bval", sons: null}], 
[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI13051081, name: "fields", sons: null}], 
[setConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI13051098, name: "elems", sons: null}]]}]};
NTI13051058.node = NNI13051058;
NTI13051056.base = NTI13051058;
var NNI1194651 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1194651.node = NNI1194651;
NTI1194651.base = NTI1194619;
var NNI5465011 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI5210232, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI1188044, name: "b", sons: null}]};
NTI5465011.node = NNI5465011;
NTI15000125.base = NTI1188015;
var NNI11721036 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "lat", len: 0, typ: NTI11721016, name: "lat", sons: null}, 
{kind: 1, offset: "lng", len: 0, typ: NTI11721018, name: "lng", sons: null}]};
NTI11721036.node = NNI11721036;
NTI11721036.base = NTI11356070;
var NNI17300011 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1188013, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI1188013, name: "b", sons: null}]};
NTI17300011.node = NNI17300011;
var NNI15940047 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "jsonattributes", len: 0, typ: NTI1188044, name: "jsonattributes", sons: null}, 
{kind: 1, offset: "mode", len: 0, typ: NTI1188015, name: "mode", sons: null}, 
{kind: 1, offset: "prox", len: 0, typ: NTI1188015, name: "prox", sons: null}, 
{kind: 1, offset: "maxResults", len: 0, typ: NTI1188044, name: "maxResults", sons: null}, 
{kind: 1, offset: "additionaldata", len: 0, typ: NTI1188015, name: "additionaldata", sons: null}, 
{kind: 1, offset: "locationattributes", len: 0, typ: NTI1188015, name: "locationattributes", sons: null}]};
NTI15940047.node = NNI15940047;
var NNI15940045 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI15940045.node = NNI15940045;
NTI15940045.base = NTI11356070;
NTI15940047.base = NTI15940045;
NTI17865185.base = NTI16211017;
NTI17920248.base = NTI1188044;
NTI17920463.base = NTI12345032;
NTI17920468.base = NTI12345032;
NTI17920477.base = NTI12345032;
var NNI11816089 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onAttach", len: 0, typ: NTI11816090, name: "onAttach", sons: null}, 
{kind: 1, offset: "onDetach", len: 0, typ: NTI11816096, name: "onDetach", sons: null}]};
NTI11816089.node = NNI11816089;
NTI11816089.base = NTI11356070;
var NNI11816076 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "strokeColor", len: 0, typ: NTI1188015, name: "strokeColor", sons: null}, 
{kind: 1, offset: "fillColor", len: 0, typ: NTI1188015, name: "fillColor", sons: null}, 
{kind: 1, offset: "lineWidth", len: 0, typ: NTI1188044, name: "lineWidth", sons: null}]};
NTI11816076.node = NNI11816076;
var NNI11816056 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI11816056.node = NNI11816056;
var NNI11706098 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI11706098.node = NNI11706098;
var NNI11357299 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "bubbles", len: 0, typ: NTI1188064, name: "bubbles", sons: null}, 
{kind: 1, offset: "cancelBubble", len: 0, typ: NTI1188064, name: "cancelBubble", sons: null}, 
{kind: 1, offset: "cancelable", len: 0, typ: NTI1188064, name: "cancelable", sons: null}, 
{kind: 1, offset: "composed", len: 0, typ: NTI1188064, name: "composed", sons: null}, 
{kind: 1, offset: "currentTarget", len: 0, typ: NTI11357235, name: "currentTarget", sons: null}, 
{kind: 1, offset: "defaultPrevented", len: 0, typ: NTI1188064, name: "defaultPrevented", sons: null}, 
{kind: 1, offset: "eventPhase", len: 0, typ: NTI1188044, name: "eventPhase", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI11357235, name: "target", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI1188015, name: "type", sons: null}, 
{kind: 1, offset: "isTrusted", len: 0, typ: NTI1188064, name: "isTrusted", sons: null}]};
NTI11357299.node = NNI11357299;
NTI11357299.base = NTI1194408;
NTI11706098.base = NTI11357299;
NTI11816056.base = NTI11706098;
NTI11816076.base = NTI11816056;
NTI11816048.base = NTI11816076;
var NNI11816081 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "style", len: 0, typ: NTI11816048, name: "style", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI1188044, name: "zIndex", sons: null}]};
NTI11816081.node = NNI11816081;
NTI11816081.base = NTI11356070;
var NNI12016020 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1188005, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1188005, name: "Field1", sons: null}]};
NTI12016020.node = NNI12016020;
var NNI18170067 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1188044, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1188044, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1188044, name: "Field2", sons: null}]};
NTI18170067.node = NNI18170067;
var NNI12016118 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1188044, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1188044, name: "Field1", sons: null}]};
NTI12016118.node = NNI12016118;
var NNI11721040 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI11721040.node = NNI11721040;
NTI11721040.base = NTI11356070;
NTI11721024.base = NTI11721040;
NTI11805004.base = NTI11721024;
NTI9690043.base = NTI1188013;
var NNI15940055 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "searchtext", len: 0, typ: NTI1188015, name: "searchtext", sons: null}, 
{kind: 1, offset: "jsonattributes", len: 0, typ: NTI1188044, name: "jsonattributes", sons: null}, 
{kind: 1, offset: "country", len: 0, typ: NTI1188015, name: "country", sons: null}, 
{kind: 1, offset: "state", len: 0, typ: NTI1188015, name: "state", sons: null}, 
{kind: 1, offset: "additionaldata", len: 0, typ: NTI1188015, name: "additionaldata", sons: null}]};
NTI15940055.node = NNI15940055;
NTI15940055.base = NTI15940045;
var NNI11816085 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "style", len: 0, typ: NTI11816048, name: "style", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI1188044, name: "zIndex", sons: null}]};
NTI11816085.node = NNI11816085;
NTI11816085.base = NTI11356070;
function makeNimstrLit(c_1455062) {
      var ln = c_1455062.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_1455062.charCodeAt(i);
  }
  return result;
  

  
}
function cstrToNimstr(c_1455079) {
      var ln = c_1455079.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_1455079.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_1455079.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);
function nimCopy(dest_1470023, src_1470024, ti_1470025) {
  var result_1475219 = null;

    switch (ti_1470025.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_1465401(ti_1470025))) {
      result_1475219 = src_1470024;
      }
      else {
        result_1475219 = [src_1470024[0], src_1470024[1]];
      }
      
      break;
    case 19:
            if (dest_1470023 === null || dest_1470023 === undefined) {
        dest_1470023 = {};
      }
      else {
        for (var key in dest_1470023) { delete dest_1470023[key]; }
      }
      for (var key in src_1470024) { dest_1470023[key] = src_1470024[key]; }
      result_1475219 = dest_1470023;
    
      break;
    case 18:
    case 17:
      if (!((ti_1470025.base == null))) {
      result_1475219 = nimCopy(dest_1470023, src_1470024, ti_1470025.base);
      }
      else {
      if ((ti_1470025.kind == 17)) {
      result_1475219 = (dest_1470023 === null || dest_1470023 === undefined) ? {m_type: ti_1470025} : dest_1470023;
      }
      else {
        result_1475219 = (dest_1470023 === null || dest_1470023 === undefined) ? {} : dest_1470023;
      }
      }
      nimCopyAux(result_1475219, src_1470024, ti_1470025.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_1470024 === null) {
        result_1475219 = null;
      }
      else {
        if (dest_1470023 === null || dest_1470023 === undefined) {
          dest_1470023 = new Array(src_1470024.length);
        }
        else {
          dest_1470023.length = src_1470024.length;
        }
        result_1475219 = dest_1470023;
        for (var i = 0; i < src_1470024.length; ++i) {
          result_1475219[i] = nimCopy(result_1475219[i], src_1470024[i], ti_1470025.base);
        }
      }
    
      break;
    case 28:
            if (src_1470024 !== null) {
        result_1475219 = src_1470024.slice(0);
      }
    
      break;
    default: 
      result_1475219 = src_1470024;
      break;
    }

  return result_1475219;

}
function toJSStr(s_1455096) {
                    var Tmp5;
            var Tmp7;

  var result_1455097 = null;

    var res_1455170 = newSeq_1455128((s_1455096).length);
    var i_1455172 = 0;
    var j_1455174 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_1455172 < (s_1455096).length)) break L2;
          var c_1455175 = s_1455096[i_1455172];
          if ((c_1455175 < 128)) {
          res_1455170[j_1455174] = String.fromCharCode(c_1455175);
          i_1455172 += 1;
          }
          else {
            var helper_1455198 = newSeq_1455128(0);
            L3: do {
                L4: while (true) {
                if (!true) break L4;
                  var code_1455199 = c_1455175.toString(16);
                  if ((((code_1455199) == null ? 0 : (code_1455199).length) == 1)) {
                  helper_1455198.push("%0");;
                  }
                  else {
                  helper_1455198.push("%");;
                  }
                  
                  helper_1455198.push(code_1455199);;
                  i_1455172 += 1;
                    if (((s_1455096).length <= i_1455172)) Tmp5 = true; else {                      Tmp5 = (s_1455096[i_1455172] < 128);                    }                  if (Tmp5) {
                  break L3;
                  }
                  
                  c_1455175 = s_1455096[i_1455172];
                }
            } while(false);
++excHandler;
            Tmp7 = framePtr;
            try {
            res_1455170[j_1455174] = decodeURIComponent(helper_1455198.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp7;
            res_1455170[j_1455174] = helper_1455198.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp7;
            }
          }
          
          j_1455174 += 1;
        }
    } while(false);
    if (res_1455170.length < j_1455174) { for (var i=res_1455170.length;i<j_1455174;++i) res_1455170.push(null); }
               else { res_1455170.length = j_1455174; };
    result_1455097 = res_1455170.join("");

  return result_1455097;

}
function raiseException(e_1420218, ename_1420219) {
    e_1420218.name = ename_1420219;
    if ((excHandler == 0)) {
    unhandledException(e_1420218);
    }
    
    throw e_1420218;

  
}
function chckIndx(i_1480086, a_1480087, b_1480088) {
      var Tmp1;

  var result_1480089 = 0;

  BeforeRet: do {
      if (!(a_1480087 <= i_1480086)) Tmp1 = false; else {        Tmp1 = (i_1480086 <= b_1480088);      }    if (Tmp1) {
    result_1480089 = i_1480086;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_1480086, a_1480087, b_1480088);
    }
    
  } while (false);

  return result_1480089;

}
function subInt(a_1460437, b_1460438) {
        var result = a_1460437 - b_1460438;
    checkOverflowInt(result);
    return result;
  

  
}
function addInt(a_1460419, b_1460420) {
        var result = a_1460419 + b_1460420;
    checkOverflowInt(result);
    return result;
  

  
}
function divInt(a_1460473, b_1460474) {
        if (b_1460474 == 0) raiseDivByZero();
    if (b_1460474 == -1 && a_1460473 == 2147483647) raiseOverflow();
    return Math.trunc(a_1460473 / b_1460474);
  

  
}
function mulInt(a_1460455, b_1460456) {
        var result = a_1460455 * b_1460456;
    checkOverflowInt(result);
    return result;
  

  
}
function chckRange(i_1485016, a_1485017, b_1485018) {
      var Tmp1;

  var result_1485019 = 0;

  BeforeRet: do {
      if (!(a_1485017 <= i_1485016)) Tmp1 = false; else {        Tmp1 = (i_1485016 <= b_1485018);      }    if (Tmp1) {
    result_1485019 = i_1485016;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_1485019;

}
function nimMax(a_1460821, b_1460822) {
    var Tmp1;

  var result_1460823 = 0;

  BeforeRet: do {
    if ((b_1460822 <= a_1460821)) {
    Tmp1 = a_1460821;
    }
    else {
    Tmp1 = b_1460822;
    }
    
    result_1460823 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_1460823;

}
function nimMin(a_1460803, b_1460804) {
    var Tmp1;

  var result_1460805 = 0;

  BeforeRet: do {
    if ((a_1460803 <= b_1460804)) {
    Tmp1 = a_1460803;
    }
    else {
    Tmp1 = b_1460804;
    }
    
    result_1460805 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_1460805;

}
function mnewString(len_1460044) {
        return new Array(len_1460044);
  

  
}
var ConstSet2 = setConstr(13, 10);
function modInt(a_1460491, b_1460492) {
        if (b_1460492 == 0) raiseDivByZero();
    if (b_1460492 == -1 && a_1460491 == 2147483647) raiseOverflow();
    return Math.trunc(a_1460491 % b_1460492);
  

  
}
function eqStrings(a_1460222, b_1460223) {
        if (a_1460222 == b_1460223) return true;
    if (a_1460222 === null && b_1460223.length == 0) return true;
    if (b_1460223 === null && a_1460222.length == 0) return true;
    if ((!a_1460222) || (!b_1460223)) return false;
    var alen = a_1460222.length;
    if (alen != b_1460223.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_1460222[i] != b_1460223[i]) return false;
    return true;
  

  
}
    var toLowerRanges_3030223 = [65, 90, 532, 192, 214, 532, 216, 222, 532, 393, 394, 705, 433, 434, 717, 904, 906, 537, 910, 911, 563, 913, 929, 532, 931, 939, 532, 1021, 1023, 370, 1024, 1039, 580, 1040, 1071, 532, 1329, 1366, 548, 4256, 4293, 7764, 5024, 5103, 39364, 5104, 5109, 508, 7312, 7354, -2508, 7357, 7359, -2508, 7944, 7951, 492, 7960, 7965, 492, 7976, 7983, 492, 7992, 7999, 492, 8008, 8013, 492, 8040, 8047, 492, 8072, 8079, 492, 8088, 8095, 492, 8104, 8111, 492, 8120, 8121, 492, 8122, 8123, 426, 8136, 8139, 414, 8152, 8153, 492, 8154, 8155, 400, 8168, 8169, 492, 8170, 8171, 388, 8184, 8185, 372, 8186, 8187, 374, 11264, 11310, 548, 11390, 11391, -10315, 65313, 65338, 532, 66560, 66599, 540, 66736, 66771, 540, 68736, 68786, 564, 71840, 71871, 532, 93760, 93791, 532, 125184, 125217, 534];
    var toLowerSinglets_3031470 = [256, 501, 258, 501, 260, 501, 262, 501, 264, 501, 266, 501, 268, 501, 270, 501, 272, 501, 274, 501, 276, 501, 278, 501, 280, 501, 282, 501, 284, 501, 286, 501, 288, 501, 290, 501, 292, 501, 294, 501, 296, 501, 298, 501, 300, 501, 302, 501, 304, 301, 306, 501, 308, 501, 310, 501, 313, 501, 315, 501, 317, 501, 319, 501, 321, 501, 323, 501, 325, 501, 327, 501, 330, 501, 332, 501, 334, 501, 336, 501, 338, 501, 340, 501, 342, 501, 344, 501, 346, 501, 348, 501, 350, 501, 352, 501, 354, 501, 356, 501, 358, 501, 360, 501, 362, 501, 364, 501, 366, 501, 368, 501, 370, 501, 372, 501, 374, 501, 376, 379, 377, 501, 379, 501, 381, 501, 385, 710, 386, 501, 388, 501, 390, 706, 391, 501, 395, 501, 398, 579, 399, 702, 400, 703, 401, 501, 403, 705, 404, 707, 406, 711, 407, 709, 408, 501, 412, 711, 413, 713, 415, 714, 416, 501, 418, 501, 420, 501, 422, 718, 423, 501, 425, 718, 428, 501, 430, 718, 431, 501, 435, 501, 437, 501, 439, 719, 440, 501, 444, 501, 452, 502, 453, 501, 455, 502, 456, 501, 458, 502, 459, 501, 461, 501, 463, 501, 465, 501, 467, 501, 469, 501, 471, 501, 473, 501, 475, 501, 478, 501, 480, 501, 482, 501, 484, 501, 486, 501, 488, 501, 490, 501, 492, 501, 494, 501, 497, 502, 498, 501, 500, 501, 502, 403, 503, 444, 504, 501, 506, 501, 508, 501, 510, 501, 512, 501, 514, 501, 516, 501, 518, 501, 520, 501, 522, 501, 524, 501, 526, 501, 528, 501, 530, 501, 532, 501, 534, 501, 536, 501, 538, 501, 540, 501, 542, 501, 544, 370, 546, 501, 548, 501, 550, 501, 552, 501, 554, 501, 556, 501, 558, 501, 560, 501, 562, 501, 570, 11295, 571, 501, 573, 337, 574, 11292, 577, 501, 579, 305, 580, 569, 581, 571, 582, 501, 584, 501, 586, 501, 588, 501, 590, 501, 880, 501, 882, 501, 886, 501, 895, 616, 902, 538, 908, 564, 975, 508, 984, 501, 986, 501, 988, 501, 990, 501, 992, 501, 994, 501, 996, 501, 998, 501, 1000, 501, 1002, 501, 1004, 501, 1006, 501, 1012, 440, 1015, 501, 1017, 493, 1018, 501, 1120, 501, 1122, 501, 1124, 501, 1126, 501, 1128, 501, 1130, 501, 1132, 501, 1134, 501, 1136, 501, 1138, 501, 1140, 501, 1142, 501, 1144, 501, 1146, 501, 1148, 501, 1150, 501, 1152, 501, 1162, 501, 1164, 501, 1166, 501, 1168, 501, 1170, 501, 1172, 501, 1174, 501, 1176, 501, 1178, 501, 1180, 501, 1182, 501, 1184, 501, 1186, 501, 1188, 501, 1190, 501, 1192, 501, 1194, 501, 1196, 501, 1198, 501, 1200, 501, 1202, 501, 1204, 501, 1206, 501, 1208, 501, 1210, 501, 1212, 501, 1214, 501, 1216, 515, 1217, 501, 1219, 501, 1221, 501, 1223, 501, 1225, 501, 1227, 501, 1229, 501, 1232, 501, 1234, 501, 1236, 501, 1238, 501, 1240, 501, 1242, 501, 1244, 501, 1246, 501, 1248, 501, 1250, 501, 1252, 501, 1254, 501, 1256, 501, 1258, 501, 1260, 501, 1262, 501, 1264, 501, 1266, 501, 1268, 501, 1270, 501, 1272, 501, 1274, 501, 1276, 501, 1278, 501, 1280, 501, 1282, 501, 1284, 501, 1286, 501, 1288, 501, 1290, 501, 1292, 501, 1294, 501, 1296, 501, 1298, 501, 1300, 501, 1302, 501, 1304, 501, 1306, 501, 1308, 501, 1310, 501, 1312, 501, 1314, 501, 1316, 501, 1318, 501, 1320, 501, 1322, 501, 1324, 501, 1326, 501, 4295, 7764, 4301, 7764, 7680, 501, 7682, 501, 7684, 501, 7686, 501, 7688, 501, 7690, 501, 7692, 501, 7694, 501, 7696, 501, 7698, 501, 7700, 501, 7702, 501, 7704, 501, 7706, 501, 7708, 501, 7710, 501, 7712, 501, 7714, 501, 7716, 501, 7718, 501, 7720, 501, 7722, 501, 7724, 501, 7726, 501, 7728, 501, 7730, 501, 7732, 501, 7734, 501, 7736, 501, 7738, 501, 7740, 501, 7742, 501, 7744, 501, 7746, 501, 7748, 501, 7750, 501, 7752, 501, 7754, 501, 7756, 501, 7758, 501, 7760, 501, 7762, 501, 7764, 501, 7766, 501, 7768, 501, 7770, 501, 7772, 501, 7774, 501, 7776, 501, 7778, 501, 7780, 501, 7782, 501, 7784, 501, 7786, 501, 7788, 501, 7790, 501, 7792, 501, 7794, 501, 7796, 501, 7798, 501, 7800, 501, 7802, 501, 7804, 501, 7806, 501, 7808, 501, 7810, 501, 7812, 501, 7814, 501, 7816, 501, 7818, 501, 7820, 501, 7822, 501, 7824, 501, 7826, 501, 7828, 501, 7838, -7115, 7840, 501, 7842, 501, 7844, 501, 7846, 501, 7848, 501, 7850, 501, 7852, 501, 7854, 501, 7856, 501, 7858, 501, 7860, 501, 7862, 501, 7864, 501, 7866, 501, 7868, 501, 7870, 501, 7872, 501, 7874, 501, 7876, 501, 7878, 501, 7880, 501, 7882, 501, 7884, 501, 7886, 501, 7888, 501, 7890, 501, 7892, 501, 7894, 501, 7896, 501, 7898, 501, 7900, 501, 7902, 501, 7904, 501, 7906, 501, 7908, 501, 7910, 501, 7912, 501, 7914, 501, 7916, 501, 7918, 501, 7920, 501, 7922, 501, 7924, 501, 7926, 501, 7928, 501, 7930, 501, 7932, 501, 7934, 501, 8025, 492, 8027, 492, 8029, 492, 8031, 492, 8124, 491, 8140, 491, 8172, 493, 8188, 491, 8486, -7017, 8490, -7883, 8491, -7762, 8498, 528, 8579, 501, 11360, 501, 11362, -10243, 11363, -3314, 11364, -10227, 11367, 501, 11369, 501, 11371, 501, 11373, -10280, 11374, -10249, 11375, -10283, 11376, -10282, 11378, 501, 11381, 501, 11392, 501, 11394, 501, 11396, 501, 11398, 501, 11400, 501, 11402, 501, 11404, 501, 11406, 501, 11408, 501, 11410, 501, 11412, 501, 11414, 501, 11416, 501, 11418, 501, 11420, 501, 11422, 501, 11424, 501, 11426, 501, 11428, 501, 11430, 501, 11432, 501, 11434, 501, 11436, 501, 11438, 501, 11440, 501, 11442, 501, 11444, 501, 11446, 501, 11448, 501, 11450, 501, 11452, 501, 11454, 501, 11456, 501, 11458, 501, 11460, 501, 11462, 501, 11464, 501, 11466, 501, 11468, 501, 11470, 501, 11472, 501, 11474, 501, 11476, 501, 11478, 501, 11480, 501, 11482, 501, 11484, 501, 11486, 501, 11488, 501, 11490, 501, 11499, 501, 11501, 501, 11506, 501, 42560, 501, 42562, 501, 42564, 501, 42566, 501, 42568, 501, 42570, 501, 42572, 501, 42574, 501, 42576, 501, 42578, 501, 42580, 501, 42582, 501, 42584, 501, 42586, 501, 42588, 501, 42590, 501, 42592, 501, 42594, 501, 42596, 501, 42598, 501, 42600, 501, 42602, 501, 42604, 501, 42624, 501, 42626, 501, 42628, 501, 42630, 501, 42632, 501, 42634, 501, 42636, 501, 42638, 501, 42640, 501, 42642, 501, 42644, 501, 42646, 501, 42648, 501, 42650, 501, 42786, 501, 42788, 501, 42790, 501, 42792, 501, 42794, 501, 42796, 501, 42798, 501, 42802, 501, 42804, 501, 42806, 501, 42808, 501, 42810, 501, 42812, 501, 42814, 501, 42816, 501, 42818, 501, 42820, 501, 42822, 501, 42824, 501, 42826, 501, 42828, 501, 42830, 501, 42832, 501, 42834, 501, 42836, 501, 42838, 501, 42840, 501, 42842, 501, 42844, 501, 42846, 501, 42848, 501, 42850, 501, 42852, 501, 42854, 501, 42856, 501, 42858, 501, 42860, 501, 42862, 501, 42873, 501, 42875, 501, 42877, -34832, 42878, 501, 42880, 501, 42882, 501, 42884, 501, 42886, 501, 42891, 501, 42893, -41780, 42896, 501, 42898, 501, 42902, 501, 42904, 501, 42906, 501, 42908, 501, 42910, 501, 42912, 501, 42914, 501, 42916, 501, 42918, 501, 42920, 501, 42922, -41808, 42923, -41819, 42924, -41815, 42925, -41805, 42926, -41808, 42928, -41758, 42929, -41782, 42930, -41761, 42931, 1428, 42932, 501, 42934, 501, 42936, 501, 42938, 501, 42940, 501, 42942, 501, 42946, 501, 42948, 452, 42949, -41807, 42950, -34884];
    var unicodeSpaces_3034041 = [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288];
      var toTag_14965006 = ["#text", "#int", "#bool", "#vthunk", "#dthunk", "#component", "#verbatim", "HTML", "HEAD", "TITLE", "BASE", "LINK", "META", "STYLE", "SCRIPT", "NOSCRIPT", "BODY", "SECTION", "NAV", "ARTICLE", "ASIDE", "H1", "H2", "H3", "H4", "H5", "H6", "HGROUP", "HEADER", "FOOTER", "ADDRESS", "MAIN", "P", "HR", "PRE", "BLOCKQUOTE", "OL", "UL", "LI", "DL", "DT", "DD", "FIGURE", "FIGCAPTION", "DIV", "A", "EM", "STRONG", "SMALL", "S", "CITE", "QUOTE", "DFN", "ABBR", "DATA", "TIME", "CODE", "VAR", "SAMP", "KDB", "SUB", "SUP", "I", "B", "U", "MARK", "RUBY", "RT", "RP", "BDI", "DBO", "SPAN", "BR", "WBR", "INS", "DEL", "IMG", "IFRAME", "EMBED", "OBJECT", "PARAM", "VIDEO", "AUDIO", "SOURCE", "TRACK", "CANVAS", "MAP", "AREA", "ANIMATE", "ANIMATEMOTION", "ANIMATETRANSFORM", "CIRCLE", "CLIPPATH", "DEFS", "DESC", "DISCARD", "ELLIPSE", "FEBLEND", "FECOLORMATRIX", "FECOMPONENTTRANSFER", "FECOMPOSITE", "FECONVOLVEMATRIX", "FEDIFFUSELIGHTING", "FEDISPLACEMENTMAP", "FEDISTANTLIGHT", "FEDROPSHADOW", "FEFLOOD", "FEFUNCA", "FEFUNCB", "FEFUNCG", "FEFUNCR", "FEGAUSSIANBLUR", "FEIMAGE", "FEMERGE", "FEMERGENODE", "FEMORPHOLOGY", "FEOFFSET", "FEPOINTLIGHT", "FESPECULARLIGHTING", "FESPOTLIGHT", "FETILE", "FETURBULENCE", "FILTER", "FOREIGNOBJECT", "G", "IMAGE", "LINE", "LINEARGRADIENT", "MARKER", "MASK", "METADATA", "MPATH", "PATH", "PATTERN", "POLYGON", "POLYLINE", "RADIALGRADIENT", "RECT", "SET", "STOP", "SVG", "SWITCH", "SYMBOL", "TEXT", "TEXTPATH", "TSPAN", "UNKNOWN", "USE", "VIEW", "MACTION", "MATH", "MENCLOSE", "MERROR", "MFENCED", "MFRAC", "MGLYPH", "MI", "MLABELEDTR", "MMULTISCRIPTS", "MN", "MO", "MOVER", "MPADDED", "MPHANTOM", "MROOT", "MROW", "MS", "MSPACE", "MSQRT", "MSTYLE", "MSUB", "MSUBSUP", "MSUP", "MTABLE", "MTD", "MTEXT", "MTR", "MUNDER", "MUNDEROVER", "SEMANTICS", "TABLE", "CAPTION", "COLGROUP", "COL", "TBODY", "THEAD", "TFOOT", "TR", "TD", "TH", "FORM", "FIELDSET", "LEGEND", "LABEL", "INPUT", "BUTTON", "SELECT", "DATALIST", "OPTGROUP", "OPTION", "TEXTAREA", "KEYGEN", "OUTPUT", "PROGRESS", "METER", "DETAILS", "SUMMARY", "COMMAND", "MENU", "BDO", "DIALOG", "KBD", "SLOT", "TEMPLATE"];
      var toEventName_14965012 = ["click", "contextmenu", "dblclick", "keyup", "keydown", "keypressed", "focus", "blur", "change", "scroll", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseout", "mouseover", "mouseup", "drag", "dragend", "dragenter", "dragleave", "dragover", "dragstart", "drop", "submit", "input", "animationstart", "animationend", "animationiteration", "keyupenter", "keyuplater", "load", "transitioncancel", "transitionend", "transitionrun", "transitionstart", "wheel"];
function genericReset(x_1480044, ti_1480045) {
  var result_1480046 = null;

    result_1480046 = null;
    switch (ti_1480045.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (isFatPointer_1465401(ti_1480045)) {
              result_1480046 = [null, 0];
      
      }
      
      break;
    case 19:
            result_1480046 = {};
    
      break;
    case 18:
    case 17:
      if ((ti_1480045.kind == 17)) {
      result_1480046 = {m_type: ti_1480045};
      }
      else {
        result_1480046 = {};
      }
      
      break;
    case 24:
    case 27:
    case 28:
            result_1480046 = [];
    
      break;
    case 4:
    case 16:
            result_1480046 = new Array(x_1480044.length);
      for (var i = 0; i < x_1480044.length; ++i) {
        result_1480046[i] = genericReset(x_1480044[i], ti_1480045.base);
      }
    
      break;
    default: 
      break;
    }

  return result_1480046;

}
function addChar(x_1505031, c_1505032) {
    x_1505031.push(c_1505032);

  
}
function absInt(a_1460666) {
    var Tmp1;

  var result_1460667 = 0;

    if ((a_1460666 < 0)) {
    Tmp1 = (a_1460666 * -1);
    }
    else {
    Tmp1 = a_1460666;
    }
    
    result_1460667 = Tmp1;

  return result_1460667;

}
    var unitWeights_13618382 = [1, 1000, 1000000, 1000000000, 60000000000, 3600000000000, 86400000000000, 604800000000000];
function negInt(a_1460615) {
  var result_1460616 = 0;

    result_1460616 = (a_1460615 * -1);

  return result_1460616;

}
    var f2_14695173 = {patterns: [22, 31, 1, 45, 11, 31, 1, 45, 1, 31, 1, 84, 7, 31, 1, 58, 9, 31, 1, 58, 15, 28], formatStr: makeNimstrLit("yyyy-MM-dd\'T\'HH:mm:sszzz")};
    var DefaultLocale_14210709 = {MMM: [makeNimstrLit("Jan"), makeNimstrLit("Feb"), makeNimstrLit("Mar"), makeNimstrLit("Apr"), makeNimstrLit("May"), makeNimstrLit("Jun"), makeNimstrLit("Jul"), makeNimstrLit("Aug"), makeNimstrLit("Sep"), makeNimstrLit("Oct"), makeNimstrLit("Nov"), makeNimstrLit("Dec")], MMMM: [makeNimstrLit("January"), makeNimstrLit("February"), makeNimstrLit("March"), makeNimstrLit("April"), makeNimstrLit("May"), makeNimstrLit("June"), makeNimstrLit("July"), makeNimstrLit("August"), makeNimstrLit("September"), makeNimstrLit("October"), makeNimstrLit("November"), makeNimstrLit("December")], ddd: [makeNimstrLit("Mon"), makeNimstrLit("Tue"), makeNimstrLit("Wed"), makeNimstrLit("Thu"), makeNimstrLit("Fri"), makeNimstrLit("Sat"), makeNimstrLit("Sun")], dddd: [makeNimstrLit("Monday"), makeNimstrLit("Tuesday"), makeNimstrLit("Wednesday"), makeNimstrLit("Thursday"), makeNimstrLit("Friday"), makeNimstrLit("Saturday"), makeNimstrLit("Sunday")]};
    var daysUntilMonthLeap_13645107 = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];
      var daysUntilMonth_13645091 = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];
var ConstSet3 = setConstr(5);
function raiseFieldError(f_1450047) {
    raiseException({message: nimCopy(null, f_1450047, NTI1188013), parent: null, m_type: NTI1194651, name: null, trace: [], up: null}, "FieldDefect");

  
}
var ConstSet4 = setConstr(6);
function nimFloatToString(a_1460649) {
  var result_1460650 = null;

        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_1460649)) result_1460650 =  a_1460649+".0"
    else {
      result_1460650 = a_1460649+""
      if(nimOnlyDigitsOrMinus(result_1460650)){
        result_1460650 = a_1460649+".0"
      }
    }
  

  return result_1460650;

}
var ConstSet5 = setConstr(60, 62, 94);
var ConstSet6 = setConstr(60, 62, 94);
var ConstSet7 = setConstr(45, 43, 32);
var ConstSet8 = setConstr([48, 57]);
var ConstSet9 = setConstr([48, 57]);
var ConstSet10 = setConstr([48, 57]);
var ConstSet11 = setConstr([65, 90], [97, 122]);
var ConstSet12 = setConstr(46, 44);
function nimCharToStr(x_1375674) {
  var result_1375675 = [];

    result_1375675 = nimCopy(null, mnewString(1), NTI1188013);
    result_1375675[0] = x_1375674;

  return result_1375675;

}
var ConstSet13 = setConstr([65, 90]);
var ConstSet14 = setConstr([97, 122]);
function nimBoolToStr(x_1375657) {
  var result_1375658 = [];

    if (x_1375657) {
    result_1375658 = nimCopy(null, makeNimstrLit("true"), NTI1188013);
    }
    else {
      result_1375658 = nimCopy(null, makeNimstrLit("false"), NTI1188013);
    }
    

  return result_1375658;

}
function cmpStrings(a_1460186, b_1460187) {
        if (a_1460186 == b_1460187) return 0;
    if (!a_1460186) return -1;
    if (!b_1460187) return 1;
    for (var i = 0; i < a_1460186.length && i < b_1460187.length; i++) {
      var result = a_1460186[i] - b_1460187[i];
      if (result != 0) return result;
    }
    return a_1460186.length - b_1460187.length;
  

  
}
function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
var ConstSet15 = setConstr([48, 57]);
var ConstSet16 = setConstr([48, 57]);
var ConstSet17 = setConstr(13, 10);
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var cb64_10425003 = [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47];
var cb64safe_10430003 = [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 45, 95];
var objectID_11410031 = [0];
if (globalThis.utcInstance_14170231 === undefined) {
  utcInstance_14170231 = [null];
}
if (globalThis.localInstance_14170232 === undefined) {
  localInstance_14170232 = [null];
}
var gid_15000032 = [0];
var vcomponents_15136239 = [{}];
var kxi__ = null;
function isFatPointer_1465401(ti_1465403) {
  var result_1465404 = false;

  BeforeRet: do {
    result_1465404 = !((ConstSet1[ti_1465403.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_1465404;

}
function nimCopyAux(dest_1470028, src_1470029, n_1470031) {
    switch (n_1470031.kind) {
    case 0:
      break;
    case 1:
            dest_1470028[n_1470031.offset] = nimCopy(dest_1470028[n_1470031.offset], src_1470029[n_1470031.offset], n_1470031.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_1470031.sons.length; i++) {
      nimCopyAux(dest_1470028, src_1470029, n_1470031.sons[i]);
    }
    
      break;
    case 3:
            dest_1470028[n_1470031.offset] = nimCopy(dest_1470028[n_1470031.offset], src_1470029[n_1470031.offset], n_1470031.typ);
      for (var i = 0; i < n_1470031.sons.length; ++i) {
        nimCopyAux(dest_1470028, src_1470029, n_1470031.sons[i][1]);
      }
    
      break;
    }

  
}
function add_1357211(x_1357214, x_1357214_Idx, y_1357215) {
          if (x_1357214[x_1357214_Idx] === null) { x_1357214[x_1357214_Idx] = []; }
      var off = x_1357214[x_1357214_Idx].length;
      x_1357214[x_1357214_Idx].length += y_1357215.length;
      for (var i = 0; i < y_1357215.length; ++i) {
        x_1357214[x_1357214_Idx][off+i] = y_1357215.charCodeAt(i);
      }
    

  
}
function newSeq_1455128(len_1455131) {
  var result_1455133 = [];

    result_1455133 = new Array(len_1455131); for (var i=0;i<len_1455131;++i) {result_1455133[i]=null;}
  return result_1455133;

}
function unhandledException(e_1415059) {
    var buf_1415060 = [[]];
    if (!(((e_1415059.message).length == 0))) {
    buf_1415060[0].push.apply(buf_1415060[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_1415060[0].push.apply(buf_1415060[0], e_1415059.message);;
    }
    else {
    buf_1415060[0].push.apply(buf_1415060[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_1415060[0].push.apply(buf_1415060[0], makeNimstrLit(" ["));;
    add_1357211(buf_1415060, 0, e_1415059.name);
    buf_1415060[0].push.apply(buf_1415060[0], makeNimstrLit("]\x0A"));;
    var cbuf_1420201 = toJSStr(buf_1415060[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_1420201);
  }
  else {
    throw cbuf_1420201;
  }
  

  
}
function raiseIndexError(i_1440047, a_1440048, b_1440049) {
    var Tmp1;

    if ((b_1440049 < a_1440048)) {
    Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_1440047)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_1440048)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_1440049)+"") || []);
    }
    
    raiseException({message: nimCopy(null, Tmp1, NTI1188013), parent: null, m_type: NTI1194649, name: null, trace: [], up: null}, "IndexDefect");

  
}
function toFloat_1216659(i_1216661) {
  var result_1216662 = 0.0;

    result_1216662 = i_1216661;

  return result_1216662;

}
function HEX2F_1555648(x_1555650, y_1555651) {
  var result_1555652 = 0.0;

    result_1555652 = (toFloat_1216659(x_1555650) / toFloat_1216659(y_1555651));

  return result_1555652;

}
function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI1194637, name: null, trace: [], up: null}, "OverflowDefect");

  
}
function checkOverflowInt(a_1460403) {
        if (a_1460403 > 2147483647 || a_1460403 < -2147483648) raiseOverflow();
  

  
}
function isPointInPolygon(testPoint_15995007, polygPoints_15995009) {
              var Tmp4;
              var Tmp5;
                var Tmp6;

  var result_15995010 = false;

    result_15995010 = false;
    var j_15995016 = (polygPoints_15995009).length - 1;
    L1: do {
      var i_15995081 = 0;
      var p_15995082 = null;
      var i_16005019 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_16005019 < (polygPoints_15995009).length)) break L3;
            i_15995081 = i_16005019;
            p_15995082 = polygPoints_15995009[chckIndx(i_16005019, 0, (polygPoints_15995009).length-1)];
            var lP_15995083 = polygPoints_15995009[chckIndx(j_15995016, 0, (polygPoints_15995009).length-1)];
              if (!(p_15995082.y < testPoint_15995007.y)) Tmp5 = false; else {                Tmp5 = (testPoint_15995007.y <= lP_15995083.y);              }              if (Tmp5) Tmp4 = true; else {                if (!(lP_15995083.y < testPoint_15995007.y)) Tmp6 = false; else {                  Tmp6 = (testPoint_15995007.y <= p_15995082.y);                }                Tmp4 = Tmp6;              }            if (Tmp4) {
            if (((p_15995082.x + (HEX2F_1555648(subInt(testPoint_15995007.y, p_15995082.y), subInt(lP_15995083.y, p_15995082.y)) * subInt(lP_15995083.x, p_15995082.x))) < testPoint_15995007.x)) {
            result_15995010 = !(result_15995010);
            }
            
            }
            
            j_15995016 = i_15995081;
            i_16005019 = addInt(i_16005019, 1);
          }
      } while(false);
    } while(false);

  return result_15995010;

}
function nextPowerOfTwo_9355014(x_9355016) {
  var result_9355017 = 0;

    result_9355017 = (x_9355016 - 1);
    result_9355017 = (result_9355017 | (result_9355017 >> 16));
    result_9355017 = (result_9355017 | (result_9355017 >> 8));
    result_9355017 = (result_9355017 | (result_9355017 >> 4));
    result_9355017 = (result_9355017 | (result_9355017 >> 2));
    result_9355017 = (result_9355017 | (result_9355017 >> 1));
    result_9355017 += (1 + ((x_9355016 <= 0) ? 1:0));

  return result_9355017;

}
function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI1194635, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}
function slotsNeeded_11485048(count_11485050) {
  var result_11485051 = 0;

    result_11485051 = nextPowerOfTwo_9355014(addInt(divInt(mulInt(count_11485050, 3), 2), 4));

  return result_11485051;

}
function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI1194653, name: null, trace: [], up: null}, "RangeDefect");

  
}
function initTable_16230020(initialSize_16230024) {
  var result_16230026 = ({data: [], counter: 0});

    var correctSizeHEX60gensym4_16235001 = slotsNeeded_11485048(chckRange(initialSize_16230024, 0, 2147483647));
    result_16230026.counter = 0;
    result_16230026.data = new Array(chckRange(correctSizeHEX60gensym4_16235001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym4_16235001, 0, 2147483647);++i) {result_16230026.data[i]={Field0: 0, Field1: 0, Field2: null};}
  return result_16230026;

}
function initOrderedTable_16240632(initialSize_16240636) {
  var result_16240638 = ({data: [], counter: 0, first: 0, last: 0});

    var correctSizeHEX60gensym6_16245001 = slotsNeeded_11485048(chckRange(initialSize_16240636, 0, 2147483647));
    result_16240638.counter = 0;
    result_16240638.data = new Array(chckRange(correctSizeHEX60gensym6_16245001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym6_16245001, 0, 2147483647);++i) {result_16240638.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    result_16240638.first = -1;
    result_16240638.last = -1;

  return result_16240638;

}
function initTable_16250632(initialSize_16250636) {
  var result_16250638 = ({data: [], counter: 0});

    var correctSizeHEX60gensym8_16255001 = slotsNeeded_11485048(chckRange(initialSize_16250636, 0, 2147483647));
    result_16250638.counter = 0;
    result_16250638.data = new Array(chckRange(correctSizeHEX60gensym8_16255001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym8_16255001, 0, 2147483647);++i) {result_16250638.data[i]={Field0: 0, Field1: [], Field2: null};}
  return result_16250638;

}
function initOrderedTable_16260632(initialSize_16260636) {
  var result_16260638 = ({data: [], counter: 0, first: 0, last: 0});

    var correctSizeHEX60gensym10_16265001 = slotsNeeded_11485048(chckRange(initialSize_16260636, 0, 2147483647));
    result_16260638.counter = 0;
    result_16260638.data = new Array(chckRange(correctSizeHEX60gensym10_16265001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym10_16265001, 0, 2147483647);++i) {result_16260638.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    result_16260638.first = -1;
    result_16260638.last = -1;

  return result_16260638;

}
function initTable_16270632(initialSize_16270636) {
  var result_16270638 = ({data: [], counter: 0});

    var correctSizeHEX60gensym12_16275001 = slotsNeeded_11485048(chckRange(initialSize_16270636, 0, 2147483647));
    result_16270638.counter = 0;
    result_16270638.data = new Array(chckRange(correctSizeHEX60gensym12_16275001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym12_16275001, 0, 2147483647);++i) {result_16270638.data[i]={Field0: 0, Field1: [], Field2: 0};}
  return result_16270638;

}
function initTable_16280635(initialSize_16280639) {
  var result_16280655 = ({data: [], counter: 0});

    var correctSizeHEX60gensym14_16285001 = slotsNeeded_11485048(chckRange(initialSize_16280639, 0, 2147483647));
    result_16280655.counter = 0;
    result_16280655.data = new Array(chckRange(correctSizeHEX60gensym14_16285001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym14_16285001, 0, 2147483647);++i) {result_16280655.data[i]={Field0: 0, Field1: null, Field2: null};}
  return result_16280655;

}
var platform_16230017 = [null];
var allLinks_16240629 = [initTable_16230020(8)];
var allStreets_16250629 = [initOrderedTable_16240632(8)];
var cachedTiles_16260629 = [initTable_16250632(8)];
var allSectors_16270629 = [initOrderedTable_16260632(8)];
var lastPostfix_16280629 = [initTable_16270632(8)];
var mvStreetGrp_16280630 = [function(){return new H.map.Group()}()];
var ministryArea_16280631 = [null];
var nameArea_16280632 = [makeNimstrLit("Hanau-Russisch")];
var sectorGrp_16290629 = [initTable_16280635(8)];
var cityId_16290630 = [0];
var districtId_16290631 = [0];
var addrDistr_16290632 = [[]];
var addrCity_16290633 = [[]];
var clckLinkId_16290634 = [0];
var postalCode_16290635 = [[]];
var sectName_16290636 = [[]];
var borderDistr_16290638 = [[]];
var map = null;
function initTable_16290864(initialSize_16290868) {
  var result_16290870 = ({data: [], counter: 0});

    var correctSizeHEX60gensym16_16295001 = slotsNeeded_11485048(chckRange(initialSize_16290868, 0, 2147483647));
    result_16290870.counter = 0;
    result_16290870.data = new Array(chckRange(correctSizeHEX60gensym16_16295001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym16_16295001, 0, 2147483647);++i) {result_16290870.data[i]={Field0: 0, Field1: 0, Field2: 0};}
  return result_16290870;

}
function substr_1571022(s_1571024, first_1571025, last_1571026) {
  var result_1571027 = [];

    var first_1571028 = nimMax(first_1571025, 0);
    var L_1571030 = nimMax(addInt(subInt(nimMin(last_1571026, (s_1571024).length - 1), first_1571028), 1), 0);
    result_1571027 = nimCopy(null, mnewString(chckRange(L_1571030, 0, 2147483647)), NTI1188013);
    L1: do {
      var i_1571039 = 0;
      var colontmp__14962693 = 0;
      colontmp__14962693 = subInt(L_1571030, 1);
      var res_14962694 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_14962694 <= colontmp__14962693)) break L3;
            i_1571039 = res_14962694;
            result_1571027[chckIndx(i_1571039, 0, (result_1571027).length-1)] = s_1571024[chckIndx(addInt(i_1571039, first_1571028), 0, (s_1571024).length-1)];
            res_14962694 = addInt(res_14962694, 1);
          }
      } while(false);
    } while(false);

  return result_1571027;

}
function nsuSplitCharSet(s_9685040, seps_9685042, maxsplit_9685043) {
  var result_9685045 = [];

    result_9685045 = nimCopy(null, [], NTI9690015);
    L1: do {
      var xHEX60gensym60_9690016 = [];
      var lastHEX60gensym29_16480805 = 0;
      var splitsHEX60gensym29_16480806 = maxsplit_9685043;
      L2: do {
          L3: while (true) {
          if (!(lastHEX60gensym29_16480805 <= (s_9685040).length)) break L3;
            var firstHEX60gensym29_16480808 = lastHEX60gensym29_16480805;
            L4: do {
                L5: while (true) {
                if (!((lastHEX60gensym29_16480805 < (s_9685040).length) && !((seps_9685042[s_9685040[chckIndx(lastHEX60gensym29_16480805, 0, (s_9685040).length-1)]] != undefined)))) break L5;
                  lastHEX60gensym29_16480805 = addInt(lastHEX60gensym29_16480805, 1);
                }
            } while(false);
            if ((splitsHEX60gensym29_16480806 == 0)) {
            lastHEX60gensym29_16480805 = (s_9685040).length;
            }
            
            xHEX60gensym60_9690016 = substr_1571022(s_9685040, firstHEX60gensym29_16480808, subInt(lastHEX60gensym29_16480805, 1));
            var Tmp6 = nimCopy(null, xHEX60gensym60_9690016, NTI1188013);
            result_9685045.push(Tmp6);;
            if ((splitsHEX60gensym29_16480806 == 0)) {
            break L2;
            }
            
            splitsHEX60gensym29_16480806 = subInt(splitsHEX60gensym29_16480806, 1);
            lastHEX60gensym29_16480805 = addInt(lastHEX60gensym29_16480805, 1);
          }
      } while(false);
    } while(false);

  return result_9685045;

}
function sysFatal_1305418(message_1305422) {
    raiseException({message: nimCopy(null, message_1305422, NTI1188013), m_type: NTI1194641, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}
function raiseAssert_1305414(msg_1305416) {
    sysFatal_1305418(msg_1305416);

  
}
function failedAssertImpl_1305480(msg_1305482) {
    raiseAssert_1305414(msg_1305482);

  
}
function substrEq_9515026(s_9515028, pos_9515029, substr_9515030) {
  var result_9515031 = false;

  BeforeRet: do {
    var i_9515033 = 0;
    var length_9515034 = (substr_9515030).length;
    L1: do {
        L2: while (true) {
        if (!(((i_9515033 < length_9515034) && (addInt(pos_9515029, i_9515033) < (s_9515028).length)) && (s_9515028[chckIndx(addInt(pos_9515029, i_9515033), 0, (s_9515028).length-1)] == substr_9515030[chckIndx(i_9515033, 0, (substr_9515030).length-1)]))) break L2;
          i_9515033 = addInt(i_9515033, 1);
        }
    } while(false);
    result_9515031 = (i_9515033 == length_9515034);
    break BeforeRet;
  } while (false);

  return result_9515031;

}
function nsuSplitString(s_9690040, sep_9690041, maxsplit_9690042) {
  var result_9690044 = [];

    if (!((0 < (sep_9690041).length))) {
    failedAssertImpl_1305480(makeNimstrLit("strutils.nim(779, 11) `sep.len > 0` "));
    }
    
    result_9690044 = nimCopy(null, [], NTI9710015);
    L1: do {
      var xHEX60gensym64_9710016 = [];
      var lastHEX60gensym33_16480813 = 0;
      var splitsHEX60gensym33_16480814 = maxsplit_9690042;
      L2: do {
          L3: while (true) {
          if (!(lastHEX60gensym33_16480813 <= (s_9690040).length)) break L3;
            var firstHEX60gensym33_16480816 = lastHEX60gensym33_16480813;
            L4: do {
                L5: while (true) {
                if (!((lastHEX60gensym33_16480813 < (s_9690040).length) && !(substrEq_9515026(s_9690040, lastHEX60gensym33_16480813, sep_9690041)))) break L5;
                  lastHEX60gensym33_16480813 = addInt(lastHEX60gensym33_16480813, 1);
                }
            } while(false);
            if ((splitsHEX60gensym33_16480814 == 0)) {
            lastHEX60gensym33_16480813 = (s_9690040).length;
            }
            
            xHEX60gensym64_9710016 = substr_1571022(s_9690040, firstHEX60gensym33_16480816, subInt(lastHEX60gensym33_16480813, 1));
            var Tmp6 = nimCopy(null, xHEX60gensym64_9710016, NTI1188013);
            result_9690044.push(Tmp6);;
            if ((splitsHEX60gensym33_16480814 == 0)) {
            break L2;
            }
            
            splitsHEX60gensym33_16480814 = subInt(splitsHEX60gensym33_16480814, 1);
            lastHEX60gensym33_16480813 = addInt(lastHEX60gensym33_16480813, (sep_9690041).length);
          }
      } while(false);
    } while(false);

  return result_9690044;

}
function initTable_16300633(initialSize_16300637) {
  var result_16300653 = ({data: [], counter: 0});

    var correctSizeHEX60gensym18_16305001 = slotsNeeded_11485048(chckRange(initialSize_16300637, 0, 2147483647));
    result_16300653.counter = 0;
    result_16300653.data = new Array(chckRange(correctSizeHEX60gensym18_16305001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym18_16305001, 0, 2147483647);++i) {result_16300653.data[i]={Field0: 0, Field1: [], Field2: 0};}
  return result_16300653;

}
function imul_11421082(a_11421084, b_11421085) {
  var result_11421086 = 0;

    var mask_11421087 = 65535;
    var aHi_11421096 = (((a_11421084 >>> 0) >>> 16) & mask_11421087);
    var aLo_11421097 = (a_11421084 & mask_11421087);
    var bHi_11421106 = (((b_11421085 >>> 0) >>> 16) & mask_11421087);
    var bLo_11421107 = (b_11421085 & mask_11421087);
    result_11421086 = ((((aLo_11421097 * bLo_11421107) >>> 0) + (((((aHi_11421096 * bLo_11421107) >>> 0) + ((aLo_11421097 * bHi_11421106) >>> 0)) >>> 0) << 16)) >>> 0);

  return result_11421086;

}
function rotl32_11421201(x_11421203, r_11421204) {
  var result_11421205 = 0;

    result_11421205 = ((x_11421203 << r_11421204) | ((x_11421203 >>> 0) >>> subInt(32, r_11421204)));

  return result_11421205;

}
function murmurHash_11421229(x_11421232) {
  var result_11421233 = 0;

  BeforeRet: do {
    var size_11421243 = (x_11421232).length;
    var stepSize_11421245 = 4;
    var n_11421246 = divInt(size_11421243, stepSize_11421245);
    var h1_11421247 = 0;
    var i_11421249 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_11421249 < mulInt(n_11421246, stepSize_11421245))) break L2;
          var k1_11421250 = 0;
          var j_11421251 = stepSize_11421245;
          L3: do {
              L4: while (true) {
              if (!(0 < j_11421251)) break L4;
                j_11421251 = subInt(j_11421251, 1);
                k1_11421250 = ((k1_11421250 << 8) | x_11421232[chckIndx(addInt(i_11421249, j_11421251), 0, (x_11421232).length-1)]);
              }
          } while(false);
          i_11421249 = addInt(i_11421249, stepSize_11421245);
          k1_11421250 = imul_11421082(k1_11421250, 3432918353);
          k1_11421250 = rotl32_11421201(k1_11421250, 15);
          k1_11421250 = imul_11421082(k1_11421250, 461845907);
          h1_11421247 = (h1_11421247 ^ k1_11421250);
          h1_11421247 = rotl32_11421201(h1_11421247, 13);
          h1_11421247 = ((((h1_11421247 * 5) >>> 0) + 3864292196) >>> 0);
        }
    } while(false);
    var k1_11425207 = 0;
    var rem_11425208 = modInt(size_11421243, stepSize_11421245);
    L5: do {
        L6: while (true) {
        if (!(0 < rem_11425208)) break L6;
          rem_11425208 = subInt(rem_11425208, 1);
          k1_11425207 = ((k1_11425207 << 8) | x_11421232[chckIndx(addInt(i_11421249, rem_11425208), 0, (x_11421232).length-1)]);
        }
    } while(false);
    k1_11425207 = imul_11421082(k1_11425207, 3432918353);
    k1_11425207 = rotl32_11421201(k1_11425207, 15);
    k1_11425207 = imul_11421082(k1_11425207, 461845907);
    h1_11421247 = (h1_11421247 ^ k1_11425207);
    h1_11421247 = (h1_11421247 ^ size_11421243);
    h1_11421247 = (h1_11421247 ^ ((h1_11421247 >>> 0) >>> 16));
    h1_11421247 = imul_11421082(h1_11421247, 2246822507);
    h1_11421247 = (h1_11421247 ^ ((h1_11421247 >>> 0) >>> 13));
    h1_11421247 = imul_11421082(h1_11421247, 3266489909);
    h1_11421247 = (h1_11421247 ^ ((h1_11421247 >>> 0) >>> 16));
    result_11421233 = (h1_11421247|0);
    break BeforeRet;
  } while (false);

  return result_11421233;

}
function hash_11460214(x_11460216) {
  var result_11460217 = 0;

    result_11460217 = murmurHash_11421229((x_11460216.slice(0, (x_11460216).length - 1+1)));

  return result_11460217;

}
function isFilled_11481218(hcode_11481220) {
  var result_11481221 = false;

    result_11481221 = !((hcode_11481220 == 0));

  return result_11481221;

}
function nextTry_11485014(h_11485016, maxHash_11485017) {
  var result_11485018 = 0;

    result_11485018 = (addInt(h_11485016, 1) & maxHash_11485017);

  return result_11485018;

}
function rawGet_16325602(t_16325606, key_16325607, hc_16325608, hc_16325608_Idx) {
            var Tmp3;

  var result_16325609 = 0;

  BeforeRet: do {
    hc_16325608[hc_16325608_Idx] = hash_11460214(key_16325607);
    if ((hc_16325608[hc_16325608_Idx] == 0)) {
    hc_16325608[hc_16325608_Idx] = 314159265;
    }
    
    if (((t_16325606.data).length == 0)) {
    result_16325609 = -1;
    break BeforeRet;
    }
    
    var h_16335138 = (hc_16325608[hc_16325608_Idx] & (t_16325606.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_11481218(t_16325606.data[chckIndx(h_16335138, 0, (t_16325606.data).length-1)].Field0)) break L2;
            if (!(t_16325606.data[chckIndx(h_16335138, 0, (t_16325606.data).length-1)].Field0 == hc_16325608[hc_16325608_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_16325606.data[chckIndx(h_16335138, 0, (t_16325606.data).length-1)].Field1, key_16325607);            }          if (Tmp3) {
          result_16325609 = h_16335138;
          break BeforeRet;
          }
          
          h_16335138 = nextTry_11485014(h_16335138, (t_16325606.data).length - 1);
        }
    } while(false);
    result_16325609 = subInt(-1, h_16335138);
  } while (false);

  return result_16325609;

}
function mustRehash_16350601(t_16350604) {
  var result_16350605 = false;

    if (!((t_16350604.counter < (t_16350604.data).length))) {
    failedAssertImpl_1305480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_16350605 = ((mulInt((t_16350604.data).length, 2) < mulInt(t_16350604.counter, 3)) || (subInt((t_16350604.data).length, t_16350604.counter) < 4));

  return result_16350605;

}
function rawInsert_16376122(t_16376128, data_16376131, data_16376131_Idx, key_16376132, val_16376134, hc_16376135, h_16376136) {
    data_16376131[data_16376131_Idx][chckIndx(h_16376136, 0, (data_16376131[data_16376131_Idx]).length-1)].Field1 = nimCopy(null, key_16376132, NTI1188013);
    data_16376131[data_16376131_Idx][chckIndx(h_16376136, 0, (data_16376131[data_16376131_Idx]).length-1)].Field2 = val_16376134;
    data_16376131[data_16376131_Idx][chckIndx(h_16376136, 0, (data_16376131[data_16376131_Idx]).length-1)].Field0 = hc_16376135;

  
}
function enlarge_16375161(t_16375167) {
    var n_16375175 = [];
    n_16375175 = new Array(chckRange(mulInt((t_16375167.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_16375167.data).length, 2), 0, 2147483647);++i) {n_16375175[i]={Field0: 0, Field1: [], Field2: 0};}    var Tmp1 = t_16375167.data; t_16375167.data = n_16375175; n_16375175 = Tmp1;    L2: do {
      var i_16375334 = 0;
      var colontmp__16480828 = 0;
      colontmp__16480828 = (n_16375175).length - 1;
      var res_16480829 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_16480829 <= colontmp__16480828)) break L4;
            i_16375334 = res_16480829;
            var eh_16375490 = n_16375175[chckIndx(i_16375334, 0, (n_16375175).length-1)].Field0;
            if (isFilled_11481218(eh_16375490)) {
            var j_16375497 = (eh_16375490 & (t_16375167.data).length - 1);
            L5: do {
                L6: while (true) {
                if (!isFilled_11481218(t_16375167.data[chckIndx(j_16375497, 0, (t_16375167.data).length-1)].Field0)) break L6;
                  j_16375497 = nextTry_11485014(j_16375497, (t_16375167.data).length - 1);
                }
            } while(false);
            rawInsert_16376122(t_16375167, t_16375167, "data", n_16375175[chckIndx(i_16375334, 0, (n_16375175).length-1)].Field1, n_16375175[chckIndx(i_16375334, 0, (n_16375175).length-1)].Field2, eh_16375490, j_16375497);
            }
            
            res_16480829 = addInt(res_16480829, 1);
          }
      } while(false);
    } while(false);

  
}
function rawGetKnownHC_16376629(t_16376633, key_16376634, hc_16376635) {
  var result_16376636 = 0;

  BeforeRet: do {
    if (((t_16376633.data).length == 0)) {
    result_16376636 = -1;
    break BeforeRet;
    }
    
    var h_16380138 = (hc_16376635 & (t_16376633.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_11481218(t_16376633.data[chckIndx(h_16380138, 0, (t_16376633.data).length-1)].Field0)) break L2;
          if (((t_16376633.data[chckIndx(h_16380138, 0, (t_16376633.data).length-1)].Field0 == hc_16376635) && eqStrings(t_16376633.data[chckIndx(h_16380138, 0, (t_16376633.data).length-1)].Field1, key_16376634))) {
          result_16376636 = h_16380138;
          break BeforeRet;
          }
          
          h_16380138 = nextTry_11485014(h_16380138, (t_16376633.data).length - 1);
        }
    } while(false);
    result_16376636 = subInt(-1, h_16380138);
  } while (false);

  return result_16376636;

}
function HEX5BHEX5DHEX3D_16310743(t_16310749, key_16310750, val_16310752) {
    if (((t_16310749.data).length == 0)) {
    var correctSizeHEX60gensym21_16320001 = slotsNeeded_11485048(32);
    t_16310749.counter = 0;
    t_16310749.data = new Array(chckRange(correctSizeHEX60gensym21_16320001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym21_16320001, 0, 2147483647);++i) {t_16310749.data[i]={Field0: 0, Field1: [], Field2: 0};}    }
    
    var hc_16325601 = [0];
    var index_16335641 = rawGet_16325602(t_16310749, key_16310750, hc_16325601, 0);
    if ((0 <= index_16335641)) {
    t_16310749.data[chckIndx(index_16335641, 0, (t_16310749.data).length-1)].Field2 = val_16310752;
    }
    else {
      if (((t_16310749.data).length == 0)) {
      var correctSizeHEX60gensym26_16345001 = slotsNeeded_11485048(32);
      t_16310749.counter = 0;
      t_16310749.data = new Array(chckRange(correctSizeHEX60gensym26_16345001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym26_16345001, 0, 2147483647);++i) {t_16310749.data[i]={Field0: 0, Field1: [], Field2: 0};}      }
      
      if (mustRehash_16350601(t_16310749)) {
      enlarge_16375161(t_16310749);
      index_16335641 = rawGetKnownHC_16376629(t_16310749, key_16310750, hc_16325601[0]);
      }
      
      index_16335641 = subInt(-1, index_16335641);
      rawInsert_16376122(t_16310749, t_16310749, "data", key_16310750, val_16310752, hc_16325601[0], index_16335641);
      t_16310749.counter = addInt(t_16310749.counter, 1);
    }
    

  
}
function HEX5BHEX5D_16385153(t_16385159, key_16385160) {
  var result_16385162 = null;
  var result_16385162_Idx = 0;

    var hcHEX60gensym22_16385163 = [0];
    var indexHEX60gensym22_16385172 = rawGet_16325602(t_16385159, key_16385160, hcHEX60gensym22_16385163, 0);
    if ((0 <= indexHEX60gensym22_16385172)) {
    result_16385162 = t_16385159.data[chckIndx(indexHEX60gensym22_16385172, 0, (t_16385159.data).length-1)]; result_16385162_Idx = "Field2";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_16385160 || []), parent: null, m_type: NTI1194645, name: null, trace: [], up: null}, "KeyError");
    }
    

  return [result_16385162, result_16385162_Idx];

}
function hashWangYi1_11420417(x_11420420) {
  var result_11420421 = 0;

            if (typeof BigInt == 'undefined') {
          result_11420421 = x_11420420; // For Node < 10.4, etc. we do the old identity hash
        } else {          // Otherwise we match the low 32-bits of C/C++ hash
          function hi_xor_lo_js(a, b) {
            const prod = BigInt(a) * BigInt(b);
            const mask = (BigInt(1) << BigInt(64)) - BigInt(1);
            return (prod >> BigInt(64)) ^ (prod & mask);
          }
          const P0  = BigInt(0xa0761d64)<<BigInt(32)|BigInt(0x78bd642f);
          const P1  = BigInt(0xe7037ed1)<<BigInt(32)|BigInt(0xa0b428db);
          const P58 = BigInt(0xeb44acca)<<BigInt(32)|BigInt(0xb455d165)^BigInt(8);
          var res   = hi_xor_lo_js(hi_xor_lo_js(P0, BigInt(x_11420420) ^ P1), P58);
          result_11420421  = Number(res & ((BigInt(1) << BigInt(53)) - BigInt(1)));
        }

  return result_11420421;

}
function hash_11420408(x_11420411) {
  var result_11420412 = 0;

    result_11420412 = hashWangYi1_11420417(x_11420411);

  return result_11420412;

}
function rawGet_16425602(t_16425606, key_16425607, hc_16425608, hc_16425608_Idx) {
            var Tmp3;

  var result_16425609 = 0;

  BeforeRet: do {
    hc_16425608[hc_16425608_Idx] = hash_11420408(key_16425607);
    if ((hc_16425608[hc_16425608_Idx] == 0)) {
    hc_16425608[hc_16425608_Idx] = 314159265;
    }
    
    if (((t_16425606.data).length == 0)) {
    result_16425609 = -1;
    break BeforeRet;
    }
    
    var h_16435138 = (hc_16425608[hc_16425608_Idx] & (t_16425606.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_11481218(t_16425606.data[chckIndx(h_16435138, 0, (t_16425606.data).length-1)].Field0)) break L2;
            if (!(t_16425606.data[chckIndx(h_16435138, 0, (t_16425606.data).length-1)].Field0 == hc_16425608[hc_16425608_Idx])) Tmp3 = false; else {              Tmp3 = (t_16425606.data[chckIndx(h_16435138, 0, (t_16425606.data).length-1)].Field1 == key_16425607);            }          if (Tmp3) {
          result_16425609 = h_16435138;
          break BeforeRet;
          }
          
          h_16435138 = nextTry_11485014(h_16435138, (t_16425606.data).length - 1);
        }
    } while(false);
    result_16425609 = subInt(-1, h_16435138);
  } while (false);

  return result_16425609;

}
function mustRehash_16450601(t_16450604) {
  var result_16450605 = false;

    if (!((t_16450604.counter < (t_16450604.data).length))) {
    failedAssertImpl_1305480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_16450605 = ((mulInt((t_16450604.data).length, 2) < mulInt(t_16450604.counter, 3)) || (subInt((t_16450604.data).length, t_16450604.counter) < 4));

  return result_16450605;

}
function rawInsert_16476122(t_16476128, data_16476131, data_16476131_Idx, key_16476132, val_16476134, hc_16476135, h_16476136) {
    data_16476131[data_16476131_Idx][chckIndx(h_16476136, 0, (data_16476131[data_16476131_Idx]).length-1)].Field1 = key_16476132;
    data_16476131[data_16476131_Idx][chckIndx(h_16476136, 0, (data_16476131[data_16476131_Idx]).length-1)].Field2 = val_16476134;
    data_16476131[data_16476131_Idx][chckIndx(h_16476136, 0, (data_16476131[data_16476131_Idx]).length-1)].Field0 = hc_16476135;

  
}
function enlarge_16475161(t_16475167) {
    var n_16475175 = [];
    n_16475175 = new Array(chckRange(mulInt((t_16475167.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_16475167.data).length, 2), 0, 2147483647);++i) {n_16475175[i]={Field0: 0, Field1: 0, Field2: 0};}    var Tmp1 = t_16475167.data; t_16475167.data = n_16475175; n_16475175 = Tmp1;    L2: do {
      var i_16475334 = 0;
      var colontmp__16480842 = 0;
      colontmp__16480842 = (n_16475175).length - 1;
      var res_16480843 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_16480843 <= colontmp__16480842)) break L4;
            i_16475334 = res_16480843;
            var eh_16475490 = n_16475175[chckIndx(i_16475334, 0, (n_16475175).length-1)].Field0;
            if (isFilled_11481218(eh_16475490)) {
            var j_16475497 = (eh_16475490 & (t_16475167.data).length - 1);
            L5: do {
                L6: while (true) {
                if (!isFilled_11481218(t_16475167.data[chckIndx(j_16475497, 0, (t_16475167.data).length-1)].Field0)) break L6;
                  j_16475497 = nextTry_11485014(j_16475497, (t_16475167.data).length - 1);
                }
            } while(false);
            rawInsert_16476122(t_16475167, t_16475167, "data", n_16475175[chckIndx(i_16475334, 0, (n_16475175).length-1)].Field1, n_16475175[chckIndx(i_16475334, 0, (n_16475175).length-1)].Field2, eh_16475490, j_16475497);
            }
            
            res_16480843 = addInt(res_16480843, 1);
          }
      } while(false);
    } while(false);

  
}
function rawGetKnownHC_16476629(t_16476633, key_16476634, hc_16476635) {
  var result_16476636 = 0;

  BeforeRet: do {
    if (((t_16476633.data).length == 0)) {
    result_16476636 = -1;
    break BeforeRet;
    }
    
    var h_16480138 = (hc_16476635 & (t_16476633.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_11481218(t_16476633.data[chckIndx(h_16480138, 0, (t_16476633.data).length-1)].Field0)) break L2;
          if (((t_16476633.data[chckIndx(h_16480138, 0, (t_16476633.data).length-1)].Field0 == hc_16476635) && (t_16476633.data[chckIndx(h_16480138, 0, (t_16476633.data).length-1)].Field1 == key_16476634))) {
          result_16476636 = h_16480138;
          break BeforeRet;
          }
          
          h_16480138 = nextTry_11485014(h_16480138, (t_16476633.data).length - 1);
        }
    } while(false);
    result_16476636 = subInt(-1, h_16480138);
  } while (false);

  return result_16476636;

}
function HEX5BHEX5DHEX3D_16410283(t_16410289, key_16410290, val_16410292) {
    if (((t_16410289.data).length == 0)) {
    var correctSizeHEX60gensym41_16420001 = slotsNeeded_11485048(32);
    t_16410289.counter = 0;
    t_16410289.data = new Array(chckRange(correctSizeHEX60gensym41_16420001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym41_16420001, 0, 2147483647);++i) {t_16410289.data[i]={Field0: 0, Field1: 0, Field2: 0};}    }
    
    var hc_16425601 = [0];
    var index_16435639 = rawGet_16425602(t_16410289, key_16410290, hc_16425601, 0);
    if ((0 <= index_16435639)) {
    t_16410289.data[chckIndx(index_16435639, 0, (t_16410289.data).length-1)].Field2 = val_16410292;
    }
    else {
      if (((t_16410289.data).length == 0)) {
      var correctSizeHEX60gensym46_16445001 = slotsNeeded_11485048(32);
      t_16410289.counter = 0;
      t_16410289.data = new Array(chckRange(correctSizeHEX60gensym46_16445001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym46_16445001, 0, 2147483647);++i) {t_16410289.data[i]={Field0: 0, Field1: 0, Field2: 0};}      }
      
      if (mustRehash_16450601(t_16410289)) {
      enlarge_16475161(t_16410289);
      index_16435639 = rawGetKnownHC_16476629(t_16410289, key_16410290, hc_16425601[0]);
      }
      
      index_16435639 = subInt(-1, index_16435639);
      rawInsert_16476122(t_16410289, t_16410289, "data", key_16410290, val_16410292, hc_16425601[0], index_16435639);
      t_16410289.counter = addInt(t_16410289.counter, 1);
    }
    

  
}
function HEX21HEX26_11407270(h_11407272, val_11407273) {
  var result_11407274 = 0;

    var h_11407275 = (h_11407272 >>> 0);
    var val_11407276 = (val_11407273 >>> 0);
    var res_11407277 = ((h_11407275 + val_11407276) >>> 0);
    res_11407277 = ((res_11407277 + (res_11407277 << 10)) >>> 0);
    res_11407277 = (res_11407277 ^ ((res_11407277 >>> 0) >>> 6));
    result_11407274 = (res_11407277|0);

  return result_11407274;

}
function binarySearch_3034190(c_3034192, tab_3034194, len_3034195, stride_3034196) {
      var Tmp3;

  var result_3034197 = 0;

  BeforeRet: do {
    var n_3034198 = len_3034195;
    var t_3034200 = 0;
    L1: do {
        L2: while (true) {
        if (!(1 < n_3034198)) break L2;
          var m_3035001 = divInt(n_3034198, 2);
          var p_3035002 = addInt(t_3034200, mulInt(m_3035001, stride_3034196));
          if ((tab_3034194[chckIndx(p_3035002, 0, (tab_3034194).length-1)] <= ((c_3034192)|0))) {
          t_3034200 = p_3035002;
          n_3034198 = subInt(n_3034198, m_3035001);
          }
          else {
            n_3034198 = m_3035001;
          }
          
        }
    } while(false);
      if (!!((n_3034198 == 0))) Tmp3 = false; else {        Tmp3 = (tab_3034194[chckIndx(t_3034200, 0, (tab_3034194).length-1)] <= ((c_3034192)|0));      }    if (Tmp3) {
    result_3034197 = t_3034200;
    break BeforeRet;
    }
    
    result_3034197 = -1;
    break BeforeRet;
  } while (false);

  return result_3034197;

}
function nuctoLower(c_3050016) {
      var Tmp1;
      var Tmp2;
      var Tmp3;

  var result_3050017 = 0;

  BeforeRet: do {
    var c_3050018 = c_3050016;
    var p_3050042 = binarySearch_3034190(c_3050018, toLowerRanges_3030223, 45, 3);
      if (!(0 <= p_3050042)) Tmp2 = false; else {        Tmp2 = (toLowerRanges_3030223[chckIndx(p_3050042, 0, (toLowerRanges_3030223).length-1)] <= ((c_3050018)|0));      }      if (!Tmp2) Tmp1 = false; else {        Tmp1 = (((c_3050018)|0) <= toLowerRanges_3030223[chckIndx(addInt(p_3050042, 1), 0, (toLowerRanges_3030223).length-1)]);      }    if (Tmp1) {
    result_3050017 = ((subInt(addInt(((c_3050018)|0), toLowerRanges_3030223[chckIndx(addInt(p_3050042, 2), 0, (toLowerRanges_3030223).length-1)]), 500))|0);
    break BeforeRet;
    }
    
    p_3050042 = binarySearch_3034190(c_3050018, toLowerSinglets_3031470, 610, 2);
      if (!(0 <= p_3050042)) Tmp3 = false; else {        Tmp3 = (((c_3050018)|0) == toLowerSinglets_3031470[chckIndx(p_3050042, 0, (toLowerSinglets_3031470).length-1)]);      }    if (Tmp3) {
    result_3050017 = ((subInt(addInt(((c_3050018)|0), toLowerSinglets_3031470[chckIndx(addInt(p_3050042, 1), 0, (toLowerSinglets_3031470).length-1)]), 500))|0);
    break BeforeRet;
    }
    
    result_3050017 = c_3050018;
    break BeforeRet;
  } while (false);

  return result_3050017;

}
function HEX3CHEX3DHEX25_1192474(x_1192476, y_1192477) {
  var result_1192478 = false;

    result_1192478 = ((x_1192476 >>> 0) <= (y_1192477 >>> 0));

  return result_1192478;

}
function nuctoLowerStr(s_4100216) {
  var result_4100217 = [];

    result_4100217 = nimCopy(null, mnewString(chckRange((s_4100216).length, 0, 2147483647)), NTI1188013);
    var iHEX60gensym393_4105002 = 0;
    var resultIndexHEX60gensym393_4105004 = 0;
    var runeHEX60gensym393_4105005 = 0;
    L1: do {
        L2: while (true) {
        if (!(iHEX60gensym393_4105002 < (s_4100216).length)) break L2;
          if ((s_4100216[chckIndx(iHEX60gensym393_4105002, 0, (s_4100216).length-1)] <= 127)) {
          runeHEX60gensym393_4105005 = chckRange(s_4100216[chckIndx(iHEX60gensym393_4105002, 0, (s_4100216).length-1)], -2147483648, 2147483647);
          iHEX60gensym393_4105002 = addInt(iHEX60gensym393_4105002, 1);
          }
          else {
          if ((((s_4100216[chckIndx(iHEX60gensym393_4105002, 0, (s_4100216).length-1)] >>> 0) >>> 5) == 6)) {
          if ((iHEX60gensym393_4105002 <= subInt((s_4100216).length, 2))) {
          runeHEX60gensym393_4105005 = chckRange((((s_4100216[chckIndx(iHEX60gensym393_4105002, 0, (s_4100216).length-1)] & 31) << 6) | (s_4100216[chckIndx(addInt(iHEX60gensym393_4105002, 1), 0, (s_4100216).length-1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym393_4105002 = addInt(iHEX60gensym393_4105002, 2);
          }
          else {
            runeHEX60gensym393_4105005 = 65533;
            iHEX60gensym393_4105002 = addInt(iHEX60gensym393_4105002, 1);
          }
          
          }
          else {
          if ((((s_4100216[chckIndx(iHEX60gensym393_4105002, 0, (s_4100216).length-1)] >>> 0) >>> 4) == 14)) {
          if ((iHEX60gensym393_4105002 <= subInt((s_4100216).length, 3))) {
          runeHEX60gensym393_4105005 = chckRange(((((s_4100216[chckIndx(iHEX60gensym393_4105002, 0, (s_4100216).length-1)] & 15) << 12) | ((s_4100216[chckIndx(addInt(iHEX60gensym393_4105002, 1), 0, (s_4100216).length-1)] & 63) << 6)) | (s_4100216[chckIndx(addInt(iHEX60gensym393_4105002, 2), 0, (s_4100216).length-1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym393_4105002 = addInt(iHEX60gensym393_4105002, 3);
          }
          else {
            runeHEX60gensym393_4105005 = 65533;
            iHEX60gensym393_4105002 = addInt(iHEX60gensym393_4105002, 1);
          }
          
          }
          else {
          if ((((s_4100216[chckIndx(iHEX60gensym393_4105002, 0, (s_4100216).length-1)] >>> 0) >>> 3) == 30)) {
          if ((iHEX60gensym393_4105002 <= subInt((s_4100216).length, 4))) {
          runeHEX60gensym393_4105005 = chckRange((((((s_4100216[chckIndx(iHEX60gensym393_4105002, 0, (s_4100216).length-1)] & 7) << 18) | ((s_4100216[chckIndx(addInt(iHEX60gensym393_4105002, 1), 0, (s_4100216).length-1)] & 63) << 12)) | ((s_4100216[chckIndx(addInt(iHEX60gensym393_4105002, 2), 0, (s_4100216).length-1)] & 63) << 6)) | (s_4100216[chckIndx(addInt(iHEX60gensym393_4105002, 3), 0, (s_4100216).length-1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym393_4105002 = addInt(iHEX60gensym393_4105002, 4);
          }
          else {
            runeHEX60gensym393_4105005 = 65533;
            iHEX60gensym393_4105002 = addInt(iHEX60gensym393_4105002, 1);
          }
          
          }
          else {
          if ((((s_4100216[chckIndx(iHEX60gensym393_4105002, 0, (s_4100216).length-1)] >>> 0) >>> 2) == 62)) {
          if ((iHEX60gensym393_4105002 <= subInt((s_4100216).length, 5))) {
          runeHEX60gensym393_4105005 = chckRange(((((((s_4100216[chckIndx(iHEX60gensym393_4105002, 0, (s_4100216).length-1)] & 3) << 24) | ((s_4100216[chckIndx(addInt(iHEX60gensym393_4105002, 1), 0, (s_4100216).length-1)] & 63) << 18)) | ((s_4100216[chckIndx(addInt(iHEX60gensym393_4105002, 2), 0, (s_4100216).length-1)] & 63) << 12)) | ((s_4100216[chckIndx(addInt(iHEX60gensym393_4105002, 3), 0, (s_4100216).length-1)] & 63) << 6)) | (s_4100216[chckIndx(addInt(iHEX60gensym393_4105002, 4), 0, (s_4100216).length-1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym393_4105002 = addInt(iHEX60gensym393_4105002, 5);
          }
          else {
            runeHEX60gensym393_4105005 = 65533;
            iHEX60gensym393_4105002 = addInt(iHEX60gensym393_4105002, 1);
          }
          
          }
          else {
          if ((((s_4100216[chckIndx(iHEX60gensym393_4105002, 0, (s_4100216).length-1)] >>> 0) >>> 1) == 126)) {
          if ((iHEX60gensym393_4105002 <= subInt((s_4100216).length, 6))) {
          runeHEX60gensym393_4105005 = chckRange((((((((s_4100216[chckIndx(iHEX60gensym393_4105002, 0, (s_4100216).length-1)] & 1) << 30) | ((s_4100216[chckIndx(addInt(iHEX60gensym393_4105002, 1), 0, (s_4100216).length-1)] & 63) << 24)) | ((s_4100216[chckIndx(addInt(iHEX60gensym393_4105002, 2), 0, (s_4100216).length-1)] & 63) << 18)) | ((s_4100216[chckIndx(addInt(iHEX60gensym393_4105002, 3), 0, (s_4100216).length-1)] & 63) << 12)) | ((s_4100216[chckIndx(addInt(iHEX60gensym393_4105002, 4), 0, (s_4100216).length-1)] & 63) << 6)) | (s_4100216[chckIndx(addInt(iHEX60gensym393_4105002, 5), 0, (s_4100216).length-1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym393_4105002 = addInt(iHEX60gensym393_4105002, 6);
          }
          else {
            runeHEX60gensym393_4105005 = 65533;
            iHEX60gensym393_4105002 = addInt(iHEX60gensym393_4105002, 1);
          }
          
          }
          else {
            runeHEX60gensym393_4105005 = chckRange(s_4100216[chckIndx(iHEX60gensym393_4105002, 0, (s_4100216).length-1)], -2147483648, 2147483647);
            iHEX60gensym393_4105002 = addInt(iHEX60gensym393_4105002, 1);
          }
          }}}}}
          runeHEX60gensym393_4105005 = nuctoLower(runeHEX60gensym393_4105005);
          var iHEX60gensym443_4355001 = runeHEX60gensym393_4105005;
          if (HEX3CHEX3DHEX25_1192474(iHEX60gensym443_4355001, 127)) {
          (result_4100217.length = chckRange(addInt(resultIndexHEX60gensym393_4105004, 1), 0, 2147483647));
          result_4100217[chckIndx(addInt(resultIndexHEX60gensym393_4105004, 0), 0, (result_4100217).length-1)] = chckRange(iHEX60gensym443_4355001, 0, 255);
          resultIndexHEX60gensym393_4105004 = addInt(resultIndexHEX60gensym393_4105004, 1);
          }
          else {
          if (HEX3CHEX3DHEX25_1192474(iHEX60gensym443_4355001, 2047)) {
          (result_4100217.length = chckRange(addInt(resultIndexHEX60gensym393_4105004, 2), 0, 2147483647));
          result_4100217[chckIndx(addInt(resultIndexHEX60gensym393_4105004, 0), 0, (result_4100217).length-1)] = chckRange(((iHEX60gensym443_4355001 >> 6) | 192), 0, 255);
          result_4100217[chckIndx(addInt(resultIndexHEX60gensym393_4105004, 1), 0, (result_4100217).length-1)] = chckRange(((iHEX60gensym443_4355001 & 63) | 128), 0, 255);
          resultIndexHEX60gensym393_4105004 = addInt(resultIndexHEX60gensym393_4105004, 2);
          }
          else {
          if (HEX3CHEX3DHEX25_1192474(iHEX60gensym443_4355001, 65535)) {
          (result_4100217.length = chckRange(addInt(resultIndexHEX60gensym393_4105004, 3), 0, 2147483647));
          result_4100217[chckIndx(addInt(resultIndexHEX60gensym393_4105004, 0), 0, (result_4100217).length-1)] = chckRange(((iHEX60gensym443_4355001 >> 12) | 224), 0, 255);
          result_4100217[chckIndx(addInt(resultIndexHEX60gensym393_4105004, 1), 0, (result_4100217).length-1)] = chckRange((((iHEX60gensym443_4355001 >> 6) & 63) | 128), 0, 255);
          result_4100217[chckIndx(addInt(resultIndexHEX60gensym393_4105004, 2), 0, (result_4100217).length-1)] = chckRange(((iHEX60gensym443_4355001 & 63) | 128), 0, 255);
          resultIndexHEX60gensym393_4105004 = addInt(resultIndexHEX60gensym393_4105004, 3);
          }
          else {
          if (HEX3CHEX3DHEX25_1192474(iHEX60gensym443_4355001, 2097151)) {
          (result_4100217.length = chckRange(addInt(resultIndexHEX60gensym393_4105004, 4), 0, 2147483647));
          result_4100217[chckIndx(addInt(resultIndexHEX60gensym393_4105004, 0), 0, (result_4100217).length-1)] = chckRange(((iHEX60gensym443_4355001 >> 18) | 240), 0, 255);
          result_4100217[chckIndx(addInt(resultIndexHEX60gensym393_4105004, 1), 0, (result_4100217).length-1)] = chckRange((((iHEX60gensym443_4355001 >> 12) & 63) | 128), 0, 255);
          result_4100217[chckIndx(addInt(resultIndexHEX60gensym393_4105004, 2), 0, (result_4100217).length-1)] = chckRange((((iHEX60gensym443_4355001 >> 6) & 63) | 128), 0, 255);
          result_4100217[chckIndx(addInt(resultIndexHEX60gensym393_4105004, 3), 0, (result_4100217).length-1)] = chckRange(((iHEX60gensym443_4355001 & 63) | 128), 0, 255);
          resultIndexHEX60gensym393_4105004 = addInt(resultIndexHEX60gensym393_4105004, 4);
          }
          else {
          if (HEX3CHEX3DHEX25_1192474(iHEX60gensym443_4355001, 67108863)) {
          (result_4100217.length = chckRange(addInt(resultIndexHEX60gensym393_4105004, 5), 0, 2147483647));
          result_4100217[chckIndx(addInt(resultIndexHEX60gensym393_4105004, 0), 0, (result_4100217).length-1)] = chckRange(((iHEX60gensym443_4355001 >> 24) | 248), 0, 255);
          result_4100217[chckIndx(addInt(resultIndexHEX60gensym393_4105004, 1), 0, (result_4100217).length-1)] = chckRange((((iHEX60gensym443_4355001 >> 18) & 63) | 128), 0, 255);
          result_4100217[chckIndx(addInt(resultIndexHEX60gensym393_4105004, 2), 0, (result_4100217).length-1)] = chckRange((((iHEX60gensym443_4355001 >> 12) & 63) | 128), 0, 255);
          result_4100217[chckIndx(addInt(resultIndexHEX60gensym393_4105004, 3), 0, (result_4100217).length-1)] = chckRange((((iHEX60gensym443_4355001 >> 6) & 63) | 128), 0, 255);
          result_4100217[chckIndx(addInt(resultIndexHEX60gensym393_4105004, 4), 0, (result_4100217).length-1)] = chckRange(((iHEX60gensym443_4355001 & 63) | 128), 0, 255);
          resultIndexHEX60gensym393_4105004 = addInt(resultIndexHEX60gensym393_4105004, 5);
          }
          else {
          if (HEX3CHEX3DHEX25_1192474(iHEX60gensym443_4355001, 2147483647)) {
          (result_4100217.length = chckRange(addInt(resultIndexHEX60gensym393_4105004, 6), 0, 2147483647));
          result_4100217[chckIndx(addInt(resultIndexHEX60gensym393_4105004, 0), 0, (result_4100217).length-1)] = chckRange(((iHEX60gensym443_4355001 >> 30) | 252), 0, 255);
          result_4100217[chckIndx(addInt(resultIndexHEX60gensym393_4105004, 1), 0, (result_4100217).length-1)] = chckRange((((iHEX60gensym443_4355001 >> 24) & 63) | 128), 0, 255);
          result_4100217[chckIndx(addInt(resultIndexHEX60gensym393_4105004, 2), 0, (result_4100217).length-1)] = chckRange((((iHEX60gensym443_4355001 >> 18) & 63) | 128), 0, 255);
          result_4100217[chckIndx(addInt(resultIndexHEX60gensym393_4105004, 3), 0, (result_4100217).length-1)] = chckRange((((iHEX60gensym443_4355001 >> 12) & 63) | 128), 0, 255);
          result_4100217[chckIndx(addInt(resultIndexHEX60gensym393_4105004, 4), 0, (result_4100217).length-1)] = chckRange((((iHEX60gensym443_4355001 >> 6) & 63) | 128), 0, 255);
          result_4100217[chckIndx(addInt(resultIndexHEX60gensym393_4105004, 5), 0, (result_4100217).length-1)] = chckRange(((iHEX60gensym443_4355001 & 63) | 128), 0, 255);
          resultIndexHEX60gensym393_4105004 = addInt(resultIndexHEX60gensym393_4105004, 6);
          }
          else {
          }
          }}}}}
        }
    } while(false);

  return result_4100217;

}
function HEX3DHEX3D_3030064(a_3030066, b_3030067) {
  var result_3030068 = false;

  BeforeRet: do {
    result_3030068 = (((a_3030066)|0) == ((b_3030067)|0));
    break BeforeRet;
  } while (false);

  return result_3030068;

}
function find_7915208(a_7915212, item_7915213) {
  var result_7915214 = 0;

  BeforeRet: do {
    result_7915214 = 0;
    L1: do {
      var i_7915247 = null;
      var i_7915247_Idx = 0;
      var i_16480978 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_16480978 < (a_7915212).length)) break L3;
            i_7915247 = a_7915212; i_7915247_Idx = chckIndx(i_16480978, 0, (a_7915212).length-1);
            if (HEX3DHEX3D_3030064(i_7915247[i_7915247_Idx], item_7915213)) {
            break BeforeRet;
            }
            
            result_7915214 = addInt(result_7915214, 1);
            i_16480978 = addInt(i_16480978, 1);
          }
      } while(false);
    } while(false);
    result_7915214 = -1;
  } while (false);

  return result_7915214;

}
function contains_7915201(a_7915205, item_7915206) {
  var result_7915207 = false;

  BeforeRet: do {
    result_7915207 = (0 <= find_7915208(a_7915205, item_7915206));
    break BeforeRet;
  } while (false);

  return result_7915207;

}
function HEX5BHEX5D_3015283(s_3015287, x_3015289) {
  var result_3015290 = [];

    var a_3015401 = x_3015289.a;
    var L_3015601 = addInt(subInt(x_3015289.b, a_3015401), 1);
    result_3015290 = nimCopy(null, mnewString(chckRange(L_3015601, 0, 2147483647)), NTI1188013);
    L1: do {
      var i_3015609 = 0;
      var i_16480985 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_16480985 < L_3015601)) break L3;
            i_3015609 = i_16480985;
            result_3015290[chckIndx(i_3015609, 0, (result_3015290).length-1)] = s_3015287[chckIndx(addInt(i_3015609, a_3015401), 0, (s_3015287).length-1)];
            i_16480985 = addInt(i_16480985, 1);
          }
      } while(false);
    } while(false);

  return result_3015290;

}
function HEX2EHEX2E_3015220(a_3015225, b_3015227) {
  var result_3015229 = ({a: 0, b: 0});

    nimCopy(result_3015229, {a: a_3015225, b: b_3015227}, NTI2136734);

  return result_3015229;

}
function nucStrip(s_8205040, leading_8205041, trailing_8205042, runes_8205044) {
  var result_8205045 = [];

    var sI_8205047 = 0;
    var eI_8205048 = subInt((s_8205040).length, 1);
    if (leading_8205041) {
    var i_8205050 = 0;
    var xI_8205051 = 0;
    var rune_8205052 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_8205050 < (s_8205040).length)) break L2;
          xI_8205051 = i_8205050;
          if ((s_8205040[chckIndx(i_8205050, 0, (s_8205040).length-1)] <= 127)) {
          rune_8205052 = chckRange(s_8205040[chckIndx(i_8205050, 0, (s_8205040).length-1)], -2147483648, 2147483647);
          i_8205050 = addInt(i_8205050, 1);
          }
          else {
          if ((((s_8205040[chckIndx(i_8205050, 0, (s_8205040).length-1)] >>> 0) >>> 5) == 6)) {
          if ((i_8205050 <= subInt((s_8205040).length, 2))) {
          rune_8205052 = chckRange((((s_8205040[chckIndx(i_8205050, 0, (s_8205040).length-1)] & 31) << 6) | (s_8205040[chckIndx(addInt(i_8205050, 1), 0, (s_8205040).length-1)] & 63)), -2147483648, 2147483647);
          i_8205050 = addInt(i_8205050, 2);
          }
          else {
            rune_8205052 = 65533;
            i_8205050 = addInt(i_8205050, 1);
          }
          
          }
          else {
          if ((((s_8205040[chckIndx(i_8205050, 0, (s_8205040).length-1)] >>> 0) >>> 4) == 14)) {
          if ((i_8205050 <= subInt((s_8205040).length, 3))) {
          rune_8205052 = chckRange(((((s_8205040[chckIndx(i_8205050, 0, (s_8205040).length-1)] & 15) << 12) | ((s_8205040[chckIndx(addInt(i_8205050, 1), 0, (s_8205040).length-1)] & 63) << 6)) | (s_8205040[chckIndx(addInt(i_8205050, 2), 0, (s_8205040).length-1)] & 63)), -2147483648, 2147483647);
          i_8205050 = addInt(i_8205050, 3);
          }
          else {
            rune_8205052 = 65533;
            i_8205050 = addInt(i_8205050, 1);
          }
          
          }
          else {
          if ((((s_8205040[chckIndx(i_8205050, 0, (s_8205040).length-1)] >>> 0) >>> 3) == 30)) {
          if ((i_8205050 <= subInt((s_8205040).length, 4))) {
          rune_8205052 = chckRange((((((s_8205040[chckIndx(i_8205050, 0, (s_8205040).length-1)] & 7) << 18) | ((s_8205040[chckIndx(addInt(i_8205050, 1), 0, (s_8205040).length-1)] & 63) << 12)) | ((s_8205040[chckIndx(addInt(i_8205050, 2), 0, (s_8205040).length-1)] & 63) << 6)) | (s_8205040[chckIndx(addInt(i_8205050, 3), 0, (s_8205040).length-1)] & 63)), -2147483648, 2147483647);
          i_8205050 = addInt(i_8205050, 4);
          }
          else {
            rune_8205052 = 65533;
            i_8205050 = addInt(i_8205050, 1);
          }
          
          }
          else {
          if ((((s_8205040[chckIndx(i_8205050, 0, (s_8205040).length-1)] >>> 0) >>> 2) == 62)) {
          if ((i_8205050 <= subInt((s_8205040).length, 5))) {
          rune_8205052 = chckRange(((((((s_8205040[chckIndx(i_8205050, 0, (s_8205040).length-1)] & 3) << 24) | ((s_8205040[chckIndx(addInt(i_8205050, 1), 0, (s_8205040).length-1)] & 63) << 18)) | ((s_8205040[chckIndx(addInt(i_8205050, 2), 0, (s_8205040).length-1)] & 63) << 12)) | ((s_8205040[chckIndx(addInt(i_8205050, 3), 0, (s_8205040).length-1)] & 63) << 6)) | (s_8205040[chckIndx(addInt(i_8205050, 4), 0, (s_8205040).length-1)] & 63)), -2147483648, 2147483647);
          i_8205050 = addInt(i_8205050, 5);
          }
          else {
            rune_8205052 = 65533;
            i_8205050 = addInt(i_8205050, 1);
          }
          
          }
          else {
          if ((((s_8205040[chckIndx(i_8205050, 0, (s_8205040).length-1)] >>> 0) >>> 1) == 126)) {
          if ((i_8205050 <= subInt((s_8205040).length, 6))) {
          rune_8205052 = chckRange((((((((s_8205040[chckIndx(i_8205050, 0, (s_8205040).length-1)] & 1) << 30) | ((s_8205040[chckIndx(addInt(i_8205050, 1), 0, (s_8205040).length-1)] & 63) << 24)) | ((s_8205040[chckIndx(addInt(i_8205050, 2), 0, (s_8205040).length-1)] & 63) << 18)) | ((s_8205040[chckIndx(addInt(i_8205050, 3), 0, (s_8205040).length-1)] & 63) << 12)) | ((s_8205040[chckIndx(addInt(i_8205050, 4), 0, (s_8205040).length-1)] & 63) << 6)) | (s_8205040[chckIndx(addInt(i_8205050, 5), 0, (s_8205040).length-1)] & 63)), -2147483648, 2147483647);
          i_8205050 = addInt(i_8205050, 6);
          }
          else {
            rune_8205052 = 65533;
            i_8205050 = addInt(i_8205050, 1);
          }
          
          }
          else {
            rune_8205052 = chckRange(s_8205040[chckIndx(i_8205050, 0, (s_8205040).length-1)], -2147483648, 2147483647);
            i_8205050 = addInt(i_8205050, 1);
          }
          }}}}}
          sI_8205047 = i_8205050;
          if (!(contains_7915201(runes_8205044, rune_8205052))) {
          sI_8205047 = xI_8205051;
          break L1;
          }
          
        }
    } while(false);
    }
    
    if (trailing_8205042) {
    var i_8450213 = eI_8205048;
    var xI_8450214 = 0;
    var rune_8450215 = 0;
    L3: do {
        L4: while (true) {
        if (!(0 <= i_8450213)) break L4;
          xI_8450214 = i_8450213;
          if ((s_8205040[chckIndx(xI_8450214, 0, (s_8205040).length-1)] <= 127)) {
          rune_8450215 = chckRange(s_8205040[chckIndx(xI_8450214, 0, (s_8205040).length-1)], -2147483648, 2147483647);
          xI_8450214 = addInt(xI_8450214, 1);
          }
          else {
          if ((((s_8205040[chckIndx(xI_8450214, 0, (s_8205040).length-1)] >>> 0) >>> 5) == 6)) {
          if ((xI_8450214 <= subInt((s_8205040).length, 2))) {
          rune_8450215 = chckRange((((s_8205040[chckIndx(xI_8450214, 0, (s_8205040).length-1)] & 31) << 6) | (s_8205040[chckIndx(addInt(xI_8450214, 1), 0, (s_8205040).length-1)] & 63)), -2147483648, 2147483647);
          xI_8450214 = addInt(xI_8450214, 2);
          }
          else {
            rune_8450215 = 65533;
            xI_8450214 = addInt(xI_8450214, 1);
          }
          
          }
          else {
          if ((((s_8205040[chckIndx(xI_8450214, 0, (s_8205040).length-1)] >>> 0) >>> 4) == 14)) {
          if ((xI_8450214 <= subInt((s_8205040).length, 3))) {
          rune_8450215 = chckRange(((((s_8205040[chckIndx(xI_8450214, 0, (s_8205040).length-1)] & 15) << 12) | ((s_8205040[chckIndx(addInt(xI_8450214, 1), 0, (s_8205040).length-1)] & 63) << 6)) | (s_8205040[chckIndx(addInt(xI_8450214, 2), 0, (s_8205040).length-1)] & 63)), -2147483648, 2147483647);
          xI_8450214 = addInt(xI_8450214, 3);
          }
          else {
            rune_8450215 = 65533;
            xI_8450214 = addInt(xI_8450214, 1);
          }
          
          }
          else {
          if ((((s_8205040[chckIndx(xI_8450214, 0, (s_8205040).length-1)] >>> 0) >>> 3) == 30)) {
          if ((xI_8450214 <= subInt((s_8205040).length, 4))) {
          rune_8450215 = chckRange((((((s_8205040[chckIndx(xI_8450214, 0, (s_8205040).length-1)] & 7) << 18) | ((s_8205040[chckIndx(addInt(xI_8450214, 1), 0, (s_8205040).length-1)] & 63) << 12)) | ((s_8205040[chckIndx(addInt(xI_8450214, 2), 0, (s_8205040).length-1)] & 63) << 6)) | (s_8205040[chckIndx(addInt(xI_8450214, 3), 0, (s_8205040).length-1)] & 63)), -2147483648, 2147483647);
          xI_8450214 = addInt(xI_8450214, 4);
          }
          else {
            rune_8450215 = 65533;
            xI_8450214 = addInt(xI_8450214, 1);
          }
          
          }
          else {
          if ((((s_8205040[chckIndx(xI_8450214, 0, (s_8205040).length-1)] >>> 0) >>> 2) == 62)) {
          if ((xI_8450214 <= subInt((s_8205040).length, 5))) {
          rune_8450215 = chckRange(((((((s_8205040[chckIndx(xI_8450214, 0, (s_8205040).length-1)] & 3) << 24) | ((s_8205040[chckIndx(addInt(xI_8450214, 1), 0, (s_8205040).length-1)] & 63) << 18)) | ((s_8205040[chckIndx(addInt(xI_8450214, 2), 0, (s_8205040).length-1)] & 63) << 12)) | ((s_8205040[chckIndx(addInt(xI_8450214, 3), 0, (s_8205040).length-1)] & 63) << 6)) | (s_8205040[chckIndx(addInt(xI_8450214, 4), 0, (s_8205040).length-1)] & 63)), -2147483648, 2147483647);
          xI_8450214 = addInt(xI_8450214, 5);
          }
          else {
            rune_8450215 = 65533;
            xI_8450214 = addInt(xI_8450214, 1);
          }
          
          }
          else {
          if ((((s_8205040[chckIndx(xI_8450214, 0, (s_8205040).length-1)] >>> 0) >>> 1) == 126)) {
          if ((xI_8450214 <= subInt((s_8205040).length, 6))) {
          rune_8450215 = chckRange((((((((s_8205040[chckIndx(xI_8450214, 0, (s_8205040).length-1)] & 1) << 30) | ((s_8205040[chckIndx(addInt(xI_8450214, 1), 0, (s_8205040).length-1)] & 63) << 24)) | ((s_8205040[chckIndx(addInt(xI_8450214, 2), 0, (s_8205040).length-1)] & 63) << 18)) | ((s_8205040[chckIndx(addInt(xI_8450214, 3), 0, (s_8205040).length-1)] & 63) << 12)) | ((s_8205040[chckIndx(addInt(xI_8450214, 4), 0, (s_8205040).length-1)] & 63) << 6)) | (s_8205040[chckIndx(addInt(xI_8450214, 5), 0, (s_8205040).length-1)] & 63)), -2147483648, 2147483647);
          xI_8450214 = addInt(xI_8450214, 6);
          }
          else {
            rune_8450215 = 65533;
            xI_8450214 = addInt(xI_8450214, 1);
          }
          
          }
          else {
            rune_8450215 = chckRange(s_8205040[chckIndx(xI_8450214, 0, (s_8205040).length-1)], -2147483648, 2147483647);
            xI_8450214 = addInt(xI_8450214, 1);
          }
          }}}}}
          var yI_8700207 = subInt(i_8450213, 1);
          L5: do {
              L6: while (true) {
              if (!(0 <= yI_8700207)) break L6;
                var yIend_8705001 = yI_8700207;
                var pRune_8705002 = 0;
                if ((s_8205040[chckIndx(yIend_8705001, 0, (s_8205040).length-1)] <= 127)) {
                pRune_8705002 = chckRange(s_8205040[chckIndx(yIend_8705001, 0, (s_8205040).length-1)], -2147483648, 2147483647);
                yIend_8705001 = addInt(yIend_8705001, 1);
                }
                else {
                if ((((s_8205040[chckIndx(yIend_8705001, 0, (s_8205040).length-1)] >>> 0) >>> 5) == 6)) {
                if ((yIend_8705001 <= subInt((s_8205040).length, 2))) {
                pRune_8705002 = chckRange((((s_8205040[chckIndx(yIend_8705001, 0, (s_8205040).length-1)] & 31) << 6) | (s_8205040[chckIndx(addInt(yIend_8705001, 1), 0, (s_8205040).length-1)] & 63)), -2147483648, 2147483647);
                yIend_8705001 = addInt(yIend_8705001, 2);
                }
                else {
                  pRune_8705002 = 65533;
                  yIend_8705001 = addInt(yIend_8705001, 1);
                }
                
                }
                else {
                if ((((s_8205040[chckIndx(yIend_8705001, 0, (s_8205040).length-1)] >>> 0) >>> 4) == 14)) {
                if ((yIend_8705001 <= subInt((s_8205040).length, 3))) {
                pRune_8705002 = chckRange(((((s_8205040[chckIndx(yIend_8705001, 0, (s_8205040).length-1)] & 15) << 12) | ((s_8205040[chckIndx(addInt(yIend_8705001, 1), 0, (s_8205040).length-1)] & 63) << 6)) | (s_8205040[chckIndx(addInt(yIend_8705001, 2), 0, (s_8205040).length-1)] & 63)), -2147483648, 2147483647);
                yIend_8705001 = addInt(yIend_8705001, 3);
                }
                else {
                  pRune_8705002 = 65533;
                  yIend_8705001 = addInt(yIend_8705001, 1);
                }
                
                }
                else {
                if ((((s_8205040[chckIndx(yIend_8705001, 0, (s_8205040).length-1)] >>> 0) >>> 3) == 30)) {
                if ((yIend_8705001 <= subInt((s_8205040).length, 4))) {
                pRune_8705002 = chckRange((((((s_8205040[chckIndx(yIend_8705001, 0, (s_8205040).length-1)] & 7) << 18) | ((s_8205040[chckIndx(addInt(yIend_8705001, 1), 0, (s_8205040).length-1)] & 63) << 12)) | ((s_8205040[chckIndx(addInt(yIend_8705001, 2), 0, (s_8205040).length-1)] & 63) << 6)) | (s_8205040[chckIndx(addInt(yIend_8705001, 3), 0, (s_8205040).length-1)] & 63)), -2147483648, 2147483647);
                yIend_8705001 = addInt(yIend_8705001, 4);
                }
                else {
                  pRune_8705002 = 65533;
                  yIend_8705001 = addInt(yIend_8705001, 1);
                }
                
                }
                else {
                if ((((s_8205040[chckIndx(yIend_8705001, 0, (s_8205040).length-1)] >>> 0) >>> 2) == 62)) {
                if ((yIend_8705001 <= subInt((s_8205040).length, 5))) {
                pRune_8705002 = chckRange(((((((s_8205040[chckIndx(yIend_8705001, 0, (s_8205040).length-1)] & 3) << 24) | ((s_8205040[chckIndx(addInt(yIend_8705001, 1), 0, (s_8205040).length-1)] & 63) << 18)) | ((s_8205040[chckIndx(addInt(yIend_8705001, 2), 0, (s_8205040).length-1)] & 63) << 12)) | ((s_8205040[chckIndx(addInt(yIend_8705001, 3), 0, (s_8205040).length-1)] & 63) << 6)) | (s_8205040[chckIndx(addInt(yIend_8705001, 4), 0, (s_8205040).length-1)] & 63)), -2147483648, 2147483647);
                yIend_8705001 = addInt(yIend_8705001, 5);
                }
                else {
                  pRune_8705002 = 65533;
                  yIend_8705001 = addInt(yIend_8705001, 1);
                }
                
                }
                else {
                if ((((s_8205040[chckIndx(yIend_8705001, 0, (s_8205040).length-1)] >>> 0) >>> 1) == 126)) {
                if ((yIend_8705001 <= subInt((s_8205040).length, 6))) {
                pRune_8705002 = chckRange((((((((s_8205040[chckIndx(yIend_8705001, 0, (s_8205040).length-1)] & 1) << 30) | ((s_8205040[chckIndx(addInt(yIend_8705001, 1), 0, (s_8205040).length-1)] & 63) << 24)) | ((s_8205040[chckIndx(addInt(yIend_8705001, 2), 0, (s_8205040).length-1)] & 63) << 18)) | ((s_8205040[chckIndx(addInt(yIend_8705001, 3), 0, (s_8205040).length-1)] & 63) << 12)) | ((s_8205040[chckIndx(addInt(yIend_8705001, 4), 0, (s_8205040).length-1)] & 63) << 6)) | (s_8205040[chckIndx(addInt(yIend_8705001, 5), 0, (s_8205040).length-1)] & 63)), -2147483648, 2147483647);
                yIend_8705001 = addInt(yIend_8705001, 6);
                }
                else {
                  pRune_8705002 = 65533;
                  yIend_8705001 = addInt(yIend_8705001, 1);
                }
                
                }
                else {
                  pRune_8705002 = chckRange(s_8205040[chckIndx(yIend_8705001, 0, (s_8205040).length-1)], -2147483648, 2147483647);
                  yIend_8705001 = addInt(yIend_8705001, 1);
                }
                }}}}}
                if ((yIend_8705001 < xI_8450214)) {
                break L5;
                }
                
                i_8450213 = yI_8700207;
                rune_8450215 = pRune_8705002;
                yI_8700207 = subInt(yI_8700207, 1);
              }
          } while(false);
          if (!(contains_7915201(runes_8205044, rune_8450215))) {
          eI_8205048 = subInt(xI_8450214, 1);
          break L3;
          }
          
          i_8450213 = subInt(i_8450213, 1);
        }
    } while(false);
    }
    
    var newLen_8950225 = addInt(subInt(eI_8205048, sI_8205047), 1);
    result_8205045 = nimCopy(null, mnewString(0), NTI1188013);
    if ((0 < newLen_8950225)) {
    result_8205045.push.apply(result_8205045, HEX5BHEX5D_3015283(s_8205040, HEX2EHEX2E_3015220(sI_8205047, eI_8205048)));;
    }
    

  return result_8205045;

}
function HEX21HEX24_11407305(h_11407307) {
  var result_11407308 = 0;

    var h_11407309 = (h_11407307 >>> 0);
    var res_11407317 = ((h_11407309 + (h_11407309 << 3)) >>> 0);
    res_11407317 = (res_11407317 ^ ((res_11407317 >>> 0) >>> 11));
    res_11407317 = ((res_11407317 + (res_11407317 << 15)) >>> 0);
    result_11407308 = (res_11407317|0);

  return result_11407308;

}
function hash_16211255(x_16211257) {
  var result_16211258 = 0;

    result_16211258 = HEX21HEX26_11407270(HEX21HEX26_11407270(HEX21HEX26_11407270(hash_11460214(nuctoLowerStr(nucStrip(x_16211257.name, true, true, unicodeSpaces_3034041))), hash_11460214(nuctoLowerStr(nucStrip(x_16211257.sector.postalCode, true, true, unicodeSpaces_3034041)))), hash_11460214(nuctoLowerStr(nucStrip(x_16211257.sector.city, true, true, unicodeSpaces_3034041)))), hash_11460214(nuctoLowerStr(nucStrip(x_16211257.sector.district, true, true, unicodeSpaces_3034041))));
    result_16211258 = HEX21HEX24_11407305(result_16211258);

  return result_16211258;

}
function initTblTotFamByStreet_16290837() {
              var Tmp8;
              var Tmp9;
              var Tmp10;
              var Tmp11;
              var Tmp12;
              var Tmp13;

  var result_16290861 = [({data: [], counter: 0})];

    nimCopy(result_16290861[0], initTable_16290864(32), NTI16290848);
    var streets_16300629 = nsuSplitCharSet(makeNimstrLit("Plz|DistrictUser|City|District|Street|TotalFamilies\x0A63628|Ahl|Bad Soden-Salm\xC3\xBCnster|Ahl|Am Hang|1\x0A63628|Ahl|Bad Soden-Salm\xC3\xBCnster|Ahl|Sch\xC3\xB6ne Aussicht|2\x0A63628|Ahl||||3\x0A63628|Alsberg|Bad Soden-Salm\xC3\xBCnster|Alsberg|Ringstra\xC3\x9Fe|1\x0A63628|Alsberg||||1\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany|Linsengericht|Altenha\xC3\x9Flau|Elf Morgen|1\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany|Linsengericht|Altenha\xC3\x9Flau|Fasanenweg|3\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany|Linsengericht|Altenha\xC3\x9Flau|Metzgerstra\xC3\x9Fe|1\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany|Linsengericht|Altenha\xC3\x9Flau|Rosenstra\xC3\x9Fe|1\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany|Linsengericht|Altenha\xC3\x9Flau|Strumpelburg|2\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany|Linsengericht|Altenha\xC3\x9Flau|Vor der Au|1\x0A63589|Altenha\xC3\x9Flau, Linsengericht, Germany||||9\x0A63579|Altenmittlau|Freigericht|Altenmittlau|An der Freigerichthalle|1\x0A63579|Altenmittlau|Freigericht|Altenmittlau|Industriestra\xC3\x9Fe|2\x0A63579|Altenmittlau|Freigericht||Kalkbergstra\xC3\x9Fe|1\x0A63579|Altenmittlau|Freigericht|Altenmittlau|Kolpingstra\xC3\x9Fe|3\x0A63579|Altenmittlau|Freigericht|Altenmittlau|Somborner Stra\xC3\x9Fe|1\x0A63579|Altenmittlau||||8\x0A63674|Altenstadt|Altenstadt|Altenstadt|Alemannenstra\xC3\x9Fe|4\x0A63674|Altenstadt|Altenstadt|Altenstadt|An der Hollerstaude|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|An der Steinkaute|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|Auf der Mauer|2\x0A63674|Altenstadt|Altenstadt|Altenstadt|Borngasse|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|Frankfurter Stra\xC3\x9Fe|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|Goethestra\xC3\x9Fe|4\x0A63674|Altenstadt|Altenstadt|Altenstadt|Hadrianstra\xC3\x9Fe|4\x0A63674|Altenstadt|Altenstadt|Altenstadt|Hanauer Stra\xC3\x9Fe|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|Kirchgasse|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|R\xC3\xB6merbrunnen|1\x0A63674|Altenstadt|Altenstadt|Altenstadt|Seilerstra\xC3\x9Fe|2\x0A63674|Altenstadt||||23\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|Bamberger Stra\xC3\x9Fe|2\x0A63607|Aufenau|W\xC3\xA4chtersbach||Frankfurter Stra\xC3\x9Fe|9\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|F\xC3\xBCrther Stra\xC3\x9Fe|2\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|Grimmstra\xC3\x9Fe|4\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|Hermann-L\xC3\xB6ns-Stra\xC3\x9Fe|1\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|Kantstra\xC3\x9Fe|1\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|Martin-Luther-Stra\xC3\x9Fe|1\x0A63607|Aufenau|W\xC3\xA4chtersbach|Aufenau|M\xC3\xBCnchener Stra\xC3\x9Fe|2\x0A63607|Aufenau||||22\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Am Linsenhof|2\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster||An der Rolandquelle|2\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Auf der Hohl|2\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Bornweg|7\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Burgstra\xC3\x9Fe|4\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Feldstra\xC3\x9Fe|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Hegelstra\xC3\x9Fe|5\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Hochstra\xC3\x9Fe|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Hohm\xC3\xBChlenweg|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Honiggasse|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Kantstra\xC3\x9Fe|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Karl-Roth-Stra\xC3\x9Fe|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Pacificusstra\xC3\x9Fe|4\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster||Romsthaler Stra\xC3\x9Fe|11\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Rudolf-Berta-Stra\xC3\x9Fe|6\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Sprudelallee|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Stolzenthalstra\xC3\x9Fe|17\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Bad Soden|Weilersweg|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Bad Sodener Stra\xC3\x9Fe|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Bahnhofstra\xC3\x9Fe|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Frankfurter Stra\xC3\x9Fe|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Fuldaer Stra\xC3\x9Fe|12\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Hanauer Landstra\xC3\x9Fe|13\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Joseph-M\xC3\xBCller-Stra\xC3\x9Fe|2\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Kettelerstra\xC3\x9Fe|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|M\xC3\xBCnsterbergstra\xC3\x9Fe|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Philipp-Reis-Stra\xC3\x9Fe|3\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|R\xC3\xBCckm\xC3\xBChlenweg|1\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Schillerstra\xC3\x9Fe|4\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Schwedenring|4\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Spessartstra\xC3\x9Fe|9\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Sudetenlandstra\xC3\x9Fe|7\x0A63628|B.Soden-Salm\xC3\xBCns.|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Winkelgasse|1\x0A63628|B.Soden-Salm\xC3\xBCns.||||141\x0A63619|Bad Orb|Bad Orb|Bad Orb|Altenbergstra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Am Schafstrieb|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Austra\xC3\x9Fe|5\x0A63619|Bad Orb|Bad Orb|Bad Orb|Berliner Stra\xC3\x9Fe|2\x0A63619|Bad Orb|Bad Orb|Bad Orb|Burgstra\xC3\x9Fe|4\x0A63619|Bad Orb|Bad Orb|Bad Orb|Eichendorffstra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Faulhaberstra\xC3\x9Fe|4\x0A63619|Bad Orb|Bad Orb|Bad Orb|F\xC3\xBCllweinstra\xC3\x9Fe|3\x0A63619|Bad Orb|Bad Orb|Bad Orb|Kinzigweg|2\x0A63619|Bad Orb|Bad Orb|Bad Orb|Lauzenstra\xC3\x9Fe|4\x0A63619|Bad Orb|Bad Orb|Bad Orb|Martin-Luther-Stra\xC3\x9Fe|5\x0A63619|Bad Orb|Bad Orb|Bad Orb|Mittelweg|6\x0A63619|Bad Orb|Bad Orb|Bad Orb|Taunusstra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Uferweg|2\x0A63619|Bad Orb|Bad Orb|Bad Orb|W\xC3\xA4chtersbacher Weg|4\x0A63619|Bad Orb|Bad Orb|Bad Orb|Wemmstra\xC3\x9Fe|2\x0A63619|Bad Orb|Bad Orb|Bad Orb|Bayernweg|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Bennweg|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Burgring|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Eduard-Gr\xC3\xA4f-Stra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Frankenweg|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Frankfurter Stra\xC3\x9Fe|2\x0A63619|Bad Orb|Bad Orb|Bad Orb|Friedrichstalstra\xC3\x9Fe|6\x0A63619|Bad Orb|Bad Orb|Bad Orb|Hubertusstra\xC3\x9Fe|6\x0A63619|Bad Orb|Bad Orb|Bad Orb|Johann-B\xC3\xBCttel-Stra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Kanalstra\xC3\x9Fe|2\x0A63619|Bad Orb|Bad Orb|Bad Orb|Kasselbergweg|11\x0A63619|Bad Orb|Bad Orb|Bad Orb|Leimbachstra\xC3\x9Fe|5\x0A63619|Bad Orb|Bad Orb|Bad Orb|Leopold-Koch-Stra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Lindenallee|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Marktbrunnenstra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Rh\xC3\xB6nstra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Sachsenh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63619|Bad Orb|Bad Orb|Bad Orb|Salzk\xC3\xA4rrnerweg|7\x0A63619|Bad Orb||||97\x0A63594|Bahnhofsiedlung|Hasselroth|Niedermittlau-Bahnhofssiedlung|Berliner Stra\xC3\x9Fe|2\x0A63594|Bahnhofsiedlung|Hasselroth|Niedermittlau-Bahnhofssiedlung|Fichtenstra\xC3\x9Fe|1\x0A63594|Bahnhofsiedlung|Hasselroth|Niedermittlau-Bahnhofssiedlung|Heinrich-Hofmann-Stra\xC3\x9Fe|3\x0A63594|Bahnhofsiedlung|Hasselroth|Niedermittlau-Bahnhofssiedlung|Lindenstra\xC3\x9Fe|1\x0A63594|Bahnhofsiedlung|Hasselroth|Niedermittlau-Bahnhofssiedlung|Waldstra\xC3\x9Fe|1\x0A63594|Bahnhofsiedlung||||8\x0A63579|Bernbach|Freigericht|Bernbach|Birkenhainer Stra\xC3\x9Fe|2\x0A63579|Bernbach|Freigericht|Bernbach|Brentanostra\xC3\x9Fe|1\x0A63579|Bernbach|Freigericht|Neuses|Vogelsbergstra\xC3\x9Fe|1\x0A63579|Bernbach||||4\x0A63599|Bieber|Biebergem\xC3\xBCnd|Bieber|Zimmerwiesenweg|1\x0A63599|Bieber||||1\x0A63633|Birstein|Birstein|Birstein|An der Riedwiese|2\x0A63633|Birstein|Birstein|Birstein|Bornwiesenweg|1\x0A63633|Birstein|Birstein|Birstein|B\xC3\xBCdinger Stra\xC3\x9Fe|1\x0A63633|Birstein|Birstein|Birstein|F\xC3\xBCnfkirchener Stra\xC3\x9Fe|3\x0A63633|Birstein|Birstein|Birstein|M\xC3\xBChlweg|1\x0A63633|Birstein|Birstein|Birstein|Rh\xC3\xB6nstra\xC3\x9Fe|1\x0A63633|Birstein|Birstein|Birstein|Spessartstra\xC3\x9Fe|3\x0A63633|Birstein|Birstein|Birstein|Steinweg|1\x0A63633|Birstein|Birstein|Birstein|Anton-Praetorius-Weg|2\x0A63633|Birstein|Birstein|Birstein|Bathwiesenweg|5\x0A63633|Birstein|Birstein|Birstein|Charlottenstra\xC3\x9Fe|15\x0A63633|Birstein|Birstein|Birstein|Julius-Hufnagel-Weg|3\x0A63633|Birstein|Birstein|Birstein|Katharinenstra\xC3\x9Fe|4\x0A63633|Birstein|Birstein|Birstein|Raiffeisenstra\xC3\x9Fe|5\x0A63633|Birstein|Birstein|Birstein|Sophienstra\xC3\x9Fe|6\x0A63633|Birstein|Birstein|Birstein|Zehntefeld|4\x0A63633|Birstein||||57\x0A63633|B\xC3\xB6sges\xC3\xA4\xC3\x9F|Birstein|B\xC3\xB6ssges\xC3\xA4\xC3\x9F|Grundweg|2\x0A63633|B\xC3\xB6sges\xC3\xA4\xC3\x9F||||2\x0A63599|Breitenborn|Gr\xC3\xBCndau|Breitenborn A.W.|Bergwiesenstra\xC3\x9Fe|1\x0A63599|Breitenborn|Gr\xC3\xBCndau|Breitenborn A.W.|Buchenweg|1\x0A63599|Breitenborn|Gr\xC3\xBCndau|Breitenborn A.W.|Hauptstra\xC3\x9Fe|1\x0A63599|Breitenborn|Biebergem\xC3\xBCnd|Breitenborn|Lanzinger Stra\xC3\x9Fe|1\x0A63599|Breitenborn||||4\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|August-Bebel-Stra\xC3\x9Fe|2\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Buchenweg|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Erich-Ollenhauer-Stra\xC3\x9Fe|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Ernst-Reuter-Stra\xC3\x9Fe|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Gleiwitzer Stra\xC3\x9Fe|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Hauptstra\xC3\x9Fe|2\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Im Niederried|3\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Kettelerstra\xC3\x9Fe|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Kirleweg|2\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|K\xC3\xB6nigsberger Stra\xC3\x9Fe|2\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Lindenallee|3\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Tilsiter Stra\xC3\x9Fe|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Udo-M\xC3\xBCller-Ring|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Varang\xC3\xA9viller Stra\xC3\x9Fe|2\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Walter-Rathenau-Stra\xC3\x9Fe|2\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Innerer Ring|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Kellereigasse|1\x0A63486|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Bruchk\xC3\xB6bel|Saalburgring|4\x0A63486|Bruchk\xC3\xB6bel||||31\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Nu\xC3\x9Fgraben|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Schlag|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Wildenstein|4\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Bismarckstra\xC3\x9Fe|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Friedrich-Fendt-Stra\xC3\x9Fe|8\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Gymnasiumstra\xC3\x9Fe|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Kastanienring|3\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Kellergasse|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|M\xC3\xBChltorstra\xC3\x9Fe|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Wilhelm-Dotter-Stra\xC3\x9Fe|3\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Alten Viadukt|12\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Klarengarten|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Im Flachsgrund|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|In den Weiherwiesen|12\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|An der Kleibscheibe|3\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Industriestra\xC3\x9Fe|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Salzbachaue|9\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|B\xC3\xBCdingen|Thiergartenstra\xC3\x9Fe|22\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Am Hofacker|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Auf dem Biehm|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen||Calbacher Stra\xC3\x9Fe|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Finkenweg|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Hauptstra\xC3\x9Fe|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Im Einzel|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Im Hinterfeld|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Im Hoffeld|10\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Otto-Beppler-Stra\xC3\x9Fe|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Schulstra\xC3\x9Fe|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Waldstra\xC3\x9Fe|1\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Wilhelm-Leuschner-Stra\xC3\x9Fe|2\x0A63654|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheim|Zum Seemenbach|1\x0A63654|B\xC3\xBCdingen||||114\x0A63165|Dietesheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|B\xC3\xBCrgermeister-Hainz-Stra\xC3\x9Fe|8\x0A63165|Dietesheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Elisabethenstra\xC3\x9Fe|10\x0A63165|Dietesheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Thomas-Mann-Stra\xC3\x9Fe|3\x0A63165|Dietesheim||||21\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Am Bieberbach|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Am Steinberg|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|B\xC3\xB6llstra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Gallische Stra\xC3\x9Fe|3\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Georg-August-Zinn-Stra\xC3\x9Fe|2\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Gertrud-Kolmar-Weg|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Gustav-Heinemann-Ring|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Konrad-Adenauer-Allee|2\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Kurt-Schumacher-Allee|2\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Langg\xC3\xA4sserstra\xC3\x9Fe|2\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Neckarstra\xC3\x9Fe|3\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Nibelungenstra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Patersh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Pestalozzistra\xC3\x9Fe|3\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Rheinstra\xC3\x9Fe|11\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Ringelnatzstra\xC3\x9Fe|2\x0A63128|Dietzenbach|Dietzenbach|Steinberg|R\xC3\xB6merstra\xC3\x9Fe|2\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Schlegelstra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Siedlerstra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Staufenstra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Taunusstra\xC3\x9Fe|9\x0A63128|Dietzenbach|Dietzenbach|Steinberg|Thomas-Mann-Ring|1\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Aschaffenburger Weg|4\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Babenh\xC3\xA4user Stra\xC3\x9Fe|2\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Glash\xC3\xBCttener Weg|4\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Konrad-Lang-Stra\xC3\x9Fe|1\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Marktheidenfelder Weg|3\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Rodgaustra\xC3\x9Fe|5\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Rohrbrunner Weg|2\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Talstra\xC3\x9Fe|6\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Tulpenstra\xC3\x9Fe|2\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Wertheimer Weg|1\x0A63128|Dietzenbach|Dietzenbach|Dietzenbach|Wiesenstra\xC3\x9Fe|3\x0A63128|Dietzenbach||||85\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Backesweg|1\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Beethovenstra\xC3\x9Fe|1\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Berliner Stra\xC3\x9Fe|1\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Bonhoefferstra\xC3\x9Fe|2\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Hermann-L\xC3\xB6ns-Stra\xC3\x9Fe|4\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|In der Mainaue|1\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|K\xC3\xA4the-Kollwitz-Stra\xC3\x9Fe|12\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|S\xC3\xBCdring|4\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Westendstra\xC3\x9Fe|4\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Wilhelmsbader Stra\xC3\x9Fe|1\x0A63477|D\xC3\xB6rnigheim|Maintal|D\xC3\xB6rnigheim|Wingertstra\xC3\x9Fe|1\x0A63477|D\xC3\xB6rnigheim||||32\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Am Alten S\xC3\xA4gewerk|2\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Am R\xC3\xBCckersgraben|8\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Dekan-Schuster-Stra\xC3\x9Fe|1\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Nieuwpoorter Stra\xC3\x9Fe|1\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Raiffeisenstra\xC3\x9Fe|1\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Saalburgring|2\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Spessartring|10\x0A63110|Dudenhofen|Rodgau|Dudenhofen|Dr.-Weinholz-Stra\xC3\x9Fe|1\x0A63110|Dudenhofen||||26\x0A63628|Eckardroth|Bad Soden-Salm\xC3\xBCnster|Eckardroth-Wahlert|Bergstra\xC3\x9Fe|1\x0A63628|Eckardroth|Bad Soden-Salm\xC3\xBCnster|Eckardroth-Wahlert|Oberweg|2\x0A63628|Eckardroth|Bad Soden-Salm\xC3\xBCnster|Eckardroth-Wahlert|Stiftungsstra\xC3\x9Fe|4\x0A63628|Eckardroth||||7\x0A63654|Eckartshausen|B\xC3\xBCdingen|Eckartshausen|Lohrbergstra\xC3\x9Fe|1\x0A63654|Eckartshausen||||1\x0A61130|Eichen|Nidderau|Eichen|Kleine Gasse|3\x0A61130|Eichen||||3\x0A63589|Eidenges\xC3\xA4\xC3\x9F|Linsengericht|Eidenges\xC3\xA4\xC3\x9F|Dettersweg|2\x0A63589|Eidenges\xC3\xA4\xC3\x9F|Linsengericht|Eidenges\xC3\xA4\xC3\x9F|Im Bangertsfeld|1\x0A63589|Eidenges\xC3\xA4\xC3\x9F||||3\x0A61130|Erbstadt|Nidderau|Erbstadt|Bogenstra\xC3\x9Fe|2\x0A61130|Erbstadt|Nidderau|Erbstadt|Hauptstra\xC3\x9Fe|1\x0A61130|Erbstadt||||3\x0A63639 Sum|Fl\xC3\xB6rsbach|Fl\xC3\xB6rsbachtal|Fl\xC3\xB6rsbach|Gartenweg|1\x0A63639 Sum|Fl\xC3\xB6rsbach|Fl\xC3\xB6rsbachtal|Fl\xC3\xB6rsbach|Huntzelstra\xC3\x9Fe|3\x0A63639 Sum|Fl\xC3\xB6rsbach|Fl\xC3\xB6rsbachtal|Fl\xC3\xB6rsbach|Orber Stra\xC3\x9Fe|1\x0A63639 Sum|Fl\xC3\xB6rsbach||||5\x0A63500|Froschhausen|Seligenstadt|Froschhausen|Hanauer Landstra\xC3\x9Fe|2\x0A63500|Froschhausen|Seligenstadt|Froschhausen|Mittelstra\xC3\x9Fe|1\x0A63500|Froschhausen|Seligenstadt|Froschhausen|Seligenst\xC3\xA4dter Stra\xC3\x9Fe|1\x0A63500|Froschhausen||||4\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Barbarossastra\xC3\x9Fe|1\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Grimmelshausenstra\xC3\x9Fe|2\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Herzbachweg|15\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Im Setzling|3\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|In der Brug|1\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Kapellenweg|1\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Kuhgasse|3\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|M\xC3\xBChlbachweg|2\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Pappelweg|2\x0A63571|Gelnhausen-Nord|Gelnhausen|Gelnhausen|Parkstra\xC3\x9Fe|1\x0A63571|Gelnhausen-Nord||||31\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Am Galgenfeld|3\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Clamecystra\xC3\x9Fe|16\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Dr.-Sondheimer-Stra\xC3\x9Fe|2\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Frankfurter Stra\xC3\x9Fe|1\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Franklinstra\xC3\x9Fe|1\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Graslitzer Stra\xC3\x9Fe|2\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Im Weiherfeld|5\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Lohm\xC3\xBChlenweg|18\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Rudolf-Diesel-Stra\xC3\x9Fe|1\x0A63571|Gelnhausen-S\xC3\xBCd|Gelnhausen|Gelnhausen|Uferweg|1\x0A63571|Gelnhausen-S\xC3\xBCd||||50\x0A63695|Glauberg, Glauburg, Deutschland|Glauburg|Glauberg|Ladestra\xC3\x9Fe|2\x0A63695|Glauberg, Glauburg, Deutschland|Glauburg|Glauberg|Wallgasse|1\x0A63695|Glauberg, Glauburg, Deutschland||||3\x0A63594|Gondsroth|Hasselroth|Gondsroth|Hauptstra\xC3\x9Fe|1\x0A63594|Gondsroth|Hasselroth|Gondsroth|Schulstra\xC3\x9Fe|2\x0A63594|Gondsroth||||3\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Brown-Boveri-Stra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Carl-Kronenberger-Stra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Hainbachstra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Karl-Kihn-Stra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Krotzenburger Stra\xC3\x9Fe|2\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Otto-Gr\xC3\xBCn-Stra\xC3\x9Fe|2\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Spitzenweg|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Zum Torfbruch|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Annette-Kolb-Weg|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Annette-von-Droste-H\xC3\xBClshoff-Weg|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|August-Gaul-Stra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Bahnhofstra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Bertolt-Brecht-Weg|4\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Franz-Kafka-Weg|3\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Goethestra\xC3\x9Fe|3\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Hauptstra\xC3\x9Fe|1\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Ingeborg-Bachmann-Weg|3\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Lion-Feuchtwanger-Weg|5\x0A63457|Gro\xC3\x9Fauheim|Hanau|Gro\xC3\x9Fauheim|Rudolf-Hagelstange-Weg|3\x0A63457|Gro\xC3\x9Fauheim||||36\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Molkenborn|9\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Pfaffenwald|3\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|An der Schildwache|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Gr\xC3\xBCnwaldweg|2\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Pferdsbacher Weg|3\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen||Vogelsbergstra\xC3\x9Fe|3\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Zum Stadtgraben|2\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Am Kreischborn|2\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|D\xC3\xBCdelsheimer Stra\xC3\x9Fe|3\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Eichelbergring|2\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Ostpreu\xC3\x9Fenstra\xC3\x9Fe|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Sudetenstra\xC3\x9Fe|7\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|\xC3\x9Cber den Roten Gr\xC3\xA4ben|4\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Bahnhofstra\xC3\x9Fe|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Berliner Stra\xC3\x9Fe|4\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Lorbacher Stra\xC3\x9Fe|8\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen||Orlesh\xC3\xA4user Stra\xC3\x9Fe|4\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen||\xC3\x9Cber der Seeme|3\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Im Lipperts|21\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Lorbacher Stra\xC3\x9Fe|7\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|An der Fahrbach|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Bahnhofstra\xC3\x9Fe|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Mackensenstra\xC3\x9Fe|8\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|M\xC3\xA4usfall|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Schillerstra\xC3\x9Fe|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen|B\xC3\xBCdingen|Seemenbachstra\xC3\x9Fe|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany|B\xC3\xBCdingen||Vogelsbergstra\xC3\x9Fe|1\x0A63654|Gro\xC3\x9Fendorf, B\xC3\xBCdingen, Germany||||104\x0A63589|Gro\xC3\x9Fenhausen|Linsengericht|Gro\xC3\x9Fenhausen|Kastanienstra\xC3\x9Fe|1\x0A63589|Gro\xC3\x9Fenhausen|Linsengericht|Gro\xC3\x9Fenhausen|Nordstra\xC3\x9Fe|1\x0A63589|Gro\xC3\x9Fenhausen||||2\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Albert-Einstein-Stra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Bahnhofstra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Danziger Stra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gutenbergallee|4\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Im Flachsgewann|2\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Max-Planck-Stra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Melmensee|3\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Oberwaldstra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Rh\xC3\xB6nstra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Robert-Koch-Weg|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Taunusstra\xC3\x9Fe|4\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Torsbyv\xC3\xA4gen|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Wahlersee|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Bahnhofstra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Beethovenstra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Gro\xC3\x9Fkrotzenburg|Wilhelmstra\xC3\x9Fe|1\x0A63538|Gro\xC3\x9Fkrotzenburg||||25\x0A63571|Hailer|Gelnhausen|Hailer|Am Fa\xC3\x9Fholzwerk|1\x0A63571|Hailer|Gelnhausen|Hailer|Bl\xC3\xBCmgesgrundstra\xC3\x9Fe|1\x0A63571|Hailer|Gelnhausen|Hailer|Dr.-Heinrich-Mohn-Stra\xC3\x9Fe|5\x0A63571|Hailer|Gelnhausen|Hailer|Eisenbahnstra\xC3\x9Fe|6\x0A63571|Hailer|Gelnhausen|Hailer|Gelnh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63571|Hailer|Gelnhausen|Hailer|Gr\xC3\xBCner Weg|5\x0A63571|Hailer|Gelnhausen|Hailer|Jahnstra\xC3\x9Fe|1\x0A63571|Hailer|Gelnhausen|Hailer|Reinhardstra\xC3\x9Fe|1\x0A63571|Hailer|Gelnhausen|Hailer|Sudetenstra\xC3\x9Fe|2\x0A63571|Hailer|Gelnhausen|Hailer|Vorm R\xC3\xB6hrig|5\x0A63571|Hailer||||28\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Burgstra\xC3\x9Fe|1\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Hainstra\xC3\x9Fe|2\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Hochstra\xC3\x9Fe|1\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Ortsberingweg|1\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Schmiedegasse|1\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Weidenstra\xC3\x9Fe|2\x0A63584|Hain-Gr\xC3\xBCndau|Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndau|Zur K\xC3\xB6nigseiche|2\x0A63584|Hain-Gr\xC3\xBCndau||||10\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Hainhausen|Br\xC3\xBCder-Grimm-Stra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Weiskirchen|Dietrich-Bonhoeffer-Stra\xC3\x9Fe|3\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Hainhausen|Eppsteiner Stra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Weiskirchen|Friedrich-Ebert-Stra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Weiskirchen|Hainh\xC3\xA4user Stra\xC3\x9Fe|2\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Weiskirchen|Hauptstra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Weiskirchen|Kolpingstra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Hainhausen|Rochusstra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Hainhausen|Rubensstra\xC3\x9Fe|1\x0A63110|Hainhausen,We\xC3\x9Fkirchen|Rodgau|Hainhausen|Wilhelm-Leuschner-Stra\xC3\x9Fe|5\x0A63110|Hainhausen,We\xC3\x9Fkirchen||||17\x0A63512|Hainstadt|Hainburg||Bachgasse|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Bahnhofstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Friedhofstra\xC3\x9Fe|2\x0A63512|Hainstadt|Hainburg|Hainstadt|Hainst\xC3\xA4dter Stra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Hauptstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Wilhelmstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Am Kiefernhain|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Dresdener Stra\xC3\x9Fe|2\x0A63512|Hainstadt|Hainburg|Hainstadt|Erfurter Stra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Fichtestra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Gablonzer Stra\xC3\x9Fe|2\x0A63512|Hainstadt|Hainburg|Hainstadt|Gartenstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Im L\xC3\xB6schem|1\x0A63512|Hainstadt|Hainburg|Hainstadt|K\xC3\xB6nigsberger Stra\xC3\x9Fe|4\x0A63512|Hainstadt|Hainburg|Hainstadt|Leipziger Stra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Offenbacher Landstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Reichenberger Ring|2\x0A63512|Hainstadt|Hainburg|Hainstadt|Schillerstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Uhlandstra\xC3\x9Fe|1\x0A63512|Hainstadt|Hainburg|Hainstadt|Waldstra\xC3\x9Fe|1\x0A63512|Hainstadt||||27\x0A63571|Haitz|Gelnhausen|Haitz|Am Bocksborn|2\x0A63571|Haitz|Gelnhausen|Haitz|Am Kandelrain|1\x0A63571|Haitz|Gelnhausen|Haitz|Am Langen Steg|1\x0A63571|Haitz|Gelnhausen|Gelnhausen|Barbarossastra\xC3\x9Fe|4\x0A63571|Haitz|Gelnhausen|Haitz|Birsteiner Stra\xC3\x9Fe|2\x0A63571|Haitz|Gelnhausen|Haitz|Dorfstra\xC3\x9Fe|1\x0A63571|Haitz|Gelnhausen|Haitz|Dr.-Faust-Stra\xC3\x9Fe|2\x0A63571|Haitz|Gelnhausen|Gelnhausen|Fuldaweg|2\x0A63571|Haitz|Gelnhausen|Gelnhausen|Himmelauer M\xC3\xBChle|1\x0A63571|Haitz|Gelnhausen|Gelnhausen|Kinzigstra\xC3\x9Fe|13\x0A63571|Haitz|Gelnhausen||Kremp\'sche Spitze|4\x0A63571|Haitz|Gelnhausen|Gelnhausen|Mainstra\xC3\x9Fe|7\x0A63571|Haitz|Gelnhausen|Haitz|Neuer Weg|1\x0A63571|Haitz|Gelnhausen|Haitz|Sch\xC3\xB6ne Aussicht|1\x0A63571|Haitz|Gelnhausen|Meerholz|Spessartstra\xC3\x9Fe|2\x0A63571|Haitz|Gelnhausen|Haitz|Zum Taubengarten|8\x0A63571|Haitz||||52\x0A63450|Hanau|Hanau|Hanau|Altstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Am Frankfurter Tor|4\x0A63450|Hanau|Hanau|Hanau|Eugen-Kaiser-Stra\xC3\x9Fe|2\x0A63450|Hanau|Hanau|Hanau|Fischerh\xC3\xBCttenweg|1\x0A63450|Hanau|Hanau|Hanau|G\xC3\xA4rtnerstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Glockenstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|In den T\xC3\xBCrkischen G\xC3\xA4rten|2\x0A63450|Hanau|Hanau|Hanau|Johanneskirchplatz|1\x0A63450|Hanau|Hanau|Hanau|Karl-R\xC3\xB6ttelberg-Stra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Kinzigstra\xC3\x9Fe|2\x0A63450|Hanau|Hanau|Hanau|Kr\xC3\xA4merstra\xC3\x9Fe|2\x0A63450|Hanau|Hanau|Hanau|Lothringer Stra\xC3\x9Fe|3\x0A63450|Hanau|Hanau|Hanau|M\xC3\xBChlstra\xC3\x9Fe|11\x0A63450|Hanau|Hanau|Hanau|Nordstra\xC3\x9Fe|3\x0A63450|Hanau|Hanau|Hanau|Nu\xC3\x9Fallee|3\x0A63450|Hanau|Hanau|Hanau|Ramsaystra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|R\xC3\xB6merstra\xC3\x9Fe|5\x0A63450|Hanau|Hanau|Hanau|R\xC3\xBChlstra\xC3\x9Fe|4\x0A63450|Hanau|Hanau|Hanau|Sch\xC3\xBCtzenstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Steinheimer Stra\xC3\x9Fe|5\x0A63450|Hanau|Hanau|Hanau|Vor dem Kanaltor|2\x0A63450|Hanau|Hanau|Hanau|Akademiestra\xC3\x9Fe|2\x0A63450|Hanau|Hanau|Hanau|Am Hauptbahnhof|2\x0A63450|Hanau|Hanau|Hanau|Am Krawallgraben|1\x0A63450|Hanau|Hanau|Hanau|Barbarossastra\xC3\x9Fe|3\x0A63450|Hanau|Hanau|Hanau|B\xC3\xBCchnerstra\xC3\x9Fe|5\x0A63450|Hanau|Hanau|Hanau|Dettinger Stra\xC3\x9Fe|5\x0A63450|Hanau|Hanau|Hanau|Engelhardstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Freigerichtstra\xC3\x9Fe|5\x0A63450|Hanau|Hanau|Hanau|Friedrichstra\xC3\x9Fe|9\x0A63450|Hanau|Hanau|Hanau|Gallienstra\xC3\x9Fe|3\x0A63450|Hanau|Hanau|Hanau|Grimmelshausenstra\xC3\x9Fe|8\x0A63450|Hanau|Hanau|Hanau|Industrieweg|1\x0A63450|Hanau|Hanau|Hanau|Landwehr|2\x0A63450|Hanau|Hanau|Hanau|Matthias-Da\xC3\x9Fbach-Stra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Milseburgstra\xC3\x9Fe|5\x0A63450|Hanau|Hanau|Hanau|Ottostra\xC3\x9Fe|6\x0A63450|Hanau|Hanau|Hanau|Ronneburgstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Saalburgstra\xC3\x9Fe|2\x0A63450|Hanau|Hanau|Hanau|Auheimer Stra\xC3\x9Fe|4\x0A63450|Hanau|Hanau|Gro\xC3\x9Fauheim|Hanauer Landstra\xC3\x9Fe|1\x0A63450|Hanau|Hanau|Hanau|Mainstra\xC3\x9Fe|1\x0A63450|Hanau||||124\x0A63452|Hanau-Nord|Hanau|Hanau|Alter R\xC3\xBCckinger Weg|12\x0A63452|Hanau-Nord|Hanau|Hanau|B\xC3\xBCdinger Stra\xC3\x9Fe|52\x0A63452|Hanau-Nord|Hanau|Hanau|D\xC3\xB6rnigheimer Stra\xC3\x9Fe|6\x0A63452|Hanau-Nord|Hanau|Hanau|Vor der Kinzigbr\xC3\xBCcke|1\x0A63452|Hanau-Nord|Hanau|Hanau|Alter R\xC3\xBCckinger Weg|23\x0A63452|Hanau-Nord|Hanau|Hanau|Antoniterstra\xC3\x9Fe|21\x0A63452|Hanau-Nord|Hanau|Hanau|Friedberger Stra\xC3\x9Fe|7\x0A63452|Hanau-Nord|Hanau|Hanau|Im Venussee|1\x0A63452|Hanau-Nord|Hanau|Hanau|Reichenberger Stra\xC3\x9Fe|11\x0A63452|Hanau-Nord||||134\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Albert-Schweitzer-Stra\xC3\x9Fe|3\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Austra\xC3\x9Fe|8\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Bachstra\xC3\x9Fe|3\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Bauerbachstra\xC3\x9Fe|3\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Bernardstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Birkenwaldstra\xC3\x9Fe|24\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Dieburger Stra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Dreieichstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Egerl\xC3\xA4nder Platz|7\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Feldstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Forststra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Frankfurter Stra\xC3\x9Fe|8\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Gumbertseestra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Herrnstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Kapellenstra\xC3\x9Fe|2\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|L\xC3\xA4mmerspieler Stra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Laubenstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Maingaustra\xC3\x9Fe|8\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|M\xC3\xBChlstra\xC3\x9Fe|2\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Pater-Delp-Stra\xC3\x9Fe|2\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Platanenstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Richard-Wagner-Stra\xC3\x9Fe|11\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Robert-Koch-Stra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Sch\xC3\xB6nbornstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Schubertstra\xC3\x9Fe|6\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Seligenst\xC3\xA4dter Stra\xC3\x9Fe|23\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Sudetenstra\xC3\x9Fe|1\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Tempelhofer Stra\xC3\x9Fe|2\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Tulpenstra\xC3\x9Fe|3\x0A63179|Obertshausen Hausen|Obertshausen|Hausen|Von-Behring-Stra\xC3\x9Fe|3\x0A63179|Obertshausen Hausen||||131\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Aachener Stra\xC3\x9Fe|4\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|Ahornstra\xC3\x9Fe|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Bonner Stra\xC3\x9Fe|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Dresdener Stra\xC3\x9Fe|6\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|Fichtenstra\xC3\x9Fe|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|Ginsterweg|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Gustav-Kastropp-Stra\xC3\x9Fe|3\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Heinrich-Hofmann-Stra\xC3\x9Fe|8\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|Josef-Leistenschneider-Stra\xC3\x9Fe|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|K\xC3\xB6lner Stra\xC3\x9Fe|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|L\xC3\xA4rchenweg|2\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|Lavendelweg|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|M\xC3\xBCnchener Stra\xC3\x9Fe|8\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Hausen|Platanenstra\xC3\x9Fe|1\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Potsdamer Stra\xC3\x9Fe|4\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|Weinstra\xC3\x9Fe|2\x0A63628|Hausen|Bad Soden-Salm\xC3\xBCnster|Salm\xC3\xBCnster|W\xC3\xBCrzburger Stra\xC3\x9Fe|2\x0A63628|Hausen||||47\x0A63674|Heegheim|Altenstadt|Heegheim|Fliederweg|1\x0A63674|Heegheim||||1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Albert-Schweitzer-Stra\xC3\x9Fe|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Am H\xC3\xBCpper|4\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Am Nidderfeld|4\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Am Pfarrgarten|2\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Am Steinweg|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|An der Landwehr|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Beethovenallee|2\x0A61130|Heldenbergen|Nidderau|Heldenbergen|B\xC3\xBCdinger Stra\xC3\x9Fe|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Castellring|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Emil-Nolde-Stra\xC3\x9Fe|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Gartenstra\xC3\x9Fe|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Jenny-Rothschild-Stra\xC3\x9Fe|2\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Saalburgstra\xC3\x9Fe|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Wagnerstra\xC3\x9Fe|1\x0A61130|Heldenbergen|Nidderau|Heldenbergen|Wilhelm-Leibl-Stra\xC3\x9Fe|1\x0A61130|Heldenbergen||||24\x0A63636 Sum|Hellstein|Brachttal|Hellstein|Breulstra\xC3\x9Fe|1\x0A63636 Sum|Hellstein|Brachttal|Hellstein|Hochstra\xC3\x9Fe|3\x0A63636 Sum|Hellstein|Brachttal|Hellstein|Hochstra\xC3\x9Fe|1\x0A63636 Sum|Hellstein|Brachttal|Hellstein|Oberweg|2\x0A63636 Sum|Hellstein|Brachttal|Hellstein|Raiffeisenstra\xC3\x9Fe|1\x0A63636 Sum|Hellstein|Brachttal|Hellstein|Im Schafstall|6\x0A63636 Sum|Hellstein||||14\x0A63607|Hesseldorf|W\xC3\xA4chtersbach|Hesseldorf|Brachttalstra\xC3\x9Fe|1\x0A63607|Hesseldorf|W\xC3\xA4chtersbach|Hesseldorf|Im Alten Garten|1\x0A63607|Hesseldorf|W\xC3\xA4chtersbach|Hesseldorf|In der Aue|1\x0A63607|Hesseldorf|W\xC3\xA4chtersbach|Hesseldorf|Triebstra\xC3\x9Fe|2\x0A63607|Hesseldorf||||5\x0A63633|Hettersroth|Birstein|Hettersroth|Birkengasse|1\x0A63633|Hettersroth|Birstein|Hettersroth|Brunnenstra\xC3\x9Fe|2\x0A63633|Hettersroth|Birstein|Hettersroth|Haideacker|1\x0A63633|Hettersroth||||4\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Frankfurter Stra\xC3\x9Fe|3\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Friedenstra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Hans-Hemberger-Stra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Im Hohen Gewann|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Landgrebeweg|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Ostendstra\xC3\x9Fe|2\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Paulstra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Albert-Einstein-Stra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Am Frankfurter Weg|14\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Am Lindenbaum|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Berliner Stra\xC3\x9Fe|7\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Borsigstra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Dietrich-Bonhoeffer-Stra\xC3\x9Fe|2\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Feldbergstra\xC3\x9Fe|6\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Hegelstra\xC3\x9Fe|4\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Humboldtstra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Kolpingstra\xC3\x9Fe|4\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Konrad-Adenauer-Stra\xC3\x9Fe|1\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Leipziger Ring|3\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Lerchenstra\xC3\x9Fe|10\x0A63150|Heusenstamm|Heusenstamm|Heusenstamm|Schweitzerstra\xC3\x9Fe|2\x0A63150|Heusenstamm||||67\x0A63699|Hitzkirchen|Kefenrod||Am Lindenberg|7\x0A63699|Hitzkirchen|Kefenrod|Hitzkirchen|Hauptstra\xC3\x9Fe|1\x0A63699|Hitzkirchen||||8\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Am R\xC3\xBCckersberg|1\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Brunnenblick|1\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Hauptstra\xC3\x9Fe|1\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Kasseler Stra\xC3\x9Fe|2\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Ketteler Stra\xC3\x9Fe|1\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Kurzer Weg|1\x0A63674|H\xC3\xB6chst|Gelnhausen|Roth|Leipziger Stra\xC3\x9Fe|2\x0A63674|H\xC3\xB6chst|Gelnhausen||Panoramaweg|1\x0A63674|H\xC3\xB6chst|Gelnhausen|H\xC3\xB6chst|Untere Sch\xC3\xB6nau|1\x0A63674|H\xC3\xB6chst|Altenstadt|H\xC3\xB6chst|Am Feldborn|1\x0A63674|H\xC3\xB6chst|Altenstadt|H\xC3\xB6chst|Burgweg|1\x0A63674|H\xC3\xB6chst|Altenstadt|H\xC3\xB6chst|G\xC3\xA4\xC3\x9Fchen|1\x0A63674|H\xC3\xB6chst|Altenstadt|H\xC3\xB6chst|Ringstra\xC3\x9Fe|3\x0A63674|H\xC3\xB6chst||||17\x0A63477|Hochstadt|Maintal|Hochstadt|Altk\xC3\xB6nigstra\xC3\x9Fe|2\x0A63477|Hochstadt|Maintal|Hochstadt|Am Weides|1\x0A63477|Hochstadt|Maintal|Hochstadt|Bernauer Stra\xC3\x9Fe|1\x0A63477|Hochstadt|Maintal|Hochstadt|Bischofsheimer Stra\xC3\x9Fe|1\x0A63477|Hochstadt|Maintal|Hochstadt|Maulbeerweg|4\x0A63477|Hochstadt|Maintal|Hochstadt|Ringstra\xC3\x9Fe S\xC3\xBCd|2\x0A63477|Hochstadt|Maintal|Hochstadt|Speierlingweg|1\x0A63477|Hochstadt|Maintal|Hochstadt|Wilhelm-Mankel-Stra\xC3\x9Fe|1\x0A63477|Hochstadt||||13\x0A63579|Horbach|Freigericht|Horbach|Am Sandberg|1\x0A63579|Horbach|Freigericht|Bernbach|Birkenhainer Stra\xC3\x9Fe|2\x0A63579|Horbach|Freigericht|Horbach|Kirchstra\xC3\x9Fe|1\x0A63579|Horbach|Freigericht|Horbach|M\xC3\xBChlstra\xC3\x9Fe|2\x0A63579|Horbach|Freigericht|Horbach|Wilhelm-Winter-Stra\xC3\x9Fe|1\x0A63579|Horbach||||7\x0A63584|H\xC3\xBChnerhof|Gr\xC3\xBCndau||H\xC3\xBChnerhof|2\x0A63584|H\xC3\xBChnerhof||||2\x0A63549 Sum|H\xC3\xBCttenges\xC3\xA4\xC3\x9F|Ronneburg|H\xC3\xBCttenges\xC3\xA4\xC3\x9F|Im Hartengrund|1\x0A63549 Sum|H\xC3\xBCttenges\xC3\xA4\xC3\x9F||||1\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Berliner Stra\xC3\x9Fe|3\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Carl-von-Ossietzky-Stra\xC3\x9Fe|1\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Dudenh\xC3\xB6fer Stra\xC3\x9Fe|5\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Eifelstra\xC3\x9Fe|4\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Eugen-Roth-Stra\xC3\x9Fe|1\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Friedlandstra\xC3\x9Fe|3\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Grenzstra\xC3\x9Fe|6\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Harzer Stra\xC3\x9Fe|4\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Heinrich-B\xC3\xB6ll-Stra\xC3\x9Fe|1\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Lange Stra\xC3\x9Fe|2\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Marburger Stra\xC3\x9Fe|12\x0A63110|J\xC3\xBCgesheim|Rodgau|J\xC3\xBCgesheim|Paul-Gerhardt-Stra\xC3\x9Fe|5\x0A63110|J\xC3\xBCgesheim||||47\x0A63599|Kassel|Biebergem\xC3\xBCnd|Kassel|Am Burgwerksrain|1\x0A63599|Kassel|Biebergem\xC3\xBCnd|Kassel|Bornweg|1\x0A63599|Kassel|Biebergem\xC3\xBCnd|Kassel|Marienstra\xC3\x9Fe|1\x0A63599|Kassel|Biebergem\xC3\xBCnd|Kassel|Nepomukweg|4\x0A63599|Kassel|Biebergem\xC3\xBCnd|Kassel|Spessartstra\xC3\x9Fe|1\x0A63599|Kassel|Biebergem\xC3\xBCnd|Kassel|Wirtheimer Stra\xC3\x9Fe|3\x0A63599|Kassel||||11\x0A63699|Kefenrod|Kefenrod|Kefenrod|Am Hirtengarten|4\x0A63699|Kefenrod|Kefenrod||An der Hohl|1\x0A63699|Kefenrod|Kefenrod||Bindsachsener Stra\xC3\x9Fe|1\x0A63699|Kefenrod|Kefenrod|Bindsachsen|Gartenstra\xC3\x9Fe|1\x0A63699|Kefenrod|Kefenrod|Kefenrod|Hitzkirchener Stra\xC3\x9Fe|7\x0A63699|Kefenrod|Kefenrod|Kefenrod|Jahnstra\xC3\x9Fe|2\x0A63699|Kefenrod|Kefenrod|Kefenrod|Roseneck|5\x0A63699|Kefenrod|Kefenrod|Kefenrod|Schulstra\xC3\x9Fe|1\x0A63699|Kefenrod|Kefenrod|Kefenrod|Tr\xC3\xA4nkweg|1\x0A63699|Kefenrod||||23\x0A63628|Kerbersdorf|Bad Soden-Salm\xC3\xBCnster|Kerbersdorf|Ziegelh\xC3\xBCttenstra\xC3\x9Fe|2\x0A63628|Kerbersdorf||||2\x0A63454|Kesselstadt|Hanau|Kesselstadt|K\xC3\xB6nigsberger Stra\xC3\x9Fe|12\x0A63454|Kesselstadt|Hanau|Kesselstadt|Schweriner Stra\xC3\x9Fe|17\x0A63454|Kesselstadt|Hanau|Kesselstadt|Stettiner Stra\xC3\x9Fe|2\x0A63454|Kesselstadt|Hanau|Kesselstadt|Kopernikusstra\xC3\x9Fe|20\x0A63454|Kesselstadt|Hanau|Kesselstadt|Potsdamer Stra\xC3\x9Fe|2\x0A63454|Kesselstadt|Hanau|Kesselstadt|Stettiner Stra\xC3\x9Fe|4\x0A63454|Kesselstadt|Hanau|Kesselstadt|Dresdener Stra\xC3\x9Fe|39\x0A63454|Kesselstadt|Hanau|Kesselstadt|Herderweg|1\x0A63454|Kesselstadt|Hanau|Kesselstadt|K\xC3\xB6nigsberger Stra\xC3\x9Fe|19\x0A63454|Kesselstadt|Hanau|Kesselstadt|Kurt-Schumacher-Platz|7\x0A63454|Kesselstadt|Hanau|Kesselstadt|Tilsiter Stra\xC3\x9Fe|3\x0A63454|Kesselstadt|Hanau|Hanau|Burgallee|13\x0A63454|Kesselstadt|Hanau|Kesselstadt|Dresdener Stra\xC3\x9Fe|16\x0A63454|Kesselstadt|Hanau|Kesselstadt|Gerhart-Hauptmann-Stra\xC3\x9Fe|2\x0A63454|Kesselstadt|Hanau|Kesselstadt|Selma-Lagerl\xC3\xB6f-Stra\xC3\x9Fe|3\x0A63454|Kesselstadt|Hanau|Kesselstadt|Fraunhoferstra\xC3\x9Fe|1\x0A63454|Kesselstadt|Hanau|Kesselstadt|Kantstra\xC3\x9Fe|6\x0A63454|Kesselstadt|Hanau|Kesselstadt|Kirchhoffstra\xC3\x9Fe|17\x0A63454|Kesselstadt|Hanau|Kesselstadt|Liebigstra\xC3\x9Fe|1\x0A63454|Kesselstadt|Hanau|Kesselstadt|Philipp-Reis-Stra\xC3\x9Fe|11\x0A63454|Kesselstadt|Hanau|Kesselstadt|Karlsbader Stra\xC3\x9Fe|44\x0A63454|Kesselstadt|Hanau|Kesselstadt|R\xC3\xB6ntgenstra\xC3\x9Fe|13\x0A63454|Kesselstadt|Hanau|Kesselstadt|Am Tiefen Weg|1\x0A63454|Kesselstadt|Hanau|Kesselstadt|Hopfenstra\xC3\x9Fe|1\x0A63454|Kesselstadt|Hanau|Kesselstadt|Kastanienallee|2\x0A63454|Kesselstadt|Hanau|Kesselstadt|Salisweg|3\x0A63454|Kesselstadt||||260\x0A63633|Kirchbracht|Birstein|Kirchbracht|Kreisstra\xC3\x9Fe|1\x0A63633|Kirchbracht||||1\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Alzenauer Stra\xC3\x9Fe|2\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Am Pachtanger|4\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Am Wiesengrund|1\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Bornpfad|1\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Burggartsweidig|5\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Eisenbahnstra\xC3\x9Fe|8\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Feldstra\xC3\x9Fe|5\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|In den Krautg\xC3\xA4rten|1\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Karl-Arnold-Stra\xC3\x9Fe|2\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Kolpingstra\xC3\x9Fe|1\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Obergasse|1\x0A63456|Klein-Auheim|Hanau|Klein-Auheim|Seligenst\xC3\xA4dter Stra\xC3\x9Fe|1\x0A63456|Klein-Auheim||||32\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Adolph-Kolping-Stra\xC3\x9Fe|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Anne-Frank-Weg|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Erzbergerstra\xC3\x9Fe|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Fahrstra\xC3\x9Fe|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Geschwister-Scholl-Stra\xC3\x9Fe|9\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Goethestra\xC3\x9Fe|2\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Gutenbergstra\xC3\x9Fe|2\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Hessenstra\xC3\x9Fe|6\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Jahnstra\xC3\x9Fe|2\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Kapellenweg|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Kappesweg|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Kirchstra\xC3\x9Fe|3\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Konrad-Adenauer-Stra\xC3\x9Fe|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Liebigstra\xC3\x9Fe|5\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Ludwig-Erhard-Stra\xC3\x9Fe|2\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Schlesienstra\xC3\x9Fe|1\x0A63512|Klein-Krotzenbrg|Hainburg|Klein-Krotzenburg|Spessartstra\xC3\x9Fe|7\x0A63512|Klein-Krotzenbrg||||46\x0A63452|Lamboy|Hanau|Hanau|August-Sch\xC3\xA4rttner-Stra\xC3\x9Fe|1\x0A63452|Lamboy|Hanau|Hanau|Breitscheidstra\xC3\x9Fe|3\x0A63452|Lamboy|Hanau|Hanau|Dartforder Stra\xC3\x9Fe|4\x0A63452|Lamboy|Hanau|Hanau|Dr.-Elisabeth-Schmitz-Stra\xC3\x9Fe|8\x0A63452|Lamboy|Hanau|Hanau|Eibenweg|2\x0A63452|Lamboy|Hanau|Hanau|Friedrich-Engels-Stra\xC3\x9Fe|14\x0A63452|Lamboy|Hanau|Hanau|Gabelsbergerstra\xC3\x9Fe|3\x0A63452|Lamboy|Hanau|Hanau|Karl-Marx-Stra\xC3\x9Fe|10\x0A63452|Lamboy|Hanau|Hanau|Kleib\xC3\xB6merstra\xC3\x9Fe|2\x0A63452|Lamboy|Hanau|Hanau|Lenbachstra\xC3\x9Fe|2\x0A63452|Lamboy|Hanau|Hanau|Paul-Ehrlich-Stra\xC3\x9Fe|5\x0A63452|Lamboy|Hanau|Hanau|Plantagenstra\xC3\x9Fe|5\x0A63452|Lamboy|Hanau|Hanau|Richard-K\xC3\xBCch-Stra\xC3\x9Fe|7\x0A63452|Lamboy|Hanau|Hanau|Theodor-Groppe-Stra\xC3\x9Fe|2\x0A63452|Lamboy|Hanau|Hanau|Am T\xC3\xBCmpelgarten|12\x0A63452|Lamboy|Hanau|Hanau|August-Sch\xC3\xA4rttner-Stra\xC3\x9Fe|14\x0A63452|Lamboy|Hanau|Hanau|Kiefernweg|5\x0A63452|Lamboy|Hanau|Hanau|L\xC3\xA4rchenweg|4\x0A63452|Lamboy|Hanau|Hanau|Neuhofstra\xC3\x9Fe|6\x0A63452|Lamboy||||109\x0A63165|L\xC3\xA4mmerspiel|M\xC3\xBChlheim am Main|L\xC3\xA4mmerspiel|Bischof-Ketteler-Stra\xC3\x9Fe|1\x0A63165|L\xC3\xA4mmerspiel|M\xC3\xBChlheim am Main|L\xC3\xA4mmerspiel|Brentanostra\xC3\x9Fe|2\x0A63165|L\xC3\xA4mmerspiel|M\xC3\xBChlheim am Main|L\xC3\xA4mmerspiel|Obertsh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63165|L\xC3\xA4mmerspiel|M\xC3\xBChlheim am Main|L\xC3\xA4mmerspiel|Schumacherstra\xC3\x9Fe|3\x0A63165|L\xC3\xA4mmerspiel|M\xC3\xBChlheim am Main|L\xC3\xA4mmerspiel|Waldstra\xC3\x9Fe|2\x0A63165|L\xC3\xA4mmerspiel||||9\x0A63546 Sum|Langen-Bergheim|Hammersbach|Langen-Bergheim|Wechmarer Ring|1\x0A63546 Sum|Langen-Bergheim||||1\x0A63526|Langendiebach|Erlensee|R\xC3\xBCckingen|Am G\xC3\xA4nseweiher|1\x0A63526|Langendiebach|Erlensee|Langendiebach|Am Rathaus|2\x0A63526|Langendiebach|Erlensee|Langendiebach|August-Bebel-Stra\xC3\x9Fe|1\x0A63526|Langendiebach|Erlensee|Langendiebach|Biggleswadestra\xC3\x9Fe|19\x0A63526|Langendiebach|Erlensee|R\xC3\xBCckingen|Dammstra\xC3\x9Fe|2\x0A63526|Langendiebach|Erlensee|Langendiebach|Fallbachstra\xC3\x9Fe|4\x0A63526|Langendiebach|Erlensee|Langendiebach|Langenselbolder Weg|2\x0A63526|Langendiebach|Erlensee|R\xC3\xBCckingen|Langstra\xC3\x9Fe|2\x0A63526|Langendiebach|Erlensee|Langendiebach|Reu\xC3\x9Ferhofstra\xC3\x9Fe|1\x0A63526|Langendiebach|Erlensee|Langendiebach|Rosenstra\xC3\x9Fe|1\x0A63526|Langendiebach|Erlensee|Langendiebach|R\xC3\xBCdigheimer Weg|2\x0A63526|Langendiebach|Erlensee|Langendiebach|Theodor-Heuss-Stra\xC3\x9Fe|1\x0A63526|Langendiebach|Erlensee|Langendiebach|Vogelsbergstra\xC3\x9Fe|1\x0A63526|Langendiebach|Erlensee|Langendiebach|Wusterwitzer Stra\xC3\x9Fe|18\x0A63526|Langendiebach||||57\x0A63505|Langenselbold|Langenselbold|Langenselbold|Am Br\xC3\xBChl|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Am H\xC3\xA4usergraben|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Bahnstra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Birkenstra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Clara-Schumann-Stra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Clemens-Brentano-Stra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Elise-Meitner-Stra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Emmy-Noether-Stra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Im Stockborn|3\x0A63505|Langenselbold|Langenselbold|Langenselbold|Johann-Strau\xC3\x9F-Allee|2\x0A63505|Langenselbold|Langenselbold|Langenselbold|Kreuze|2\x0A63505|Langenselbold|Langenselbold|Langenselbold|Marie-Curie-Stra\xC3\x9Fe|4\x0A63505|Langenselbold|Langenselbold|Langenselbold|Niedertalstra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Philipp-Reis-Ring|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Robert-Koch-Stra\xC3\x9Fe|5\x0A63505|Langenselbold|Langenselbold|Langenselbold|R\xC3\xB6delbergstra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Schlo\xC3\x9Fstra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Am Pappelried|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Auf der Sieb|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Friedrichstra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Gelnh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Im Ellenb\xC3\xBCgel|1\x0A63505|Langenselbold|Langenselbold|Langenselbold|Spessartstra\xC3\x9Fe|1\x0A63505|Langenselbold||||34\x0A63599|Lanzingen|Biebergem\xC3\xBCnd|Lanzingen|Am Gassenacker|1\x0A63599|Lanzingen|Biebergem\xC3\xBCnd|Lanzingen|Breitenborner Stra\xC3\x9Fe|1\x0A63599|Lanzingen|Biebergem\xC3\xBCnd|Lanzingen|Quellenstra\xC3\x9Fe|1\x0A63599|Lanzingen||||3\x0A63607|Leisenwald|W\xC3\xA4chtersbach|Leisenwald|Wolferborner Stra\xC3\x9Fe|2\x0A63607|Leisenwald||||2\x0A63637 Sum|Letgenbrun|Jossgrund|Lettgenbrunn|S\xC3\xBCdm\xC3\xA4hrer Weg|1\x0A63637 Sum|Letgenbrun||||1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Alte Hofstra\xC3\x9Fe|8\x0A63584|Lieblos|Gr\xC3\xBCndau||Alte Leipziger Stra\xC3\x9Fe|2\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Am Dreschplatz|7\x0A63584|Lieblos|Gr\xC3\xBCndau||An der Eisenbahn|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|August-Imhof-Stra\xC3\x9Fe|15\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Breitwiese|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|B\xC3\xBCdinger Stra\xC3\x9Fe|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Dammweg|3\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Faltergartenstra\xC3\x9Fe|2\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Fr\xC3\xB6belstra\xC3\x9Fe|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Mittel-Gr\xC3\xBCndau|Gartenstra\xC3\x9Fe|2\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Herzbergstra\xC3\x9Fe|2\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Im Euler|2\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Langer Rain|2\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Leipziger Stra\xC3\x9Fe|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Meerholzer Landweg|3\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Neugersdorfer Stra\xC3\x9Fe|3\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Nordstra\xC3\x9Fe|3\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Oberfeldstra\xC3\x9Fe|7\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Oberlausitzer Stra\xC3\x9Fe|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|R\xC3\xB6testra\xC3\x9Fe|4\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Sudetenstra\xC3\x9Fe|1\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Th\xC3\xBCringer Stra\xC3\x9Fe|7\x0A63584|Lieblos|Gr\xC3\xBCndau|Lieblos|Weinbergstra\xC3\x9Fe|1\x0A63584|Lieblos||||80\x0A63694|Limeshain|Hasselroth|Neuenha\xC3\x9Flau|Barbarossastra\xC3\x9Fe|1\x0A63694|Limeshain||||1\x0A63674|Lindheim|Altenstadt|Lindheim|Altenst\xC3\xA4dter Stra\xC3\x9Fe|1\x0A63674|Lindheim|Altenstadt|Lindheim|Heugasse|1\x0A63674|Lindheim|Altenstadt||Leimenkautenfeld|2\x0A63674|Lindheim|Altenstadt|Lindheim|Nikkisostra\xC3\x9Fe|1\x0A63674|Lindheim|Altenstadt|Lindheim|Siedlerstra\xC3\x9Fe|3\x0A63674|Lindheim||||8\x0A63639 Sum|Lohrhaupten|Fl\xC3\xB6rsbachtal|Lohrhaupten|Gartenstra\xC3\x9Fe|1\x0A63639 Sum|Lohrhaupten||||1\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|Am Flutgraben|1\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|Am Hellerberg|1\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|An den Drei B\xC3\xA4umen|1\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|Gartenweg|2\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|Hans-Merian-Ring|8\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|Hardecker Stra\xC3\x9Fe|2\x0A63654|Lorbach|B\xC3\xBCdingen|Lorbach|Herrnhuter Stra\xC3\x9Fe|4\x0A63654|Lorbach||||19\x0A63533|Mainflingen|Mainhausen|Mainflingen|Eichenstra\xC3\x9Fe|1\x0A63533|Mainflingen|Mainhausen|Mainflingen|Hauptstra\xC3\x9Fe|2\x0A63533|Mainflingen|Mainhausen|Mainflingen|Kantstra\xC3\x9Fe|1\x0A63533|Mainflingen|Mainhausen|Mainflingen|Kettelerstra\xC3\x9Fe|2\x0A63533|Mainflingen|Mainhausen|Mainflingen|Martinstra\xC3\x9Fe|1\x0A63533|Mainflingen||||7\x0A63546 Sum|Mark\xC3\xB6bel|Hammersbach|Mark\xC3\xB6bel|Burgstra\xC3\x9Fe|2\x0A63546 Sum|Mark\xC3\xB6bel|Hammersbach|Mark\xC3\xB6bel|Limesstra\xC3\x9Fe|1\x0A63546 Sum|Mark\xC3\xB6bel|Hammersbach|Mark\xC3\xB6bel|R\xC3\xB6merstra\xC3\x9Fe|1\x0A63546 Sum|Mark\xC3\xB6bel||||4\x0A63571|Meerholz|Gelnhausen|Meerholz|Am Pfarrgarten|1\x0A63571|Meerholz|Gelnhausen|Meerholz|Am Schlo\xC3\x9Fgarten|1\x0A63571|Meerholz|Gelnhausen|Meerholz|Am Viadukt|4\x0A63571|Meerholz|Gelnhausen|Meerholz|Amselweg|1\x0A63571|Meerholz|Gelnhausen|Meerholz|Europastra\xC3\x9Fe|1\x0A63571|Meerholz|Gelnhausen|Meerholz|Graf-Gustav-Weg|2\x0A63571|Meerholz|Gelnhausen|Meerholz|Gr\xC3\xA4fin-Thekla-Weg|3\x0A63571|Meerholz|Gelnhausen|Meerholz|Im B\xC3\xB6rner|1\x0A63571|Meerholz|Gelnhausen|Meerholz|K\xC3\xB6nigsberger Stra\xC3\x9Fe|1\x0A63571|Meerholz|Gelnhausen|Meerholz|Mittlauer Weg|2\x0A63571|Meerholz|Gelnhausen|Hailer|Sudetenstra\xC3\x9Fe|1\x0A63571|Meerholz|Gelnhausen|Meerholz|Wiesenbornstra\xC3\x9Fe|3\x0A63571|Meerholz||||21\x0A63654|Michelau|B\xC3\xBCdingen|Michelau|Moosbergstra\xC3\x9Fe|3\x0A63654|Michelau|B\xC3\xBCdingen|Michelau|Wiebelsteinweg|1\x0A63654|Michelau||||4\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Am Haubenflug|1\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Am L\xC3\xBCtzelberg|2\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|An der Gro\xC3\x9Fen Wiese|3\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Auf den R\xC3\xB6merkastellen|1\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Habichtswaldstra\xC3\x9Fe|1\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Nauheimer Stra\xC3\x9Fe|1\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Ro\xC3\x9Fdorfer Stra\xC3\x9Fe|1\x0A63454|Mittelbuchen|Hanau|Mittelbuchen|Wachenbuchener Stra\xC3\x9Fe|2\x0A63454|Mittelbuchen||||12\x0A63584|Mittelgr\xC3\xBCndau|Gr\xC3\xBCndau|Mittel-Gr\xC3\xBCndau|Ahl|1\x0A63584|Mittelgr\xC3\xBCndau|Gr\xC3\xBCndau|Mittel-Gr\xC3\xBCndau|Am Hirschsprung|1\x0A63584|Mittelgr\xC3\xBCndau|Gr\xC3\xBCndau|Mittel-Gr\xC3\xBCndau|Gr\xC3\xBCner Weg|1\x0A63584|Mittelgr\xC3\xBCndau|Gr\xC3\xBCndau|Mittel-Gr\xC3\xBCndau|Hain-Gr\xC3\xBCndauer Stra\xC3\x9Fe|1\x0A63584|Mittelgr\xC3\xBCndau|Gr\xC3\xBCndau|Mittel-Gr\xC3\xBCndau|Im Wagnersgrund|4\x0A63584|Mittelgr\xC3\xBCndau||||8\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Bahnhofstra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Dietesheimer Stra\xC3\x9Fe|4\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Holbeinstra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main||L\xC3\xA4mmerspieler Stra\xC3\x9Fe|2\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Ludwigstra\xC3\x9Fe|4\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Schillerstra\xC3\x9Fe|21\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Blumenstra\xC3\x9Fe|2\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Dresdener Stra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Friedensstra\xC3\x9Fe|7\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Hausener Weg|22\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|K\xC3\xA4the-Kollwitz-Stra\xC3\x9Fe|13\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main||L\xC3\xA4mmerspieler Stra\xC3\x9Fe|4\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|M\xC3\xBCllerweg|20\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Robert-Bosch-Weg|13\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Tiefenorter Ring|3\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Tilsiter Stra\xC3\x9Fe|2\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Tulpenweg|2\x0A63165|M\xC3\xBChlheim|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Ulmenstra\xC3\x9Fe|7\x0A63165|M\xC3\xBChlheim||||129\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Am Dreispitz|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Angergasse|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Aussiger Stra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Austra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Ebertstra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Grenzstra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Hindemithstra\xC3\x9Fe|2\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Hoffmannstra\xC3\x9Fe|4\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Marktstra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Offenbacher Stra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|Rote-Warte-Stra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.|M\xC3\xBChlheim am Main|M\xC3\xBChlheim am Main|R\xC3\xBCckertstra\xC3\x9Fe|1\x0A63165|M\xC3\xBChlheim a.M.||||16\x0A63607|Neudorf|W\xC3\xA4chtersbach|Neudorf|Am Rosengarten|1\x0A63607|Neudorf|W\xC3\xA4chtersbach|Neudorf|Aufenauer Stra\xC3\x9Fe|1\x0A63607|Neudorf|W\xC3\xA4chtersbach|Neudorf|Birkenstra\xC3\x9Fe|1\x0A63607|Neudorf||||3\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Bahnhofstra\xC3\x9Fe|1\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Erlenstra\xC3\x9Fe|2\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Im Rosengarten|1\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|In den St\xC3\xBCmpfen|1\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Kirchgasse|1\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Mainstra\xC3\x9Fe|2\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|M\xC3\xBChlbachstra\xC3\x9Fe|3\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Rheinstra\xC3\x9Fe|10\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Simmigstra\xC3\x9Fe|2\x0A63594|Neuenha\xC3\x9Flau|Hasselroth|Neuenha\xC3\x9Flau|Tannenstra\xC3\x9Fe|1\x0A63594|Neuenha\xC3\x9Flau||||24\x0A63636 Sum|Neuenschmidten, Brachttal, Germany|Brachttal|Schlierbach|Birsteiner Stra\xC3\x9Fe|2\x0A63636 Sum|Neuenschmidten, Brachttal, Germany||||2\x0A63579|Neuses|Freigericht|Neuses|Schulstra\xC3\x9Fe|1\x0A63579|Neuses|Freigericht|Somborn|Waldstra\xC3\x9Fe|2\x0A63579|Neuses||||3\x0A63549 Sum|Neuwiedermu\xC3\x9F|Ronneburg|Neuwiedermu\xC3\x9F|Am Eisick|2\x0A63549 Sum|Neuwiedermu\xC3\x9F|Ronneburg|Neuwiedermu\xC3\x9F|Odenwaldstra\xC3\x9Fe|1\x0A63549 Sum|Neuwiedermu\xC3\x9F||||3\x0A63599|Neuwirtheim|Biebergem\xC3\xBCnd|Neuwirtheim|Karlsbader Stra\xC3\x9Fe|2\x0A63599|Neuwirtheim|Biebergem\xC3\xBCnd|Neuwirtheim|Stettiner Stra\xC3\x9Fe|1\x0A63599|Neuwirtheim|Biebergem\xC3\xBCnd|Neuwirtheim|Tilsiter Stra\xC3\x9Fe|1\x0A63599|Neuwirtheim||||4\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|Altenburgring|1\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|An der Nachtweide|3\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|An der Ruhbank|1\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|Berliner Stra\xC3\x9Fe|2\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|Junkergasse|1\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|Oberdorfelder Stra\xC3\x9Fe|1\x0A61138 Sum|Niederdorfelden|Niederdorfelden|Niederdorfelden|Saint-Sever-Stra\xC3\x9Fe|3\x0A61138 Sum|Niederdorfelden||||12\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Birkenweg|3\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Im Krebsengarten|3\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Laussonner Stra\xC3\x9Fe|3\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Lerchenweg|1\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Mittel-Gr\xC3\xBCndauer Stra\xC3\x9Fe|3\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Schieferbergstra\xC3\x9Fe|1\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Schwalbenrain|1\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Untergasse|2\x0A63584|Niedergr\xC3\xBCndau|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Weingartenstra\xC3\x9Fe|2\x0A63584|Niedergr\xC3\xBCndau||||19\x0A63486|Niederissigheim|Bruchk\xC3\xB6bel|Niederissigheim|Heinrich-B\xC3\xB6ll-Stra\xC3\x9Fe|2\x0A63486|Niederissigheim|Bruchk\xC3\xB6bel|Niederissigheim|Heinrich-Hoffmann-Stra\xC3\x9Fe|1\x0A63486|Niederissigheim||||3\x0A63594|Niedermittlau|Hasselroth|Niedermittlau|Alte Dorfstra\xC3\x9Fe|1\x0A63594|Niedermittlau|Hasselroth|Niedermittlau|Hopfengartenstra\xC3\x9Fe|1\x0A63594|Niedermittlau|Hasselroth|Niedermittlau|J\xC3\xA4gerbuschstra\xC3\x9Fe|1\x0A63594|Niedermittlau|Hasselroth|Niedermittlau|Vogelsbergstra\xC3\x9Fe|1\x0A63594|Niedermittlau||||4\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Adolf-Reichwein-Stra\xC3\x9Fe|1\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Alzenauer Stra\xC3\x9Fe|2\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Feldbergstra\xC3\x9Fe|3\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Hainbornstra\xC3\x9Fe|1\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Heinrich-Heine-Stra\xC3\x9Fe|2\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|In der Gartel|3\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Landwehrstra\xC3\x9Fe|1\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|Nordring|1\x0A63517|Niederrodenbach|Rodenbach|Niederrodenbach|S\xC3\xBCdring|1\x0A63517|Niederrodenbach||||15\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Am Buchrain|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Am Jubil\xC3\xA4umsstein|3\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Am Kappenwald|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Am Karnweg|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Am Wiesengrund|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Berliner Stra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Breidertring|19\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Drosselstra\xC3\x9Fe|2\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Eisenbahnstra\xC3\x9Fe|2\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Erzbergerstra\xC3\x9Fe|2\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Frankfurter Stra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Geranienstra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Hanauer Stra\xC3\x9Fe|4\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Heinrich-von-Kleist-Stra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Hermann-L\xC3\xB6ns-Stra\xC3\x9Fe|2\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|H\xC3\xBCgelstra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|J\xC3\xA4gerstra\xC3\x9Fe|2\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Lindenweg|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Ludwig-Uhland-Stra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark||Nieder-R\xC3\xB6der-Stra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Odenwaldstra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Riemenschneiderstra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Talstra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Waldacker|Wingertstra\xC3\x9Fe|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany|R\xC3\xB6dermark|Ober-Roden|Zum Steckengarten|1\x0A63322|Ober-Roden, R\xC3\xB6dermark, Germany||||53\x0A63674|Oberau|Altenstadt|Oberau|Am Pfahlgraben|1\x0A63674|Oberau|Altenstadt|Oberau|Kochgasse|1\x0A63674|Oberau|Altenstadt|Oberau|Lange Stra\xC3\x9Fe|1\x0A63674|Oberau||||3\x0A63637 Sum|Oberndorf|Jossgrund|Oberndorf|Lohrer Stra\xC3\x9Fe|1\x0A63637 Sum|Oberndorf|Jossgrund|Oberndorf|Schulstra\xC3\x9Fe|1\x0A63637 Sum|Oberndorf||||2\x0A63517|Oberrodenbach|Rodenbach||Barbarossastra\xC3\x9Fe|1\x0A63517|Oberrodenbach|Rodenbach|Oberrodenbach|Hanauer Stra\xC3\x9Fe|1\x0A63517|Oberrodenbach|Rodenbach|Oberrodenbach|Talstra\xC3\x9Fe|1\x0A63517|Oberrodenbach||||3\x0A63633|Obersotzbach|Birstein|Obersotzbach|Hellwaldblick|1\x0A63633|Obersotzbach|Birstein|Obersotzbach|Waldschulstra\xC3\x9Fe|1\x0A63633|Obersotzbach||||2\x0A63179|Obertshausen|Obertshausen|Obertshausen|August-Bebel-Stra\xC3\x9Fe|1\x0A63179|Obertshausen|Obertshausen|Obertshausen|B\xC3\xB6hmerwaldstra\xC3\x9Fe|4\x0A63179|Obertshausen|Obertshausen|Obertshausen|Danziger Stra\xC3\x9Fe|22\x0A63179|Obertshausen|Obertshausen|Obertshausen|Geleitstra\xC3\x9Fe|2\x0A63179|Obertshausen|Obertshausen|Obertshausen|Georg-Kerschensteiner-Stra\xC3\x9Fe|5\x0A63179|Obertshausen|Obertshausen|Obertshausen|Grenzstra\xC3\x9Fe|1\x0A63179|Obertshausen|Obertshausen|Obertshausen|Laakirchener Stra\xC3\x9Fe|9\x0A63179|Obertshausen|Obertshausen|Obertshausen|Leipziger Stra\xC3\x9Fe|11\x0A63179|Obertshausen|Obertshausen|Obertshausen|Theodor-Heuss-Stra\xC3\x9Fe|1\x0A63179|Obertshausen|Obertshausen|Obertshausen|Beethovenstra\xC3\x9Fe|3\x0A63179|Obertshausen|Obertshausen|Obertshausen|Berliner Stra\xC3\x9Fe|2\x0A63179|Obertshausen|Obertshausen|Obertshausen|Bieberer Stra\xC3\x9Fe|12\x0A63179|Obertshausen|Obertshausen|Obertshausen|Eichenweg|1\x0A63179|Obertshausen|Obertshausen|Obertshausen|Erzbergerstra\xC3\x9Fe|1\x0A63179|Obertshausen|Obertshausen|Obertshausen|Heusenstammer Stra\xC3\x9Fe|1\x0A63179|Obertshausen|Obertshausen|Obertshausen|Stra\xC3\x9Fe im Loh|3\x0A63179|Obertshausen|Obertshausen|Obertshausen|Vogelsbergstra\xC3\x9Fe|7\x0A63179|Obertshausen|Obertshausen|Obertshausen|Von-Stauffenberg-Stra\xC3\x9Fe|2\x0A63179|Obertshausen|Obertshausen|Obertshausen|Waldstra\xC3\x9Fe|1\x0A63179|Obertshausen||||89\x0A63654|Orleshausen|B\xC3\xBCdingen|Orleshausen|Am Herrenh\xC3\xB6fchen|3\x0A63654|Orleshausen|B\xC3\xBCdingen|Orleshausen|B\xC3\xBCcheser Stra\xC3\x9Fe|2\x0A63654|Orleshausen|B\xC3\xBCdingen|Orleshausen|Hardeckring|9\x0A63654|Orleshausen|B\xC3\xBCdingen|Orleshausen|Hungebergweg|3\x0A63654|Orleshausen|B\xC3\xBCdingen|Orleshausen|Orlesh\xC3\xA4user Hauptstra\xC3\x9Fe|8\x0A63654|Orleshausen||||25\x0A61130|Ostheim|Nidderau|Ostheim|Alte Ziegelei|1\x0A61130|Ostheim|Nidderau|Ostheim|Am Jungfernborn|2\x0A61130|Ostheim|Nidderau|Ostheim|Am Weinberg|1\x0A61130|Ostheim|Nidderau|Ostheim|Am Ziegelweiher|3\x0A61130|Ostheim|Nidderau|Ostheim|Eisenbahnstra\xC3\x9Fe|1\x0A61130|Ostheim|Nidderau|Ostheim|Fasanenweg|1\x0A61130|Ostheim|Nidderau|Ostheim|In der M\xC3\xBChlweide|1\x0A61130|Ostheim|Nidderau|Ostheim|Limesstra\xC3\x9Fe|1\x0A61130|Ostheim||||11\x0A63543|Ravolzhausen|Neuberg|Ravolzhausen|Darmst\xC3\xA4dter Stra\xC3\x9Fe|1\x0A63543|Ravolzhausen|Neuberg|Ravolzhausen|Oberissigheimer Stra\xC3\x9Fe|1\x0A63543|Ravolzhausen||||2\x0A63150|Rembr\xC3\xBCcken, Heusenstamm, Germany|Heusenstamm|Rembr\xC3\xBCcken|Im Vogelseen|2\x0A63150|Rembr\xC3\xBCcken, Heusenstamm, Germany||||2\x0A63654|Rinderb\xC3\xBCgen|B\xC3\xBCdingen|Rinderb\xC3\xBCgen|Am Eckelgarten|1\x0A63654|Rinderb\xC3\xBCgen|B\xC3\xBCdingen|Rinderb\xC3\xBCgen|Am Hohenrain|8\x0A63654|Rinderb\xC3\xBCgen|B\xC3\xBCdingen|Rinderb\xC3\xBCgen|Auf der Wann|1\x0A63654|Rinderb\xC3\xBCgen|B\xC3\xBCdingen|Rinderb\xC3\xBCgen|Haingarten|1\x0A63654|Rinderb\xC3\xBCgen|B\xC3\xBCdingen|Rinderb\xC3\xBCgen|M\xC3\xBChlgasse|1\x0A63654|Rinderb\xC3\xBCgen|B\xC3\xBCdingen|Rinderb\xC3\xBCgen|Parkstra\xC3\x9Fe|2\x0A63654|Rinderb\xC3\xBCgen||||14\x0A63674|Rodenbach|Altenstadt|Rodenbach|Ortenberger Stra\xC3\x9Fe|1\x0A63674|Rodenbach|Altenstadt|Rodenbach|Rh\xC3\xB6nstra\xC3\x9Fe|1\x0A63674|Rodenbach|Altenstadt|Rodenbach|Unterstra\xC3\x9Fe|8\x0A63674|Rodenbach||||10\x0A63322|R\xC3\xB6dermark-Messenhausen|R\xC3\xB6dermark||Urberacher Stra\xC3\x9Fe|1\x0A63322|R\xC3\xB6dermark-Messenhausen||||1\x0A63322|R\xC3\xB6dermark-Urberach|R\xC3\xB6dermark|Urberach|Bruchwiesenstra\xC3\x9Fe|3\x0A63322|R\xC3\xB6dermark-Urberach|R\xC3\xB6dermark|Urberach|Naheweg|1\x0A63322|R\xC3\xB6dermark-Urberach|R\xC3\xB6dermark|Urberach|Nikolaus-Schwarzkopf-Stra\xC3\x9Fe|9\x0A63322|R\xC3\xB6dermark-Urberach|R\xC3\xB6dermark|Urberach|Rodaustra\xC3\x9Fe|1\x0A63322|R\xC3\xB6dermark-Urberach|R\xC3\xB6dermark|Urberach|Schillerstra\xC3\x9Fe|8\x0A63322|R\xC3\xB6dermark-Urberach||||22\x0A63628|Romsthal|Bad Soden-Salm\xC3\xBCnster|Romsthal|Lange Wiese|5\x0A63628|Romsthal|Bad Soden-Salm\xC3\xBCnster|Romsthal|Luzerneweg|1\x0A63628|Romsthal|Bad Soden-Salm\xC3\xBCnster|Romsthal|Wahlerter Stra\xC3\x9Fe|1\x0A63628|Romsthal||||7\x0A63452|Rosenau|Hanau|Hanau|Ameliastra\xC3\x9Fe|1\x0A63452|Rosenau|Hanau|Hanau|Beethovenplatz|1\x0A63452|Rosenau|Hanau|Hanau|Brahmsweg|1\x0A63452|Rosenau|Hanau|Hanau|Brucknerstra\xC3\x9Fe|2\x0A63452|Rosenau|Hanau|Hanau|Gustav-Adolf-Stra\xC3\x9Fe|1\x0A63452|Rosenau|Hanau|Hanau|Kattenstra\xC3\x9Fe|1\x0A63452|Rosenau|Hanau|Gro\xC3\x9Fauheim|Carl-Kronenberger-Stra\xC3\x9Fe|1\x0A63452|Rosenau|Hanau|Hanau|Salisweg|1\x0A63452|Rosenau||||9\x0A63599|Ro\xC3\x9Fbach|Biebergem\xC3\xBCnd|Ro\xC3\x9Fbach|Brunnenstra\xC3\x9Fe|1\x0A63599|Ro\xC3\x9Fbach|Biebergem\xC3\xBCnd|Ro\xC3\x9Fbach|Zur Kaisereiche|1\x0A63599|Ro\xC3\x9Fbach||||2\x0A63486|Ro\xC3\x9Fdorf|Bruchk\xC3\xB6bel|Ro\xC3\x9Fdorf|Eichendorffanlage|4\x0A63486|Ro\xC3\x9Fdorf|Bruchk\xC3\xB6bel|Ro\xC3\x9Fdorf|Hanauer Stra\xC3\x9Fe|1\x0A63486|Ro\xC3\x9Fdorf|Bruchk\xC3\xB6bel|Ro\xC3\x9Fdorf|Thomas-Mann-Stra\xC3\x9Fe|1\x0A63486|Ro\xC3\x9Fdorf||||6\x0A63571|Roth|Gelnhausen|Roth|Altdorfstra\xC3\x9Fe|3\x0A63571|Roth|Gelnhausen|Roth|Am R\xC3\xB6ther H\xC3\xA4uschen|1\x0A63571|Roth|Gelnhausen|Roth|Gartenstra\xC3\x9Fe|2\x0A63571|Roth|Gelnhausen|Hailer|Gelnh\xC3\xA4user Stra\xC3\x9Fe|3\x0A63571|Roth|Gelnhausen|Roth|Herzbergstra\xC3\x9Fe|1\x0A63571|Roth|Gelnhausen|Roth|Hochstra\xC3\x9Fe|4\x0A63571|Roth|Gelnhausen|Roth|Im Goldberg|4\x0A63571|Roth|Gelnhausen|Roth|Junkenhofstra\xC3\x9Fe|3\x0A63571|Roth|Gelnhausen||Kinzigtalblick|1\x0A63571|Roth|Gelnhausen|Roth|Nordstra\xC3\x9Fe|2\x0A63571|Roth|Gelnhausen|Roth|Quellenstra\xC3\x9Fe|2\x0A63571|Roth|Gelnhausen|Roth|Rathausstra\xC3\x9Fe|2\x0A63571|Roth|Gelnhausen|Roth|R\xC3\xB6ther Wingertstra\xC3\x9Fe|1\x0A63571|Roth|Gelnhausen|Roth|Unterstra\xC3\x9Fe|1\x0A63571|Roth||||30\x0A63584|Rothenbergen|Gr\xC3\xBCndau||Alte Leipziger Stra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Heiligenstock|3\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Niedergr\xC3\xBCndau|Am Sportplatz|4\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|An der Nachtweide|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Auf der Messbach|7\x0A63584|Rothenbergen|Gr\xC3\xBCndau||Bahnhofstra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Berliner Stra\xC3\x9Fe|2\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Bogenstra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Br\xC3\xBCder-Grimm-Stra\xC3\x9Fe|2\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Brunnenstra\xC3\x9Fe|2\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Eichendorffstra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Feldstra\xC3\x9Fe|6\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Frankfurter Stra\xC3\x9Fe|3\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Fuldaer Stra\xC3\x9Fe|6\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|F\xC3\xBCnfkirchner Stra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Georg-B\xC3\xBCchner-Stra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Goethestra\xC3\x9Fe|3\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Hofackerheeg|12\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Im Kleinen Feldchen|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|In der Hochstadt|5\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Jahnstra\xC3\x9Fe|3\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|John-Wesley-Stra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Karlsbader Stra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Niedergr\xC3\xBCndauer Stra\xC3\x9Fe|3\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Philipp-Reis-Stra\xC3\x9Fe|5\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Rohrstra\xC3\x9Fe|2\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Wibaustra\xC3\x9Fe|2\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Wiesenstra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Wingertstra\xC3\x9Fe|1\x0A63584|Rothenbergen|Gr\xC3\xBCndau|Rothenbergen|Zingelweg|1\x0A63584|Rothenbergen||||83\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|An der Sandwiese|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|An der W\xC3\xBCstung|4\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Beethovenstra\xC3\x9Fe|10\x0A63526|R\xC3\xBCckingen|Erlensee||Br\xC3\xBCckenstra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Georg-B\xC3\xBCchner-Stra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Hainstra\xC3\x9Fe|2\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Hattergasse|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Kastellstra\xC3\x9Fe|7\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Leipziger Stra\xC3\x9Fe|13\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Lindenstra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Marienstra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Markwaldsiedlung|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Mozartstra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Rh\xC3\xB6nstra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Taunusstra\xC3\x9Fe|7\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Waldstra\xC3\x9Fe|2\x0A63526|R\xC3\xBCckingen|Erlensee|R\xC3\xBCckingen|Wilhelmstra\xC3\x9Fe|1\x0A63526|R\xC3\xBCckingen||||55\x0A63543|R\xC3\xBCdigheim|Neuberg|R\xC3\xBCdigheim|Am M\xC3\xB6llerborn|1\x0A63543|R\xC3\xBCdigheim|Neuberg|R\xC3\xBCdigheim|Hainstra\xC3\x9Fe|1\x0A63543|R\xC3\xBCdigheim|Neuberg|R\xC3\xBCdigheim|Hintergasse|1\x0A63543|R\xC3\xBCdigheim|Neuberg|R\xC3\xBCdigheim|M\xC3\xBChlstra\xC3\x9Fe|1\x0A63543|R\xC3\xBCdigheim||||4\x0A63636 Sum|Schlierbach|Brachttal||Brachtstra\xC3\x9Fe|1\x0A63636 Sum|Schlierbach|Brachttal|Schlierbach|Hegstra\xC3\x9Fe|1\x0A63636 Sum|Schlierbach|Brachttal|Schlierbach|Hippegasse|2\x0A63636 Sum|Schlierbach|Brachttal|Schlierbach|In der Aue|2\x0A63636 Sum|Schlierbach|Brachttal|Schlierbach|Neue Stra\xC3\x9Fe|2\x0A63636 Sum|Schlierbach|Brachttal|Schlierbach|Weihergasse|1\x0A63636 Sum|Schlierbach||||9\x0A61137|Sch\xC3\xB6neck-B\xC3\xBCdesheim|Sch\xC3\xB6neck|B\xC3\xBCdesheim|Am Na\xC3\x9Fling|1\x0A61137|Sch\xC3\xB6neck-B\xC3\xBCdesheim|Sch\xC3\xB6neck|B\xC3\xBCdesheim|Eulenring|1\x0A61137|Sch\xC3\xB6neck-B\xC3\xBCdesheim|Sch\xC3\xB6neck|B\xC3\xBCdesheim|Fasanenstra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-B\xC3\xBCdesheim|Sch\xC3\xB6neck|B\xC3\xBCdesheim|Froschbachstra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-B\xC3\xBCdesheim|Sch\xC3\xB6neck|B\xC3\xBCdesheim|Ringstra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-B\xC3\xBCdesheim||||5\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Am Neuberg|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Anne-Frank-Stra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck||Bleichstra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Johann-Sebastian-Bach-Stra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Sonnensteig|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Talstra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Untergasse|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Wachenbucher Stra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten|Sch\xC3\xB6neck|Kilianst\xC3\xA4dten|Waldstra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Kilianst\xC3\xA4dten||||9\x0A61137|Sch\xC3\xB6neck-Oberdorffelden|Sch\xC3\xB6neck|Oberdorfelden|Hessenstra\xC3\x9Fe|2\x0A61137|Sch\xC3\xB6neck-Oberdorffelden|Sch\xC3\xB6neck|Oberdorfelden|Lerchenweg|1\x0A61137|Sch\xC3\xB6neck-Oberdorffelden|Sch\xC3\xB6neck|Oberdorfelden|Nidderauer Stra\xC3\x9Fe|1\x0A61137|Sch\xC3\xB6neck-Oberdorffelden|Sch\xC3\xB6neck|Oberdorfelden|Odenwaldstra\xC3\x9Fe|2\x0A61137|Sch\xC3\xB6neck-Oberdorffelden||||6\x0A63500|Seligenstadt|Seligenstadt|Seligenstadt|Berliner Stra\xC3\x9Fe|17\x0A63500|Seligenstadt|Seligenstadt|Seligenstadt|Babenh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63500|Seligenstadt|Seligenstadt|Seligenstadt|Giselastra\xC3\x9Fe|1\x0A63500|Seligenstadt|Seligenstadt|Seligenstadt|Hauptstra\xC3\x9Fe|1\x0A63500|Seligenstadt|Seligenstadt|Seligenstadt|Querstra\xC3\x9Fe|3\x0A63500|Seligenstadt|Seligenstadt|Seligenstadt|Wolfstra\xC3\x9Fe|1\x0A63500|Seligenstadt||||24\x0A63579|Somborn|Freigericht|Somborn|Am Sportfeld|5\x0A63579|Somborn|Freigericht|Somborn|Aue|2\x0A63579|Somborn|Freigericht||Auf dem Weidenstrauch|1\x0A63579|Somborn|Freigericht|Somborn|Dangelweg|2\x0A63579|Somborn|Freigericht||Im Schwalbengrund|1\x0A63579|Somborn|Freigericht|Somborn|Karlstra\xC3\x9Fe|1\x0A63579|Somborn|Freigericht|Somborn|Nelkenweg|1\x0A63579|Somborn|Freigericht|Somborn|Raiffeisenstra\xC3\x9Fe|1\x0A63579|Somborn|Freigericht|Somborn|Rosenstra\xC3\x9Fe|2\x0A63579|Somborn|Freigericht|Somborn|Theodor-Heuss-Stra\xC3\x9Fe|1\x0A63579|Somborn|Freigericht|Somborn|Tulpenweg|2\x0A63579|Somborn|Freigericht|Somborn|Vogelsbergblick|1\x0A63579|Somborn||||20\x0A63636 Sum|Spielberg|Brachttal|Spielberg|Hainbuchenweg|1\x0A63636 Sum|Spielberg|Brachttal|Spielberg|Herrnschwender Stra\xC3\x9Fe|1\x0A63636 Sum|Spielberg|Brachttal||Kreutstra\xC3\x9Fe|1\x0A63636 Sum|Spielberg||||3\x0A63456|Steinheim|Hanau|Steinheim|Auf den Sickenrain|1\x0A63456|Steinheim|Hanau|Steinheim|Brandenburgstra\xC3\x9Fe|1\x0A63456|Steinheim|Hanau|Steinheim|Doorner Stra\xC3\x9Fe|1\x0A63456|Steinheim|Hanau|Steinheim|Hermann-Ehlers-Stra\xC3\x9Fe|5\x0A63456|Steinheim|Hanau|Steinheim|Johannes-Eppert-Weg|1\x0A63456|Steinheim|Hanau|Steinheim|Johannes-Machern-Stra\xC3\x9Fe|4\x0A63456|Steinheim|Hanau|Steinheim|Karl-Kirstein-Stra\xC3\x9Fe|9\x0A63456|Steinheim|Hanau|Steinheim|Karlstra\xC3\x9Fe|2\x0A63456|Steinheim|Hanau|Steinheim|Pfaffenbrunnenstra\xC3\x9Fe|2\x0A63456|Steinheim|Hanau|Steinheim|Albrecht-D\xC3\xBCrer-Stra\xC3\x9Fe|1\x0A63456|Steinheim|Hanau|Steinheim|Dietzenseestra\xC3\x9Fe|3\x0A63456|Steinheim|Hanau|Steinheim|Eppsteinstra\xC3\x9Fe|4\x0A63456|Steinheim|Hanau|Steinheim|Idastra\xC3\x9Fe|3\x0A63456|Steinheim|Hanau|Steinheim|Illweg|1\x0A63456|Steinheim|Hanau|Steinheim|Kreuzweg|3\x0A63456|Steinheim|Hanau||Offenbacher Landstra\xC3\x9Fe|2\x0A63456|Steinheim|Hanau|Steinheim|Otto-Hahn-Stra\xC3\x9Fe|1\x0A63456|Steinheim|Hanau|Steinheim|Wilhelm-Paul-Stra\xC3\x9Fe|1\x0A63456|Steinheim||||45\x0A63695|Stockheim, Glauburg, Deutschland|Glauburg|Stockheim|Am W\xC3\xA4ldchen|1\x0A63695|Stockheim, Glauburg, Deutschland|Glauburg|Stockheim|Bahnhofstra\xC3\x9Fe|1\x0A63695|Stockheim, Glauburg, Deutschland|Glauburg|Stockheim|Berliner Stra\xC3\x9Fe|1\x0A63695|Stockheim, Glauburg, Deutschland|Glauburg|Stockheim|Ringstra\xC3\x9Fe|1\x0A63695|Stockheim, Glauburg, Deutschland|Glauburg|Stockheim|Unter der Struth|1\x0A63695|Stockheim, Glauburg, Deutschland|Glauburg|Stockheim|Weinbergstra\xC3\x9Fe|1\x0A63695|Stockheim, Glauburg, Deutschland||||6\x0A63636 Sum|Udenhain|Brachttal|Udenhain|Schauerwaldweg|1\x0A63636 Sum|Udenhain|Brachttal|Udenhain|Schulstra\xC3\x9Fe|3\x0A63636 Sum|Udenhain||||4\x0A63633|Unterreichenbach|Birstein|Unterreichenbach|Am Kirchacker|1\x0A63633|Unterreichenbach|Birstein|Unterreichenbach|Am Nollfeld|1\x0A63633|Unterreichenbach||||2\x0A63654|Vonhausen|B\xC3\xBCdingen|Vonhausen|Am Herrngarten|1\x0A63654|Vonhausen|B\xC3\xBCdingen|Vonhausen|An den Kernb\xC3\xA4umen|2\x0A63654|Vonhausen|B\xC3\xBCdingen|Vonhausen|Blumenstra\xC3\x9Fe|1\x0A63654|Vonhausen|B\xC3\xBCdingen|Vonhausen|Im M\xC3\xBCnchhohlring|2\x0A63654|Vonhausen||||6\x0A63477|Wachenbuchen|Maintal|Wachenbuchen|Bleichstra\xC3\x9Fe|1\x0A63477|Wachenbuchen|Maintal|Wachenbuchen|Saalburgstra\xC3\x9Fe|1\x0A63477|Wachenbuchen|Maintal|Wachenbuchen|Taufsteinstra\xC3\x9Fe|1\x0A63477|Wachenbuchen||||3\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Am Roten Berg|2\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|An der Etzweide|5\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Breitenborner Stra\xC3\x9Fe|5\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Chatilloner Stra\xC3\x9Fe|7\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Gelnh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Haitzer Stra\xC3\x9Fe|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Ro\xC3\x9Flebener Stra\xC3\x9Fe|7\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Wirtheimer Stra\xC3\x9Fe|2\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Auweg|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Bahnhofstra\xC3\x9Fe|21\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Bleichgartenstra\xC3\x9Fe|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Br\xC3\xBCckenstra\xC3\x9Fe|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Heegstra\xC3\x9Fe|7\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Mittelweg|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Poststra\xC3\x9Fe|14\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Ysenburger Stra\xC3\x9Fe|3\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Adtring|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Alsfelder Stra\xC3\x9Fe|6\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Birsteiner Stra\xC3\x9Fe|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Wittgenborn|Baumgartenweg|1\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Hainhofweg|2\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Hesseldorfer Stra\xC3\x9Fe|7\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Im Ziegelgarten|5\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|In den R\xC3\xB6dern|4\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Lauterbacher Stra\xC3\x9Fe|14\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Schlierbacher Stra\xC3\x9Fe|3\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Spessartstra\xC3\x9Fe|3\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Vogelsbergstra\xC3\x9Fe|4\x0A63607|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|W\xC3\xA4chtersbach|Im Ziegelgarten|1\x0A63607|W\xC3\xA4chtersbach||||131\x0A63607|Waldensberg|Hanau|Gro\xC3\x9Fauheim|Von-Brentano-Stra\xC3\x9Fe|3\x0A63607|Waldensberg|W\xC3\xA4chtersbach|Waldensberg|Arnaudstra\xC3\x9Fe|1\x0A63607|Waldensberg|W\xC3\xA4chtersbach|Waldensberg|B\xC3\xBCdinger Weg|1\x0A63607|Waldensberg||||5\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Bruchwiesenweg|2\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Ernst-Reuter-Stra\xC3\x9Fe|1\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|F\xC3\xBCrstenbergstra\xC3\x9Fe|1\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Gr\xC3\xBCnaustra\xC3\x9Fe|1\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Hermelinweg|2\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|In den Heimerswiesen|1\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|John-F.-Kennedy-Stra\xC3\x9Fe|20\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Ollenhauerstra\xC3\x9Fe|6\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Ratiborstra\xC3\x9Fe|1\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Theodor-Heuss-Stra\xC3\x9Fe|3\x0A63674|Waldsiedlung|Hanau|Gro\xC3\x9Fauheim|Vosswaldestra\xC3\x9Fe|2\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Am Eichwald|1\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Amselweg|1\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Bornflo\xC3\x9Fstra\xC3\x9Fe|5\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Eichbaumstra\xC3\x9Fe|3\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Fasanenweg|3\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Hainstra\xC3\x9Fe|2\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Herrnstra\xC3\x9Fe|17\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Philipp-Reis-Stra\xC3\x9Fe|7\x0A63674|Waldsiedlung|Altenstadt|Waldsiedlung|Waldstra\xC3\x9Fe|2\x0A63674|Waldsiedlung||||81\x0A63607|Weilers|W\xC3\xA4chtersbach|Weilers|Im Alten Weg|2\x0A63607|Weilers||||2\x0A63110|Weiskirchen|Rodgau|Weiskirchen|Schlesienstra\xC3\x9Fe|1\x0A63110|Weiskirchen||||1\x0A63633|Wettges|Birstein|Wettges|Triebstra\xC3\x9Fe|1\x0A63633|Wettges||||1\x0A61130|Windecken|Nidderau|Windecken|Lindenstra\xC3\x9Fe|1\x0A61130|Windecken|Nidderau|Windecken|Ostheimer Stra\xC3\x9Fe|1\x0A61130|Windecken||||2\x0A63599|Wirtheim|Biebergem\xC3\xBCnd|Wirtheim|Frankfurter Stra\xC3\x9Fe|3\x0A63599|Wirtheim|Biebergem\xC3\xBCnd|Wirtheim|Gro\xC3\x9Fer Garten|1\x0A63599|Wirtheim|Biebergem\xC3\xBCnd|Wirtheim|Marktplatz|1\x0A63599|Wirtheim|Biebergem\xC3\xBCnd|Wirtheim|Pfingstborn|1\x0A63599|Wirtheim|Biebergem\xC3\xBCnd|Wirtheim|Schinnsgraben|2\x0A63599|Wirtheim|Biebergem\xC3\xBCnd|Wirtheim|Taubenfang|1\x0A63599|Wirtheim||||9\x0A63607|Wittgenborn|W\xC3\xA4chtersbach|Wittgenborn|Langgasse|2\x0A63607|Wittgenborn|W\xC3\xA4chtersbach|Wittgenborn|Siedlungsstra\xC3\x9Fe|1\x0A63607|Wittgenborn|W\xC3\xA4chtersbach||Sophie-Knoth-Stra\xC3\x9Fe|4\x0A63607|Wittgenborn|W\xC3\xA4chtersbach|Wittgenborn|Waldensberger Stra\xC3\x9Fe|3\x0A63607|Wittgenborn||||10\x0A63654|Wolferborn|B\xC3\xBCdingen|Wolferborn|Am Alten Graben|3\x0A63654|Wolferborn|B\xC3\xBCdingen|Wolferborn|An den \xC3\x84ckerwiesen|1\x0A63654|Wolferborn|B\xC3\xBCdingen|Wolferborn|Wehrtbornstra\xC3\x9Fe|2\x0A63654|Wolferborn||||6\x0A63457|Wolfgang|Hanau|Wolfgang|August-Bebel-Stra\xC3\x9Fe|1\x0A63457|Wolfgang|Hanau||Blaumeisenweg|2\x0A63457|Wolfgang|Hanau|Wolfgang|Friedrich-Fr\xC3\xB6bel-Stra\xC3\x9Fe|2\x0A63457|Wolfgang|Hanau||Gr\xC3\xBCnspechtweg|1\x0A63457|Wolfgang|Hanau||Heidelerchenweg|1\x0A63457|Wolfgang|Hanau|Wolfgang|Lehrh\xC3\xB6fer Stra\xC3\x9Fe|1\x0A63457|Wolfgang|Hanau||Sandbienenweg|3\x0A63457|Wolfgang|Hanau|Wolfgang|Schanzenstra\xC3\x9Fe|1\x0A63457|Wolfgang|Hanau|Wolfgang|Vor der Pulverm\xC3\xBChle|1\x0A63457|Wolfgang|Hanau||Zitronenfalterweg|2\x0A63457|Wolfgang||||15\x0A63533|Zellhausen|Mainhausen|Zellhausen|Am Gellmannsr\xC3\xB6dchen|1\x0A63533|Zellhausen|Mainhausen||Am Zellerbruch|1\x0A63533|Zellhausen|Mainhausen|Zellhausen|Babenh\xC3\xA4user Stra\xC3\x9Fe|3\x0A63533|Zellhausen|Mainhausen|Zellhausen|Bahnhofstra\xC3\x9Fe|1\x0A63533|Zellhausen|Mainhausen|Zellhausen|Harresh\xC3\xA4user Stra\xC3\x9Fe|1\x0A63533|Zellhausen|Mainhausen|Zellhausen|Obergasse|1\x0A63533|Zellhausen|Mainhausen|Zellhausen|Wingertspfad|1\x0A63533|Zellhausen||||9"), ConstSet2, -1);
    var headerSeq_16300630 = nsuSplitString(streets_16300629[chckIndx(0, 0, (streets_16300629).length-1)], makeNimstrLit("|"), -1);
    var headerTbl_16310614 = [initTable_16300633(32)];
    L1: do {
      var i_16310624 = 0;
      var h_16310625 = [];
      var i_16480789 = 0;
      var L_16480790 = (headerSeq_16300630).length;
      L2: do {
          L3: while (true) {
          if (!(i_16480789 < L_16480790)) break L3;
            i_16310624 = i_16480789;
            h_16310625 = headerSeq_16300630[chckIndx(i_16480789, 0, (headerSeq_16300630).length-1)];
            HEX5BHEX5DHEX3D_16310743(headerTbl_16310614[0], h_16310625, chckRange(i_16310624, 0, 2147483647));
            i_16480789 = addInt(i_16480789, 1);
            if (!(((headerSeq_16300630).length == L_16480790))) {
            failedAssertImpl_1305480(makeNimstrLit("iterators.nim(137, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    L4: do {
      var i_16380694 = 0;
      var colontmp__16480796 = 0;
      colontmp__16480796 = (streets_16300629).length - 1;
      var res_16480797 = 1;
      L5: do {
          L6: while (true) {
          if (!(res_16480797 <= colontmp__16480796)) break L6;
            i_16380694 = res_16480797;
            L7: do {
              var rowSeq_16380695 = nsuSplitString(streets_16300629[chckIndx(i_16380694, 0, (streets_16300629).length-1)], makeNimstrLit("|"), -1);
              var strN_16380696 = [];
              var city_16380697 = [];
              var dstr_16380698 = [];
              var plz_16380699 = [];
              var totalFam_16380700 = [];
              var strN_16380696 = nimCopy(null, rowSeq_16380695[chckIndx((Tmp8 = HEX5BHEX5D_16385153(headerTbl_16310614[0], makeNimstrLit("Street")), Tmp8)[0][Tmp8[1]], 0, (rowSeq_16380695).length-1)], NTI1188013);
              if (eqStrings(strN_16380696, [])) {
              break L7;
              }
              
              var city_16380697 = nimCopy(null, rowSeq_16380695[chckIndx((Tmp9 = HEX5BHEX5D_16385153(headerTbl_16310614[0], makeNimstrLit("City")), Tmp9)[0][Tmp9[1]], 0, (rowSeq_16380695).length-1)], NTI1188013);
              var dstr_16380698 = nimCopy(null, rowSeq_16380695[chckIndx((Tmp10 = HEX5BHEX5D_16385153(headerTbl_16310614[0], makeNimstrLit("District")), Tmp10)[0][Tmp10[1]], 0, (rowSeq_16380695).length-1)], NTI1188013);
              if (eqStrings(dstr_16380698, city_16380697)) {
              Tmp11 = [];
              }
              else {
              Tmp11 = dstr_16380698;
              }
              
              var district_16400168 = nimCopy(null, Tmp11, NTI1188013);
              var plz_16380699 = nimCopy(null, rowSeq_16380695[chckIndx((Tmp12 = HEX5BHEX5D_16385153(headerTbl_16310614[0], makeNimstrLit("Plz")), Tmp12)[0][Tmp12[1]], 0, (rowSeq_16380695).length-1)], NTI1188013);
              var sector_16405166 = {postalCode: nimCopy(null, plz_16380699, NTI1188013), city: nimCopy(null, city_16380697, NTI1188013), district: nimCopy(null, district_16400168, NTI1188013), folkDistrict: [], pFix: 0, streets: ({data: [], counter: 0, first: 0, last: 0}), shownOnMap: false, exclude: false};
              var street_16405167 = {name: nimCopy(null, strN_16380696, NTI1188013), sector: sector_16405166, links: [], totalFamilies: 0};
              var totalFam_16380700 = nimCopy(null, rowSeq_16380695[chckIndx((Tmp13 = HEX5BHEX5D_16385153(headerTbl_16310614[0], makeNimstrLit("TotalFamilies")), Tmp13)[0][Tmp13[1]], 0, (rowSeq_16380695).length-1)], NTI1188013);
              HEX5BHEX5DHEX3D_16410283(result_16290861[0], hash_16211255(street_16405167), chckRange(parseInt(toJSStr(totalFam_16380700), 10), 0, 2147483647));
            } while(false);
            res_16480797 = addInt(res_16480797, 1);
          }
      } while(false);
    } while(false);

  return result_16290861[0];

}
var tblTotalFam_16480773 = [initTblTotFamByStreet_16290837()];
function nsuFindChar(s_10120216, sub_10120217, start_10120218, last_10120219) {
    var Tmp1;

  var result_10120221 = 0;

  BeforeRet: do {
    if ((last_10120219 == 0)) {
    Tmp1 = (s_10120216).length - 1;
    }
    else {
    Tmp1 = last_10120219;
    }
    
    var last_10120223 = Tmp1;
    L2: do {
      var i_10120606 = 0;
      var colontmp__17385338 = 0;
      colontmp__17385338 = start_10120218;
      var res_17385339 = colontmp__17385338;
      L3: do {
          L4: while (true) {
          if (!(res_17385339 <= last_10120223)) break L4;
            i_10120606 = res_17385339;
            if ((sub_10120217 == s_10120216[chckIndx(i_10120606, 0, (s_10120216).length-1)])) {
            result_10120221 = i_10120606;
            break BeforeRet;
            }
            
            res_17385339 = addInt(res_17385339, 1);
          }
      } while(false);
    } while(false);
    result_10120221 = -1;
    break BeforeRet;
  } while (false);

  return result_10120221;

}
function substr_1571053(s_1571055, first_1571056) {
  var result_1571058 = [];

    result_1571058 = nimCopy(null, substr_1571022(s_1571055, first_1571056, (s_1571055).length - 1), NTI1188013);

  return result_1571058;

}
function nsuInitSkipTable(a_10115081, sub_10115082) {
    var m_10115083 = (sub_10115082).length;
    var i_10115085 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_10115085 <= 248)) break L2;
          a_10115081[chckIndx(chckRange(addInt(i_10115085, 0), 0, 255), 0, (a_10115081).length-1)] = m_10115083;
          a_10115081[chckIndx(chckRange(addInt(i_10115085, 1), 0, 255), 0, (a_10115081).length-1)] = m_10115083;
          a_10115081[chckIndx(chckRange(addInt(i_10115085, 2), 0, 255), 0, (a_10115081).length-1)] = m_10115083;
          a_10115081[chckIndx(chckRange(addInt(i_10115085, 3), 0, 255), 0, (a_10115081).length-1)] = m_10115083;
          a_10115081[chckIndx(chckRange(addInt(i_10115085, 4), 0, 255), 0, (a_10115081).length-1)] = m_10115083;
          a_10115081[chckIndx(chckRange(addInt(i_10115085, 5), 0, 255), 0, (a_10115081).length-1)] = m_10115083;
          a_10115081[chckIndx(chckRange(addInt(i_10115085, 6), 0, 255), 0, (a_10115081).length-1)] = m_10115083;
          a_10115081[chckIndx(chckRange(addInt(i_10115085, 7), 0, 255), 0, (a_10115081).length-1)] = m_10115083;
          i_10115085 = addInt(i_10115085, 8);
        }
    } while(false);
    L3: do {
      var i_10115101 = 0;
      var colontmp__17385346 = 0;
      colontmp__17385346 = subInt(m_10115083, 1);
      var i_17385347 = 0;
      L4: do {
          L5: while (true) {
          if (!(i_17385347 < colontmp__17385346)) break L5;
            i_10115101 = i_17385347;
            a_10115081[chckIndx(sub_10115082[chckIndx(i_10115101, 0, (sub_10115082).length-1)], 0, (a_10115081).length-1)] = subInt(subInt(m_10115083, 1), i_10115101);
            i_17385347 = addInt(i_17385347, 1);
          }
      } while(false);
    } while(false);

  
}
function nsuFindStrA(a_10115117, s_10115118, sub_10115119, start_10115120, last_10115121) {
    var Tmp1;

  var result_10115123 = 0;

  BeforeRet: do {
    if ((last_10115121 == 0)) {
    Tmp1 = (s_10115118).length - 1;
    }
    else {
    Tmp1 = last_10115121;
    }
    
    var last_10115125 = Tmp1;
    var subLast_10115126 = subInt((sub_10115119).length, 1);
    if ((subLast_10115126 == -1)) {
    result_10115123 = start_10115120;
    break BeforeRet;
    }
    
    var skip_10115127 = start_10115120;
    L2: do {
        L3: while (true) {
        if (!(subLast_10115126 <= subInt(last_10115125, skip_10115127))) break L3;
          var i_10120001 = subLast_10115126;
          L4: do {
              L5: while (true) {
              if (!(s_10115118[chckIndx(addInt(skip_10115127, i_10120001), 0, (s_10115118).length-1)] == sub_10115119[chckIndx(i_10120001, 0, (sub_10115119).length-1)])) break L5;
                if ((i_10120001 == 0)) {
                result_10115123 = skip_10115127;
                break BeforeRet;
                }
                
                i_10120001 = subInt(i_10120001, 1);
              }
          } while(false);
          skip_10115127 = addInt(skip_10115127, a_10115117[chckIndx(s_10115118[chckIndx(addInt(skip_10115127, subLast_10115126), 0, (s_10115118).length-1)], 0, (a_10115117).length-1)]);
        }
    } while(false);
    result_10115123 = -1;
    break BeforeRet;
  } while (false);

  return result_10115123;

}
function nsuReplaceStr(s_10190016, sub_10190017, by_10190018) {
  var result_10190019 = [];

    result_10190019 = nimCopy(null, [], NTI1188013);
    var subLen_10190020 = (sub_10190017).length;
    if ((subLen_10190020 == 0)) {
    result_10190019 = nimCopy(null, s_10190016, NTI1188013);
    }
    else {
    if ((subLen_10190020 == 1)) {
    var c_10190021 = sub_10190017[chckIndx(0, 0, (sub_10190017).length-1)];
    var last_10190023 = (s_10190016).length - 1;
    var i_10190025 = 0;
    L1: do {
        L2: while (true) {
        if (!true) break L2;
          var j_10190026 = nsuFindChar(s_10190016, c_10190021, chckRange(i_10190025, 0, 2147483647), last_10190023);
          if ((j_10190026 < 0)) {
          break L1;
          }
          
          result_10190019.push.apply(result_10190019, substr_1571022(s_10190016, i_10190025, subInt(j_10190026, 1)));;
          result_10190019.push.apply(result_10190019, by_10190018);;
          i_10190025 = addInt(j_10190026, subLen_10190020);
        }
    } while(false);
    result_10190019.push.apply(result_10190019, substr_1571053(s_10190016, i_10190025));;
    }
    else {
      var a_10190027 = [new Int32Array(256)];
      nsuInitSkipTable(a_10190027[0], sub_10190017);
      var last_10190030 = (s_10190016).length - 1;
      var i_10190032 = 0;
      L3: do {
          L4: while (true) {
          if (!true) break L4;
            var j_10190033 = nsuFindStrA(a_10190027[0], s_10190016, sub_10190017, chckRange(i_10190032, 0, 2147483647), last_10190030);
            if ((j_10190033 < 0)) {
            break L3;
            }
            
            result_10190019.push.apply(result_10190019, substr_1571022(s_10190016, i_10190032, subInt(j_10190033, 1)));;
            result_10190019.push.apply(result_10190019, by_10190018);;
            i_10190032 = addInt(j_10190033, subLen_10190020);
          }
      } while(false);
      result_10190019.push.apply(result_10190019, substr_1571053(s_10190016, i_10190032));;
    }
    }

  return result_10190019;

}
function newSeq_15785012(len_15785015) {
  var result_15785017 = [];

    result_15785017 = new Array(len_15785015); for (var i=0;i<len_15785015;++i) {result_15785017[i]=({k: 0, parent: null, current: null, newNode: null, oldNode: null});}
  return result_15785017;

}
function newSeq_15785064(len_15785067) {
  var result_15785069 = [];

    result_15785069 = new Array(len_15785067); for (var i=0;i<len_15785067;++i) {result_15785069[i]=({parent: null, newChild: null, pos: 0});}
  return result_15785069;

}
function valueHEX3D_14965141(n_14965143, v_14965144) {
    n_14965143.text = v_14965144;

  
}
function value_14965124(n_14965126) {
  var result_14965127 = null;

    result_14965127 = n_14965126.text;

  return result_14965127;

}
function addEventShell_15227377(d_15227379, name_15227380, h_15227381) {
    d_15227379.addEventListener(name_15227380, h_15227381, false);
    if ((d_15227379.karaxEvents == null)) {
    d_15227379.karaxEvents = new Array(0);
    }
    
    d_15227379.karaxEvents.push({Field0: name_15227380, Field1: h_15227381});

  
}
function wrapEvent_15230097(d_15230099, n_15230100, k_15230101, action_15230102) {
      function laterWrapper_15300042() {
          function HEX3Aanonymous_15300048(ev_15300050) {
              function wrapper_15300051() {
                  var vHEX60gensym15_15310001 = ev_15300050.target.value;
                  valueHEX3D_14965141(n_15300046, vHEX60gensym15_15310001);
                  if (!(!((action_15300045 == null)))) {
                  failedAssertImpl_1305480(makeNimstrLit("karax.nim(75, 10) `action != nil` "));
                  }
                  
                  action_15300045(ev_15300050, n_15300046);
                  if (!((value_14965124(n_15300046) == vHEX60gensym15_15310001))) {
                  ev_15300050.target.value = value_14965124(n_15300046);
                  }
                  

                
              }

              if (!((timer_15300047 == null))) {
              clearTimeout(timer_15300047);
              }
              
              timer_15300047 = setTimeout(wrapper_15300051, 400);

            
          }

        var result_15300044 = null;

          var action_15300045 = action_15230102;
          var n_15300046 = n_15230100;
          var timer_15300047 = null;
          result_15300044 = HEX3Aanonymous_15300048;

        return result_15300044;

      }
      function enterWrapper_15265042() {
          function HEX3Aanonymous_15265047(ev_15265049) {
              if ((ev_15265049.keyCode == 13)) {
              var vHEX60gensym8_15275001 = ev_15265049.target.value;
              valueHEX3D_14965141(n_15265046, vHEX60gensym8_15275001);
              if (!(!((action_15265045 == null)))) {
              failedAssertImpl_1305480(makeNimstrLit("karax.nim(75, 10) `action != nil` "));
              }
              
              action_15265045(ev_15265049, n_15265046);
              if (!((value_14965124(n_15265046) == vHEX60gensym8_15275001))) {
              ev_15265049.target.value = value_14965124(n_15265046);
              }
              
              }
              

            
          }

        var result_15265044 = null;

          var action_15265045 = action_15230102;
          var n_15265046 = n_15230100;
          result_15265044 = HEX3Aanonymous_15265047;

        return result_15265044;

      }
      function stdWrapper_15230104() {
          function HEX3Aanonymous_15230109(ev_15230111) {
                var Tmp1;
                var Tmp2;

                if ((n_15230108.kind == 200)) Tmp2 = true; else {                  Tmp2 = (n_15230108.kind == 194);                }                if (Tmp2) Tmp1 = true; else {                  Tmp1 = (n_15230108.kind == 196);                }              if (Tmp1) {
              var vHEX60gensym1_15240001 = ev_15230111.target.value;
              valueHEX3D_14965141(n_15230108, vHEX60gensym1_15240001);
              if (!(!((action_15230107 == null)))) {
              failedAssertImpl_1305480(makeNimstrLit("karax.nim(75, 10) `action != nil` "));
              }
              
              action_15230107(ev_15230111, n_15230108);
              if (!((value_14965124(n_15230108) == vHEX60gensym1_15240001))) {
              ev_15230111.target.value = value_14965124(n_15230108);
              }
              
              }
              else {
              action_15230107(ev_15230111, n_15230108);
              }
              

            
          }

        var result_15230106 = null;

          var action_15230107 = action_15230102;
          var n_15230108 = n_15230100;
          result_15230106 = HEX3Aanonymous_15230109;

        return result_15230106;

      }

  var result_15230103 = null;

    switch (k_15230101) {
    case 30:
      result_15230103 = laterWrapper_15300042();
      addEventShell_15227377(d_15230099, "keyup", result_15230103);
      break;
    case 29:
      result_15230103 = enterWrapper_15265042();
      addEventShell_15227377(d_15230099, "keyup", result_15230103);
      break;
    default: 
      result_15230103 = stdWrapper_15230104();
      addEventShell_15227377(d_15230099, toEventName_14965012[chckIndx(k_15230101, 0, (toEventName_14965012).length-1)], result_15230103);
      break;
    }

  return result_15230103;

}
function applyEvents_15340073(n_15340075) {
    var dest_15340076 = n_15340075.dom;
    L1: do {
      var i_15340089 = 0;
      var colontmp__17385380 = 0;
      colontmp__17385380 = (n_15340075.events).length;
      var i_17385381 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_17385381 < colontmp__17385380)) break L3;
            i_15340089 = i_17385381;
            n_15340075.events[chckIndx(i_15340089, 0, (n_15340075.events).length-1)]["Field2"] = wrapEvent_15230097(dest_15340076, n_15340075, n_15340075.events[chckIndx(i_15340089, 0, (n_15340075.events).length-1)]["Field0"], n_15340075.events[chckIndx(i_15340089, 0, (n_15340075.events).length-1)]["Field1"]);
            i_17385381 = addInt(i_17385381, 1);
          }
      } while(false);
    } while(false);

  
}
function applyStyle_14955819(n_14955821, s_14955822) {
    n_14955821.style = {};
    L1: do {
      var i_14955855 = 0;
      var colontmp__17385391 = 0;
      colontmp__17385391 = subInt(s_14955822.length, 1);
      var res_17385392 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_17385392 <= colontmp__17385391)) break L3;
            i_14955855 = res_17385392;
            n_14955821.style[s_14955822[i_14955855]] = s_14955822[addInt(i_14955855, 1)];
            res_17385392 = addInt(res_17385392, 2);
          }
      } while(false);
    } while(false);

  
}
function toDom_15340154(n_15340156, useAttachedNode_15340157, kxi_15340158) {
      var Tmp9;
      var Tmp10;

  var result_15340159 = null;

  BeforeRet: do {
    if (useAttachedNode_15340157) {
    if (!((n_15340156.dom == null))) {
    if (!((n_15340156.id == null))) {
    kxi_15340158.byId[n_15340156.id] = n_15340156;
    }
    
    result_15340159 = n_15340156.dom;
    break BeforeRet;
    }
    
    }
    
    if ((n_15340156.kind == 0)) {
    result_15340159 = document.createTextNode(n_15340156.text);
    n_15340156.dom = result_15340159;
    if (!((n_15340156.id == null))) {
    kxi__.byId[n_15340156.id] = n_15340156;
    }
    
    }
    else {
    if ((n_15340156.kind == 6)) {
    result_15340159 = document.createElement("div");
    result_15340159.innerHTML = n_15340156.text;
    n_15340156.dom = result_15340159;
    if (!((n_15340156.id == null))) {
    kxi__.byId[n_15340156.id] = n_15340156;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_15340156.kind == 3)) {
    var x_15375001 = vcomponents_15136239[0][n_15340156.text](n_15340156.kids);
    result_15340159 = toDom_15340154(x_15375001, useAttachedNode_15340157, kxi_15340158);
    n_15340156.dom = result_15340159;
    if (!((n_15340156.id == null))) {
    kxi__.byId[n_15340156.id] = n_15340156;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_15340156.kind == 4)) {
    result_15340159 = n_15340156.dom;
    if (!(!((result_15340159 == null)))) {
    failedAssertImpl_1305480(makeNimstrLit("karax.nim(177, 12) `result != nil` "));
    }
    
    n_15340156.dom = result_15340159;
    if (!((n_15340156.id == null))) {
    kxi__.byId[n_15340156.id] = n_15340156;
    }
    
    break BeforeRet;
    }
    else {
    if ((n_15340156.kind == 5)) {
    var x_15410022 = n_15340156;
    if (!((x_15410022.onAttachImpl == null))) {
    x_15410022.onAttachImpl(x_15410022);
    }
    
    if (!(!((x_15410022.renderImpl == null)))) {
    failedAssertImpl_1305480(makeNimstrLit("karax.nim(184, 12) `x.renderImpl != nil` "));
    }
    
    if ((x_15410022.expanded == null)) {
    x_15410022.expanded = x_15410022.renderImpl(x_15410022);
    }
    
    if (!(!((x_15410022.expanded == null)))) {
    failedAssertImpl_1305480(makeNimstrLit("karax.nim(188, 12) `x.expanded != nil` "));
    }
    
    result_15340159 = toDom_15340154(x_15410022.expanded, useAttachedNode_15340157, kxi_15340158);
    n_15340156.dom = result_15340159;
    if (!((n_15340156.id == null))) {
    kxi__.byId[n_15340156.id] = n_15340156;
    }
    
    break BeforeRet;
    }
    else {
      result_15340159 = document.createElement(toTag_14965006[chckIndx(n_15340156.kind, 0, (toTag_14965006).length-1)]);
      n_15340156.dom = result_15340159;
      if (!((n_15340156.id == null))) {
      kxi__.byId[n_15340156.id] = n_15340156;
      }
      
      L1: do {
        var k_15465016 = null;
        L2: do {
          var i_17385360 = 0;
          var colontmp__17385361 = 0;
          colontmp__17385361 = (n_15340156.kids).length;
          var i_17385362 = 0;
          L3: do {
              L4: while (true) {
              if (!(i_17385362 < colontmp__17385361)) break L4;
                i_17385360 = i_17385362;
                k_15465016 = n_15340156.kids[chckIndx(i_17385360, 0, (n_15340156.kids).length-1)];
                result_15340159.appendChild(toDom_15340154(k_15465016, useAttachedNode_15340157, kxi_15340158));
                i_17385362 = addInt(i_17385362, 1);
              }
          } while(false);
        } while(false);
      } while(false);
      if (!((n_15340156.text == null))) {
      result_15340159.value = n_15340156.text;
      }
      
    }
    }}}}
    if (!((n_15340156.id == null))) {
    result_15340159.id = n_15340156.id;
    }
    
    if (!((n_15340156.class == null))) {
    result_15340159.className = n_15340156.class;
    }
    
    L5: do {
      var k_15480001 = null;
      var v_15480002 = null;
      L6: do {
        var i_17385373 = 0;
        var colontmp__17385374 = 0;
        colontmp__17385374 = subInt((n_15340156.attrs).length, 2);
        var res_17385375 = 0;
        L7: do {
            L8: while (true) {
            if (!(res_17385375 <= colontmp__17385374)) break L8;
              i_17385373 = res_17385375;
              k_15480001 = n_15340156.attrs[chckIndx(i_17385373, 0, (n_15340156.attrs).length-1)];
              v_15480002 = n_15340156.attrs[chckIndx(addInt(i_17385373, 1), 0, (n_15340156.attrs).length-1)];
              if (!((v_15480002 == null))) {
              result_15340159.setAttribute(k_15480001, v_15480002);
              }
              
              res_17385375 = addInt(res_17385375, 2);
            }
        } while(false);
      } while(false);
    } while(false);
    applyEvents_15340073(n_15340156);
      if (!!((kxi_15340158 == null))) Tmp10 = false; else {        Tmp10 = (n_15340156 == kxi_15340158.toFocusV);      }      if (!Tmp10) Tmp9 = false; else {        Tmp9 = (kxi_15340158.toFocus == null);      }    if (Tmp9) {
    kxi_15340158.toFocus = result_15340159;
    }
    
    if (!((n_15340156.style == null))) {
    applyStyle_14955819(result_15340159, n_15340156.style);
    n_15340156.styleVersion = (n_15340156.style.__version || 0);
    }
    
  } while (false);

  return result_15340159;

}
function replaceById_15505414(id_15505416, newTree_15505417) {
    var x_15505418 = document.getElementById(id_15505416);
    x_15505418.parentNode.replaceChild(newTree_15505417, x_15505418);
    newTree_15505417.id = id_15505416;

  
}
function len_15055214(x_15055216) {
  var result_15055217 = 0;

    result_15055217 = (x_15055216.kids).length;

  return result_15055217;

}
function HEX5BHEX5D_15055236(x_15055238, idx_15055239) {
  var result_15055240 = null;

    result_15055240 = x_15055238.kids[chckIndx(idx_15055239, 0, (x_15055238.kids).length-1)];

  return result_15055240;

}
function same_15490072(n_15490074, e_15490075, nesting_15490076) {
      var Tmp1;
      var Tmp2;

  var result_15490078 = false;

  BeforeRet: do {
    if (kxi__.orphans.hasOwnProperty(n_15490074.id)) {
    result_15490078 = true;
    break BeforeRet;
    }
    
    if ((n_15490074.kind == 5)) {
    result_15490078 = same_15490072(n_15490074.expanded, e_15490075, addInt(nesting_15490076, 1));
    }
    else {
    if ((n_15490074.kind == 6)) {
    result_15490078 = true;
    }
    else {
      if ((n_15490074.kind == 3)) Tmp1 = true; else {        Tmp1 = (n_15490074.kind == 4);      }    if (Tmp1) {
    result_15490078 = true;
    }
    else {
    if ((toTag_14965006[chckIndx(n_15490074.kind, 0, (toTag_14965006).length-1)] == e_15490075.nodeName)) {
    result_15490078 = true;
    if (!((n_15490074.kind == 0))) {
      if (!!((e_15490075.childNodes.length == len_15055214(n_15490074)))) Tmp2 = false; else {        Tmp2 = !((n_15490074.kind == 200));      }    if (Tmp2) {
    result_15490078 = false;
    break BeforeRet;
    }
    
    L3: do {
      var i_15505208 = 0;
      var colontmp__17385398 = 0;
      colontmp__17385398 = len_15055214(n_15490074);
      var i_17385399 = 0;
      L4: do {
          L5: while (true) {
          if (!(i_17385399 < colontmp__17385398)) break L5;
            i_15505208 = i_17385399;
            if (!(same_15490072(HEX5BHEX5D_15055236(n_15490074, i_15505208), e_15490075.childNodes[i_15505208], addInt(nesting_15490076, 1)))) {
            result_15490078 = false;
            break BeforeRet;
            }
            
            i_17385399 = addInt(i_17385399, 1);
          }
      } while(false);
    } while(false);
    }
    
    }
    else {
    }
    }}}
  } while (false);

  return result_15490078;

}
function eq_14920229(a_14920231, b_14920232) {
  var result_14920233 = false;

  BeforeRet: do {
    if ((a_14920231 == null)) {
    if ((b_14920232 == null)) {
    result_14920233 = true;
    break BeforeRet;
    }
    else {
      result_14920233 = false;
      break BeforeRet;
    }
    
    }
    else {
    if ((b_14920232 == null)) {
    result_14920233 = false;
    break BeforeRet;
    }
    }
    if (!((a_14920231.length == b_14920232.length))) {
    result_14920233 = false;
    break BeforeRet;
    }
    
    L1: do {
      var i_14925083 = 0;
      var colontmp__17385438 = 0;
      colontmp__17385438 = a_14920231.length;
      var i_17385439 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_17385439 < colontmp__17385438)) break L3;
            i_14925083 = i_17385439;
            if (!((a_14920231[i_14925083] == b_14920232[i_14925083]))) {
            result_14920233 = false;
            break BeforeRet;
            }
            
            i_17385439 = addInt(i_17385439, 1);
          }
      } while(false);
    } while(false);
    result_14920233 = true;
    break BeforeRet;
  } while (false);

  return result_14920233;

}
function versionMatch_14930040(s_14930042, version_14930043) {
  var result_14930044 = false;

    result_14930044 = ((s_14930042 == null) || ((s_14930042.__version || 0) == version_14930043));

  return result_14930044;

}
function sameAttrs_15066079(a_15066081, b_15066082) {
  var result_15066083 = false;

  BeforeRet: do {
    if (((a_15066081.attrs).length == (b_15066082.attrs).length)) {
    result_15066083 = true;
    L1: do {
      var i_15066106 = 0;
      var colontmp__17385442 = 0;
      colontmp__17385442 = (a_15066081.attrs).length;
      var i_17385443 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_17385443 < colontmp__17385442)) break L3;
            i_15066106 = i_17385443;
            if (!((a_15066081.attrs[chckIndx(i_15066106, 0, (a_15066081.attrs).length-1)] == b_15066082.attrs[chckIndx(i_15066106, 0, (b_15066082.attrs).length-1)]))) {
            result_15066083 = false;
            break BeforeRet;
            }
            
            i_17385443 = addInt(i_17385443, 1);
          }
      } while(false);
    } while(false);
    }
    
  } while (false);

  return result_15066083;

}
function eq_15505614(a_15505616, b_15505617, recursive_15505618) {
      var Tmp4;
      var Tmp5;
        var Tmp6;

  var result_15505619 = 0;

  BeforeRet: do {
    if (!((a_15505616.kind == b_15505617.kind))) {
    result_15505619 = 1;
    break BeforeRet;
    }
    
    if (!((a_15505616.id == b_15505617.id))) {
    result_15505619 = 1;
    break BeforeRet;
    }
    
    result_15505619 = 3;
    if (!((a_15505616.index == b_15505617.index))) {
    result_15505619 = 1;
    break BeforeRet;
    }
    
    if ((a_15505616.kind == 0)) {
    if (!((a_15505616.text == b_15505617.text))) {
    result_15505619 = 1;
    break BeforeRet;
    }
    
    }
    else {
    if ((a_15505616.kind == 3)) {
    if (!((a_15505616.text == b_15505617.text))) {
    result_15505619 = 1;
    break BeforeRet;
    }
    
    if (!((len_15055214(a_15505616) == len_15055214(b_15505617)))) {
    result_15505619 = 1;
    break BeforeRet;
    }
    
    L1: do {
      var i_15535008 = 0;
      var colontmp__17385430 = 0;
      colontmp__17385430 = len_15055214(a_15505616);
      var i_17385431 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_17385431 < colontmp__17385430)) break L3;
            i_15535008 = i_17385431;
            if ((eq_15505614(HEX5BHEX5D_15055236(a_15505616, i_15535008), HEX5BHEX5D_15055236(b_15505617, i_15535008), recursive_15505618) == 1)) {
            result_15505619 = 1;
            break BeforeRet;
            }
            
            i_17385431 = addInt(i_17385431, 1);
          }
      } while(false);
    } while(false);
    }
    else {
    if ((a_15505616.kind == 4)) {
    if ((a_15505616.dom == b_15505617.dom)) {
    result_15505619 = 3;
    break BeforeRet;
    }
    else {
      result_15505619 = 1;
      break BeforeRet;
    }
    
    }
    else {
    if ((a_15505616.kind == 6)) {
    if (!((a_15505616.text == b_15505617.text))) {
    result_15505619 = 1;
    break BeforeRet;
    }
    
    }
    else {
    if ((b_15505617.kind == 5)) {
    if (!((a_15505616.text == b_15505617.text))) {
    result_15505619 = 1;
    break BeforeRet;
    }
    
    if (!((a_15505616.key == b_15505617.key))) {
    result_15505619 = 1;
    break BeforeRet;
    }
    
    result_15505619 = 0;
    break BeforeRet;
    }
    }}}}
      if (!((a_15505616.class == b_15505617.class))) Tmp5 = true; else {        if (!eq_14920229(a_15505616.style, b_15505617.style)) Tmp6 = false; else {          Tmp6 = versionMatch_14930040(a_15505616.style, b_15505617.styleVersion);        }        Tmp5 = !(Tmp6);      }      if (Tmp5) Tmp4 = true; else {        Tmp4 = !(sameAttrs_15066079(a_15505616, b_15505617));      }    if (Tmp4) {
    result_15505619 = 2;
    break BeforeRet;
    }
    
    if (recursive_15505618) {
    if (!((len_15055214(a_15505616) == len_15055214(b_15505617)))) {
    result_15505619 = 1;
    break BeforeRet;
    }
    
    L7: do {
      var i_15560008 = 0;
      var colontmp__17385434 = 0;
      colontmp__17385434 = len_15055214(a_15505616);
      var i_17385435 = 0;
      L8: do {
          L9: while (true) {
          if (!(i_17385435 < colontmp__17385434)) break L9;
            i_15560008 = i_17385435;
            if (!((eq_15505614(HEX5BHEX5D_15055236(a_15505616, i_15560008), HEX5BHEX5D_15055236(b_15505617, i_15560008), true) == 3))) {
            result_15505619 = 1;
            break BeforeRet;
            }
            
            i_17385435 = addInt(i_17385435, 1);
          }
      } while(false);
    } while(false);
    }
    
    break BeforeRet;
  } while (false);

  return result_15505619;

}
function updateStyles_15565034(newNode_15565036, oldNode_15565037) {
    if (!((oldNode_15565037.dom == null))) {
    if (!((newNode_15565036.style == null))) {
    applyStyle_14955819(oldNode_15565037.dom, newNode_15565036.style);
    newNode_15565036.styleVersion = (newNode_15565036.style.__version || 0);
    }
    else {
      oldNode_15565037.dom.style = {m_type: NTI11357293, alignContent: null, alignItems: null, alignSelf: null, all: null, animation: null, animationDelay: null, animationDirection: null, animationDuration: null, animationFillMode: null, animationIterationCount: null, animationName: null, animationPlayState: null, animationTimingFunction: null, backdropFilter: null, backfaceVisibility: null, background: null, backgroundAttachment: null, backgroundBlendMode: null, backgroundClip: null, backgroundColor: null, backgroundImage: null, backgroundOrigin: null, backgroundPosition: null, backgroundRepeat: null, backgroundSize: null, blockSize: null, border: null, borderBlock: null, borderBlockColor: null, borderBlockEnd: null, borderBlockEndColor: null, borderBlockEndStyle: null, borderBlockEndWidth: null, borderBlockStart: null, borderBlockStartColor: null, borderBlockStartStyle: null, borderBlockStartWidth: null, borderBlockStyle: null, borderBlockWidth: null, borderBottom: null, borderBottomColor: null, borderBottomLeftRadius: null, borderBottomRightRadius: null, borderBottomStyle: null, borderBottomWidth: null, borderCollapse: null, borderColor: null, borderEndEndRadius: null, borderEndStartRadius: null, borderImage: null, borderImageOutset: null, borderImageRepeat: null, borderImageSlice: null, borderImageSource: null, borderImageWidth: null, borderInline: null, borderInlineColor: null, borderInlineEnd: null, borderInlineEndColor: null, borderInlineEndStyle: null, borderInlineEndWidth: null, borderInlineStart: null, borderInlineStartColor: null, borderInlineStartStyle: null, borderInlineStartWidth: null, borderInlineStyle: null, borderInlineWidth: null, borderLeft: null, borderLeftColor: null, borderLeftStyle: null, borderLeftWidth: null, borderRadius: null, borderRight: null, borderRightColor: null, borderRightStyle: null, borderRightWidth: null, borderSpacing: null, borderStartEndRadius: null, borderStartStartRadius: null, borderStyle: null, borderTop: null, borderTopColor: null, borderTopLeftRadius: null, borderTopRightRadius: null, borderTopStyle: null, borderTopWidth: null, borderWidth: null, bottom: null, boxDecorationBreak: null, boxShadow: null, boxSizing: null, breakAfter: null, breakBefore: null, breakInside: null, captionSide: null, caretColor: null, clear: null, clip: null, clipPath: null, color: null, colorAdjust: null, columnCount: null, columnFill: null, columnGap: null, columnRule: null, columnRuleColor: null, columnRuleStyle: null, columnRuleWidth: null, columnSpan: null, columnWidth: null, columns: null, contain: null, content: null, counterIncrement: null, counterReset: null, counterSet: null, cursor: null, direction: null, display: null, emptyCells: null, filter: null, flex: null, flexBasis: null, flexDirection: null, flexFlow: null, flexGrow: null, flexShrink: null, flexWrap: null, cssFloat: null, font: null, fontFamily: null, fontFeatureSettings: null, fontKerning: null, fontLanguageOverride: null, fontOpticalSizing: null, fontSize: null, fontSizeAdjust: null, fontStretch: null, fontStyle: null, fontSynthesis: null, fontVariant: null, fontVariantAlternates: null, fontVariantCaps: null, fontVariantEastAsian: null, fontVariantLigatures: null, fontVariantNumeric: null, fontVariantPosition: null, fontVariationSettings: null, fontWeight: null, gap: null, grid: null, gridArea: null, gridAutoColumns: null, gridAutoFlow: null, gridAutoRows: null, gridColumn: null, gridColumnEnd: null, gridColumnStart: null, gridRow: null, gridRowEnd: null, gridRowStart: null, gridTemplate: null, gridTemplateAreas: null, gridTemplateColumns: null, gridTemplateRows: null, hangingPunctuation: null, height: null, hyphens: null, imageOrientation: null, imageRendering: null, inlineSize: null, inset: null, insetBlock: null, insetBlockEnd: null, insetBlockStart: null, insetInline: null, insetInlineEnd: null, insetInlineStart: null, isolation: null, justifyContent: null, justifyItems: null, justifySelf: null, left: null, letterSpacing: null, lineBreak: null, lineHeight: null, listStyle: null, listStyleImage: null, listStylePosition: null, listStyleType: null, margin: null, marginBlock: null, marginBlockEnd: null, marginBlockStart: null, marginBottom: null, marginInline: null, marginInlineEnd: null, marginInlineStart: null, marginLeft: null, marginRight: null, marginTop: null, mask: null, maskBorder: null, maskBorderMode: null, maskBorderOutset: null, maskBorderRepeat: null, maskBorderSlice: null, maskBorderSource: null, maskBorderWidth: null, maskClip: null, maskComposite: null, maskImage: null, maskMode: null, maskOrigin: null, maskPosition: null, maskRepeat: null, maskSize: null, maskType: null, maxBlockSize: null, maxHeight: null, maxInlineSize: null, maxWidth: null, minBlockSize: null, minHeight: null, minInlineSize: null, minWidth: null, mixBlendMode: null, objectFit: null, objectPosition: null, offset: null, offsetAnchor: null, offsetDistance: null, offsetPath: null, offsetRotate: null, opacity: null, order: null, orphans: null, outline: null, outlineColor: null, outlineOffset: null, outlineStyle: null, outlineWidth: null, overflow: null, overflowAnchor: null, overflowBlock: null, overflowInline: null, overflowWrap: null, overflowX: null, overflowY: null, overscrollBehavior: null, overscrollBehaviorBlock: null, overscrollBehaviorInline: null, overscrollBehaviorX: null, overscrollBehaviorY: null, padding: null, paddingBlock: null, paddingBlockEnd: null, paddingBlockStart: null, paddingBottom: null, paddingInline: null, paddingInlineEnd: null, paddingInlineStart: null, paddingLeft: null, paddingRight: null, paddingTop: null, pageBreakAfter: null, pageBreakBefore: null, pageBreakInside: null, paintOrder: null, perspective: null, perspectiveOrigin: null, placeContent: null, placeItems: null, placeSelf: null, pointerEvents: null, position: null, quotes: null, resize: null, right: null, rotate: null, rowGap: null, scale: null, scrollBehavior: null, scrollMargin: null, scrollMarginBlock: null, scrollMarginBlockEnd: null, scrollMarginBlockStart: null, scrollMarginBottom: null, scrollMarginInline: null, scrollMarginInlineEnd: null, scrollMarginInlineStart: null, scrollMarginLeft: null, scrollMarginRight: null, scrollMarginTop: null, scrollPadding: null, scrollPaddingBlock: null, scrollPaddingBlockEnd: null, scrollPaddingBlockStart: null, scrollPaddingBottom: null, scrollPaddingInline: null, scrollPaddingInlineEnd: null, scrollPaddingInlineStart: null, scrollPaddingLeft: null, scrollPaddingRight: null, scrollPaddingTop: null, scrollSnapAlign: null, scrollSnapStop: null, scrollSnapType: null, scrollbar3dLightColor: null, scrollbarArrowColor: null, scrollbarBaseColor: null, scrollbarColor: null, scrollbarDarkshadowColor: null, scrollbarFaceColor: null, scrollbarHighlightColor: null, scrollbarShadowColor: null, scrollbarTrackColor: null, scrollbarWidth: null, shapeImageThreshold: null, shapeMargin: null, shapeOutside: null, tabSize: null, tableLayout: null, textAlign: null, textAlignLast: null, textCombineUpright: null, textDecoration: null, textDecorationColor: null, textDecorationLine: null, textDecorationSkipInk: null, textDecorationStyle: null, textDecorationThickness: null, textEmphasis: null, textEmphasisColor: null, textEmphasisPosition: null, textEmphasisStyle: null, textIndent: null, textJustify: null, textOrientation: null, textOverflow: null, textRendering: null, textShadow: null, textTransform: null, textUnderlineOffset: null, textUnderlinePosition: null, top: null, touchAction: null, transform: null, transformBox: null, transformOrigin: null, transformStyle: null, transition: null, transitionDelay: null, transitionDuration: null, transitionProperty: null, transitionTimingFunction: null, translate: null, unicodeBidi: null, verticalAlign: null, visibility: null, whiteSpace: null, widows: null, width: null, willChange: null, wordBreak: null, wordSpacing: null, writingMode: null, zIndex: null};
    }
    
    oldNode_15565037.dom.className = newNode_15565036.class;
    }
    
    oldNode_15565037.style = newNode_15565036.style;
    oldNode_15565037.class = newNode_15565036.class;

  
}
function takeOverAttr_15000245(newNode_15000247, oldNode_15000248) {
    oldNode_15000248.attrs = newNode_15000247.attrs;

  
}
function updateAttributes_15575052(newNode_15575054, oldNode_15575055) {
    if (!((oldNode_15575055.dom == null))) {
    L1: do {
      var k_15580009 = null;
      var __15580010 = null;
      L2: do {
        var i_17385448 = 0;
        var colontmp__17385449 = 0;
        colontmp__17385449 = subInt((oldNode_15575055.attrs).length, 2);
        var res_17385450 = 0;
        L3: do {
            L4: while (true) {
            if (!(res_17385450 <= colontmp__17385449)) break L4;
              i_17385448 = res_17385450;
              k_15580009 = oldNode_15575055.attrs[chckIndx(i_17385448, 0, (oldNode_15575055.attrs).length-1)];
              __15580010 = oldNode_15575055.attrs[chckIndx(addInt(i_17385448, 1), 0, (oldNode_15575055.attrs).length-1)];
              oldNode_15575055.dom.removeAttribute(k_15580009);
              res_17385450 = addInt(res_17385450, 2);
            }
        } while(false);
      } while(false);
    } while(false);
    L5: do {
      var k_15580011 = null;
      var v_15580012 = null;
      L6: do {
        var i_17385456 = 0;
        var colontmp__17385457 = 0;
        colontmp__17385457 = subInt((newNode_15575054.attrs).length, 2);
        var res_17385458 = 0;
        L7: do {
            L8: while (true) {
            if (!(res_17385458 <= colontmp__17385457)) break L8;
              i_17385456 = res_17385458;
              k_15580011 = newNode_15575054.attrs[chckIndx(i_17385456, 0, (newNode_15575054.attrs).length-1)];
              v_15580012 = newNode_15575054.attrs[chckIndx(addInt(i_17385456, 1), 0, (newNode_15575054.attrs).length-1)];
              if (!((v_15580012 == null))) {
              oldNode_15575055.dom.setAttribute(k_15580011, v_15580012);
              }
              
              res_17385458 = addInt(res_17385458, 2);
            }
        } while(false);
      } while(false);
    } while(false);
    }
    
    takeOverAttr_15000245(newNode_15575054, oldNode_15575055);

  
}
function getAttr_15000214(n_15000216, key_15000217) {
  var result_15000218 = null;

  BeforeRet: do {
    L1: do {
      var i_15000231 = 0;
      var colontmp__17385463 = 0;
      colontmp__17385463 = subInt((n_15000216.attrs).length, 2);
      var res_17385464 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_17385464 <= colontmp__17385463)) break L3;
            i_15000231 = res_17385464;
            if ((n_15000216.attrs[chckIndx(i_15000231, 0, (n_15000216.attrs).length-1)] == key_15000217)) {
            result_15000218 = n_15000216.attrs[chckIndx(addInt(i_15000231, 1), 0, (n_15000216.attrs).length-1)];
            break BeforeRet;
            }
            
            res_17385464 = addInt(res_17385464, 2);
          }
      } while(false);
    } while(false);
  } while (false);

  return result_15000218;

}
function removeAllEventHandlers_15227438(d_15227440) {
    if (!((d_15227440.karaxEvents == null))) {
    L1: do {
      var i_15230041 = 0;
      var colontmp__17385470 = 0;
      colontmp__17385470 = d_15227440.karaxEvents.length;
      var i_17385471 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_17385471 < colontmp__17385470)) break L3;
            i_15230041 = i_17385471;
            d_15227440.removeEventListener(d_15227440.karaxEvents[i_15230041]["Field0"], d_15227440.karaxEvents[i_15230041]["Field1"]);
            i_17385471 = addInt(i_17385471, 1);
          }
      } while(false);
    } while(false);
    }
    

  
}
function mergeEvents_15585014(newNode_15585016, oldNode_15585017, kxi_15585018) {
    var d_15585019 = oldNode_15585017.dom;
    if (!((d_15585019 == null))) {
    removeAllEventHandlers_15227438(d_15585019);
    }
    
    oldNode_15585017.events = newNode_15585016.events;
    applyEvents_15340073(oldNode_15585017);

  
}
function addPatch_15590414(kxi_15590416, ka_15590417, parenta_15590418, currenta_15590419, na_15590420, oldNode_15590421) {
    var L_15590422 = kxi_15590416.patchLen;
    if (((kxi_15590416.patches).length <= L_15590422)) {
    kxi_15590416.patches.push({k: ka_15590417, parent: parenta_15590418, current: currenta_15590419, newNode: na_15590420, oldNode: oldNode_15590421});;
    }
    else {
      kxi_15590416.patches[chckIndx(L_15590422, 0, (kxi_15590416.patches).length-1)].k = ka_15590417;
      kxi_15590416.patches[chckIndx(L_15590422, 0, (kxi_15590416.patches).length-1)].parent = parenta_15590418;
      kxi_15590416.patches[chckIndx(L_15590422, 0, (kxi_15590416.patches).length-1)].current = currenta_15590419;
      kxi_15590416.patches[chckIndx(L_15590422, 0, (kxi_15590416.patches).length-1)].newNode = na_15590420;
      kxi_15590416.patches[chckIndx(L_15590422, 0, (kxi_15590416.patches).length-1)].oldNode = oldNode_15590421;
    }
    
    kxi_15590416.patchLen = addInt(kxi_15590416.patchLen, 1);

  
}
function diff_15640215(newNode_15640217, oldNode_15640218, parent_15640219, current_15640220, kxi_15640221) {
      var Tmp1;
        var Tmp2;
            var Tmp7;

  BeforeRet: do {
    var result_15640401 = eq_15505614(newNode_15640217, oldNode_15640218, false);
    switch (result_15640401) {
    case 0:
      kxi_15640221.components.push({oldNode: oldNode_15640218, newNode: newNode_15640217, parent: parent_15640219, current: current_15640220});;
      break;
    case 3:
    case 2:
      newNode_15640217.dom = oldNode_15640218.dom;
      if ((result_15640401 == 2)) {
      updateStyles_15565034(newNode_15640217, oldNode_15640218);
      updateAttributes_15575052(newNode_15640217, oldNode_15640218);
      if ((oldNode_15640218.kind == 0)) {
      oldNode_15640218.text = newNode_15640217.text;
      oldNode_15640218.dom.nodeValue = newNode_15640217.text;
      }
      
      if ((oldNode_15640218.kind == 194)) {
      oldNode_15640218.dom.value = newNode_15640217.text;
      var checked_15640427 = getAttr_15000214(newNode_15640217, "checked");
      if ((checked_15640427 == null)) {
      Tmp1 = false;
      }
      else {
      Tmp1 = true;
      }
      
      oldNode_15640218.dom.checked = Tmp1;
      }
      
      }
      
        if (!(((newNode_15640217.events).length == 0))) Tmp2 = true; else {          Tmp2 = !(((oldNode_15640218.events).length == 0));        }      if (Tmp2) {
      mergeEvents_15585014(newNode_15640217, oldNode_15640218, kxi_15640221);
      }
      
      var newLength_15650006 = len_15055214(newNode_15640217);
      var oldLength_15650007 = len_15055214(oldNode_15640218);
      if (((newLength_15650006 == 0) && (oldLength_15650007 == 0))) {
      break BeforeRet;
      }
      
      var minLength_15650008 = nimMin(newLength_15650006, oldLength_15650007);
      if (!((oldNode_15640218.kind == newNode_15640217.kind))) {
      failedAssertImpl_1305480(makeNimstrLit("karax.nim(503, 12) `oldNode.kind == newNode.kind` "));
      }
      
      var commonPrefix_15660202 = 0;
      L3: do {
          L4: while (true) {
          if (!(commonPrefix_15660202 < minLength_15650008)) break L4;
            if ((eq_15505614(HEX5BHEX5D_15055236(newNode_15640217, commonPrefix_15660202), HEX5BHEX5D_15055236(oldNode_15640218, commonPrefix_15660202), true) == 3)) {
            addPatch_15590414(kxi_15640221, 5, null, null, HEX5BHEX5D_15055236(newNode_15640217, commonPrefix_15660202), HEX5BHEX5D_15055236(oldNode_15640218, commonPrefix_15660202));
            commonPrefix_15660202 = addInt(commonPrefix_15660202, 1);
            }
            else {
              break L3;
            }
            
          }
      } while(false);
      var oldPos_15660214 = subInt(oldLength_15650007, 1);
      var newPos_15660215 = subInt(newLength_15650006, 1);
      L5: do {
          L6: while (true) {
            if (!(commonPrefix_15660202 <= oldPos_15660214)) Tmp7 = false; else {              Tmp7 = (commonPrefix_15660202 <= newPos_15660215);            }          if (!Tmp7) break L6;
            if ((eq_15505614(HEX5BHEX5D_15055236(newNode_15640217, newPos_15660215), HEX5BHEX5D_15055236(oldNode_15640218, oldPos_15660214), true) == 3)) {
            addPatch_15590414(kxi_15640221, 5, null, null, HEX5BHEX5D_15055236(newNode_15640217, newPos_15660215), HEX5BHEX5D_15055236(oldNode_15640218, oldPos_15660214));
            oldPos_15660214 = subInt(oldPos_15660214, 1);
            newPos_15660215 = subInt(newPos_15660215, 1);
            }
            else {
              break L5;
            }
            
          }
      } while(false);
      var pos_15670018 = addInt(nimMin(oldPos_15660214, newPos_15660215), 1);
      L8: do {
        var i_15670024 = 0;
        var colontmp__17385405 = 0;
        colontmp__17385405 = subInt(pos_15670018, 1);
        var res_17385406 = commonPrefix_15660202;
        L9: do {
            L10: while (true) {
            if (!(res_17385406 <= colontmp__17385405)) break L10;
              i_15670024 = res_17385406;
              diff_15640215(HEX5BHEX5D_15055236(newNode_15640217, i_15670024), HEX5BHEX5D_15055236(oldNode_15640218, i_15670024), current_15640220, HEX5BHEX5D_15055236(oldNode_15640218, i_15670024).dom, kxi_15640221);
              res_17385406 = addInt(res_17385406, 1);
            }
        } while(false);
      } while(false);
      if ((addInt(oldPos_15660214, 1) == oldLength_15650007)) {
      L11: do {
        var i_15670030 = 0;
        var res_17385412 = pos_15670018;
        L12: do {
            L13: while (true) {
            if (!(res_17385412 <= newPos_15660215)) break L13;
              i_15670030 = res_17385412;
              addPatch_15590414(kxi_15640221, 2, current_15640220, null, HEX5BHEX5D_15055236(newNode_15640217, i_15670030), null);
              res_17385412 = addInt(res_17385412, 1);
            }
        } while(false);
      } while(false);
      }
      else {
        var before_15670031 = current_15640220.childNodes[chckIndx(addInt(oldPos_15660214, 1), 0, (current_15640220.childNodes).length-1)];
        L14: do {
          var i_15670037 = 0;
          var res_17385418 = pos_15670018;
          L15: do {
              L16: while (true) {
              if (!(res_17385418 <= newPos_15660215)) break L16;
                i_15670037 = res_17385418;
                addPatch_15590414(kxi_15640221, 3, current_15640220, before_15670031, HEX5BHEX5D_15055236(newNode_15640217, i_15670037), null);
                res_17385418 = addInt(res_17385418, 1);
              }
          } while(false);
        } while(false);
      }
      
      L17: do {
        var i_15670043 = 0;
        var res_17385424 = pos_15670018;
        L18: do {
            L19: while (true) {
            if (!(res_17385424 <= oldPos_15660214)) break L19;
              i_15670043 = res_17385424;
              addPatch_15590414(kxi__, 4, null, null, null, HEX5BHEX5D_15055236(oldNode_15640218, i_15670043));
              addPatch_15590414(kxi_15640221, 1, current_15640220, current_15640220.childNodes[chckIndx(i_15670043, 0, (current_15640220.childNodes).length-1)], null, null);
              res_17385424 = addInt(res_17385424, 1);
            }
        } while(false);
      } while(false);
      break;
    case 1:
      addPatch_15590414(kxi__, 4, null, null, null, oldNode_15640218);
      addPatch_15590414(kxi_15640221, 0, parent_15640219, current_15640220, newNode_15640217, null);
      break;
    case 4:
      if (true) {
      failedAssertImpl_1305480(makeNimstrLit("karax.nim(545, 26) `false` eq returned usenewNode"));
      }
      
      break;
    }
  } while (false);

  
}
function applyComponents_15690429(kxi_15690431) {
            var Tmp3;

    var i_15690433 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_15690433 < (kxi_15690431.components).length)) break L2;
          var x_15690439 = kxi_15690431.components[chckIndx(i_15690433, 0, (kxi_15690431.components).length-1)].oldNode;
          var newNode_15690440 = kxi_15690431.components[chckIndx(i_15690433, 0, (kxi_15690431.components).length-1)].newNode;
            if (!!((x_15690439.changedImpl == null))) Tmp3 = false; else {              Tmp3 = x_15690439.changedImpl(x_15690439, newNode_15690440);            }          if (Tmp3) {
          var current_15695201 = kxi_15690431.components[chckIndx(i_15690433, 0, (kxi_15690431.components).length-1)].current;
          var parent_15695202 = kxi_15690431.components[chckIndx(i_15690433, 0, (kxi_15690431.components).length-1)].parent;
          x_15690439.updatedImpl(x_15690439, newNode_15690440);
          var oldExpanded_15695203 = x_15690439.expanded;
          x_15690439.expanded = x_15690439.renderImpl(x_15690439);
          x_15690439.renderedVersion = x_15690439.version;
          if ((oldExpanded_15695203 == null)) {
          addPatch_15590414(kxi__, 4, null, null, null, x_15690439);
          addPatch_15590414(kxi_15690431, 0, parent_15695202, current_15695201, x_15690439.expanded, null);
          }
          else {
            diff_15640215(x_15690439.expanded, oldExpanded_15695203, parent_15695202, current_15695201, kxi_15690431);
          }
          
          }
          
          i_15690433 = addInt(i_15690433, 1);
        }
    } while(false);
    if (kxi_15690431.components.length < 0) { for (var i=kxi_15690431.components.length;i<0;++i) kxi_15690431.components.push(({oldNode: null, newNode: null, parent: null, current: null})); }
               else { kxi_15690431.components.length = 0; };

  
}
function moveDom_15600048(dest_15600050, src_15600051) {
    dest_15600050.dom = src_15600051.dom;
    src_15600051.dom = null;
    if (!((dest_15600050.id == null))) {
    kxi__.byId[dest_15600050.id] = dest_15600050;
    }
    
    if (!((len_15055214(dest_15600050) == len_15055214(src_15600051)))) {
    failedAssertImpl_1305480(makeNimstrLit("karax.nim(398, 10) `dest.len == src.len` "));
    }
    
    L1: do {
      var i_15615208 = 0;
      var colontmp__17385482 = 0;
      colontmp__17385482 = len_15055214(dest_15600050);
      var i_17385483 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_17385483 < colontmp__17385482)) break L3;
            i_15615208 = i_17385483;
            moveDom_15600048(HEX5BHEX5D_15055236(dest_15600050, i_15615208), HEX5BHEX5D_15055236(src_15600051, i_15615208));
            i_17385483 = addInt(i_17385483, 1);
          }
      } while(false);
    } while(false);

  
}
function HEX5BHEX5DHEX3D_15055254(x_15055256, idx_15055257, y_15055258) {
    x_15055256.kids[chckIndx(idx_15055257, 0, (x_15055256.kids).length-1)] = y_15055258;

  
}
function applyPatch_15615222(kxi_15615224) {
    L1: do {
      var i_15615232 = 0;
      var i_17385476 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_17385476 < kxi_15615224.patchLen)) break L3;
            i_15615232 = i_17385476;
            var p_15615233 = nimCopy(null, kxi_15615224.patches[chckIndx(i_15615232, 0, (kxi_15615224.patches).length-1)], NTI15227209);
            switch (p_15615233.k) {
            case 0:
              var nn_15615234 = toDom_15340154(p_15615233.newNode, true, kxi_15615224);
              if ((p_15615233.parent == null)) {
              replaceById_15505414(kxi_15615224.rootId, nn_15615234);
              }
              else {
                if ((p_15615233.current.parentNode == p_15615233.parent)) {
                p_15615233.parent.replaceChild(nn_15615234, p_15615233.current);
                }
                else {
                p_15615233.parent.appendChild(nn_15615234);
                }
                
              }
              
              break;
            case 5:
              moveDom_15600048(p_15615233.newNode, p_15615233.oldNode);
              break;
            case 1:
              p_15615233.parent.removeChild(p_15615233.current);
              break;
            case 2:
              var nn_15615250 = toDom_15340154(p_15615233.newNode, true, kxi_15615224);
              p_15615233.parent.appendChild(nn_15615250);
              break;
            case 3:
              var nn_15615251 = toDom_15340154(p_15615233.newNode, true, kxi_15615224);
              p_15615233.parent.insertBefore(nn_15615251, p_15615233.current);
              break;
            case 4:
              var n_15615252 = p_15615233.oldNode;
              if (!((n_15615252.id == null))) {
              delete kxi_15615224.byId[n_15615252.id];
              }
              
              if ((n_15615252.kind == 5)) {
              var x_15620018 = n_15615252;
              if (!((x_15620018.onDetachImpl == null))) {
              x_15620018.onDetachImpl(x_15620018);
              }
              
              }
              
              if (!(kxi_15615224.surpressRedraws)) {
              n_15615252.dom = null;
              }
              
              break;
            }
            i_17385476 = addInt(i_17385476, 1);
          }
      } while(false);
    } while(false);
    kxi_15615224.patchLen = 0;
    L4: do {
      var i_15625013 = 0;
      var i_17385479 = 0;
      L5: do {
          L6: while (true) {
          if (!(i_17385479 < kxi_15615224.patchLenV)) break L6;
            i_15625013 = i_17385479;
            var p_15625014 = nimCopy(null, kxi_15615224.patchesV[chckIndx(i_15625013, 0, (kxi_15615224.patchesV).length-1)], NTI15227211);
            HEX5BHEX5DHEX3D_15055254(p_15625014.parent, p_15625014.pos, p_15625014.newChild);
            if (!(!((p_15625014.newChild.dom == null)))) {
            failedAssertImpl_1305480(makeNimstrLit("karax.nim(437, 12) `p.newChild.dom != nil` "));
            }
            
            i_17385479 = addInt(i_17385479, 1);
          }
      } while(false);
    } while(false);
    kxi_15615224.patchLenV = 0;

  
}
function dodraw_15755414(kxi_15755416) {
    function HEX3Aanonymous_15755421() {
        dodraw_15755414(kxi_15755416);

      
    }

  BeforeRet: do {
    if ((kxi_15755416.renderer == null)) {
    break BeforeRet;
    }
    
    kxi_15755416.renderId = 0;
    if (kxi_15755416.rendering) {
    kxi_15755416.renderId = window.requestAnimationFrame(HEX3Aanonymous_15755421);
    break BeforeRet;
    }
    
    kxi_15755416.rendering = true;
    var rdata_15755436 = {hashPart: window.location.hash};
    var newtree_15755437 = kxi_15755416.renderer(rdata_15755436);
    kxi_15755416.runCount = addInt(kxi_15755416.runCount, 1);
    newtree_15755437.id = kxi_15755416.rootId;
    kxi_15755416.toFocus = null;
    if ((kxi_15755416.currentTree == null)) {
    var asdom_15755452 = toDom_15340154(newtree_15755437, true, kxi_15755416);
    replaceById_15505414(kxi_15755416.rootId, asdom_15755452);
    }
    else {
      if (!(same_15490072(kxi_15755416.currentTree, document.getElementById(kxi_15755416.rootId), 0))) {
      failedAssertImpl_1305480(makeNimstrLit("karax.nim(674, 16) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
      }
      
      var olddom_15765201 = document.getElementById(kxi_15755416.rootId);
      diff_15640215(newtree_15755437, kxi_15755416.currentTree, null, olddom_15765201, kxi_15755416);
    }
    
    applyComponents_15690429(kxi_15755416);
    applyPatch_15615222(kxi_15755416);
    kxi_15755416.currentTree = newtree_15755437;
    if (!(same_15490072(kxi_15755416.currentTree, document.getElementById(kxi_15755416.rootId), 0))) {
    failedAssertImpl_1305480(makeNimstrLit("karax.nim(688, 14) `same(kxi.currentTree, document.getElementById(kxi.rootId))` "));
    }
    
    if (!((kxi_15755416.postRenderCallback == null))) {
    kxi_15755416.postRenderCallback(rdata_15755436);
    }
    
    if (!((kxi_15755416.toFocus == null))) {
    kxi_15755416.toFocus.focus();
    }
    
    kxi_15755416.rendering = false;
  } while (false);

  
}
function init_15780446(ev_15780448) {
    function HEX3Aanonymous_15780449() {
        dodraw_15755414(kxi__);

      
    }

    kxi__.renderId = window.requestAnimationFrame(HEX3Aanonymous_15780449);

  
}
function redraw_15780246(kxi_15780248) {
    function HEX3Aanonymous_15780401() {
        dodraw_15755414(kxi_15780248);

      
    }

    if ((kxi_15780248.renderId == 0)) {
    kxi_15780248.renderId = window.requestAnimationFrame(HEX3Aanonymous_15780401);
    }
    

  
}
function setRenderer_15780493(renderer_15780498, root_15780499, clientPostRenderCallback_15780503) {
    function HEX3Aanonymous_15785135() {
        redraw_15780246(kxi__);

      
    }

  var result_15780504 = null;

    if ((document.getElementById(root_15780499) == null)) {
    var msg_15780510 = (("Could not find a <div> with id=" + root_15780499) + ". Karax needs it as its rendering target.");
    raiseException({message: cstrToNimstr(msg_15780510), parent: null, m_type: NTI1194617, name: null, trace: [], up: null}, "Exception");
    }
    
    result_15780504 = {rootId: root_15780499, renderer: renderer_15780498, postRenderCallback: clientPostRenderCallback_15780503, patches: newSeq_15785012(60), patchesV: newSeq_15785064(30), components: [], surpressRedraws: false, byId: {}, orphans: {}, currentTree: null, toFocus: null, toFocusV: null, renderId: 0, rendering: false, patchLen: 0, patchLenV: 0, runCount: 0};
    kxi__ = result_15780504;
    window.addEventListener("load", init_15780446, false);
    window.onhashchange = HEX3Aanonymous_15785135;

  return result_15780504;

}
function setRenderer_15785238(renderer_15785242, root_15785243, clientPostRenderCallback_15785246) {
    function wrapRenderer_15785248(data_15785250) {
      var result_15785251 = null;

        result_15785251 = renderer_15785242();

      return result_15785251;

    }
    function wrapPostRender_15785265(data_15785267) {
        if (!((clientPostRenderCallback_15785246 == null))) {
        clientPostRenderCallback_15785246();
        }
        

      
    }

  var result_15785247 = null;

    result_15785247 = setRenderer_15780493(wrapRenderer_15785248, root_15785243, wrapPostRender_15785265);

  return result_15785247;

}
function newVNode_15065428(kind_15065430) {
  var result_15065431 = null;

    result_15065431 = {kind: kind_15065430, index: -1, m_type: NTI14965031, id: null, class: null, text: null, kids: [], attrs: [], events: [], style: null, styleVersion: 0, dom: null};

  return result_15065431;

}
function add_15055272(parent_15055274, kid_15055275) {
    parent_15055274.kids.push(kid_15055275);;

  
}
function tree_15065445(kind_15065447, kids_15065449) {
  var result_15065450 = null;

    result_15065450 = newVNode_15065428(kind_15065447);
    L1: do {
      var k_15065483 = null;
      var k_15065483_Idx = 0;
      var i_17385564 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_17385564 < (kids_15065449).length)) break L3;
            k_15065483 = kids_15065449; k_15065483_Idx = chckIndx(i_17385564, 0, (kids_15065449).length-1);
            add_15055272(result_15065450, k_15065483[k_15065483_Idx]);
            i_17385564 = addInt(i_17385564, 1);
          }
      } while(false);
    } while(false);

  return result_15065450;

}
function addEventListener_15070014(n_15070016, event_15070017, handler_15070018) {
    n_15070016.events.push({Field0: event_15070017, Field1: handler_15070018, Field2: null});;

  
}
function addEventHandler_15790300(n_15790302, k_15790303, action_15790304, kxi_15790305) {
    function wrapper_15790306(ev_15790308, n_15790309) {
        action_15790304(ev_15790308, n_15790309);
        if (!(kxi_15790305.surpressRedraws)) {
        redraw_15780246(kxi_15790305);
        }
        

      
    }

    addEventListener_15070014(n_15790302, k_15790303, wrapper_15790306);

  
}
function chckdCheck_16970267(ev_16970270, n_16970271) {
    L1: do {
      var inpChck_16980214 = null;
      var inpChck_16980214_Idx = 0;
      var colontmp__17385568 = [];
      colontmp__17385568 = document.querySelectorAll(".show-sector");
      var i_17385570 = 0;
      var L_17385571 = (colontmp__17385568).length;
      L2: do {
          L3: while (true) {
          if (!(i_17385570 < L_17385571)) break L3;
            inpChck_16980214 = colontmp__17385568; inpChck_16980214_Idx = chckIndx(i_17385570, 0, (colontmp__17385568).length-1);
            if ((inpChck_16980214[inpChck_16980214_Idx].getAttribute("checkd") == "true")) {
            inpChck_16980214[inpChck_16980214_Idx].setAttribute("checked", "true");
            }
            else {
            inpChck_16980214[inpChck_16980214_Idx].removeAttribute("checked");
            }
            
            i_17385570 = addInt(i_17385570, 1);
            if (!(((colontmp__17385568).length == L_17385571))) {
            failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);

  
}
function len_16500198(t_16500203) {
  var result_16500204 = 0;

    result_16500204 = t_16500203.counter;

  return result_16500204;

}
function text_15065582(s_15065584) {
  var result_15065585 = null;

    result_15065585 = {kind: 0, text: toJSStr(s_15065584), index: -1, m_type: NTI14965031, id: null, class: null, kids: [], attrs: [], events: [], style: null, styleVersion: 0, dom: null};

  return result_15065585;

}
function initOrderedTable_16886460(initialSize_16886464) {
  var result_16886466 = ({data: [], counter: 0, first: 0, last: 0});

    var correctSizeHEX60gensym126_16890001 = slotsNeeded_11485048(chckRange(initialSize_16886464, 0, 2147483647));
    result_16886466.counter = 0;
    result_16886466.data = new Array(chckRange(correctSizeHEX60gensym126_16890001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym126_16890001, 0, 2147483647);++i) {result_16886466.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    result_16886466.first = -1;
    result_16886466.last = -1;

  return result_16886466;

}
function rawGet_16910621(t_16910626, key_16910627, hc_16910628, hc_16910628_Idx) {
            var Tmp3;

  var result_16910629 = 0;

  BeforeRet: do {
    hc_16910628[hc_16910628_Idx] = hash_11460214(key_16910627);
    if ((hc_16910628[hc_16910628_Idx] == 0)) {
    hc_16910628[hc_16910628_Idx] = 314159265;
    }
    
    if (((t_16910626.data).length == 0)) {
    result_16910629 = -1;
    break BeforeRet;
    }
    
    var h_16920138 = (hc_16910628[hc_16910628_Idx] & (t_16910626.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_11481218(t_16910626.data[chckIndx(h_16920138, 0, (t_16910626.data).length-1)].Field0)) break L2;
            if (!(t_16910626.data[chckIndx(h_16920138, 0, (t_16910626.data).length-1)].Field0 == hc_16910628[hc_16910628_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_16910626.data[chckIndx(h_16920138, 0, (t_16910626.data).length-1)].Field2, key_16910627);            }          if (Tmp3) {
          result_16910629 = h_16920138;
          break BeforeRet;
          }
          
          h_16920138 = nextTry_11485014(h_16920138, (t_16910626.data).length - 1);
        }
    } while(false);
    result_16910629 = subInt(-1, h_16920138);
  } while (false);

  return result_16910629;

}
function mustRehash_16935601(t_16935604) {
  var result_16935605 = false;

    if (!((t_16935604.counter < (t_16935604.data).length))) {
    failedAssertImpl_1305480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_16935605 = ((mulInt((t_16935604.data).length, 2) < mulInt(t_16935604.counter, 3)) || (subInt((t_16935604.data).length, t_16935604.counter) < 4));

  return result_16935605;

}
function rawInsert_16961359(t_16961365, data_16961368, data_16961368_Idx, key_16961369, val_16961371, hc_16961372, h_16961373) {
    data_16961368[data_16961368_Idx][chckIndx(h_16961373, 0, (data_16961368[data_16961368_Idx]).length-1)].Field2 = nimCopy(null, key_16961369, NTI1188013);
    data_16961368[data_16961368_Idx][chckIndx(h_16961373, 0, (data_16961368[data_16961368_Idx]).length-1)].Field3 = val_16961371;
    data_16961368[data_16961368_Idx][chckIndx(h_16961373, 0, (data_16961368[data_16961368_Idx]).length-1)].Field0 = hc_16961372;
    data_16961368[data_16961368_Idx][chckIndx(h_16961373, 0, (data_16961368[data_16961368_Idx]).length-1)].Field1 = -1;
    if ((t_16961365.first < 0)) {
    t_16961365.first = h_16961373;
    }
    
    if ((0 <= t_16961365.last)) {
    data_16961368[data_16961368_Idx][chckIndx(t_16961365.last, 0, (data_16961368[data_16961368_Idx]).length-1)].Field1 = h_16961373;
    }
    
    t_16961365.last = h_16961373;

  
}
function enlarge_16960180(t_16960186) {
          var Tmp6;
          var Tmp7;

    var n_16960194 = [];
    n_16960194 = new Array(chckRange(mulInt((t_16960186.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_16960186.data).length, 2), 0, 2147483647);++i) {n_16960194[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    var h_16960333 = t_16960186.first;
    t_16960186.first = -1;
    t_16960186.last = -1;
    var Tmp1 = t_16960186.data; t_16960186.data = n_16960194; n_16960194 = Tmp1;    L2: do {
        L3: while (true) {
        if (!(0 <= h_16960333)) break L3;
          var nxt_16960496 = n_16960194[chckIndx(h_16960333, 0, (n_16960194).length-1)].Field1;
          var eh_16960652 = n_16960194[chckIndx(h_16960333, 0, (n_16960194).length-1)].Field0;
          if (isFilled_11481218(eh_16960652)) {
          var j_16960659 = (eh_16960652 & (t_16960186.data).length - 1);
          L4: do {
              L5: while (true) {
              if (!isFilled_11481218(t_16960186.data[chckIndx(j_16960659, 0, (t_16960186.data).length-1)].Field0)) break L5;
                j_16960659 = nextTry_11485014(j_16960659, (t_16960186.data).length - 1);
              }
          } while(false);
          Tmp6 = n_16960194[chckIndx(h_16960333, 0, (n_16960194).length-1)].Field2;
          n_16960194[chckIndx(h_16960333, 0, (n_16960194).length-1)].Field2 = genericReset(n_16960194[chckIndx(h_16960333, 0, (n_16960194).length-1)].Field2, NTI1188013);
          Tmp7 = n_16960194[chckIndx(h_16960333, 0, (n_16960194).length-1)].Field3;
          n_16960194[chckIndx(h_16960333, 0, (n_16960194).length-1)].Field3 = genericReset(n_16960194[chckIndx(h_16960333, 0, (n_16960194).length-1)].Field3, NTI16211027);
          rawInsert_16961359(t_16960186, t_16960186, "data", Tmp6, Tmp7, n_16960194[chckIndx(h_16960333, 0, (n_16960194).length-1)].Field0, j_16960659);
          }
          
          h_16960333 = nxt_16960496;
        }
    } while(false);

  
}
function rawGetKnownHC_16962195(t_16962200, key_16962201, hc_16962202) {
  var result_16962203 = 0;

  BeforeRet: do {
    if (((t_16962200.data).length == 0)) {
    result_16962203 = -1;
    break BeforeRet;
    }
    
    var h_16965138 = (hc_16962202 & (t_16962200.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_11481218(t_16962200.data[chckIndx(h_16965138, 0, (t_16962200.data).length-1)].Field0)) break L2;
          if (((t_16962200.data[chckIndx(h_16965138, 0, (t_16962200.data).length-1)].Field0 == hc_16962202) && eqStrings(t_16962200.data[chckIndx(h_16965138, 0, (t_16962200.data).length-1)].Field2, key_16962201))) {
          result_16962203 = h_16965138;
          break BeforeRet;
          }
          
          h_16965138 = nextTry_11485014(h_16965138, (t_16962200.data).length - 1);
        }
    } while(false);
    result_16962203 = subInt(-1, h_16965138);
  } while (false);

  return result_16962203;

}
function HEX5BHEX5DHEX3D_16895730(t_16895736, key_16895737, val_16895739) {
    if (((t_16895736.data).length == 0)) {
    var correctSizeHEX60gensym129_16905001 = slotsNeeded_11485048(32);
    t_16895736.counter = 0;
    t_16895736.data = new Array(chckRange(correctSizeHEX60gensym129_16905001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym129_16905001, 0, 2147483647);++i) {t_16895736.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    t_16895736.first = -1;
    t_16895736.last = -1;
    }
    
    var hc_16910601 = [0];
    var index_16920626 = rawGet_16910621(t_16895736, key_16895737, hc_16910601, 0);
    if ((0 <= index_16920626)) {
    t_16895736.data[chckIndx(index_16920626, 0, (t_16895736.data).length-1)].Field3 = val_16895739;
    }
    else {
      if (((t_16895736.data).length == 0)) {
      var correctSizeHEX60gensym134_16930001 = slotsNeeded_11485048(32);
      t_16895736.counter = 0;
      t_16895736.data = new Array(chckRange(correctSizeHEX60gensym134_16930001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym134_16930001, 0, 2147483647);++i) {t_16895736.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}      t_16895736.first = -1;
      t_16895736.last = -1;
      }
      
      if (mustRehash_16935601(t_16895736)) {
      enlarge_16960180(t_16895736);
      index_16920626 = rawGetKnownHC_16962195(t_16895736, key_16895737, hc_16910601[0]);
      }
      
      index_16920626 = subInt(-1, index_16920626);
      rawInsert_16961359(t_16895736, t_16895736, "data", key_16895737, val_16895739, hc_16910601[0], index_16920626);
      t_16895736.counter = addInt(t_16895736.counter, 1);
    }
    

  
}
function isInitialized_14075214(dt_14075216) {
  var result_14075217 = false;

    result_14075217 = !((dt_14075216.monthZero == 0));

  return result_14075217;

}
function monthday_13915229(dt_13915231) {
  var result_13915232 = 0;

    if (!(!((dt_13915231.monthdayZero == 0)))) {
    failedAssertImpl_1305480(makeNimstrLit("times.nim(989, 28) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_13915232 = dt_13915231.monthdayZero;

  return result_13915232;

}
function nsuIntToStr(x_9765404, minchars_9765405) {
  var result_9765406 = [];

    result_9765406 = nimCopy(null, cstrToNimstr((absInt(x_9765404))+""), NTI1188013);
    L1: do {
      var i_9765415 = 0;
      var colontmp__17385597 = 0;
      colontmp__17385597 = subInt(minchars_9765405, (result_9765406).length);
      var res_17385598 = 1;
      L2: do {
          L3: while (true) {
          if (!(res_17385598 <= colontmp__17385597)) break L3;
            i_9765415 = res_17385598;
            result_9765406 = nimCopy(null, [48].concat(result_9765406 || []), NTI1188013);
            res_17385598 = addInt(res_17385598, 1);
          }
      } while(false);
    } while(false);
    if ((x_9765404 < 0)) {
    result_9765406 = nimCopy(null, [45].concat(result_9765406 || []), NTI1188013);
    }
    

  return result_9765406;

}
function HEX2D_13618091(a_13618093, b_13618094) {
  var result_13618095 = 0;

    result_13618095 = (a_13618093 - b_13618094);

  return result_13618095;

}
function month_13935214(dt_13935216) {
  var result_13935217 = 0;

    if (!(!((dt_13935216.monthdayZero == 0)))) {
    failedAssertImpl_1305480(makeNimstrLit("times.nim(996, 28) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_13935217 = dt_13935216.monthZero;

  return result_13935217;

}
function HEX2A_13618001(a_13618003, b_13618004) {
  var result_13618005 = 0;

    result_13618005 = (a_13618003 * b_13618004);

  return result_13618005;

}
function convert_13735226(unitFrom_13735229, unitTo_13735230, quantity_13735231) {
    var Tmp1;

  var result_13735232 = 0;

    if ((unitFrom_13735229 < unitTo_13735230)) {
    Tmp1 = chckRange(divInt(quantity_13735231, divInt(unitWeights_13618382[chckIndx(unitTo_13735230, 0, (unitWeights_13618382).length-1)], unitWeights_13618382[chckIndx(unitFrom_13735229, 0, (unitWeights_13618382).length-1)])), 0, 999999999);
    }
    else {
    Tmp1 = chckRange(HEX2A_13618001(divInt(unitWeights_13618382[chckIndx(unitFrom_13735229, 0, (unitWeights_13618382).length-1)], unitWeights_13618382[chckIndx(unitTo_13735230, 0, (unitWeights_13618382).length-1)]), quantity_13735231), 0, 999999999);
    }
    
    result_13735232 = Tmp1;

  return result_13735232;

}
function HEX2B_13618055(a_13618057, b_13618058) {
  var result_13618059 = 0;

    result_13618059 = (a_13618057 + b_13618058);

  return result_13618059;

}
function HEX3DHEX3D_14145022(zone1_14145024, zone2_14145025) {
  var result_14145026 = false;

  BeforeRet: do {
    if ((zone1_14145024 == zone2_14145025)) {
    result_14145026 = true;
    break BeforeRet;
    }
    
    if (((zone1_14145024 == null) || (zone2_14145025 == null))) {
    result_14145026 = false;
    break BeforeRet;
    }
    
    result_14145026 = eqStrings(zone1_14145024.name, zone2_14145025.name);
  } while (false);

  return result_14145026;

}
function formatPattern_14290056(dt_14290058, pattern_14290059, result_14290061, result_14290061_Idx, loc_14290062) {
      var Tmp1;
      var Tmp2;
      var Tmp3;
      var Tmp4;
      var Tmp5;
      var Tmp6;
        var Tmp7;
        var Tmp8;
      var Tmp9;

    switch (pattern_14290059) {
    case 0:
      result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], cstrToNimstr((monthday_13915229(dt_14290058))+""));;
      break;
    case 1:
      result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], nsuIntToStr(monthday_13915229(dt_14290058), 2));;
      break;
    case 2:
      result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], loc_14290062.ddd[chckIndx(dt_14290058.weekday, 0, (loc_14290062.ddd).length-1)]);;
      break;
    case 3:
      result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], loc_14290062.dddd[chckIndx(dt_14290058.weekday, 0, (loc_14290062.dddd).length-1)]);;
      break;
    case 4:
      if ((dt_14290058.hour == 0)) {
      Tmp1 = makeNimstrLit("12");
      }
      else {
      if ((12 < dt_14290058.hour)) {
      Tmp1 = cstrToNimstr((HEX2D_13618091(dt_14290058.hour, 12))+"");
      }
      else {
      Tmp1 = cstrToNimstr((dt_14290058.hour)+"");
      }
      }
      result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], Tmp1);;
      break;
    case 5:
      if ((dt_14290058.hour == 0)) {
      Tmp2 = makeNimstrLit("12");
      }
      else {
      if ((12 < dt_14290058.hour)) {
      Tmp2 = nsuIntToStr(HEX2D_13618091(dt_14290058.hour, 12), 2);
      }
      else {
      Tmp2 = nsuIntToStr(dt_14290058.hour, 2);
      }
      }
      result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], Tmp2);;
      break;
    case 6:
      result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], cstrToNimstr((dt_14290058.hour)+""));;
      break;
    case 7:
      result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], nsuIntToStr(dt_14290058.hour, 2));;
      break;
    case 8:
      result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], cstrToNimstr((dt_14290058.minute)+""));;
      break;
    case 9:
      result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], nsuIntToStr(dt_14290058.minute, 2));;
      break;
    case 10:
      result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], cstrToNimstr((month_13935214(dt_14290058))+""));;
      break;
    case 11:
      result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], nsuIntToStr(month_13935214(dt_14290058), 2));;
      break;
    case 12:
      result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], loc_14290062.MMM[chckIndx(month_13935214(dt_14290058), 1, (loc_14290062.MMM).length+(1)-1)-(1)]);;
      break;
    case 13:
      result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], loc_14290062.MMMM[chckIndx(month_13935214(dt_14290058), 1, (loc_14290062.MMMM).length+(1)-1)-(1)]);;
      break;
    case 14:
      result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], cstrToNimstr((dt_14290058.second)+""));;
      break;
    case 15:
      result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], nsuIntToStr(dt_14290058.second, 2));;
      break;
    case 16:
      result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], nsuIntToStr(convert_13735226(0, 2, dt_14290058.nanosecond), 3));;
      break;
    case 17:
      result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], nsuIntToStr(convert_13735226(0, 1, dt_14290058.nanosecond), 6));;
      break;
    case 18:
      result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], nsuIntToStr(dt_14290058.nanosecond, 9));;
      break;
    case 19:
      if ((12 <= dt_14290058.hour)) {
      Tmp3 = makeNimstrLit("P");
      }
      else {
      Tmp3 = makeNimstrLit("A");
      }
      
      result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], Tmp3);;
      break;
    case 20:
      if ((12 <= dt_14290058.hour)) {
      Tmp4 = makeNimstrLit("PM");
      }
      else {
      Tmp4 = makeNimstrLit("AM");
      }
      
      result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], Tmp4);;
      break;
    case 21:
      if ((dt_14290058.year <= 0)) {
      Tmp5 = HEX2B_13618055(absInt(dt_14290058.year), 1);
      }
      else {
      Tmp5 = dt_14290058.year;
      }
      
      result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], nsuIntToStr(modInt(Tmp5, 100), 2));;
      break;
    case 22:
      if ((dt_14290058.year <= 0)) {
      Tmp6 = HEX2B_13618055(absInt(dt_14290058.year), 1);
      }
      else {
      Tmp6 = dt_14290058.year;
      }
      
      var year_14320001 = Tmp6;
      if ((year_14320001 < 10000)) {
      result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], nsuIntToStr(year_14320001, 4));;
      }
      else {
      result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], [43].concat(cstrToNimstr((year_14320001)+"") || []));;
      }
      
      break;
    case 23:
      if ((dt_14290058.year < 1)) {
      result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], cstrToNimstr((HEX2B_13618055(absInt(dt_14290058.year), 1))+""));;
      }
      else {
      result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], cstrToNimstr((dt_14290058.year)+""));;
      }
      
      break;
    case 24:
      var year_14320003 = dt_14290058.year;
      if (((year_14320003 < 10000) || (year_14320003 < 0))) {
      result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], nsuIntToStr(year_14320003, 4));;
      }
      else {
      result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], [43].concat(cstrToNimstr((year_14320003)+"") || []));;
      }
      
      break;
    case 25:
      result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], cstrToNimstr((dt_14290058.year)+""));;
      break;
    case 26:
    case 27:
    case 28:
    case 29:
        if (!!(HEX3DHEX3D_14145022(dt_14290058.timezone, null))) Tmp7 = false; else {          Tmp7 = eqStrings(dt_14290058.timezone.name, makeNimstrLit("Etc/UTC"));        }      if (Tmp7) {
      addChar(result_14290061[result_14290061_Idx], 90);;
      }
      else {
        if ((0 <= negInt(dt_14290058.utcOffset))) {
        Tmp8 = 43;
        }
        else {
        Tmp8 = 45;
        }
        
        addChar(result_14290061[result_14290061_Idx], Tmp8);;
        var absOffset_14330001 = absInt(dt_14290058.utcOffset);
        switch (pattern_14290059) {
        case 26:
          result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], cstrToNimstr((divInt(absOffset_14330001, 3600))+""));;
          break;
        case 27:
          result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], nsuIntToStr(divInt(absOffset_14330001, 3600), 2));;
          break;
        case 28:
          var h_14330005 = nsuIntToStr(divInt(absOffset_14330001, 3600), 2);
          var m_14330006 = nsuIntToStr(modInt(divInt(absOffset_14330001, 60), 60), 2);
          result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], (h_14330005 || []).concat(makeNimstrLit(":") || [],m_14330006 || []));;
          break;
        case 29:
          var absOffset_14330007 = absInt(dt_14290058.utcOffset);
          var h_14330009 = nsuIntToStr(divInt(absOffset_14330007, 3600), 2);
          var m_14330010 = nsuIntToStr(modInt(divInt(absOffset_14330007, 60), 60), 2);
          var s_14330011 = nsuIntToStr(modInt(absOffset_14330007, 60), 2);
          result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], (h_14330009 || []).concat(makeNimstrLit(":") || [],m_14330010 || [],makeNimstrLit(":") || [],s_14330011 || []));;
          break;
        default: 
          if (true) {
          failedAssertImpl_1305480(makeNimstrLit("times.nim(1751, 20) `false` "));
          }
          
          break;
        }
      }
      
      break;
    case 30:
      if ((dt_14290058.year < 1)) {
      Tmp9 = makeNimstrLit("BC");
      }
      else {
      Tmp9 = makeNimstrLit("AD");
      }
      
      result_14290061[result_14290061_Idx].push.apply(result_14290061[result_14290061_Idx], Tmp9);;
      break;
    case 31:
      if (true) {
      failedAssertImpl_1305480(makeNimstrLit("times.nim(1754, 18) `false` "));
      }
      
      break;
    }

  
}
function format_14670059(dt_14670061, f_14670062, loc_14670063) {
  var result_14670064 = [[]];

    if (!(!((dt_14670061.monthdayZero == 0)))) {
    failedAssertImpl_1305480(makeNimstrLit("times.nim(1989, 29) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_14670064[0] = nimCopy(null, [], NTI1188013);
    var idx_14690202 = 0;
    L1: do {
        L2: while (true) {
        if (!(idx_14690202 <= (f_14670062.patterns).length - 1)) break L2;
          switch (chckRange(f_14670062.patterns[chckIndx(idx_14690202, 0, (f_14670062.patterns).length-1)], 0, 31)) {
          case 31:
            idx_14690202 = addInt(idx_14690202, 1);
            var len_14690215 = f_14670062.patterns[chckIndx(idx_14690202, 0, (f_14670062.patterns).length-1)];
            L3: do {
              var i_14690421 = 0;
              var res_17385591 = 1;
              L4: do {
                  L5: while (true) {
                  if (!(res_17385591 <= ((len_14690215)|0))) break L5;
                    i_14690421 = res_17385591;
                    idx_14690202 = addInt(idx_14690202, 1);
                    addChar(result_14670064[0], f_14670062.patterns[chckIndx(idx_14690202, 0, (f_14670062.patterns).length-1)]);;
                    res_17385591 = addInt(res_17385591, 1);
                  }
              } while(false);
            } while(false);
            idx_14690202 = addInt(idx_14690202, 1);
            break;
          default: 
            formatPattern_14290056(dt_14670061, chckRange(f_14670062.patterns[chckIndx(idx_14690202, 0, (f_14670062.patterns).length-1)], 0, 31), result_14670064, 0, loc_14670063);
            idx_14690202 = addInt(idx_14690202, 1);
            break;
          }
        }
    } while(false);

  return result_14670064[0];

}
function format_14695130(dt_14695133) {
  var result_14695135 = [];

    result_14695135 = nimCopy(null, format_14670059(dt_14695133, f2_14695173, DefaultLocale_14210709), NTI1188013);

  return result_14695135;

}
function HEX24_14695125(dt_14695127) {
  var result_14695128 = [];

    if (!(isInitialized_14075214(dt_14695127))) {
    result_14695128 = nimCopy(null, makeNimstrLit("Uninitialized DateTime"), NTI1188013);
    }
    else {
      result_14695128 = nimCopy(null, format_14695130(dt_14695127), NTI1188013);
    }
    

  return result_14695128;

}
function HEX2B_13618037(a_13618039, b_13618040) {
  var result_13618041 = 0;

    result_13618041 = (a_13618039 + b_13618040);

  return result_13618041;

}
function convert_13645442(unitFrom_13645445, unitTo_13645446, quantity_13645447) {
    var Tmp1;

  var result_13645448 = 0;

    if ((unitFrom_13645445 < unitTo_13645446)) {
    Tmp1 = divInt(quantity_13645447, divInt(unitWeights_13618382[chckIndx(unitTo_13645446, 0, (unitWeights_13618382).length-1)], unitWeights_13618382[chckIndx(unitFrom_13645445, 0, (unitWeights_13618382).length-1)]));
    }
    else {
    Tmp1 = HEX2A_13618001(divInt(unitWeights_13618382[chckIndx(unitFrom_13645445, 0, (unitWeights_13618382).length-1)], unitWeights_13618382[chckIndx(unitTo_13645446, 0, (unitWeights_13618382).length-1)]), quantity_13645447);
    }
    
    result_13645448 = Tmp1;

  return result_13645448;

}
function convert_13645558(unitFrom_13645561, unitTo_13645562, quantity_13645563) {
    var Tmp1;

  var result_13645564 = 0;

    if ((unitFrom_13645561 < unitTo_13645562)) {
    Tmp1 = chckRange(divInt(quantity_13645563, divInt(unitWeights_13618382[chckIndx(unitTo_13645562, 0, (unitWeights_13618382).length-1)], unitWeights_13618382[chckIndx(unitFrom_13645561, 0, (unitWeights_13618382).length-1)])), -2147483648, 2147483647);
    }
    else {
    Tmp1 = chckRange(HEX2A_13618001(divInt(unitWeights_13618382[chckIndx(unitFrom_13645561, 0, (unitWeights_13618382).length-1)], unitWeights_13618382[chckIndx(unitTo_13645562, 0, (unitWeights_13618382).length-1)]), quantity_13645563), -2147483648, 2147483647);
    }
    
    result_13645564 = Tmp1;

  return result_13645564;

}
function normalize_13815002(seconds_13815005, nanoseconds_13815006) {
  var result_13815007 = ({seconds: 0, nanosecond: 0});

    result_13815007.seconds = HEX2B_13618037(seconds_13815005, convert_13645442(0, 3, nanoseconds_13815006));
    var nanosecond_13815021 = modInt(nanoseconds_13815006, convert_13645558(3, 0, 1));
    if ((nanosecond_13815021 < 0)) {
    nanosecond_13815021 = addInt(nanosecond_13815021, convert_13645558(3, 0, 1));
    result_13815007.seconds = subInt(result_13815007.seconds, 1);
    }
    
    result_13815007.nanosecond = chckRange(chckRange(nanosecond_13815021, -2147483648, 2147483647), 0, 999999999);

  return result_13815007;

}
function HEX2D_13618073(a_13618075, b_13618076) {
  var result_13618077 = 0;

    result_13618077 = (a_13618075 - b_13618076);

  return result_13618077;

}
function ntSubTime(a_13815069, b_13815070) {
  var result_13815071 = ({seconds: 0, nanosecond: 0});

    nimCopy(result_13815071, normalize_13815002(HEX2D_13618073(a_13815069.seconds, b_13815070.seconds), HEX2D_13618091(a_13815069.nanosecond, b_13815070.nanosecond)), NTI13618239);

  return result_13815071;

}
function normalize_13645545(seconds_13645548, nanoseconds_13645549) {
  var result_13645550 = ({seconds: 0, nanosecond: 0});

    result_13645550.seconds = HEX2B_13618037(seconds_13645548, convert_13645442(0, 3, nanoseconds_13645549));
    var nanosecond_13645599 = modInt(nanoseconds_13645549, convert_13645558(3, 0, 1));
    if ((nanosecond_13645599 < 0)) {
    nanosecond_13645599 = addInt(nanosecond_13645599, convert_13645558(3, 0, 1));
    result_13645550.seconds = subInt(result_13645550.seconds, 1);
    }
    
    result_13645550.nanosecond = chckRange(chckRange(nanosecond_13645599, -2147483648, 2147483647), 0, 999999999);

  return result_13645550;

}
function initDuration_13645431(nanoseconds_13645433, microseconds_13645434, milliseconds_13645435, seconds_13645436, minutes_13645437, hours_13645438, days_13645439, weeks_13645440) {
  var result_13645441 = ({seconds: 0, nanosecond: 0});

    var seconds_13645525 = HEX2B_13618037(HEX2B_13618037(HEX2B_13618037(HEX2B_13618037(HEX2B_13618037(HEX2B_13618037(HEX2B_13618037(convert_13645442(7, 3, weeks_13645440), convert_13645442(6, 3, days_13645439)), convert_13645442(4, 3, minutes_13645437)), convert_13645442(5, 3, hours_13645438)), convert_13645442(3, 3, seconds_13645436)), convert_13645442(2, 3, milliseconds_13645435)), convert_13645442(1, 3, microseconds_13645434)), convert_13645442(0, 3, nanoseconds_13645433));
    var nanoseconds_13645541 = chckRange(HEX2B_13618037(HEX2B_13618037(convert_13645442(2, 0, modInt(milliseconds_13645435, 1000)), convert_13645442(1, 0, modInt(microseconds_13645434, 1000000))), modInt(nanoseconds_13645433, 1000000000)), -2147483648, 2147483647);
    nimCopy(result_13645441, normalize_13645545(seconds_13645525, nanoseconds_13645541), NTI13618243);

  return result_13645441;

}
function floorDiv_13645158(x_13645161, y_13645162) {
      var Tmp1;
      var Tmp2;
        var Tmp3;

  var result_13645163 = 0;

    result_13645163 = Math.trunc(x_13645161 / y_13645162);
    var r_13645164 = Math.trunc(x_13645161 % y_13645162);
      if (!(0 < r_13645164)) Tmp2 = false; else {        Tmp2 = (y_13645162 < 0);      }      if (Tmp2) Tmp1 = true; else {        if (!(r_13645164 < 0)) Tmp3 = false; else {          Tmp3 = (0 < y_13645162);        }        Tmp1 = Tmp3;      }    if (Tmp1) {
    result_13645163 -= 1;
    }
    

  return result_13645163;

}
function inc_13618133(a_13618136, a_13618136_Idx, b_13618137) {
    a_13618136[a_13618136_Idx] += b_13618137;

  
}
function fromEpochDay_13640036(epochday_13640038) {
    var Tmp1;
    var Tmp2;

  var result_13640043 = {Field0: 0, Field1: 0, Field2: 0};

  BeforeRet: do {
    var z_13640044 = [epochday_13640038];
    inc_13618133(z_13640044, 0, 719468);
    if ((0 <= z_13640044[0])) {
    Tmp1 = z_13640044[0];
    }
    else {
    Tmp1 = HEX2D_13618073(z_13640044[0], 146096);
    }
    
    var era_13645003 = divInt(Tmp1, 146097);
    var doe_13645005 = HEX2D_13618073(z_13640044[0], HEX2A_13618001(era_13645003, 146097));
    var yoe_13645010 = divInt(HEX2D_13618073(HEX2B_13618037(HEX2D_13618073(doe_13645005, divInt(doe_13645005, 1460)), divInt(doe_13645005, 36524)), divInt(doe_13645005, 146096)), 365);
    var y_13645012 = HEX2B_13618037(yoe_13645010, HEX2A_13618001(era_13645003, 400));
    var doy_13645015 = HEX2D_13618073(doe_13645005, HEX2D_13618073(HEX2B_13618037(HEX2A_13618001(365, yoe_13645010), divInt(yoe_13645010, 4)), divInt(yoe_13645010, 100)));
    var mp_13645017 = divInt(HEX2B_13618037(HEX2A_13618001(5, doy_13645015), 2), 153);
    var d_13645019 = HEX2B_13618037(HEX2D_13618073(doy_13645015, divInt(HEX2B_13618037(HEX2A_13618001(153, mp_13645017), 2), 5)), 1);
    if ((mp_13645017 < 10)) {
    Tmp2 = 3;
    }
    else {
    Tmp2 = -9;
    }
    
    var m_13645021 = HEX2B_13618037(mp_13645017, Tmp2);
    var colontmp__17385609 = chckRange(d_13645019, 1, 31);
    var colontmp__17385610 = chckRange(m_13645021, 1, 12);
    var colontmp__17385611 = chckRange(HEX2B_13618037(y_13645012, ((m_13645021 <= 2) ? 1:0)), -2147483648, 2147483647);
    nimCopy(result_13640043, {Field0: nimCopy(null, colontmp__17385609, NTI13618227), Field1: colontmp__17385610, Field2: colontmp__17385611}, NTI13640039);
    break BeforeRet;
  } while (false);

  return result_13640043;

}
function isLeapYear_13618443(year_13618445) {
    var Tmp1;
      var Tmp2;

  var result_13618446 = false;

    if (!(modInt(year_13618445, 4) == 0)) Tmp1 = false; else {      if (!((modInt(year_13618445, 100) == 0))) Tmp2 = true; else {        Tmp2 = (modInt(year_13618445, 400) == 0);      }      Tmp1 = Tmp2;    }    result_13618446 = Tmp1;

  return result_13618446;

}
function getDaysInMonth_13620016(month_13620018, year_13620019) {
      var Tmp1;

  var result_13620020 = 0;

    switch (month_13620018) {
    case 2:
      if (isLeapYear_13618443(year_13620019)) {
      Tmp1 = 29;
      }
      else {
      Tmp1 = 28;
      }
      
      result_13620020 = Tmp1;
      break;
    case 4:
    case 6:
    case 9:
    case 11:
      result_13620020 = 30;
      break;
    default: 
      result_13620020 = 31;
      break;
    }

  return result_13620020;

}
function assertValidDate_13620034(monthday_13620036, month_13620037, year_13620038) {
    if (!((monthday_13620036 <= getDaysInMonth_13620016(month_13620037, year_13620038)))) {
    failedAssertImpl_1305480((makeNimstrLit("times.nim(443, 10) `monthday <= getDaysInMonth(month, year)` ") || []).concat(cstrToNimstr((year_13620038)+"") || [],makeNimstrLit("-") || [],nsuIntToStr(month_13620037, 2) || [],makeNimstrLit("-") || [],cstrToNimstr((monthday_13620036)+"") || [],makeNimstrLit(" is not a valid date") || []));
    }
    

  
}
function HEX2A_13618019(a_13618021, b_13618022) {
  var result_13618023 = 0;

    result_13618023 = (a_13618021 * b_13618022);

  return result_13618023;

}
function toEpochDay_13630229(monthday_13630231, month_13630232, year_13630233) {
    var Tmp1;
    var Tmp2;

  var result_13630234 = 0;

  BeforeRet: do {
    assertValidDate_13620034(monthday_13630231, month_13630232, year_13630233);
    var colontmp__17385613 = {Field0: year_13630233, Field1: month_13630232, Field2: monthday_13630231};
    var y_13630240 = colontmp__17385613["Field0"];
    var m_13630241 = colontmp__17385613["Field1"];
    var d_13630242 = colontmp__17385613["Field2"];
    if ((m_13630241 <= 2)) {
    y_13630240 = subInt(y_13630240, 1);
    }
    
    if ((0 <= y_13630240)) {
    Tmp1 = y_13630240;
    }
    else {
    Tmp1 = HEX2D_13618091(y_13630240, 399);
    }
    
    var era_13635003 = divInt(Tmp1, 400);
    var yoe_13635005 = HEX2D_13618091(y_13630240, HEX2A_13618019(era_13635003, 400));
    if ((2 < m_13630241)) {
    Tmp2 = -3;
    }
    else {
    Tmp2 = 9;
    }
    
    var doy_13640002 = HEX2D_13618091(HEX2B_13618055(divInt(HEX2B_13618055(HEX2A_13618019(153, HEX2B_13618055(m_13630241, Tmp2)), 2), 5), d_13630242), 1);
    var doe_13640005 = HEX2B_13618055(HEX2D_13618091(HEX2B_13618055(HEX2A_13618019(yoe_13635005, 365), divInt(yoe_13635005, 4)), divInt(yoe_13635005, 100)), doy_13640002);
    result_13630234 = HEX2D_13618091(HEX2B_13618055(HEX2A_13618019(era_13635003, 146097), doe_13640005), 719468);
    break BeforeRet;
  } while (false);

  return result_13630234;

}
function getDayOfWeek_13645151(monthday_13645153, month_13645154, year_13645155) {
    var Tmp1;

  var result_13645156 = 0;

    assertValidDate_13620034(monthday_13645153, month_13645154, year_13645155);
    var days_13645157 = HEX2D_13618073(toEpochDay_13630229(monthday_13645153, month_13645154, year_13645155), 3);
    var weeks_13645184 = floorDiv_13645158(days_13645157, 7);
    var wd_13645185 = HEX2D_13618073(days_13645157, HEX2A_13618001(weeks_13645184, 7));
    if ((wd_13645185 == 0)) {
    Tmp1 = 6;
    }
    else {
    Tmp1 = chckRange(HEX2D_13618073(wd_13645185, 1), 0, 6);
    }
    
    result_13645156 = Tmp1;

  return result_13645156;

}
function getDayOfYear_13645070(monthday_13645072, month_13645073, year_13645074) {
  var result_13645075 = 0;

    assertValidDate_13620034(monthday_13645072, month_13645073, year_13645074);
    if (isLeapYear_13618443(year_13645074)) {
    result_13645075 = chckRange(HEX2D_13618091(HEX2B_13618055(daysUntilMonthLeap_13645107[chckIndx(month_13645073, 1, (daysUntilMonthLeap_13645107).length+(1)-1)-(1)], monthday_13645072), 1), 0, 365);
    }
    else {
      result_13645075 = chckRange(HEX2D_13618091(HEX2B_13618055(daysUntilMonth_13645091[chckIndx(month_13645073, 1, (daysUntilMonth_13645091).length+(1)-1)-(1)], monthday_13645072), 1), 0, 365);
    }
    

  return result_13645075;

}
function initDateTime_14140220(zt_14140222, zone_14140223) {
  var result_14140224 = ({m_type: NTI13618241, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    var adjTime_14140225 = ntSubTime(zt_14140222.time, initDuration_13645431(0, 0, 0, zt_14140222.utcOffset, 0, 0, 0, 0));
    var s_14140226 = adjTime_14140225.seconds;
    var epochday_14140232 = floorDiv_13645158(s_14140226, 86400);
    var rem_14140233 = HEX2D_13618073(s_14140226, HEX2A_13618001(epochday_14140232, 86400));
    var hour_14140234 = divInt(rem_14140233, 3600);
    rem_14140233 = HEX2D_13618073(rem_14140233, HEX2A_13618001(hour_14140234, 3600));
    var minute_14140235 = divInt(rem_14140233, 60);
    rem_14140233 = HEX2D_13618073(rem_14140233, HEX2A_13618001(minute_14140235, 60));
    var second_14140236 = rem_14140233;
    var colontmp__17385608 = fromEpochDay_13640036(epochday_14140232);
    var d_14140237 = colontmp__17385608["Field0"];
    var m_14140238 = colontmp__17385608["Field1"];
    var y_14140239 = colontmp__17385608["Field2"];
    nimCopy(result_14140224, {year: y_14140239, monthZero: ((m_14140238)|0), monthdayZero: d_14140237, hour: nimCopy(null, chckRange(hour_14140234, 0, 23), NTI13618229), minute: nimCopy(null, chckRange(minute_14140235, 0, 59), NTI13618231), second: nimCopy(null, chckRange(second_14140236, 0, 60), NTI13618233), nanosecond: nimCopy(null, zt_14140222.time.nanosecond, NTI13618237), weekday: getDayOfWeek_13645151(d_14140237, m_14140238, y_14140239), yearday: getDayOfYear_13645070(d_14140237, m_14140238, y_14140239), isDst: zt_14140222.isDst, timezone: zone_14140223, utcOffset: zt_14140222.utcOffset, m_type: NTI13618241}, NTI13618241);

  return result_14140224;

}
function zonedTimeFromTime_14140341(zone_14140343, time_14140344) {
  var result_14140345 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    nimCopy(result_14140345, zone_14140343.zonedTimeFromTimeImpl(time_14140344), NTI13618253);

  return result_14140345;

}
function inZone_14145059(time_14145061, zone_14145062) {
  var result_14145063 = ({m_type: NTI13618241, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    nimCopy(result_14145063, initDateTime_14140220(zonedTimeFromTime_14140341(zone_14145062, time_14145061), zone_14145062), NTI13618241);

  return result_14145063;

}
function newTimezone_14140268(name_14140270, zonedTimeFromTimeImpl_14140274, zonedTimeFromAdjTimeImpl_14140278) {
  var result_14140280 = null;

    result_14140280 = {name: nimCopy(null, name_14140270, NTI1188013), zonedTimeFromTimeImpl: zonedTimeFromTimeImpl_14140274, zonedTimeFromAdjTimeImpl: zonedTimeFromAdjTimeImpl_14140278};

  return result_14140280;

}
function localZonedTimeFromTime_14165236(time_14165238) {
  var result_14165239 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var jsDate_14165245 = new Date(HEX2A_13618001(time_14165238.seconds, 1000));
    var offset_14165246 = HEX2A_13618019(jsDate_14165245.getTimezoneOffset(), 60);
    nimCopy(result_14165239.time, time_14165238, NTI13618239);
    result_14165239.utcOffset = offset_14165246;
    result_14165239.isDst = false;

  return result_14165239;

}
function contains_14170021(s_14170027, value_14170028) {
  var result_14170029 = false;

    result_14170029 = ((s_14170027.a <= value_14170028) && (value_14170028 <= s_14170027.b));

  return result_14170029;

}
function ntAddTime(a_13810022, b_13810023) {
  var result_13810024 = ({seconds: 0, nanosecond: 0});

    nimCopy(result_13810024, normalize_13815002(HEX2B_13618037(a_13810022.seconds, b_13810023.seconds), HEX2B_13618055(a_13810022.nanosecond, b_13810023.nanosecond)), NTI13618239);

  return result_13810024;

}
function localZonedTimeFromAdjTime_14165260(adjTime_14165262) {
  var result_14165263 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var utcDate_14165269 = new Date(HEX2A_13618001(adjTime_14165262.seconds, 1000));
    var localDate_14165270 = new Date(utcDate_14165269.getUTCFullYear(),utcDate_14165269.getUTCMonth(),utcDate_14165269.getUTCDate(),utcDate_14165269.getUTCHours(),utcDate_14165269.getUTCMinutes(),utcDate_14165269.getUTCSeconds(),0);
    if (contains_14170021(HEX2EHEX2E_3015220(0, 99), utcDate_14165269.getUTCFullYear())) {
    localDate_14165270.setFullYear(utcDate_14165269.getUTCFullYear());
    }
    
    result_14165263.utcOffset = HEX2A_13618019(localDate_14165270.getTimezoneOffset(), 60);
    nimCopy(result_14165263.time, ntAddTime(adjTime_14165262, initDuration_13645431(0, 0, 0, result_14165263.utcOffset, 0, 0, 0, 0)), NTI13618239);
    result_14165263.isDst = false;

  return result_14165263;

}
function local_14170282() {
  var result_14170284 = null;

    if ((localInstance_14170232[0] == null)) {
    localInstance_14170232[0] = newTimezone_14140268(makeNimstrLit("LOCAL"), localZonedTimeFromTime_14165236, localZonedTimeFromAdjTime_14165260);
    }
    
    result_14170284 = localInstance_14170232[0];

  return result_14170284;

}
function local_14170354(t_14170356) {
  var result_14170357 = ({m_type: NTI13618241, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    nimCopy(result_14170357, inZone_14145059(t_14170356, local_14170282()), NTI13618241);

  return result_14170357;

}
function initTime_13795182(unix_13795184, nanosecond_13795185) {
  var result_13795186 = ({seconds: 0, nanosecond: 0});

    result_13795186.seconds = unix_13795184;
    result_13795186.nanosecond = nanosecond_13795185;

  return result_13795186;

}
function getTime_13805291() {
  var result_13805293 = ({seconds: 0, nanosecond: 0});

    var millis_13805401 = new Date().getTime();
    var seconds_13805408 = convert_13645558(2, 3, millis_13805401);
    var nanos_13805422 = convert_13645558(2, 0, modInt(millis_13805401, convert_13645558(3, 2, 1)));
    nimCopy(result_13805293, initTime_13795182(seconds_13805408, chckRange(nanos_13805422, 0, 999999999)), NTI13618239);

  return result_13805293;

}
function now_14170371() {
  var result_14170373 = ({m_type: NTI13618241, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    nimCopy(result_14170373, local_14170354(getTime_13805291()), NTI13618241);

  return result_14170373;

}
function saveFunc_16665033(jStr_16665035, fname_16665036) {
    function innerHEX60gensym95_16670001() {
      var result_16670003 = null;

      BeforeRet: do {
        var a_16670004 = null;
        a_16670004 = {};
        a_16670004.type = makeNimstrLit("application/json");
        result_16670003 = a_16670004;
        break BeforeRet;
      } while (false);

      return result_16670003;

    }

    var blb_16675025 = function(o,opt){return new Blob([o], opt);}(jStr_16665035, innerHEX60gensym95_16670001());
    var bUrl_16675026 = function(b){return URL.createObjectURL(b);}(blb_16675025);
    var elA_16675027 = document.createElement("a");
    elA_16675027.setAttribute("href", bUrl_16675026);
    elA_16675027.setAttribute("download", toJSStr(fname_16665036));
    document.body.appendChild(elA_16675027);
    elA_16675027.click();
    document.body.removeChild(elA_16675027);
    (function(uk){return URL.revokeObjectURL(uk);})(bUrl_16675026);

  
}
function initOrderedTable_13051271(initialSize_13051275) {
  var result_13051277 = ({data: [], counter: 0, first: 0, last: 0});

    var correctSizeHEX60gensym0_13055001 = slotsNeeded_11485048(chckRange(initialSize_13051275, 0, 2147483647));
    result_13051277.counter = 0;
    result_13051277.data = new Array(chckRange(correctSizeHEX60gensym0_13055001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym0_13055001, 0, 2147483647);++i) {result_13051277.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    result_13051277.first = -1;
    result_13051277.last = -1;

  return result_13051277;

}
function newJObject_13051266() {
  var result_13051268 = null;

    result_13051268 = {kind: 5, fields: initOrderedTable_13051271(2), isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, elems: []};

  return result_13051268;

}
function rawGet_13125621(t_13125626, key_13125627, hc_13125628, hc_13125628_Idx) {
            var Tmp3;

  var result_13125629 = 0;

  BeforeRet: do {
    hc_13125628[hc_13125628_Idx] = hash_11460214(key_13125627);
    if ((hc_13125628[hc_13125628_Idx] == 0)) {
    hc_13125628[hc_13125628_Idx] = 314159265;
    }
    
    if (((t_13125626.data).length == 0)) {
    result_13125629 = -1;
    break BeforeRet;
    }
    
    var h_13135138 = (hc_13125628[hc_13125628_Idx] & (t_13125626.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_11481218(t_13125626.data[chckIndx(h_13135138, 0, (t_13125626.data).length-1)].Field0)) break L2;
            if (!(t_13125626.data[chckIndx(h_13135138, 0, (t_13125626.data).length-1)].Field0 == hc_13125628[hc_13125628_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_13125626.data[chckIndx(h_13135138, 0, (t_13125626.data).length-1)].Field2, key_13125627);            }          if (Tmp3) {
          result_13125629 = h_13135138;
          break BeforeRet;
          }
          
          h_13135138 = nextTry_11485014(h_13135138, (t_13125626.data).length - 1);
        }
    } while(false);
    result_13125629 = subInt(-1, h_13135138);
  } while (false);

  return result_13125629;

}
function mustRehash_13150601(t_13150604) {
  var result_13150605 = false;

    if (!((t_13150604.counter < (t_13150604.data).length))) {
    failedAssertImpl_1305480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_13150605 = ((mulInt((t_13150604.data).length, 2) < mulInt(t_13150604.counter, 3)) || (subInt((t_13150604.data).length, t_13150604.counter) < 4));

  return result_13150605;

}
function rawInsert_13176349(t_13176355, data_13176358, data_13176358_Idx, key_13176359, val_13176361, hc_13176362, h_13176363) {
    data_13176358[data_13176358_Idx][chckIndx(h_13176363, 0, (data_13176358[data_13176358_Idx]).length-1)].Field2 = nimCopy(null, key_13176359, NTI1188013);
    data_13176358[data_13176358_Idx][chckIndx(h_13176363, 0, (data_13176358[data_13176358_Idx]).length-1)].Field3 = val_13176361;
    data_13176358[data_13176358_Idx][chckIndx(h_13176363, 0, (data_13176358[data_13176358_Idx]).length-1)].Field0 = hc_13176362;
    data_13176358[data_13176358_Idx][chckIndx(h_13176363, 0, (data_13176358[data_13176358_Idx]).length-1)].Field1 = -1;
    if ((t_13176355.first < 0)) {
    t_13176355.first = h_13176363;
    }
    
    if ((0 <= t_13176355.last)) {
    data_13176358[data_13176358_Idx][chckIndx(t_13176355.last, 0, (data_13176358[data_13176358_Idx]).length-1)].Field1 = h_13176363;
    }
    
    t_13176355.last = h_13176363;

  
}
function enlarge_13175180(t_13175186) {
          var Tmp6;
          var Tmp7;

    var n_13175194 = [];
    n_13175194 = new Array(chckRange(mulInt((t_13175186.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_13175186.data).length, 2), 0, 2147483647);++i) {n_13175194[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    var h_13175333 = t_13175186.first;
    t_13175186.first = -1;
    t_13175186.last = -1;
    var Tmp1 = t_13175186.data; t_13175186.data = n_13175194; n_13175194 = Tmp1;    L2: do {
        L3: while (true) {
        if (!(0 <= h_13175333)) break L3;
          var nxt_13175489 = n_13175194[chckIndx(h_13175333, 0, (n_13175194).length-1)].Field1;
          var eh_13175638 = n_13175194[chckIndx(h_13175333, 0, (n_13175194).length-1)].Field0;
          if (isFilled_11481218(eh_13175638)) {
          var j_13175645 = (eh_13175638 & (t_13175186.data).length - 1);
          L4: do {
              L5: while (true) {
              if (!isFilled_11481218(t_13175186.data[chckIndx(j_13175645, 0, (t_13175186.data).length-1)].Field0)) break L5;
                j_13175645 = nextTry_11485014(j_13175645, (t_13175186.data).length - 1);
              }
          } while(false);
          Tmp6 = n_13175194[chckIndx(h_13175333, 0, (n_13175194).length-1)].Field2;
          n_13175194[chckIndx(h_13175333, 0, (n_13175194).length-1)].Field2 = genericReset(n_13175194[chckIndx(h_13175333, 0, (n_13175194).length-1)].Field2, NTI1188013);
          Tmp7 = n_13175194[chckIndx(h_13175333, 0, (n_13175194).length-1)].Field3;
          n_13175194[chckIndx(h_13175333, 0, (n_13175194).length-1)].Field3 = genericReset(n_13175194[chckIndx(h_13175333, 0, (n_13175194).length-1)].Field3, NTI13051056);
          rawInsert_13176349(t_13175186, t_13175186, "data", Tmp6, Tmp7, n_13175194[chckIndx(h_13175333, 0, (n_13175194).length-1)].Field0, j_13175645);
          }
          
          h_13175333 = nxt_13175489;
        }
    } while(false);

  
}
function rawGetKnownHC_13177150(t_13177155, key_13177156, hc_13177157) {
  var result_13177158 = 0;

  BeforeRet: do {
    if (((t_13177155.data).length == 0)) {
    result_13177158 = -1;
    break BeforeRet;
    }
    
    var h_13180138 = (hc_13177157 & (t_13177155.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_11481218(t_13177155.data[chckIndx(h_13180138, 0, (t_13177155.data).length-1)].Field0)) break L2;
          if (((t_13177155.data[chckIndx(h_13180138, 0, (t_13177155.data).length-1)].Field0 == hc_13177157) && eqStrings(t_13177155.data[chckIndx(h_13180138, 0, (t_13177155.data).length-1)].Field2, key_13177156))) {
          result_13177158 = h_13180138;
          break BeforeRet;
          }
          
          h_13180138 = nextTry_11485014(h_13180138, (t_13177155.data).length - 1);
        }
    } while(false);
    result_13177158 = subInt(-1, h_13180138);
  } while (false);

  return result_13177158;

}
function HEX5BHEX5DHEX3D_13110311(t_13110317, key_13110318, val_13110320) {
    if (((t_13110317.data).length == 0)) {
    var correctSizeHEX60gensym13_13120001 = slotsNeeded_11485048(32);
    t_13110317.counter = 0;
    t_13110317.data = new Array(chckRange(correctSizeHEX60gensym13_13120001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym13_13120001, 0, 2147483647);++i) {t_13110317.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    t_13110317.first = -1;
    t_13110317.last = -1;
    }
    
    var hc_13125601 = [0];
    var index_13135620 = rawGet_13125621(t_13110317, key_13110318, hc_13125601, 0);
    if ((0 <= index_13135620)) {
    t_13110317.data[chckIndx(index_13135620, 0, (t_13110317.data).length-1)].Field3 = val_13110320;
    }
    else {
      if (((t_13110317.data).length == 0)) {
      var correctSizeHEX60gensym18_13145001 = slotsNeeded_11485048(32);
      t_13110317.counter = 0;
      t_13110317.data = new Array(chckRange(correctSizeHEX60gensym18_13145001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym18_13145001, 0, 2147483647);++i) {t_13110317.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}      t_13110317.first = -1;
      t_13110317.last = -1;
      }
      
      if (mustRehash_13150601(t_13110317)) {
      enlarge_13175180(t_13110317);
      index_13135620 = rawGetKnownHC_13177150(t_13110317, key_13110318, hc_13125601[0]);
      }
      
      index_13135620 = subInt(-1, index_13135620);
      rawInsert_13176349(t_13110317, t_13110317, "data", key_13110318, val_13110320, hc_13125601[0], index_13135620);
      t_13110317.counter = addInt(t_13110317.counter, 1);
    }
    

  
}
function add_13100223(obj_13100225, key_13100226, val_13100227) {
    var Tmp1;

    if (!((obj_13100225.kind == 5))) {
    failedAssertImpl_1305480(makeNimstrLit("json.nim(298, 10) `obj.kind == JObject` "));
    }
    
    var Tmp1 = obj_13100225;
    if (ConstSet3[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'fields\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
    HEX5BHEX5DHEX3D_13110311(Tmp1.fields, key_13100226, val_13100227);

  
}
function newJString_13051100(s_13051102) {
  var result_13051103 = null;

    result_13051103 = {kind: 4, str: nimCopy(null, s_13051102, NTI1188013), isUnquoted: false, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_13051103;

}
function newJArray_13060657() {
  var result_13060659 = null;

    result_13060659 = {kind: 6, elems: [], isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0})};

  return result_13060659;

}
function add_13090020(father_13090022, child_13090023) {
    var Tmp1;

    if (!((father_13090022.kind == 6))) {
    failedAssertImpl_1305480(makeNimstrLit("json.nim(293, 10) `father.kind == JArray` "));
    }
    
    var Tmp1 = father_13090022;
    if (ConstSet4[Tmp1.kind]===undefined) { raiseFieldError(makeNimstrLit("\'elems\' is not accessible using discriminant \'kind\' of type \'JsonNodeObj\'")); }
    Tmp1.elems.push(child_13090023);;

  
}
function len_16825548(t_16825553) {
  var result_16825554 = 0;

    result_16825554 = t_16825553.counter;

  return result_16825554;

}
function newSeq_16835256(len_16835259) {
  var result_16835261 = [];

    result_16835261 = new Array(len_16835259); for (var i=0;i<len_16835259;++i) {result_16835261[i]=null;}
  return result_16835261;

}
function newSeq_1840232(len_1840235) {
  var result_1840237 = [];

    result_1840237 = new Array(len_1840235); for (var i=0;i<len_1840235;++i) {result_1840237[i]=[];}
  return result_1840237;

}
function parseSaturatedNatural_9070017(s_9070019, b_9070021, b_9070021_Idx, start_9070022) {
      var Tmp1;
          var Tmp4;

  var result_9070024 = 0;

    var i_9070025 = start_9070022;
    if (((i_9070025 < (s_9070019).length) && (s_9070019[chckIndx(i_9070025, 0, (s_9070019).length-1)] == 43))) {
    i_9070025 = addInt(i_9070025, 1);
    }
    
      if (!(i_9070025 < (s_9070019).length)) Tmp1 = false; else {        Tmp1 = (ConstSet9[s_9070019[chckIndx(i_9070025, 0, (s_9070019).length-1)]] != undefined);      }    if (Tmp1) {
    b_9070021[b_9070021_Idx] = 0;
    L2: do {
        L3: while (true) {
          if (!(i_9070025 < (s_9070019).length)) Tmp4 = false; else {            Tmp4 = (ConstSet10[s_9070019[chckIndx(i_9070025, 0, (s_9070019).length-1)]] != undefined);          }        if (!Tmp4) break L3;
          var c_9080016 = subInt(s_9070019[chckIndx(i_9070025, 0, (s_9070019).length-1)], 48);
          if ((b_9070021[b_9070021_Idx] <= divInt(subInt(2147483647, c_9080016), 10))) {
          b_9070021[b_9070021_Idx] = addInt(mulInt(b_9070021[b_9070021_Idx], 10), c_9080016);
          }
          else {
            b_9070021[b_9070021_Idx] = 2147483647;
          }
          
          i_9070025 = addInt(i_9070025, 1);
          L5: do {
              L6: while (true) {
              if (!((i_9070025 < (s_9070019).length) && (s_9070019[chckIndx(i_9070025, 0, (s_9070019).length-1)] == 95))) break L6;
                i_9070025 = addInt(i_9070025, 1);
              }
          } while(false);
        }
    } while(false);
    result_9070024 = subInt(i_9070025, start_9070022);
    }
    

  return result_9070024;

}
function HEX5BHEX5D_5465068(s_5465072, x_5465074) {
  var result_5465075 = [];

    var a_5465201 = x_5465074.a;
    var L_5465401 = addInt(subInt(subInt((s_5465072).length, x_5465074.b), a_5465201), 1);
    result_5465075 = nimCopy(null, mnewString(chckRange(L_5465401, 0, 2147483647)), NTI1188013);
    L1: do {
      var i_5465409 = 0;
      var i_17385661 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_17385661 < L_5465401)) break L3;
            i_5465409 = i_17385661;
            result_5465075[chckIndx(i_5465409, 0, (result_5465075).length-1)] = s_5465072[chckIndx(addInt(i_5465409, a_5465201), 0, (s_5465072).length-1)];
            i_17385661 = addInt(i_17385661, 1);
          }
      } while(false);
    } while(false);

  return result_5465075;

}
function HEX2EHEX2E_5465001(a_5465006, b_5465008) {
  var result_5465014 = ({a: 0, b: 0});

    nimCopy(result_5465014, {a: a_5465006, b: b_5465008}, NTI5465011);

  return result_5465014;

}
function parseStandardFormatSpecifier_12215322(s_12215324, start_12215325, ignoreUnknownSuffix_12215327) {
      var Tmp1;
      var Tmp2;
      var Tmp3;

  var result_12215328 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

    result_12215328.fill = 32;
    result_12215328.align = 0;
    result_12215328.sign = 45;
    var i_12215331 = start_12215325;
    if (((addInt(i_12215331, 1) < (s_12215324).length) && (ConstSet5[s_12215324[chckIndx(addInt(i_12215331, 1), 0, (s_12215324).length-1)]] != undefined))) {
    result_12215328.fill = s_12215324[chckIndx(i_12215331, 0, (s_12215324).length-1)];
    result_12215328.align = s_12215324[chckIndx(addInt(i_12215331, 1), 0, (s_12215324).length-1)];
    i_12215331 = addInt(i_12215331, 2);
    }
    else {
    if (((i_12215331 < (s_12215324).length) && (ConstSet6[s_12215324[chckIndx(i_12215331, 0, (s_12215324).length-1)]] != undefined))) {
    result_12215328.align = s_12215324[chckIndx(i_12215331, 0, (s_12215324).length-1)];
    i_12215331 = addInt(i_12215331, 1);
    }
    }
    if (((i_12215331 < (s_12215324).length) && (ConstSet7[s_12215324[chckIndx(i_12215331, 0, (s_12215324).length-1)]] != undefined))) {
    result_12215328.sign = s_12215324[chckIndx(i_12215331, 0, (s_12215324).length-1)];
    i_12215331 = addInt(i_12215331, 1);
    }
    
    if (((i_12215331 < (s_12215324).length) && (s_12215324[chckIndx(i_12215331, 0, (s_12215324).length-1)] == 35))) {
    result_12215328.alternateForm = true;
    i_12215331 = addInt(i_12215331, 1);
    }
    
      if (!((addInt(i_12215331, 1) < (s_12215324).length) && (s_12215324[chckIndx(i_12215331, 0, (s_12215324).length-1)] == 48))) Tmp1 = false; else {        Tmp1 = (ConstSet8[s_12215324[chckIndx(addInt(i_12215331, 1), 0, (s_12215324).length-1)]] != undefined);      }    if (Tmp1) {
    result_12215328.padWithZero = true;
    i_12215331 = addInt(i_12215331, 1);
    }
    
    var parsedLength_12235015 = parseSaturatedNatural_9070017(s_12215324, result_12215328, "minimumWidth", i_12215331);
    i_12215331 = addInt(i_12215331, parsedLength_12235015);
    if (((i_12215331 < (s_12215324).length) && (s_12215324[chckIndx(i_12215331, 0, (s_12215324).length-1)] == 46))) {
    i_12215331 = addInt(i_12215331, 1);
    var parsedLengthB_12235029 = parseSaturatedNatural_9070017(s_12215324, result_12215328, "precision", i_12215331);
    i_12215331 = addInt(i_12215331, parsedLengthB_12235029);
    }
    else {
      result_12215328.precision = -1;
    }
    
      if (!(i_12215331 < (s_12215324).length)) Tmp2 = false; else {        Tmp2 = (ConstSet11[s_12215324[chckIndx(i_12215331, 0, (s_12215324).length-1)]] != undefined);      }    if (Tmp2) {
    result_12215328.typ = s_12215324[chckIndx(i_12215331, 0, (s_12215324).length-1)];
    i_12215331 = addInt(i_12215331, 1);
    }
    
    result_12215328.endPosition = i_12215331;
      if (!!((i_12215331 == (s_12215324).length))) Tmp3 = false; else {        Tmp3 = !(ignoreUnknownSuffix_12215327);      }    if (Tmp3) {
    raiseException({message: (makeNimstrLit("invalid format string, cannot parse: ") || []).concat(HEX5BHEX5D_5465068(s_12215324, HEX2EHEX2E_5465001(i_12215331, 1)) || []), parent: null, m_type: NTI1194643, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_12215328;

}
function nsuformatBiggestFloat(f_10260221, format_10260222, precision_10260227, decimalSep_10260228) {
  var result_10260229 = [];

    var precision_10260401 = precision_10260227;
    if ((precision_10260401 == -1)) {
    precision_10260401 = 6;
    }
    
    var res_10260402 = null;
    switch (format_10260222) {
    case 0:
      res_10260402 = f_10260221.toString();
      break;
    case 1:
      res_10260402 = f_10260221.toFixed(precision_10260401);
      break;
    case 2:
      res_10260402 = f_10260221.toExponential(precision_10260401);
      break;
    }
    result_10260229 = nimCopy(null, cstrToNimstr(res_10260402), NTI1188013);
    if (((1.0000000000000000e+00 / f_10260221) == -Infinity)) {
    result_10260229 = nimCopy(null, (makeNimstrLit("-") || []).concat(cstrToNimstr(res_10260402) || []), NTI1188013);
    }
    
    L1: do {
      var i_10260410 = 0;
      var colontmp__17385666 = 0;
      colontmp__17385666 = (result_10260229).length;
      var i_17385667 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_17385667 < colontmp__17385666)) break L3;
            i_10260410 = i_17385667;
            if ((ConstSet12[result_10260229[chckIndx(i_10260410, 0, (result_10260229).length-1)]] != undefined)) {
            result_10260229[chckIndx(i_10260410, 0, (result_10260229).length-1)] = decimalSep_10260228;
            }
            
            i_17385667 = addInt(i_17385667, 1);
          }
      } while(false);
    } while(false);

  return result_10260229;

}
function insert_1565401(x_1565404, x_1565404_Idx, item_1565405, i_1565406) {
    var xl_1565407 = (x_1565404[x_1565404_Idx]).length;
    (x_1565404[x_1565404_Idx].length = chckRange(addInt(xl_1565407, (item_1565405).length), 0, 2147483647));
    var j_1565408 = subInt(xl_1565407, 1);
    L1: do {
        L2: while (true) {
        if (!(i_1565406 <= j_1565408)) break L2;
          x_1565404[x_1565404_Idx][chckIndx(addInt(j_1565408, (item_1565405).length), 0, (x_1565404[x_1565404_Idx]).length-1)] = x_1565404[x_1565404_Idx][chckIndx(j_1565408, 0, (x_1565404[x_1565404_Idx]).length-1)];
          j_1565408 = subInt(j_1565408, 1);
        }
    } while(false);
    j_1565408 = 0;
    L3: do {
        L4: while (true) {
        if (!(j_1565408 < (item_1565405).length)) break L4;
          x_1565404[x_1565404_Idx][chckIndx(addInt(j_1565408, i_1565406), 0, (x_1565404[x_1565404_Idx]).length-1)] = item_1565405[chckIndx(j_1565408, 0, (item_1565405).length-1)];
          j_1565408 = addInt(j_1565408, 1);
        }
    } while(false);

  
}
function nsuRepeatChar(c_9945124, count_9945125) {
  var result_9945126 = [];

    result_9945126 = nimCopy(null, mnewString(count_9945125), NTI1188013);
    L1: do {
      var i_9945135 = 0;
      var colontmp__17385672 = 0;
      colontmp__17385672 = subInt(count_9945125, 1);
      var res_17385673 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_17385673 <= colontmp__17385672)) break L3;
            i_9945135 = res_17385673;
            result_9945126[chckIndx(i_9945135, 0, (result_9945126).length-1)] = c_9945124;
            res_17385673 = addInt(res_17385673, 1);
          }
      } while(false);
    } while(false);

  return result_9945126;

}
function validateUtf8_2380244(s_2380246) {
            var Tmp3;
            var Tmp4;
            var Tmp5;
            var Tmp6;
            var Tmp7;
            var Tmp8;

  var result_2380247 = 0;

  BeforeRet: do {
    var i_2380249 = 0;
    var L_2380250 = (s_2380246).length;
    L1: do {
        L2: while (true) {
        if (!(i_2380249 < L_2380250)) break L2;
          if ((s_2380246[chckIndx(i_2380249, 0, (s_2380246).length-1)] <= 127)) {
          i_2380249 = addInt(i_2380249, 1);
          }
          else {
          if ((((s_2380246[chckIndx(i_2380249, 0, (s_2380246).length-1)] >>> 0) >>> 5) == 6)) {
          if ((s_2380246[chckIndx(i_2380249, 0, (s_2380246).length-1)] < 194)) {
          result_2380247 = i_2380249;
          break BeforeRet;
          }
          
            if (!(addInt(i_2380249, 1) < L_2380250)) Tmp3 = false; else {              Tmp3 = (((s_2380246[chckIndx(addInt(i_2380249, 1), 0, (s_2380246).length-1)] >>> 0) >>> 6) == 2);            }          if (Tmp3) {
          i_2380249 = addInt(i_2380249, 2);
          }
          else {
            result_2380247 = i_2380249;
            break BeforeRet;
          }
          
          }
          else {
          if ((((s_2380246[chckIndx(i_2380249, 0, (s_2380246).length-1)] >>> 0) >>> 4) == 14)) {
            if (!(addInt(i_2380249, 2) < L_2380250)) Tmp5 = false; else {              Tmp5 = (((s_2380246[chckIndx(addInt(i_2380249, 1), 0, (s_2380246).length-1)] >>> 0) >>> 6) == 2);            }            if (!Tmp5) Tmp4 = false; else {              Tmp4 = (((s_2380246[chckIndx(addInt(i_2380249, 2), 0, (s_2380246).length-1)] >>> 0) >>> 6) == 2);            }          if (Tmp4) {
          i_2380249 = addInt(i_2380249, 3);
          }
          else {
            result_2380247 = i_2380249;
            break BeforeRet;
          }
          
          }
          else {
          if ((((s_2380246[chckIndx(i_2380249, 0, (s_2380246).length-1)] >>> 0) >>> 3) == 30)) {
            if (!(addInt(i_2380249, 3) < L_2380250)) Tmp8 = false; else {              Tmp8 = (((s_2380246[chckIndx(addInt(i_2380249, 1), 0, (s_2380246).length-1)] >>> 0) >>> 6) == 2);            }            if (!Tmp8) Tmp7 = false; else {              Tmp7 = (((s_2380246[chckIndx(addInt(i_2380249, 2), 0, (s_2380246).length-1)] >>> 0) >>> 6) == 2);            }            if (!Tmp7) Tmp6 = false; else {              Tmp6 = (((s_2380246[chckIndx(addInt(i_2380249, 3), 0, (s_2380246).length-1)] >>> 0) >>> 6) == 2);            }          if (Tmp6) {
          i_2380249 = addInt(i_2380249, 4);
          }
          else {
            result_2380247 = i_2380249;
            break BeforeRet;
          }
          
          }
          else {
            result_2380247 = i_2380249;
            break BeforeRet;
          }
          }}}
        }
    } while(false);
    result_2380247 = -1;
    break BeforeRet;
  } while (false);

  return result_2380247;

}
function nucruneLen(s_2138025) {
  var result_2138026 = 0;

    result_2138026 = 0;
    var i_2138028 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_2138028 < (s_2138025).length)) break L2;
          if ((s_2138025[chckIndx(i_2138028, 0, (s_2138025).length-1)] <= 127)) {
          i_2138028 = addInt(i_2138028, 1);
          }
          else {
          if ((((s_2138025[chckIndx(i_2138028, 0, (s_2138025).length-1)] >>> 0) >>> 5) == 6)) {
          i_2138028 = addInt(i_2138028, 2);
          }
          else {
          if ((((s_2138025[chckIndx(i_2138028, 0, (s_2138025).length-1)] >>> 0) >>> 4) == 14)) {
          i_2138028 = addInt(i_2138028, 3);
          }
          else {
          if ((((s_2138025[chckIndx(i_2138028, 0, (s_2138025).length-1)] >>> 0) >>> 3) == 30)) {
          i_2138028 = addInt(i_2138028, 4);
          }
          else {
          if ((((s_2138025[chckIndx(i_2138028, 0, (s_2138025).length-1)] >>> 0) >>> 2) == 62)) {
          i_2138028 = addInt(i_2138028, 5);
          }
          else {
          if ((((s_2138025[chckIndx(i_2138028, 0, (s_2138025).length-1)] >>> 0) >>> 1) == 126)) {
          i_2138028 = addInt(i_2138028, 6);
          }
          else {
          i_2138028 = addInt(i_2138028, 1);
          }
          }}}}}
          result_2138026 = addInt(result_2138026, 1);
        }
    } while(false);

  return result_2138026;

}
function alignString_12215222(s_12215224, minimumWidth_12215225, align_12215226, fill_12215227) {
      var Tmp1;

  var result_12215228 = [];

    if ((minimumWidth_12215225 == 0)) {
    result_12215228 = nimCopy(null, s_12215224, NTI1188013);
    }
    else {
      if ((validateUtf8_2380244(s_12215224) == -1)) {
      Tmp1 = nucruneLen(s_12215224);
      }
      else {
      Tmp1 = (s_12215224).length;
      }
      
      var sRuneLen_12215229 = Tmp1;
      var toFill_12215230 = subInt(minimumWidth_12215225, sRuneLen_12215229);
      if ((toFill_12215230 <= 0)) {
      result_12215228 = nimCopy(null, s_12215224, NTI1188013);
      }
      else {
      if (((align_12215226 == 60) || (align_12215226 == 0))) {
      result_12215228 = nimCopy(null, (s_12215224 || []).concat(nsuRepeatChar(fill_12215227, chckRange(toFill_12215230, 0, 2147483647)) || []), NTI1188013);
      }
      else {
      if ((align_12215226 == 94)) {
      var half_12215231 = divInt(toFill_12215230, 2);
      result_12215228 = nimCopy(null, (nsuRepeatChar(fill_12215227, chckRange(half_12215231, 0, 2147483647)) || []).concat(s_12215224 || [],nsuRepeatChar(fill_12215227, chckRange(subInt(toFill_12215230, half_12215231), 0, 2147483647)) || []), NTI1188013);
      }
      else {
        result_12215228 = nimCopy(null, (nsuRepeatChar(fill_12215227, chckRange(toFill_12215230, 0, 2147483647)) || []).concat(s_12215224 || []), NTI1188013);
      }
      }}
    }
    

  return result_12215228;

}
function nsuToUpperAsciiChar(c_9435016) {
  var result_9435017 = 0;

    if ((ConstSet14[c_9435016] != undefined)) {
    result_9435017 = chckRange(subInt(c_9435016, 32), 0, 255);
    }
    else {
      result_9435017 = c_9435016;
    }
    

  return result_9435017;

}
function nsuToUpperAsciiStr(s_9440037) {
  var result_9440038 = [];

    result_9440038 = nimCopy(null, mnewString(chckRange((s_9440037).length, 0, 2147483647)), NTI1188013);
    L1: do {
      var iHEX60gensym11_9445009 = 0;
      var colontmp__14962686 = 0;
      colontmp__14962686 = subInt((s_9440037).length, 1);
      var res_14962687 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_14962687 <= colontmp__14962686)) break L3;
            iHEX60gensym11_9445009 = res_14962687;
            result_9440038[chckIndx(iHEX60gensym11_9445009, 0, (result_9440038).length-1)] = nsuToUpperAsciiChar(s_9440037[chckIndx(iHEX60gensym11_9445009, 0, (s_9440037).length-1)]);
            res_14962687 = addInt(res_14962687, 1);
          }
      } while(false);
    } while(false);

  return result_9440038;

}
function formatValue_16860001(result_16860004, result_16860004_Idx, value_16860005, specifier_16860006) {
    var Tmp1;

  BeforeRet: do {
    if (((specifier_16860006).length == 0)) {
    result_16860004[result_16860004_Idx].push.apply(result_16860004[result_16860004_Idx], cstrToNimstr(nimFloatToString(value_16860005)));;
    break BeforeRet;
    }
    
    var spec_16860007 = parseStandardFormatSpecifier_12215322(specifier_16860006, 0, false);
    var fmode_16860008 = 0;
    switch (spec_16860007.typ) {
    case 101:
    case 69:
      fmode_16860008 = 2;
      break;
    case 102:
    case 70:
      fmode_16860008 = 1;
      break;
    case 103:
    case 71:
      fmode_16860008 = 0;
      break;
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'e\', \'E\', \'f\', \'F\', \'g\', \'G\' but got: ") || []).concat([spec_16860007.typ]), parent: null, m_type: NTI1194643, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    var f_16865002 = [nsuformatBiggestFloat(value_16860005, fmode_16860008, chckRange(spec_16860007.precision, -1, 32), 46)];
    var sign_16865003 = false;
    if ((0.0 <= value_16860005)) {
    if (!((spec_16860007.sign == 45))) {
    sign_16865003 = true;
    if ((value_16860005 == 0.0)) {
    if (((1.0000000000000000e+00 / value_16860005) == Infinity)) {
    insert_1565401(f_16865002, 0, nimCharToStr(spec_16860007.sign), 0);
    }
    
    }
    else {
    insert_1565401(f_16865002, 0, nimCharToStr(spec_16860007.sign), 0);
    }
    
    }
    
    }
    else {
      sign_16865003 = true;
    }
    
    if (spec_16860007.padWithZero) {
    var signStr_16865006 = [];
    if (sign_16865003) {
    signStr_16865006 = nimCopy(null, nimCharToStr(f_16865002[0][chckIndx(0, 0, (f_16865002[0]).length-1)]), NTI1188013);
    f_16865002[0] = nimCopy(null, HEX5BHEX5D_5465068(f_16865002[0], HEX2EHEX2E_5465001(1, 1)), NTI1188013);
    }
    
    var toFill_16875040 = subInt(subInt(spec_16860007.minimumWidth, (f_16865002[0]).length), (sign_16865003 ? 1:0));
    if ((0 < toFill_16875040)) {
    f_16865002[0] = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_16875040, 0, 2147483647)) || []).concat(f_16865002[0] || []), NTI1188013);
    }
    
    if (sign_16865003) {
    f_16865002[0] = nimCopy(null, (signStr_16865006 || []).concat(f_16865002[0] || []), NTI1188013);
    }
    
    }
    
    if ((spec_16860007.align == 0)) {
    Tmp1 = 62;
    }
    else {
    Tmp1 = spec_16860007.align;
    }
    
    var align_16875041 = Tmp1;
    var res_16875042 = alignString_12215222(f_16865002[0], spec_16860007.minimumWidth, align_16875041, spec_16860007.fill);
    if ((ConstSet13[spec_16860007.typ] != undefined)) {
    result_16860004[result_16860004_Idx].push.apply(result_16860004[result_16860004_Idx], nsuToUpperAsciiStr(res_16875042));;
    }
    else {
    result_16860004[result_16860004_Idx].push.apply(result_16860004[result_16860004_Idx], res_16875042);;
    }
    
  } while (false);

  
}
function nsuJoinSep(a_10110018, sep_10110019) {
  var result_10110020 = [];

    if ((0 < (a_10110018).length)) {
    var L_10115009 = mulInt((sep_10110019).length, subInt((a_10110018).length, 1));
    L1: do {
      var i_10115023 = 0;
      var colontmp__17385698 = 0;
      colontmp__17385698 = (a_10110018).length - 1;
      var res_17385699 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_17385699 <= colontmp__17385698)) break L3;
            i_10115023 = res_17385699;
            L_10115009 = addInt(L_10115009, (a_10110018[chckIndx(i_10115023, 0, (a_10110018).length-1)]).length);
            res_17385699 = addInt(res_17385699, 1);
          }
      } while(false);
    } while(false);
    result_10110020 = nimCopy(null, mnewString(0), NTI1188013);
    result_10110020.push.apply(result_10110020, a_10110018[chckIndx(0, 0, (a_10110018).length-1)]);;
    L4: do {
      var i_10115043 = 0;
      var colontmp__17385705 = 0;
      colontmp__17385705 = (a_10110018).length - 1;
      var res_17385706 = 1;
      L5: do {
          L6: while (true) {
          if (!(res_17385706 <= colontmp__17385705)) break L6;
            i_10115043 = res_17385706;
            result_10110020.push.apply(result_10110020, sep_10110019);;
            result_10110020.push.apply(result_10110020, a_10110018[chckIndx(i_10115043, 0, (a_10110018).length-1)]);;
            res_17385706 = addInt(res_17385706, 1);
          }
      } while(false);
    } while(false);
    }
    else {
      result_10110020 = nimCopy(null, [], NTI1188013);
    }
    

  return result_10110020;

}
function sectors2Json_16805614(x_16805623) {
  var result_16805624 = null;

    var cnt_16805626 = 0;
    var lenObj_16805759 = len_16500198(x_16805623);
    result_16805624 = {};
    L1: do {
      var k_16805767 = [];
      var v_16805768 = null;
      var L_17385643 = len_16500198(x_16805623);
      if ((0 < x_16805623.counter)) {
      var h_17385644 = x_16805623.first;
      L2: do {
          L3: while (true) {
          if (!(0 <= h_17385644)) break L3;
            var nxt_17385646 = x_16805623.data[chckIndx(h_17385644, 0, (x_16805623.data).length-1)].Field1;
            if (isFilled_11481218(x_16805623.data[chckIndx(h_17385644, 0, (x_16805623.data).length-1)].Field0)) {
            k_16805767 = x_16805623.data[chckIndx(h_17385644, 0, (x_16805623.data).length-1)].Field2;
            v_16805768 = x_16805623.data[chckIndx(h_17385644, 0, (x_16805623.data).length-1)].Field3;
            var oS_16805769 = {};
            oS_16805769["postalCode"] = (toJSStr(v_16805768.postalCode));
            oS_16805769["district"] = (toJSStr(v_16805768.district));
            oS_16805769["folkDistrict"] = (toJSStr(v_16805768.folkDistrict));
            oS_16805769["city"] = (toJSStr(v_16805768.city));
            oS_16805769["pFix"] = (v_16805768.pFix);
            oS_16805769["streets"] = {};
            L4: do {
              var kStr_16835244 = [];
              var vStr_16835245 = [];
              var L_17385639 = len_16825548(v_16805768.streets);
              if ((0 < v_16805768.streets.counter)) {
              var h_17385640 = v_16805768.streets.first;
              L5: do {
                  L6: while (true) {
                  if (!(0 <= h_17385640)) break L6;
                    var nxt_17385642 = v_16805768.streets.data[chckIndx(h_17385640, 0, (v_16805768.streets.data).length-1)].Field1;
                    if (isFilled_11481218(v_16805768.streets.data[chckIndx(h_17385640, 0, (v_16805768.streets.data).length-1)].Field0)) {
                    kStr_16835244 = v_16805768.streets.data[chckIndx(h_17385640, 0, (v_16805768.streets.data).length-1)].Field2;
                    vStr_16835245 = v_16805768.streets.data[chckIndx(h_17385640, 0, (v_16805768.streets.data).length-1)].Field3;
                    var seqLnk_16835298 = newSeq_16835256(0);
                    L7: do {
                      var strLnk_16845214 = null;
                      var strLnk_16845214_Idx = 0;
                      var i_17385636 = 0;
                      var L_17385637 = (vStr_16835245).length;
                      L8: do {
                          L9: while (true) {
                          if (!(i_17385636 < L_17385637)) break L9;
                            strLnk_16845214 = vStr_16835245; strLnk_16845214_Idx = chckIndx(i_17385636, 0, (vStr_16835245).length-1);
                            var lnkO_16845215 = {};
                            lnkO_16845215["linkId"] = (strLnk_16845214[strLnk_16845214_Idx].linkId);
                            lnkO_16845215["name"] = (toJSStr(strLnk_16845214[strLnk_16845214_Idx].name));
                            lnkO_16845215["cityId"] = (strLnk_16845214[strLnk_16845214_Idx].cityId);
                            lnkO_16845215["districtId"] = (strLnk_16845214[strLnk_16845214_Idx].districtId);
                            lnkO_16845215["postalCode"] = (toJSStr(strLnk_16845214[strLnk_16845214_Idx].postalCode));
                            lnkO_16845215["neighborLinks"] = (strLnk_16845214[strLnk_16845214_Idx].neighborLinks);
                            var gms_16855427 = newSeq_1840232(0);
                            L10: do {
                              var g_16855435 = null;
                              var g_16855435_Idx = 0;
                              var i_17385632 = 0;
                              var L_17385633 = (strLnk_16845214[strLnk_16845214_Idx].geometry).length;
                              L11: do {
                                  L12: while (true) {
                                  if (!(i_17385632 < L_17385633)) break L12;
                                    g_16855435 = strLnk_16845214[strLnk_16845214_Idx].geometry; g_16855435_Idx = chckIndx(i_17385632, 0, (strLnk_16845214[strLnk_16845214_Idx].geometry).length-1);
                                    var lat_16855436 = g_16855435[g_16855435_Idx].lat;
                                    var lng_16855437 = g_16855435[g_16855435_Idx].lng;
                                    var fmtRes_16855438 = [mnewString(0)];
                                    formatValue_16860001(fmtRes_16855438, 0, lat_16855436, makeNimstrLit("0.5f"));
                                    var Tmp13 = nimCopy(null, fmtRes_16855438[0], NTI1188013);
                                    gms_16855427.push(Tmp13);;
                                    var fmtRes_16875087 = [mnewString(0)];
                                    formatValue_16860001(fmtRes_16875087, 0, lng_16855437, makeNimstrLit("0.5f"));
                                    var Tmp14 = nimCopy(null, fmtRes_16875087[0], NTI1188013);
                                    gms_16855427.push(Tmp14);;
                                    i_17385632 = addInt(i_17385632, 1);
                                    if (!(((strLnk_16845214[strLnk_16845214_Idx].geometry).length == L_17385633))) {
                                    failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                    }
                                    
                                  }
                              } while(false);
                            } while(false);
                            lnkO_16845215["geometry"] = (toJSStr(nsuJoinSep(gms_16855427, makeNimstrLit(","))));
                            lnkO_16845215["readOnly"] = (strLnk_16845214[strLnk_16845214_Idx].readOnly);
                            lnkO_16845215["addedToMap"] = (strLnk_16845214[strLnk_16845214_Idx].addedToMap);
                            lnkO_16845215["addedToSector"] = (strLnk_16845214[strLnk_16845214_Idx].addedToSector);
                            seqLnk_16835298.push(lnkO_16845215);;
                            i_17385636 = addInt(i_17385636, 1);
                            if (!(((vStr_16835245).length == L_17385637))) {
                            failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                            }
                            
                          }
                      } while(false);
                    } while(false);
                    oS_16805769["streets"][toJSStr(kStr_16835244)] = seqLnk_16835298;
                    if (!((len_16825548(v_16805768.streets) == L_17385639))) {
                    failedAssertImpl_1305480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
                    }
                    
                    }
                    
                    h_17385640 = nxt_17385642;
                  }
              } while(false);
              }
              
            } while(false);
            oS_16805769["shownOnMap"] = (v_16805768.shownOnMap);
            oS_16805769["exclude"] = (v_16805768.exclude);
            result_16805624[toJSStr(k_16805767)] = oS_16805769;
            if (!((len_16500198(x_16805623) == L_17385643))) {
            failedAssertImpl_1305480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_17385644 = nxt_17385646;
          }
      } while(false);
      }
      
    } while(false);

  return result_16805624;

}
function save_16886451() {
    if ((ministryArea_16280631[0] == null)) {
    ministryArea_16280631[0] = {name: nimCopy(null, nameArea_16280632[0], NTI1188013), cities: initOrderedTable_16886460(32)};
    }
    
    HEX5BHEX5DHEX3D_16895730(ministryArea_16280631[0].cities, addrCity_16290633[0], {allLinks: nimCopy(null, allLinks_16240629[0], NTI16211129), allStreets: nimCopy(null, allStreets_16250629[0], NTI16211152), cachedTiles: nimCopy(null, cachedTiles_16260629[0], NTI16211178), allSectors: nimCopy(null, allSectors_16270629[0], NTI16211201), lastPostfix: nimCopy(null, lastPostfix_16280629[0], NTI16211227)});
    var ser_16965696 = JSON.stringify(ministryArea_16280631[0]);
    var fname_16965697 = (addrCity_16290633[0] || []).concat(makeNimstrLit("_") || [],HEX24_14695125(now_14170371()) || [],makeNimstrLit(".json") || []);
    saveFunc_16665033(ser_16965696, fname_16965697);
    var citiesExp_16965698 = newJObject_13051266();
    var ministryAreaExp_16965699 = newJObject_13051266();
    add_13100223(ministryAreaExp_16965699, makeNimstrLit("name"), newJString_13051100(nameArea_16280632[0]));
    var allSectorsExp_16965701 = newJArray_13060657();
    L1: do {
      var k_16965709 = [];
      var v_16965710 = null;
      var L_17385577 = len_16500198(allSectors_16270629[0]);
      if ((0 < allSectors_16270629[0].counter)) {
      var h_17385578 = allSectors_16270629[0].first;
      L2: do {
          L3: while (true) {
          if (!(0 <= h_17385578)) break L3;
            var nxt_17385580 = allSectors_16270629[0].data[chckIndx(h_17385578, 0, (allSectors_16270629[0].data).length-1)].Field1;
            if (isFilled_11481218(allSectors_16270629[0].data[chckIndx(h_17385578, 0, (allSectors_16270629[0].data).length-1)].Field0)) {
            k_16965709 = allSectors_16270629[0].data[chckIndx(h_17385578, 0, (allSectors_16270629[0].data).length-1)].Field2;
            v_16965710 = allSectors_16270629[0].data[chckIndx(h_17385578, 0, (allSectors_16270629[0].data).length-1)].Field3;
            var s_16965711 = newJObject_13051266();
            add_13100223(s_16965711, makeNimstrLit("city"), newJString_13051100(v_16965710.city));
            add_13090020(allSectorsExp_16965701, s_16965711);
            if (!((len_16500198(allSectors_16270629[0]) == L_17385577))) {
            failedAssertImpl_1305480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_17385578 = nxt_17385580;
          }
      } while(false);
      }
      
    } while(false);
    var fnameExp_16965714 = (addrCity_16290633[0] || []).concat(makeNimstrLit("_Exp_") || [],HEX24_14695125(now_14170371()) || [],makeNimstrLit(".json") || []);
    var strR_16965715 = sectors2Json_16805614(allSectors_16270629[0]);
    saveFunc_16665033(JSON.stringify(strR_16965715), fnameExp_16965714);

  
}
function setAttr_15000105(n_15000107, key_15000108, val_15000109) {
  BeforeRet: do {
    if (((n_15000107.attrs).length == 0)) {
    n_15000107.attrs = nimCopy(null, [key_15000108, val_15000109], NTI15000125);
    }
    else {
      L1: do {
        var i_15000138 = 0;
        var colontmp__17385712 = 0;
        colontmp__17385712 = subInt((n_15000107.attrs).length, 2);
        var res_17385713 = 0;
        L2: do {
            L3: while (true) {
            if (!(res_17385713 <= colontmp__17385712)) break L3;
              i_15000138 = res_17385713;
              if ((n_15000107.attrs[chckIndx(i_15000138, 0, (n_15000107.attrs).length-1)] == key_15000108)) {
              n_15000107.attrs[chckIndx(addInt(i_15000138, 1), 0, (n_15000107.attrs).length-1)] = val_15000109;
              break BeforeRet;
              }
              
              res_17385713 = addInt(res_17385713, 2);
            }
        } while(false);
      } while(false);
      n_15000107.attrs.push(key_15000108);;
      n_15000107.attrs.push(val_15000109);;
    }
    
  } while (false);

  
}
function rawGet_16525230(t_16525234, key_16525235, hc_16525236, hc_16525236_Idx) {
            var Tmp3;

  var result_16525237 = 0;

  BeforeRet: do {
    hc_16525236[hc_16525236_Idx] = hash_11460214(key_16525235);
    if ((hc_16525236[hc_16525236_Idx] == 0)) {
    hc_16525236[hc_16525236_Idx] = 314159265;
    }
    
    if (((t_16525234.data).length == 0)) {
    result_16525237 = -1;
    break BeforeRet;
    }
    
    var h_16535138 = (hc_16525236[hc_16525236_Idx] & (t_16525234.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_11481218(t_16525234.data[chckIndx(h_16535138, 0, (t_16525234.data).length-1)].Field0)) break L2;
            if (!(t_16525234.data[chckIndx(h_16535138, 0, (t_16525234.data).length-1)].Field0 == hc_16525236[hc_16525236_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_16525234.data[chckIndx(h_16535138, 0, (t_16525234.data).length-1)].Field2, key_16525235);            }          if (Tmp3) {
          result_16525237 = h_16535138;
          break BeforeRet;
          }
          
          h_16535138 = nextTry_11485014(h_16535138, (t_16525234.data).length - 1);
        }
    } while(false);
    result_16525237 = subInt(-1, h_16535138);
  } while (false);

  return result_16525237;

}
function HEX5BHEX5D_16525219(t_16525225, key_16525226) {
  var result_16525228 = null;
  var result_16525228_Idx = 0;

    var hcHEX60gensym92_16525229 = [0];
    var indexHEX60gensym92_16535656 = rawGet_16525230(t_16525225, key_16525226, hcHEX60gensym92_16525229, 0);
    if ((0 <= indexHEX60gensym92_16535656)) {
    result_16525228 = t_16525225.data[chckIndx(indexHEX60gensym92_16535656, 0, (t_16525225.data).length-1)]; result_16525228_Idx = "Field3";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_16525226 || []), parent: null, m_type: NTI1194645, name: null, trace: [], up: null}, "KeyError");
    }
    

  return [result_16525228, result_16525228_Idx];

}
function rawGet_16565621(t_16565626, key_16565627, hc_16565628, hc_16565628_Idx) {
            var Tmp3;

  var result_16565629 = 0;

  BeforeRet: do {
    hc_16565628[hc_16565628_Idx] = hash_11460214(key_16565627);
    if ((hc_16565628[hc_16565628_Idx] == 0)) {
    hc_16565628[hc_16565628_Idx] = 314159265;
    }
    
    if (((t_16565626.data).length == 0)) {
    result_16565629 = -1;
    break BeforeRet;
    }
    
    var h_16575138 = (hc_16565628[hc_16565628_Idx] & (t_16565626.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_11481218(t_16565626.data[chckIndx(h_16575138, 0, (t_16565626.data).length-1)].Field0)) break L2;
            if (!(t_16565626.data[chckIndx(h_16575138, 0, (t_16565626.data).length-1)].Field0 == hc_16565628[hc_16565628_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_16565626.data[chckIndx(h_16575138, 0, (t_16565626.data).length-1)].Field2, key_16565627);            }          if (Tmp3) {
          result_16565629 = h_16575138;
          break BeforeRet;
          }
          
          h_16575138 = nextTry_11485014(h_16575138, (t_16565626.data).length - 1);
        }
    } while(false);
    result_16565629 = subInt(-1, h_16575138);
  } while (false);

  return result_16565629;

}
function mustRehash_16590601(t_16590604) {
  var result_16590605 = false;

    if (!((t_16590604.counter < (t_16590604.data).length))) {
    failedAssertImpl_1305480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_16590605 = ((mulInt((t_16590604.data).length, 2) < mulInt(t_16590604.counter, 3)) || (subInt((t_16590604.data).length, t_16590604.counter) < 4));

  return result_16590605;

}
function rawInsert_16616359(t_16616365, data_16616368, data_16616368_Idx, key_16616369, val_16616371, hc_16616372, h_16616373) {
    data_16616368[data_16616368_Idx][chckIndx(h_16616373, 0, (data_16616368[data_16616368_Idx]).length-1)].Field2 = nimCopy(null, key_16616369, NTI1188013);
    data_16616368[data_16616368_Idx][chckIndx(h_16616373, 0, (data_16616368[data_16616368_Idx]).length-1)].Field3 = val_16616371;
    data_16616368[data_16616368_Idx][chckIndx(h_16616373, 0, (data_16616368[data_16616368_Idx]).length-1)].Field0 = hc_16616372;
    data_16616368[data_16616368_Idx][chckIndx(h_16616373, 0, (data_16616368[data_16616368_Idx]).length-1)].Field1 = -1;
    if ((t_16616365.first < 0)) {
    t_16616365.first = h_16616373;
    }
    
    if ((0 <= t_16616365.last)) {
    data_16616368[data_16616368_Idx][chckIndx(t_16616365.last, 0, (data_16616368[data_16616368_Idx]).length-1)].Field1 = h_16616373;
    }
    
    t_16616365.last = h_16616373;

  
}
function enlarge_16615180(t_16615186) {
          var Tmp6;
          var Tmp7;

    var n_16615194 = [];
    n_16615194 = new Array(chckRange(mulInt((t_16615186.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_16615186.data).length, 2), 0, 2147483647);++i) {n_16615194[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    var h_16615333 = t_16615186.first;
    t_16615186.first = -1;
    t_16615186.last = -1;
    var Tmp1 = t_16615186.data; t_16615186.data = n_16615194; n_16615194 = Tmp1;    L2: do {
        L3: while (true) {
        if (!(0 <= h_16615333)) break L3;
          var nxt_16615496 = n_16615194[chckIndx(h_16615333, 0, (n_16615194).length-1)].Field1;
          var eh_16615652 = n_16615194[chckIndx(h_16615333, 0, (n_16615194).length-1)].Field0;
          if (isFilled_11481218(eh_16615652)) {
          var j_16615659 = (eh_16615652 & (t_16615186.data).length - 1);
          L4: do {
              L5: while (true) {
              if (!isFilled_11481218(t_16615186.data[chckIndx(j_16615659, 0, (t_16615186.data).length-1)].Field0)) break L5;
                j_16615659 = nextTry_11485014(j_16615659, (t_16615186.data).length - 1);
              }
          } while(false);
          Tmp6 = n_16615194[chckIndx(h_16615333, 0, (n_16615194).length-1)].Field2;
          n_16615194[chckIndx(h_16615333, 0, (n_16615194).length-1)].Field2 = genericReset(n_16615194[chckIndx(h_16615333, 0, (n_16615194).length-1)].Field2, NTI1188013);
          Tmp7 = n_16615194[chckIndx(h_16615333, 0, (n_16615194).length-1)].Field3;
          n_16615194[chckIndx(h_16615333, 0, (n_16615194).length-1)].Field3 = genericReset(n_16615194[chckIndx(h_16615333, 0, (n_16615194).length-1)].Field3, NTI16211023);
          rawInsert_16616359(t_16615186, t_16615186, "data", Tmp6, Tmp7, n_16615194[chckIndx(h_16615333, 0, (n_16615194).length-1)].Field0, j_16615659);
          }
          
          h_16615333 = nxt_16615496;
        }
    } while(false);

  
}
function rawGetKnownHC_16617195(t_16617200, key_16617201, hc_16617202) {
  var result_16617203 = 0;

  BeforeRet: do {
    if (((t_16617200.data).length == 0)) {
    result_16617203 = -1;
    break BeforeRet;
    }
    
    var h_16620138 = (hc_16617202 & (t_16617200.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_11481218(t_16617200.data[chckIndx(h_16620138, 0, (t_16617200.data).length-1)].Field0)) break L2;
          if (((t_16617200.data[chckIndx(h_16620138, 0, (t_16617200.data).length-1)].Field0 == hc_16617202) && eqStrings(t_16617200.data[chckIndx(h_16620138, 0, (t_16617200.data).length-1)].Field2, key_16617201))) {
          result_16617203 = h_16620138;
          break BeforeRet;
          }
          
          h_16620138 = nextTry_11485014(h_16620138, (t_16617200.data).length - 1);
        }
    } while(false);
    result_16617203 = subInt(-1, h_16620138);
  } while (false);

  return result_16617203;

}
function HEX5BHEX5DHEX3D_16550347(t_16550353, key_16550354, val_16550356) {
    if (((t_16550353.data).length == 0)) {
    var correctSizeHEX60gensym69_16560001 = slotsNeeded_11485048(32);
    t_16550353.counter = 0;
    t_16550353.data = new Array(chckRange(correctSizeHEX60gensym69_16560001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym69_16560001, 0, 2147483647);++i) {t_16550353.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    t_16550353.first = -1;
    t_16550353.last = -1;
    }
    
    var hc_16565601 = [0];
    var index_16575641 = rawGet_16565621(t_16550353, key_16550354, hc_16565601, 0);
    if ((0 <= index_16575641)) {
    t_16550353.data[chckIndx(index_16575641, 0, (t_16550353.data).length-1)].Field3 = val_16550356;
    }
    else {
      if (((t_16550353.data).length == 0)) {
      var correctSizeHEX60gensym74_16585001 = slotsNeeded_11485048(32);
      t_16550353.counter = 0;
      t_16550353.data = new Array(chckRange(correctSizeHEX60gensym74_16585001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym74_16585001, 0, 2147483647);++i) {t_16550353.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}      t_16550353.first = -1;
      t_16550353.last = -1;
      }
      
      if (mustRehash_16590601(t_16550353)) {
      enlarge_16615180(t_16550353);
      index_16575641 = rawGetKnownHC_16617195(t_16550353, key_16550354, hc_16565601[0]);
      }
      
      index_16575641 = subInt(-1, index_16575641);
      rawInsert_16616359(t_16550353, t_16550353, "data", key_16550354, val_16550356, hc_16565601[0], index_16575641);
      t_16550353.counter = addInt(t_16550353.counter, 1);
    }
    

  
}
function rawGet_16620854(t_16620858, key_16620859, hc_16620860, hc_16620860_Idx) {
            var Tmp3;

  var result_16620861 = 0;

  BeforeRet: do {
    hc_16620860[hc_16620860_Idx] = hash_11460214(key_16620859);
    if ((hc_16620860[hc_16620860_Idx] == 0)) {
    hc_16620860[hc_16620860_Idx] = 314159265;
    }
    
    if (((t_16620858.data).length == 0)) {
    result_16620861 = -1;
    break BeforeRet;
    }
    
    var h_16630138 = (hc_16620860[hc_16620860_Idx] & (t_16620858.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_11481218(t_16620858.data[chckIndx(h_16630138, 0, (t_16620858.data).length-1)].Field0)) break L2;
            if (!(t_16620858.data[chckIndx(h_16630138, 0, (t_16620858.data).length-1)].Field0 == hc_16620860[hc_16620860_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_16620858.data[chckIndx(h_16630138, 0, (t_16620858.data).length-1)].Field2, key_16620859);            }          if (Tmp3) {
          result_16620861 = h_16630138;
          break BeforeRet;
          }
          
          h_16630138 = nextTry_11485014(h_16630138, (t_16620858.data).length - 1);
        }
    } while(false);
    result_16620861 = subInt(-1, h_16630138);
  } while (false);

  return result_16620861;

}
function HEX5BHEX5D_16620843(t_16620849, key_16620850) {
  var result_16620852 = null;
  var result_16620852_Idx = 0;

    var hcHEX60gensym92_16620853 = [0];
    var indexHEX60gensym92_16630626 = rawGet_16620854(t_16620849, key_16620850, hcHEX60gensym92_16620853, 0);
    if ((0 <= indexHEX60gensym92_16630626)) {
    result_16620852 = t_16620849.data[chckIndx(indexHEX60gensym92_16630626, 0, (t_16620849.data).length-1)]; result_16620852_Idx = "Field3";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_16620850 || []), parent: null, m_type: NTI1194645, name: null, trace: [], up: null}, "KeyError");
    }
    

  return [result_16620852, result_16620852_Idx];

}
function id_16485026(s_16485028) {
  var result_16485029 = [];

    result_16485029 = nimCopy(null, (s_16485028.postalCode || []).concat(makeNimstrLit("-") || [],cstrToNimstr((s_16485028.pFix)+"") || []), NTI1188013);

  return result_16485029;

}
function name_16481057(s_16481059) {
    var Tmp1;

  var result_16481060 = [];

    if (!(eqStrings(s_16481059.folkDistrict, []))) {
    Tmp1 = s_16481059.folkDistrict;
    }
    else {
    Tmp1 = s_16481059.district;
    }
    
    result_16481060 = nimCopy(null, nucStrip(nsuJoinSep([(s_16481059.postalCode || []).concat(makeNimstrLit("-") || [],cstrToNimstr((s_16481059.pFix)+"") || []), nimCopy(null, s_16481059.city, NTI1188013), nimCopy(null, Tmp1, NTI1188013)], makeNimstrLit(" ")), true, true, unicodeSpaces_3034041), NTI1188013);

  return result_16481060;

}
function hash_16500041(x_16500043) {
  var result_16500044 = 0;

    result_16500044 = HEX21HEX26_11407270(hash_11460214(id_16485026(x_16500043)), hash_11460214(name_16481057(x_16500043)));
    result_16500044 = HEX21HEX24_11407305(result_16500044);

  return result_16500044;

}
function rawGet_16510378(t_16510382, key_16510383, hc_16510384, hc_16510384_Idx) {
            var Tmp3;

  var result_16510385 = 0;

  BeforeRet: do {
    hc_16510384[hc_16510384_Idx] = hash_16500041(key_16510383);
    if ((hc_16510384[hc_16510384_Idx] == 0)) {
    hc_16510384[hc_16510384_Idx] = 314159265;
    }
    
    if (((t_16510382.data).length == 0)) {
    result_16510385 = -1;
    break BeforeRet;
    }
    
    var h_16520138 = (hc_16510384[hc_16510384_Idx] & (t_16510382.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_11481218(t_16510382.data[chckIndx(h_16520138, 0, (t_16510382.data).length-1)].Field0)) break L2;
            if (!(t_16510382.data[chckIndx(h_16520138, 0, (t_16510382.data).length-1)].Field0 == hc_16510384[hc_16510384_Idx])) Tmp3 = false; else {              Tmp3 = (t_16510382.data[chckIndx(h_16520138, 0, (t_16510382.data).length-1)].Field1 == key_16510383);            }          if (Tmp3) {
          result_16510385 = h_16520138;
          break BeforeRet;
          }
          
          h_16520138 = nextTry_11485014(h_16520138, (t_16510382.data).length - 1);
        }
    } while(false);
    result_16510385 = subInt(-1, h_16520138);
  } while (false);

  return result_16510385;

}
function HEX5BHEX5D_16510367(t_16510373, key_16510374) {
  var result_16510376 = null;
  var result_16510376_Idx = 0;

    var hcHEX60gensym22_16510377 = [0];
    var indexHEX60gensym22_16520646 = rawGet_16510378(t_16510373, key_16510374, hcHEX60gensym22_16510377, 0);
    if ((0 <= indexHEX60gensym22_16520646)) {
    result_16510376 = t_16510373.data[chckIndx(indexHEX60gensym22_16520646, 0, (t_16510373.data).length-1)]; result_16510376_Idx = "Field2";
    }
    else {
      raiseException({message: makeNimstrLit("key not found"), parent: null, m_type: NTI1194645, name: null, trace: [], up: null}, "KeyError");
    }
    

  return [result_16510376, result_16510376_Idx];

}
function removeAllSectorFromMap_16500062() {
            var Tmp5;
            var Tmp6;

    L1: do {
      var s_16510215 = null;
      var s_16510215_Idx = 0;
      var L_17385737 = len_16500198(allSectors_16270629[0]);
      if ((0 < allSectors_16270629[0].counter)) {
      var h_17385738 = allSectors_16270629[0].first;
      L2: do {
          L3: while (true) {
          if (!(0 <= h_17385738)) break L3;
            var nxt_17385740 = allSectors_16270629[0].data[chckIndx(h_17385738, 0, (allSectors_16270629[0].data).length-1)].Field1;
            if (isFilled_11481218(allSectors_16270629[0].data[chckIndx(h_17385738, 0, (allSectors_16270629[0].data).length-1)].Field0)) {
            s_16510215 = allSectors_16270629[0].data[chckIndx(h_17385738, 0, (allSectors_16270629[0].data).length-1)]; s_16510215_Idx = "Field3";
            s_16510215[s_16510215_Idx].shownOnMap = false;
++excHandler;
            Tmp5 = framePtr;
            try {
            (Tmp6 = HEX5BHEX5D_16510367(sectorGrp_16290629[0], s_16510215[s_16510215_Idx]), Tmp6)[0][Tmp6[1]].removeAll();
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp5;
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp5;
            }
            if (!((len_16500198(allSectors_16270629[0]) == L_17385737))) {
            failedAssertImpl_1305480(makeNimstrLit("tables.nim(1787, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_17385738 = nxt_17385740;
          }
      } while(false);
      }
      
    } while(false);
    redraw_15780246(kxi__);

  
}
function load_16525065(d_16525067) {
    var Tmp2;
    var Tmp3;
            var Tmp8;
            var Tmp9;
            var Tmp10;

++excHandler;
    Tmp2 = framePtr;
    try {
    var city_16540028 = (Tmp3 = HEX5BHEX5D_16525219(d_16525067.cities, addrCity_16290633[0]), Tmp3)[0][Tmp3[1]];
    nimCopy(allLinks_16240629[0], city_16540028.allLinks, NTI16211129);
    nimCopy(allStreets_16250629[0], city_16540028.allStreets, NTI16211152);
    nimCopy(cachedTiles_16260629[0], city_16540028.cachedTiles, NTI16211178);
    L4: do {
      var k_16550229 = [];
      var v_16550230 = null;
      var L_17385723 = len_16500198(city_16540028.allSectors);
      if ((0 < city_16540028.allSectors.counter)) {
      var h_17385724 = city_16540028.allSectors.first;
      L5: do {
          L6: while (true) {
          if (!(0 <= h_17385724)) break L6;
            var nxt_17385726 = city_16540028.allSectors.data[chckIndx(h_17385724, 0, (city_16540028.allSectors.data).length-1)].Field1;
            if (isFilled_11481218(city_16540028.allSectors.data[chckIndx(h_17385724, 0, (city_16540028.allSectors.data).length-1)].Field0)) {
            k_16550229 = city_16540028.allSectors.data[chckIndx(h_17385724, 0, (city_16540028.allSectors.data).length-1)].Field2;
            v_16550230 = city_16540028.allSectors.data[chckIndx(h_17385724, 0, (city_16540028.allSectors.data).length-1)].Field3;
            HEX5BHEX5DHEX3D_16550347(allSectors_16270629[0], k_16550229, v_16550230);
++excHandler;
            Tmp8 = framePtr;
            try {
            (Tmp9 = HEX5BHEX5D_16620843(allSectors_16270629[0], k_16550229), Tmp9)[0][Tmp9[1]].folkDistrict = nimCopy(null, v_16550230.folkDistrict, NTI1188013);
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp8;
            (Tmp10 = HEX5BHEX5D_16620843(allSectors_16270629[0], k_16550229), Tmp10)[0][Tmp10[1]].folkDistrict = nimCopy(null, [], NTI1188013);
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp8;
            }
            if (!((len_16500198(city_16540028.allSectors) == L_17385723))) {
            failedAssertImpl_1305480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_17385724 = nxt_17385726;
          }
      } while(false);
      }
      
    } while(false);
    nimCopy(lastPostfix_16280629[0], city_16540028.lastPostfix, NTI16211227);
    redraw_15780246(kxi__);
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
    framePtr = Tmp2;
    window.alert(("Сначала кликнуть по городу на карте\n с каким надо работать."));
    lastJSError = prevJSError;
    } finally {
    framePtr = Tmp2;
    }
    removeAllSectorFromMap_16500062();

  
}
function hasKey_17185239(t_17185244, key_17185245) {
  var result_17185246 = false;

    var hc_17185247 = [0];
    result_17185246 = (0 <= rawGet_16425602(t_17185244, key_17185245, hc_17185247, 0));

  return result_17185246;

}
function HEX5BHEX5D_17185420(t_17185426, key_17185427) {
  var result_17185429 = null;
  var result_17185429_Idx = 0;

    var hcHEX60gensym22_17185430 = [0];
    var indexHEX60gensym22_17185439 = rawGet_16425602(t_17185426, key_17185427, hcHEX60gensym22_17185430, 0);
    if ((0 <= indexHEX60gensym22_17185439)) {
    result_17185429 = t_17185426.data[chckIndx(indexHEX60gensym22_17185439, 0, (t_17185426.data).length-1)]; result_17185429_Idx = "Field2";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(cstrToNimstr((key_17185427)+"") || []), parent: null, m_type: NTI1194645, name: null, trace: [], up: null}, "KeyError");
    }
    

  return [result_17185429, result_17185429_Idx];

}
function runeLenAt_2138128(s_2138130, i_2138131) {
  var result_2138132 = 0;

    if ((s_2138130[chckIndx(i_2138131, 0, (s_2138130).length-1)] <= 127)) {
    result_2138132 = 1;
    }
    else {
    if ((((s_2138130[chckIndx(i_2138131, 0, (s_2138130).length-1)] >>> 0) >>> 5) == 6)) {
    result_2138132 = 2;
    }
    else {
    if ((((s_2138130[chckIndx(i_2138131, 0, (s_2138130).length-1)] >>> 0) >>> 4) == 14)) {
    result_2138132 = 3;
    }
    else {
    if ((((s_2138130[chckIndx(i_2138131, 0, (s_2138130).length-1)] >>> 0) >>> 3) == 30)) {
    result_2138132 = 4;
    }
    else {
    if ((((s_2138130[chckIndx(i_2138131, 0, (s_2138130).length-1)] >>> 0) >>> 2) == 62)) {
    result_2138132 = 5;
    }
    else {
    if ((((s_2138130[chckIndx(i_2138131, 0, (s_2138130).length-1)] >>> 0) >>> 1) == 126)) {
    result_2138132 = 6;
    }
    else {
      result_2138132 = 1;
    }
    }}}}}

  return result_2138132;

}
function runeOffset_2760259(s_2760261, pos_2760262, start_2760263) {
  var result_2760264 = 0;

  BeforeRet: do {
    var i_2760266 = 0;
    var o_2760267 = start_2760263;
    L1: do {
        L2: while (true) {
        if (!(i_2760266 < pos_2760262)) break L2;
          o_2760267 = addInt(o_2760267, chckRange(runeLenAt_2138128(s_2760261, o_2760267), 0, 2147483647));
          if (((s_2760261).length <= o_2760267)) {
          result_2760264 = -1;
          break BeforeRet;
          }
          
          i_2760266 = addInt(i_2760266, 1);
        }
    } while(false);
    result_2760264 = o_2760267;
    break BeforeRet;
  } while (false);

  return result_2760264;

}
function formatValue_12260080(result_12260083, result_12260083_Idx, value_12260084, specifier_12260085) {
    var spec_12260086 = parseStandardFormatSpecifier_12215322(specifier_12260085, 0, false);
    var value_12260087 = nimCopy(null, value_12260084, NTI1188013);
    switch (spec_12260086.typ) {
    case 115:
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for string, expected \'s\', but got ") || []).concat([spec_12260086.typ]), parent: null, m_type: NTI1194643, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    if (!((spec_12260086.precision == -1))) {
    if ((spec_12260086.precision < nucruneLen(value_12260087))) {
    (value_12260087.length = chckRange(runeOffset_2760259(value_12260087, chckRange(spec_12260086.precision, 0, 2147483647), 0), 0, 2147483647));
    }
    
    }
    
    result_12260083[result_12260083_Idx].push.apply(result_12260083[result_12260083_Idx], alignString_12215222(value_12260087, spec_12260086.minimumWidth, spec_12260086.align, spec_12260086.fill));;

  
}
function toHexImpl_9765241(x_9765243, len_9765244, handleNegative_9765245) {
  var result_9765246 = [];

    var n_9765248 = x_9765243;
    result_9765246 = nimCopy(null, mnewString(len_9765244), NTI1188013);
    L1: do {
      var j_9765255 = 0;
      var colontmp__17385760 = 0;
      colontmp__17385760 = subInt(len_9765244, 1);
      var res_17385765 = colontmp__17385760;
      L2: do {
          L3: while (true) {
          if (!(0 <= res_17385765)) break L3;
            j_9765255 = res_17385765;
            result_9765246[chckIndx(j_9765255, 0, (result_9765246).length-1)] = makeNimstrLit("0123456789ABCDEF")[chckIndx((n_9765248 & 15), 0, (makeNimstrLit("0123456789ABCDEF")).length-1)];
            n_9765248 = ((n_9765248 >>> 0) >>> 4);
            if (((n_9765248 == 0) && handleNegative_9765245)) {
            n_9765248 = 4294967295;
            }
            
            res_17385765 = subInt(res_17385765, 1);
          }
      } while(false);
    } while(false);

  return result_9765246;

}
function toHex_10225145(x_10225148, len_10225149) {
  var result_10225150 = [];

    result_10225150 = nimCopy(null, toHexImpl_9765241((x_10225148 >>> 0), len_10225149, (x_10225148 < 0)), NTI1188013);

  return result_10225150;

}
function encodeUrl_11151140(s_11151142, usePlus_11151143) {
    var Tmp1;

  var result_11151144 = [];

    result_11151144 = nimCopy(null, mnewString(0), NTI1188013);
    if (usePlus_11151143) {
    Tmp1 = makeNimstrLit("+");
    }
    else {
    Tmp1 = makeNimstrLit("%20");
    }
    
    var fromSpace_11151152 = nimCopy(null, Tmp1, NTI1188013);
    L2: do {
      var c_11151154 = 0;
      var i_17385755 = 0;
      var L_17385756 = (s_11151142).length;
      L3: do {
          L4: while (true) {
          if (!(i_17385755 < L_17385756)) break L4;
            c_11151154 = s_11151142[chckIndx(i_17385755, 0, (s_11151142).length-1)];
            switch (c_11151154) {
            case 97:
            case 98:
            case 99:
            case 100:
            case 101:
            case 102:
            case 103:
            case 104:
            case 105:
            case 106:
            case 107:
            case 108:
            case 109:
            case 110:
            case 111:
            case 112:
            case 113:
            case 114:
            case 115:
            case 116:
            case 117:
            case 118:
            case 119:
            case 120:
            case 121:
            case 122:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 45:
            case 46:
            case 95:
            case 126:
              addChar(result_11151144, c_11151154);;
              break;
            case 32:
              result_11151144.push.apply(result_11151144, fromSpace_11151152);;
              break;
            default: 
              addChar(result_11151144, 37);;
              result_11151144.push.apply(result_11151144, toHex_10225145(c_11151154, 2));;
              break;
            }
            i_17385755 = addInt(i_17385755, 1);
            if (!(((s_11151142).length == L_17385756))) {
            failedAssertImpl_1305480(makeNimstrLit("iterators.nim(222, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);

  return result_11151144;

}
function rawGet_17035621(t_17035626, key_17035627, hc_17035628, hc_17035628_Idx) {
            var Tmp3;

  var result_17035629 = 0;

  BeforeRet: do {
    hc_17035628[hc_17035628_Idx] = hash_11460214(key_17035627);
    if ((hc_17035628[hc_17035628_Idx] == 0)) {
    hc_17035628[hc_17035628_Idx] = 314159265;
    }
    
    if (((t_17035626.data).length == 0)) {
    result_17035629 = -1;
    break BeforeRet;
    }
    
    var h_17045138 = (hc_17035628[hc_17035628_Idx] & (t_17035626.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_11481218(t_17035626.data[chckIndx(h_17045138, 0, (t_17035626.data).length-1)].Field0)) break L2;
            if (!(t_17035626.data[chckIndx(h_17045138, 0, (t_17035626.data).length-1)].Field0 == hc_17035628[hc_17035628_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_17035626.data[chckIndx(h_17045138, 0, (t_17035626.data).length-1)].Field2, key_17035627);            }          if (Tmp3) {
          result_17035629 = h_17045138;
          break BeforeRet;
          }
          
          h_17045138 = nextTry_11485014(h_17045138, (t_17035626.data).length - 1);
        }
    } while(false);
    result_17035629 = subInt(-1, h_17045138);
  } while (false);

  return result_17035629;

}
function mustRehash_17060601(t_17060604) {
  var result_17060605 = false;

    if (!((t_17060604.counter < (t_17060604.data).length))) {
    failedAssertImpl_1305480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_17060605 = ((mulInt((t_17060604.data).length, 2) < mulInt(t_17060604.counter, 3)) || (subInt((t_17060604.data).length, t_17060604.counter) < 4));

  return result_17060605;

}
function rawInsert_17086359(t_17086365, data_17086368, data_17086368_Idx, key_17086369, val_17086371, hc_17086372, h_17086373) {
    data_17086368[data_17086368_Idx][chckIndx(h_17086373, 0, (data_17086368[data_17086368_Idx]).length-1)].Field2 = nimCopy(null, key_17086369, NTI1188013);
    data_17086368[data_17086368_Idx][chckIndx(h_17086373, 0, (data_17086368[data_17086368_Idx]).length-1)].Field3 = nimCopy(null, val_17086371, NTI16211062);
    data_17086368[data_17086368_Idx][chckIndx(h_17086373, 0, (data_17086368[data_17086368_Idx]).length-1)].Field0 = hc_17086372;
    data_17086368[data_17086368_Idx][chckIndx(h_17086373, 0, (data_17086368[data_17086368_Idx]).length-1)].Field1 = -1;
    if ((t_17086365.first < 0)) {
    t_17086365.first = h_17086373;
    }
    
    if ((0 <= t_17086365.last)) {
    data_17086368[data_17086368_Idx][chckIndx(t_17086365.last, 0, (data_17086368[data_17086368_Idx]).length-1)].Field1 = h_17086373;
    }
    
    t_17086365.last = h_17086373;

  
}
function enlarge_17085180(t_17085186) {
          var Tmp6;
          var Tmp7;

    var n_17085194 = [];
    n_17085194 = new Array(chckRange(mulInt((t_17085186.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_17085186.data).length, 2), 0, 2147483647);++i) {n_17085194[i]={Field0: 0, Field1: 0, Field2: [], Field3: []};}    var h_17085333 = t_17085186.first;
    t_17085186.first = -1;
    t_17085186.last = -1;
    var Tmp1 = t_17085186.data; t_17085186.data = n_17085194; n_17085194 = Tmp1;    L2: do {
        L3: while (true) {
        if (!(0 <= h_17085333)) break L3;
          var nxt_17085496 = n_17085194[chckIndx(h_17085333, 0, (n_17085194).length-1)].Field1;
          var eh_17085652 = n_17085194[chckIndx(h_17085333, 0, (n_17085194).length-1)].Field0;
          if (isFilled_11481218(eh_17085652)) {
          var j_17085659 = (eh_17085652 & (t_17085186.data).length - 1);
          L4: do {
              L5: while (true) {
              if (!isFilled_11481218(t_17085186.data[chckIndx(j_17085659, 0, (t_17085186.data).length-1)].Field0)) break L5;
                j_17085659 = nextTry_11485014(j_17085659, (t_17085186.data).length - 1);
              }
          } while(false);
          Tmp6 = n_17085194[chckIndx(h_17085333, 0, (n_17085194).length-1)].Field2;
          n_17085194[chckIndx(h_17085333, 0, (n_17085194).length-1)].Field2 = genericReset(n_17085194[chckIndx(h_17085333, 0, (n_17085194).length-1)].Field2, NTI1188013);
          Tmp7 = n_17085194[chckIndx(h_17085333, 0, (n_17085194).length-1)].Field3;
          n_17085194[chckIndx(h_17085333, 0, (n_17085194).length-1)].Field3 = genericReset(n_17085194[chckIndx(h_17085333, 0, (n_17085194).length-1)].Field3, NTI16211062);
          rawInsert_17086359(t_17085186, t_17085186, "data", Tmp6, Tmp7, n_17085194[chckIndx(h_17085333, 0, (n_17085194).length-1)].Field0, j_17085659);
          }
          
          h_17085333 = nxt_17085496;
        }
    } while(false);

  
}
function rawGetKnownHC_17087195(t_17087200, key_17087201, hc_17087202) {
  var result_17087203 = 0;

  BeforeRet: do {
    if (((t_17087200.data).length == 0)) {
    result_17087203 = -1;
    break BeforeRet;
    }
    
    var h_17090138 = (hc_17087202 & (t_17087200.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_11481218(t_17087200.data[chckIndx(h_17090138, 0, (t_17087200.data).length-1)].Field0)) break L2;
          if (((t_17087200.data[chckIndx(h_17090138, 0, (t_17087200.data).length-1)].Field0 == hc_17087202) && eqStrings(t_17087200.data[chckIndx(h_17090138, 0, (t_17087200.data).length-1)].Field2, key_17087201))) {
          result_17087203 = h_17090138;
          break BeforeRet;
          }
          
          h_17090138 = nextTry_11485014(h_17090138, (t_17087200.data).length - 1);
        }
    } while(false);
    result_17087203 = subInt(-1, h_17090138);
  } while (false);

  return result_17087203;

}
function hasKeyOrPut_17020085(t_17020091, key_17020092, val_17020093) {
  var result_17020094 = false;

    if (((t_17020091.data).length == 0)) {
    var correctSizeHEX60gensym154_17030001 = slotsNeeded_11485048(32);
    t_17020091.counter = 0;
    t_17020091.data = new Array(chckRange(correctSizeHEX60gensym154_17030001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym154_17030001, 0, 2147483647);++i) {t_17020091.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: []};}    t_17020091.first = -1;
    t_17020091.last = -1;
    }
    
    var hc_17035601 = [0];
    var index_17045656 = rawGet_17035621(t_17020091, key_17020092, hc_17035601, 0);
    if ((index_17045656 < 0)) {
    result_17020094 = false;
    if (((t_17020091.data).length == 0)) {
    var correctSizeHEX60gensym159_17055001 = slotsNeeded_11485048(32);
    t_17020091.counter = 0;
    t_17020091.data = new Array(chckRange(correctSizeHEX60gensym159_17055001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym159_17055001, 0, 2147483647);++i) {t_17020091.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: []};}    t_17020091.first = -1;
    t_17020091.last = -1;
    }
    
    if (mustRehash_17060601(t_17020091)) {
    enlarge_17085180(t_17020091);
    index_17045656 = rawGetKnownHC_17087195(t_17020091, key_17020092, hc_17035601[0]);
    }
    
    index_17045656 = subInt(-1, index_17045656);
    rawInsert_17086359(t_17020091, t_17020091, "data", key_17020092, val_17020093, hc_17035601[0], index_17045656);
    t_17020091.counter = addInt(t_17020091.counter, 1);
    }
    else {
      result_17020094 = true;
    }
    

  return result_17020094;

}
function rawGet_17006323(t_17006327, key_17006328, hc_17006329, hc_17006329_Idx) {
            var Tmp3;

  var result_17006330 = 0;

  BeforeRet: do {
    hc_17006329[hc_17006329_Idx] = hash_11460214(key_17006328);
    if ((hc_17006329[hc_17006329_Idx] == 0)) {
    hc_17006329[hc_17006329_Idx] = 314159265;
    }
    
    if (((t_17006327.data).length == 0)) {
    result_17006330 = -1;
    break BeforeRet;
    }
    
    var h_17015138 = (hc_17006329[hc_17006329_Idx] & (t_17006327.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_11481218(t_17006327.data[chckIndx(h_17015138, 0, (t_17006327.data).length-1)].Field0)) break L2;
            if (!(t_17006327.data[chckIndx(h_17015138, 0, (t_17006327.data).length-1)].Field0 == hc_17006329[hc_17006329_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_17006327.data[chckIndx(h_17015138, 0, (t_17006327.data).length-1)].Field2, key_17006328);            }          if (Tmp3) {
          result_17006330 = h_17015138;
          break BeforeRet;
          }
          
          h_17015138 = nextTry_11485014(h_17015138, (t_17006327.data).length - 1);
        }
    } while(false);
    result_17006330 = subInt(-1, h_17015138);
  } while (false);

  return result_17006330;

}
function HEX5BHEX5D_17006312(t_17006318, key_17006319) {
  var result_17006321 = null;
  var result_17006321_Idx = 0;

    var hcHEX60gensym92_17006322 = [0];
    var indexHEX60gensym92_17015641 = rawGet_17006323(t_17006318, key_17006319, hcHEX60gensym92_17006322, 0);
    if ((0 <= indexHEX60gensym92_17015641)) {
    result_17006321 = t_17006318.data[chckIndx(indexHEX60gensym92_17015641, 0, (t_17006318.data).length-1)]; result_17006321_Idx = "Field3";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_17006319 || []), parent: null, m_type: NTI1194645, name: null, trace: [], up: null}, "KeyError");
    }
    

  return [result_17006321, result_17006321_Idx];

}
function del_17236056(t_17236062, key_17236063) {
            var Tmp4;
            var Tmp5;

  BeforeRet: do {
    if ((t_17236062.counter == 0)) {
    break BeforeRet;
    }
    
    var n_17236071 = [];
    n_17236071 = new Array(chckRange((t_17236062.data).length, 0, 2147483647)); for (var i=0;i<chckRange((t_17236062.data).length, 0, 2147483647);++i) {n_17236071[i]={Field0: 0, Field1: 0, Field2: [], Field3: []};}    var h_17236210 = t_17236062.first;
    t_17236062.first = -1;
    t_17236062.last = -1;
    var Tmp1 = t_17236062.data; t_17236062.data = n_17236071; n_17236071 = Tmp1;    var resHEX60gensym193_17240001 = 0;
    resHEX60gensym193_17240001 = hash_11460214(key_17236063);
    if ((resHEX60gensym193_17240001 == 0)) {
    resHEX60gensym193_17240001 = 314159265;
    }
    
    var hc_17245004 = resHEX60gensym193_17240001;
    L2: do {
        L3: while (true) {
        if (!(0 <= h_17236210)) break L3;
          var nxt_17245160 = n_17236071[chckIndx(h_17236210, 0, (n_17236071).length-1)].Field1;
          if (isFilled_11481218(n_17236071[chckIndx(h_17236210, 0, (n_17236071).length-1)].Field0)) {
          if (((n_17236071[chckIndx(h_17236210, 0, (n_17236071).length-1)].Field0 == hc_17245004) && eqStrings(n_17236071[chckIndx(h_17236210, 0, (n_17236071).length-1)].Field2, key_17236063))) {
          t_17236062.counter = subInt(t_17236062.counter, 1);
          }
          else {
            var j_17245971 = subInt(-1, rawGetKnownHC_17087195(t_17236062, n_17236071[chckIndx(h_17236210, 0, (n_17236071).length-1)].Field2, n_17236071[chckIndx(h_17236210, 0, (n_17236071).length-1)].Field0));
            Tmp4 = n_17236071[chckIndx(h_17236210, 0, (n_17236071).length-1)].Field2;
            n_17236071[chckIndx(h_17236210, 0, (n_17236071).length-1)].Field2 = genericReset(n_17236071[chckIndx(h_17236210, 0, (n_17236071).length-1)].Field2, NTI1188013);
            Tmp5 = n_17236071[chckIndx(h_17236210, 0, (n_17236071).length-1)].Field3;
            n_17236071[chckIndx(h_17236210, 0, (n_17236071).length-1)].Field3 = genericReset(n_17236071[chckIndx(h_17236210, 0, (n_17236071).length-1)].Field3, NTI16211062);
            rawInsert_17086359(t_17236062, t_17236062, "data", Tmp4, Tmp5, n_17236071[chckIndx(h_17236210, 0, (n_17236071).length-1)].Field0, j_17245971);
          }
          
          }
          
          h_17236210 = nxt_17245160;
        }
    } while(false);
  } while (false);

  
}
function rawGet_16485209(t_16485213, key_16485214, hc_16485215, hc_16485215_Idx) {
            var Tmp3;

  var result_16485216 = 0;

  BeforeRet: do {
    hc_16485215[hc_16485215_Idx] = hash_11460214(key_16485214);
    if ((hc_16485215[hc_16485215_Idx] == 0)) {
    hc_16485215[hc_16485215_Idx] = 314159265;
    }
    
    if (((t_16485213.data).length == 0)) {
    result_16485216 = -1;
    break BeforeRet;
    }
    
    var h_16495138 = (hc_16485215[hc_16485215_Idx] & (t_16485213.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_11481218(t_16485213.data[chckIndx(h_16495138, 0, (t_16485213.data).length-1)].Field0)) break L2;
            if (!(t_16485213.data[chckIndx(h_16495138, 0, (t_16485213.data).length-1)].Field0 == hc_16485215[hc_16485215_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_16485213.data[chckIndx(h_16495138, 0, (t_16485213.data).length-1)].Field1, key_16485214);            }          if (Tmp3) {
          result_16485216 = h_16495138;
          break BeforeRet;
          }
          
          h_16495138 = nextTry_11485014(h_16495138, (t_16485213.data).length - 1);
        }
    } while(false);
    result_16485216 = subInt(-1, h_16495138);
  } while (false);

  return result_16485216;

}
function HEX5BHEX5D_16485198(t_16485204, key_16485205) {
  var result_16485207 = null;
  var result_16485207_Idx = 0;

    var hcHEX60gensym22_16485208 = [0];
    var indexHEX60gensym22_16495626 = rawGet_16485209(t_16485204, key_16485205, hcHEX60gensym22_16485208, 0);
    if ((0 <= indexHEX60gensym22_16495626)) {
    result_16485207 = t_16485204.data[chckIndx(indexHEX60gensym22_16495626, 0, (t_16485204.data).length-1)]; result_16485207_Idx = "Field2";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_16485205 || []), parent: null, m_type: NTI1194645, name: null, trace: [], up: null}, "KeyError");
    }
    

  return [result_16485207, result_16485207_Idx];

}
function del_17091123(t_17091129, key_17091130) {
            var Tmp4;
            var Tmp5;

  BeforeRet: do {
    if ((t_17091129.counter == 0)) {
    break BeforeRet;
    }
    
    var n_17091138 = [];
    n_17091138 = new Array(chckRange((t_17091129.data).length, 0, 2147483647)); for (var i=0;i<chckRange((t_17091129.data).length, 0, 2147483647);++i) {n_17091138[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    var h_17091277 = t_17091129.first;
    t_17091129.first = -1;
    t_17091129.last = -1;
    var Tmp1 = t_17091129.data; t_17091129.data = n_17091138; n_17091138 = Tmp1;    var resHEX60gensym167_17095001 = 0;
    resHEX60gensym167_17095001 = hash_11460214(key_17091130);
    if ((resHEX60gensym167_17095001 == 0)) {
    resHEX60gensym167_17095001 = 314159265;
    }
    
    var hc_17100004 = resHEX60gensym167_17095001;
    L2: do {
        L3: while (true) {
        if (!(0 <= h_17091277)) break L3;
          var nxt_17100160 = n_17091138[chckIndx(h_17091277, 0, (n_17091138).length-1)].Field1;
          if (isFilled_11481218(n_17091138[chckIndx(h_17091277, 0, (n_17091138).length-1)].Field0)) {
          if (((n_17091138[chckIndx(h_17091277, 0, (n_17091138).length-1)].Field0 == hc_17100004) && eqStrings(n_17091138[chckIndx(h_17091277, 0, (n_17091138).length-1)].Field2, key_17091130))) {
          t_17091129.counter = subInt(t_17091129.counter, 1);
          }
          else {
            var j_17100971 = subInt(-1, rawGetKnownHC_16617195(t_17091129, n_17091138[chckIndx(h_17091277, 0, (n_17091138).length-1)].Field2, n_17091138[chckIndx(h_17091277, 0, (n_17091138).length-1)].Field0));
            Tmp4 = n_17091138[chckIndx(h_17091277, 0, (n_17091138).length-1)].Field2;
            n_17091138[chckIndx(h_17091277, 0, (n_17091138).length-1)].Field2 = genericReset(n_17091138[chckIndx(h_17091277, 0, (n_17091138).length-1)].Field2, NTI1188013);
            Tmp5 = n_17091138[chckIndx(h_17091277, 0, (n_17091138).length-1)].Field3;
            n_17091138[chckIndx(h_17091277, 0, (n_17091138).length-1)].Field3 = genericReset(n_17091138[chckIndx(h_17091277, 0, (n_17091138).length-1)].Field3, NTI16211023);
            rawInsert_16616359(t_17091129, t_17091129, "data", Tmp4, Tmp5, n_17091138[chckIndx(h_17091277, 0, (n_17091138).length-1)].Field0, j_17100971);
          }
          
          }
          
          h_17091277 = nxt_17100160;
        }
    } while(false);
  } while (false);

  
}
function len_16985152(t_16985157) {
  var result_16985158 = 0;

    result_16985158 = t_16985157.counter;

  return result_16985158;

}
function hasKey_17000110(t_17000115, key_17000116) {
  var result_17000117 = false;

    var hc_17000118 = [0];
    result_17000117 = (0 <= rawGet_16565621(t_17000115, key_17000116, hc_17000118, 0));

  return result_17000117;

}
function reindexSect_16985014() {
                              var Tmp10;
                            var Tmp11;
                            var Tmp12;
                            var Tmp13;
                              var Tmp15;
                                    var Tmp18;
                                    var Tmp19;
                                    var Tmp20;
                                    var Tmp21;

    var moved_16985016 = true;
    L1: do {
        L2: while (true) {
        if (!moved_16985016) break L2;
          moved_16985016 = false;
          L3: do {
            var k_16995245 = [];
            var val_16995246 = null;
            var val_16995246_Idx = 0;
            var L_17385816 = len_16985152(lastPostfix_16280629[0]);
            L4: do {
              var h_17385818 = 0;
              var colontmp__17385819 = 0;
              colontmp__17385819 = (lastPostfix_16280629[0].data).length - 1;
              var res_17385820 = 0;
              L5: do {
                  L6: while (true) {
                  if (!(res_17385820 <= colontmp__17385819)) break L6;
                    h_17385818 = res_17385820;
                    if (isFilled_11481218(lastPostfix_16280629[0].data[chckIndx(h_17385818, 0, (lastPostfix_16280629[0].data).length-1)].Field0)) {
                    k_16995245 = lastPostfix_16280629[0].data[chckIndx(h_17385818, 0, (lastPostfix_16280629[0].data).length-1)].Field1;
                    val_16995246 = lastPostfix_16280629[0].data[chckIndx(h_17385818, 0, (lastPostfix_16280629[0].data).length-1)]; val_16995246_Idx = "Field2";
                    L7: do {
                      var v_16995253 = 0;
                      var res_17385804 = val_16995246[val_16995246_Idx];
                      L8: do {
                          L9: while (true) {
                          if (!(1 <= res_17385804)) break L9;
                            v_16995253 = res_17385804;
                            var fromSect_16995254 = (k_16995245 || []).concat(makeNimstrLit("-") || [],cstrToNimstr((v_16995253)+"") || []);
                            var prevV_16995255 = subInt(v_16995253, 1);
                            var toSect_16995256 = (k_16995245 || []).concat(makeNimstrLit("-") || [],cstrToNimstr((prevV_16995255)+"") || []);
                              if (!!((prevV_16995255 == 0))) Tmp10 = false; else {                                Tmp10 = !(hasKey_17000110(allSectors_16270629[0], toSect_16995256));                              }                            if (Tmp10) {
                            moved_16985016 = true;
                            HEX5BHEX5DHEX3D_16550347(allSectors_16270629[0], toSect_16995256, {postalCode: [], district: [], folkDistrict: [], city: [], pFix: 0, streets: ({data: [], counter: 0, first: 0, last: 0}), shownOnMap: false, exclude: false});
                            (Tmp11 = HEX5BHEX5D_16620843(allSectors_16270629[0], toSect_16995256), Tmp11)[0][Tmp11[1]] = (Tmp12 = HEX5BHEX5D_16620843(allSectors_16270629[0], fromSect_16995254), Tmp12)[0][Tmp12[1]];
                            (Tmp13 = HEX5BHEX5D_16620843(allSectors_16270629[0], toSect_16995256), Tmp13)[0][Tmp13[1]].pFix = prevV_16995255;
                            L14: do {
                              var name_17005979 = [];
                              var mV_17005980 = [];
                              var colontmp__17385799 = ({data: [], counter: 0, first: 0, last: 0});
                              nimCopy(colontmp__17385799, (Tmp15 = HEX5BHEX5D_16620843(allSectors_16270629[0], fromSect_16995254), Tmp15)[0][Tmp15[1]].streets, NTI16211070);
                              var L_17385800 = len_16825548(colontmp__17385799);
                              if ((0 < colontmp__17385799.counter)) {
                              var h_17385801 = colontmp__17385799.first;
                              L16: do {
                                  L17: while (true) {
                                  if (!(0 <= h_17385801)) break L17;
                                    var nxt_17385803 = colontmp__17385799.data[chckIndx(h_17385801, 0, (colontmp__17385799.data).length-1)].Field1;
                                    if (isFilled_11481218(colontmp__17385799.data[chckIndx(h_17385801, 0, (colontmp__17385799.data).length-1)].Field0)) {
                                    name_17005979 = colontmp__17385799.data[chckIndx(h_17385801, 0, (colontmp__17385799.data).length-1)].Field2;
                                    mV_17005980 = colontmp__17385799.data[chckIndx(h_17385801, 0, (colontmp__17385799.data).length-1)].Field3;
                                    var _ = hasKeyOrPut_17020085((Tmp18 = HEX5BHEX5D_16620843(allSectors_16270629[0], toSect_16995256), Tmp18)[0][Tmp18[1]].streets, name_17005979, (Tmp19 = HEX5BHEX5D_17006312(allStreets_16250629[0], name_17005979), Tmp19)[0][Tmp19[1]].links);
                                    (Tmp20 = HEX5BHEX5D_17006312(allStreets_16250629[0], name_17005979), Tmp20)[0][Tmp20[1]].sector = (Tmp21 = HEX5BHEX5D_16620843(allSectors_16270629[0], toSect_16995256), Tmp21)[0][Tmp21[1]];
                                    if (!((len_16825548(colontmp__17385799) == L_17385800))) {
                                    failedAssertImpl_1305480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
                                    }
                                    
                                    }
                                    
                                    h_17385801 = nxt_17385803;
                                  }
                              } while(false);
                              }
                              
                            } while(false);
                            del_17091123(allSectors_16270629[0], fromSect_16995254);
                            if ((v_16995253 == val_16995246[val_16995246_Idx])) {
                            val_16995246[val_16995246_Idx] = subInt(val_16995246[val_16995246_Idx], 1);
                            }
                            
                            }
                            
                            res_17385804 = subInt(res_17385804, 1);
                          }
                      } while(false);
                    } while(false);
                    if (!((len_16985152(lastPostfix_16280629[0]) == L_17385816))) {
                    failedAssertImpl_1305480(makeNimstrLit("tables.nim(703, 13) `len(t) == L` the length of the table changed while iterating over it"));
                    }
                    
                    }
                    
                    res_17385820 = addInt(res_17385820, 1);
                  }
              } while(false);
            } while(false);
          } while(false);
        }
    } while(false);

  
}
function initOrderedTable_17250013(initialSize_17250017) {
  var result_17250019 = ({data: [], counter: 0, first: 0, last: 0});

    var correctSizeHEX60gensym196_17255001 = slotsNeeded_11485048(chckRange(initialSize_17250017, 0, 2147483647));
    result_17250019.counter = 0;
    result_17250019.data = new Array(chckRange(correctSizeHEX60gensym196_17255001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym196_17255001, 0, 2147483647);++i) {result_17250019.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: []};}    result_17250019.first = -1;
    result_17250019.last = -1;

  return result_17250019;

}
function contains_17300166(s_17300172, value_17300173) {
  var result_17300174 = false;

    result_17300174 = ((cmpStrings(s_17300172.a, value_17300173) <= 0) && (cmpStrings(value_17300173, s_17300172.b) <= 0));

  return result_17300174;

}
function HEX2EHEX2E_17300001(a_17300006, b_17300008) {
  var result_17300014 = ({a: [], b: []});

    nimCopy(result_17300014, {a: nimCopy(null, a_17300006, NTI1188013), b: nimCopy(null, b_17300008, NTI1188013)}, NTI17300011);

  return result_17300014;

}
function len_17310368(t_17310373) {
  var result_17310374 = 0;

    result_17310374 = t_17310373.counter;

  return result_17310374;

}
function createDom_17101539() {
    function HEX3Aanonymous_17115138(ev_17115141, n_17115142) {
        save_16886451();

      
    }
    function HEX3Aanonymous_17115161(ev_17115164, n_17115165) {
        function HEX3Aanonymous_17115168(e_17115171) {
            var dataTarget_17120004 = e_17115171.target;
            var data_17125004 = dataTarget_17120004.result;
            var a_17125009 = JSON.parse(data_17125004);
            var x_17125010 = a_17125009;
            load_16525065(x_17125010);

          
        }

        var fReader_17115166 = function(){return new FileReader();}();
        fReader_17115166.addEventListener("load", HEX3Aanonymous_17115168, false);
        var inpFile_17130214 = ev_17115164.target;
        fReader_17115166.readAsText(inpFile_17130214.files[0]);

      
    }
    function HEX3Aanonymous_17135042(ev_17135045, n_17135046) {
        function HEX3Aanonymous_17145013(r_17145015) {
            var c_17175004 = r_17145015.response.view[0].result[0].location.displayPosition;
            map.setCenter({lat: nimCopy(null, chckRange((c_17175004.latitude), -9.0000000000000000e+01, 9.0000000000000000e+01), NTI11721016), lng: nimCopy(null, chckRange((c_17175004.longitude), -1.8000000000000000e+02, 1.8000000000000000e+02), NTI11721018), m_type: NTI11721036}, false);
            map.setZoom(14, false);

          
        }
        function HEX3Aanonymous_17185023(e_17185025) {
          
        }

        var address_17135047 = ev_17135045.target.value;
        var geocoder_17135048 = platform_16230017[0].getGeocodingService();
        var geocodingParameters_17135049 = {};
        geocodingParameters_17135049.searchText = address_17135047;
        geocodingParameters_17135049.jsonattributes = 1;
        geocoder_17135048.geocode(geocodingParameters_17135049, HEX3Aanonymous_17145013, HEX3Aanonymous_17185023);

      
    }
                    var Tmp7;
                    var Tmp8;
                    function clckOnStr_17101542(ev_17101545, n_17101546) {
                        var trgt_17101547 = ev_17101545.target;
                        map.setZoom(20, false);
                        map.setCenter({lat: nimCopy(null, chckRange(parseFloat(trgt_17101547.getAttribute("data-lat")), -9.0000000000000000e+01, 9.0000000000000000e+01), NTI11721016), lng: nimCopy(null, chckRange(parseFloat(trgt_17101547.getAttribute("data-lng")), -1.8000000000000000e+02, 1.8000000000000000e+02), NTI11721018), m_type: NTI11721036}, false);

                      
                    }
            function HEX3Aanonymous_17200149(ev_17200152, n_17200153) {
                var evClck_17200154 = ev_17200152;
                var t_17205004 = evClck_17200154.target;
                var chckd_17210010 = (t_17205004.checked);
                var sN_17215010 = (t_17205004.value);
                t_17205004.checkd = nimBoolToStr((t_17205004.checked));
                if (chckd_17210010) {
                displaySector_16970263(cstrToNimstr(sN_17215010), true);
                }
                else {
                displaySector_16970263(cstrToNimstr(sN_17215010), false);
                }
                

              
            }
            function HEX3Aanonymous_17230246(ev_17230249, n_17230250) {
                var Tmp1;
                        var Tmp5;
                        var Tmp6;
                        var Tmp7;
                        var Tmp8;
                  var Tmp13;
                var Tmp14;

                removeAllSectorFromMap_16500062();
                var id_17230251 = cstrToNimstr(ev_17230249.target.id);
                var fromSect_17230252 = nsuReplaceStr(id_17230251, makeNimstrLit("_"), makeNimstrLit(" "));
                var elSel_17230253 = document.querySelectorAll(toJSStr((makeNimstrLit("select[id=\'") || []).concat(id_17230251 || [],makeNimstrLit("\']") || [])));
                var toSect_17230254 = cstrToNimstr(elSel_17230253[chckIndx(0, 0, (elSel_17230253).length-1)].value);
                var fromSector_17230416 = (Tmp1 = HEX5BHEX5D_16620843(allSectors_16270629[0], fromSect_17230252), Tmp1)[0][Tmp1[1]];
                var namesForDel_17230433 = newSeq_1840232(0);
                L2: do {
                  var name_17230441 = [];
                  var mV_17230442 = [];
                  var L_17385775 = len_16825548(fromSector_17230416.streets);
                  if ((0 < fromSector_17230416.streets.counter)) {
                  var h_17385776 = fromSector_17230416.streets.first;
                  L3: do {
                      L4: while (true) {
                      if (!(0 <= h_17385776)) break L4;
                        var nxt_17385778 = fromSector_17230416.streets.data[chckIndx(h_17385776, 0, (fromSector_17230416.streets.data).length-1)].Field1;
                        if (isFilled_11481218(fromSector_17230416.streets.data[chckIndx(h_17385776, 0, (fromSector_17230416.streets.data).length-1)].Field0)) {
                        name_17230441 = fromSector_17230416.streets.data[chckIndx(h_17385776, 0, (fromSector_17230416.streets.data).length-1)].Field2;
                        mV_17230442 = fromSector_17230416.streets.data[chckIndx(h_17385776, 0, (fromSector_17230416.streets.data).length-1)].Field3;
                        var _ = hasKeyOrPut_17020085((Tmp5 = HEX5BHEX5D_16620843(allSectors_16270629[0], toSect_17230254), Tmp5)[0][Tmp5[1]].streets, name_17230441, (Tmp6 = HEX5BHEX5D_17006312(allStreets_16250629[0], name_17230441), Tmp6)[0][Tmp6[1]].links);
                        (Tmp7 = HEX5BHEX5D_17006312(allStreets_16250629[0], name_17230441), Tmp7)[0][Tmp7[1]].sector = (Tmp8 = HEX5BHEX5D_16620843(allSectors_16270629[0], toSect_17230254), Tmp8)[0][Tmp8[1]];
                        var Tmp9 = nimCopy(null, name_17230441, NTI1188013);
                        namesForDel_17230433.push(Tmp9);;
                        if (!((len_16825548(fromSector_17230416.streets) == L_17385775))) {
                        failedAssertImpl_1305480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
                        }
                        
                        }
                        
                        h_17385776 = nxt_17385778;
                      }
                  } while(false);
                  }
                  
                } while(false);
                L10: do {
                  var n_17235946 = null;
                  var n_17235946_Idx = 0;
                  var i_17385781 = 0;
                  var L_17385782 = (namesForDel_17230433).length;
                  L11: do {
                      L12: while (true) {
                      if (!(i_17385781 < L_17385782)) break L12;
                        n_17235946 = namesForDel_17230433; n_17235946_Idx = chckIndx(i_17385781, 0, (namesForDel_17230433).length-1);
                        del_17236056(fromSector_17230416.streets, n_17235946[n_17235946_Idx]);
                        i_17385781 = addInt(i_17385781, 1);
                        if (!(((namesForDel_17230433).length == L_17385782))) {
                        failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  } while(false);
                } while(false);
                if (!(fromSector_17230416.exclude)) {
                if ((fromSector_17230416.pFix == (Tmp13 = HEX5BHEX5D_16485198(lastPostfix_16280629[0], fromSector_17230416.postalCode), Tmp13)[0][Tmp13[1]])) {
                (Tmp14 = HEX5BHEX5D_16485198(lastPostfix_16280629[0], fromSector_17230416.postalCode), Tmp14)[0][Tmp14[1]] = subInt(Tmp14[0][Tmp14[1]], 1);
                }
                
                del_17091123(allSectors_16270629[0], fromSect_17230252);
                }
                
                reindexSect_16985014();

              
            }
            function HEX3Aanonymous_17246972(ev_17246975, n_17246976) {
                var Tmp1;
                          var Tmp6;
                                  var Tmp10;
                          var Tmp11;
                            var Tmp12;
                            var Tmp13;
                                    var Tmp17;
                            var Tmp18;

                var id_17246977 = cstrToNimstr(ev_17246975.target.id);
                var fromSect_17246978 = nsuReplaceStr(id_17246977, makeNimstrLit("_"), makeNimstrLit(" "));
                var fromSector_17247140 = (Tmp1 = HEX5BHEX5D_16620843(allSectors_16270629[0], fromSect_17246978), Tmp1)[0][Tmp1[1]];
                var allSectorsTmp_17247149 = [initOrderedTable_16260632(32)];
                var addk_17247151 = 0;
                var newv_17247152 = null;
                L2: do {
                  var k_17247160 = [];
                  var v_17247161 = null;
                  var L_17385838 = len_16500198(allSectors_16270629[0]);
                  if ((0 < allSectors_16270629[0].counter)) {
                  var h_17385839 = allSectors_16270629[0].first;
                  L3: do {
                      L4: while (true) {
                      if (!(0 <= h_17385839)) break L4;
                        var nxt_17385841 = allSectors_16270629[0].data[chckIndx(h_17385839, 0, (allSectors_16270629[0].data).length-1)].Field1;
                        if (isFilled_11481218(allSectors_16270629[0].data[chckIndx(h_17385839, 0, (allSectors_16270629[0].data).length-1)].Field0)) {
                        k_17247160 = allSectors_16270629[0].data[chckIndx(h_17385839, 0, (allSectors_16270629[0].data).length-1)].Field2;
                        v_17247161 = allSectors_16270629[0].data[chckIndx(h_17385839, 0, (allSectors_16270629[0].data).length-1)].Field3;
                        L5: do {
                          if (v_17247161.exclude) {
                          break L5;
                          }
                          
                          if ((addk_17247151 == 1)) {
                          newv_17247152 = JSON.parse(JSON.stringify(v_17247161));
                          if (false) {
                          nimCopy(newv_17247152.streets, initOrderedTable_17250013(32), NTI16211070);
                          }
                          
                          newv_17247152.pFix = addInt(newv_17247152.pFix, 1);
                          L7: do {
                            var nstHEX60gensym195_17260627 = [];
                            var stHEX60gensym195_17260628 = [];
                            var L_17385828 = len_16825548(newv_17247152.streets);
                            if ((0 < newv_17247152.streets.counter)) {
                            var h_17385829 = newv_17247152.streets.first;
                            L8: do {
                                L9: while (true) {
                                if (!(0 <= h_17385829)) break L9;
                                  var nxt_17385831 = newv_17247152.streets.data[chckIndx(h_17385829, 0, (newv_17247152.streets.data).length-1)].Field1;
                                  if (isFilled_11481218(newv_17247152.streets.data[chckIndx(h_17385829, 0, (newv_17247152.streets.data).length-1)].Field0)) {
                                  nstHEX60gensym195_17260627 = newv_17247152.streets.data[chckIndx(h_17385829, 0, (newv_17247152.streets.data).length-1)].Field2;
                                  stHEX60gensym195_17260628 = newv_17247152.streets.data[chckIndx(h_17385829, 0, (newv_17247152.streets.data).length-1)].Field3;
                                  (Tmp10 = HEX5BHEX5D_17006312(allStreets_16250629[0], nstHEX60gensym195_17260627), Tmp10)[0][Tmp10[1]].sector = newv_17247152;
                                  if (!((len_16825548(newv_17247152.streets) == L_17385828))) {
                                  failedAssertImpl_1305480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
                                  }
                                  
                                  }
                                  
                                  h_17385829 = nxt_17385831;
                                }
                            } while(false);
                            }
                            
                          } while(false);
                          Tmp6 = nsuJoinSep([nimCopy(null, (Tmp11 = nsuSplitString(k_17247160, makeNimstrLit("-"), -1), Tmp11)[chckIndx(0, 0, (Tmp11).length-1)], NTI1188013), cstrToNimstr((newv_17247152.pFix)+"")], makeNimstrLit("-"));
                          }
                          else {
                            if (eqStrings(k_17247160, fromSect_17246978)) {
                            addk_17247151 = 1;
                            (Tmp13 = HEX5BHEX5D_16485198(lastPostfix_16280629[0], fromSector_17247140.postalCode), Tmp13)[0][Tmp13[1]] = addInt(Tmp13[0][Tmp13[1]], 1);
                            HEX5BHEX5DHEX3D_16550347(allSectorsTmp_17247149[0], k_17247160, v_17247161);
                            newv_17247152 = JSON.parse(JSON.stringify(v_17247161));
                            if (true) {
                            nimCopy(newv_17247152.streets, initOrderedTable_17250013(32), NTI16211070);
                            }
                            
                            newv_17247152.pFix = addInt(newv_17247152.pFix, 1);
                            L14: do {
                              var nstHEX60gensym200_17275032 = [];
                              var stHEX60gensym200_17275033 = [];
                              var L_17385834 = len_16825548(newv_17247152.streets);
                              if ((0 < newv_17247152.streets.counter)) {
                              var h_17385835 = newv_17247152.streets.first;
                              L15: do {
                                  L16: while (true) {
                                  if (!(0 <= h_17385835)) break L16;
                                    var nxt_17385837 = newv_17247152.streets.data[chckIndx(h_17385835, 0, (newv_17247152.streets.data).length-1)].Field1;
                                    if (isFilled_11481218(newv_17247152.streets.data[chckIndx(h_17385835, 0, (newv_17247152.streets.data).length-1)].Field0)) {
                                    nstHEX60gensym200_17275032 = newv_17247152.streets.data[chckIndx(h_17385835, 0, (newv_17247152.streets.data).length-1)].Field2;
                                    stHEX60gensym200_17275033 = newv_17247152.streets.data[chckIndx(h_17385835, 0, (newv_17247152.streets.data).length-1)].Field3;
                                    (Tmp17 = HEX5BHEX5D_17006312(allStreets_16250629[0], nstHEX60gensym200_17275032), Tmp17)[0][Tmp17[1]].sector = newv_17247152;
                                    if (!((len_16825548(newv_17247152.streets) == L_17385834))) {
                                    failedAssertImpl_1305480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
                                    }
                                    
                                    }
                                    
                                    h_17385835 = nxt_17385837;
                                  }
                              } while(false);
                              }
                              
                            } while(false);
                            Tmp12 = nsuJoinSep([nimCopy(null, (Tmp18 = nsuSplitString(k_17247160, makeNimstrLit("-"), -1), Tmp18)[chckIndx(0, 0, (Tmp18).length-1)], NTI1188013), cstrToNimstr((newv_17247152.pFix)+"")], makeNimstrLit("-"));
                            }
                            else {
                              newv_17247152 = v_17247161;
                            Tmp12 = k_17247160;
                            }
                            
                          Tmp6 = Tmp12;
                          }
                          
                          var newk_17280207 = nimCopy(null, Tmp6, NTI1188013);
                          HEX5BHEX5DHEX3D_16550347(allSectorsTmp_17247149[0], newk_17280207, newv_17247152);
                        } while(false);
                        if (!((len_16500198(allSectors_16270629[0]) == L_17385838))) {
                        failedAssertImpl_1305480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
                        }
                        
                        }
                        
                        h_17385839 = nxt_17385841;
                      }
                  } while(false);
                  }
                  
                } while(false);
                nimCopy(allSectors_16270629[0], JSON.parse(JSON.stringify(allSectorsTmp_17247149[0])), NTI16211201);

              
            }
    function HEX3Aanonymous_17285170(ev_17285173, n_17285174) {
        var elSelects_17285175 = document.querySelectorAll("div.chg-sect-name input");
        var newDistrictName_17285176 = [];
        var fromNSect_17285177 = [];
        var toNSect_17285178 = [];
        L1: do {
          var el_17285186 = null;
          var el_17285186_Idx = 0;
          var i_17385844 = 0;
          var L_17385845 = (elSelects_17285175).length;
          L2: do {
              L3: while (true) {
              if (!(i_17385844 < L_17385845)) break L3;
                el_17285186 = elSelects_17285175; el_17285186_Idx = chckIndx(i_17385844, 0, (elSelects_17285175).length-1);
                switch (toJSStr(cstrToNimstr(el_17285186[el_17285186_Idx].name))) {
                case "newDistrictName":
                  newDistrictName_17285176 = nimCopy(null, cstrToNimstr(el_17285186[el_17285186_Idx].value.trim()), NTI1188013);
                  break;
                case "fromNSect":
                  fromNSect_17285177 = nimCopy(null, cstrToNimstr(el_17285186[el_17285186_Idx].value.trim()), NTI1188013);
                  break;
                case "toNSect":
                  toNSect_17285178 = nimCopy(null, cstrToNimstr(el_17285186[el_17285186_Idx].value.trim()), NTI1188013);
                  break;
                default: 
                  break;
                }
                i_17385844 = addInt(i_17385844, 1);
                if (!(((elSelects_17285175).length == L_17385845))) {
                failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);
        L4: do {
          var k_17295245 = [];
          var v_17295246 = null;
          var v_17295246_Idx = 0;
          var L_17385849 = len_16500198(allSectors_16270629[0]);
          if ((0 < allSectors_16270629[0].counter)) {
          var h_17385850 = allSectors_16270629[0].first;
          L5: do {
              L6: while (true) {
              if (!(0 <= h_17385850)) break L6;
                var nxt_17385852 = allSectors_16270629[0].data[chckIndx(h_17385850, 0, (allSectors_16270629[0].data).length-1)].Field1;
                if (isFilled_11481218(allSectors_16270629[0].data[chckIndx(h_17385850, 0, (allSectors_16270629[0].data).length-1)].Field0)) {
                k_17295245 = allSectors_16270629[0].data[chckIndx(h_17385850, 0, (allSectors_16270629[0].data).length-1)].Field2;
                v_17295246 = allSectors_16270629[0].data[chckIndx(h_17385850, 0, (allSectors_16270629[0].data).length-1)]; v_17295246_Idx = "Field3";
                if (contains_17300166(HEX2EHEX2E_17300001(fromNSect_17285177, toNSect_17285178), nucStrip(k_17295245, true, true, unicodeSpaces_3034041))) {
                v_17295246[v_17295246_Idx].folkDistrict = nimCopy(null, newDistrictName_17285176, NTI1188013);
                }
                
                if (!((len_16500198(allSectors_16270629[0]) == L_17385849))) {
                failedAssertImpl_1305480(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                h_17385850 = nxt_17385852;
              }
          } while(false);
          }
          
        } while(false);

      
    }

  var result_17101541 = null;

    var tmp_17105276 = tree_15065445(44, []);
    tmp_17105276.class = "main-root";
    addEventHandler_15790300(tmp_17105276, 11, chckdCheck_16970267, kxi__);
    var tmp_17105282 = tree_15065445(44, []);
    if (!((len_16500198(allSectors_16270629[0]) == 0))) {
    var tmp_17105283 = tree_15065445(195, []);
    add_15055272(tmp_17105283, text_15065582(makeNimstrLit("\xD0\xA1\xD0\xBE\xD1\x85\xD1\x80\xD0\xB0\xD0\xBD\xD0\xB8\xD1\x82\xD1\x8C")));
    addEventHandler_15790300(tmp_17105283, 0, HEX3Aanonymous_17115138, kxi__);
    add_15055272(tmp_17105282, tmp_17105283);
    }
    
    var tmp_17105284 = tree_15065445(194, []);
    setAttr_15000105(tmp_17105284, "type", "file");
    setAttr_15000105(tmp_17105284, "name", "fileArea");
    addEventHandler_15790300(tmp_17105284, 8, HEX3Aanonymous_17115161, kxi__);
    add_15055272(tmp_17105282, tmp_17105284);
    var tmp_17105285 = tree_15065445(44, []);
    var tmp_17105286 = tree_15065445(194, []);
    setAttr_15000105(tmp_17105286, "type", "text");
    setAttr_15000105(tmp_17105286, "placeholder", "найти адрес на карте");
    addEventHandler_15790300(tmp_17105286, 8, HEX3Aanonymous_17135042, kxi__);
    add_15055272(tmp_17105285, tmp_17105286);
    add_15055272(tmp_17105282, tmp_17105285);
    L1: do {
      var k_17185105 = [];
      var v_17185106 = null;
      var L_17385523 = len_16500198(allSectors_16270629[0]);
      if ((0 < allSectors_16270629[0].counter)) {
      var h_17385524 = allSectors_16270629[0].first;
      L2: do {
          L3: while (true) {
          if (!(0 <= h_17385524)) break L3;
            var nxt_17385526 = allSectors_16270629[0].data[chckIndx(h_17385524, 0, (allSectors_16270629[0].data).length-1)].Field1;
            if (isFilled_11481218(allSectors_16270629[0].data[chckIndx(h_17385524, 0, (allSectors_16270629[0].data).length-1)].Field0)) {
            k_17185105 = allSectors_16270629[0].data[chckIndx(h_17385524, 0, (allSectors_16270629[0].data).length-1)].Field2;
            v_17185106 = allSectors_16270629[0].data[chckIndx(h_17385524, 0, (allSectors_16270629[0].data).length-1)].Field3;
            var id4Move_17185107 = nsuReplaceStr(k_17185105, makeNimstrLit(" "), makeNimstrLit("_"));
            var tmp_17105287 = tree_15065445(44, []);
            tmp_17105287.class = "sector";
            var tmp_17105288 = tree_15065445(71, []);
            tmp_17105288.class = "sect-name";
            add_15055272(tmp_17105288, text_15065582(name_16481057(v_17185106)));
            add_15055272(tmp_17105287, tmp_17105288);
            var tmp_17105289 = tree_15065445(44, []);
            tmp_17105289.class = "streets";
            L4: do {
              var nStreet_17185127 = [];
              var links_17185128 = [];
              var L_17385503 = len_16825548(v_17185106.streets);
              if ((0 < v_17185106.streets.counter)) {
              var h_17385504 = v_17185106.streets.first;
              L5: do {
                  L6: while (true) {
                  if (!(0 <= h_17385504)) break L6;
                    var nxt_17385506 = v_17185106.streets.data[chckIndx(h_17385504, 0, (v_17185106.streets.data).length-1)].Field1;
                    if (isFilled_11481218(v_17185106.streets.data[chckIndx(h_17385504, 0, (v_17185106.streets.data).length-1)].Field0)) {
                    nStreet_17185127 = v_17185106.streets.data[chckIndx(h_17385504, 0, (v_17185106.streets.data).length-1)].Field2;
                    links_17185128 = v_17185106.streets.data[chckIndx(h_17385504, 0, (v_17185106.streets.data).length-1)].Field3;
                    var streetObj_17185129 = {name: nimCopy(null, nStreet_17185127, NTI1188013), sector: v_17185106, links: [], totalFamilies: 0};
                    if (hasKey_17185239(tblTotalFam_16480773[0], hash_16211255(streetObj_17185129))) {
                    Tmp7 = (Tmp8 = HEX5BHEX5D_17185420(tblTotalFam_16480773[0], hash_16211255(streetObj_17185129)), Tmp8)[0][Tmp8[1]];
                    }
                    else {
                    Tmp7 = 0;
                    }
                    
                    var totalFam_17190016 = Tmp7;
                    var coord_17190017 = links_17185128[chckIndx(0, 0, (links_17185128).length-1)].geometry[chckIndx(0, 0, (links_17185128[chckIndx(0, 0, (links_17185128).length-1)].geometry).length-1)];
                    var fmtRes_17190018 = [mnewString(0)];
                    formatValue_12260080(fmtRes_17190018, 0, v_17185106.postalCode, []);
                    fmtRes_17190018[0].push.apply(fmtRes_17190018[0], makeNimstrLit("+"));;
                    formatValue_12260080(fmtRes_17190018, 0, v_17185106.city, []);
                    var ci_17195003 = nimCopy(null, fmtRes_17190018[0], NTI1188013);
                    var st_17195004 = encodeUrl_11151140(nStreet_17185127, true);
                    var tmp_17105290 = tree_15065445(44, []);
                    tmp_17105290.class = "street";
                    var tmp_17105291 = tree_15065445(44, []);
                    var tmp_17105292 = tree_15065445(71, []);
                    setAttr_15000105(tmp_17105292, "data-lat", toJSStr(cstrToNimstr(nimFloatToString(coord_17190017.lat))));
                    setAttr_15000105(tmp_17105292, "data-lng", toJSStr(cstrToNimstr(nimFloatToString(coord_17190017.lng))));
                    addEventHandler_15790300(tmp_17105292, 0, clckOnStr_17101542, kxi__);
                    add_15055272(tmp_17105292, text_15065582(nsuJoinSep([nimCopy(null, nStreet_17185127, NTI1188013), makeNimstrLit(" ("), cstrToNimstr((totalFam_17190016)+""), makeNimstrLit(")")], [])));
                    add_15055272(tmp_17105291, tmp_17105292);
                    var tmp_17105293 = tree_15065445(71, []);
                    tmp_17105293.class = "tel-book";
                    var tmp_17105294 = tree_15065445(45, []);
                    var fmtRes_17195028 = [mnewString(0)];
                    fmtRes_17195028[0].push.apply(fmtRes_17195028[0], makeNimstrLit("https://www.dasoertliche.de/?zvo_ok=0&ci="));;
                    formatValue_12260080(fmtRes_17195028, 0, ci_17195003, []);
                    fmtRes_17195028[0].push.apply(fmtRes_17195028[0], makeNimstrLit("&st="));;
                    formatValue_12260080(fmtRes_17195028, 0, st_17195004, []);
                    fmtRes_17195028[0].push.apply(fmtRes_17195028[0], makeNimstrLit("&radius=0&form_name=search_nat_ext"));;
                    setAttr_15000105(tmp_17105294, "href", toJSStr(fmtRes_17195028[0]));
                    setAttr_15000105(tmp_17105294, "target", "_blank");
                    add_15055272(tmp_17105294, text_15065582(makeNimstrLit("das \xC3\x96rtl.")));
                    add_15055272(tmp_17105293, tmp_17105294);
                    add_15055272(tmp_17105291, tmp_17105293);
                    add_15055272(tmp_17105290, tmp_17105291);
                    add_15055272(tmp_17105289, tmp_17105290);
                    if (!((len_16825548(v_17185106.streets) == L_17385503))) {
                    failedAssertImpl_1305480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
                    }
                    
                    }
                    
                    h_17385504 = nxt_17385506;
                  }
              } while(false);
              }
              
            } while(false);
            add_15055272(tmp_17105287, tmp_17105289);
            var tmp_17105295 = tree_15065445(44, []);
            tmp_17105295.class = "show-sector-box";
            var tmp_17105296 = tree_15065445(193, []);
            setAttr_15000105(tmp_17105296, "for", toJSStr(k_17185105));
            add_15055272(tmp_17105296, text_15065582((makeNimstrLit("\xD0\x9F\xD0\xBE\xD0\xBA\xD0\xB0\xD0\xB7. \xD0\xBD\xD0\xB0 \xD0\xBA\xD0\xB0\xD1\x80\xD1\x82\xD0\xB5 (") || []).concat(cstrToNimstr((len_16825548(v_17185106.streets))+"") || [],makeNimstrLit(")") || [])));
            add_15055272(tmp_17105295, tmp_17105296);
            var tmp_17105297 = tree_15065445(194, []);
            setAttr_15000105(tmp_17105297, "type", "checkbox");
            setAttr_15000105(tmp_17105297, "name", "showSector");
            tmp_17105297.class = "show-sector";
            valueHEX3D_14965141(tmp_17105297, toJSStr(k_17185105));
            setAttr_15000105(tmp_17105297, "value", toJSStr(k_17185105));
            tmp_17105297.id = toJSStr(k_17185105);
            setAttr_15000105(tmp_17105297, "checkd", toJSStr(nimBoolToStr(v_17185106.shownOnMap)));
            addEventHandler_15790300(tmp_17105297, 0, HEX3Aanonymous_17200149, kxi__);
            add_15055272(tmp_17105295, tmp_17105297);
            add_15055272(tmp_17105287, tmp_17105295);
            var tmp_17105298 = tree_15065445(44, []);
            tmp_17105298.class = "for-select";
            var tmp_17105299 = tree_15065445(196, []);
            tmp_17105299.id = toJSStr(id4Move_17185107);
            var tmp_17105300 = tree_15065445(199, []);
            valueHEX3D_14965141(tmp_17105300, "");
            setAttr_15000105(tmp_17105300, "value", "");
            add_15055272(tmp_17105300, text_15065582(makeNimstrLit("\xD0\x94\xD0\xB2\xD0\xB8\xD0\xBD\xD1\x83\xD1\x82\xD1\x8C \xD0\xB2\xD1\x81\xD0\xB5 \xD1\x83\xD0\xBB\xD0\xB8\xD1\x86\xD1\x8B \xD0\xB2")));
            add_15055272(tmp_17105299, tmp_17105300);
            L9: do {
              var kOpt_17230233 = [];
              var vOpt_17230234 = null;
              var L_17385517 = len_16500198(allSectors_16270629[0]);
              if ((0 < allSectors_16270629[0].counter)) {
              var h_17385518 = allSectors_16270629[0].first;
              L10: do {
                  L11: while (true) {
                  if (!(0 <= h_17385518)) break L11;
                    var nxt_17385520 = allSectors_16270629[0].data[chckIndx(h_17385518, 0, (allSectors_16270629[0].data).length-1)].Field1;
                    if (isFilled_11481218(allSectors_16270629[0].data[chckIndx(h_17385518, 0, (allSectors_16270629[0].data).length-1)].Field0)) {
                    kOpt_17230233 = allSectors_16270629[0].data[chckIndx(h_17385518, 0, (allSectors_16270629[0].data).length-1)].Field2;
                    vOpt_17230234 = allSectors_16270629[0].data[chckIndx(h_17385518, 0, (allSectors_16270629[0].data).length-1)].Field3;
                    L12: do {
                      if (eqStrings(kOpt_17230233, id_16485026(v_17185106))) {
                      break L12;
                      }
                      
                      var tmp_17105301 = tree_15065445(199, []);
                      valueHEX3D_14965141(tmp_17105301, toJSStr(kOpt_17230233));
                      setAttr_15000105(tmp_17105301, "value", toJSStr(kOpt_17230233));
                      add_15055272(tmp_17105301, text_15065582(kOpt_17230233));
                      add_15055272(tmp_17105299, tmp_17105301);
                    } while(false);
                    if (!((len_16500198(allSectors_16270629[0]) == L_17385517))) {
                    failedAssertImpl_1305480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
                    }
                    
                    }
                    
                    h_17385518 = nxt_17385520;
                  }
              } while(false);
              }
              
            } while(false);
            add_15055272(tmp_17105298, tmp_17105299);
            var tmp_17105302 = tree_15065445(195, []);
            tmp_17105302.id = toJSStr(id4Move_17185107);
            add_15055272(tmp_17105302, text_15065582(makeNimstrLit("\xD0\x9E\xD0\xBA !")));
            addEventHandler_15790300(tmp_17105302, 0, HEX3Aanonymous_17230246, kxi__);
            add_15055272(tmp_17105298, tmp_17105302);
            add_15055272(tmp_17105287, tmp_17105298);
            var tmp_17105303 = tree_15065445(195, []);
            tmp_17105303.id = toJSStr(id4Move_17185107);
            add_15055272(tmp_17105303, text_15065582(makeNimstrLit("\xD0\xB2\xD1\x81\xD1\x82\xD0\xB0\xD0\xB2\xD0\xB8\xD1\x82\xD1\x8C \xD0\xBD\xD0\xBE\xD0\xB2\xD1\x8B\xD0\xB9 \xD1\x83\xD1\x87\xD0\xB0\xD1\x81\xD1\x82\xD0\xBE\xD0\xBA")));
            addEventHandler_15790300(tmp_17105303, 0, HEX3Aanonymous_17246972, kxi__);
            add_15055272(tmp_17105287, tmp_17105303);
            add_15055272(tmp_17105282, tmp_17105287);
            if (!((len_16500198(allSectors_16270629[0]) == L_17385523))) {
            failedAssertImpl_1305480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_17385524 = nxt_17385526;
          }
      } while(false);
      }
      
    } while(false);
    if (!((len_16500198(allSectors_16270629[0]) == 0))) {
    var tmp_17105304 = tree_15065445(44, []);
    tmp_17105304.class = "chg-sect-name";
    var tmp_17105305 = tree_15065445(193, []);
    add_15055272(tmp_17105305, text_15065582(makeNimstrLit("\xD1\x83\xD1\x81\xD1\x82\xD0\xB0\xD0\xBD\xD0\xBE\xD0\xB2\xD0\xB8\xD1\x82\xD1\x8C \xD0\xBD\xD0\xBE\xD0\xB2\xD0\xBE\xD0\xB5 \xD0\xB8\xD0\xBC\xD1\x8F \xD1\x80\xD0\xB0\xD0\xB9\xD0\xBE\xD0\xBD\xD0\xB0: ")));
    add_15055272(tmp_17105304, tmp_17105305);
    var tmp_17105306 = tree_15065445(194, []);
    setAttr_15000105(tmp_17105306, "type", "text");
    setAttr_15000105(tmp_17105306, "placeholder", "новое имя района");
    setAttr_15000105(tmp_17105306, "name", "newDistrictName");
    add_15055272(tmp_17105304, tmp_17105306);
    var tmp_17105307 = tree_15065445(32, []);
    var tmp_17105308 = tree_15065445(193, []);
    add_15055272(tmp_17105308, text_15065582(makeNimstrLit("\xD1\x81: ")));
    add_15055272(tmp_17105307, tmp_17105308);
    var tmp_17105309 = tree_15065445(194, []);
    setAttr_15000105(tmp_17105309, "type", "text");
    setAttr_15000105(tmp_17105309, "placeholder", "с номера участка");
    setAttr_15000105(tmp_17105309, "name", "fromNSect");
    add_15055272(tmp_17105307, tmp_17105309);
    var tmp_17105310 = tree_15065445(193, []);
    add_15055272(tmp_17105310, text_15065582(makeNimstrLit("\xD0\xBF\xD0\xBE: ")));
    add_15055272(tmp_17105307, tmp_17105310);
    var tmp_17105311 = tree_15065445(194, []);
    setAttr_15000105(tmp_17105311, "type", "text");
    setAttr_15000105(tmp_17105311, "placeholder", "по номер участка");
    setAttr_15000105(tmp_17105311, "name", "toNSect");
    add_15055272(tmp_17105307, tmp_17105311);
    add_15055272(tmp_17105304, tmp_17105307);
    var tmp_17105312 = tree_15065445(195, []);
    add_15055272(tmp_17105312, text_15065582(makeNimstrLit("\xD1\x83\xD1\x81\xD1\x82\xD0\xB0\xD0\xBD\xD0\xBE\xD0\xB2\xD0\xB8\xD1\x82\xD1\x8C!")));
    addEventHandler_15790300(tmp_17105312, 0, HEX3Aanonymous_17285170, kxi__);
    add_15055272(tmp_17105304, tmp_17105312);
    add_15055272(tmp_17105282, tmp_17105304);
    }
    
    L13: do {
      var k_17310229 = [];
      var v_17310230 = 0;
      var L_17385545 = len_16985152(lastPostfix_16280629[0]);
      L14: do {
        var h_17385547 = 0;
        var colontmp__17385548 = 0;
        colontmp__17385548 = (lastPostfix_16280629[0].data).length - 1;
        var res_17385549 = 0;
        L15: do {
            L16: while (true) {
            if (!(res_17385549 <= colontmp__17385548)) break L16;
              h_17385547 = res_17385549;
              if (isFilled_11481218(lastPostfix_16280629[0].data[chckIndx(h_17385547, 0, (lastPostfix_16280629[0].data).length-1)].Field0)) {
              k_17310229 = lastPostfix_16280629[0].data[chckIndx(h_17385547, 0, (lastPostfix_16280629[0].data).length-1)].Field1;
              v_17310230 = lastPostfix_16280629[0].data[chckIndx(h_17385547, 0, (lastPostfix_16280629[0].data).length-1)].Field2;
              var tmp_17105313 = tree_15065445(44, []);
              add_15055272(tmp_17105313, text_15065582((k_17310229 || []).concat(makeNimstrLit(" : ") || [],cstrToNimstr((v_17310230)+"") || [])));
              add_15055272(tmp_17105282, tmp_17105313);
              if (!((len_16985152(lastPostfix_16280629[0]) == L_17385545))) {
              failedAssertImpl_1305480(makeNimstrLit("tables.nim(681, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_17385549 = addInt(res_17385549, 1);
            }
        } while(false);
      } while(false);
    } while(false);
    L17: do {
      var k_17320229 = [];
      var v_17320230 = null;
      var L_17385558 = len_17310368(allStreets_16250629[0]);
      if ((0 < allStreets_16250629[0].counter)) {
      var h_17385559 = allStreets_16250629[0].first;
      L18: do {
          L19: while (true) {
          if (!(0 <= h_17385559)) break L19;
            var nxt_17385561 = allStreets_16250629[0].data[chckIndx(h_17385559, 0, (allStreets_16250629[0].data).length-1)].Field1;
            if (isFilled_11481218(allStreets_16250629[0].data[chckIndx(h_17385559, 0, (allStreets_16250629[0].data).length-1)].Field0)) {
            k_17320229 = allStreets_16250629[0].data[chckIndx(h_17385559, 0, (allStreets_16250629[0].data).length-1)].Field2;
            v_17320230 = allStreets_16250629[0].data[chckIndx(h_17385559, 0, (allStreets_16250629[0].data).length-1)].Field3;
            L20: do {
              if (!((v_17320230.sector == null))) {
              break L20;
              }
              
              var coord_17325009 = v_17320230.links[chckIndx(0, 0, (v_17320230.links).length-1)].geometry[chckIndx(0, 0, (v_17320230.links[chckIndx(0, 0, (v_17320230.links).length-1)].geometry).length-1)];
              var tmp_17105314 = tree_15065445(44, []);
              tmp_17105314.class = "street";
              var tmp_17105315 = tree_15065445(71, []);
              setAttr_15000105(tmp_17105315, "data-lat", toJSStr(cstrToNimstr(nimFloatToString(coord_17325009.lat))));
              setAttr_15000105(tmp_17105315, "data-lng", toJSStr(cstrToNimstr(nimFloatToString(coord_17325009.lng))));
              addEventHandler_15790300(tmp_17105315, 0, clckOnStr_17101542, kxi__);
              add_15055272(tmp_17105315, text_15065582(k_17320229));
              add_15055272(tmp_17105314, tmp_17105315);
              add_15055272(tmp_17105282, tmp_17105314);
            } while(false);
            if (!((len_17310368(allStreets_16250629[0]) == L_17385558))) {
            failedAssertImpl_1305480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_17385559 = nxt_17385561;
          }
      } while(false);
      }
      
    } while(false);
    add_15055272(tmp_17105276, tmp_17105282);
    result_17101541 = tmp_17105276;

  return result_17101541;

}
var Tmp3;
var locSearch_17335010 = [cstrToNimstr((window.location.search))];
locSearch_17335010[0] = nimCopy(null, nsuReplaceStr(locSearch_17335010[0], makeNimstrLit("?"), []), NTI1188013);
var arrLs_17335011 = nsuSplitString(locSearch_17335010[0], makeNimstrLit("&"), -1);
var apikey_17335012 = nimCopy(null, (Tmp3 = nsuSplitString(arrLs_17335011[chckIndx(0, 0, (arrLs_17335011).length-1)], makeNimstrLit("="), -1), Tmp3)[chckIndx(1, 0, (Tmp3).length-1)], NTI1188013);
var opts_17335014 = {apikey: toJSStr(apikey_17335012), useHTTPS: true, m_type: NTI15872030, app_id: null, app_code: null, useCIT: false};
var pixelRatio_17340010 = (window.devicePixelRatio);
var hidpi_17345001 = (1.0000000000000000e+00 < pixelRatio_17340010);
var layerOpts_17345002 = [{m_type: NTI15940014, tileSize: 0, ppi: 0, lg: null, lg2: null, style: null, pois: false, crossOrigin: []}];
if (hidpi_17345001) {
layerOpts_17345002[0].ppi = 320;
}

platform_16230017[0] = function(o){return new H.service.Platform(o)}(opts_17335014);
var defLayers_17345004 = platform_16230017[0].createDefaultLayers();
var mapOpts_17345007 = [{pixelRatio: pixelRatio_17340010, m_type: NTI16097035, noWrap: false}];
var normalMap_17350004 = defLayers_17345004.vector.normal;
map = function(element, baseLayer, opt_options){return new H.Map(element, baseLayer, opt_options)}(document.getElementById("map"), normalMap_17350004.map, mapOpts_17345007[0]);
var mapEvts_17355004 = function(map){return new H.mapevents.MapEvents(map)}(map);
var behavior = function(mapE){return new H.mapevents.Behavior(mapE)}(mapEvts_17355004);
var uiDef_17385006 = [H.ui.UI.createDefault((map), (defLayers_17345004))];
setRenderer_15785238(createDom_17101539, "main-control-container", null);
map.setCenter({lat: 5.0151851800000003e+01, lng: 8.9302924000000008e+00, m_type: NTI11721036}, false);
map.setZoom(9, false);
var mainGroup_17385008 = [function(){return new H.map.Group()}()];
var mainSectorGroup_17385009 = [function(){return new H.map.Group()}()];
mainGroup_17385008[0].setZIndex(99);
map.addObject(mainGroup_17385008[0]);
map.addObject(mainSectorGroup_17385009[0]);
var mrk_17385022 = function(position){return new H.map.Marker(position)}({lat: 5.2000000000000000e+01, lng: 8.0000000000000000e+00, m_type: NTI11721036});
var p_17385024 = {lat: 3.4000000000000000e+01, lng: 1.2300000000000000e+02, m_type: NTI11721036};
var scrPoint_17385025 = function(x,y){return new H.math.Point(x, y)}(1, 1);
var check_17385028 = isPointInPolygon(scrPoint_17385025, [function(x,y){return new H.math.Point(x, y)}(0, 0), function(x,y){return new H.math.Point(x, y)}(0, 3), function(x,y){return new H.math.Point(x, y)}(3, 3)]);
rawEcho(makeNimstrLit("check: "), nimBoolToStr(check_17385028));
var cle_17385033 = platform_16230017[0].getCustomLocationService();
var geocoder_17385034 = platform_16230017[0].getGeocodingService();
var pdeService_17385035 = [platform_16230017[0].getPlatformDataService()];
map.addObject(mvStreetGrp_16280630[0]);
var strGgeoPoint_18520250 = [newSeq_1840232(0)];
function len_16685416(t_16685421) {
  var result_16685422 = 0;

    result_16685422 = t_16685421.counter;

  return result_16685422;

}
function len_18140146(t_18140151) {
  var result_18140152 = 0;

    result_18140152 = t_18140151.counter;

  return result_18140152;

}
function rawGet_17492022(t_17492026, key_17492027, hc_17492028, hc_17492028_Idx) {
            var Tmp3;

  var result_17492029 = 0;

  BeforeRet: do {
    hc_17492028[hc_17492028_Idx] = hash_11420408(key_17492027);
    if ((hc_17492028[hc_17492028_Idx] == 0)) {
    hc_17492028[hc_17492028_Idx] = 314159265;
    }
    
    if (((t_17492026.data).length == 0)) {
    result_17492029 = -1;
    break BeforeRet;
    }
    
    var h_17500138 = (hc_17492028[hc_17492028_Idx] & (t_17492026.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_11481218(t_17492026.data[chckIndx(h_17500138, 0, (t_17492026.data).length-1)].Field0)) break L2;
            if (!(t_17492026.data[chckIndx(h_17500138, 0, (t_17492026.data).length-1)].Field0 == hc_17492028[hc_17492028_Idx])) Tmp3 = false; else {              Tmp3 = (t_17492026.data[chckIndx(h_17500138, 0, (t_17492026.data).length-1)].Field1 == key_17492027);            }          if (Tmp3) {
          result_17492029 = h_17500138;
          break BeforeRet;
          }
          
          h_17500138 = nextTry_11485014(h_17500138, (t_17492026.data).length - 1);
        }
    } while(false);
    result_17492029 = subInt(-1, h_17500138);
  } while (false);

  return result_17492029;

}
function mustRehash_17785601(t_17785604) {
  var result_17785605 = false;

    if (!((t_17785604.counter < (t_17785604.data).length))) {
    failedAssertImpl_1305480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_17785605 = ((mulInt((t_17785604.data).length, 2) < mulInt(t_17785604.counter, 3)) || (subInt((t_17785604.data).length, t_17785604.counter) < 4));

  return result_17785605;

}
function rawInsert_17811122(t_17811128, data_17811131, data_17811131_Idx, key_17811132, val_17811134, hc_17811135, h_17811136) {
    data_17811131[data_17811131_Idx][chckIndx(h_17811136, 0, (data_17811131[data_17811131_Idx]).length-1)].Field1 = key_17811132;
    data_17811131[data_17811131_Idx][chckIndx(h_17811136, 0, (data_17811131[data_17811131_Idx]).length-1)].Field2 = val_17811134;
    data_17811131[data_17811131_Idx][chckIndx(h_17811136, 0, (data_17811131[data_17811131_Idx]).length-1)].Field0 = hc_17811135;

  
}
function enlarge_17810161(t_17810167) {
    var n_17810175 = [];
    n_17810175 = new Array(chckRange(mulInt((t_17810167.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_17810167.data).length, 2), 0, 2147483647);++i) {n_17810175[i]={Field0: 0, Field1: 0, Field2: null};}    var Tmp1 = t_17810167.data; t_17810167.data = n_17810175; n_17810175 = Tmp1;    L2: do {
      var i_17810334 = 0;
      var colontmp__18550387 = 0;
      colontmp__18550387 = (n_17810175).length - 1;
      var res_18550388 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_18550388 <= colontmp__18550387)) break L4;
            i_17810334 = res_18550388;
            var eh_17810490 = n_17810175[chckIndx(i_17810334, 0, (n_17810175).length-1)].Field0;
            if (isFilled_11481218(eh_17810490)) {
            var j_17810497 = (eh_17810490 & (t_17810167.data).length - 1);
            L5: do {
                L6: while (true) {
                if (!isFilled_11481218(t_17810167.data[chckIndx(j_17810497, 0, (t_17810167.data).length-1)].Field0)) break L6;
                  j_17810497 = nextTry_11485014(j_17810497, (t_17810167.data).length - 1);
                }
            } while(false);
            rawInsert_17811122(t_17810167, t_17810167, "data", n_17810175[chckIndx(i_17810334, 0, (n_17810175).length-1)].Field1, n_17810175[chckIndx(i_17810334, 0, (n_17810175).length-1)].Field2, eh_17810490, j_17810497);
            }
            
            res_18550388 = addInt(res_18550388, 1);
          }
      } while(false);
    } while(false);

  
}
function rawGetKnownHC_17811629(t_17811633, key_17811634, hc_17811635) {
  var result_17811636 = 0;

  BeforeRet: do {
    if (((t_17811633.data).length == 0)) {
    result_17811636 = -1;
    break BeforeRet;
    }
    
    var h_17815138 = (hc_17811635 & (t_17811633.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_11481218(t_17811633.data[chckIndx(h_17815138, 0, (t_17811633.data).length-1)].Field0)) break L2;
          if (((t_17811633.data[chckIndx(h_17815138, 0, (t_17811633.data).length-1)].Field0 == hc_17811635) && (t_17811633.data[chckIndx(h_17815138, 0, (t_17811633.data).length-1)].Field1 == key_17811634))) {
          result_17811636 = h_17815138;
          break BeforeRet;
          }
          
          h_17815138 = nextTry_11485014(h_17815138, (t_17811633.data).length - 1);
        }
    } while(false);
    result_17811636 = subInt(-1, h_17815138);
  } while (false);

  return result_17811636;

}
function hasKeyOrPut_17755087(t_17755093, key_17755094, val_17755095) {
  var result_17755096 = false;

    if (((t_17755093.data).length == 0)) {
    var correctSizeHEX60gensym298_17765001 = slotsNeeded_11485048(32);
    t_17755093.counter = 0;
    t_17755093.data = new Array(chckRange(correctSizeHEX60gensym298_17765001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym298_17765001, 0, 2147483647);++i) {t_17755093.data[i]={Field0: 0, Field1: 0, Field2: null};}    }
    
    var hc_17770601 = [0];
    var index_17770610 = rawGet_17492022(t_17755093, key_17755094, hc_17770601, 0);
    if ((index_17770610 < 0)) {
    result_17755096 = false;
    if (((t_17755093.data).length == 0)) {
    var correctSizeHEX60gensym301_17780001 = slotsNeeded_11485048(32);
    t_17755093.counter = 0;
    t_17755093.data = new Array(chckRange(correctSizeHEX60gensym301_17780001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym301_17780001, 0, 2147483647);++i) {t_17755093.data[i]={Field0: 0, Field1: 0, Field2: null};}    }
    
    if (mustRehash_17785601(t_17755093)) {
    enlarge_17810161(t_17755093);
    index_17770610 = rawGetKnownHC_17811629(t_17755093, key_17755094, hc_17770601[0]);
    }
    
    index_17770610 = subInt(-1, index_17770610);
    rawInsert_17811122(t_17755093, t_17755093, "data", key_17755094, val_17755095, hc_17770601[0], index_17770610);
    t_17755093.counter = addInt(t_17755093.counter, 1);
    }
    else {
      result_17755096 = true;
    }
    

  return result_17755096;

}
function HEX5BHEX5D_17500788(t_17500794, key_17500795) {
  var result_17500797 = null;
  var result_17500797_Idx = 0;

    var hcHEX60gensym22_17500798 = [0];
    var indexHEX60gensym22_17500807 = rawGet_17492022(t_17500794, key_17500795, hcHEX60gensym22_17500798, 0);
    if ((0 <= indexHEX60gensym22_17500807)) {
    result_17500797 = t_17500794.data[chckIndx(indexHEX60gensym22_17500807, 0, (t_17500794.data).length-1)]; result_17500797_Idx = "Field2";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(cstrToNimstr((key_17500795)+"") || []), parent: null, m_type: NTI1194645, name: null, trace: [], up: null}, "KeyError");
    }
    

  return [result_17500797, result_17500797_Idx];

}
function newSeq_17865181(len_17865184) {
  var result_17865186 = [];

    result_17865186 = new Array(len_17865184); for (var i=0;i<len_17865184;++i) {result_17865186[i]=null;}
  return result_17865186;

}
function map_12345035(s_12345040, op_12345043) {
  var result_12345045 = [];

    result_12345045 = new Array(chckRange((s_12345040).length, 0, 2147483647)); for (var i=0;i<chckRange((s_12345040).length, 0, 2147483647);++i) {result_12345045[i]=0;}    L1: do {
      var i_12345068 = 0;
      var colontmp__18550396 = 0;
      colontmp__18550396 = (s_12345040).length;
      var i_18550397 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_18550397 < colontmp__18550396)) break L3;
            i_12345068 = i_18550397;
            result_12345045[chckIndx(i_12345068, 0, (result_12345045).length-1)] = op_12345043(s_12345040[chckIndx(i_12345068, 0, (s_12345040).length-1)]);
            i_18550397 = addInt(i_18550397, 1);
          }
      } while(false);
    } while(false);

  return result_12345045;

}
function newSeq_17920244(len_17920247) {
  var result_17920249 = [];

    result_17920249 = new Array(len_17920247); for (var i=0;i<len_17920247;++i) {result_17920249[i]=0;}
  return result_17920249;

}
function concat_17920471(seqs_17920476) {
  var result_17920478 = [];

    var L_17920480 = 0;
    L1: do {
      var seqitm_17920513 = null;
      var seqitm_17920513_Idx = 0;
      var i_18550401 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_18550401 < (seqs_17920476).length)) break L3;
            seqitm_17920513 = seqs_17920476; seqitm_17920513_Idx = chckIndx(i_18550401, 0, (seqs_17920476).length-1);
            L_17920480 = addInt(L_17920480, (seqitm_17920513[seqitm_17920513_Idx]).length);
            i_18550401 = addInt(i_18550401, 1);
          }
      } while(false);
    } while(false);
    result_17920478 = new Array(chckRange(L_17920480, 0, 2147483647)); for (var i=0;i<chckRange(L_17920480, 0, 2147483647);++i) {result_17920478[i]=0;}    var i_17920533 = 0;
    L4: do {
      var s_17920540 = null;
      var s_17920540_Idx = 0;
      var i_18550409 = 0;
      L5: do {
          L6: while (true) {
          if (!(i_18550409 < (seqs_17920476).length)) break L6;
            s_17920540 = seqs_17920476; s_17920540_Idx = chckIndx(i_18550409, 0, (seqs_17920476).length-1);
            L7: do {
              var itm_17920548 = null;
              var itm_17920548_Idx = 0;
              var i_18550406 = 0;
              var L_18550407 = (s_17920540[s_17920540_Idx]).length;
              L8: do {
                  L9: while (true) {
                  if (!(i_18550406 < L_18550407)) break L9;
                    itm_17920548 = s_17920540[s_17920540_Idx]; itm_17920548_Idx = chckIndx(i_18550406, 0, (s_17920540[s_17920540_Idx]).length-1);
                    result_17920478[chckIndx(i_17920533, 0, (result_17920478).length-1)] = itm_17920548[itm_17920548_Idx];
                    i_17920533 = addInt(i_17920533, 1);
                    i_18550406 = addInt(i_18550406, 1);
                    if (!(((s_17920540[s_17920540_Idx]).length == L_18550407))) {
                    failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while(false);
            } while(false);
            i_18550409 = addInt(i_18550409, 1);
          }
      } while(false);
    } while(false);

  return result_17920478;

}
function rawGet_17445338(t_17445343, key_17445344, hc_17445345, hc_17445345_Idx) {
            var Tmp3;

  var result_17445346 = 0;

  BeforeRet: do {
    hc_17445345[hc_17445345_Idx] = hash_11460214(key_17445344);
    if ((hc_17445345[hc_17445345_Idx] == 0)) {
    hc_17445345[hc_17445345_Idx] = 314159265;
    }
    
    if (((t_17445343.data).length == 0)) {
    result_17445346 = -1;
    break BeforeRet;
    }
    
    var h_17455138 = (hc_17445345[hc_17445345_Idx] & (t_17445343.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_11481218(t_17445343.data[chckIndx(h_17455138, 0, (t_17445343.data).length-1)].Field0)) break L2;
            if (!(t_17445343.data[chckIndx(h_17455138, 0, (t_17445343.data).length-1)].Field0 == hc_17445345[hc_17445345_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_17445343.data[chckIndx(h_17455138, 0, (t_17445343.data).length-1)].Field2, key_17445344);            }          if (Tmp3) {
          result_17445346 = h_17455138;
          break BeforeRet;
          }
          
          h_17455138 = nextTry_11485014(h_17455138, (t_17445343.data).length - 1);
        }
    } while(false);
    result_17445346 = subInt(-1, h_17455138);
  } while (false);

  return result_17445346;

}
function mustRehash_17955601(t_17955604) {
  var result_17955605 = false;

    if (!((t_17955604.counter < (t_17955604.data).length))) {
    failedAssertImpl_1305480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_17955605 = ((mulInt((t_17955604.data).length, 2) < mulInt(t_17955604.counter, 3)) || (subInt((t_17955604.data).length, t_17955604.counter) < 4));

  return result_17955605;

}
function rawInsert_17981359(t_17981365, data_17981368, data_17981368_Idx, key_17981369, val_17981371, hc_17981372, h_17981373) {
    data_17981368[data_17981368_Idx][chckIndx(h_17981373, 0, (data_17981368[data_17981368_Idx]).length-1)].Field2 = nimCopy(null, key_17981369, NTI1188013);
    data_17981368[data_17981368_Idx][chckIndx(h_17981373, 0, (data_17981368[data_17981368_Idx]).length-1)].Field3 = val_17981371;
    data_17981368[data_17981368_Idx][chckIndx(h_17981373, 0, (data_17981368[data_17981368_Idx]).length-1)].Field0 = hc_17981372;
    data_17981368[data_17981368_Idx][chckIndx(h_17981373, 0, (data_17981368[data_17981368_Idx]).length-1)].Field1 = -1;
    if ((t_17981365.first < 0)) {
    t_17981365.first = h_17981373;
    }
    
    if ((0 <= t_17981365.last)) {
    data_17981368[data_17981368_Idx][chckIndx(t_17981365.last, 0, (data_17981368[data_17981368_Idx]).length-1)].Field1 = h_17981373;
    }
    
    t_17981365.last = h_17981373;

  
}
function enlarge_17980180(t_17980186) {
          var Tmp6;
          var Tmp7;

    var n_17980194 = [];
    n_17980194 = new Array(chckRange(mulInt((t_17980186.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_17980186.data).length, 2), 0, 2147483647);++i) {n_17980194[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    var h_17980333 = t_17980186.first;
    t_17980186.first = -1;
    t_17980186.last = -1;
    var Tmp1 = t_17980186.data; t_17980186.data = n_17980194; n_17980194 = Tmp1;    L2: do {
        L3: while (true) {
        if (!(0 <= h_17980333)) break L3;
          var nxt_17980496 = n_17980194[chckIndx(h_17980333, 0, (n_17980194).length-1)].Field1;
          var eh_17980652 = n_17980194[chckIndx(h_17980333, 0, (n_17980194).length-1)].Field0;
          if (isFilled_11481218(eh_17980652)) {
          var j_17980659 = (eh_17980652 & (t_17980186.data).length - 1);
          L4: do {
              L5: while (true) {
              if (!isFilled_11481218(t_17980186.data[chckIndx(j_17980659, 0, (t_17980186.data).length-1)].Field0)) break L5;
                j_17980659 = nextTry_11485014(j_17980659, (t_17980186.data).length - 1);
              }
          } while(false);
          Tmp6 = n_17980194[chckIndx(h_17980333, 0, (n_17980194).length-1)].Field2;
          n_17980194[chckIndx(h_17980333, 0, (n_17980194).length-1)].Field2 = genericReset(n_17980194[chckIndx(h_17980333, 0, (n_17980194).length-1)].Field2, NTI1188013);
          Tmp7 = n_17980194[chckIndx(h_17980333, 0, (n_17980194).length-1)].Field3;
          n_17980194[chckIndx(h_17980333, 0, (n_17980194).length-1)].Field3 = genericReset(n_17980194[chckIndx(h_17980333, 0, (n_17980194).length-1)].Field3, NTI16211021);
          rawInsert_17981359(t_17980186, t_17980186, "data", Tmp6, Tmp7, n_17980194[chckIndx(h_17980333, 0, (n_17980194).length-1)].Field0, j_17980659);
          }
          
          h_17980333 = nxt_17980496;
        }
    } while(false);

  
}
function rawGetKnownHC_17982195(t_17982200, key_17982201, hc_17982202) {
  var result_17982203 = 0;

  BeforeRet: do {
    if (((t_17982200.data).length == 0)) {
    result_17982203 = -1;
    break BeforeRet;
    }
    
    var h_17985138 = (hc_17982202 & (t_17982200.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_11481218(t_17982200.data[chckIndx(h_17985138, 0, (t_17982200.data).length-1)].Field0)) break L2;
          if (((t_17982200.data[chckIndx(h_17985138, 0, (t_17982200.data).length-1)].Field0 == hc_17982202) && eqStrings(t_17982200.data[chckIndx(h_17985138, 0, (t_17982200.data).length-1)].Field2, key_17982201))) {
          result_17982203 = h_17985138;
          break BeforeRet;
          }
          
          h_17985138 = nextTry_11485014(h_17985138, (t_17982200.data).length - 1);
        }
    } while(false);
    result_17982203 = subInt(-1, h_17985138);
  } while (false);

  return result_17982203;

}
function hasKeyOrPut_17925277(t_17925283, key_17925284, val_17925285) {
  var result_17925286 = false;

    if (((t_17925283.data).length == 0)) {
    var correctSizeHEX60gensym332_17935001 = slotsNeeded_11485048(32);
    t_17925283.counter = 0;
    t_17925283.data = new Array(chckRange(correctSizeHEX60gensym332_17935001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym332_17935001, 0, 2147483647);++i) {t_17925283.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    t_17925283.first = -1;
    t_17925283.last = -1;
    }
    
    var hc_17940601 = [0];
    var index_17940630 = rawGet_17445338(t_17925283, key_17925284, hc_17940601, 0);
    if ((index_17940630 < 0)) {
    result_17925286 = false;
    if (((t_17925283.data).length == 0)) {
    var correctSizeHEX60gensym335_17950001 = slotsNeeded_11485048(32);
    t_17925283.counter = 0;
    t_17925283.data = new Array(chckRange(correctSizeHEX60gensym335_17950001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym335_17950001, 0, 2147483647);++i) {t_17925283.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    t_17925283.first = -1;
    t_17925283.last = -1;
    }
    
    if (mustRehash_17955601(t_17925283)) {
    enlarge_17980180(t_17925283);
    index_17940630 = rawGetKnownHC_17982195(t_17925283, key_17925284, hc_17940601[0]);
    }
    
    index_17940630 = subInt(-1, index_17940630);
    rawInsert_17981359(t_17925283, t_17925283, "data", key_17925284, val_17925285, hc_17940601[0], index_17940630);
    t_17925283.counter = addInt(t_17925283.counter, 1);
    }
    else {
      result_17925286 = true;
    }
    

  return result_17925286;

}
function newSeq_17925193(len_17925196) {
  var result_17925198 = [];

    result_17925198 = new Array(len_17925196); for (var i=0;i<len_17925196;++i) {result_17925198[i]=null;}
  return result_17925198;

}
function rawGet_18000602(t_18000606, key_18000607, hc_18000608, hc_18000608_Idx) {
            var Tmp3;

  var result_18000609 = 0;

  BeforeRet: do {
    hc_18000608[hc_18000608_Idx] = hash_11460214(key_18000607);
    if ((hc_18000608[hc_18000608_Idx] == 0)) {
    hc_18000608[hc_18000608_Idx] = 314159265;
    }
    
    if (((t_18000606.data).length == 0)) {
    result_18000609 = -1;
    break BeforeRet;
    }
    
    var h_18010138 = (hc_18000608[hc_18000608_Idx] & (t_18000606.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_11481218(t_18000606.data[chckIndx(h_18010138, 0, (t_18000606.data).length-1)].Field0)) break L2;
            if (!(t_18000606.data[chckIndx(h_18010138, 0, (t_18000606.data).length-1)].Field0 == hc_18000608[hc_18000608_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_18000606.data[chckIndx(h_18010138, 0, (t_18000606.data).length-1)].Field1, key_18000607);            }          if (Tmp3) {
          result_18000609 = h_18010138;
          break BeforeRet;
          }
          
          h_18010138 = nextTry_11485014(h_18010138, (t_18000606.data).length - 1);
        }
    } while(false);
    result_18000609 = subInt(-1, h_18010138);
  } while (false);

  return result_18000609;

}
function mustRehash_18025601(t_18025604) {
  var result_18025605 = false;

    if (!((t_18025604.counter < (t_18025604.data).length))) {
    failedAssertImpl_1305480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_18025605 = ((mulInt((t_18025604.data).length, 2) < mulInt(t_18025604.counter, 3)) || (subInt((t_18025604.data).length, t_18025604.counter) < 4));

  return result_18025605;

}
function rawInsert_18051122(t_18051128, data_18051131, data_18051131_Idx, key_18051132, val_18051134, hc_18051135, h_18051136) {
    data_18051131[data_18051131_Idx][chckIndx(h_18051136, 0, (data_18051131[data_18051131_Idx]).length-1)].Field1 = nimCopy(null, key_18051132, NTI1188013);
    data_18051131[data_18051131_Idx][chckIndx(h_18051136, 0, (data_18051131[data_18051131_Idx]).length-1)].Field2 = val_18051134;
    data_18051131[data_18051131_Idx][chckIndx(h_18051136, 0, (data_18051131[data_18051131_Idx]).length-1)].Field0 = hc_18051135;

  
}
function enlarge_18050161(t_18050167) {
    var n_18050175 = [];
    n_18050175 = new Array(chckRange(mulInt((t_18050167.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_18050167.data).length, 2), 0, 2147483647);++i) {n_18050175[i]={Field0: 0, Field1: [], Field2: null};}    var Tmp1 = t_18050167.data; t_18050167.data = n_18050175; n_18050175 = Tmp1;    L2: do {
      var i_18050334 = 0;
      var colontmp__18550418 = 0;
      colontmp__18550418 = (n_18050175).length - 1;
      var res_18550419 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_18550419 <= colontmp__18550418)) break L4;
            i_18050334 = res_18550419;
            var eh_18050490 = n_18050175[chckIndx(i_18050334, 0, (n_18050175).length-1)].Field0;
            if (isFilled_11481218(eh_18050490)) {
            var j_18050497 = (eh_18050490 & (t_18050167.data).length - 1);
            L5: do {
                L6: while (true) {
                if (!isFilled_11481218(t_18050167.data[chckIndx(j_18050497, 0, (t_18050167.data).length-1)].Field0)) break L6;
                  j_18050497 = nextTry_11485014(j_18050497, (t_18050167.data).length - 1);
                }
            } while(false);
            rawInsert_18051122(t_18050167, t_18050167, "data", n_18050175[chckIndx(i_18050334, 0, (n_18050175).length-1)].Field1, n_18050175[chckIndx(i_18050334, 0, (n_18050175).length-1)].Field2, eh_18050490, j_18050497);
            }
            
            res_18550419 = addInt(res_18550419, 1);
          }
      } while(false);
    } while(false);

  
}
function rawGetKnownHC_18051629(t_18051633, key_18051634, hc_18051635) {
  var result_18051636 = 0;

  BeforeRet: do {
    if (((t_18051633.data).length == 0)) {
    result_18051636 = -1;
    break BeforeRet;
    }
    
    var h_18055138 = (hc_18051635 & (t_18051633.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_11481218(t_18051633.data[chckIndx(h_18055138, 0, (t_18051633.data).length-1)].Field0)) break L2;
          if (((t_18051633.data[chckIndx(h_18055138, 0, (t_18051633.data).length-1)].Field0 == hc_18051635) && eqStrings(t_18051633.data[chckIndx(h_18055138, 0, (t_18051633.data).length-1)].Field1, key_18051634))) {
          result_18051636 = h_18055138;
          break BeforeRet;
          }
          
          h_18055138 = nextTry_11485014(h_18055138, (t_18051633.data).length - 1);
        }
    } while(false);
    result_18051636 = subInt(-1, h_18055138);
  } while (false);

  return result_18051636;

}
function hasKeyOrPut_17986098(t_17986104, key_17986105, val_17986106) {
  var result_17986107 = false;

    if (((t_17986104.data).length == 0)) {
    var correctSizeHEX60gensym344_17995001 = slotsNeeded_11485048(32);
    t_17986104.counter = 0;
    t_17986104.data = new Array(chckRange(correctSizeHEX60gensym344_17995001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym344_17995001, 0, 2147483647);++i) {t_17986104.data[i]={Field0: 0, Field1: [], Field2: null};}    }
    
    var hc_18000601 = [0];
    var index_18010641 = rawGet_18000602(t_17986104, key_17986105, hc_18000601, 0);
    if ((index_18010641 < 0)) {
    result_17986107 = false;
    if (((t_17986104.data).length == 0)) {
    var correctSizeHEX60gensym349_18020001 = slotsNeeded_11485048(32);
    t_17986104.counter = 0;
    t_17986104.data = new Array(chckRange(correctSizeHEX60gensym349_18020001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym349_18020001, 0, 2147483647);++i) {t_17986104.data[i]={Field0: 0, Field1: [], Field2: null};}    }
    
    if (mustRehash_18025601(t_17986104)) {
    enlarge_18050161(t_17986104);
    index_18010641 = rawGetKnownHC_18051629(t_17986104, key_17986105, hc_18000601[0]);
    }
    
    index_18010641 = subInt(-1, index_18010641);
    rawInsert_18051122(t_17986104, t_17986104, "data", key_17986105, val_17986106, hc_18000601[0], index_18010641);
    t_17986104.counter = addInt(t_17986104.counter, 1);
    }
    else {
      result_17986107 = true;
    }
    

  return result_17986107;

}
function HEX2A_2136019(x_2136021, order_2136022) {
  var result_2136023 = 0;

    var y_2136028 = subInt(order_2136022, 1);
    result_2136023 = subInt((x_2136021 ^ y_2136028), y_2136028);

  return result_2136023;

}
function sort_18065080(t_18065086, cmp_18065096, order_18065097) {
                      var Tmp9;
                        var Tmp10;

  BeforeRet: do {
    var list_18065098 = t_18065086.first;
    var p_18065099 = 0;
    var q_18065100 = 0;
    var e_18065101 = 0;
    var tail_18065102 = 0;
    var oldhead_18065103 = 0;
    var nmerges_18065104 = 0;
    var psize_18065105 = 0;
    var qsize_18065106 = 0;
    var i_18065107 = 0;
    if ((t_18065086.counter == 0)) {
    break BeforeRet;
    }
    
    var insize_18065109 = 1;
    L1: do {
        L2: while (true) {
        if (!true) break L2;
          p_18065099 = list_18065098;
          oldhead_18065103 = list_18065098;
          list_18065098 = -1;
          tail_18065102 = -1;
          nmerges_18065104 = 0;
          L3: do {
              L4: while (true) {
              if (!(0 <= p_18065099)) break L4;
                nmerges_18065104 = addInt(nmerges_18065104, 1);
                q_18065100 = p_18065099;
                psize_18065105 = 0;
                i_18065107 = 0;
                L5: do {
                    L6: while (true) {
                    if (!(i_18065107 < insize_18065109)) break L6;
                      psize_18065105 = addInt(psize_18065105, 1);
                      q_18065100 = t_18065086.data[chckIndx(q_18065100, 0, (t_18065086.data).length-1)].Field1;
                      if ((q_18065100 < 0)) {
                      break L5;
                      }
                      
                      i_18065107 = addInt(i_18065107, 1);
                    }
                } while(false);
                qsize_18065106 = insize_18065109;
                L7: do {
                    L8: while (true) {
                      if ((0 < psize_18065105)) Tmp9 = true; else {                        if (!(0 < qsize_18065106)) Tmp10 = false; else {                          Tmp10 = (0 <= q_18065100);                        }                        Tmp9 = Tmp10;                      }                    if (!Tmp9) break L8;
                      if ((psize_18065105 == 0)) {
                      e_18065101 = q_18065100;
                      q_18065100 = t_18065086.data[chckIndx(q_18065100, 0, (t_18065086.data).length-1)].Field1;
                      qsize_18065106 = subInt(qsize_18065106, 1);
                      }
                      else {
                      if (((qsize_18065106 == 0) || (q_18065100 < 0))) {
                      e_18065101 = p_18065099;
                      p_18065099 = t_18065086.data[chckIndx(p_18065099, 0, (t_18065086.data).length-1)].Field1;
                      psize_18065105 = subInt(psize_18065105, 1);
                      }
                      else {
                      if ((HEX2A_2136019(cmp_18065096({Field0: nimCopy(null, t_18065086.data[chckIndx(p_18065099, 0, (t_18065086.data).length-1)].Field2, NTI1188013), Field1: t_18065086.data[chckIndx(p_18065099, 0, (t_18065086.data).length-1)].Field3}, {Field0: nimCopy(null, t_18065086.data[chckIndx(q_18065100, 0, (t_18065086.data).length-1)].Field2, NTI1188013), Field1: t_18065086.data[chckIndx(q_18065100, 0, (t_18065086.data).length-1)].Field3}), order_18065097) <= 0)) {
                      e_18065101 = p_18065099;
                      p_18065099 = t_18065086.data[chckIndx(p_18065099, 0, (t_18065086.data).length-1)].Field1;
                      psize_18065105 = subInt(psize_18065105, 1);
                      }
                      else {
                        e_18065101 = q_18065100;
                        q_18065100 = t_18065086.data[chckIndx(q_18065100, 0, (t_18065086.data).length-1)].Field1;
                        qsize_18065106 = subInt(qsize_18065106, 1);
                      }
                      }}
                      if ((0 <= tail_18065102)) {
                      t_18065086.data[chckIndx(tail_18065102, 0, (t_18065086.data).length-1)].Field1 = e_18065101;
                      }
                      else {
                        list_18065098 = e_18065101;
                      }
                      
                      tail_18065102 = e_18065101;
                    }
                } while(false);
                p_18065099 = q_18065100;
              }
          } while(false);
          t_18065086.data[chckIndx(tail_18065102, 0, (t_18065086.data).length-1)].Field1 = -1;
          if ((nmerges_18065104 <= 1)) {
          break L1;
          }
          
          insize_18065109 = mulInt(insize_18065109, 2);
        }
    } while(false);
    t_18065086.first = list_18065098;
    t_18065086.last = tail_18065102;
  } while (false);

  
}
function sortStreetTbl_18060222(x_18060227, y_18060229) {
    var Tmp1;
      var Tmp2;

  var result_18060230 = 0;

    var kX_18060231 = nimCopy(null, x_18060227["Field0"], NTI1188013);
    var kY_18060232 = nimCopy(null, y_18060229["Field0"], NTI1188013);
      if ((cmpStrings(kY_18060232, kX_18060231) < 0)) Tmp2 = true; else {        Tmp2 = eqStrings(kX_18060231, kY_18060232);      }    if (Tmp2) {
    Tmp1 = 1;
    }
    else {
    Tmp1 = -1;
    }
    
    result_18060230 = Tmp1;

  return result_18060230;

}
function hasKey_17445310(t_17445315, key_17445316) {
  var result_17445317 = false;

    var hc_17445318 = [0];
    result_17445317 = (0 <= rawGet_17445338(t_17445315, key_17445316, hc_17445318, 0));

  return result_17445317;

}
function hasKeyOrPut_17460618(t_17460624, key_17460625, val_17460626) {
  var result_17460627 = false;

    if (((t_17460624.data).length == 0)) {
    var correctSizeHEX60gensym239_17470001 = slotsNeeded_11485048(32);
    t_17460624.counter = 0;
    t_17460624.data = new Array(chckRange(correctSizeHEX60gensym239_17470001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym239_17470001, 0, 2147483647);++i) {t_17460624.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    t_17460624.first = -1;
    t_17460624.last = -1;
    }
    
    var hc_17475601 = [0];
    var index_17475630 = rawGet_16565621(t_17460624, key_17460625, hc_17475601, 0);
    if ((index_17475630 < 0)) {
    result_17460627 = false;
    if (((t_17460624.data).length == 0)) {
    var correctSizeHEX60gensym242_17485001 = slotsNeeded_11485048(32);
    t_17460624.counter = 0;
    t_17460624.data = new Array(chckRange(correctSizeHEX60gensym242_17485001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym242_17485001, 0, 2147483647);++i) {t_17460624.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: null};}    t_17460624.first = -1;
    t_17460624.last = -1;
    }
    
    if (mustRehash_16590601(t_17460624)) {
    enlarge_16615180(t_17460624);
    index_17475630 = rawGetKnownHC_16617195(t_17460624, key_17460625, hc_17475601[0]);
    }
    
    index_17475630 = subInt(-1, index_17475630);
    rawInsert_16616359(t_17460624, t_17460624, "data", key_17460625, val_17460626, hc_17475601[0], index_17475630);
    t_17460624.counter = addInt(t_17460624.counter, 1);
    }
    else {
      result_17460627 = true;
    }
    

  return result_17460627;

}
function nextId_16485043(s_16485045) {
    var Tmp1;
      var Tmp2;

  var result_16485046 = [];

    if (s_16485045.exclude) {
    Tmp1 = [];
    }
    else {
    Tmp1 = (s_16485045.postalCode || []).concat(makeNimstrLit("-") || [],cstrToNimstr((addInt((Tmp2 = HEX5BHEX5D_16485198(lastPostfix_16280629[0], s_16485045.postalCode), Tmp2)[0][Tmp2[1]], 1))+"") || []);
    }
    
    result_16485046 = nimCopy(null, Tmp1, NTI1188013);

  return result_16485046;

}
function HEX5BHEX5DHEX3D_17391059(t_17391065, key_17391066, val_17391068) {
    if (((t_17391065.data).length == 0)) {
    var correctSizeHEX60gensym225_17400001 = slotsNeeded_11485048(32);
    t_17391065.counter = 0;
    t_17391065.data = new Array(chckRange(correctSizeHEX60gensym225_17400001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym225_17400001, 0, 2147483647);++i) {t_17391065.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: []};}    t_17391065.first = -1;
    t_17391065.last = -1;
    }
    
    var hc_17405601 = [0];
    var index_17405630 = rawGet_17035621(t_17391065, key_17391066, hc_17405601, 0);
    if ((0 <= index_17405630)) {
    t_17391065.data[chckIndx(index_17405630, 0, (t_17391065.data).length-1)].Field3 = nimCopy(null, val_17391068, NTI16211062);
    }
    else {
      if (((t_17391065.data).length == 0)) {
      var correctSizeHEX60gensym228_17415001 = slotsNeeded_11485048(32);
      t_17391065.counter = 0;
      t_17391065.data = new Array(chckRange(correctSizeHEX60gensym228_17415001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym228_17415001, 0, 2147483647);++i) {t_17391065.data[i]={Field0: 0, Field1: 0, Field2: [], Field3: []};}      t_17391065.first = -1;
      t_17391065.last = -1;
      }
      
      if (mustRehash_17060601(t_17391065)) {
      enlarge_17085180(t_17391065);
      index_17405630 = rawGetKnownHC_17087195(t_17391065, key_17391066, hc_17405601[0]);
      }
      
      index_17405630 = subInt(-1, index_17405630);
      rawInsert_17086359(t_17391065, t_17391065, "data", key_17391066, val_17391068, hc_17405601[0], index_17405630);
      t_17391065.counter = addInt(t_17391065.counter, 1);
    }
    

  
}
function onGrpStreet_17385855(e_17385857) {
    function HEX3Aanonymous_17390031(e_17390034) {
        var Tmp1;
        var Tmp2;
        var Tmp3;
        var Tmp4;
        var Tmp5;
        var Tmp6;
        var Tmp7;
          var Tmp8;
            var Tmp9;
          var Tmp10;
        var Tmp11;

        mvStreetGrp_16280630[0].removeAll();
        removeAllSectorFromMap_16500062();
        var trgtBtn_17390035 = e_17390034.target;
        var toSectId_17390037 = cstrToNimstr((Tmp1 = trgtBtn_17390035.parentNode.getElementsByTagName("select"), Tmp1)[chckIndx(0, 0, (Tmp1).length-1)].value);
        var sectFromId_17390038 = id_16485026(street_17390009.sector);
        var postCode_17390039 = nimCopy(null, street_17390009.sector.postalCode, NTI1188013);
        if (!(hasKey_17000110(allSectors_16270629[0], toSectId_17390037))) {
        (Tmp2 = HEX5BHEX5D_16485198(lastPostfix_16280629[0], postCode_17390039), Tmp2)[0][Tmp2[1]] = addInt(Tmp2[0][Tmp2[1]], 1);
        HEX5BHEX5DHEX3D_16550347(allSectors_16270629[0], toSectId_17390037, {city: nimCopy(null, addrCity_16290633[0], NTI1188013), postalCode: nimCopy(null, postCode_17390039, NTI1188013), district: nimCopy(null, street_17390009.sector.district, NTI1188013), pFix: (Tmp3 = HEX5BHEX5D_16485198(lastPostfix_16280629[0], postCode_17390039), Tmp3)[0][Tmp3[1]], streets: initOrderedTable_17250013(32), shownOnMap: false, folkDistrict: [], exclude: false});
        }
        
        street_17390009.sector = (Tmp4 = HEX5BHEX5D_16620843(allSectors_16270629[0], toSectId_17390037), Tmp4)[0][Tmp4[1]];
        HEX5BHEX5DHEX3D_17391059((Tmp5 = HEX5BHEX5D_16620843(allSectors_16270629[0], toSectId_17390037), Tmp5)[0][Tmp5[1]].streets, street_17390009.name, street_17390009.links);
        del_17236056((Tmp6 = HEX5BHEX5D_16620843(allSectors_16270629[0], sectFromId_17390038), Tmp6)[0][Tmp6[1]].streets, street_17390009.name);
        var fromSector_17421181 = (Tmp7 = HEX5BHEX5D_16620843(allSectors_16270629[0], sectFromId_17390038), Tmp7)[0][Tmp7[1]];
          if (!!(fromSector_17421181.exclude)) Tmp8 = false; else {            Tmp8 = (len_16825548((Tmp9 = HEX5BHEX5D_16620843(allSectors_16270629[0], sectFromId_17390038), Tmp9)[0][Tmp9[1]].streets) == 0);          }        if (Tmp8) {
        if ((fromSector_17421181.pFix == (Tmp10 = HEX5BHEX5D_16485198(lastPostfix_16280629[0], fromSector_17421181.postalCode), Tmp10)[0][Tmp10[1]])) {
        (Tmp11 = HEX5BHEX5D_16485198(lastPostfix_16280629[0], fromSector_17421181.postalCode), Tmp11)[0][Tmp11[1]] = subInt(Tmp11[0][Tmp11[1]], 1);
        }
        
        del_17091123(allSectors_16270629[0], sectFromId_17390038);
        }
        
        reindexSect_16985014();
        redraw_15780246(kxi__);

      
    }
    function HEX3Aanonymous_17430216(el_17430219, di_17430220, dm_17430221) {
        var Tmp1;
        var Tmp2;
        function HEX3Aanonymous_17430226(e_17430229) {
            mvStreetGrp_16280630[0].removeAll();

          
        }
        function HEX3Aanonymous_17430245(e_17430248) {
            map.removeEventListener("tap", loadLinks_16481053);

          
        }

        var btn_17430223 = (Tmp1 = el_17430219.getElementsByClassName("ok-str-mv"), Tmp1)[chckIndx(0, 0, (Tmp1).length-1)];
        var btnClose_17430225 = (Tmp2 = el_17430219.getElementsByClassName("close-str-mv"), Tmp2)[chckIndx(0, 0, (Tmp2).length-1)];
        btn_17430223.addEventListener("click", mvBtnHndl_17430214, false);
        btnClose_17430225.addEventListener("click", HEX3Aanonymous_17430226, false);
        var elEvt_17430244 = el_17430219;
        elEvt_17430244.addEventListener("mouseenter", HEX3Aanonymous_17430245, false);

      
    }
    function HEX3Aanonymous_17430293(el_17430296, di_17430297, dm_17430298) {
        var Tmp1;

        var btn_17430300 = (Tmp1 = el_17430296.getElementsByClassName("ok-str-mv"), Tmp1)[chckIndx(0, 0, (Tmp1).length-1)];
        btn_17430300.removeEventListener("click", mvBtnHndl_17430214);
        map.addEventListener("tap", loadLinks_16481053, false);

      
    }

    mvStreetGrp_16280630[0].removeAll();
    var trgtGrp_17390004 = e_17385857.currentTarget;
    var street_17390009 = trgtGrp_17390004.getData();
    var sectId_17390010 = id_16485026(street_17390009.sector);
    var sectNextId_17390011 = nextId_16485043(street_17390009.sector);
    var sectExclude_17390012 = street_17390009.sector.exclude;
    var elMoveStreet_17390013 = document.createElement("div");
    elMoveStreet_17390013.className = "move-str-marker";
    elMoveStreet_17390013.appendChild(document.createElement("span"));
    var elTxt_17390014 = document.createTextNode(toJSStr(street_17390009.name));
    elMoveStreet_17390013.childNodes[0].appendChild(elTxt_17390014);
    elMoveStreet_17390013.appendChild(document.createElement("div"));
    var selEl_17390015 = document.createElement("select");
    var mvOpt_17390016 = document.createElement("option");
    mvOpt_17390016.appendChild(document.createTextNode("Двинуть в"));
    selEl_17390015.appendChild(mvOpt_17390016);
    if (!(sectExclude_17390012)) {
    var mvOptNew_17390017 = document.createElement("option");
    mvOptNew_17390017.appendChild(document.createTextNode(toJSStr((sectNextId_17390011 || []).concat(makeNimstrLit("(\xD0\xBD\xD0\xBE\xD0\xB2\xD1\x8B\xD0\xB9)") || []))));
    mvOptNew_17390017.value = toJSStr(sectNextId_17390011);
    mvOptNew_17390017.setAttribute("data-new", "1");
    selEl_17390015.appendChild(mvOptNew_17390017);
    }
    
    L1: do {
      var kOpt_17390025 = [];
      var vOpt_17390026 = null;
      var L_18550452 = len_16500198(allSectors_16270629[0]);
      if ((0 < allSectors_16270629[0].counter)) {
      var h_18550453 = allSectors_16270629[0].first;
      L2: do {
          L3: while (true) {
          if (!(0 <= h_18550453)) break L3;
            var nxt_18550455 = allSectors_16270629[0].data[chckIndx(h_18550453, 0, (allSectors_16270629[0].data).length-1)].Field1;
            if (isFilled_11481218(allSectors_16270629[0].data[chckIndx(h_18550453, 0, (allSectors_16270629[0].data).length-1)].Field0)) {
            kOpt_17390025 = allSectors_16270629[0].data[chckIndx(h_18550453, 0, (allSectors_16270629[0].data).length-1)].Field2;
            vOpt_17390026 = allSectors_16270629[0].data[chckIndx(h_18550453, 0, (allSectors_16270629[0].data).length-1)].Field3;
            L4: do {
              if (eqStrings(kOpt_17390025, sectId_17390010)) {
              break L4;
              }
              
              var mvOpt_17390029 = document.createElement("option");
              mvOpt_17390029.appendChild(document.createTextNode(toJSStr(kOpt_17390025)));
              mvOpt_17390029.value = toJSStr(kOpt_17390025);
              selEl_17390015.appendChild(mvOpt_17390029);
            } while(false);
            if (!((len_16500198(allSectors_16270629[0]) == L_18550452))) {
            failedAssertImpl_1305480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_18550453 = nxt_18550455;
          }
      } while(false);
      }
      
    } while(false);
    elMoveStreet_17390013.childNodes[1].appendChild(selEl_17390015);
    var btnOk_17390030 = document.createElement("button");
    btnOk_17390030.appendChild(document.createTextNode("Ok !"));
    btnOk_17390030.className = "ok-str-mv";
    var mvBtnHndl_17430214 = HEX3Aanonymous_17390031;
    var btnClose_17430215 = document.createElement("button");
    btnClose_17430215.appendChild(document.createTextNode("закрыть"));
    btnClose_17430215.className = "close-str-mv";
    elMoveStreet_17390013.childNodes[1].appendChild(btnOk_17390030);
    elMoveStreet_17390013.childNodes[1].appendChild(btnClose_17430215);
    var diOpt_17435215 = {onAttach: HEX3Aanonymous_17430216, onDetach: HEX3Aanonymous_17430293, m_type: NTI11816089};
    var iconMoveStreet_17435217 = function(element, opt){return new H.map.DomIcon(element, opt)}(elMoveStreet_17390013, diOpt_17435215);
    var geoPoint_17435218 = map.screenToGeo(e_17385857.currentPointer.viewportX, e_17385857.currentPointer.viewportY);
    var mvStreetMarker_17435219 = function(position){return new H.map.DomMarker(position)}(geoPoint_17435218);
    mvStreetMarker_17435219.setIcon(iconMoveStreet_17435217);
    mvStreetGrp_16280630[0].addObject(mvStreetMarker_17435219);
    rawEcho(makeNimstrLit("mvStreet: "));

  
}
function hasKey_17492013(t_17492018, key_17492019) {
  var result_17492020 = false;

    var hc_17492021 = [0];
    result_17492020 = (0 <= rawGet_17492022(t_17492018, key_17492019, hc_17492021, 0));

  return result_17492020;

}
function displayStreet_17440323(name_17440325, tree_17440326) {
      var Tmp1;
    var Tmp2;
    var Tmp3;
    var Tmp4;
    var Tmp5;
    var Tmp6;
      var Tmp8;
            var Tmp11;
            function HEX3Aanonymous_17491808(e_17491810) {
                map.removeEventListener("tap", loadLinks_16481053);

              
            }
            function HEX3Aanonymous_17491841(e_17491843) {
                map.addEventListener("tap", loadLinks_16481053, false);

              
            }
              var Tmp15;
                var Tmp16;
            var Tmp17;
                    var Tmp21;
                    var Tmp22;

  BeforeRet: do {
    if (!(hasKey_17445310(allStreets_16250629[0], name_17440325))) {
    break BeforeRet;
    }
    
    if (((Tmp1 = HEX5BHEX5D_17006312(allStreets_16250629[0], name_17440325), Tmp1)[0][Tmp1[1]].sector == null)) {
    var pFix_17460531 = (Tmp2 = HEX5BHEX5D_16485198(lastPostfix_16280629[0], postalCode_16290635[0]), Tmp2)[0][Tmp2[1]];
    var _ = hasKeyOrPut_17460618(allSectors_16270629[0], sectName_16290636[0], {city: nimCopy(null, addrCity_16290633[0], NTI1188013), postalCode: nimCopy(null, postalCode_16290635[0], NTI1188013), district: nimCopy(null, addrDistr_16290632[0], NTI1188013), pFix: pFix_17460531, streets: initOrderedTable_17250013(32), shownOnMap: false, folkDistrict: [], exclude: false});
    var _ = hasKeyOrPut_17020085((Tmp3 = HEX5BHEX5D_16620843(allSectors_16270629[0], sectName_16290636[0]), Tmp3)[0][Tmp3[1]].streets, name_17440325, (Tmp4 = HEX5BHEX5D_17006312(allStreets_16250629[0], name_17440325), Tmp4)[0][Tmp4[1]].links);
    (Tmp5 = HEX5BHEX5D_17006312(allStreets_16250629[0], name_17440325), Tmp5)[0][Tmp5[1]].sector = (Tmp6 = HEX5BHEX5D_16620843(allSectors_16270629[0], sectName_16290636[0]), Tmp6)[0][Tmp6[1]];
    }
    
    L7: do {
      var link_17491639 = null;
      var link_17491639_Idx = 0;
      var colontmp__18550443 = [];
      colontmp__18550443 = (Tmp8 = HEX5BHEX5D_17006312(allStreets_16250629[0], name_17440325), Tmp8)[0][Tmp8[1]].links;
      var i_18550444 = 0;
      var L_18550445 = (colontmp__18550443).length;
      L9: do {
          L10: while (true) {
          if (!(i_18550444 < L_18550445)) break L10;
            link_17491639 = colontmp__18550443; link_17491639_Idx = chckIndx(i_18550444, 0, (colontmp__18550443).length-1);
            var grpStreet_17491640 = function(){return new H.map.Group()}();
            grpStreet_17491640.setZIndex(99);
            grpStreet_17491640.setData((Tmp11 = HEX5BHEX5D_17006312(allStreets_16250629[0], name_17440325), Tmp11)[0][Tmp11[1]]);
            grpStreet_17491640.addEventListener("pointerenter", HEX3Aanonymous_17491808, true, null);
            grpStreet_17491640.addEventListener("pointerleave", HEX3Aanonymous_17491841, true, null);
            grpStreet_17491640.addEventListener("tap", onGrpStreet_17385855, true, null);
            mainGroup_17385008[0].addObject(grpStreet_17491640);
            var lnStr_17491895 = function(){return new H.geo.LineString();}();
            L12: do {
              var c_17491903 = null;
              var c_17491903_Idx = 0;
              var i_18550434 = 0;
              var L_18550435 = (link_17491639[link_17491639_Idx].geometry).length;
              L13: do {
                  L14: while (true) {
                  if (!(i_18550434 < L_18550435)) break L14;
                    c_17491903 = link_17491639[link_17491639_Idx].geometry; c_17491903_Idx = chckIndx(i_18550434, 0, (link_17491639[link_17491639_Idx].geometry).length-1);
                    lnStr_17491895.pushLatLngAlt(c_17491903[c_17491903_Idx].lat, c_17491903[c_17491903_Idx].lng, 1.0000000000000000e+00);
                    i_18550434 = addInt(i_18550434, 1);
                    if (!(((link_17491639[link_17491639_Idx].geometry).length == L_18550435))) {
                    failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while(false);
            } while(false);
              if (!hasKey_17492013(allLinks_16240629[0], link_17491639[link_17491639_Idx].linkId)) Tmp15 = false; else {                Tmp15 = !((Tmp16 = HEX5BHEX5D_17500788(allLinks_16240629[0], link_17491639[link_17491639_Idx].linkId), Tmp16)[0][Tmp16[1]].addedToMap);              }            if (Tmp15) {
            var pOpt_17505029 = {style: {strokeColor: "rgba(0, 0, 255, 0.3)", fillColor: "rgba(255, 0, 0, 0.4)", lineWidth: 10, m_type: NTI11816076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, zIndex: 99, m_type: NTI11816081};
            var pl_17505030 = function(ls, options){return new H.map.Polyline(ls, options)}(lnStr_17491895, pOpt_17505029);
            grpStreet_17491640.addObject(pl_17505030);
            (Tmp17 = HEX5BHEX5D_17500788(allLinks_16240629[0], link_17491639[link_17491639_Idx].linkId), Tmp17)[0][Tmp17[1]].addedToMap = true;
            }
            
            if (tree_17440326) {
            L18: do {
              var nLink_17510208 = null;
              var nLink_17510208_Idx = 0;
              var i_18550440 = 0;
              var L_18550441 = (link_17491639[link_17491639_Idx].neighborLinks).length;
              L19: do {
                  L20: while (true) {
                  if (!(i_18550440 < L_18550441)) break L20;
                    nLink_17510208 = link_17491639[link_17491639_Idx].neighborLinks; nLink_17510208_Idx = chckIndx(i_18550440, 0, (link_17491639[link_17491639_Idx].neighborLinks).length-1);
                    if ((0 < nLink_17510208[nLink_17510208_Idx])) {
                    Tmp21 = nLink_17510208[nLink_17510208_Idx];
                    }
                    else {
                    Tmp21 = mulInt(nLink_17510208[nLink_17510208_Idx], -1);
                    }
                    
                    var nLnk_17515001 = Tmp21;
                    if (hasKey_17492013(allLinks_16240629[0], nLnk_17515001)) {
                    displayStreet_17440323((Tmp22 = HEX5BHEX5D_17500788(allLinks_16240629[0], nLnk_17515001), Tmp22)[0][Tmp22[1]].name, false);
                    }
                    else {
                    }
                    
                    i_18550440 = addInt(i_18550440, 1);
                    if (!(((link_17491639[link_17491639_Idx].neighborLinks).length == L_18550441))) {
                    failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while(false);
            } while(false);
            }
            
            i_18550444 = addInt(i_18550444, 1);
            if (!(((colontmp__18550443).length == L_18550445))) {
            failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
  } while (false);

  
}
function mustRehash_18095601(t_18095604) {
  var result_18095605 = false;

    if (!((t_18095604.counter < (t_18095604.data).length))) {
    failedAssertImpl_1305480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_18095605 = ((mulInt((t_18095604.data).length, 2) < mulInt(t_18095604.counter, 3)) || (subInt((t_18095604.data).length, t_18095604.counter) < 4));

  return result_18095605;

}
function rawInsert_18121122(t_18121128, data_18121131, data_18121131_Idx, key_18121132, val_18121134, hc_18121135, h_18121136) {
    data_18121131[data_18121131_Idx][chckIndx(h_18121136, 0, (data_18121131[data_18121131_Idx]).length-1)].Field1 = nimCopy(null, key_18121132, NTI1188013);
    data_18121131[data_18121131_Idx][chckIndx(h_18121136, 0, (data_18121131[data_18121131_Idx]).length-1)].Field2 = val_18121134;
    data_18121131[data_18121131_Idx][chckIndx(h_18121136, 0, (data_18121131[data_18121131_Idx]).length-1)].Field0 = hc_18121135;

  
}
function enlarge_18120161(t_18120167) {
    var n_18120175 = [];
    n_18120175 = new Array(chckRange(mulInt((t_18120167.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_18120167.data).length, 2), 0, 2147483647);++i) {n_18120175[i]={Field0: 0, Field1: [], Field2: 0};}    var Tmp1 = t_18120167.data; t_18120167.data = n_18120175; n_18120175 = Tmp1;    L2: do {
      var i_18120334 = 0;
      var colontmp__18550460 = 0;
      colontmp__18550460 = (n_18120175).length - 1;
      var res_18550461 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_18550461 <= colontmp__18550460)) break L4;
            i_18120334 = res_18550461;
            var eh_18120490 = n_18120175[chckIndx(i_18120334, 0, (n_18120175).length-1)].Field0;
            if (isFilled_11481218(eh_18120490)) {
            var j_18120497 = (eh_18120490 & (t_18120167.data).length - 1);
            L5: do {
                L6: while (true) {
                if (!isFilled_11481218(t_18120167.data[chckIndx(j_18120497, 0, (t_18120167.data).length-1)].Field0)) break L6;
                  j_18120497 = nextTry_11485014(j_18120497, (t_18120167.data).length - 1);
                }
            } while(false);
            rawInsert_18121122(t_18120167, t_18120167, "data", n_18120175[chckIndx(i_18120334, 0, (n_18120175).length-1)].Field1, n_18120175[chckIndx(i_18120334, 0, (n_18120175).length-1)].Field2, eh_18120490, j_18120497);
            }
            
            res_18550461 = addInt(res_18550461, 1);
          }
      } while(false);
    } while(false);

  
}
function rawGetKnownHC_18121629(t_18121633, key_18121634, hc_18121635) {
  var result_18121636 = 0;

  BeforeRet: do {
    if (((t_18121633.data).length == 0)) {
    result_18121636 = -1;
    break BeforeRet;
    }
    
    var h_18125138 = (hc_18121635 & (t_18121633.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_11481218(t_18121633.data[chckIndx(h_18125138, 0, (t_18121633.data).length-1)].Field0)) break L2;
          if (((t_18121633.data[chckIndx(h_18125138, 0, (t_18121633.data).length-1)].Field0 == hc_18121635) && eqStrings(t_18121633.data[chckIndx(h_18125138, 0, (t_18121633.data).length-1)].Field1, key_18121634))) {
          result_18121636 = h_18125138;
          break BeforeRet;
          }
          
          h_18125138 = nextTry_11485014(h_18125138, (t_18121633.data).length - 1);
        }
    } while(false);
    result_18121636 = subInt(-1, h_18125138);
  } while (false);

  return result_18121636;

}
function HEX5BHEX5DHEX3D_18067427(t_18067433, key_18067434, val_18067436) {
    if (((t_18067433.data).length == 0)) {
    var correctSizeHEX60gensym360_18075001 = slotsNeeded_11485048(32);
    t_18067433.counter = 0;
    t_18067433.data = new Array(chckRange(correctSizeHEX60gensym360_18075001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym360_18075001, 0, 2147483647);++i) {t_18067433.data[i]={Field0: 0, Field1: [], Field2: 0};}    }
    
    var hc_18080601 = [0];
    var index_18080610 = rawGet_16485209(t_18067433, key_18067434, hc_18080601, 0);
    if ((0 <= index_18080610)) {
    t_18067433.data[chckIndx(index_18080610, 0, (t_18067433.data).length-1)].Field2 = val_18067436;
    }
    else {
      if (((t_18067433.data).length == 0)) {
      var correctSizeHEX60gensym363_18090001 = slotsNeeded_11485048(32);
      t_18067433.counter = 0;
      t_18067433.data = new Array(chckRange(correctSizeHEX60gensym363_18090001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym363_18090001, 0, 2147483647);++i) {t_18067433.data[i]={Field0: 0, Field1: [], Field2: 0};}      }
      
      if (mustRehash_18095601(t_18067433)) {
      enlarge_18120161(t_18067433);
      index_18080610 = rawGetKnownHC_18121629(t_18067433, key_18067434, hc_18080601[0]);
      }
      
      index_18080610 = subInt(-1, index_18080610);
      rawInsert_18121122(t_18067433, t_18067433, "data", key_18067434, val_18067436, hc_18080601[0], index_18080610);
      t_18067433.counter = addInt(t_18067433.counter, 1);
    }
    

  
}
function sort_18130080(t_18130086, cmp_18130096, order_18130097) {
                      var Tmp9;
                        var Tmp10;

  BeforeRet: do {
    var list_18130098 = t_18130086.first;
    var p_18130099 = 0;
    var q_18130100 = 0;
    var e_18130101 = 0;
    var tail_18130102 = 0;
    var oldhead_18130103 = 0;
    var nmerges_18130104 = 0;
    var psize_18130105 = 0;
    var qsize_18130106 = 0;
    var i_18130107 = 0;
    if ((t_18130086.counter == 0)) {
    break BeforeRet;
    }
    
    var insize_18130109 = 1;
    L1: do {
        L2: while (true) {
        if (!true) break L2;
          p_18130099 = list_18130098;
          oldhead_18130103 = list_18130098;
          list_18130098 = -1;
          tail_18130102 = -1;
          nmerges_18130104 = 0;
          L3: do {
              L4: while (true) {
              if (!(0 <= p_18130099)) break L4;
                nmerges_18130104 = addInt(nmerges_18130104, 1);
                q_18130100 = p_18130099;
                psize_18130105 = 0;
                i_18130107 = 0;
                L5: do {
                    L6: while (true) {
                    if (!(i_18130107 < insize_18130109)) break L6;
                      psize_18130105 = addInt(psize_18130105, 1);
                      q_18130100 = t_18130086.data[chckIndx(q_18130100, 0, (t_18130086.data).length-1)].Field1;
                      if ((q_18130100 < 0)) {
                      break L5;
                      }
                      
                      i_18130107 = addInt(i_18130107, 1);
                    }
                } while(false);
                qsize_18130106 = insize_18130109;
                L7: do {
                    L8: while (true) {
                      if ((0 < psize_18130105)) Tmp9 = true; else {                        if (!(0 < qsize_18130106)) Tmp10 = false; else {                          Tmp10 = (0 <= q_18130100);                        }                        Tmp9 = Tmp10;                      }                    if (!Tmp9) break L8;
                      if ((psize_18130105 == 0)) {
                      e_18130101 = q_18130100;
                      q_18130100 = t_18130086.data[chckIndx(q_18130100, 0, (t_18130086.data).length-1)].Field1;
                      qsize_18130106 = subInt(qsize_18130106, 1);
                      }
                      else {
                      if (((qsize_18130106 == 0) || (q_18130100 < 0))) {
                      e_18130101 = p_18130099;
                      p_18130099 = t_18130086.data[chckIndx(p_18130099, 0, (t_18130086.data).length-1)].Field1;
                      psize_18130105 = subInt(psize_18130105, 1);
                      }
                      else {
                      if ((HEX2A_2136019(cmp_18130096({Field0: nimCopy(null, t_18130086.data[chckIndx(p_18130099, 0, (t_18130086.data).length-1)].Field2, NTI1188013), Field1: t_18130086.data[chckIndx(p_18130099, 0, (t_18130086.data).length-1)].Field3}, {Field0: nimCopy(null, t_18130086.data[chckIndx(q_18130100, 0, (t_18130086.data).length-1)].Field2, NTI1188013), Field1: t_18130086.data[chckIndx(q_18130100, 0, (t_18130086.data).length-1)].Field3}), order_18130097) <= 0)) {
                      e_18130101 = p_18130099;
                      p_18130099 = t_18130086.data[chckIndx(p_18130099, 0, (t_18130086.data).length-1)].Field1;
                      psize_18130105 = subInt(psize_18130105, 1);
                      }
                      else {
                        e_18130101 = q_18130100;
                        q_18130100 = t_18130086.data[chckIndx(q_18130100, 0, (t_18130086.data).length-1)].Field1;
                        qsize_18130106 = subInt(qsize_18130106, 1);
                      }
                      }}
                      if ((0 <= tail_18130102)) {
                      t_18130086.data[chckIndx(tail_18130102, 0, (t_18130086.data).length-1)].Field1 = e_18130101;
                      }
                      else {
                        list_18130098 = e_18130101;
                      }
                      
                      tail_18130102 = e_18130101;
                    }
                } while(false);
                p_18130099 = q_18130100;
              }
          } while(false);
          t_18130086.data[chckIndx(tail_18130102, 0, (t_18130086.data).length-1)].Field1 = -1;
          if ((nmerges_18130104 <= 1)) {
          break L1;
          }
          
          insize_18130109 = mulInt(insize_18130109, 2);
        }
    } while(false);
    t_18130086.first = list_18130098;
    t_18130086.last = tail_18130102;
  } while (false);

  
}
function nsuRepeatStr(s_9945151, n_9945152) {
  var result_9945153 = [];

    result_9945153 = nimCopy(null, mnewString(0), NTI1188013);
    L1: do {
      var i_9945162 = 0;
      var colontmp__18550472 = 0;
      colontmp__18550472 = n_9945152;
      var res_18550473 = 1;
      L2: do {
          L3: while (true) {
          if (!(res_18550473 <= colontmp__18550472)) break L3;
            i_9945162 = res_18550473;
            result_9945153.push.apply(result_9945153, s_9945151);;
            res_18550473 = addInt(res_18550473, 1);
          }
      } while(false);
    } while(false);

  return result_9945153;

}
function sortSectorTbl_18125693(x_18125698, y_18125700) {
    var Tmp1;
      var Tmp2;

  var result_18125701 = 0;

    var akX_18125702 = nsuSplitString(x_18125698["Field0"], makeNimstrLit("-"), -1);
    var akY_18125703 = nsuSplitString(y_18125700["Field0"], makeNimstrLit("-"), -1);
    var kX_18125728 = (akX_18125702[chckIndx(0, 0, (akX_18125702).length-1)] || []).concat(makeNimstrLit("-") || [],nsuRepeatStr(makeNimstrLit("0"), chckRange(subInt(4, (akX_18125702[chckIndx((akX_18125702).length - 1, 0, (akX_18125702).length-1)]).length), 0, 2147483647)) || [],akX_18125702[chckIndx((akX_18125702).length - 1, 0, (akX_18125702).length-1)] || []);
    var kY_18125753 = (akY_18125703[chckIndx(0, 0, (akY_18125703).length-1)] || []).concat(makeNimstrLit("-") || [],nsuRepeatStr(makeNimstrLit("0"), chckRange(subInt(4, (akY_18125703[chckIndx((akY_18125703).length - 1, 0, (akY_18125703).length-1)]).length), 0, 2147483647)) || [],akY_18125703[chckIndx((akY_18125703).length - 1, 0, (akY_18125703).length-1)] || []);
      if ((cmpStrings(kY_18125753, kX_18125728) < 0)) Tmp2 = true; else {        Tmp2 = eqStrings(kX_18125728, kY_18125753);      }    if (Tmp2) {
    Tmp1 = 1;
    }
    else {
    Tmp1 = -1;
    }
    
    result_18125701 = Tmp1;

  return result_18125701;

}
function newSeq_18170024(len_18170027) {
  var result_18170029 = [];

    result_18170029 = new Array(len_18170027); for (var i=0;i<len_18170027;++i) {result_18170029[i]={Field0: 0.0, Field1: 0.0};}
  return result_18170029;

}
function initTable_18170072(initialSize_18170076) {
  var result_18170092 = ({data: [], counter: 0});

    var correctSizeHEX60gensym380_18175001 = slotsNeeded_11485048(chckRange(initialSize_18170076, 0, 2147483647));
    result_18170092.counter = 0;
    result_18170092.data = new Array(chckRange(correctSizeHEX60gensym380_18175001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym380_18175001, 0, 2147483647);++i) {result_18170092.data[i]={Field0: 0, Field1: [], Field2: {Field0: 0, Field1: 0, Field2: 0}};}
  return result_18170092;

}
function HEX2AHEX3D_12016033(x_12016037, x_12016037_Idx, y_12016038) {
    x_12016037[x_12016037_Idx] = mulInt(x_12016037[x_12016037_Idx], y_12016038);

  
}
function HEX5E_12016024(x_12016027, y_12016028) {
  var result_12016029 = [0];

    switch (y_12016028) {
    case 0:
      result_12016029[0] = 1;
      break;
    case 1:
      result_12016029[0] = x_12016027;
      break;
    case 2:
      result_12016029[0] = mulInt(x_12016027, x_12016027);
      break;
    case 3:
      result_12016029[0] = mulInt(mulInt(x_12016027, x_12016027), x_12016027);
      break;
    default: 
      var colontmp__18550481 = {Field0: x_12016027, Field1: nimCopy(null, y_12016028, NTI1194404)};
      var x_12016031 = [colontmp__18550481["Field0"]];
      var y_12016032 = colontmp__18550481["Field1"];
      result_12016029[0] = 1;
      L1: do {
          L2: while (true) {
          if (!true) break L2;
            if (!(((y_12016032 & 1) == 0))) {
            HEX2AHEX3D_12016033(result_12016029, 0, x_12016031[0]);
            }
            
            y_12016032 = chckRange((y_12016032 >> 1), 0, 2147483647);
            if ((y_12016032 == 0)) {
            break L1;
            }
            
            HEX2AHEX3D_12016033(x_12016031, 0, x_12016031[0]);
          }
      } while(false);
      break;
    }

  return result_12016029[0];

}
function getCoord_12016015(level_12016017, tileX_12016018, tileY_12016019) {
  var result_12016021 = {Field0: 0.0, Field1: 0.0};

    var tileSize_12016081 = HEX2F_1555648(180, HEX5E_12016024(2, chckRange(level_12016017, 0, 2147483647)));
    nimCopy(result_12016021, {Field0: ((tileY_12016019 * tileSize_12016081) - 9.0000000000000000e+01), Field1: ((tileX_12016018 * tileSize_12016081) - 1.8000000000000000e+02)}, NTI12016020);

  return result_12016021;

}
function rawGet_18205602(t_18205606, key_18205607, hc_18205608, hc_18205608_Idx) {
            var Tmp3;

  var result_18205609 = 0;

  BeforeRet: do {
    hc_18205608[hc_18205608_Idx] = hash_11460214(key_18205607);
    if ((hc_18205608[hc_18205608_Idx] == 0)) {
    hc_18205608[hc_18205608_Idx] = 314159265;
    }
    
    if (((t_18205606.data).length == 0)) {
    result_18205609 = -1;
    break BeforeRet;
    }
    
    var h_18215138 = (hc_18205608[hc_18205608_Idx] & (t_18205606.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_11481218(t_18205606.data[chckIndx(h_18215138, 0, (t_18205606.data).length-1)].Field0)) break L2;
            if (!(t_18205606.data[chckIndx(h_18215138, 0, (t_18205606.data).length-1)].Field0 == hc_18205608[hc_18205608_Idx])) Tmp3 = false; else {              Tmp3 = eqStrings(t_18205606.data[chckIndx(h_18215138, 0, (t_18205606.data).length-1)].Field1, key_18205607);            }          if (Tmp3) {
          result_18205609 = h_18215138;
          break BeforeRet;
          }
          
          h_18215138 = nextTry_11485014(h_18215138, (t_18205606.data).length - 1);
        }
    } while(false);
    result_18205609 = subInt(-1, h_18215138);
  } while (false);

  return result_18205609;

}
function mustRehash_18230601(t_18230604) {
  var result_18230605 = false;

    if (!((t_18230604.counter < (t_18230604.data).length))) {
    failedAssertImpl_1305480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_18230605 = ((mulInt((t_18230604.data).length, 2) < mulInt(t_18230604.counter, 3)) || (subInt((t_18230604.data).length, t_18230604.counter) < 4));

  return result_18230605;

}
function rawInsert_18256123(t_18256129, data_18256132, data_18256132_Idx, key_18256133, val_18256135, hc_18256136, h_18256137) {
    data_18256132[data_18256132_Idx][chckIndx(h_18256137, 0, (data_18256132[data_18256132_Idx]).length-1)].Field1 = nimCopy(null, key_18256133, NTI1188013);
    nimCopy(data_18256132[data_18256132_Idx][chckIndx(h_18256137, 0, (data_18256132[data_18256132_Idx]).length-1)].Field2, val_18256135, NTI18170067);
    data_18256132[data_18256132_Idx][chckIndx(h_18256137, 0, (data_18256132[data_18256132_Idx]).length-1)].Field0 = hc_18256136;

  
}
function enlarge_18255161(t_18255167) {
    var n_18255175 = [];
    n_18255175 = new Array(chckRange(mulInt((t_18255167.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_18255167.data).length, 2), 0, 2147483647);++i) {n_18255175[i]={Field0: 0, Field1: [], Field2: {Field0: 0, Field1: 0, Field2: 0}};}    var Tmp1 = t_18255167.data; t_18255167.data = n_18255175; n_18255175 = Tmp1;    L2: do {
      var i_18255334 = 0;
      var colontmp__18550485 = 0;
      colontmp__18550485 = (n_18255175).length - 1;
      var res_18550486 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_18550486 <= colontmp__18550485)) break L4;
            i_18255334 = res_18550486;
            var eh_18255490 = n_18255175[chckIndx(i_18255334, 0, (n_18255175).length-1)].Field0;
            if (isFilled_11481218(eh_18255490)) {
            var j_18255497 = (eh_18255490 & (t_18255167.data).length - 1);
            L5: do {
                L6: while (true) {
                if (!isFilled_11481218(t_18255167.data[chckIndx(j_18255497, 0, (t_18255167.data).length-1)].Field0)) break L6;
                  j_18255497 = nextTry_11485014(j_18255497, (t_18255167.data).length - 1);
                }
            } while(false);
            rawInsert_18256123(t_18255167, t_18255167, "data", n_18255175[chckIndx(i_18255334, 0, (n_18255175).length-1)].Field1, n_18255175[chckIndx(i_18255334, 0, (n_18255175).length-1)].Field2, eh_18255490, j_18255497);
            }
            
            res_18550486 = addInt(res_18550486, 1);
          }
      } while(false);
    } while(false);

  
}
function rawGetKnownHC_18256630(t_18256634, key_18256635, hc_18256636) {
  var result_18256637 = 0;

  BeforeRet: do {
    if (((t_18256634.data).length == 0)) {
    result_18256637 = -1;
    break BeforeRet;
    }
    
    var h_18260138 = (hc_18256636 & (t_18256634.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_11481218(t_18256634.data[chckIndx(h_18260138, 0, (t_18256634.data).length-1)].Field0)) break L2;
          if (((t_18256634.data[chckIndx(h_18260138, 0, (t_18256634.data).length-1)].Field0 == hc_18256636) && eqStrings(t_18256634.data[chckIndx(h_18260138, 0, (t_18256634.data).length-1)].Field1, key_18256635))) {
          result_18256637 = h_18260138;
          break BeforeRet;
          }
          
          h_18260138 = nextTry_11485014(h_18260138, (t_18256634.data).length - 1);
        }
    } while(false);
    result_18256637 = subInt(-1, h_18260138);
  } while (false);

  return result_18256637;

}
function HEX5BHEX5DHEX3D_18190144(t_18190150, key_18190151, val_18190153) {
    if (((t_18190150.data).length == 0)) {
    var correctSizeHEX60gensym385_18200001 = slotsNeeded_11485048(32);
    t_18190150.counter = 0;
    t_18190150.data = new Array(chckRange(correctSizeHEX60gensym385_18200001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym385_18200001, 0, 2147483647);++i) {t_18190150.data[i]={Field0: 0, Field1: [], Field2: {Field0: 0, Field1: 0, Field2: 0}};}    }
    
    var hc_18205601 = [0];
    var index_18215641 = rawGet_18205602(t_18190150, key_18190151, hc_18205601, 0);
    if ((0 <= index_18215641)) {
    nimCopy(t_18190150.data[chckIndx(index_18215641, 0, (t_18190150.data).length-1)].Field2, val_18190153, NTI18170067);
    }
    else {
      if (((t_18190150.data).length == 0)) {
      var correctSizeHEX60gensym390_18225001 = slotsNeeded_11485048(32);
      t_18190150.counter = 0;
      t_18190150.data = new Array(chckRange(correctSizeHEX60gensym390_18225001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym390_18225001, 0, 2147483647);++i) {t_18190150.data[i]={Field0: 0, Field1: [], Field2: {Field0: 0, Field1: 0, Field2: 0}};}      }
      
      if (mustRehash_18230601(t_18190150)) {
      enlarge_18255161(t_18190150);
      index_18215641 = rawGetKnownHC_18256630(t_18190150, key_18190151, hc_18205601[0]);
      }
      
      index_18215641 = subInt(-1, index_18215641);
      rawInsert_18256123(t_18190150, t_18190150, "data", key_18190151, val_18190153, hc_18205601[0], index_18215641);
      t_18190150.counter = addInt(t_18190150.counter, 1);
    }
    

  
}
function getTileXY_12016113(level_12016115, lat_12016116, lng_12016117) {
  var result_12016119 = {Field0: 0, Field1: 0};

    var tileSize_12016127 = HEX2F_1555648(180, HEX5E_12016024(2, chckRange(level_12016115, 0, 2147483647)));
    nimCopy(result_12016119, {Field0: ((Math.trunc(((lng_12016117 + 1.8000000000000000e+02) / tileSize_12016127)))|0), Field1: ((Math.trunc(((lat_12016116 + 9.0000000000000000e+01) / tileSize_12016127)))|0)}, NTI12016118);

  return result_12016119;

}
function hasKeyOrPut_18280281(t_18280287, key_18280288, val_18280289) {
  var result_18280290 = false;

    if (((t_18280287.data).length == 0)) {
    var correctSizeHEX60gensym403_18290001 = slotsNeeded_11485048(32);
    t_18280287.counter = 0;
    t_18280287.data = new Array(chckRange(correctSizeHEX60gensym403_18290001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym403_18290001, 0, 2147483647);++i) {t_18280287.data[i]={Field0: 0, Field1: [], Field2: {Field0: 0, Field1: 0, Field2: 0}};}    }
    
    var hc_18295601 = [0];
    var index_18295610 = rawGet_18205602(t_18280287, key_18280288, hc_18295601, 0);
    if ((index_18295610 < 0)) {
    result_18280290 = false;
    if (((t_18280287.data).length == 0)) {
    var correctSizeHEX60gensym406_18305001 = slotsNeeded_11485048(32);
    t_18280287.counter = 0;
    t_18280287.data = new Array(chckRange(correctSizeHEX60gensym406_18305001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym406_18305001, 0, 2147483647);++i) {t_18280287.data[i]={Field0: 0, Field1: [], Field2: {Field0: 0, Field1: 0, Field2: 0}};}    }
    
    if (mustRehash_18230601(t_18280287)) {
    enlarge_18255161(t_18280287);
    index_18295610 = rawGetKnownHC_18256630(t_18280287, key_18280288, hc_18295601[0]);
    }
    
    index_18295610 = subInt(-1, index_18295610);
    rawInsert_18256123(t_18280287, t_18280287, "data", key_18280288, val_18280289, hc_18295601[0], index_18295610);
    t_18280287.counter = addInt(t_18280287.counter, 1);
    }
    else {
      result_18280290 = true;
    }
    

  return result_18280290;

}
function len_18310823(t_18310828) {
  var result_18310829 = 0;

    result_18310829 = t_18310828.counter;

  return result_18310829;

}
function hasKey_18320339(t_18320344, key_18320345) {
  var result_18320346 = false;

    var hc_18320347 = [0];
    result_18320346 = (0 <= rawGet_18000602(t_18320344, key_18320345, hc_18320347, 0));

  return result_18320346;

}
function hasKeyOrPut_18465086(t_18465092, key_18465093, val_18465094) {
  var result_18465095 = false;

    if (((t_18465092.data).length == 0)) {
    var correctSizeHEX60gensym440_18475001 = slotsNeeded_11485048(32);
    t_18465092.counter = 0;
    t_18465092.data = new Array(chckRange(correctSizeHEX60gensym440_18475001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym440_18475001, 0, 2147483647);++i) {t_18465092.data[i]={Field0: 0, Field1: [], Field2: 0};}    }
    
    var hc_18480601 = [0];
    var index_18480610 = rawGet_16485209(t_18465092, key_18465093, hc_18480601, 0);
    if ((index_18480610 < 0)) {
    result_18465095 = false;
    if (((t_18465092.data).length == 0)) {
    var correctSizeHEX60gensym443_18490001 = slotsNeeded_11485048(32);
    t_18465092.counter = 0;
    t_18465092.data = new Array(chckRange(correctSizeHEX60gensym443_18490001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym443_18490001, 0, 2147483647);++i) {t_18465092.data[i]={Field0: 0, Field1: [], Field2: 0};}    }
    
    if (mustRehash_18095601(t_18465092)) {
    enlarge_18120161(t_18465092);
    index_18480610 = rawGetKnownHC_18121629(t_18465092, key_18465093, hc_18480601[0]);
    }
    
    index_18480610 = subInt(-1, index_18480610);
    rawInsert_18121122(t_18465092, t_18465092, "data", key_18465093, val_18465094, hc_18480601[0], index_18480610);
    t_18465092.counter = addInt(t_18465092.counter, 1);
    }
    else {
      result_18465095 = true;
    }
    

  return result_18465095;

}
function loadLinks_16481053(e_16481056) {
function parseTiles_17705250(tiles_17705253) {
                        var Tmp8;
                          var Tmp9;
                        var Tmp10;
                              var Tmp16;
                                var Tmp17;
                                var Tmp18;
                              var Tmp19;
                              var Tmp20;
                              var Tmp21;
                              var Tmp22;
                              var Tmp23;
                      var Tmp29;
                              var Tmp33;
                              var Tmp34;
                              var Tmp35;
                      var Tmp36;
                      var Tmp37;
                      var Tmp38;
                      var Tmp39;
                      var Tmp40;
                        var Tmp41;
                      var Tmp42;
                      var Tmp43;
                      var Tmp44;
                      var Tmp45;
                      function HEX3Aanonymous_17920201(x_17920203) {
                        var result_17920204 = 0;

                          result_17920204 = parseInt(toJSStr(x_17920203), 10);

                        return result_17920204;

                      }
                      var Tmp46;
                        function HEX3Aanonymous_17920271(x_17920273) {
                          var result_17920274 = 0;

                            result_17920274 = parseInt(toJSStr(x_17920273), 10);

                          return result_17920274;

                        }
                      var Tmp47;
                      var Tmp48;
                        var Tmp49;
                          var Tmp50;
                      var Tmp51;
                      var Tmp52;
    var Tmp57;
    var Tmp58;

    L1: do {
      var t_17715214 = null;
      var t_17715214_Idx = 0;
      var i_18550372 = 0;
      var L_18550373 = (tiles_17705253).length;
      L2: do {
          L3: while (true) {
          if (!(i_18550372 < L_18550373)) break L3;
            t_17715214 = tiles_17705253; t_17715214_Idx = chckIndx(i_18550372, 0, (tiles_17705253).length-1);
            var rows_17720012 = (t_17715214[t_17715214_Idx].Rows);
            var meta_17725010 = (t_17715214[t_17715214_Idx].Meta);
            var tileId_17745020 = nsuJoinSep([cstrToNimstr((meta_17725010.tileX)), cstrToNimstr((meta_17725010.tileY)), cstrToNimstr((meta_17725010.level)), cstrToNimstr((meta_17725010.layerName))], makeNimstrLit("_"));
            L4: do {
              var r_17750208 = null;
              var r_17750208_Idx = 0;
              var i_18550369 = 0;
              var L_18550370 = (rows_17720012).length;
              L5: do {
                  L6: while (true) {
                  if (!(i_18550369 < L_18550370)) break L6;
                    r_17750208 = rows_17720012; r_17750208_Idx = chckIndx(i_18550369, 0, (rows_17720012).length-1);
                    L7: do {
                      var linkId_17755010 = parseInt(toJSStr(cstrToNimstr((r_17750208[r_17750208_Idx].LINK_ID))), 10);
                        if (!hasKeyOrPut_17755087(allLinks_16240629[0], linkId_17755010, {linkId: linkId_17755010, name: [], cityId: 0, districtId: 0, postalCode: [], neighborLinks: [], geometry: [], readOnly: false, addedToMap: false, addedToSector: false})) Tmp8 = false; else {                          Tmp8 = (Tmp9 = HEX5BHEX5D_17500788(allLinks_16240629[0], linkId_17755010), Tmp9)[0][Tmp9[1]].readOnly;                        }                      if (Tmp8) {
                      break L7;
                      }
                      
                        if (!(r_17750208[r_17750208_Idx].NAMES)) Tmp10 = false; else {                          Tmp10 = !((r_17750208[r_17750208_Idx].NAME));                        }                      if (Tmp10) {
                      var strName_17835010 = cstrToNimstr((r_17750208[r_17750208_Idx].NAMES));
                      L11: do {
                        var seqNames_17835011 = [];
                        var lastHEX60gensym33_18550343 = 0;
                        var splitsHEX60gensym33_18550344 = -1;
                        L12: do {
                            L13: while (true) {
                            if (!(lastHEX60gensym33_18550343 <= (strName_17835010).length)) break L13;
                              var firstHEX60gensym33_18550346 = lastHEX60gensym33_18550343;
                              L14: do {
                                  L15: while (true) {
                                  if (!((lastHEX60gensym33_18550343 < (strName_17835010).length) && !(substrEq_9515026(strName_17835010, lastHEX60gensym33_18550343, makeNimstrLit("\x1D"))))) break L15;
                                    lastHEX60gensym33_18550343 = addInt(lastHEX60gensym33_18550343, 1);
                                  }
                              } while(false);
                              if ((splitsHEX60gensym33_18550344 == 0)) {
                              lastHEX60gensym33_18550343 = (strName_17835010).length;
                              }
                              
                              seqNames_17835011 = substr_1571022(strName_17835010, firstHEX60gensym33_18550346, subInt(lastHEX60gensym33_18550343, 1));
                              var txt_17840201 = nsuReplaceStr((Tmp16 = nsuSplitString(seqNames_17835011, makeNimstrLit("\x1E"), -1), Tmp16)[chckIndx(0, 0, (Tmp16).length-1)], makeNimstrLit("GERBN"), []);
                                if (!!((ConstSet15[txt_17840201[chckIndx(0, 0, (txt_17840201).length-1)]] != undefined))) Tmp17 = false; else {                                  Tmp17 = !((ConstSet16[txt_17840201[chckIndx(1, 0, (txt_17840201).length-1)]] != undefined));                                }                              if (Tmp17) {
                              if (!(eqStrings((Tmp18 = HEX5BHEX5D_17500788(allLinks_16240629[0], linkId_17755010), Tmp18)[0][Tmp18[1]].name, []))) {
                              break L11;
                              }
                              
                              (Tmp19 = HEX5BHEX5D_17500788(allLinks_16240629[0], linkId_17755010), Tmp19)[0][Tmp19[1]].name = nimCopy(null, ((Tmp20 = HEX5BHEX5D_17500788(allLinks_16240629[0], linkId_17755010), Tmp20)[0][Tmp20[1]].name || []).concat(makeNimstrLit(" ") || [],nsuReplaceStr((Tmp21 = nsuSplitString(seqNames_17835011, makeNimstrLit("\x1E"), -1), Tmp21)[chckIndx(0, 0, (Tmp21).length-1)], makeNimstrLit("GERBN"), []) || []), NTI1188013);
                              (Tmp22 = HEX5BHEX5D_17500788(allLinks_16240629[0], linkId_17755010), Tmp22)[0][Tmp22[1]].name = nimCopy(null, nucStrip((Tmp23 = HEX5BHEX5D_17500788(allLinks_16240629[0], linkId_17755010), Tmp23)[0][Tmp23[1]].name, true, true, unicodeSpaces_3034041), NTI1188013);
                              break L11;
                              }
                              
                              L24: do {
                                var seqText_17855808 = [];
                                var lastHEX60gensym33_18550338 = 0;
                                var splitsHEX60gensym33_18550339 = -1;
                                L25: do {
                                    L26: while (true) {
                                    if (!(lastHEX60gensym33_18550338 <= (seqNames_17835011).length)) break L26;
                                      var firstHEX60gensym33_18550341 = lastHEX60gensym33_18550338;
                                      L27: do {
                                          L28: while (true) {
                                          if (!((lastHEX60gensym33_18550338 < (seqNames_17835011).length) && !(substrEq_9515026(seqNames_17835011, lastHEX60gensym33_18550338, makeNimstrLit("\x1E"))))) break L28;
                                            lastHEX60gensym33_18550338 = addInt(lastHEX60gensym33_18550338, 1);
                                          }
                                      } while(false);
                                      if ((splitsHEX60gensym33_18550339 == 0)) {
                                      lastHEX60gensym33_18550338 = (seqNames_17835011).length;
                                      }
                                      
                                      seqText_17855808 = substr_1571022(seqNames_17835011, firstHEX60gensym33_18550341, subInt(lastHEX60gensym33_18550338, 1));
                                      if ((splitsHEX60gensym33_18550339 == 0)) {
                                      break L25;
                                      }
                                      
                                      splitsHEX60gensym33_18550339 = subInt(splitsHEX60gensym33_18550339, 1);
                                      lastHEX60gensym33_18550338 = addInt(lastHEX60gensym33_18550338, 1);
                                    }
                                } while(false);
                              } while(false);
                              if ((splitsHEX60gensym33_18550344 == 0)) {
                              break L12;
                              }
                              
                              splitsHEX60gensym33_18550344 = subInt(splitsHEX60gensym33_18550344, 1);
                              lastHEX60gensym33_18550343 = addInt(lastHEX60gensym33_18550343, 1);
                            }
                        } while(false);
                      } while(false);
                      }
                      else {
                      if ((r_17750208[r_17750208_Idx].NAME)) {
                      (Tmp29 = HEX5BHEX5D_17500788(allLinks_16240629[0], linkId_17755010), Tmp29)[0][Tmp29[1]].geometry = nimCopy(null, newSeq_17865181(0), NTI17865185);
                      var lats_17870010 = nsuSplitString(cstrToNimstr((r_17750208[r_17750208_Idx].LAT)), makeNimstrLit(","), -1);
                      var lngs_17875010 = nsuSplitString(cstrToNimstr((r_17750208[r_17750208_Idx].LON)), makeNimstrLit(","), -1);
                      var lat0_17875011 = 0.0;
                      var lng0_17875012 = 0.0;
                      L30: do {
                        var i_17875027 = 0;
                        var colontmp__18550355 = 0;
                        colontmp__18550355 = (lats_17870010).length - 1;
                        var res_18550356 = 0;
                        L31: do {
                            L32: while (true) {
                            if (!(res_18550356 <= colontmp__18550355)) break L32;
                              i_17875027 = res_18550356;
                              if (eqStrings(nucStrip(lats_17870010[chckIndx(i_17875027, 0, (lats_17870010).length-1)], true, true, unicodeSpaces_3034041), [])) {
                              Tmp33 = lat0_17875011;
                              }
                              else {
                              Tmp33 = (lat0_17875011 + parseFloat(toJSStr(nucStrip(lats_17870010[chckIndx(i_17875027, 0, (lats_17870010).length-1)], true, true, unicodeSpaces_3034041))));
                              }
                              
                              var strLat_17875030 = Tmp33;
                              if (eqStrings(nucStrip(lngs_17875010[chckIndx(i_17875027, 0, (lngs_17875010).length-1)], true, true, unicodeSpaces_3034041), [])) {
                              Tmp34 = lng0_17875012;
                              }
                              else {
                              Tmp34 = (lng0_17875012 + parseFloat(toJSStr(nucStrip(lngs_17875010[chckIndx(i_17875027, 0, (lngs_17875010).length-1)], true, true, unicodeSpaces_3034041))));
                              }
                              
                              var strLng_17875033 = Tmp34;
                              (Tmp35 = HEX5BHEX5D_17500788(allLinks_16240629[0], linkId_17755010), Tmp35)[0][Tmp35[1]].geometry.push({lat: nimCopy(null, (strLat_17875030 / 1.0000000000000000e+05), NTI11721016), lng: nimCopy(null, (strLng_17875033 / 1.0000000000000000e+05), NTI11721018)});;
                              lat0_17875011 = strLat_17875030;
                              lng0_17875012 = strLng_17875033;
                              res_18550356 = addInt(res_18550356, 1);
                            }
                        } while(false);
                      } while(false);
                      }
                      else {
                      if ((r_17750208[r_17750208_Idx].POSTAL_CODES)) {
                      (Tmp36 = HEX5BHEX5D_17500788(allLinks_16240629[0], linkId_17755010), Tmp36)[0][Tmp36[1]].cityId = parseInt(toJSStr((Tmp38 = nsuSplitString((Tmp37 = nsuSplitString(cstrToNimstr((r_17750208[r_17750208_Idx].ADMIN_PLACE_IDS)), makeNimstrLit(","), -1), Tmp37)[chckIndx(3, 0, (Tmp37).length-1)], makeNimstrLit(";"), -1), Tmp38)[chckIndx(0, 0, (Tmp38).length-1)]), 10);
                      var distrPrt_17890010 = nimCopy(null, (Tmp39 = nsuSplitString(cstrToNimstr((r_17750208[r_17750208_Idx].ADMIN_PLACE_IDS)), makeNimstrLit(","), -1), Tmp39)[chckIndx(4, 0, (Tmp39).length-1)], NTI1188013);
                      if ((eqStrings(distrPrt_17890010, []) || (distrPrt_17890010[chckIndx(0, 0, (distrPrt_17890010).length-1)] == 59))) {
                      Tmp40 = 0;
                      }
                      else {
                      Tmp40 = parseInt(toJSStr((Tmp41 = nsuSplitString(distrPrt_17890010, makeNimstrLit(";"), -1), Tmp41)[chckIndx(0, 0, (Tmp41).length-1)]), 10);
                      }
                      
                      var districtId_17895204 = Tmp40;
                      (Tmp42 = HEX5BHEX5D_17500788(allLinks_16240629[0], linkId_17755010), Tmp42)[0][Tmp42[1]].districtId = addInt(districtId_17895204, (Tmp43 = HEX5BHEX5D_17500788(allLinks_16240629[0], linkId_17755010), Tmp43)[0][Tmp43[1]].cityId);
                      (Tmp44 = HEX5BHEX5D_17500788(allLinks_16240629[0], linkId_17755010), Tmp44)[0][Tmp44[1]].postalCode = nimCopy(null, (Tmp45 = nsuSplitString(cstrToNimstr((r_17750208[r_17750208_Idx].POSTAL_CODES)), makeNimstrLit(";"), -1), Tmp45)[chckIndx(0, 0, (Tmp45).length-1)], NTI1188013);
                      }
                      else {
                      if ((r_17750208[r_17750208_Idx].REF_NODE_NEIGHBOR_LINKS)) {
                      var rLinks_17910010 = cstrToNimstr((r_17750208[r_17750208_Idx].REF_NODE_NEIGHBOR_LINKS));
                      var nonRLinks_17915010 = cstrToNimstr((r_17750208[r_17750208_Idx].NONREF_NODE_NEIGHBOR_LINKS));
                      var refLinks_17915011 = nsuSplitString(rLinks_17910010, makeNimstrLit(","), -1);
                      var nonRefLinks_17915012 = nsuSplitString(nonRLinks_17915010, makeNimstrLit(","), -1);
                      var refLinksInt_17920231 = map_12345035(refLinks_17915011, HEX3Aanonymous_17920201);
                      if (eqStrings(nonRLinks_17915010, [])) {
                      Tmp46 = newSeq_17920244(0);
                      }
                      else {
                      Tmp46 = map_12345035(nonRefLinks_17915012, HEX3Aanonymous_17920271);
                      }
                      
                      var nonRefLinksInt_17920301 = nimCopy(null, Tmp46, NTI17920248);
                      (Tmp47 = HEX5BHEX5D_17500788(allLinks_16240629[0], linkId_17755010), Tmp47)[0][Tmp47[1]].neighborLinks = nimCopy(null, concat_17920471([nimCopy(null, refLinksInt_17920231, NTI17920463), nimCopy(null, nonRefLinksInt_17920301, NTI17920468)]), NTI17920477);
                      }
                      }}}
                      var street_17920746 = nimCopy(null, (Tmp48 = HEX5BHEX5D_17500788(allLinks_16240629[0], linkId_17755010), Tmp48)[0][Tmp48[1]].name, NTI1188013);
                        if (!!(eqStrings(street_17920746, []))) Tmp49 = false; else {                          Tmp49 = ((Tmp50 = HEX5BHEX5D_17500788(allLinks_16240629[0], linkId_17755010), Tmp50)[0][Tmp50[1]].cityId == cityId_16290630[0]);                        }                      if (Tmp49) {
                      if (!(hasKeyOrPut_17925277(allStreets_16250629[0], street_17920746, {name: nimCopy(null, street_17920746, NTI1188013), links: newSeq_17925193(0), sector: null, totalFamilies: 0}))) {
                      }
                      
                      (Tmp51 = HEX5BHEX5D_17006312(allStreets_16250629[0], street_17920746), Tmp51)[0][Tmp51[1]].links.push((Tmp52 = HEX5BHEX5D_17500788(allLinks_16240629[0], linkId_17755010), Tmp52)[0][Tmp52[1]]);;
                      }
                      
                      var _ = hasKeyOrPut_17986098(cachedTiles_16260629[0], tileId_17745020, t_17715214[t_17715214_Idx]);
                    } while(false);
                    i_18550369 = addInt(i_18550369, 1);
                    if (!(((rows_17720012).length == L_18550370))) {
                    failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while(false);
            } while(false);
            i_18550372 = addInt(i_18550372, 1);
            if (!(((tiles_17705253).length == L_18550373))) {
            failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    L53: do {
      var k_18055682 = 0;
      var v_18055683 = null;
      var v_18055683_Idx = 0;
      var L_18550376 = len_16685416(allLinks_16240629[0]);
      L54: do {
        var h_18550378 = 0;
        var colontmp__18550379 = 0;
        colontmp__18550379 = (allLinks_16240629[0].data).length - 1;
        var res_18550380 = 0;
        L55: do {
            L56: while (true) {
            if (!(res_18550380 <= colontmp__18550379)) break L56;
              h_18550378 = res_18550380;
              if (isFilled_11481218(allLinks_16240629[0].data[chckIndx(h_18550378, 0, (allLinks_16240629[0].data).length-1)].Field0)) {
              k_18055682 = allLinks_16240629[0].data[chckIndx(h_18550378, 0, (allLinks_16240629[0].data).length-1)].Field1;
              v_18055683 = allLinks_16240629[0].data[chckIndx(h_18550378, 0, (allLinks_16240629[0].data).length-1)]; v_18055683_Idx = "Field2";
              v_18055683[v_18055683_Idx].readOnly = true;
              if (eqStrings(v_18055683[v_18055683_Idx].name, [])) {
              v_18055683[v_18055683_Idx].name = nimCopy(null, makeNimstrLit("uknown!!!"), NTI1188013);
              }
              
              if (!((len_16685416(allLinks_16240629[0]) == L_18550376))) {
              failedAssertImpl_1305480(makeNimstrLit("tables.nim(703, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_18550380 = addInt(res_18550380, 1);
            }
        } while(false);
      } while(false);
    } while(false);
    sort_18065080(allStreets_16250629[0], sortStreetTbl_18060222, 1);
    displayStreet_17440323((Tmp57 = HEX5BHEX5D_17500788(allLinks_16240629[0], clckLinkId_16290634[0]), Tmp57)[0][Tmp57[1]].name, true);
    if (!(hasKey_17000110(allSectors_16270629[0], sectName_16290636[0]))) {
    HEX5BHEX5DHEX3D_18067427(lastPostfix_16280629[0], postalCode_16290635[0], subInt((Tmp58 = HEX5BHEX5D_16485198(lastPostfix_16280629[0], postalCode_16290635[0]), Tmp58)[0][Tmp58[1]], 1));
    }
    
    sort_18130080(allSectors_16270629[0], sortSectorTbl_18125693, 1);
    redraw_15780246(kxi__);

  
}
    function HEX3Aanonymous_18132048(res_18132050) {
        var tiles_18140012 = (res_18132050.Tiles);
        L1: do {
          var k_18150229 = [];
          var v_18150230 = null;
          var L_18550314 = len_18140146(cachedTiles_16260629[0]);
          L2: do {
            var h_18550316 = 0;
            var colontmp__18550317 = 0;
            colontmp__18550317 = (cachedTiles_16260629[0].data).length - 1;
            var res_18550318 = 0;
            L3: do {
                L4: while (true) {
                if (!(res_18550318 <= colontmp__18550317)) break L4;
                  h_18550316 = res_18550318;
                  if (isFilled_11481218(cachedTiles_16260629[0].data[chckIndx(h_18550316, 0, (cachedTiles_16260629[0].data).length-1)].Field0)) {
                  k_18150229 = cachedTiles_16260629[0].data[chckIndx(h_18550316, 0, (cachedTiles_16260629[0].data).length-1)].Field1;
                  v_18150230 = cachedTiles_16260629[0].data[chckIndx(h_18550316, 0, (cachedTiles_16260629[0].data).length-1)].Field2;
                  tiles_18140012.push(v_18150230);;
                  if (!((len_18140146(cachedTiles_16260629[0]) == L_18550314))) {
                  failedAssertImpl_1305480(makeNimstrLit("tables.nim(681, 13) `len(t) == L` the length of the table changed while iterating over it"));
                  }
                  
                  }
                  
                  res_18550318 = addInt(res_18550318, 1);
                }
            } while(false);
          } while(false);
        } while(false);
        parseTiles_17705250(tiles_18140012);

      
    }
    function HEX3Aanonymous_18150253(e_18150255) {
      
    }
    function HEX3Aanonymous_18150270(res_18150272) {
      BeforeRet: do {
        var layerObj_18155004 = res_18150272.Layers[0];
        var ePnt_18155005 = function(){return H.service.extension.platformData.Service.EntryPoint}();
        var ePntType_18155006 = function(){return H.service.extension.platformData.Service.EntryPointType}();
        var prmsPde_18160201 = {};
        var tXYs_18160218 = newSeq_1840232(0);
        var layers_18160230 = [makeNimstrLit("ROAD_ADMIN_FC"), makeNimstrLit("ROAD_GEOM_FC"), makeNimstrLit("ROAD_NAME_FC"), makeNimstrLit("LINK_FC")];
        var rLayers_18160247 = newSeq_1840232(0);
        var levels_18160264 = newSeq_1840232(0);
        var tileXYs_18165012 = (layerObj_18155004.tileXYs);
        var level_18170010 = (layerObj_18155004.level);
        var allCrds_18170065 = newSeq_18170024(0);
        var prevTxys_18180629 = [initTable_18170072(32)];
        L1: do {
          var xy_18180637 = null;
          var xy_18180637_Idx = 0;
          var i_18550239 = 0;
          var L_18550240 = (tileXYs_18165012).length;
          L2: do {
              L3: while (true) {
              if (!(i_18550239 < L_18550240)) break L3;
                xy_18180637 = tileXYs_18165012; xy_18180637_Idx = chckIndx(i_18550239, 0, (tileXYs_18165012).length-1);
                var tx_18185010 = (xy_18180637[xy_18180637_Idx].x);
                var ty_18190010 = (xy_18180637[xy_18180637_Idx].y);
                var latlng_18190011 = getCoord_12016015(level_18170010, tx_18185010, ty_18190010);
                HEX5BHEX5DHEX3D_18190144(prevTxys_18180629[0], nsuJoinSep([cstrToNimstr((level_18170010)+""), cstrToNimstr((tx_18185010)+""), cstrToNimstr((ty_18190010)+"")], makeNimstrLit("_")), {Field0: level_18170010, Field1: tx_18185010, Field2: ty_18190010});
                allCrds_18170065.push({Field0: latlng_18190011["Field0"], Field1: latlng_18190011["Field1"]});;
                i_18550239 = addInt(i_18550239, 1);
                if (!(((tileXYs_18165012).length == L_18550240))) {
                failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);
        L4: do {
          var lvl_18265210 = 0;
          var res_18550248 = 10;
          L5: do {
              L6: while (true) {
              if (!(res_18550248 <= 13)) break L6;
                lvl_18265210 = res_18550248;
                L7: do {
                  var crd_18275214 = null;
                  var i_18550245 = 0;
                  var L_18550246 = (allCrds_18170065).length;
                  L8: do {
                      L9: while (true) {
                      if (!(i_18550245 < L_18550246)) break L9;
                        crd_18275214 = allCrds_18170065[chckIndx(i_18550245, 0, (allCrds_18170065).length-1)];
                        var txy_18275215 = getTileXY_12016113(lvl_18265210, crd_18275214["Field0"], crd_18275214["Field1"]);
                        var k_18275227 = nsuJoinSep([cstrToNimstr((lvl_18265210)+""), cstrToNimstr((txy_18275215["Field0"])+""), cstrToNimstr((txy_18275215["Field1"])+"")], makeNimstrLit("_"));
                        var _ = hasKeyOrPut_18280281(prevTxys_18180629[0], k_18275227, {Field0: lvl_18265210, Field1: txy_18275215["Field0"], Field2: txy_18275215["Field1"]});
                        i_18550245 = addInt(i_18550245, 1);
                        if (!(((allCrds_18170065).length == L_18550246))) {
                        failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  } while(false);
                } while(false);
                res_18550248 = addInt(res_18550248, 1);
              }
          } while(false);
        } while(false);
        L10: do {
          var lr_18310690 = null;
          var lr_18310690_Idx = 0;
          var i_18550271 = 0;
          var L_18550272 = (layers_18160230).length;
          L11: do {
              L12: while (true) {
              if (!(i_18550271 < L_18550272)) break L12;
                lr_18310690 = layers_18160230; lr_18310690_Idx = chckIndx(i_18550271, 0, (layers_18160230).length-1);
                L13: do {
                  var lvlTxTy_18320214 = {Field0: 0, Field1: 0, Field2: 0};
                  var L_18550263 = len_18310823(prevTxys_18180629[0]);
                  L14: do {
                    var h_18550265 = 0;
                    var colontmp__18550266 = 0;
                    colontmp__18550266 = (prevTxys_18180629[0].data).length - 1;
                    var res_18550267 = 0;
                    L15: do {
                        L16: while (true) {
                        if (!(res_18550267 <= colontmp__18550266)) break L16;
                          h_18550265 = res_18550267;
                          if (isFilled_11481218(prevTxys_18180629[0].data[chckIndx(h_18550265, 0, (prevTxys_18180629[0].data).length-1)].Field0)) {
                          nimCopy(lvlTxTy_18320214, prevTxys_18180629[0].data[chckIndx(h_18550265, 0, (prevTxys_18180629[0].data).length-1)].Field2, NTI18170067);
                          L17: do {
                            var xStr_18320215 = cstrToNimstr((lvlTxTy_18320214.Field1)+"");
                            var yStr_18320216 = cstrToNimstr((lvlTxTy_18320214.Field2)+"");
                            var level_18320217 = lvlTxTy_18320214.Field0;
                            var layerName_18320218 = (lr_18310690[lr_18310690_Idx] || []).concat(cstrToNimstr((subInt(level_18320217, 8))+"") || []);
                            if (hasKey_18320339(cachedTiles_16260629[0], nsuJoinSep([nimCopy(null, xStr_18320215, NTI1188013), nimCopy(null, yStr_18320216, NTI1188013), cstrToNimstr((level_18320217)+""), nimCopy(null, layerName_18320218, NTI1188013)], makeNimstrLit("_")))) {
                            break L17;
                            }
                            
                            tXYs_18160218.push((xStr_18320215 || []).concat(makeNimstrLit(",") || [],yStr_18320216 || []));;
                            levels_18160264.push(cstrToNimstr((level_18320217)+""));;
                            var Tmp18 = nimCopy(null, layerName_18320218, NTI1188013);
                            rLayers_18160247.push(Tmp18);;
                          } while(false);
                          if (!((len_18310823(prevTxys_18180629[0]) == L_18550263))) {
                          failedAssertImpl_1305480(makeNimstrLit("tables.nim(745, 13) `len(t) == L` the length of the table changed while iterating over it"));
                          }
                          
                          }
                          
                          res_18550267 = addInt(res_18550267, 1);
                        }
                    } while(false);
                  } while(false);
                } while(false);
                i_18550271 = addInt(i_18550271, 1);
                if (!(((layers_18160230).length == L_18550272))) {
                failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);
        if (((rLayers_18160247).length == 0)) {
        var tiles_18320414 = newSeq_16835256(0);
        L19: do {
          var k_18320422 = [];
          var v_18320423 = null;
          var L_18550282 = len_18140146(cachedTiles_16260629[0]);
          L20: do {
            var h_18550284 = 0;
            var colontmp__18550285 = 0;
            colontmp__18550285 = (cachedTiles_16260629[0].data).length - 1;
            var res_18550286 = 0;
            L21: do {
                L22: while (true) {
                if (!(res_18550286 <= colontmp__18550285)) break L22;
                  h_18550284 = res_18550286;
                  if (isFilled_11481218(cachedTiles_16260629[0].data[chckIndx(h_18550284, 0, (cachedTiles_16260629[0].data).length-1)].Field0)) {
                  k_18320422 = cachedTiles_16260629[0].data[chckIndx(h_18550284, 0, (cachedTiles_16260629[0].data).length-1)].Field1;
                  v_18320423 = cachedTiles_16260629[0].data[chckIndx(h_18550284, 0, (cachedTiles_16260629[0].data).length-1)].Field2;
                  tiles_18320414.push(v_18320423);;
                  if (!((len_18140146(cachedTiles_16260629[0]) == L_18550282))) {
                  failedAssertImpl_1305480(makeNimstrLit("tables.nim(681, 13) `len(t) == L` the length of the table changed while iterating over it"));
                  }
                  
                  }
                  
                  res_18550286 = addInt(res_18550286, 1);
                }
            } while(false);
          } while(false);
        } while(false);
        parseTiles_17705250(tiles_18320414);
        break BeforeRet;
        }
        
        prmsPde_18160201.layers = toJSStr(nsuJoinSep(rLayers_18160247, makeNimstrLit(",")));
        prmsPde_18160201.levels = toJSStr(nsuJoinSep(levels_18160264, makeNimstrLit(",")));
        prmsPde_18160201.tilexy = toJSStr(nsuJoinSep(tXYs_18160218, makeNimstrLit(",")));
        prmsPde_18160201.meta = 1;
        pdeService_17385035[0].request(ePnt_18155005.TILES, ePntType_18155006.JSON, prmsPde_18160201, onResRoadGeom_18150252, onErrRoadGeom_18150269);
      } while (false);

      
    }
    function HEX3Aanonymous_18345290(e_18345292) {
      
    }
    function HEX3Aanonymous_18345307(r_18345309) {
        var Tmp1;
          var Tmp5;
        var Tmp6;
        var Tmp7;
          var Tmp8;
        var Tmp9;
        var Tmp10;

      BeforeRet: do {
        var res_18345310 = r_18345309;
        var resView_18355004 = res_18345310.response.view[0];
        var location_18365004 = resView_18355004.result[0].location;
        var mapReference_18370004 = location_18365004.mapReference;
        var cityShape_18380010 = (location_18365004.shape.value);
        var cityGeo_18380011 = function(wkt){return new H.util.wkt.toGeometry(wkt)}(cityShape_18380010);
        var address_18385004 = location_18365004.address;
        var linkId_18390004 = mapReference_18370004.referenceId;
        clckLinkId_16290634[0] = (linkId_18390004);
        if ((cityGeo_18380011.getExterior === undefined)) {
        Tmp1 = cityGeo_18380011.getGeometries();
        }
        else {
        Tmp1 = [cityGeo_18380011];
        }
        
        var geoms_18395019 = nimCopy(null, Tmp1, NTI11805004);
        L2: do {
          var g_18410214 = null;
          var g_18410214_Idx = 0;
          var i_18550300 = 0;
          var L_18550301 = (geoms_18395019).length;
          L3: do {
              L4: while (true) {
              if (!(i_18550300 < L_18550301)) break L4;
                g_18410214 = geoms_18395019; g_18410214_Idx = chckIndx(i_18550300, 0, (geoms_18395019).length-1);
                var lnStr_18410219 = g_18410214[g_18410214_Idx].getExterior();
                var pOpt_18415201 = {style: {strokeColor: "rgba(0, 255, 255, 1)", fillColor: "rgba(0, 255, 255, 1)", lineWidth: 10, m_type: NTI11816076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, m_type: NTI11816081, zIndex: 0};
                var pl_18415202 = function(ls, options){return new H.map.Polyline(ls, options)}(lnStr_18410219, pOpt_18415201);
                if ((cityId_16290630[0] == 0)) {
                map.addObject(pl_18415202);
                }
                
                i_18550300 = addInt(i_18550300, 1);
                if (!(((geoms_18395019).length == L_18550301))) {
                failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);
        var revCityId_18420010 = parseInt(toJSStr(cstrToNimstr((mapReference_18370004.cityId))), 10);
        var revPostalCode_18425010 = cstrToNimstr((address_18385004.postalCode));
          if (!!((cityId_16290630[0] == 0))) Tmp5 = false; else {            Tmp5 = !((revCityId_18420010 == cityId_16290630[0]));          }        if (Tmp5) {
        break BeforeRet;
        }
        
        cityId_16290630[0] = revCityId_18420010;
        postalCode_16290635[0] = nimCopy(null, revPostalCode_18425010, NTI1188013);
        if ((mapReference_18370004.districtId)) {
        Tmp6 = parseInt(toJSStr(cstrToNimstr((mapReference_18370004.districtId))), 10);
        }
        else {
        Tmp6 = 0;
        }
        
        districtId_16290631[0] = Tmp6;
        addrCity_16290633[0] = nimCopy(null, cstrToNimstr((address_18385004.city)), NTI1188013);
          if ((address_18385004.district === undefined)) Tmp8 = true; else {            Tmp8 = eqStrings(cstrToNimstr((address_18385004.district)), addrCity_16290633[0]);          }        if (Tmp8) {
        Tmp7 = [];
        }
        else {
        Tmp7 = cstrToNimstr((address_18385004.district));
        }
        
        addrDistr_16290632[0] = nimCopy(null, Tmp7, NTI1188013);
        var _ = hasKeyOrPut_18465086(lastPostfix_16280629[0], postalCode_16290635[0], 0);
        HEX5BHEX5DHEX3D_18067427(lastPostfix_16280629[0], postalCode_16290635[0], addInt((Tmp9 = HEX5BHEX5D_16485198(lastPostfix_16280629[0], postalCode_16290635[0]), Tmp9)[0][Tmp9[1]], 1));
        var pFix_18496131 = (Tmp10 = HEX5BHEX5D_16485198(lastPostfix_16280629[0], postalCode_16290635[0]), Tmp10)[0][Tmp10[1]];
        var seqSectName_18496148 = newSeq_1840232(0);
        seqSectName_18496148.push((postalCode_16290635[0] || []).concat(makeNimstrLit("-") || [],cstrToNimstr((pFix_18496131)+"") || []));;
        sectName_16290636[0] = nimCopy(null, nsuJoinSep(seqSectName_18496148, makeNimstrLit(" ")), NTI1188013);
        var ePnt_18500201 = function(){return H.service.extension.platformData.Service.EntryPoint}();
        var ePntType_18500202 = function(){return H.service.extension.platformData.Service.EntryPointType}();
        var prmsPde_18500203 = {};
        prmsPde_18500203.layer = "ROAD_GEOM_FCn";
        prmsPde_18500203.attributes = "LINK_ID";
        prmsPde_18500203.values = (linkId_18390004);
        var zKey_18515012 = (makeNimstrLit("z") || []).concat(addrCity_16290633[0] || [],makeNimstrLit("-1") || []);
        if (!(hasKey_17000110(allSectors_16270629[0], zKey_18515012))) {
        HEX5BHEX5DHEX3D_16550347(allSectors_16270629[0], zKey_18515012, {exclude: true, pFix: 1, city: [], postalCode: (makeNimstrLit("z") || []).concat(addrCity_16290633[0] || []), district: [], folkDistrict: [], streets: ({data: [], counter: 0, first: 0, last: 0}), shownOnMap: false});
        }
        
        pdeService_17385035[0].request(ePnt_18500201.INDEX, ePntType_18500202.JSON, prmsPde_18500203, onResIndexRoadGeom_18345289, onErrIndexRoadGeom_18345306);
      } while (false);

      
    }
    function HEX3Aanonymous_18515475(e_18515477) {
      
    }

    var pE_17690349 = e_16481056;
    mainGroup_17385008[0].removeAll();
    L1: do {
      var k_17705245 = 0;
      var v_17705246 = null;
      var v_17705246_Idx = 0;
      var L_18550223 = len_16685416(allLinks_16240629[0]);
      L2: do {
        var h_18550225 = 0;
        var colontmp__18550226 = 0;
        colontmp__18550226 = (allLinks_16240629[0].data).length - 1;
        var res_18550227 = 0;
        L3: do {
            L4: while (true) {
            if (!(res_18550227 <= colontmp__18550226)) break L4;
              h_18550225 = res_18550227;
              if (isFilled_11481218(allLinks_16240629[0].data[chckIndx(h_18550225, 0, (allLinks_16240629[0].data).length-1)].Field0)) {
              k_17705245 = allLinks_16240629[0].data[chckIndx(h_18550225, 0, (allLinks_16240629[0].data).length-1)].Field1;
              v_17705246 = allLinks_16240629[0].data[chckIndx(h_18550225, 0, (allLinks_16240629[0].data).length-1)]; v_17705246_Idx = "Field2";
              v_17705246[v_17705246_Idx].addedToMap = false;
              if (!((len_16685416(allLinks_16240629[0]) == L_18550223))) {
              failedAssertImpl_1305480(makeNimstrLit("tables.nim(703, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_18550227 = addInt(res_18550227, 1);
            }
        } while(false);
      } while(false);
    } while(false);
    var geoPoint_17705247 = map.screenToGeo(pE_17690349.currentPointer.viewportX, pE_17690349.currentPointer.viewportY);
    var reverseGeocodingParameters_17705248 = {m_type: NTI15940047, jsonattributes: 0, mode: null, prox: null, maxResults: 0, additionaldata: null, locationattributes: null};
    reverseGeocodingParameters_17705248.jsonattributes = 1;
    reverseGeocodingParameters_17705248.prox = toJSStr((cstrToNimstr(nimFloatToString(geoPoint_17705247.lat)) || []).concat(makeNimstrLit(",") || [],cstrToNimstr(nimFloatToString(geoPoint_17705247.lng)) || [],makeNimstrLit(",1") || []));
    reverseGeocodingParameters_17705248.mode = "retrieveAddresses";
    reverseGeocodingParameters_17705248.maxResults = 1;
    reverseGeocodingParameters_17705248.additionaldata = "SuppressStreetType,Unnamed";
    reverseGeocodingParameters_17705248.locationattributes = "linkInfo";
    reverseGeocodingParameters_17705248.additionaldata = "IncludeShapeLevel,city";
    var rgcp_17705249 = reverseGeocodingParameters_17705248;
    var onResRoadGeom_18150252 = HEX3Aanonymous_18132048;
    var onErrRoadGeom_18150269 = HEX3Aanonymous_18150253;
    var onResIndexRoadGeom_18345289 = HEX3Aanonymous_18150270;
    var onErrIndexRoadGeom_18345306 = HEX3Aanonymous_18345290;
    var onResRevGeo_18515474 = HEX3Aanonymous_18345307;
    var onErrRevGeo_18515491 = HEX3Aanonymous_18515475;
    geocoder_17385034.reverseGeocode(reverseGeocodingParameters_17705248, onResRevGeo_18515474, onErrRevGeo_18515491);

  
}
function map_12360297(s_12360302, op_12360305) {
  var result_12360307 = [];

    result_12360307 = new Array(chckRange((s_12360302).length, 0, 2147483647)); for (var i=0;i<chckRange((s_12360302).length, 0, 2147483647);++i) {result_12360307[i]=[];}    L1: do {
      var i_12360330 = 0;
      var colontmp__18550506 = 0;
      colontmp__18550506 = (s_12360302).length;
      var i_18550507 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_18550507 < colontmp__18550506)) break L3;
            i_12360330 = i_18550507;
            result_12360307[chckIndx(i_12360330, 0, (result_12360307).length-1)] = nimCopy(null, op_12360305(s_12360302[chckIndx(i_12360330, 0, (s_12360302).length-1)]), NTI1188013);
            i_18550507 = addInt(i_18550507, 1);
          }
      } while(false);
    } while(false);

  return result_12360307;

}
function showBorder_17590380(hrCoord_17590382, sCol_17590383, latlon_17590384, lineWidth_17590385, allCommas_17590387) {
    var Tmp1;
      function HEX3Aanonymous_17590388(item_17590390) {
          function HEX3Aanonymous_17590392(item_17590394) {
            var result_17590395 = [];

              result_17590395 = nimCopy(null, nucStrip(item_17590394, true, true, unicodeSpaces_3034041), NTI1188013);

            return result_17590395;

          }

        var result_17590391 = [];

          result_17590391 = nimCopy(null, nsuJoinSep(map_12360297(nsuSplitString(item_17590390, makeNimstrLit(","), -1), HEX3Aanonymous_17590392), makeNimstrLit(",")), NTI1188013);

        return result_17590391;

      }

    if (allCommas_17590387) {
    Tmp1 = nsuSplitString(hrCoord_17590382, makeNimstrLit(","), -1);
    }
    else {
    Tmp1 = nsuSplitString(nsuJoinSep(map_12360297(nsuSplitString(hrCoord_17590382, makeNimstrLit(" "), -1), HEX3Aanonymous_17590388), makeNimstrLit(",")), makeNimstrLit(","), -1);
    }
    
    var hrArrArea_17590448 = nimCopy(null, Tmp1, NTI9690043);
    var hrLnStr_17590449 = function(){return new H.geo.LineString();}();
    var iLat_17590451 = 0;
    var iLng_17590453 = 1;
    if (latlon_17590384) {
    iLat_17590451 = 1;
    iLng_17590453 = 0;
    }
    
    L2: do {
      var i_17590467 = 0;
      var colontmp__18550496 = 0;
      colontmp__18550496 = subInt((hrArrArea_17590448).length - 1, 3);
      var res_18550497 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_18550497 <= colontmp__18550496)) break L4;
            i_17590467 = res_18550497;
            hrLnStr_17590449.pushLatLngAlt(chckRange(parseFloat(toJSStr(hrArrArea_17590448[chckIndx(addInt(i_17590467, iLng_17590453), 0, (hrArrArea_17590448).length-1)])), -9.0000000000000000e+01, 9.0000000000000000e+01), chckRange(parseFloat(toJSStr(hrArrArea_17590448[chckIndx(addInt(i_17590467, iLat_17590451), 0, (hrArrArea_17590448).length-1)])), -1.8000000000000000e+02, 1.8000000000000000e+02), parseFloat(toJSStr(hrArrArea_17590448[chckIndx(addInt(i_17590467, 3), 0, (hrArrArea_17590448).length-1)])));
            res_18550497 = addInt(res_18550497, 3);
          }
      } while(false);
    } while(false);
    hrLnStr_17590449.pushLatLngAlt(chckRange(parseFloat(toJSStr(hrArrArea_17590448[chckIndx(iLng_17590453, 0, (hrArrArea_17590448).length-1)])), -9.0000000000000000e+01, 9.0000000000000000e+01), chckRange(parseFloat(toJSStr(hrArrArea_17590448[chckIndx(iLat_17590451, 0, (hrArrArea_17590448).length-1)])), -1.8000000000000000e+02, 1.8000000000000000e+02), parseFloat(toJSStr(hrArrArea_17590448[chckIndx(2, 0, (hrArrArea_17590448).length-1)])));
    var pOpt_17590468 = {style: {strokeColor: toJSStr(sCol_17590383), fillColor: toJSStr(sCol_17590383), lineWidth: lineWidth_17590385, m_type: NTI11816076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, m_type: NTI11816081, zIndex: 0};
    var pl_17590469 = function(ls, options){return new H.map.Polyline(ls, options)}(hrLnStr_17590449, pOpt_17590468);
    map.addObject(pl_17590469);

  
}
function geoArea_17590488() {
    function showBorderDistrict_17590801(borderData_17590803, strokeColor_17590804, fillColor_17590805) {
        function HEX3Aanonymous_17595201(item_17595203) {
            function HEX3Aanonymous_17595205(item_17595207) {
              var result_17595208 = [];

                result_17595208 = nimCopy(null, nucStrip(item_17595207, true, true, unicodeSpaces_3034041), NTI1188013);

              return result_17595208;

            }

          var result_17595204 = [];

            result_17595204 = nimCopy(null, nsuJoinSep(map_12360297(nsuSplitString(item_17595203, makeNimstrLit(","), -1), HEX3Aanonymous_17595205), makeNimstrLit(",")), NTI1188013);

          return result_17595204;

        }
        function HEX3Aanonymous_17600201(e_17600203) {
          
        }
        strokeColor_17590804 = nimCopy(null, strokeColor_17590804, NTI1188013);
        fillColor_17590805 = nimCopy(null, fillColor_17590805, NTI1188013);
        function HEX3Aanonymous_17600218(r_17600220) {
            var res_17615004 = r_17600220.response.view[0].result[0];
            var loc_17615005 = res_17615004["location"];
            var shp_17630010 = cstrToNimstr((loc_17615005.shape.value));
            var pOpt_17630013 = {style: {strokeColor: toJSStr(strokeColor_17590804), fillColor: toJSStr(fillColor_17590805), lineWidth: 5, m_type: NTI11816076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, zIndex: -999, m_type: NTI11816085};
            var pl_17630019 = function(ls, opt){return new H.map.Polygon(ls, opt)}(function(wkt){return new H.util.wkt.toGeometry(wkt)}(toJSStr(shp_17630010)), pOpt_17630013);
            map.addObject(pl_17630019);

          
        }
                function HEX3Aanonymous_17635001() {
                    function HEX3Aanonymous_17635005(r_17635007) {
                        var Tmp1;

                        var res_17650004 = r_17635007.response.view[0].result[0];
                        var matchLvl_17655010 = cstrToNimstr((res_17650004.matchLevel));
                        var loc_17655011 = res_17650004["location"];
                        if ((loc_17655011.shape === undefined)) {
                        Tmp1 = makeNimstrLit("city");
                        }
                        else {
                        Tmp1 = makeNimstrLit("district");
                        }
                        
                        var typeShp_17665008 = nimCopy(null, Tmp1, NTI1188013);
                        var reverseGeocodingParameters_17665009 = {m_type: NTI15940047, jsonattributes: 0, mode: null, prox: null, maxResults: 0, additionaldata: null, locationattributes: null};
                        reverseGeocodingParameters_17665009.jsonattributes = 1;
                        reverseGeocodingParameters_17665009.prox = toJSStr((cstrToNimstr(nimFloatToString((loc_17655011.displayPosition.latitude))) || []).concat(makeNimstrLit(",") || [],cstrToNimstr(nimFloatToString((loc_17655011.displayPosition.longitude))) || [],makeNimstrLit(",1") || []));
                        reverseGeocodingParameters_17665009.mode = "retrieveAddresses";
                        reverseGeocodingParameters_17665009.locationattributes = "none";
                        reverseGeocodingParameters_17665009.maxResults = 1;
                        reverseGeocodingParameters_17665009.additionaldata = additionalData_17635004;
                        geocodingParameters_17590806.searchtext = toJSStr(c_17635003);
                        geocodingParameters_17590806.additionaldata = additionalData_17635004;
                        geocoder_17385034.reverseGeocode(reverseGeocodingParameters_17665009, onResGeoForMap_17630083, onErrGeo_17600217);

                      
                    }

                    var c_17635003 = nimCopy(null, arrCity_17630092[chckIndx(0, 0, (arrCity_17630092).length-1)], NTI1188013);
                    var additionalData_17635004 = geocodingParameters_17590806.additionaldata;
                    var onResGeo_17690274 = HEX3Aanonymous_17635005;
                    geocodingParameters_17590806.searchtext = toJSStr(arrCity_17630092[chckIndx(0, 0, (arrCity_17630092).length-1)]);
                    geocoder_17385034.geocode(geocodingParameters_17590806, onResGeo_17690274, onErrGeo_17600217);

                  
                }

        var geocodingParameters_17590806 = {m_type: NTI15940055, searchtext: null, jsonattributes: 0, country: null, state: null, additionaldata: null};
        geocodingParameters_17590806.jsonattributes = 1;
        geocodingParameters_17590806.searchtext = "";
        geocodingParameters_17590806.country = "DEU";
        geocodingParameters_17590806.state = "Hessen";
        geocodingParameters_17590806.additionaldata = "IncludeShapeLevel,district";
        var bordersStr_17590807 = nimCopy(null, borderData_17590803, NTI1188013);
        var arrArea_17595261 = nsuSplitString(nsuJoinSep(map_12360297(nsuSplitCharSet(bordersStr_17590807, ConstSet17, -1), HEX3Aanonymous_17595201), makeNimstrLit(",")), makeNimstrLit(","), -1);
        var onErrGeo_17600217 = HEX3Aanonymous_17600201;
        var onResGeoForMap_17630083 = HEX3Aanonymous_17600218;
        L1: do {
          var city_17630091 = null;
          var city_17630091_Idx = 0;
          var i_18550519 = 0;
          var L_18550520 = (arrArea_17595261).length;
          L2: do {
              L3: while (true) {
              if (!(i_18550519 < L_18550520)) break L3;
                city_17630091 = arrArea_17595261; city_17630091_Idx = chckIndx(i_18550519, 0, (arrArea_17595261).length-1);
                var arrCity_17630092 = nsuSplitString(city_17630091[city_17630091_Idx], makeNimstrLit(">"), -1);
                var isCity_17630100 = (((arrCity_17630092).length == 2) && eqStrings(arrCity_17630092[chckIndx(1, 0, (arrCity_17630092).length-1)], makeNimstrLit("city")));
                if (isCity_17630100) {
                geocodingParameters_17590806.additionaldata = "IncludeShapeLevel,city";
                }
                else {
                  geocodingParameters_17590806.additionaldata = "IncludeShapeLevel,district";
                }
                
                HEX3Aanonymous_17635001();
                i_18550519 = addInt(i_18550519, 1);
                if (!(((arrArea_17595261).length == L_18550520))) {
                failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);

      
    }

    var hrCoordReal_17590490 = makeNimstrLit("49.95856259839435,8.850124261434395,0.0 49.96396515545882,8.899470891953959,0.0 49.989107714500946,8.942093035419573,0.0 49.99375559635732,8.973836498540546,0.0 49.98852001928919,9.014720749471216,0.0 49.98595544705414,9.046298016450189,0.0 49.993374764204034,9.054906229836575,0.0 50.01241735811533,9.038966773881107,0.0 50.02965494688769,9.03186813780005,0.0 50.0384117586606,9.032281998108914,0.0 50.042818175748586,9.027509152282287,0.0 50.04441439462123,9.022565665862723,0.0 50.04644677958852,9.013523319190714,0.0 50.04425309054112,8.996242389995311,0.0 50.04241418571553,8.987752631175479,0.0 50.04476926168952,8.980317812800713,0.0 50.05134995729781,8.977353932502664,0.0 50.05405939323471,8.980217342282131,0.0 50.06044531552646,8.986546984952541,0.0 50.062896251887224,8.988757336361253,0.0 50.06734631621531,8.99182168717788,0.0 50.06673365070724,8.992977098141527,0.0 50.0668626335698,8.99398180332731,0.0 50.06718803495289,8.994414733080061,0.0 50.06771451792822,8.995464253486665,0.0 50.06829194422368,8.99569356046626,0.0 50.0688014322406,8.995790574957626,0.0 50.06906749605375,8.996778358869724,0.0 50.06879577129238,8.997378084816354,0.0 50.06905051330128,8.998956775175868,0.0 50.06930053266752,8.99941800765802,0.0 50.0695826597326,8.999881101814484,0.0 50.07118974475246,8.99940230955102,0.0 50.07246819127017,8.999262421160052,0.0 50.073681046891316,8.999278572803176,0.0 50.07593045003854,8.998761720223174,0.0 50.07685298579153,8.998697113650673,0.0 50.079516837714955,8.99906860144255,0.0 50.08036829651911,8.999048176213728,0.0 50.08163131412362,8.999132593752917,0.0 50.08380948509669,8.998839123161446,0.0 50.08398524097505,8.998457611392535,0.0 50.08529083589718,8.998731517277907,0.0 50.0858180853043,8.999103246693766,0.0 50.087745007018746,8.999113029046814,0.0 50.08994800500485,8.99887825257364,0.0 50.09095218700986,8.998614129041318,0.0 50.09268435151408,8.997880452562647,0.0 50.093989709477825,8.9992499819895,0.0 50.09529893546212,9.000556974921759,0.0 50.097739470199144,9.003266612926636,0.0 50.11201852058528,9.02981141216353,0.0 50.11661516874831,9.067234864827416,0.0 50.12025635598552,9.07282045477725,0.0 50.14215732616893,9.07477541125969,0.0 50.13214371793553,9.104686488157405,0.0 50.130002073318444,9.11819544464286,0.0 50.12962960360105,9.129525537179045,0.0 50.124042209958354,9.131849658724928,0.0 50.12329717485541,9.139257796152435,0.0 50.12525286726787,9.144487069630674,0.0 50.12804657496021,9.150297373495386,0.0 50.130455597090595,9.155493171369901,0.0 50.133915546952075,9.158535444434747,0.0 50.1367776800252,9.15868265119595,0.0 50.13741151788165,9.163817274408206,0.0 50.14339492987892,9.173004915543089,0.0 50.14755755017878,9.192392814174495,0.0 50.14648131805793,9.200345557307376,0.0 50.138180651937496,9.259625280641485,0.0 50.13309753499998,9.307707323856194,0.0 50.139325423584935,9.327568851365392,0.0 50.12993748742165,9.339142835021836,0.0 50.12858337744752,9.365496359295658,0.0 50.12641773051991,9.372735178643259,0.0 50.11574275323997,9.381663055838633,0.0 50.09423086055464,9.394210342707808,0.0 50.087113888846716,9.404106700966404,0.0 50.084234652636276,9.41068546866214,0.0 50.08332028837411,9.415072180815773,0.0 50.084109152691816,9.419263307077205,0.0 50.08422122075908,9.425175379748403,0.0 50.08359146921259,9.427138246524793,0.0 50.08359146921259,9.433746564671972,0.0 50.09022443676629,9.46096498397125,0.0 50.09085360543011,9.474022801340594,0.0 50.093517639965924,9.48311122533397,0.0 50.09417105978058,9.497057255254838,0.0 50.09552813400177,9.509122921590878,0.0 50.10598134317437,9.5205618000653,0.0 50.114221688388604,9.519935012203698,0.0 50.14498492404182,9.511705614500329,0.0 50.151057005957576,9.529820900852283,0.0 50.16355592364119,9.537067015393063,0.0 50.17319571327903,9.524804360016356,0.0 50.17694399525393,9.501393836115371,0.0 50.192469459564606,9.505852983525081,0.0 50.19496733876523,9.518673032328001,0.0 50.19962499700489,9.516589022864023,0.0 50.21399704559683,9.50504530922025,0.0 50.21870102145308,9.466106812451708,0.0 50.26614431812017,9.43139020351146,0.0 50.2704110296101,9.442662471130737,0.0 50.27772026972424,9.4554185495736,0.0 50.30061968660411,9.419174629647651,0.0 50.3134338989555,9.398350843677145,0.0 50.330902260659,9.396070867111032,0.0 50.34710327756438,9.365823178000584,0.0 50.41660380223247,9.344974529943373,0.0 50.42288128194858,9.245267930092574,0.0 50.42450902384603,9.234516048623957,0.0 50.421660438811095,9.224935164146977,0.0 50.415420082407365,9.218334999285055,0.0 50.40619370176144,9.159039969799737,0.0 50.39988345120526,9.134129670159584,0.0 50.38861790491299,9.116032443925288,0.0 50.38196590399061,9.085373613598946,0.0 50.373828204075195,9.060876585432112,0.0 50.374851912213195,9.039245421406951,0.0 50.37455942642779,9.033894956807094,0.0 50.36909604401242,9.032055311810234,0.0 50.34884219264727,9.036714437078075,0.0 50.34206593823363,9.028913111048201,0.0 50.338055046494205,9.028371352296126,0.0 50.32394508151426,9.03866476858554,0.0 50.31439772920148,9.016777715001732,0.0 50.30756222761449,9.006886141097945,0.0 50.30215231393127,8.999211834250447,0.0 50.30015521042514,8.987558257185748,0.0 50.29616075185897,8.975449906381932,0.0 50.29107641039998,8.972493877077715,0.0 50.27792723722931,8.94907302951354,0.0 50.27618342766435,8.937021525427118,0.0 50.274948190575785,8.92258245921037,0.0 50.25656116848032,8.893022166168203,0.0 50.24522017796395,8.85641288016981,0.0 50.23634884074695,8.855222008654989,0.0 50.22470113569143,8.860339308210316,0.0 50.20947108695584,8.860934343042329,0.0 50.20672916183294,8.839751103022607,0.0 50.20094013589099,8.796432567251937,0.0 50.197435910668744,8.790006191066185,0.0 50.1946134041465,8.79057185680632,0.0 50.18875997039989,8.791839840630303,0.0 50.18371958792864,8.791637049898368,0.0 50.17642594359777,8.789065201919588,0.0 50.17596274342498,8.78995123147805,0.0 50.17430232089517,8.792046274117968,0.0 50.17337983900064,8.792936667239935,0.0 50.173916557905876,8.7938270603619,0.0 50.173195340484554,8.794979333813854,0.0 50.17431909312838,8.796367299562801,0.0 50.17334629386889,8.798724222532709,0.0 50.17103162290417,8.799588427621675,0.0 50.16957231619278,8.79793858154274,0.0 50.16703939070253,8.793905624460896,0.0 50.16438890109903,8.794534137252873,0.0 50.16375141964782,8.79050118017103,0.0 50.16162082784406,8.789139402455083,0.0 50.16103364018217,8.79076306050102,0.0 50.1591545911941,8.790527368204028,0.0 50.1596579151296,8.787280052112155,0.0 50.15856737323834,8.783220906997313,0.0 50.157225133682765,8.783011402733322,0.0 50.1560842004315,8.7835875394593,0.0 50.15568151160696,8.781728189116372,0.0 50.138275414238024,8.77894862521831,0.0 50.13670242407733,8.77838227975314,0.0 50.13690217682525,8.784467717601034,0.0 50.13534508071917,8.794250560713733,0.0 50.13391419097039,8.802588957192343,0.0 50.13357750481077,8.81237180030504,0.0 50.13319873004944,8.816967766868055,0.0 50.12932663828693,8.816967766868055,0.0 50.12356000792097,8.817755646850285,0.0 50.12381257562391,8.812306143639855,0.0 50.12170780404554,8.807447550416098,0.0 50.120865869500825,8.806725327099054,0.0 50.11556134136147,8.803179867179015,0.0 50.11324568846011,8.805346537130145,0.0 50.106340167703365,8.80816977373314,0.0 50.10335027363762,8.817164736863607,0.0 50.100570768108895,8.819594033475484,0.0 50.09652756307581,8.818280900171766,0.0 50.090630610745976,8.820775853448833,0.0 50.08907200924542,8.82274555340441,0.0 50.08818737503363,8.82530616334666,0.0 50.0851963479583,8.842048612969064,0.0 50.07200832727764,8.835811229776404,0.0 50.07049126160658,8.824386970034057,0.0 50.069570879337796,8.78607195954587,0.0 50.0601144750599,8.77637532098599,0.0 50.048860122033034,8.752320198404746,0.0 50.01891548545801,8.76089799405387,0.0 50.01232515932821,8.762762732238464,0.0 50.00777131509019,8.767797525336864,0.0 50.00381631081293,8.766492208607648,0.0 50.002510604252436,8.768218421614016,0.0 50.00128762337993,8.775689982557171,0.0 50.002779059304025,8.78613160499326,0.0 50.00131196288862,8.790503627643895,0.0 49.99779764073278,8.794819888766732,0.0 49.99865804458652,8.799875040273319,0.0 50.00348400921596,8.811082687365706,0.0 50.00061646545155,8.81260605687341,0.0 50.00033669592648,8.815217547458044,0.0 49.99781869693746,8.815326359565736,0.0 49.99648969985931,8.811844372119557,0.0 49.99383159550032,8.813150117411876,0.0 49.994111402878666,8.819134783334993,0.0 49.98877967758542,8.820035779675596,0.0 49.98385558936126,8.814211125129365,0.0 49.97969399505043,8.814642581021678,0.0 49.9713003514494,8.818202092133264,0.0 49.96810899538112,8.812377437587031,0.0 49.96519496372066,8.813456077317817,0.0 49.962003202814614,8.82165373927177,0.0 49.96255830686967,8.839127702910474,0.0 49.96380726759058,8.846246725133646,0.0");
    var hrCoord_17590491 = makeNimstrLit("8.74344999062572,50.04918999904961,0 8.751160000623477,50.0240599912103,0 8.754709994364463,50.01274999536513,0 8.757490069155791,50.00470163525198,0 8.762733428456755,50.00328437886608,0 8.764625619546589,50.00285518138227,0 8.770820082372893,50.00139911723744,0 8.772673791350965,50.00094266817716,0 8.77914111075552,49.99943225272401,0 8.799229992240086,49.99467000542582,0 8.806542356164457,49.99340340620989,0 8.809790356707138,49.99206374565822,0 8.826786125387034,49.98576635583486,0 8.828778769472731,49.98395187720181,0 8.831507689809753,49.98097186169272,0 8.830959149889964,49.97966245881608,0 8.829928960125969,49.9778595543125,0 8.830465197667758,49.9768960693446,0 8.830997048231009,49.97595153004782,0 8.83394675737425,49.97397788936575,0 8.836460977629683,49.97217362668664,0 8.83910802473485,49.96908500881526,0 8.840122212590229,49.96799437118023,0 8.841363208739749,49.9668289258026,0 8.842263170839054,49.96603842183582,0 8.843115976927399,49.96501359037988,0 8.846351833332184,49.9627537294549,0 8.849460013049532,49.95986999442856,0 8.850210000098501,49.95926998619805,0 8.850310012566743,49.95926999267505,0 8.865430008710506,49.95390999382382,0 8.891260000848778,49.94599000213314,0 8.908000004981322,49.96970998840088,0 8.960089986326672,49.98685999774121,0 9.028550004173386,49.98896999905399,0 9.051090005623092,49.98967000446294,0 9.063509599805697,49.99349370576994,0 9.058420003685276,50.00014000125238,0 9.053349983587822,50.00350000123728,0 9.043370001095513,50.00774999264858,0 9.039590003958708,50.01043999620001,0 9.037680002386232,50.0117099996073,0 9.035770000347792,50.01386000058577,0 9.035669991374673,50.01396999599814,0 9.033520003630585,50.01612999279517,0 9.03276999394412,50.01722999549925,0 9.031890007343058,50.01854999140686,0 9.031080010354554,50.02017000106182,0 9.030590017083911,50.02186000123651,0 9.030160003507783,50.02427999548287,0 9.030019994132037,50.02558000112721,0 9.03012998938997,50.02655999787962,0 9.030250000259972,50.02768999624666,0 9.03161000235999,50.03279999301565,0 9.032170004807355,50.0358999942769,0 9.032050012345229,50.03739999588439,0 9.031490007969513,50.03882000226924,0 9.030510014244126,50.04000000228209,0 9.029080001550227,50.04103999783368,0 9.029060008563725,50.04106000232493,0 9.028230008798136,50.04156999577097,0 9.026240009262718,50.04279999711334,0 9.024160016072742,50.04365000084064,0 9.023260013005588,50.04386000537015,0 9.019740018159242,50.04436999886058,0 9.017760016210493,50.04465999781608,0 9.013460007365307,50.04553999270155,0 9.011000004708681,50.04575999839583,0 9.00992999888183,50.04561998877342,0 9.008480008624115,50.04557998927629,0 9.005680013424682,50.04550000056366,0 8.986750005661659,50.04149000275402,0 8.978420013141989,50.04530999078934,0 8.976519982950132,50.0514200003693,0 8.982709988738773,50.05690999839843,0 8.986820008613575,50.06226000595279,0 8.987800012679832,50.06321000762544,0 8.989760009887313,50.06513000580236,0 8.990918897321578,50.0669106073983,0 8.9955775301496,50.06892022836311,0 8.998568988963262,50.06893433107653,0 8.999404770882135,50.06967750682338,0 8.99907863971808,50.070980702649,0 8.998540008233778,50.07845000669163,0 8.999480727122569,50.07942879191786,0 8.998936147196799,50.08570047236539,0 8.997979981825159,50.09309999923527,0 9.009470009726822,50.10552999340482,0 9.014060011409995,50.1093099951841,0 9.018390009198136,50.11148999968705,0 9.022280002796611,50.11211998982098,0 9.030180002730933,50.11276999957308,0 9.036709983650752,50.11439000225139,0 9.03690999604585,50.11440999933917,0 9.03949998805237,50.11470999733926,0 9.041409993836245,50.11494000056713,0 9.043569987178085,50.11518999631258,0 9.047210001617215,50.1158499945509,0 9.05294999694393,50.11569999345475,0 9.055779984887241,50.11657998906307,0 9.062110001201511,50.11675000135271,0 9.065399990762362,50.11700000561905,0 9.071007549127517,50.11922371673292,0 9.076630005563471,50.1161700007584,0 9.077190003068765,50.115860002529,0 9.090149996865359,50.11705999751791,0 9.097210008411061,50.12491999822693,0 9.097229998645521,50.12493000896303,0 9.097450000598039,50.12500001156322,0 9.100480005609697,50.12522999907779,0 9.101720017827175,50.12503999964554,0 9.104050013666759,50.12524999543405,0 9.106250000414615,50.1255599977141,0 9.106320013833074,50.12556999995883,0 9.11103000773252,50.12645000491829,0 9.112480002104718,50.12650000158009,0 9.118190018941625,50.12683999405951,0 9.11824001589531,50.12684999758118,0 9.119370021092625,50.12667000066124,0 9.120230000806123,50.12640000226687,0 9.121240007930481,50.12608999931724,0 9.122669997795143,50.1251799912294,0 9.125470008557192,50.12341000006478,0 9.129070017631035,50.12185001116103,0 9.134449996804847,50.11918999923478,0 9.134810008978569,50.11920999602372,0 9.134890001642818,50.11917000907523,0 9.138790008249355,50.11738000700088,0 9.143799995794254,50.11436000115628,0 9.153480013609004,50.1177800012857,0 9.174246170565004,50.11909431140469,0 9.178573419936008,50.12093255348469,0 9.187279993149794,50.12424999394975,0 9.190869996641968,50.12840999555607,0 9.190140006470225,50.12852999126118,0 9.189239992099489,50.12886999244492,0 9.18859001078415,50.13008000182714,0 9.188529991233642,50.13068000290921,0 9.188270001636816,50.13122999393559,0 9.187689999246999,50.13169000225765,0 9.186230008527531,50.13220000137167,0 9.184630011698792,50.13358999951587,0 9.184889997736651,50.13418000049787,0 9.184539995171448,50.13461999983619,0 9.183930004443509,50.13530000248941,0 9.183950002803973,50.135519998149,0 9.183550012978392,50.13613999783406,0 9.183569996231322,50.13690999406499,0 9.18340000738119,50.13743999921365,0 9.183380014260379,50.13787000106181,0 9.190900001716518,50.139159993859,0 9.193700011750751,50.13930999759451,0 9.19464001127551,50.13981000038044,0 9.195470000586393,50.14028998889953,0 9.196120007766066,50.14010998828039,0 9.196500004917223,50.14001998961674,0 9.197040001756861,50.14030999242293,0 9.199190010294648,50.14073999922731,0 9.200440003999781,50.14084998669727,0 9.201030013515277,50.14057999207999,0 9.203099982949214,50.14095000662204,0 9.205299986371029,50.14180000860304,0 9.206359985346644,50.142070008102,0 9.207580000543322,50.14207999782826,0 9.209859987405412,50.14242999853374,0 9.210280003353484,50.1423899976447,0 9.210799991009644,50.14220999766564,0 9.21077998816282,50.1435000057295,0 9.211479992867652,50.14477000460019,0 9.214099996581536,50.14445000468506,0 9.218959999344854,50.14661000455769,0 9.221479995862085,50.14939999389495,0 9.225630001631478,50.14855000094843,0 9.23032000616189,50.14765999014259,0 9.232970002625747,50.14675999789494,0 9.233769992622126,50.14662999691726,0 9.235819988502438,50.14626998818617,0 9.240770008871321,50.14369999990418,0 9.250599997697448,50.14088999946022,0 9.253009998704444,50.13936000061953,0 9.257409988922282,50.13877999779094,0 9.258539987369192,50.13882999185971,0 9.261029985191303,50.13894999352718,0 9.26667000168456,50.13956998800712,0 9.270219998473655,50.14184999133448,0 9.271399995864714,50.14201999982645,0 9.276349996686779,50.14272000476213,0 9.281169993334959,50.14154000700376,0 9.281790004285499,50.14151999702619,0 9.28505000417664,50.14177000501881,0 9.294040000079619,50.13933999639883,0 9.298069993519123,50.13708999386204,0 9.304220003766982,50.13527001045085,0 9.307460002912588,50.13401000172517,0 9.3099899963248,50.13394000197258,0 9.313210010638157,50.13483999891268,0 9.317820007007097,50.13657000315733,0 9.32087000656426,50.13792000208673,0 9.327880001083775,50.14102000396739,0 9.332359997806428,50.13920999562789,0 9.335839993928891,50.13698998995007,0 9.336390008811645,50.13671999110127,0 9.339360000403303,50.13273000018819,0 9.341829993133189,50.1314900069315,0 9.349580011888042,50.13060000490764,0 9.357900000002719,50.1309800011009,0 9.364500003588615,50.1308599976779,0 9.373790012600809,50.13085001035299,0 9.374940014378062,50.13078000272372,0 9.376428136780461,50.13060459037479,0 9.375980001360301,50.12583000875451,0 9.380379996288745,50.12133000326065,0 9.382299998223088,50.11936999839725,0 9.384039990002806,50.11687999723922,0 9.386960003003646,50.1104799943284,0 9.392690004434337,50.10208999192354,0 9.39389999043634,50.09908999048587,0 9.39441999471242,50.09769998717655,0 9.395280005887983,50.09654000569314,0 9.398049991407143,50.09346000849757,0 9.399579989575344,50.09215000204925,0 9.401979985879303,50.08986000850655,0 9.404899991283124,50.08774999576386,0 9.408080014793335,50.08628000072305,0 9.410360008182412,50.08474000191088,0 9.412109999917282,50.08400999347561,0 9.414540018844249,50.08372999722369,0 9.416490008385686,50.08366999838898,0 9.419320007524787,50.08447000100686,0 9.421189997530622,50.08477000057801,0 9.421729983690359,50.0848199989533,0 9.422609992020972,50.0848999888351,0 9.424210000439418,50.08487999332674,0 9.426209991743331,50.08466000872539,0 9.426650001161059,50.08445000438933,0 9.427099982830001,50.08406000313204,0 9.427139990696315,50.08406000087415,0 9.427652721408091,50.08399998652941,0 9.433353179705726,50.08402470953537,0 9.435354143826626,50.08505389047933,0 9.436088619491672,50.08522879361796,0 9.438430526576967,50.08697187563428,0 9.440104382080714,50.08699613917442,0 9.445369991346254,50.08990999762638,0 9.447630008726817,50.08999999740072,0 9.450919994621692,50.09031000114513,0 9.452070007349786,50.0907899928403,0 9.454410007723135,50.09108999360934,0 9.460950000938215,50.09060999515631,0 9.462300008199286,50.0910400032701,0 9.463400013428359,50.09106000139991,0 9.464200003484436,50.09124000726924,0 9.465530012619313,50.09153000694008,0 9.468800008351925,50.09136999634158,0 9.470470017914517,50.09143000256835,0 9.472329999587991,50.09161000390467,0 9.473620019051696,50.09215000133324,0 9.474920003056653,50.09292999912699,0 9.476870017014669,50.09377000009614,0 9.478919993936698,50.09430999575569,0 9.481419984146658,50.0947799948108,0 9.483559984403359,50.09436999910113,0 9.485509981915525,50.09412999558609,0 9.48570999585527,50.09412000396971,0 9.487359987494594,50.09400999892856,0 9.490429987404328,50.09412999491645,0 9.493209983692267,50.09459999267533,0 9.495159986345893,50.09531999217066,0 9.496829992324216,50.09657999894574,0 9.498319988002368,50.09723999301944,0 9.49989998994757,50.09718000287389,0 9.501569988519432,50.09664000069188,0 9.502680008048856,50.09603999797577,0 9.504629999438921,50.09574000956214,0 9.506760006872188,50.09622000084823,0 9.507140003812562,50.09742000406875,0 9.507229996886643,50.09819000714014,0 9.50669001130621,50.09907000222062,0 9.507150006893196,50.09931999902311,0 9.50923999463094,50.09956000551333,0 9.512149998788429,50.09941000120356,0 9.512820008669731,50.0990800014653,0 9.513100009864747,50.09966999606637,0 9.518980005320945,50.10612000219624,0 9.523749987770032,50.10609999798064,0 9.509789996972424,50.14568999412518,0 9.510159999038692,50.17993000361417,0 9.523900010995279,50.20862999333181,0 9.497610010511844,50.23025999464183,0 9.465759992135864,50.23500999995167,0 9.427309998664841,50.28948999496187,0 9.39269000551494,50.33608999941583,0 9.354189991318192,50.3790699957637,0 9.352780014398681,50.43896001016936,0 9.340660001490294,50.4547299998002,0 9.312470000603268,50.45978998838441,0 9.299499989859983,50.45929999898711,0 9.289360011907432,50.45382000673616,0 9.262010012800003,50.40678999774384,0 9.261579990204883,50.37911000208434,0 9.163230003564165,50.3586100105654,0 9.131989998719183,50.34574999621018,0 9.062800000324119,50.32285000000135,0 9.054520002404079,50.31968000467632,0 9.043719996102452,50.32165000058219,0 9.029761680801087,50.32841918451295,0 9.031495109187416,50.31272183455483,0 8.995839452582921,50.30250677011594,0 8.987631336027818,50.30006956026648,0 8.975659492935346,50.29547621167906,0 8.958677331367527,50.28630458701393,0 8.94929415829554,50.28125262914848,0 8.925608601416379,50.27595619488345,0 8.912707196248872,50.26838770369456,0 8.900321281931532,50.26109642163877,0 8.883946027953995,50.2514976812132,0 8.857519269942278,50.24799938088881,0 8.843243933535447,50.24615324039392,0 8.843337919829239,50.24519622029486,0 8.844352709690199,50.23641778130721,0 8.848844132593994,50.23205190395576,0 8.859845616898108,50.22335260208263,0 8.858916319673716,50.22092275483271,0 8.854913957622637,50.21029795607451,0 8.828012506624319,50.20845601508016,0 8.792170003634453,50.19689999140842,0 8.792079997664727,50.19360999114326,0 8.792090007857588,50.19360999589294,0 8.792080005707826,50.1933399969401,0 8.792139995449546,50.18931998969914,0 8.792109992014069,50.18893999697589,0 8.792080000426376,50.18849999434099,0 8.792679986357536,50.18761999891223,0 8.792780002183326,50.18624999797653,0 8.792809992943038,50.1838499994514,0 8.78973001669163,50.17977998885446,0 8.789990009297167,50.17618999887759,0 8.790029994197257,50.17608999350487,0 8.790400013363707,50.1756399975125,0 8.795660002988884,50.17271001146669,0 8.800430009638776,50.17120000991109,0 8.800030003318794,50.17109000869478,0 8.80016999786298,50.17019999937831,0 8.800160007579409,50.16933000575472,0 8.798210009160762,50.16943000004811,0 8.798119992086578,50.16853000305719,0 8.797839987310598,50.16741000349072,0 8.795570001629894,50.16727000126137,0 8.794420002285929,50.16686998641285,0 8.794869986905674,50.16460000764227,0 8.794839990093175,50.16445000317964,0 8.795069987661732,50.1639400006493,0 8.794959989515347,50.16379001174276,0 8.794649984336918,50.1638499933831,0 8.793969990776221,50.1630399881526,0 8.791709999964247,50.16336999710949,0 8.790470002191894,50.16343999740508,0 8.790340002022822,50.16295999319533,0 8.789559999991919,50.16145999765807,0 8.790999987988663,50.16111999166834,0 8.790610009406777,50.15989999880812,0 8.790650015217244,50.1588999906634,0 8.789859999743616,50.15894999130114,0 8.789490009437273,50.1588699891094,0 8.787180014898484,50.1593899986436,0 8.786940002233044,50.15923998964287,0 8.786050003904881,50.15883999909401,0 8.785669999219367,50.15878999189965,0 8.785020015562498,50.15871999044146,0 8.783420004936072,50.15842000281186,0 8.783420004789116,50.15770999268128,0 8.783470016746801,50.15722999454914,0 8.783580009619461,50.15699999220811,0 8.784100012663544,50.15583999017743,0 8.782219996826949,50.15551999603872,0 8.782360012243217,50.15504999142234,0 8.782400002741433,50.15412000308445,0 8.782440000873432,50.1538799934948,0 8.782640002335953,50.15348999380655,0 8.782690004419679,50.15288999409114,0 8.782599997613589,50.15168999527978,0 8.782499994394218,50.15002000083744,0 8.782429997799444,50.14841999909195,0 8.782339993684557,50.14642999456324,0 8.782259999824177,50.14484999042134,0 8.782299991382095,50.14447000212288,0 8.782329990151951,50.14413999428914,0 8.782350006299202,50.14389999847396,0 8.782369988407282,50.14374000265145,0 8.78239000173469,50.14349999358076,0 8.782439996314656,50.14299999406526,0 8.782439988694478,50.1429199972104,0 8.782470000856153,50.14267999368212,0 8.782480003228939,50.14251999070935,0 8.782579988275536,50.14241999306769,0 8.783599991220438,50.14111999489931,0 8.784448782893042,50.1405347806952,0 8.784710985537078,50.14005921419489,0 8.784836043163592,50.13976715250182,0 8.784909988556111,50.13939000291317,0 8.784920000629107,50.13928999326227,0 8.784719982911794,50.13919999095377,0 8.77993000857648,50.13822000388137,0 8.779900001379451,50.13804999861398,0 8.779870002850776,50.13781999822846,0 8.779780007883684,50.13723999143221,0 8.781680019517596,50.13739999790258,0 8.785470012109293,50.13728999853527,0 8.790470012031696,50.13658999710204,0 8.795220001648541,50.13552000122132,0 8.796740008487991,50.13528000323189,0 8.79849000489105,50.13476000552564,0 8.801570014121655,50.13428000627525,0 8.809370015405136,50.13413999475548,0 8.806000008358936,50.12600000470178,0 8.800339551601194,50.11398120331311,0 8.798730684364719,50.11222326889193,0 8.803275711144671,50.10682728967874,0 8.806256200740775,50.10212970751106,0 8.809628959422538,50.09681686079544,0 8.812426567410549,50.0923736430835,0 8.814529068369041,50.08870301933311,0 8.815564740819466,50.08674190292712,0 8.816983190135087,50.08430003950284,0 8.816736771584527,50.08396773922301,0 8.819257293064814,50.08161630263398,0 8.825500005361317,50.07011000106249,0 8.825430011347251,50.06916000981824,0 8.825340007617122,50.06887000547547,0 8.825010007651045,50.06831000400231,0 8.824340007935508,50.06807000324666,0 8.824190003312365,50.0678600107172,0 8.823980000479738,50.06767000416784,0 8.823560009647329,50.06769000265334,0 8.819140000891526,50.06794999086822,0 8.784360013267232,50.06681998757962,0 8.778350008752462,50.05852000117123,0 8.769430002590275,50.05571000525481,0 8.74344999062572,50.04918999904961,0");
    showBorder_17590380(hrCoordReal_17590490, makeNimstrLit("rgba(255, 0, 0, 1)"), true, 10, false);
    showBorderDistrict_17590801(makeNimstrLit("63688 Ober-Seemen,63697 Merkenfritz,63697 Hirzenhain,63683 Li\xC3\x9Fberg,63683 Eckartsborn,63691 Bobenhausen,63683 Wippenbach,63683 Selters (Ortenberg),63683 Bleichenbach,63654 B\xC3\xBCdingen>city,63674 Enzheim,63674 Lindheim,63674 Oberau,63674 H\xC3\xB6chst,61130 Eichen,61130 Nidderau Heldenbergen,61130 Windecken,61137 Sch\xC3\xB6neck,61137 Oberdorfelden,61138 Niederdorfelden>city,63477 Maintal>city,63165 M\xC3\xBChlheim am Main>city,63075 Waldheim,63179 Obertshausen>city,63150 Heusenstamm>city,63128 Dietzenbach,63322 Waldacker,63322 R\xC3\xB6dermark Ober-Roden,63110 Rodgau>city,63533 Mainhausen>city,63538 Gro\xC3\x9Fkrotzenburg>city,63517 Rodenbach>city,63579 Neuses,63579 Horbach,63589 Waldrode,63599 Biebergem\xC3\xBCnd>city,63639 Fl\xC3\xB6rsbachtal>city,63637 Pfaffenhausen>city,63628 Alsberg,63628 Kerbersdorf,63628 Sch\xC3\xB6nhof,63633 Wettges"), makeNimstrLit("rgba(255, 0, 0, 1)"), makeNimstrLit("rgba(255, 0, 0, 0)"));
    showBorderDistrict_17590801(makeNimstrLit("63150 Heusenstamm>city,63110 Rodgau>city,63500 Seligenstadt>city,63533 Mainhausen>city,63128 Dietzenbach>city,63322 R\xC3\xB6dermark>city,63075 Waldheim,63073 Bieber"), makeNimstrLit("rgba(200, 115, 255, 1)"), makeNimstrLit("rgba(200, 115, 255, 0.3)"));

  
}
function HEX3Aanonymous_18525246(e_18525249) {
    map.getViewPort().resize();

  
}
map.addEventListener("tap", loadLinks_16481053, false);
geoArea_17590488();
window.addEventListener("resize", HEX3Aanonymous_18525246, false);
function mustRehash_17550601(t_17550604) {
  var result_17550605 = false;

    if (!((t_17550604.counter < (t_17550604.data).length))) {
    failedAssertImpl_1305480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_17550605 = ((mulInt((t_17550604.data).length, 2) < mulInt(t_17550604.counter, 3)) || (subInt((t_17550604.data).length, t_17550604.counter) < 4));

  return result_17550605;

}
function rawInsert_17576122(t_17576128, data_17576131, data_17576131_Idx, key_17576132, val_17576134, hc_17576135, h_17576136) {
    data_17576131[data_17576131_Idx][chckIndx(h_17576136, 0, (data_17576131[data_17576131_Idx]).length-1)].Field1 = key_17576132;
    data_17576131[data_17576131_Idx][chckIndx(h_17576136, 0, (data_17576131[data_17576131_Idx]).length-1)].Field2 = val_17576134;
    data_17576131[data_17576131_Idx][chckIndx(h_17576136, 0, (data_17576131[data_17576131_Idx]).length-1)].Field0 = hc_17576135;

  
}
function enlarge_17575161(t_17575167) {
    var n_17575175 = [];
    n_17575175 = new Array(chckRange(mulInt((t_17575167.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_17575167.data).length, 2), 0, 2147483647);++i) {n_17575175[i]={Field0: 0, Field1: null, Field2: null};}    var Tmp1 = t_17575167.data; t_17575167.data = n_17575175; n_17575175 = Tmp1;    L2: do {
      var i_17575334 = 0;
      var colontmp__18550554 = 0;
      colontmp__18550554 = (n_17575175).length - 1;
      var res_18550555 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_18550555 <= colontmp__18550554)) break L4;
            i_17575334 = res_18550555;
            var eh_17575490 = n_17575175[chckIndx(i_17575334, 0, (n_17575175).length-1)].Field0;
            if (isFilled_11481218(eh_17575490)) {
            var j_17575497 = (eh_17575490 & (t_17575167.data).length - 1);
            L5: do {
                L6: while (true) {
                if (!isFilled_11481218(t_17575167.data[chckIndx(j_17575497, 0, (t_17575167.data).length-1)].Field0)) break L6;
                  j_17575497 = nextTry_11485014(j_17575497, (t_17575167.data).length - 1);
                }
            } while(false);
            rawInsert_17576122(t_17575167, t_17575167, "data", n_17575175[chckIndx(i_17575334, 0, (n_17575175).length-1)].Field1, n_17575175[chckIndx(i_17575334, 0, (n_17575175).length-1)].Field2, eh_17575490, j_17575497);
            }
            
            res_18550555 = addInt(res_18550555, 1);
          }
      } while(false);
    } while(false);

  
}
function rawGetKnownHC_17576629(t_17576633, key_17576634, hc_17576635) {
  var result_17576636 = 0;

  BeforeRet: do {
    if (((t_17576633.data).length == 0)) {
    result_17576636 = -1;
    break BeforeRet;
    }
    
    var h_17580138 = (hc_17576635 & (t_17576633.data).length - 1);
    L1: do {
        L2: while (true) {
        if (!isFilled_11481218(t_17576633.data[chckIndx(h_17580138, 0, (t_17576633.data).length-1)].Field0)) break L2;
          if (((t_17576633.data[chckIndx(h_17580138, 0, (t_17576633.data).length-1)].Field0 == hc_17576635) && (t_17576633.data[chckIndx(h_17580138, 0, (t_17576633.data).length-1)].Field1 == key_17576634))) {
          result_17576636 = h_17580138;
          break BeforeRet;
          }
          
          h_17580138 = nextTry_11485014(h_17580138, (t_17576633.data).length - 1);
        }
    } while(false);
    result_17576636 = subInt(-1, h_17580138);
  } while (false);

  return result_17576636;

}
function HEX5BHEX5DHEX3D_17520975(t_17520981, key_17520982, val_17520984) {
    if (((t_17520981.data).length == 0)) {
    var correctSizeHEX60gensym251_17530001 = slotsNeeded_11485048(32);
    t_17520981.counter = 0;
    t_17520981.data = new Array(chckRange(correctSizeHEX60gensym251_17530001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym251_17530001, 0, 2147483647);++i) {t_17520981.data[i]={Field0: 0, Field1: null, Field2: null};}    }
    
    var hc_17535601 = [0];
    var index_17535610 = rawGet_16510378(t_17520981, key_17520982, hc_17535601, 0);
    if ((0 <= index_17535610)) {
    t_17520981.data[chckIndx(index_17535610, 0, (t_17520981.data).length-1)].Field2 = val_17520984;
    }
    else {
      if (((t_17520981.data).length == 0)) {
      var correctSizeHEX60gensym254_17545001 = slotsNeeded_11485048(32);
      t_17520981.counter = 0;
      t_17520981.data = new Array(chckRange(correctSizeHEX60gensym254_17545001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym254_17545001, 0, 2147483647);++i) {t_17520981.data[i]={Field0: 0, Field1: null, Field2: null};}      }
      
      if (mustRehash_17550601(t_17520981)) {
      enlarge_17575161(t_17520981);
      index_17535610 = rawGetKnownHC_17576629(t_17520981, key_17520982, hc_17535601[0]);
      }
      
      index_17535610 = subInt(-1, index_17535610);
      rawInsert_17576122(t_17520981, t_17520981, "data", key_17520982, val_17520984, hc_17535601[0], index_17535610);
      t_17520981.counter = addInt(t_17520981.counter, 1);
    }
    

  
}
function displaySector_16970263(sectName_16970265, show_16970266) {
    var Tmp1;
    var Tmp2;
    var Tmp3;
    var Tmp4;
                    var Tmp14;
    var Tmp15;

  BeforeRet: do {
    var sector_17520531 = (Tmp1 = HEX5BHEX5D_16620843(allSectors_16270629[0], sectName_16970265), Tmp1)[0][Tmp1[1]];
    if (!(show_16970266)) {
    mainSectorGroup_17385009[0].removeObject((Tmp2 = HEX5BHEX5D_16510367(sectorGrp_16290629[0], sector_17520531), Tmp2)[0][Tmp2[1]]);
    (Tmp3 = HEX5BHEX5D_16510367(sectorGrp_16290629[0], sector_17520531), Tmp3)[0][Tmp3[1]].removeAll();
    sector_17520531.shownOnMap = false;
    break BeforeRet;
    }
    
    HEX5BHEX5DHEX3D_17520975(sectorGrp_16290629[0], sector_17520531, function(){return new H.map.Group()}());
    (Tmp4 = HEX5BHEX5D_16510367(sectorGrp_16290629[0], sector_17520531), Tmp4)[0][Tmp4[1]].setZIndex(-99);
    sector_17520531.shownOnMap = true;
    L5: do {
      var n_17580847 = [];
      var links_17580848 = [];
      var L_18550548 = len_16825548(sector_17520531.streets);
      if ((0 < sector_17520531.streets.counter)) {
      var h_18550549 = sector_17520531.streets.first;
      L6: do {
          L7: while (true) {
          if (!(0 <= h_18550549)) break L7;
            var nxt_18550551 = sector_17520531.streets.data[chckIndx(h_18550549, 0, (sector_17520531.streets.data).length-1)].Field1;
            if (isFilled_11481218(sector_17520531.streets.data[chckIndx(h_18550549, 0, (sector_17520531.streets.data).length-1)].Field0)) {
            n_17580847 = sector_17520531.streets.data[chckIndx(h_18550549, 0, (sector_17520531.streets.data).length-1)].Field2;
            links_17580848 = sector_17520531.streets.data[chckIndx(h_18550549, 0, (sector_17520531.streets.data).length-1)].Field3;
            L8: do {
              var link_17580856 = null;
              var link_17580856_Idx = 0;
              var i_18550545 = 0;
              var L_18550546 = (links_17580848).length;
              L9: do {
                  L10: while (true) {
                  if (!(i_18550545 < L_18550546)) break L10;
                    link_17580856 = links_17580848; link_17580856_Idx = chckIndx(i_18550545, 0, (links_17580848).length-1);
                    var lnStr_17580857 = function(){return new H.geo.LineString();}();
                    L11: do {
                      var c_17580865 = null;
                      var c_17580865_Idx = 0;
                      var i_18550540 = 0;
                      var L_18550541 = (link_17580856[link_17580856_Idx].geometry).length;
                      L12: do {
                          L13: while (true) {
                          if (!(i_18550540 < L_18550541)) break L13;
                            c_17580865 = link_17580856[link_17580856_Idx].geometry; c_17580865_Idx = chckIndx(i_18550540, 0, (link_17580856[link_17580856_Idx].geometry).length-1);
                            lnStr_17580857.pushLatLngAlt(c_17580865[c_17580865_Idx].lat, c_17580865[c_17580865_Idx].lng, 1.0000000000000000e+00);
                            i_18550540 = addInt(i_18550540, 1);
                            if (!(((link_17580856[link_17580856_Idx].geometry).length == L_18550541))) {
                            failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                            }
                            
                          }
                      } while(false);
                    } while(false);
                    var pOpt_17580868 = {style: {strokeColor: "rgba(255, 0, 0, 0.2)", fillColor: "rgba(255, 0, 0, 0.4)", lineWidth: 10, m_type: NTI11816076, bubbles: false, cancelBubble: false, cancelable: false, composed: false, currentTarget: null, defaultPrevented: false, eventPhase: 0, target: null, type: null, isTrusted: false}, zIndex: -99, m_type: NTI11816081};
                    var pl_17580869 = function(ls, options){return new H.map.Polyline(ls, options)}(lnStr_17580857, pOpt_17580868);
                    (Tmp14 = HEX5BHEX5D_16510367(sectorGrp_16290629[0], sector_17520531), Tmp14)[0][Tmp14[1]].addObject(pl_17580869);
                    i_18550545 = addInt(i_18550545, 1);
                    if (!(((links_17580848).length == L_18550546))) {
                    failedAssertImpl_1305480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while(false);
            } while(false);
            if (!((len_16825548(sector_17520531.streets) == L_18550548))) {
            failedAssertImpl_1305480(makeNimstrLit("tables.nim(1701, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_18550549 = nxt_18550551;
          }
      } while(false);
      }
      
    } while(false);
    mainSectorGroup_17385009[0].addObject((Tmp15 = HEX5BHEX5D_16510367(sectorGrp_16290629[0], sector_17520531), Tmp15)[0][Tmp15[1]]);
  } while (false);

  
}
